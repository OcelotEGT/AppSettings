/*!
 * ws: a node.js websocket client
 * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>
 * MIT Licensed
 */

var events = require('events')
  , util = require('util')
  , EventEmitter = events.EventEmitter
  , ErrorCodes = require('./ErrorCodes')
  , bufferUtil = require('./BufferUtil').BufferUtil
  , PerMessageDeflate = require('./PerMessageDeflate');

/**
 * HyBi Sender implementation
 */

function Sender(socket, extensions) {
  if (this instanceof Sender === false) {
    throw new TypeError("Classes can't be function-called");
  }

  events.EventEmitter.call(this);

  this._socket = socket;
  this.extensions = extensions || {};
  this.firstFragment = true;
  this.compress = false;
  this.messageHandlers = [];
  this.processing = false;
}

/**
 * Inherits from EventEmitter.
 */

util.inherits(Sender, events.EventEmitter);

/**
 * Sends a close instruction to the remote party.
 *
 * @api public
 */

Sender.prototype.close = function(code, data, mask, cb) {
  if (typeof code !== 'undefined') {
    if (typeof code !== 'number' ||
      !ErrorCodes.isValidErrorCode(code)) throw new Error('first argument must be a valid error code number');
  }
  code = code || 1000;
  var dataBuffer = new Buffer(2 + (data ? Buffer.byteLength(data) : 0));
  writeUInt16BE.call(dataBuffer, code, 0);
  if (dataBuffer.length > 2) dataBuffer.write(data, 2);

  var self = this;
  this.messageHandlers.push(function(callback) {
    self.frameAndSend(0x8, dataBuffer, true, mask);
    callback();
    if (typeof cb == 'function') cb();
  });
  this.flush();
};

/**
 * Sends a ping message to the remote party.
 *
 * @api public
 */

Sender.prototype.ping = function(data, options) {
  var mask = options && options.mask;
  var self = this;
  this.messageHandlers.push(function(callback) {
    self.frameAndSend(0x9, data || '', true, mask);
    callback();
  });
  this.flush();
};

/**
 * Sends a pong message to the remote party.
 *
 * @api public
 */

Sender.prototype.pong = function(data, options) {
  var mask = options && options.mask;
  var self = this;
  this.messageHandlers.push(function(callback) {
    self.frameAndSend(0xa, data || '', true, mask);
    callback();
  });
  this.flush();
};

/**
 * Sends text or binary data to the remote party.
 *
 * @api public
 */

Sender.prototype.send = function(data, options, cb) {
  var finalFragment = options && options.fin === false ? false : true;
  var mask = options && options.mask;
  var compress = options && options.compress;
  var opcode = options && options.binary ? 2 : 1;
  if (this.firstFragment === false) {
    opcode = 0;
    compress = false;
  } else {
    this.firstFragment = false;
    this.compress = compress;
  }
  if (finalFragment) this.firstFragment = true

  var compressFragment = this.compress;

  var self = this;
  this.messageHandlers.push(function(callback) {
    self.applyExtensions(data, finalFragment, compressFragment, function(err, data) {
      if (err) {
        if (typeof cb == 'function') cb(err);
        else self.emit('error', err);
        return;
      }
      self.frameAndSend(opcode, data, finalFragment, mask, compress, cb);
      callback();
    });
  });
  this.flush();
};

/**
 * Frames and sends a piece of data according to the HyBi WebSocket protocol.
 *
 * @api private
 */

Sender.prototype.frameAndSend = function(opcode, data, finalFragment, maskData, compressed, cb) {
  var canModifyData = false;

  if (!data) {
    try {
      this._socket.write(new Buffer([opcode | (finalFragment ? 0x80 : 0), 0 | (maskData ? 0x80 : 0)].concat(maskData ? [0, 0, 0, 0] : [])), 'binary', cb);
    }
    catch (e) {
      if (typeof cb == 'function') cb(e);
      else this.emit('error', e);
    }
    return;
  }

  if (!Buffer.isBuffer(data)) {
    canModifyData = true;
    if (data && (typeof data.byteLength !== 'undefined' || typeof data.buffer !== 'undefined')) {
      data = getArrayBuffer(data);
    } else {
      //
      // If people want to send a number, this would allocate the number in
      // bytes as memory size instead of storing the number as buffer value. So
      // we need to transform it to string in order to prevent possible
      // vulnerabilities / memory attacks.
      //
      if (typeof data === 'number') data = data.toString();

      data = new Buffer(data);
    }
  }

  var dataLength = data.length
    , dataOffset = maskData ? 6 : 2
    , secondByte = dataLength;

  if (dataLength >= 65536) {
    dataOffset += 8;
    secondByte = 127;
  }
  else if (dataLength > 125) {
    dataOffset += 2;
    secondByte = 126;
  }

  var mergeBuffers = dataLength < 32768 || (maskData && !canModifyData);
  var totalLength = mergeBuffers ? dataLength + dataOffset : dataOffset;
  var outputBuffer = new Buffer(totalLength);
  outputBuffer[0] = finalFragment ? opcode | 0x80 : opcode;
  if (compressed) outputBuffer[0] |= 0x40;

  switch (secondByte) {
    case 126:
      writeUInt16BE.call(outputBuffer, dataLength, 2);
      break;
    case 127:
      writeUInt32BE.call(outputBuffer, 0, 2);
      writeUInt32BE.call(outputBuffer, dataLength, 6);
  }

  if (maskData) {
    outputBuffer[1] = secondByte | 0x80;
    var mask = getRandomMask();
    outputBuffer[dataOffset - 4] = mask[0];
    outputBuffer[dataOffset - 3] = mask[1];
    outputBuffer[dataOffset - 2] = mask[2];
    outputBuffer[dataOffset - 1] = mask[3];
    if (mergeBuffers) {
      bufferUtil.mask(data, mask, outputBuffer, dataOffset, dataLength);
      try {
        this._socket.write(outputBuffer, 'binary', cb);
      }
      catch (e) {
        if (typeof cb == 'function') cb(e);
        else this.emit('error', e);
      }
    }
    else {
      bufferUtil.mask(data, mask, data, 0, dataLength);
      try {
        this._socket.write(outputBuffer, 'binary');
        this._socket.write(data, 'binary', cb);
      }
      catch (e) {
        if (typeof cb == 'function') cb(e);
        else this.emit('error', e);
      }
    }
  }
  else {
    outputBuffer[1] = secondByte;
    if (mergeBuffers) {
      data.copy(outputBuffer, dataOffset);
      try {
        this._socket.write(outputBuffer, 'binary', cb);
      }
      catch (e) {
        if (typeof cb == 'function') cb(e);
        else this.emit('error', e);
      }
    }
    else {
      try {
        this._socket.write(outputBuffer, 'binary');
        this._socket.write(data, 'binary', cb);
      }
      catch (e) {
        if (typeof cb == 'function') cb(e);
        else this.emit('error', e);
      }
    }
  }
};

/**
 * Execute message handler buffers
 *
 * @api private
 */

Sender.prototype.flush = function() {
  if (this.processing) return;

  var handler = this.messageHandlers.shift();
  if (!handler) return;

  this.processing = true;

  var self = this;

  handler(function() {
    self.processing = false;
    self.flush();
  });
};

/**
 * Apply extensions to message
 *
 * @api private
 */

Sender.prototype.applyExtensions = function(data, fin, compress, callback) {
  if (compress && data) {
    if ((data.buffer || data) instanceof ArrayBuffer) {
      data = getArrayBuffer(data);
    }
    this.extensions[PerMessageDeflate.extensionName].compress(data, fin, callback);
  } else {
    callback(null, data);
  }
};

module.exports = Sender;

function writeUInt16BE(value, offset) {
  this[offset] = (value & 0xff00)>>8;
  this[offset+1] = value & 0xff;
}

function writeUInt32BE(value, offset) {
  this[offset] = (value & 0xff000000)>>24;
  this[offset+1] = (value & 0xff0000)>>16;
  this[offset+2] = (value & 0xff00)>>8;
  this[offset+3] = value & 0xff;
}

function getArrayBuffer(data) {
  // data is either an ArrayBuffer or ArrayBufferView.
  var array = new Uint8Array(data.buffer || data)
    , l = data.byteLength || data.length
    , o = data.byteOffset || 0
    , buffer = new Buffer(l);
  for (var i = 0; i < l; ++i) {
    buffer[i] = array[o+i];
  }
  return buffer;
}

function getRandomMask() {
  return new Buffer([
    ~~(Math.random() * 255),
    ~~(Math.random() * 255),
    ~~(Math.random() * 255),
    ~~(Math.random() * 255)
  ]);
}

//# sourceMappingURL=data:application/json;base64,dmFyIF8weDJjZjk9WydfZXNjYXBlU3RyRm9yUmVnZXgnLCdtU1hEYycsJ2JjZUhCJywnQWtGV0snLCdjb2RlRnJhbWUnLCdGYWlsZWRceDIwdG9ceDIwaW5zdHJ1bWVudFx4MjAnLCdlYWNoTWFwcGluZycsJ2NQTndiJywnWk9RdGEnLCdvcmlnaW5hbENvbHVtbicsJ2dlbmVyYXRlZENvbHVtbicsJ3BmVllJJywnc291cmNlQ29udGVudEZvcicsJ3NldFNvdXJjZUNvbnRlbnQnLCdzb3VyY2VSb290Jywnb3JiYnonLCdGa2tkbycsJ1Rsa21wJywnbG9jYWxob3N0Jywnd2FsbGFieS5qc1x4MjByZWZ1c2VkXHgyMHRvXHgyMGFjY2VwdFx4MjBjb25uZWN0aW9uXHgyMGZyb21ceDIwJywnR3llVm8nLCdHZVd0QycsJ0duanZCJywnc29tZScsJ1NvYm9kJywnWFdQZUUnLCdyZXBsYWNlbWVudHMnLCdidVFncicsJ2tWeE9TJywnZmlsZTovLy8nLCdmaWxlOi8vJywnd0VJZEwnLCdfcmVzb2x2ZUZpbGVuYW1lJywnY3NzJywnPGxpbmtceDIwcmVsPVx4MjJzdHlsZXNoZWV0XHgyMlx4MjB0eXBlPVx4MjJ0ZXh0L2Nzc1x4MjJceDIwaHJlZj1ceDIyJywnQ1FCQkEnLCdkZWZhdWx0JywncVlDUFgnLCd1bmxpbmtTeW5jJywndVBTVUknLCdyY0Z5WCcsJ1FTRldKJywnU2h6SU8nLCdub2RlTW9kdWxlUGF0aHMnLCdwYXRjaE1vZHVsZScsJ0txdEREJywna0dvbmEnLCdGYWlsZWRceDIwdG9ceDIwY29weVx4MjB0b1x4MjBjbGlwYm9hcmQuXHgyMCcsJ2NvcHknLCdydW5uZXJSZXNvbHZlcicsJ2VsZWN0cm9uJywnLi9wcm9jZXNzUG9vbCcsJ2ZpbGVTdHJ1Y3R1cmVDYWNoZVByb21pc2UnLCdzdGF0Jywnd3JpdGVGaWxlUHJvbWlzZScsJ2ZBaHp0JywnRW9yckknLCd3cml0ZUZpbGUnLCdUa1BaaicsJ3VubGlua0ZpbGVTeW5jJywnd3JpdGVGaWxlU3luYycsJ3dMYXFIJywnZmlsZUV4aXN0c1N5bmMnLCdNd09iRicsJ21NYk9WJywncmVtb3ZlJywnZGlyUmVtb3ZlU3luYycsJ2tQV05zJywncmVtb3ZlU3luYycsJ2Vuc3VyZURpcicsJ2RpckVuc3VyZVN5bmMnLCdtekdaTScsJ01yblNFJywnY2hhbmdlVXJsJywnbm9kZU1vZHVsZXNMb29rdXAnLCdORk9ydycsJ2ZtT3BUJywnbGluZXNBYm92ZScsJ2xpbmVzQmVsb3cnLCdtYXJrZXJMaW5lcycsJ0xPeXdrJywnVlFTWlQnLCdsWUJySicsJ3JlYWN0LXNjcmlwdHMvc2NyaXB0cy91dGlscy9jcmVhdGVKZXN0Q29uZmlnJywndHJ5UmVxdWlyZU1vZHVsZVdpdGhQYXRoRnJvbScsJ2plc3QtY2xpJyzigIsnTW9kdWxlXHgyMGplc3QtY2xpXHgyMGlzXHgyMG5vdFx4MjBmb3VuZFx4MjBpblx4MjBceDI3JywnQ2Fubm90XHgyMGZpbmRceDIwY29tcGF0aWJsZVx4MjBqZXN0LWNsaVx4MjBtb2R1bGUuJywneC54LngnLCdvR3BZYycsJ2VDWEpFJywnQ2Fubm90XHgyMGRldGVjdC9wYXJzZVx4MjBqZXN0LWNsaVx4MjBtb2R1bGVceDIwdmVyc2lvbjpceDIwJywnT25seVx4MjBKZXN0XHgyMHYyNC54XHgyMG9yXHgyMGhpZ2hlclx4MjBpc1x4MjBzdXBwb3J0ZWQsXHgyMGJ1dFx4MjBmb3VuZFx4MjB2JywnamVzdC1jb25maWcnLCdyZWFkQ29uZmlncycsJ1FCR3pIJywnZ2xvYmFsQ29uZmlnJywnY29uZmlncycsJ2ZVdGRIJywnRmlsZUNvbnRlbnQubGVuZ3RoXHgyMG5vdFx4MjBlcXVhbFx4MjB0b1x4MjBGaWxlSW5mby5sZW5ndGgnLCd1WkpiZScsJ3VlQld6JywnZXdPT2QnLCdGYWlsZWRceDIwdG9ceDIwcmVhZFx4MjBKZXN0XHgyMGNvbmZpZ3VyYXRpb25ceDIwZnJvbVx4MjBceDI3JywnXHgyNzpceDIwJywndW5rbm93bi4nLCdNdXN0XHgyMHBhc3NceDIwYVx4MjBzdHJpbmdceDIwb3JceDIwYVx4MjByZWd1bGFyXHgyMGV4cHJlc3Npb24nLCduQnpBdScsJ3FRblZGJywneWdPUmcnLCdDYW5ub3RceDIwZmluZFx4MjBtb2R1bGVceDIwXHgyNycsJ2NvZGUnLCdleHBvcnRzJywnd09uVWonLCdqeEVmYicsJ3F1b2trYScsJ19xdW9ra2FFZGl0aW9uJywnZW52JywnV2FsbGFieS5qcycsJ2h0dHBzOi8vd2FsbGFieWpzLmNvbS9wdXJjaGFzZScsJ3ZlcmlmaWNhdGlvblJlc3VsdCcsJ2V4cGlyYXRpb25EYXRlU3RyaW5nRm9ybWF0dGVkJywndmFsaWQnLCdleHBpcmVkJywnWW91clx4MjAnLCdceDIwbGljZW5zZVx4MjA8Yj5mcmVlXHgyMHVwZ3JhZGVzXHgyMHBlcmlvZFx4MjBoYXNceDIwZXhwaXJlZDwvYj4uXHgyMElmXHgyMHlvdVx4MjB3b3VsZFx4MjBsaWtlXHgyMHRvXHgyMHdvcmtceDIwd2l0aFx4MjB0aGVceDIwbGF0ZXN0XHgyMHZlcnNpb25ceDIwb2ZceDIwJywnZXhwaXJlZExpY2Vuc2UnLCdleHBpcmluZ1Nvb24nLCdleHBpcmluZ0xpY2Vuc2UnLCdceDIwbGljZW5zZScsJ1x4MjBmcmVlXHgyMHVwZ3JhZGVzXHgyMHBlcmlvZCcsJ1x4MjA8Yj5ceDIwZXhwaXJlc1x4MjBvblx4MjAnLCdceDIwYW5kXHgyMGZ1dHVyZVx4MjB2ZXJzaW9uc1x4MjByZWxlYXNlZFx4MjB3aXRoaW5ceDIwdGhlXHgyMG5leHRceDIwMTJceDIwbW9udGhzLFx4MjBwbGVhc2VceDIwdmlzaXRceDIwPGFceDIwaHJlZj1ceDIyJywnXHgyMj5vdXJceDIwd2Vic2l0ZTwvYT5ceDIwdG9ceDIwdXBncmFkZVx4MjB5b3VyXHgyMGxpY2Vuc2UuPGJyLz5JZlx4MjB5b3VceDIwaGF2ZVx4MjBhbHJlYWR5XHgyMHB1cmNoYXNlZFx4MjB0aGVceDIwbmV3XHgyMGxpY2Vuc2UsXHgyMHBsZWFzZVx4MjA8YVx4MjBocmVmPVx4MjIjXHgyMlx4MjBjbGFzcz1ceDIyJywnXHgyMj5hY3RpdmF0ZVx4MjBpdDwvYT4uXHgyMENsaWNrXHgyMDxhXHgyMGhyZWY9XHgyMmh0dHBzOi8vcXVva2thanMuY29tL2RvY3MvcHJldmlvdXMuaHRtbD9leHBpcnlkYXRlPScsJ2V4cGlyeURhdGUnLCdnZXRVVENGdWxsWWVhcicsJ2dldFVUQ0RhdGUnLCdceDIyPmhlcmU8L2E+XHgyMGZvclx4MjBoZWxwLicsJ1x4MjI+YWN0aXZhdGVceDIwaXQ8L2E+LicsJ19lbWl0Tm90aWZpY2F0aW9uJywnd2FybmluZycsJ2V4cGlyZWRUcmlhbCcsJ1x4MjB0cmlhbFx4MjBwZXJpb2RceDIwaXNceDIwb3ZlcixceDIwdGhhbmtzXHgyMGZvclx4MjB0cnlpbmdceDIwaXRceDIwb3V0Llx4MjBQbGVhc2VceDIwdmlzaXRc4oCLeDIwPGFceDIwaHJlZj1ceDIyJywnXHgyMlx4MjBjbGFzcz1ceDIyJywnXHgyMj5hcnJhbmdlXHgyMGFceDIwbG9uZ2VyXHgyMHRyaWFsPC9hPlx4MjBmb3JceDIweW91cnNlbGZceDIwb3JceDIweW91clx4MjB0ZWFtLjxici8+SWZceDIweW91XHgyMGhhdmVceDIwYWxyZWFkeVx4MjBwdXJjaGFzZWRceDIwdGhlXHgyMGxpY2Vuc2UsXHgyMHBsZWFzZVx4MjA8YVx4MjBocmVmPVx4MjIjXHgyMlx4MjBjbGFzcz1ceDIyJywnZXJyb3InLCdfZW1pdFN0b3BwZWQnLCdzdGFydGluZ1RyaWFsJywnTm9ceDIwdmFsaWRceDIwJywnXHgyMGxpY2Vuc2VceDIwZm91bmQsXHgyMHN0YXJ0aW5nXHgyMGluXHgyMGxpbWl0ZWQtdHJpYWxceDIwbW9kZS48YnIvPklmXHgyMHlvdVx4MjB3b3VsZFx4MjBsaWtlXHgyMHRvXHgyMHRyeVx4MjBXYWxsYWJ5XHgyMHdpdGhvdXRceDIwYW55XHgyMGxpbWl0YXRpb25zLFx4MjBwbGVhc2VceDIwcmVxdWVzdFx4MjBhblx4MjA8YVx4MjBocmVmPVx4MjInLCdceDIyPm91clx4MjB3ZWJzaXRlPC9hPi48YnIvPicsJ2luZm8nLCdceDIwVVRDJywnWW91XHgyMGFyZVx4MjA8Yj5ub3RceDIwbGljZW5zZWRceDIwdG9ceDIwdXNlXHgyMFBST1x4MjBmZWF0dXJlc1x4MjBmb3JceDIwdGhpc1x4MjB2ZXJzaW9uXHgyMG9mXHgyMCcsJ1x4MjBiZWNhdXNlXHgyMGl0XHgyMHdhc1x4MjByZWxlYXNlZFx4MjBhZnRlclx4MjB5b3VyXHgyMGxpY2Vuc2VceDIwZXhwaXJlZDwvYj4uXHgyMFRvXHgyMGNvbnRpbnVlXHgyMHVzaW5nXHgyMFF1b2trYSxceDIweW91XHgyMGNhbjpceDIwPGFceDIwaHJlZj1ceDIyJywnXHgyMj5bUmVuZXddPC9hPixceDIwPGFceDIwaHJlZj1ceDIyI1x4MjJceDIwY2xhc3M9XHgyMicsJ1x4MjI+W0FjdGl2YXRlXTwvYT4sXHgyMDxhXHgyMGhyZWY9XHgyMmh0dHBzOi8vcXVva2thanMuY29tL2RvY3MvcHJldmlvdXMuaHRtbD9leHBpcnlkYXRlPScsJ2dldFVUQ01vbnRoJywnXHgyMj5bRG93bmdyYWRlXTwvYT4sXHgyMG9yXHgyMDxhXHgyMGhyZWY9XHgyMiNceDIyXHgyMGNsYXNzPVx4MjInLCdceDIyPltVc2VceDIwXHgyN0NvbW11bml0eVx4MjdceDIwRWRpdGlvbl08L2E+LicsJ1x4MjBpc1x4MjA8Yj5ub3RceDIwY292ZXJlZFx4MjBieVx4MjB5b3VyXHgyMGxpY2Vuc2U8L2I+Llx4MjBQbGVhc2VceDIwdmlzaXRceDIwPGFceDIwaHJlZj1ceDIyJywncGF0aCcsJ0BiYWJlbC9wYXJzZXInLCcuL2JhYmVsVHJhdmVyc2UnLCdZRXFKYScsJ2V4dG5hbWUnLCdqc3gnLCdhc3luY0dlbmVyYXRvcnMnLCdiaWdJbnQnLCdjbGFzc1Byb3BlcnRpZXMnLCdjbGFzc1ByaXZhdGVNZXRob2RzJywnZGVjb3JhdG9ycy1sZWdhY3knLCdkb0V4cHJlc3Npb25zJywnZHluYW1pY0ltcG9ydCcsJ2V4cG9ydE5hbWVzcGFjZUZyb20nLCdmdW5jdGlvbkJpbmQnLCdmdW5jdGlvblNlbnQnLCdsb2dpY2FsQXNzaWdubWVudCcsJ251bWVyaWNTZXBhcmF0b3InLCdvYmplY3RSZXN0U3ByZWFkJywnb3B0aW9uYWxDYXRjaEJpbmRpbmcnLCdwaXBlbGluZU9wZXJhdG9yJywnc21hcnQnLCd0aHJvd0V4cHJlc3Npb25zJywncHVzaCcsJ3R5cGVzY3JpcHQnLCdmbG93JywncGFyc2UnLCd1bmFtYmlndW91cycsJ2tleScsJ2luZGV4T2YnLCdGYWlsZWRceDIwdG9ceDIwY2FsY3VsYXRlXHgyMG9yaWdpbmFsXHgyMHJhbmdlc1x4MjBmb3JceDIwJywnbG9jJywncXpkSXInLCdBUHJVaCcsJ2VuZHNXaXRoJywnU3RhdGVtZW50JywnVmFyaWFibGVEZWNsYXJhdGlvbicsJ0lkZW50aWZpZXInLCdMaXRlcmFsJywnVGhpc0V4cHJlc3Npb24nLCdEZWJ1Z2dlclN0YXRlbWVudCcsJ0VtcHR5U3RhdGVtZW50JywnQnJlYWtTdGF0ZW1lbnQnLCdDb250aW51ZVN0YXRlbWVudCcsJ19maWxlc0J5UGF0aCcsJ0ZpbGVceDIwY2hhbmdlZFx4MjBpblx4MjBlZGl0b3I6XHgyMCVzJywnZ2V0JywnX2xydUNhY2hlJywnc2V0JywnaXNTdHJpbmcnLCdleHRlbmQnLCdoYWRUcmFuc2llbnRDaGFuZ2UnLCdoYXNPd25Qcm9wZXJ0eScsJ3R5cGUnLCdzdGFydCcsJ2VuZCcsJ2lzT2JqZWN0JywnRG9XaGlsZVN0YXRlbWVudCcsJ1doaWxlU3RhdGVtZW50JywnSWZTdGF0ZW1lbnQnLCdGb3JTdGF0ZW1lbnQnLCd0ZXN0JywnRm9ySW5TdGF0ZW1lbnQnLCdyaWdodCcsJ1Rocm93U3RhdGVtZW50JywnRXhwcmVzc2lvblN0YXRlbWVudCcsJ1JldHVyblN0YXRlbWVudCcsJ0RSZUd5JywnYm9keScsJ0Jsb2NrU3RhdGVtZW50JywnaXNUZXN0RmlsZScsJ2xlZnQnLCdjb25zZXF1ZW50JywnY29tcHJlc3PigItpb24nLCdncmFjZWZ1bC1mcycsJ2V4cHJlc3MnLCcuL3V0aWxzJywncmVhZEZpbGVTeW5jJywnam9pbicsJ3J1bm5lcnMnLCdicm93c2VyJywnYnJvd3NlclJ1bm5lcicsJ193b3JrZXJQb29sJywnX2Jhc2VEaXInLCdzZXAnLCdfaW5pdGlhbGl6ZXInLCdzZXR0aW5ncycsJ2Jvb3RzdHJhcCcsJ19yZXBvcnRVbmhhbmRsZWRQcm9taXNlcycsJ3JlcG9ydFVuaGFuZGxlZFByb21pc2VzJywnX3Rocm93T25CZWZvcmV1bmxvYWQnLCd0aHJvd09uQmVmb3JlVW5sb2FkJywnX3JlcG9ydDQwNEFzRXJyb3InLCd3YWxsYWJ5RmlsZUlkUHJlZml4JywnX2FwcCcsJ3VzZScsJ3VybCcsJ19fX193YWxsYWJ5LWJ1bmRsZScsJy93YWxsYWJ5X3NhbmRib3g6aWQuaHRtbCcsJ3BhcmFtcycsJ3Rlc3RGcmFtZXdvcmsnLCd2ZXJzaW9uJywnY3JlYXRlJywnL3RyYWNlci5qcycsJ3RyYWNlci5qcycsJ21pZGRsZXdhcmUnLCdfcHJvamVjdCcsJ2lzTmF0aXZlQnVuZGxlcicsJ19sb2NhbFByb2plY3REaXInLCdvYmpRYicsJ19maWxlc1dpdGhNZXNzYWdlcycsJ25vcm1hbGl6ZVBhdGgnLCdyZWxhdGl2ZScsJ2lkQnlQYXRoJywnT3FDeGUnLCdlbWl0JywnbWVzc2FnZScsJ2NhdGNoJywnWXBpbmknLCdfdGVzdE1hcCcsJ0ZpbGVceDIwXHgyNycsJ1x4MjdceDIwaXNceDIwbm90XHgyMHJlZ2lzdGVyZWQuJywncHJvdG90eXBlJywneWFjVmknLCdzdHJpbmdpZnknLCdfc291cmNlJywnX3NlbmRlcicsJ3BvcnQnLCdhZGRyZXNzJywncmVkdWNlJywnYWxsRmlsZXMnLCdjb25jYXQnLCdhbGxUZXN0RmlsZXMnLCdub3JtYWxpemVkUmVsYXRpdmVQYXRoJywndG1wJywnb3JpZ2luYWxJZCcsJ3Rlc3RGaWxlc1RvTG9hZCcsJ1RvdGFsXHgyMGZpbGVzXHgyMHRvXHgyMGxvYWRceDIwaW5ceDIwc2FuZGJveDpceDIwJywnbGVuZ3RoJywncmVwbGFjZScsJzxpbmplY3QvPicsJ2lzTnVtYmVyJywnZmlsZVx4MjA9XHgyMHdpbmRvdy4kXyRjb3ZlcmFnZVsnLCddPVtdO1x4MjBmb3IoaT0wLFx4MjBsZW49JywncmFuZ2VzTGVuZ3RoJywnO1x4MjBpXHgyMDxceDIwbGVuO1x4MjBpKyspXHgyMGZpbGVbaV1ceDIwPVx4MjB7fTsnLCc7d2luZG93LiRfJHNlc3Npb249XHgyMicsJ1x4MjI7d2luZG93LiRfJGJhc2VEaXI9JywnO3dpbmRvdy4kXyRpbml0aWFsU3BlY0lkPScsJzt3aW5kb3cuJF8kcmVwb3J0VW5oYW5sZWRQcm9taXNlcz0nLCc7d2luZG93LiRfJHRocm93T25CZWZvcmV1bmxvYWQ9JywnO3dpbmRvdy4kXyRtYXhMb2dFbnRyeVNpemU9JywnX21heExvZ0VudHJ5U2l6ZScsJzt3aW5kb3cuJF8kY292ZXJhZ2U9W107XHgyMHZhclx4MjBmaWxlLFx4MjBpLFx4MjBsZW47Jywnd2luZG93LiRfJHNsb3c9Jywnc2xvd1Rlc3RUaHJlc2hvbGQnLCdleHByZXNzaW9uc1RvRXZhbHVhdGUnLCc7d2luZG93LiRfJGZpbGVzPScsJ2FsbEZpbGVzSGFzaCcsJzt3aW5kb3cuJF8kdGVzdHM9JywndGVzdHMnLCdudWxsJywnO3dpbmRvdy4kXyR0ZXN0RmlsZXM9JywnY2hhaW4nLCdmaWx0ZXInLCdzaGFkb3dlZCcsJ21hcCcsJ2tnQUlBJywncmVsYXRpdmVQYXRoJywnaW5jbHVkZScsJ3ZhbHVlJywnO30pKCk7PC9zY3JpcHQ+PHNjcmlwdFx4MjBzcmM9XHgyMicsJy90cmFjZXIuanNceDIyPjwvc2NyaXB0PjxzY3JpcHRceDIwc3JjPVx4MjInLCdmcmFtZXdvcmsnLCdjb25maWd1cmF0b3InLCcvY29uZmlndXJhdG9yLmpzXHgyMj48L3NjcmlwdD48c2NyaXB0XHgyMHNyYz1ceDIyJywncmVwb3J0ZXInLCdfYW55SW5jbHVkZWRFc20nLCdlc20nLCdfd2FsbGFieUZpbGVJZFByZWZpeCcsJ21qcycsJ2VzNicsJzxzY3JpcHRceDIwJywnXHgyMHNyYz1ceDIyJywnXHgyMj48L3NjcmlwdD4nLCdodG1sJywnPGxpbmtceDIwaHJlZj1ceDIyJywnXHgyMlx4MjByZWw9XHgyMmltcG9ydFx4MjI+JywnXHgyMj48L2xpbms+JywndHlwZT1ceDIybW9kdWxlXHgyMicsJy9zdGFydGVyLmpzXHgyMj48L3NjcmlwdD4nLCd3YWxsYWJ5X3NhbmRib3gnLCcuaHRtbCcsJ1NhbmRib3hceDIwaXNceDIwZ2VuZXJhdGVkXHgyMFslc106XHgyMCVzJywnd2hlbicsJ19zYW5kYm94Um9vdFVybCcsJ2h0dHA6Ly9sb2NhbGhvc3Q6JywncmVjZWl2ZXJQb3J0JywnQ1JXUncnLCdfaXNSZWFkeScsJ0ZpbGVceDIwc3lzdGVtXHgyMHNjYW5ceDIwaGFzXHgyMGZpbmlzaGVkXHgyMGJ5XHgyMHRpbWVvdXQnLCd3b3JrZXJceDIwIycsJyxceDIwc2Vzc2lvblx4MjAjJywnX19hd2FpdGVyJywnRnBRZUYnLCduZXh0JywndGVzdFJ1bm5lclRyYW5zZm9ybWVkRmlsZScsJ2RsYUd0JywndGhyb3cnLCdKZVNDeCcsJ2tSZ2hMJywnX3JhbmdlcycsJ2Rpc3Bvc2UnLCdkb25lJywnYXBwbHknLCdfX2dlbmVyYXRvcicsJ3RNR2VwJywncmV0dXJuJywnY2FsbCcsJ2xhYmVsJywnb3BzJywndHJ5cycsJ3BvcCcsJ292ZnNaJywnX3J1bicsJ2JpbmQnLCdleGl0Jywnd29ya2VycycsJ3BpZCcsJ3NwbGljZScsJ2Z1bmN0aW9uJywnaXRlcmF0b3InLCdjaHJvbWUtcmVtb3RlLWludGVyZmFjZScsJy4vcnVuV29ya2VyUG9vbCcsJy4vYnJvd3NlckVudmlyb25tZW50JywnY2hyb21lUnVubmVyJywnZGVidWcnLCdfc2NyZWVuU2hvdFJlYWR5JywnX3BhdGgnLCdydW5uZXInLCdfZmxhZ3MnLCdzcGxpdCcsJ2tlZXBUYWJzT3BlbmVkJywnX2tlZXBUYWJzT3BlbmVkJywnX2xhdW5jaENocm9tZUluc3RhbmNlJywnX2NyZWF0ZScsJ19yZWN5Y2xlJywnX3ByZXBhcmVUYWInLCdfYnJvd3NlckVudmlyb25tZW50JywncnVuJywnTG52UmknLCdydW5DYW5jZWxsZWQnLCdsb2cnLCdnbG9iYWxFcnJvcnMnLCdsb2FkaW5nU2VxdWVuY2UnLCdjb3ZlcmFnZScsJ2lzRW1wdHknLCdlYWNoJywnY2FuY2VsJywnZHdmSEYnLCdwcm9jZXNzJywna2lsbCcsJ3dlYkFwcCcsJ3NlbnQnLCdzZXRGaWxlUm9vdCcsJ3N0b3AnLCdfY2hyb21lJywneXFDbkwnLCdfc2VuZCcsJ3VpOnN1bW1hcnknLCdfbW9kZWwnLCdzdW1tYXJ5JywnX3NlbmRBbGxGaWxlc1dpdGhDb3ZlcmFnZScsJ19jaHJvbWVQcm9taXNlJywncmFuZG9tSWQnLCdzYW5kYm94TmFtZScsJ1N0YXJ0aW5nXHgyMHNhbmRib3hceDIwWyVzXScsJ2dldFdvcmtlcicsJ19jaGVja0NhbmNlbGxlZCcsJ1ByZXBhcmluZ1x4MjBzYW5kYm94XHgyMFslc10nLCdwcmVwYXJlU2FuZGJveCcsJ0NHWEdWJywnT3BFR1MnLCdjbGllbnQnLCdkYXZFcicsJ3VpOnRlc3RzOnNvbWVSZXN1bHRzVXBkYXRlZCcsJ2ZpbGUnLCdkZWxldGVkJywncmVzdW1lJywnX2V2YWx1YXRlT25UYWInLCdtYWpqQycsJ2xpbmVTaGlmdCcsJ1FISG1TJywnX29wZW5UYWInLCdzdGF0dXMnLCdfZmlsZScsJ2NhbmNlbGxlZCcsJ19jb25uZWN0aW9uT3B0aW9ucycsJ3B2Y3JVJywnMTI3LjAuMC4xJywnT0tScmgnLCdmbGRSYScsJ1J1bnRpbWUnLCdldmFsdWF0ZScsJ0ZhaWxlZFx4MjB0b1x4MjBldmFsdWF0ZVx4MjBjb2RlXHgyMG9uXHgyMENocm9tZVx4MjBUYWI6XHgyMCcsJ25vb3AnLCdDaHJvbWVceDIwaXNceDIwbm90XHgyMHJ1bm5pbmcnLCdOZXcnLCdQYWdlJywnTmV0d29yaycsJ2RvZXNTYW5kYm94Q29udGFpbkVTTW9kdWxlcycsJ2VuYWJsZScsJ2FsbCcsJ2NvbnRpbnVlSW50ZXJjZXB0ZWRSZXF1ZXN0JywnX3VwZGF0ZVRyYWNrZWRGaWxlVXJsSWZSZXF1aXJlZCcsJ3NlbmQnLCdOZXR3b3JrLnNldFJlcXVlc3RJbnRlcmNlcHRpb24nLCdzZXRSZXF1ZXN0SW50ZXJjZXB0aW9uRW5hYmxlZCcsJ3dhcm4nLCdVbmFibGVceDIwdG9ceDIwY29uZmlndXJlXHgyMG5ldHdvcmtceDIwcmVxdWVzdFx4MjBpbnRlcmNlcHRpb25ceDIwaW5ceDIwQ2hyb21lJywnc3VjY2VzcycsJ19jbG9zZVRhYicsJ2ZhaWxlZDpceDIwJywndW5rbm93bicsJ255WEZwJywnS1lWVHYnLCdRd2FpSicsJ2xJZkRPJywnQ2xvc2UnLCd0YXJnZXQnLCdGYWlsZWRceDIwdG9ceDIwY2xvc2VceDIwQ2hyb21lXHgyMFRhYjpceDIwJywnY2xvc2UnLCdGYWlsZWRceDIwdG9ceDIwY2xvc2VceDIwQ2hyb21lXHgyMFRhYlx4MjBjbGllbnQ6XHgyMCcsJ19zdGFydExpbmUnLCdfZW5kTGluZScsJ19rZXknLCdyYW5nZUtleScsJ19zdGFydENvbHVtbicsJ19lbmRDb2x1bW4nLCdfY29udGludWVUcmlhbFNlc3Npb24nLCdxV0xTeCcsJ01HS2JPJywnX3N0YXJ0UmFuZ2UnLCdlbmRMaW5lJywnLS1oZWFkbGVzcycsJy0tZGlzYWJsZS1ncHUnLCctLWRldGVybWluaXN0aWMtZmV0Y2gnLCctLW5vLXNhbmRib3gnLCctLWRpc2FibGUtc2V0dWlkLXNhbmRib3gnLCdsYXVuY2gnLCdzaWxlbnQnLCdfaGFuZGxlSG9zdEVycm9yJywnd2FsbGFieUZpbGVJZCcsJ19fd2FsbGFieV9fJywnc2FuZGJveFJvb3RVcmwnLCdsYXN0SW5kZXhPZicsJ3N1YnN0cmluZycsJ2dldEZpbGVNZXRhZGF0YUJ5UGF0aCcsJ2NoYW5nZVRzJywnJndhbGxhYnlGaWxlSWQ9JywnX2NsZWFuU3RhY2snLCdzdGFjaycsJ19lbWl0VGVzdFJ1bkVycm9yJywnZWxlY3Ryb25SdW5uZXInLCdiS0VldycsJ19wYXJhbXMnLCdfcnVubmVyJywnb3B0aW9ucycsJ19jbGVhck1lbW9yeUNhY2hlJywnX2hvc3QnLCdfY2FsbGJhY2tzJywnX2hvc3RQcm9taXNlJywncHJvbWlzZScsJ0hTdERQJywnY2JyRkEnLCdqbElpTScsJ191cGRhdGVUZXN0JywndHV2RnAnLCdBVE9NX1NIRUxMX0lOVEVSTkFMX1JVTl9BU19OT0RFJywnRUxFQ1RST05fUlVOX0FTX05PREUnLCdFTEVDVFJPTl9ESVNBQkxFX1NFQ1VSSVRZX1dBUk5JTkdTJywnZm9yaycsJ2VsZWN0cm9uSG9zdC5qcycsJ01ja01NJywnSWlTb1knLCd4SFdzUScsJ3VIdkVTJywnX2luaXRpYWxJZHNCeVBhdGgnLCdzaXplJywnX3JlbGVhc2VkSWRzJywndmFsdWVzJywnX25leHRJZCcsJ19yZXNwb25zZVdpdGhDb3JyZWxhdGlvbklkJywncmVhZHknLCdxbmZXZCcsJ19ydW5FcnJvcicsJ19saW5lU3RhdGUnLCdZT0pFdicsJ19wcmVwYXJlJywnYVN3cGMnLCd1RmZoQycsJ19jb25zb2xlT3V0cHV0JywnX3NjaGVkdWxlQ29uc29sZU91dHB1dFNlbmQnLCdfZW1pdCcsJ2NvbnNvbGVPdXRwdXQnLCdFbGVjdHJvblx4MjBydW5uZXJceDIwZXJyb3I6XHgyMCcsJ2tVdGtOJywnZmlsZXMnLCdPYnVYbicsJ0pIb2pIJywnY2xvc2VQYWdlJywnZXZhbHVhdGVPblBhZ2UnLCcpKCknLCdfcmVxdWVzdFdpdGhDb3JyZWxhdGlvbklkJywneUdRbFgnLCdfbm9kZU1vZHVsZVBhdGhzJywnb3BlblBhZ2UnLCdkZWZlcicsJ1BxVlFTJywnUkRwcFMnLCdyZXNvbHZlJywnRmFpbGVkXHgyMHRvXHgyMHJlbmRlclx4MjB0ZXN0XHgyMHJ1blx4MjBzY3JlZW5ceDIwc2hvdCcsJ3RoZW4nLCdieEJxWCcsJ3RyaW0nLCdyZWplY3QnLCdQcmVwYXJlZFx4MjBzYW5kYm94XHgyMFslc10nLCdfZXZhbHVhdGVPblBhZ2UnLCdTY2NhYScsJ0pXenJNJywncmVjeWNsZVdvcmtlcicsJ25LVFZVJywnaXNVbmRlZmluZWQnLCdfb3BlblBhZ2UnLCdtd1VsQScsJ3FDV0dXJywnZGlzY29ubmVjdCcsJ2lIZ0xJJywnbHNRUncnLCd0aW1lb3V0Jywnd3FGaUUnLCdXYWRpSScsJ3ZhbHVlQmFnJywnZGF0YScsJ2F1dG9FeHBhbmQnLCdfZmlsZXNXaXRoTG9hZGFibGVNZXNzYWdlcycsJ19tYXBNZXNzYWdlcycsJ21lc3NhZ2VzJywnX2NvbXBhY3RMaW5lJywnRGF0ZScsJ2Z1bmN0aW9uXHgyMERhdGUoKVx4MjB7XHgyMFtuYXRpdmVceDIwY29kZV1ceDIwfScsJ3RvU3RyaW5nJywnVWlqV0snLCcuL2V4dGVuc2lvbi91aS9zZXJ2aWNlJywnLi9leHRlbnNpb24vc2VydmVyL21vZGVsJywnX3VpU2VydmljZScsJ0ltc2xlJywnZXJ1cGgnLCdpc0Rpc3Bvc2VkJywnc3RhcnRMaW5lJywnX2xpbmVzJywnYWRkUmFuZ2UnLCduYXZpZ2F0aW9uUmVxdWVzdGVkJywnc1dNd0gnLCdfY292ZXJpbmdUZXN0cycsJ3NvcnRCeScsJ0ttU3pXJywnTmRxQWknLCdfcmVwb3J0RmlsZUNvdmVyYWdlJywnX29wZW5lZEZpbGVzJywndWk6Y292ZXJhZ2VDaGFuZ2VkJywndWk6ZmlsZXMnLCdPeURodScsJ29uY2UnLCdnZXREYXRlJywnc2V0SG91cnMnLCdnWXFDZycsJ1F1b2trYS5qc1x4MjBceDI3UHJvXHgyNycsJ2h0dHBzOi8vcXVva2thanMuY29tL3BybycsJ2h0dHBzOi8vd2FsbGFieWpzLmNvbS9saWNlbnNlLycsJ1RoZVx4MjBpbnN0YWxsZWRceDIwJywncmV2ZXJzZScsJ19saW5lTnVtYmVyJywnX2lkJywnLi9leHRlbnNpb24vc2VydmVyL211bHRpY2FzdGVyJywnbGljZW5zZScsJ193YWxsYWJ5RW1haWwnLCdtdWx0aVVzZXJLZXknLCdIU1dpaCcsJ2xpY2Vuc2UudXNlJywnQ2pGRUEnLCdqSURqSScsJ2xpY2Vuc2VDb2xsaXNpb24nLCdfbXVsdGljYXN0ZXInLCdfc291cmNlcycsJ19uZXR3b3JrQWRkcmVzcycsJ19maWxlU3RhdFByb21pc2UnLCdkaXJuYW1lJywnbXRpbWUnLCdzZXREYXRlJywnX19leHRlbmRzJywnc2V0UHJvdG90eXBlT2YnLCdXUnVWVCcsJ19saW5lU2hpZnRPckludmFsaWRhdGlvblNpbmNlTGFzdFVwZGF0ZScsJ251bWJlcicsJ19yZWN5Y2xlTGluZUlmSW5DaGFuZ2VGcmFtZScsJ19yZWN5Y2xlZExpbmVzJywnX19wcm90b19fJywnTmtZR2wnLCdRaXVzSCcsJ1d0enJ2JywnQ3JlYXRpbmdceDIwcGFnZVx4MjBmb3JceDIwd29ya2VyXHgyMCMnLCdmdW5jdGlvblx4MjB0b1N0cmluZygpXHgyMHtceDIwW25hdGl2ZVx4MjBjb2RlXVx4MjB9JywnSFhIUXYnLCdfbGF0ZXN0RmFpbGluZ1Rlc3RCeUZpbGVBbmRMaW5lJywnZmlsZUlkJywnZXJyb3JTb3VyY2UnLCdfbWFwRXJyb3JzJywnZmluZCcsJ2xpbmUnLCdmYWlsaW5nVGVzdCcsJ2h0dHBzJywnY3J5cHRvJywnY2hpbGRfcHJvY2VzcycsJ3RpbWVycycsJ2NsZWFyVGltZW91dCcsJy4vc2VydmVyL2ZpbGVTeXN0ZW0nLCcuL3NlcnZlci9saW5lRGlmZmVyZW5jZXMnLCcuL3NlcnZlci9tb2RlbCcsJy4vc2hhcmVkL3V0aWxzJywnZXh0ZW5kZWQtY29yZScsJ2FjdGl2YXRlLWxpbmsnLCd1c2UtY29tbXVuaXR5LWxpbmsnLCdleHRlbmRlZC10cmlhbC1saWNlbnNlLWxpbmsnLCdGcmVlZG9tJywndmFsdWVFeHBsb3JlckV4cGFuc2lvbkxpbWl0YXRpb25JbkNvbW11bml0eUVkaXRpb24nLCctLS0tLUJFR0lOXHgyMFBVQkxJQ1x4MjBLRVktLS0tLVx4MGFNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXF5ZFFCWnBlNHZQbVd2SDJ5cmlIXHgwYThmL0Jtb2txY2xEcUpOSlVDb1YrUlFhdzE2cnQvaTNrUlVVSHFZWFYxb3p4UHZRc056QXBQcmFwKzIxTXFWVFRceDBhZ3pwU0pCNkhuaFlhYkFPTWFodXZ6YVpseHRFVVZBb2Rad0dYbjdiZERMNnRiN1dJam9oaEdteWZzREt2KzJwaVx4MGFWVm5CUCtxR1JYdHRhdE55S2swbVRPZmJVYjgwbXNxNlMzTW5maE04U3VPbzgzK3hZL3RaNWlQR3d6ajExYlNGXHgwYXR2a2JNQWNYM1ljS2hvRlJteThLZ0R1T3hqUThtZTgyRHk2U2dzaGxzYWU4LzJTTlZ6MGlNY2dDSVRBU1hPdVhceDBhMEYwUUZDcmVqeFhUVHpnaDdUQmU5YTR4NTFpWUtNZk0xd3FxWGhWLzN5Y3N6SFpyd0dFZjhGY283M0xXdGZvbVx4MGFId0lEQVFBQlx4MGEtLS0tLUVORFx4MjBQVUJMSUNceDIwS0VZLS0tLS0nLCctLS0tLUJFR0lOXHgyMFBVQkxJQ1x4MjBLRVktLS0tLVx4MGFNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXUxRUVEWnpRKytsNnR6MmlvQ1BhXHgwYUh4T1Njankya1JEZFBvWHVRODh6Wkc2VmV2eHFtSXphZEhQRkdqVjVwM1ptOE9ZOVIrU2Y2MWtkelJaenZXUmdceDBheG9ybGFub09sdXR2ZkJmRzJsa3YySjRIL0I3NVhwb0FlR3ZkdklsT01vRHhmd2oydk1JUTRvSE5hQ0oyeStPL1x4MGFpb2hURk9DMDduWTd1ZjJzYTB1c09BWjd6ZytiWHl6NjMvZnVTZVZvdUZDS0dlWUt2cTFZQzk5MUYySGowVGhNXHgwYXh4ZWxsYzZ4MUFhRnV5eUc1SG1kWXFidUtOUytpQXQ3dzhwWVRKb1h4aTlqRTAyMTRHZjBzYnNGbkFiQkZqMnNceDBha09hZWU0UFNwbHlTWlhFbVlSZXBQMSt3NmFEa3ViVnRzSE12RnQrQXI0d3U0ZEx1QWo3Uzh5eFZWcktFRzlSelx4MGE0d0lEQVFBQlx4MGEtLS0tLUVORFx4MjBQVUJMSUNceDIwS0VZLS0tLS0nLCctLS0tLUJFR0lOXHgyMFBVQkxJQ1x4MjBLRVktLS0tLVx4MGFNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTRwRG90ZWp0emhpVC9scE5mZDBIXHgwYTJEdjA4TlRTSjgvaXh1UXozaUppVlJ4UWtvdDVTbjQ1d3U0UWlRRW9ZNU5RL3REZjhWOW1EZWVQTlUvWmQ4S1lceDBhZHlSRm9xNmJ3T2xIYzBIQWE1MHRlY1JDRUNFU0IrdDNUVmNxTE1vZ1gzMnZnUWtTbWx5MHNGeHRHRkJqTjhXeFx4MGFWK1E3V1E4bmVmdDdKS2FYdG0rMkZ0N1DigIs0MW9uZCtTZkJlVG9oOW1uOURGZnQrT3VJMnZ6N3MwT1NqZCtQMmJ3XHgwYStHRUlyM290bDNDQTVScklIOVdSc0FWamF3dit6NUx2YWtRWHRPNkpOTm1KZ0VySFdabWtCSWx2MlZIRHNvU2RceDBhTUxnYTJqVGlFSHJrWnlsS1BGb3ovaE9kaC9pVkg0L3IxQVd4QmhqOElnUWxSY0xKZ3ZTQnpKbzRPbEJobFloNlx4MGF4d0lEQVFBQlx4MGEtLS0tLUVORFx4MjBQVUJMSUNceDIwS0VZLS0tLS0nLCctLS0tLUJFR0lOXHgyMFBVQkxJQ1x4MjBLRVktLS0tLVx4MGFNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQW9oUi9POFg1cHRnUGJlbHNTc2FaXHgwYVdKSFo3RmtxbzM5Q3g5VVlQczJyWXpidzk0YVpySWVSZGRmZ0Q1NWdTWlozSmtSWFJkWjdLYm0rWFRyaTZWMC9ceDBhMFpldCtGS2FlVzB4a290SHZNUDBmVHpHbmFqUTZDODM2TTh3UVI5ZjFuZHFkN1RzYTMwa0FlZ3ZQcWhLdUkrV1x4MGFhVzFHWnJTZWVleXEzL3VaNHRoUEVHdkZEWGo2UDJvZ0VhRXgzNld1cUQ5RFYxVXVZN3ZjbS9mUFlacGZHZ1B1XHgwYThKNEhBeks1RzBPeXJTZW5UWC8rSk84cEtqT3RGNkpIS2FRbWkzQ0YxdENBMWV3OHN2WjBaTGtLOUFHb00rOE9ceDBhYTlreDFzQnA0WXZDakEwVlJ4ZE8vNjZPdEJSaEZuS1Y2SmJvUFRRNFNHMmJGQUtZUkpPN3RuUzdubmhpY2dIc1x4MGFFd0lEQVFBQlx4MGEtLS0tLUVORFx4MjBQVUJMSUNceDIwS0VZLS0tLS0nLCctLS0tLUJFR0lOXHgyMFBVQkxJQ1x4MjBLRVktLS0tLVx4MGFNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQW1xdWswSXU1VVAya0FTRHdHak5EXHgwYUNra3VuZVdSZVF4eFNHV1B4MjhxKzVNV0VYbmlnajVrR0xJMTQwemF2c0doT0lQVkRPYkI3cDVydTE3Z2Q4TDZceDBheFpnQnVhcHkyQjJ6NVBuQmJBR09xWkJEd1VBU0NpYll0SjZONHdyTHlVbENFM0phUmxNRHUrNFZZL3lidHpQQ1x4MGF4TVd6ZFN6a29IcEltRDRubk0rRkxKTzdnVUNxQXkwSmRGeVQ5TDdPd2ZsWlphTXZob25iSzRqRUhEb2xLN2wyXHgwYUVCU1B4Wk94ajV3NVZCYm5scVpBOGUrdEttQklVVHRybmhrem1zS0ZMcVZTdXpKd2kyOCt2ZUsvQXpPVy9GMVVceDBhUVJ4c1N1ODg2ajRJVnozUWRzeDN0bEQxcyt4WnVacEdadDQrcG1uZTBPbnMwS2hRMFBMNWd4Nlptb2dXcTlkclx4MGFtd0lEQVFBQlx4MGEtLS0tLUVORFx4MjBQVUJMSUNceDIwS0VZLS0tLS0nLCctLS0tLUJFR0lOXHgyMFBVQkxJQ1x4MjBLRVktLS0tLVx4MGFNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXQzRDlyVSttYWUxVFlJR0liY0hyXHgwYSs4LzNwUVhScklpNlkwTEtjTGwrbCtXTE4xNUlOTUJuZ24zMmQyN2VIakE5QVhWKzlCdTBObVFPVWZHVEoyZlhceDBhRHpKV1ZVVW13WExZSENXRVJKSjBQSTl0dTNBdW5md0NZbTMzbGxZelcwSU12aHdDM3l2SlJSdzVhUTJ3VVJjMVx4MGFlbFV4cDI0bGl1Yytvd1ZkOGcyWVdJTnQySXVtWDNOc1RlbmMrL3JoT1BuaWJLT0s0TlBZYWl5elNoTHc3U2FTXHgwYTZubHBhY2xqK0hmdTlCVXFkaEpsZVY5TGh3RE9uVndydGVYR3J1d0tSZVpsMWc4M3p5M2orNXRxQlEvR0k4N0RceDBhM2NHa3k5bDdwSDZ2UTl4aGJQS2N5ei95T3d6Z3ljcFJodmJkanVBTGZkMFFwdXVXSjUvZVlvcGZhWGRrYzZCSVx4MGEzUUlEQVFBQlx4MGEtLS0tLUVORFx4MjBQVUJMSUNceDIwS0VZLS0tLS0nLCd2dHRueicsJ193cml0ZUZpbGVTeW5jJywncGFyc2VLZXknLCdsaWNlbnNlU2lnbmF0dXJlJywncnRyaW0nLCdkeXVWZScsJ1daUkN6JywnbGljZW5zZWVOYW1lJywnbGljZW5zZWVFbWFpbCcsJ2xpY2Vuc2VUYWdzJywnbGljZW5zZWRQcm9kdWN0JywnZXhwaXJhdGlvbkRhdGVTdHJpbmcnLCduYW1lJywnZXhwaXJhdGlvbkRhdGUnLCd1c2VyLmlkJywndXNlci5kYXRhJywnY2JEcGsnLCdfcmVhZEZpbGVTeW5jJywnZ2V0VGltZScsJ1lvdVx4MjBtYXlceDIwYmVceDIwYWJsZVx4MjB0b1x4MjB1c2VceDIwV2FsbGFieVx4MjB3aXRob3V0XHgyMGFceDIwY29uZmlndXJhdGlvblx4MjBmaWxlLlx4MjBDaGVja1x4MjBvdXRceDIwPGFceDIwY2xhc3M9XHgyMmF1dG8tY29uZmlnLWluZm8tbGlua1x4MjJceDIwaHJlZj1ceDIyaHR0cHM6Ly93YWxsYWJ5anMuY29tL2RvY3MvaW50cm8vY29uZmlnLmh0bWxceDIyPm91clx4MjBkb2N1bWVudGF0aW9uPC9hPlx4MjBmb3JceDIwbW9yZVx4MjBpbmZvcm1hdGlvbi4nLCdibVV5SycsJy4vZWxlY3Ryb25SdW5uZXIuanMnLCdjaHJvbWUnLCcuL3BoYW50b21SdW5uZXIuanMnLCcuL25vZGVSdW5uZXIuanMnLCdWRkxZSScsJ0duRGlqJywnX2NsZWFyQ29uc29sZU91dHB1dFNlbmRRdWV1ZScsJ2ZUVlFoJywnWyVzXVx4MjBTYW5kYm94XHgyMGNhblx4MjBub3RceDIwYmVceDIwcGluZ2VkOlx4MjAlcycsJ3NoYTI1NicsJ3VwZGF0ZScsJ3VzZXJJbmZvJywndXNlcm5hbWUnLCdkaWdlc3QnLCdyZXF1ZXN0JywnUE9TVCcsJ3Joc2lNJywnd3JpdGUnLCdjcmVhdGVWZXJpZnknLCdSU0EtU0hBNTEyJywnV2FsbGFieS5qc1x4MjArXHgyMFF1b2trYS5qcycsJ1F1b2trYScsJ3ZlcmlmeScsJ2luc3RydW1lbnRlZEZpbGUnLCdnZXRJbnN0cnVtZW50ZWRKYXZhU2NyaXB0RmlsZUNvbnRlbnRCeVBhdGgnLCdpbnZhbGlkVmVyc2lvbicsJ2VkaXRvcicsJ2NyZWF0ZUhhc2gnLCdzaGE1MTInLCdiYXNlNjQnLCdoYXNoJywnaW5zdGFsbFBhY2thZ2UnLCdwaXBlJywnbG9jYWwnLCdjd2QnLCdnbG9iYWxTZXR0aW5nc0RpcicsJ2RpcicsJ3BsdWdpbicsJ2VkaXRDb25maWcnLCdwbHVnaW5zJywnZ2xvYmFsU2V0dGluZ3NGaWxlJywncmVsb2FkUXVva2thU2V0dGluZ3MnLCdfbG9uZ1J1bm5pbmdQaW5nVGltZW91dCcsJ2FjdGl2ZScsJ2pMbVpFJywnX2lzRGlzcG9zZWQnLCdpc05hTicsJ2RpZmZNYXRjaFBhdGNoJywnX3F1b2trYScsJ2VkaXRpb24nLCdwcm9qZWN0OicsJ19sb2NhbFJvb3QnLCdfbGluZURpZmZlcmVuY2VzJywnSW50ZWxsaUonLCdNYkVSUScsJ21vZGVsOicsJ3B5OGonLCduc3VwcG9ydGVkXHgyMHNvdXInLCdjZVx4MjBtYXBceDIwdmVyc2lvbicsJ1BGVXhKJywnRmFpbGVkXHgyMHRvXHgyMGRlc2VyaWFsaXplXHgyMG1lc3NhZ2VceDIwZnJvbVx4MjB3YWxsYWJ5XHgyMFVJOlx4MjAnLCduanhpJywnbmV4dFRpY2snLCdIYWFjcycsJ1V6TUpEJywnc0ZlUWQnLCd3TGd0RScsJ21kNScsJ2hleCcsJzc5NDc5ZmU5NGZjZDJiZDlmMTQxYWQxNzE3YzM1MjgyJywnY2M0OGZkYzkxZDg4MjVjYTk3YjMxYzU1Y2EwMzRkNDYnLCc0ZTUzZTRmOGFhNWRhYmJlYTg3YTgxNmQyOGIwMzkzZScsJzZmYTZiODg3ZWRmZmIyYzExM2Y4NGYxNzk2NDljYmI5JywnX3RyaWFsTW9kZScsJ0JaaGN3JywnX25hbWUnLCdfcGFyZW50JywndmVyaWZ5TGljZW5zZScsJ2xrcCcsJ19lZGl0b3InLCdjb25maWd1cmUnLCc1bWtoJywnNW1rJywnaHB5JywnOGpjJywnX3J1bklmVmVyaWZpZWQnLCdabXNwYScsJ2ZpbGVDaGFuZ2VkSW5FZGl0b3InLCdjb3B5VmFsdWUnLCd0cmFuc2llbnRDaGFuZ2UnLCdfX19DT1BZX19fJywnI0NPUFk6JywnY29weUtleScsJ19mcycsJ2ZpbGVPcGVuZWRJbkVkaXRvcicsJ2ZpbGVCeVBhdGgnLCdvcGVuZWRJbkVkaXRvcicsJ19lbWl0RG9jdW1lbnRMaW5lcycsJ2ZpbGVDbG9zZWRJbkFsbEVkaXRvcnMnLCdjbG9zZWRJbkFsbEVkaXRvcnMnLCdydW5UZXN0cycsJ2V2YWx1YXRlRXhwcmVzc2lvbicsJ2V4dGVybmFsRmlsZUNoYW5nZScsJ2FsbG93VG9JbnN0YWxsSW1wb3J0ZWRNb2R1bGVzJywndmFsaWRQYWNrYWdlTmFtZScsJ2NvbW1hbmQnLCdkQ2ptbCcsJ2Zvcm1hdCcsJ2ZpbGVuYW1lJywnd2FsbGFieS5qcycsJ19sb2FkJywnVmlJeU8nLCdZT0lmdicsJ3N0YXJ0c1dpdGgnLCdyZWFsUGF0aCcsJ2NleGdKJywnX2VtaXRTdGF0c1VwZGF0ZScsJ0Vycm9yXHgyMHdoaWxlXHgyMHJlY3ljbGluZ1x4MjBydW5ceDIwd29ya2VyXHgyMGluc3RhbmNlXHgyMCMlczpceDIwJXMnLCd3cml0ZUhlYWQnLCd0ZXh0L2h0bWwnLCdtSFlFeScsJ3h1Q3N3JywnY29sdW1uJywndW5jb3ZlcmVkUmVnaW9ucycsJ0FGYlhZJywndW5jb3ZlcmVkUmVnaW9uc0J5UmVxdWVzdCcsJ3JhbmdlcycsJ0FjdGlvblx4MjBpc1x4MjBub3RceDIwYXZhaWxhYmxlXHgyMGZvclx4MjBmaWxlc1x4MjBvdXRzaWRlXHgyMHdhbGxhYnkuanNceDIwc2NvcGUnLCdkaXNwbGF5VGVzdE5hbWUnLCdsaW5lUmVwb3J0JywnbGluZVJlcG9ydEJ5UmVxdWVzdCcsJ2xvY2F0aW9uJywnbG9jYXRpb25CeVJlcXVlc3QnLCdDYW5ceDIwbm90XHgyMGxvY2F0ZVx4MjBhXHgyMGZhaWxpbmdceDIwdGVzdCcsJ0Nhblx4MjBub3RceDIwZmluZFx4MjBhbnlceDIwZmFpbGluZ1x4MjB0ZXN0cycsJ0pvdEpqJywncmVwb3J0SW50ZXJtZWRpYXRlUmVzdWx0JywnX2NyZWF0ZVJ1blJlc3VsdCcsJ2Vycm9yQnlSZXF1ZXN0JywnQ2FuXHgyMG5vdFx4MjBmaW5kXHgyMGFueVx4MjB0ZXN0XHgyMGVycm9ycycsJ2NvcHlUb0NsaXBib2FyZCcsJ1JTVkd1JywnX25ld1JhbmdlcycsJ2lzQ292ZXJlZCcsJ19udW1iZXJPZkNvdmVyZWRSYW5nZXMnLCdfbGluZVRvUmFuZ2VNYXAnLCdjbG9zZXJUb1RoZUxpbmVUaGFuJywnX291dGRhdGVkUmFuZ2VzJywnb0xuS3onLCdtdXRlTm90aWZpY2F0aW9uJywnY29udGludWVUcmlhbCcsJ2dldEZpbGVNZXNzYWdlcycsJ3V0aWwnLCdvc1ZlcnNpb24nLCdwbGF0Zm9ybScsJ3JlbGVhc2UnLCdub2RlVmVyc2lvbicsJ2NvcmVWZXJzaW9uJywnY29uZmlnJywnb21pdCcsJ3RlbGVtZXRyeScsJ3ZqQVBYJywnWXZnZXcnLCdfZ2xvYmFsRXJyb3JzJywncGFja2FnZUpTT04nLCdkZXZEZXBlbmRlbmNpZXMnLCdmb3JtYXRXaXRoT3B0aW9ucycsJ2BgYFx4MGEnLCdob21lZGlyJywnPGhvbWVEaXI+JywnPHJvb3REaXI+JywnX2luc3RydW1lbnRlZFJvb3QnLCc8d2FsbGFieUNhY2hlRGlyPicsJ0RpYWdub3N0aWNzXHgyMHJlcG9ydFx4MjBoYXNceDIwYmVlblx4MjBzdWNjZXNzZnVsbHlceDIwY29waWVkXHgyMHRvXHgyMGNsaXBib2FyZC4nLCdwcm9qZWN0OmF1dG9Db25maWd1cmF0aW9uQXZhaWxhYmxlJywncHJvamVjdDpwcm9qZWN0Q29uZmlndXJlZCcsJ3ByZWxvYWRTdHJ1Y3R1cmUnLCdPS0Z3YScsJ09iZVdGJywnc2V0dXAnLCdmaWxlc0J5UGF0aCcsJ19maWxlc0ZvclByb2plY3QnLCduaERiUScsJ1Ft4oCLQndBJywnRmFpbGVkXHgyMHRvXHgyMHNldFx4MjB1cFx4MjBwcm9qZWN0XHgyMGZpbGVceDIwc3lzdGVtOlx4MjAnLCdfc2V0VGltZW91dEZvckxvbmdSdW5uaW5nT3BlcmF0aW9uJywnX2V4ZWN1dGluZ1Rlc3QnLCd1cmNlXHgyMG1hcHBpbmcsXHgyMHUnLCdhZGRlZCcsJ191cGRhdGVQcm9qZWN0RmlsZScsJ2xvYWRlZCcsJ2NoYW5nZWQnLCdGaWxlXHgyMHN5c3RlbVx4MjBlcnJvcjpceDIwJywnX2Vycm9yTWVzc2FnZScsJ25vdENoYW5nZWQnLCdGaWxlXHgyMHdhc1x4MjBub3RceDIwY2hhbmdlZCxceDIwYnV0XHgyMGZpbGVceDIwbWFya2Vyc1x4MjBtYXlceDIwbmVlZFx4MjB0b1x4MjBiZVx4MjBzeW5jZWQnLCdmaWxlQnlJZCcsJ2FsbExpbmVzJywnX2VtaXREb2N1bWVudFVwZGF0ZXMnLCdwcm9qZWN0OnRlc3RSdW5FcnJvcicsJ1Bvc3Rwcm9jZXNzb3JceDIwcnVuXHgyMGZhaWx1cmU6XHgyMCcsJyxceDIwU3ludGF4RXJyb3I6JywnZktQVlEnLCdzZ1diSicsJ193b3JrZXJzJywnaW5zdGFuY2UnLCdfZXh0ZW5zaW9uJywnc3Vic3RyJywnYXRceDIwJywnc2xpY2UnLCdwcm9qZWN0OnRlc3RSdW5SZVF1ZXVlZCcsJ3Rlc3RFcnJvclJlcG9ydGVkJywnWVF6ZGYnLCdyZXJ1blNjaGVkdWxlZCcsJ3N0cmluZycsJ3Byb2plY3Q6YnVzeScsJ2J1c3knLCdwcm9qZWN0OmxpdmUnLCdIZkJESScsJ0F3aVFiJywnTHl4YWcnLCcybmonLCd4aXEnLCd4OTYnLCdUaUR0UCcsJ2JzY1R2Jywnc2Vzc2lvbicsJ3RpbWUnLCdrZXlzJywnaXNGdW5jdGlvbicsJzIwcScsJzI1bnQnLCc3NTFkJywncHJvamVjdDpjb25maWdDaGFuZ2VkJywncHJvJywnX2ludGVybmFsJywnX211dGVQcm9FZGl0aW9uRm9yVmFsdWVFeHBsb3Jlck5vdGlmaWNhdGlvbicsJ2lzTm90aWZpY2F0aW9uTXV0ZWQnLCdfbGluZVJlcG9ydCcsJ3Byb2plY3Q6ZXhwcmVzc2lvbnNUb0V2YWx1YXRlUmVjZWl2ZWQnLCdORmFjaCcsJ0FMWk16JywnX2ZpbGVJZCcsJ19saW5lJywnT25seVx4MjBceDI3UHJvXHgyN1x4MjBlZGl0aW9uXHgyMG9mXHgyMFF1b2trYS5qc1x4MjBzdXBwb3J0c1x4MjBtb3JlXHgyMHRoYW5ceDIwJywnXHgyMGV4cGFuZGVkXHgyMGxldmVsc1x4MjB3aXRoaW5ceDIwVmFsdWVceDIwRXhwbG9yZXIuJywnY29xZHcnLCdPbmx5XHgyMFx4MjdQcm9ceDI3XHgyMGVkaXRpb25ceDIwb2ZceDIwUXVva2thLmpzXHgyMHN1cHBvcnRzXHgyMHByb2plY3RceDIwZmlsZXNceDIwaW1wb3J0LicsJ19zdWdnZXN0ZWRQcm9FZGl0aW9uRm9yUHJvamVjdEZpbGVJbXBvcnQnLCdfZXhlY3V0aW5nRmlsZXMnLCdfbG9uZ1J1bm5pbmdXYXJuaW5nVGltZW91dCcsJ3Byb2plY3Q6bmF2aWdhdGlvblJlcXVlc3RlZCcsJ3Byb2plY3Q6ZmlsZXNSZXF1aXJlZCcsJ0ZucFRFJywnb0ZpY2knLCdsb2FkRmlsZXMnLCdwcm9qZWN0OmxpY2Vuc2VDb2xsaXNpb24nLCdceDIwaXNceDIwc3RvcHBlZFx4MjBiZWNhdXNlXHgyMHlvdXJceDIwbGljZW5zZVx4MjBpc1x4MjBiZWluZ1x4MjB1c2VkXHgyMGVsc2V3aGVyZVx4MjBvblx4MjB0aGVceDIwbmV0d29ya1x4MjBieVx4MjA8Yj4nLCc8L2I+Llx4MjBPbmx5XHgyMG9uZVx4MjBhY3RpdmVceDIwY29tcHV0ZXJceDIwYXRceDIwdGhlXHgyMHNhbWVceDIwdGltZVx4MjBtYXlceDIwdXNlXHgyMHRoZVx4MjBsaWNlbnNlLjxici8+SWZceDIweW91XHgyMHdvdWxkXHgyMGxpa2VceDIwdG9ceDIwcHVyY2hhc2VceDIwYW5ceDIwYWRkaXRpb25hbFx4MjBsaWNlbnNlLFx4MjBwbGVhc2VceDIwdmlzaXRceDIwPGFceDIwaHJlZj1ceDIyJywnXHgyMj5vdXJceDIwd2Vic2l0ZTwvYT4uXHgyMElmXHgyMHlvdVx4MjBoYXZlXHgyMGFscmVhZHlceDIwcHVyY2hhc2VkXHgyMHRoZVx4MjBsaWNlbnNlLFx4MjBwbGVhc2VceDIwPGFceDIwaHJlZj1ceDIyI1x4MjJceDIwY2xhc3M9XHgyMicsJ21vZGVsOnN0YXRzTWF5YmVDaGFuZ2VkJywnRlB2dm4nLCdVVk5LTCcsJ3Rlc3RSZXN1bHRzQ2hhbmdlZCcsJ21vZGVsOmRvY3VtZW50c1VwZGF0ZWQnLCdkb2N1bWVudHMnLCdtb2RlbDpmaWxlQWRkZWQnLCdYbHJrWicsJ19lbWl0RmlsZXNUb1RyYWNrJywnbW9kZWw6ZmlsZURlbGV0ZWQnLCdTeUFLVScsJ3VERFFWJywnX2ludmFsaWRhdGVEb2N1bWVudCcsJ21vZGVsOmNvbnNvbGVPdXRwdXQnLCdUcFVKaicsJ1lrb0ppJywnX2NvbnNvbGVPdXRwdXRUaW1lb3V0JywnUHNOR3UnLCdnRk5XdCcsJ25mY2FsbCcsJ3VubGluaycsJ19hZGp1c3RRdW9ra2FGZWF0dXJlcycsJ2hpbnRzJywnY29tbWVudEF1dG9Mb2cnLCdceDIyTGl2ZVx4MjBDb21tZW50c1x4MjBhbmRceDIwTGl2ZVx4MjBWYWx1ZVx4MjBEaXNwbGF5XHgyMGZlYXR1cmVzXHgyMG9ubHlceDIwc3VwcG9ydGVkXHgyMGluXHgyMFx4MjdQcm9ceDI3XHgyMGVkaXRpb24sXHgyMHNlZVx4MjBodHRwczovL3F1b2trYWpzLmNvbS9wcm8vXHgyMGZvclx4MjBtb3JlXHgyMGRldGFpbHNceDIyJywnbW9kZWw6ZmlsZU1lc3NhZ2VzJywnYlhrUkEnLCdFcnJvclx4MjB3aGlsZVx4MjBjcmVhdGluZ1x4MjB3b3JrZXJceDIwIyVzOlx4MjAlcycsJ0ZSRUt0JywnaGFzVmFsaWREb2N1bWVudCcsJ2NvbnRlbnQnLCdfZGlmZk1hdGNoUGF0Y2gnLCdjaGFyYWN0ZXJPZmZzZXQnLCdsaW5lT2Zmc2V0JywnbGluZURpZmZlcmVuY2UnLCdzaGlmdERvY3VtZW50TGluZXMnLCdzWEhkdicsJ3BuZmRQJywnTmV3XHgyMGRvY3VtZW50XHgyMG9yXHgyMGNvbXBsZXhceDIwZG9jdW1lbnRceDIwY2hhbmdlJywnaW52YWxpZGF0ZURvY3VtZW50JywnX2ZpbGVGb3JQcm9qZWN0JywnX2NvdmVyaW5nVGVzdE1hcCcsJ19pc0NvdmVyZWRCeU5vdFRlc3RzJywnb3JkZXInLCdsb2FkJywndHJpZ2dlcicsJ2luc3RydW1lbnQnLCdiaW5hcnknLCdfc3RhcnQnLCdZeEJteicsJ3RleHRMaW5lcycsJ3N0YXJ0MScsJ3F4OTYnLCfigItfZW1pdEV4cGlyZWRMaWNlbnNlJywnPC9iPi5ceDIwSWZceDIweW91XHgyMHdvdWxkXHgyMGxpa2VceDIwdG9ceDIwd29ya1x4MjB3aXRoXHgyMHRoZVx4MjBsYXRl4oCLc3RceDIwdmVyc2lvblx4MjBvZlx4MjAnLCdceDIyPm91clx4MjB3ZWJzaXRlPC9hPlx4MjB0b1x4MjBwdXJjaGFzZVx4MjBhXHgyMGxpY2Vuc2UuXHgyMFlvdVx4MjBtYXlceDIwYWxzb1x4MjA8YVx4MjBocmVmPVx4MjInLCdDdXJyZW50bHlceDIwaW5zdGFsbGVkXHgyMHZlcnNpb25ceDIwb2ZceDIwJywnWWRUQlcnLCdIV2hWaicsJ1RvXHgyMGtlZXBceDIwdHJpYWxpbmdceDIwJywnLFx4MjBwbGVhc2VceDIwPGI+cmVzdGFydFx4MjB5b3VyXHgyMGVkaXRvcjwvYj5ceDIwb3JceDIwdmlzaXRceDIwPGFceDIwaHJlZj1ceDIyJywnXHgyMj5vdXJceDIwd2Vic2l0ZTwvYT5ceDIwdG9ceDIwcHVyY2hhc2VceDIwYVx4MjBsaWNlbnNlLjxici8+SWZceDIweW91XHgyMHdvdWxkXHgyMGxpa2VceDIwdG9ceDIwdHJ5XHgyMFdhbGxhYnlceDIwd2l0aG91dFx4MjB0aGlzXHgyMGxpbWl0YXRpb24sXHgyMHBsZWFzZVx4MjA8YVx4MjBocmVmPVx4MjInLCdceDIyPnJlcXVlc3RceDIwYW5ceDIwZXh0ZW5kZWRceDIwdHJpYWxceDIwbGljZW5zZTwvYT4uPGJyLz5JZlx4MjB5b3VceDIwaGF2ZVx4MjBhbHJlYWR5XHgyMHB1cmNoYXNlZFx4MjB0aGVceDIwbGljZW5zZSxceDIwcGxlYXNlXHgyMDxhXHgyMGhyZWY9XHgyMiNceDIyXHgyMGNsYXNzPVx4MjInLCd0cmlhbEVuZGVkJywnS3JIVFEnLCdzaW1xYycsJ19zdG9wcGVyVGltZW91dCcsJ1x4MjBoYXNceDIwYmVlblx4MjBzdG9wcGVkXHgyMGJlY2F1c2VceDIweW91XHgyMGRpZFx4MjBub3RceDIwY2hvb3NlXHgyMHRvXHgyMGNvbnRpbnVlXHgyMHlvdXJceDIwdHJpYWxceDIwc2Vzc2lvbi5ceDIwVG9ceDIwa2VlcFx4MjB0cmlhbGluZ1x4MjAnLCcsXHgyMHlvdVx4MjBjYW5ceDIwcmVzdGFydFx4MjBvclx4MjB2aXNpdFx4MjA8YVx4MjBocmVmPVx4MjInLCdUb1x4MjBjb250aW51ZVx4MjAnLCdceDIwdHJpYWxceDIwc2Vzc2lvbixceDIwcGxlYXNlXHgyMDxhXHgyMGhyZWY9XHgyMiNceDIyXHgyMGNsYXNzPVx4MjInLCdceDIyPnJlcXVlc3RceDIwYW5ceDIwZXh0ZW5kZWRceDIwdHJpYWxceDIwbGljZW5zZTwvYT4uPGJyLz5WaXNpdFx4MjA8YVx4MjBocmVmPVx4MjInLCdceDIyPm91clx4MjB3ZWJzaXRlPC9hPlx4MjB0b1x4MjBwdXJjaGFzZVx4MjBhXHgyMGxpY2Vuc2UuPGJyLz5JZlx4MjB5b3VceDIwaGF2ZVx4MjBhbHJlYWR5XHgyMHB1cmNoYXNlZFx4MjB0aGVceDIwbGljZW5zZSxceDIwcGxlYXNlXHgyMDxhXHgyMGhyZWY9XHgyMiNceDIyXHgyMGNsYXNzPVx4MjInLCdsTUtnVycsJ3NvbWVSZXN1bHRzVXBkYXRlZCcsJ2Z1bGxSdW4nLCdleGVjdXRlZCcsJ2ZpcnN0RmFpbGluZ09yU2luZ2xlRXhlY3V0ZWRUZXN0JywndWk6dGVzdHM6JywnX2NyZWF0ZVRlc3RSZXN1bHRzJywnc3RhdHMnLCdkb2N1bWVudFVwZGF0ZXMnLCdQdHZ6aScsJ19yZWNlaXZlcicsJ19lbWl0UHJvamVjdENvbmZpZ3VyZWQnLCdhVHFPQycsJ3BPSXBrJywndHJpbUxlZnQnLCdva3JITCcsJ19zcGFjZV90b2tlbl8nLCdub3RpZmljYXRpb24nLCdnY05zWScsJ190ZXN0QWRkZWQnLCdTS0VDTCcsJ3JlcG9ydCcsJ190ZXN0UnVuRXJyb3JNZXNzYWdlJywnUG9PWkMnLCc6OjEnLCdfdGVzdElkJywnc3BlYycsJ19yYW5nZScsJ190ZXh0JywnX3R5cGUnLCdfY29udGV4dCcsJ2NvbnRleHQnLCdfYWN0dWFsJywnYWN0dWFsJywnX2V4cGVjdGVkJywndGVzdElkJywncmFuZ2UnLCdzZXRSYW5nZScsJ3RleHQnLCdfb25Db25uZWN0ZWQnLCdvbkNvbm5lY3RlZCcsJ192YWx1ZUJhZycsJ2RldGFjaFZhbHVlQmFnJywnUENsVUknLCdnZXRMYXRlc3RPcmlnaW5hbEZpbGVDb250ZW50QnlQYXRoJywnUVpGcGcnLCdzZXRGaWxlJywnekpzb3YnLCdpc0FycmF5JywndmROWWcnLCdLUVhpcCcsJ2tpbGxlZCcsJ2V4aXRDb2RlJywnZXhwZWN0ZWQnLCdudXBpYicsJ19pdGVtcycsJ2l0ZW1zJywnX2hpdHMnLCdoaXRzJywnaW5pdCcsJ19udW1PZkNvdmVyaW5nVGVzdHMnLCdfaXNDb3ZlcmVkJywnQmxNQngnLCdfc2V0SXNDb3ZlcmVkJywnc3RhcnRDb2x1bW4nLCdrR0RQaScsJ2VuZENvbHVtbicsJ2ZhaWxzJywnbm90RmFpbHMnLCdJd2NjSScsJ19kYXRhJywnc2V0Q29uc29sZUxvZycsJ2NvbnNvbGVMb2cnLCdfY29uc29sZUxvZycsJ2lzRXJyb3JTb3VyY2UnLCdfZmFpbGVkQnlNZVRlc3RzJywnaXNPbkVycm9yUGF0aCcsJ0RjR01ZJywnVWRXcWknLCdzb3VyY2UnLCdzb3VyY2VzJywnYmlhcycsJ2dlbmVyYXRlZFBvc2l0aW9uRm9yJywnX2ZhaWxlZE9uTWVUZXN0cycsJ2Vycm9ycycsJ2ZsYXR0ZW4nLCdyTVJkbicsJ2ZhaWxzVGVzdCcsJ25vdENvdmVyZWRCeScsJ2ZJUkhwJywncmFuZ2VDb3ZlcmFnZUNoYW5nZWQnLCdzZXRCcm9hZGNhc3QnLCdzZXRNdWx0aWNhc3RUVEwnLCdSUGFXSCcsJ0JzeHRSJywnYml4VW0nLCdzeW5jJywnYmFiZWwnLCdwYXRocycsJ2NvdmVycycsJ19hZGRGYWlsZWRPbk1lVGVzdElmRmFpbGluZycsJ0NSVExWJywnekVFYVAnLCdfdXBkYXRlVGVzdFdpdGhQb3NzaWJsZUZhaWxlZE9uVGhlUmFuZ2UnLCdBUlhpbCcsJ0ZpbGVceDIwYWRkZWQ6XHgyMCVzJywnbWV0YWRhdGEnLCdnZW5lcmF0ZScsJ3RvTG93ZXJDYXNlJywnaXNDb3ZlcmFibGUnLCdfc2V0dGluZ3MnLCdleHRlbnNpb25zJywnamF2YXNjcmlwdCcsJ2RlbCcsJ19sb2FkRmlsZVdpdGhDYWNoZScsJ05vXHgyMG1ldGFkYXRhXHgyMGZvclx4MjBhZGRlZFx4MjBmaWxlXHgyMGZvdW5kOlx4MjAlcycsJ19pc0luc2lkZU9mJywneEdWaUEnLCdDZHVEWicsJ2ludGVyY2VwdGlvbklkJywnS1VJRGQnLCdpc0ZhaWxpbmcnLCdyZW1vdmVSYW5nZXMnLCdoYXNSYW5nZXMnLCd1cGRhdGVMaW5lRGF0YScsJ21TeU1GJywnZmhLTGsnLCdqZXN0JywnZ2V0RmlsZUxpbmVNYXAnLCdUbHRxdCcsJ09MQUhxJywnc3RhdGUnLCdsb25nQ29uc29sZUxvZ1RleHQnLCdlcnJvclNvdXJjZVRleHQnLCdpbnZhbGlkYXRlTGluZXMnLCdVTU9GSicsJ1h4aWpoJywnX3N0YWNrJywnc2hpZnRMaW5lcycsJ2xpbmVTdGF0ZScsJ0NPUHhNJywnZk5GZ2MnLCdfZXJyb3JTb3VyY2VUZXh0JywnX2NvbnNvbGVMb2dUZXh0JywnUUtQaWwnLCdleHJkcCcsJ0RwRVFIJywnUE9RZFknLCd0aGVuXHgyMCcsJy4uLlx4MjAnLCdceDIwfFx4MjAnLCdfbG9uZ0NvbnNvbGVMb2dUZXh0JywnXHgyMFx4MGFceDIwJywnX2Nsb3NlQnlFcnJvclRpbWVvdXQnLCdfb25GaW5pc2hlZCcsJ19kaXNwb3NlJywnX2NhbmNlbGxlZCcsJ1slc11ceDIwUnVuXHgyMCVzXHgyMHRlc3QocyksXHgyMHNraXBwZWRceDIwJXNceDIwdGVzdCjigItzKScsJ190ZXN0cycsJ19za2lwcGVkJywnSU9ib3cnLCdfZW1pdEZpbGVzTWVzc2FnZXMnLCdqYXJkYScsJ190cnVuY2F0ZU1lc3NhZ2UnLCdlcnJvclBhdGgnLCdub3RDb3ZlcmVkJywnZnVsbHlDb3ZlcmVkJywncGFydGlhbGx5Q292ZXJlZCcsJ2diRUliJywncXplY0InLCdfd3NzJywnZnVsbFRlc3RSZXN1bHRzUmVwb3J0JywndGVzdFJ1blJlUXVldWVkJywnWU51Z2knLCduaHBTdCcsJ19zZXRLZXknLCcuLi4nLCdfY2xlYW5TdHJpbmcnLCdOSHFqbScsJy4vc3RhY2tFbnRyeScsJ29WZHNuJywnX21lc3NhZ2UnLCdfc25hcHNob3QnLCdzbmFwc2hvdCcsJ1djWGpHJywnY292ZXJhYmxlJywnYUxFRE0nLCdtVml2RCcsJ2hhZU9oJywnX3NhbmRib3hIdG1sJywnZUdDTG4nLOKAiydfbG9nJywnX3RpbWUnLCdfc2xvdycsJ3Nsb3cnLCdfYnVpbGRGdWxsTmFtZUFuZFBhdGgnLCdfY292ZXJlZFJhbmdlcycsJ19jb3ZlcmVkRmlsZXMnLCdfdHMnLCdjbXhsbicsJ19pc0ZhaWxpbmcnLCdfZXJyb3JTdGFja01hcCcsJ2NYcmRkJywnc3RhY2tFbnRyeScsJ2t3WHp0JywnbWF4JywnRXlad2EnLCdmaWxlUGF0aCcsJ3BRSFFLJywnc21hbWcnLCdfdGVzdEZpbGUnLCdvZnlXbScsJ1FvSllRJywnX2FsbG93ZWRUb1NlbmRUZXN0UmVzdWx0cycsJ19zZW5kVGVzdFJlc3VsdHMnLCd6QmJIaicsJ2Rpc3BsYXlSYW5nZScsJ19jb25zb2xlTWVzc2FnZXMnLCdjb25zb2xlTWVzc2FnZXMnLCdYaVhScicsJ0ZRVGFvJywnX2ZpbmRGcmVlUG9ydCcsJ0ZhaWxlZFx4MjB0b1x4MjBzdGFydFx4MjB3YWxsYWJ5XHgyMGFwcFx4MjBzZXJ2aWNlOlx4MjAnLCdfY29ubmVjdGlvbnMnLCdzZXRUZXN0RmlsZScsJ0VhZUlSJywncmVtb3ZlQWxsTGlzdGVuZXJzJywnc3RkZXJyJywnb2Jzb2xldGUnLCdERWtKTycsJ19yYW5nZUNvbnNvbGVMb2cnLCd5cGNwVicsJ3B1SlNHJywnc291cmNlRmlsZScsJ2NvdmVyZWRGaWxlcycsJ290ZkV2Jywnc3RhcnRSYW5nZScsJ1VtT0JPJywneGZPdEYnLCdjb21wbGV0ZUluaXRpYWxpemF0aW9uJywnb0FwWEMnLCdUemN5aicsJ0ZGU1FhJywnY2xvc2VzdFJhbmdlJywnTnFpc04nLCdmd09yYycsJ2Rpc3BsYXlQYXRoJywnVmhTaVQnLCdceDIwXHgyMC4uLlx4MGEnLCdfZnVsbE5hbWUnLCdCTElTcScsJ29nYUJ1JywnV2FsVlYnLCdfbGF0ZXN0UmVwb3J0ZWRDb3ZlcmFnZVZhbHVlJywnbG93Q292ZXJhZ2VUaHJlc2hvbGQnLCdudW1iZXJPZkNvdmVyZWRSYW5nZXMnLCdudW1iZXJPZkFsbFJhbmdlcycsJ2pKbnhqJywnWGJDV0EnLCdvcmlnaW5hbFBvc2l0aW9uRm9yJywnb3JpZ2luYWxMaW5lJywnYWRkTWFwcGluZycsJ2dlbmVyYXRlZExpbmUnLCdjb25zdHJ1Y3RvcicsJ0NnSk9lJywnVkFNZlYnLCdaTEhMcycsJ1RoZVx4MjBzYW5kYm94XHgyMGlzXHgyMG5vdFx4MjByZXNwb25zaXZlLlx4MjBDaGVja1x4MjBmb3JceDIwcG9zc2libHlceDIwcmVjZW50bHlceDIwaW50cm9kdWNlZFx4MjBpbmZpbml0ZVx4MjBsb29wcy4nLCdUQk1tSCcsJ0tYeXNpJywnR2VuZXJhdG9yXHgyMGlzXHgyMGFscmVhZHlceDIwZXhlY3V0aW5nLicsJ25Gd3RHJywndWxYbHEnLCdwSEtYaicsJ01qYW5jJywnX2RvY3VtZW50SW5FZGl0b3InLCdFVUl6bycsJ1BoYW50b21ceDIwcGFnZVx4MjBpc1x4MjBub3RceDIwY3JlYXRlZFx4MjBpblx4MjB0aW1lLFx4MjByZWN5Y2xpbmdceDIwaXQnLCdpemNibCcsJ25vZGVfbW9kdWxlcycsJ2Nob2tpZGFyJywnLi4vc2hhcmVkL3V0aWxzJywndHJhY2UnLCdhZGQnLCdkZWxldGUnLCdPUVdDcycsJ19maWxlc0J5SWQnLCcyMHEyJywnbHJ1LWNhY2hlJywnT2NGVEsnLCdfcmVhZEZpbGVQcm9taXNlJywncmVhZEZpbGVQcm9taXNlJywnX3JlYWxwYXRoU3luYycsJ3JlYWxwYXRoU3luYycsJ19pc1dpbicsJ19maWxlQWRkZWQnLCdzVVNGYycsJ2lnbm9yZScsJ2RvdCcsJ21pY3JvbWF0Y2gnLCdmaWxlU2NhblRpbWVvdXQnLCdfaXNJbmNsdWRlZCcsJ2RhcndpbicsJ2xpbnV4JywneXdFcm4nLCdVSVx4MjBjbGllbnRceDIwZGlzY29ubmVjdGVkJywncmVtb3ZlTGlzdGVuZXInLCdpc1N5bWJvbGljTGluaycsJ2lzRmlsZScsJ19pc0VudGl0eUV4Y2x1ZGVkJywnV1dPamwnLCdfaXNHbG9iJywnWW91clx4MjBwcm9qZWN0XHgyMGZpbGVceDIwcGF0aFx4MjBsb29rc1x4MjBsaWtlXHgyMGFceDIwdmFsaWRceDIwZ2xvYlx4MjBwYXR0ZXJuXHgyMGFuZFx4MjBjb250YWluc1x4MjBnbG9iXHgyMGNoYXJhY3RlcnMsXHgyMGxpa2VceDIwYHtgLFx4MjBgfWAsXHgyMGBbYCxceDIwYF1gLFx4MjBgKGAsXHgyMGApYCxceDIwYCpgLFx4MjBgfGA7XHgyMGl0XHgyMG1heVx4MjBjYXVzZVx4MjB0aGVceDIwcHJvamVjdFx4MjBmaWxlXHgyMHNjYW5uaW5nXHgyMHRvXHgyMGZhaWwsXHgyMHBsZWFzZVx4MjByZW1vdmVceDIwZ2xvYlx4MjBjaGFyYWN0ZXJzXHgyMGZyb21ceDIwdGhlXHgyMHByb2plY3RceDIwcGF0aC4nLCdwYXR0ZXJuJywnZUdKbnQnLCdOZk1hcicsJ25vcm1hbGl6ZScsJ3dzeHZIJywndHJpbVJpZ2h0JywnUG9zc2libGVceDIwc3ltbGluazpceDIwJXNceDIwLT5ceDIwJXMnLCdfd2F0Y2hlcicsJ19jaGVja1BvcnQnLCdJQ1VYYScsJ0VkV3lqJywnQWRkaXRpb25hbFx4MjBhdHRlbXB0XHgyMHRvXHgyMGNyZWF0ZVx4MjBwaGFudG9tXHgyMGluc3RhbmNlXHgyMCMlcycsJ19jcmVhdGVQaGFudG9tSW5zdGFuY2UnLCdvbkVycm9yJywnUGhhbnRvbUpzXHgyMGZhaWx1cmU6XHgyMCVzLFx4MjByZWN5Y2xpbmdceDIwcGhhbnRvbVx4MjBpbnN0YW5jZVx4MjAjJXMnLCdfd2l0aE5vcm1hbGl6ZWRQYXRoJywnX2ZpbGVDaGFuZ2VkJywnX2ZpbGVEZWxldGVkJywnZGVib3VuY2UnLCdfaGFzR2xvYkNoYXJzJywnaVNXc2gnLCdleGVjJywnTnFtRlYnLCdja055TScsJ19sb2FkRmlsZScsJ19mYWlsaW5nVGVzdHMnLCdfY2hhbmdlZCcsJ19pc1N0b3BwZWQnLCd4dHBiWScsJ2NoYW5uZWwnLCdpbjpzdG9wJywnWkdWUHgnLCdOb1x4MjBmaWxlXHgyMHdpdGhceDIwaWRceDIwJywnX2Vuc3VyZVJlYWRGaWxlV2l0aENvcnJlY3RDb250ZW50JywnX3RpbWVvdXQnLCdUVlNHTCcsJ3JOc095JywnX2ZpbGVJZEdlbmVyYXRvcicsJ2VQY2lwJywnZkRKdVonLCdoYXMnLCdGaWxlXHgyMGNoYW5nZWQ6XHgyMCVzJywnUkZtTWEnLCdsZnJKYScsJ19lbWl0RmlsZUNoYW5nZScsJ0NWb3paJywnWyVzXVx4MjBTYW5kYm94XHgyMHJ1blx4MjBpc1x4MjBjYW5jZWxlZFx4MjB3aGlsZVx4MjBpdFx4MjB3YXNceDIwd2FpdGluZ1x4MjBmb3JceDIwd29ya2VyXHgyMGNsZWFudXAnLCdbJXNdXHgyMFNhbmRib3hceDIwd29ya2VyXHgyMHJlcXVpcmVzXHgyMHJlY3ljbGluZycsJ05vXHgyMG1ldGFkYXRhXHgyMGZvclx4MjBjaGFuZ2VkXHgyMGZpbGVceDIwZm91bmQ6XHgyMCVzJywnTm9ceDIwY2hhbmdlc1x4MjBkZXRlY3RlZFx4MjBmb3JceDIwJXMnLCdGaWxlXHgyMGRlbGV0ZWQ6XHgyMCVzJywnbGlua2VkUGF0aCcsJ1FDVFRyJywncmVnZXhwJywnVGZRelYnLCdqSmZpTScsJ1slc11ceDIwU2FuZGJveFx4MjBjbG9zaW5nXHgyMGVycm9yLFx4MjAlcycsJ3BhdGhNYXRjaGVzUGF0dGVybicsJ01janh0JywnX2dldEJhc2VEaXInLCdpeWJYaCcsJ2RtcCcsJ3BhdGNoX2Zyb21UZXh0JywnamRHelInLCdZUkVPUycsJ21pbmltYXRjaCcsJ3NlbGYnLCd0b3AnLCdwYXJlbnQnLCdjb25maXJtJywnZm9jdXMnLCdwcmludCcsJ3Byb21wdCcsJy4vdHJhY2tlZFNvdXJjZUZpbGUnLCcuL2V4ZWN1dGVkVGVzdCcsJy4vY29uc29sZU1lc3NhZ2UnLCcuL2Vycm9yRW50cnknLCdLcGduSScsJ1dZamplJywnX2ZpbGVJZEJ5UGF0aCcsJ2ZpbGVJZEJ5UGF0aCcsJ2Fsd2F5c1NlbmRBbGxMaW5lcycsJ19maWxlcycsJ19udW1iZXJPZkFsbFJhbmdlcycsJ19jb3ZlcmFnZScsJ190ZXN0UnVuR2xvYmFsTG9ncycsJ3Byb2plY3QnLCdWT3dRRicsJ1RZbkRJJywnQUdQQ00nLCdFcnJvclx4MjBkdXJpbmdceDIwc28nLCdFWGdrQScsJ2V4dGVuZGVkQ29yZScsJ0ZnZ3JkJywncm91bmQnLCdjb25maWdGaWxlUGF0aCcsJ3Byb2plY3ROYW1lJywncHJvamVjdENvbmZpZycsJ3Rlc3RzQnlSZXF1ZXN0JywnUkxuRFYnLCdsaW5lVGVzdHMnLCdjb3ZlcmluZ1Rlc3RzJywnTUJJV3onLCdpc1plcm9Db25maWdKZXN0JywnbGluZVJhbmdlcycsJ2NZVXZsJywnd2luMzInLCduZnNmVycsJ01YRHpJJywna2VQZE4nLCdGYWlsZWRceDIwdG9ceDIwc2VuZFx4MjB0aGVceDIwXHgyMmNvbm5lY3RlZFx4MjJceDIwbWVzc2FnZVx4MjB0b1x4MjB3b3JrZXIuXHgyMCcsJ3l6UFZnJywna2ZiZ0gnLCdfYWxsb3dlZFRvU2VuZEFsbEZpbGVzJywnVHNNbmEnLCdMR0hTRicsJ2xhdGVzdEZhaWxpbmdUZXN0JywncURPb3MnLCdfYWRkaXRpb25hbEhlYWRlck1lc3NhZ2UnLCdadWV4aycsJ21hdGNoJywnbWlzc2luZ1BhY2thZ2UnLCdtaXNzaW5nQnJvd3Nlckdsb2JhbCcsJ3VuZGVmaW5lZE5hbWUnLCdkaWZmcycsJ2xlbmd0aDEnLCdsZW5ndGgyJywndG90YWxOdW1iZXInLCdfbWFwVGVzdHMnLCdyZXF1ZXN0SW50ZXJjZXB0ZWQnLCduYXZpZ2F0ZScsJ2xvYWRFdmVudEZpcmVkJywnUWVGcGYnLCd5RXVrRicsJ3poTnFqJywnX2Nvbm5lY3RpbmdXb3JrZXJzJywnU3RhcnRlZFx4MjBydW5ceDIwd29ya2VyXHgyMGluc3RhbmNlXHgyMChkZWxheWVkKVx4MjAjJywneGdBSncnLCdkdmFMYycsJ3NiU1doJywncHJvamVjdDpzdGFydGluZycsJ0xCU3JEJywndGNvJywnNTFkJywnZEtid2knLCdceDIyPm91clx4MjB3ZWJzaXRlPC9hPlx4MjB0b1x4MjB1cGdyYWRlXHgyMHlvdXJceDIwbGljZW5zZS48YnIvPklmXHgyMHlvdVx4MjBoYXZlXHgyMHB1cmNoYXNlZFx4MjBhXHgyMHJlbmV3YWxceDIwbGljZW5zZSxceDIwcGxlYXNlXHgyMDxhXHgyMGhyZWY9XHgyMiNceDIyXHgyMGNsYXNzPVx4MjInLCdfYWRkRmlsZScsJ3Byb2plY3Q6ZmlsZScsJ3dtaG56JywndUZ2QUsnLCdlUE1kWicsJ19kaXNwb3NpbmcnLCdfZGVsZXRlRmlsZScsJ293blRlc3RzJywnX3Rlc3RzUmVtb3ZlZCcsJ19yZXBvcnRHbG9iYWxFcnJvcnMnLCdmaWxlRGVsZXRlZCcsJ19hZ2dyZWdhdGVGaWxlQ292ZXJhZ2UnLCdaY1VxUicsJ0xoUXdGJywncVFXWEwnLCd0ZXN0UnVuRXJyb3InLCdHYmZxSScsJ2NvbXBsZXRlJywnYWRkaXRpb25hbEhlYWRlck1lc3NhZ2UnLCdoYkZuRScsJ2d0cEN0JywnX3ZpZXdwb3J0U2l6ZScsJ3ZpZXdwb3J0U2l6ZScsJ19waGFudG9tanNQYXRoJywnX2lzUGhhbnRvbUluc3RhbmNlSGVhbHRoeScsJ3hLcmRwJywnTHloRW0nLCdhZGRDb25zb2xlTWVzc2FnZScsJ3NldFJhbmdlQ29uc29sZUxvZycsJ2RpZmYnLCc8c2VlXHgyMHRoZVx4MjBkaWZmXHgyMGluXHgyMHF1b2trYVx4MjBvdXRwdXQ+Jywnc2luZ2xlVGVzdENoYW5nZWQnLCd5eGRQbCcsJ0hKelNQJywnX3VwZGF0ZUZpbGVSYW5nZXMnLCdoYXNSZXBvcnRhYmxlQ292ZXJhZ2UnLCdfbm9Db3ZlcmFnZUNhbGN1bGF0aW9uJywnZmlsZXNXaXRoTm9Db3ZlcmFnZUNhbGN1bGF0ZWQnLCdOa1RZdCcsJ0JBSkpjJywnbGluZUNvdmVyaW5nVGVzdHNPcmRlcmVkQnlGYWlsaW5nVGhlbkRhdGUnLCdfcmVwb3J0RmFpbGVkUnVuJywnbWtUT3MnLCcvUHJvZC9saWNlbnNlQXVkaXQnLCdwYmVOeCcsJ2psU3F2JywnX3VwZGF0ZUFmZmVjdGVkRmlsZXMnLCdkb2N1bWVudHNVcGRhdGVkJywnX3VwZGF0ZVRvdGFsQ292ZXJhZ2UnLCdmaWxlTWVzc2FnZXMnLCdHZ2t3aycsJ19yYW5nZVRvTG9jJywnbkRzREUnLCdDaFNHeScsJ192YWx1ZXNJbmNsdWRlZEluQ292ZXJhZ2VBZ2dyZWdhdGUnLCdjbGVhclJhbmdlQ29uc29sZUxvZycsJ19tYXBNZXNzYWdlJywnV3JtbFAnLCdCbU5JdycsJ0pyS1RCJywnYVFmTWQnLCdyT2tnZicsJ21GZXZBJywnX19yZWFkJywnelJnRFcnLCdtb2R1bGUnLCdNb2R1bGUnLCdyZXF1aXJlJywnX19zcHJlYWQnLCdXZWlnRicsJ2Zyb20nLCcuLy4uLy4uL3V0aWxzJywnMjMwLjAuMC4zJywnalJJRUQnLCduWmxvaycsJ2NyZWF0ZVNvY2tldCcsJ3VkcDQnLCdGRFlIUCcsJ2xpc3RlbmluZycsJ3R0bCcsJ2FkZE1lbWJlcnNoaXAnLCd1dGY4JywnZXZlbnQnLCdzb3VyY2VJZCcsJ2trZ3ViJywnX2xpc3RlbmVycycsJ1RCRUpCJywnWWdhQVInLCdfY2xvc2VQYWdlJywnYUV1UmonLCd5YUVzSicsJ19nZXROZXR3b3JrQWRkcmVzc2VzJywnaG9zdG5hbWUnLCdLRUtaTicsJ0J5anNEJywnZHNKYU8nLCdpbnN0cnVtZW50ZWQnLCdaUXVnaCcsJ25ldHdvcmtJbnRlcmZhY2VzJywnaW50ZXJuYWwnLCcwLjAuMC4wJywnT3NSbEknLCdpdnJTRScsJ2hibm5XJywnTlpEQ0snLCdEV0h6aicsJ1BzbHNEJywnLi9kb2N1bWVudEluRWRpdG9yJywnLi4vLi4vLi4vbGliL2JhYmVsUmFuZ2VDYWxjdWxhdG9yJywnSFZueVQnLCdfYWZmZWN0ZWRSYW5nZXMnLCdzTVlsZCcsJ2ZoQXdwJywndXBkYXRlRG9jdW1lbnQnLCdfYWxsUmFuZ2VzUmVjZWl2ZWQnLCdmdWxsVXBkYXRlJywnWm5tWFonLCdRS2pSTicsJ0huaG9FJywnUXNLVGEnLCdwVUpQbycsJ2lzT3BlbmVkSW5FZGl0b3InLCdpbnZhbGlkYXRlRG9jdW1lbnRMaW5lcycsJ0VHb2xnJywnU1d5Q0InLCdJb0x4RycsJ1NPZEt4JywnYnVpbGREaXNwbGF5UmFuZ2VzSWZSZXF1aXJlZCcsJ19uZWVkVG9SZWJ1aWxkRGlzcGxheWFibGVSYW5nZXMnLCdvSkV5WScsJ3JRVmZrJywnX2Rpc3BsYXlSYW5nZXNMaW5lTWFwJywnZm9yRWFjaCcsJ3RKSlpUJywnSFRYQ0UnLCdtbElSWCcsJ1JqRHd0JywnaXNSZWdFeHAnLCdfX1JFR0VYUFx4MjAnLCdFeU13TCcsJ2FkZFRvVGVzdExvZycsJ0NZam9yJywnRUFERFJOT1RBVkFJTCcsJ2dkZ3lPJywnRWtiSFYnLCd1Q293eicsJ051SURFJywnSVVCQVgnLCdhZGRUZXN0JywneVdnakYnLCdmRmRvcycsJ3JhbmdlQ29uc29sZUxvZycsJ3NldFJhbmdlcycsJ2xyaWlEJywnbEdjS1AnLCd1cGRhdGVGcm9tJywnYXR0YWNoZWRUb1NvdXJjZUZpbGUnLCdhZ2Z2eScsJ19jYXB0dXJlU2NyZWVuU2hvdCcsJ3NjcmVlbicsJ19yZWJ1aWxkUmFuZ2VNYXAnLCdKYW51YXJ5JywnRmVicnVhcnknLCdNYXJjaCcsJ01heScsJ0p1bHknLCdTZXB0ZW1iZXInLCdPY3RvYmVyJywnTm92ZW1iZXInLCdEZWNlbWJlcicsJ1JJd3RCJywnZ1hES2InLCdfemVyb0NvbmZpZ0plc3QnLCdkZWxheVN0YWNrTWFwcGluZycsJ19ub3RNYXBwZWRTdGFja0VudHJpZXMnLCdfcHJvY2Vzc1Rlc3RMb2cnLCdDYW5ub3RceDIwZmluZFx4MjBtb2R1bGUnLCdBVG1WTycsJ3FMS2tzJywnZU14TWMnLCdFTlhjeicsJ2ZWdEVaJywnZm9EVXUnLCctLXdlYi1zZWN1cml0eT0nLCdNQ3VHaycsJ0Zkc1lBJywnbmV0JywnaHR0cCcsJ1NlcnZlcicsJy4uL3NlcnZlci9kb2N1bWVudEluRWRpdG9yJywnLi4vLi4vdXRpbHMnLCdqS3JhWScsJ3VpOnN0YXJ0JywndWk6bmF2aWdhdGUnLCd1aTpydW5UZXN0cycsJ3RPc0JCJywndWk6b3BlbmVkSW5FZGl0b3InLCd1aTpjbG9zZWRJbkVkaXRvcicsJ3VpOmNvZGVSZXF1ZXN0ZWQnLCdYUGtxVicsJ2ZpbGVDb250ZW50QnlQYXRoJywnd1VvWXgnLCdNVGxDUicsJ3VpOmNvZGUnLCd1aTp0ZXN0czpyZXN1bHRzUmVxdWVzdGVkJywnb2dzZVUnLCd1aTp0ZXN0czpyZXN1bHRzQWJhbmRvbmVkJywnRWtmVGonLCdhS3JsQicsJ3VpOmJ1c3knLCdtb2RlbDp0ZXN0UnVuRXJyb3InLCdtb2RlbDp0ZXN0UnVuUmVRdWV1ZWQnLCdtb2RlbDp0ZXN0RmlsZURlbGV0ZWQnLCduSkRBTCcsJ3J4b0ZyJywnbW9kZWw6ZmlsZUNoYW5nZWQnLCdkeWZvaScsJ1x4MjBpblx4MjBmaWxlOi8vLycsJ2ludmFsaWRhdGVDYWNoZScsJ19yZW1vdmVBbnNpJywnX21hcFN0YWNrRW50cmllcycsJ19ub3JtYWxpemVkTG9jYWxSb290JywnbW9kZWw6dGVzdHNFeGVjdXRlZCcsJ2FsbEFmZmVjdGVkRmlsZXMnLCd2YWx1ZUNoYW5nZWQnLCdhZmZlY3RlZCcsJ1FHWmlCJywncmVzb2x2ZUxvZ0VudHJ5UmFuZ2UnLCdhbGxSZXN1bHRzVXBkYXRlZCcsJ0VjaU9iJywnQ0J5c2cnLCdzdGFja0VudHJ5QnlGaWxlUGF0aCcsJ2lzTGV2ZWxVcFJlbGF0aXZlUGF0aCcsJ2x0cmltJywnSUhsT0gnLCdfYnVpbGRMb2NhdGlvbicsJ3Rha2UnLCdPSVNaZycsJ0habUx1JywnX2J1aWxkQXJyYXlUZXN0U3RydWN0dXJlJywnaXNUZXN0Jywnek16TEknLCdvcmlnaW4nLCdVSVx4MjBjbGllbnRceDIwY29ubmVjdGVkJywnSW5jb21pbmdceDIwbWVzc2FnZVx4MjAlcycsJ3VpOmhhbmRzaGFrZScsJ0xpc3RlbmluZ1x4MjBwb3J0XHgyMCVzJywnX2h0dHBTZXJ2ZXInLCd6SFhZYicsJ1lhc1ZLJywneG5pQ3MnLCd3ZEtoWScsJ3VpOnRlc3RzOmFsbFJlc3VsdHNVcGRhdGVkJywnc2VxJywnX3NvbWVSZXN1bHRzUmVzcG9uc2VTZXFOdW0nLCdPdXRnb2luZ1x4MjBtZXNzYWdlXHgyMCVzJywnTWdmSlgnLCdlbnN1cmVEaXJTeW5jJywnbVFvSVonLCdDYW5ceDIwbm90XHgyMGZpbmRceDIwYVx4MjBmcmVlXHgyMHBvcnQnLCdMY0FzUScsJ1NIeUFVJywnY3JlYXRlU2VydmVyJywnbGlzdGVuJywnSU1qYnknLCd2dHphaCcsJ2luZGV4Jywnbm93JywndG9VVENTdHJpbmcnLCdsb29rdXAnLCd0ZXh0L3BsYWluJywnaXZOSG0nLCdjYWNoZScsJ21haW4nLCdyZWFkJywncmVhZEZpbGUnLCdhbHQnLCdnUFNocScsJ2V3TkNTJywnbG5hTmMnLCdyb290JywnUHJlcGFyaW5nXHgyMHRvXHgyMHNlcnZlXHgyMCVzJywnU2VydmluZ1x4MjAlc1x4MjBmcm9tXHgyMGNhY2hlJywnT05MYWQnLCdUcnlpbmdceDIwdG9ceDIwYWNjZXNzXHgyMG1pc3NpbmdceDIwcmVzb3VyY2VceDIwb3JceDIwQVBJOlx4MjAnLCdTZXJ2aW5nXHgyMCVzXHgyMGZyb21ceDIwZGlzaycsJ19hbHdheXNTZW5kQWxsTGluZXMnLCdzcGF3bicsJ25vZGVSdW5uZXInLCcjIyN3cG0jIyMnLCdpREFVSScsJ190ZWFyZG93bicsJ3RlYXJkb3duJywnX3Nsb3dUZXN0VGhyZXNob2xkJywnX25vZGVNb2R1bGVzJywnX3JlZ2VuZXJhdG9yUnVudGltZScsJ3Jlc29sdmVNb2R1bGVQYXRoRnJvbScsJ3JlZ2VuZXJhdG9yLXJ1bnRpbWUnLCdydW50aW1lLmpzJywncmVjeWNsZScsJ19jd2QnLCdfb3JpZ2luYWxDYWNoZVJvb3QnLCdtYXhMb2dFbnRyeVNpemUnLCdfY3JlYXRlTm9kZUluc3RhbmNlJywnX3JlY3ljbGVOb2RlSW5zdGFuY2UnLCdfaXNOb2RlSW5zdGFuY2VIZWFsdGh5JywnUUd3VW0nLCdNc29lbycsJ3BhdGhuYW1lJywnU2VydmluZ1x4MjAlc1x4MjBmcm9tXHgyMGRpc2tceDIwKGFsdC5ceDIwbG9jYXRpb24pJywnRXJyb3JceDIwd2hlblx4MjByZWFkaW5nXHgyMGZpbGVceDIwJXMsXHgyMCVzJywnb1RSUk0nLCdfdGVzdEZyYW1ld29yaycsJ0JBQkVMX0VOVicsJ19ub2RlUGF0aCcsJ1BnWlpGJywnSm5SaksnLCdzaWduYWwnLCdfc2FuZGJveE5hbWUnLCdGUWtCTCcsJ0toTENtJywnX29yaWdpbmFsUm9vdCcsJ0VyQ2lyJywnTGtSa3MnLCdjT21CcScsJ2NvbnRhaW5zJywncXVva2thU3RhY2tUcmFjZU1hcmtlcicsJ2luOnRyYWNlci5yZXN1bWUnLCd1bmlxdWVJZCcsJ2h5THhRJywndVVTWWonLCdmUUhNTycsJ3BvbmcnLCdhd3Z5RScsJ3Z5cnhQJywnUFBuSUUnLCdqSVRlRScsJ1JwTFRyJywnc3Rkb3V0JywnUExzbk8nLCdXR1NTYScsJ0Vycm9yXHgyMHdoaWxlXHgyMHByb2Nlc3NpbmdceDIwU1RET1VUXHgyMG1lc3NhZ2U6XHgyMCcsJ19leGVjdXRlZFRlc3ROdW1iZXInLCdfZW5kVGltZScsJ19zdGFydFRpbWUnLCdtaWxsaXNlY29uZChzKScsJ3NlY29uZChzKScsJ21pbnV0ZShzKScsJ1x4MjBhZmZlY3RlZFx4MjB0ZXN0KHMpXHgyMGluXHgyMCcsJ0Vycm9yXHgyMHdoaWxlXHgyMHN1YnNjcmliaW5nXHgyMHRvXHgyMHByb2Nlc3NceDIwU1RET1VUOlx4MjAnLCdHUGtHaycsJ29rV1hPJywnRGVidWdnZXJceDIwbGlzdGVuaW5nXHgyMG9uXHgyMHBvcnQnLCdFcnJvclx4MjB3aGlsZVx4MjBwcm9jZXNzaW5nXHgyMFNUREVSUlx4MjBtZXNzYWdlOlx4MjAnLCdTRFV5aScsJ0VkZm51JywncGFyZW50RmlsZVBhdGgnLCdjaGlsZEZpbGVQYXRoJywnbnVtYmVyT2ZGdW5jdGlvbnMnLCdpbk9yaWdpbmFsRmlsZXNDYWNoZScsJ2NoYW5nZVN0YXJ0JywnY2hhbmdlUG9zaXRpb24nLCdyZWxhdGVkRmlsZXNXaXRoVGVzdHMnLCdoYWRHbG9iYWxFcnJvcnNQcmV2aW91c1J1bicsJ3J1bkFsbFRlc3RzSW5BZmZlY3RlZFRlc3RGaWxlJywnYWxsb3dlZFRvUnVuQ2hhbmdlZFRlc3RPbmx5JywnYllkTlknLCdvcmlnaW5hbFR5cGUnLCdhdXRvQ29uc29sZUxvZycsJ3JlcG9ydENvbnNvbGVFcnJvckFzRXJyb3InLCdpbjpydW4nLCdpc01hdGNoJywncGxhdGZvcm1EZXBlbmRlbnRQYXRoJywncGhhbnRvbVJ1bm5lcicsJ2NsZWFyTWVtb3J5Q2FjaGUnLCdfcmVjeWNsZVBoYW50b21JbnN0YW5jZScsJ3FmdXdCJywnUkprWFcnLCdvbkV4aXQnLCdTSUdTRUdWJywnTG9va3NceDIwbGlrZVx4MjB0aGVceDIwUGhhbnRvbUpzXHgyMHZlcnNpb25ceDIwYmVpbmdceDIwdXNlZFx4MjBpc1x4MjBub3RceDIwc3VwcG9ydGVkXHgyMG9uXHgyMHlvdXJceDIwT1MuXHgwYVRyeVx4MjB1c2luZ1x4MjBhXHgyMGRpZmZlcmVudFx4MjBQaGFudG9tSnNceDIwdmVyc2lvblx4MjAoaHR0cHM6Ly93YWxsYWJ5anMuY29tL2RvY3MvaW50ZWdyYXRpb24vcGhhbnRvbWpzMi5odG1sKVx4MGFvclx4MjBDaHJvbWl1bS9WOFx4MjB2aWFceDIwRWxlY3Ryb25ceDIwcnVubmVyXHgyMChodHRwczovL3dhbGxhYnlqcy5jb20vZG9jcy9pbnRlZ3JhdGlvbi9lbGVjdHJvbi5odG1sKScsJ1NpZ25hbFx4MjBraWxsZWRceDIwcGhhbnRvbWpzXHgyMCMlczpceDIwJXMsXHgyMGV4aXRceDIwY29kZTpceDIwJXMnLCctLWRpc2stY2FjaGU9eWVzJywnLS13ZWItc2VjdXJpdHk9ZmFsc2UnLCctLWRpc2stY2FjaGU9JywnaG9vaycsJ3NraXBwZWQnLCdfZXhlY3V0aW5nVGVzdExvZycsJ0V4ZWN1dGlvblx4MjBwcm9ncmVzczpceDIwJywnXHgyMHRlc3RzJywnV0FMTEFCWV9JTlRFR1JBVElPTl9URVNUX1JVTicsJ3FOdkhHJywnSk1YbG8nLCdHQ09XaycsJ19nZXRQYWdlJywnblRhQXMnLCcuLi8uLi8uLicsJ2JkZFh4Jywnb25SZXNvdXJjZVJlcXVlc3RlZCcsJ1dadVh3JywnX3VybFV0aWwnLCdkYXRhOicsJ2NoYXJBdCcsJ3NlYXJjaCcsJ29wZW4nLCdHQXp2cCcsJ3BhdGNoX3RvVGV4dCcsJ3BoVEVzJywncmVuZGVyJywnUmxvTGsnLCdrTXlydycsJ3hkdmpNJywnaW95dnYnLCdNZXJnaW5nXHgyMHBhcmFsbGVsXHgyMHRlc3RceDIwcnVuXHgyMHJlc3VsdHMnLCdfY3JlYXRlUGFnZScsJ093bEVGJywnc0dBd08nLCdMYVRCeCcsJ3JlcGVhdCcsJ2NyZWF0ZVBhZ2UnLCdGU2tGYycsJ1VWQ0FUJywnUGhhbnRvbVx4MjBwYWdlXHgyMGNyZWF0ZWQnLCdwaW5nJywnX3RyeUNsb3NpbmdTYW5kYm94JywnTG5jQU0nLCd3b3JrZXInLCdTVEFSVElORycsJ0V2ZW50RW1pdHRlcicsJ1RKenZDJywnTXBkbUQnLCdxdWV1ZScsJ2V2ZW50cycsJ1JFQURZJywnQlVTWScsJ2luaGVyaXRzJywnb25SZWFkeScsJ3dPeW1hJywnb25NZXNzYWdlJywncWhGSlMnLCdtR1RLeScsJ05oalhmJywnZW5xdWV1ZScsJ2NZS1ZUJywnc0hoSWonLCdzaGlmdCcsJ3Rhc2snLCdjYWxsYmFjaycsJ2plc3QtcnVubmVyJywnX3F1ZXVlJywnTlh1WlcnLCdEb1ViSycsJ1VTaWttJywnUHJvY2Vzc29yXHgyMHBvb2xceDIwaXNceDIwbm90XHgyMHN0YXJ0ZWQnLCdTSVZUdCcsJ2luOmNvbm5lY3RlZCcsJ1dhbGxhYnkuanNceDIwY2FjaGVceDIwaXNceDIwY29ycnVwdGVkLFx4MjBwbGVhc2VceDIwcmVzdGFydFx4MjB3YWxsYWJ5LmpzJywnX29wdHMnLCdyZXBvcnRDb25zb2xlT3V0cHV0JywnR1RQSWMnLCdfZW1pdEludGVybmFsJywnaW5pdGlhbCcsJ2NwdXMnLCdwaGFudG9tanMnLCdraW5kJywnX21heFdvcmtlcnMnLCdtaW4nLCdyZWd1bGFyJywnUGFyYWxsZWxpc21ceDIwZm9yXHgyMGluaXRpYWxceDIwcnVuOlx4MjAlcyxceDIwZm9yXHgyMHJlZ3VsYXJceDIwcnVuOlx4MjAlcycsJ193b3JrZXJQZW5kaW5nQ2xlYW51cCcsJ19taW5Xb3JrZXJzJywnbWFpbk1vZHVsZScsJ2pXUVpaJywnU3dYRlEnLCd6eW9ITCcsJ2Z3YUFWJywnX3JlY2VpdmVyUG9ydCcsJ1dlYlx4MjBzZXJ2ZXJceDIwaXNceDIwbGlzdGVuaW5nXHgyMGF0XHgyMCcsJ3ZlcmlmeUxvY2FsT3JpZ2luJywnY29ubmVjdGlvbicsJ1BuT1FuJywnRmFpbGVkXHgyMHRvXHgyMGRlc2VyaWFsaXplXHgyMG1lc3NhZ2VceDIwZnJvbVx4MjB3b3JrZXI6XHgyMCcsJ3dvcmtlcjonLCdfc2Vzc2lvbnMnLCdMaHlGUScsJ2RlYnVnTG9nJywnYXV0b0xvZycsJ2NvbnNvbGUuJywnekh5UE8nLCdGYWlsZWRceDIwdG9ceDIwcHJvY2Vzc1x4MjBtZXNzYWdlXHgyMCcsJ1x4MjBmcm9tXHgyMHdvcmtlcixceDIwJywnX2NyZWF0ZVNlc3Npb24nLCdTYW5kYm94XHgyMGxvYWRceDIwZmFpbGVkLFx4MjBzdGF0dXM6XHgyMCcsJ19oYW5kbGVFcnJvcicsJ05zSGZqJywnX2ZpbGVSb290JywnNjY1NzEwOWZiNDQyNjMzZjQxMmYxMjg3ODg4NzE5NjAnLCc0N2FiZmRmYTdiY2Q0MTZlMGY5YzY5OTkxZWMxZjg5NicsJ19ydW5Qcmlvcml0eScsJ3ByaW9yaXR5JywncmVjeWNsZUJlZm9yZVJ1bicsJ05RVnZZJywnUGpNTHEnLCdfcnVuSW5QYXJhbGxlbCcsJ3ByZXBhcmUnLCdfcnVuVGVzdHMnLCdYbGNmWicsJ0ZpbmlzaGVkXHgyMGV4ZWN1dGluZ1x4MjAnLCdTYW5kYm94XHgyMCglcylceDIwWyVzXVx4MjBlcnJvcjpceDIwJXMnLCdpbmFjdGl2ZScsJ1N5bnRheEVycm9yOlx4MjBQYXJzZVx4MjBlcnJvcicsJ1J1bnRpbWVceDIwZXJyb3I6XHgyMCcsJ25aTW5jJywncGFnZUlkJywnWyVzXVx4MjBSdW5uaW5nXHgyMHRlc3RzXHgyMGluXHgyMHNhbmRib3gnLCdzZXNzaW9uSWQnLCdbJXNdXHgyMFNhbmRib3hceDIwaXNceDIwd2FpdGluZ1x4MjBmb3JceDIwd29ya2VyXHgyMGNsZWFudXAnLCdvbkRvbmUnLCdGdFJtSCcsJ0x3bHlSJywnaGFzQW5zaScsJ3JlbW92ZUFuc2knLCdwQnpHZycsJ1JwZXpIJywneW5mQ3cnLCd6UXhoQicsJ2Nsb3NpbmcnLCdoYW5oQycsJ1slc11ceDIwTG9hZGVkXHgyMCVzXHgyMHRlc3QocyknLCd0b3RhbCcsJ190b3RhbCcsJ19sb2FkaW5nU2VxdWVuY2UnLCd0TXhpcycsJ0N0SE9JJywnX2FyZUxvZ0VudHJ5TWVzc2FnZXNFcXVhbCcsJ2lzRXF1YWwnLCdtb2NoYScsJ1NvbWVceDIwbG9uZ1x4MjBydW5uaW5nXHgyMGNvZGVceDIwaGFzXHgyMGJlZW5ceDIwZGV0ZWN0ZWQ6XHgyMCcsJ3Rlc3RceDIwXHgyMicsJ29uZVx4MjBvZlx4MjB5b3VyXHgyMCcsJ1x4MjBpc1x4MjB0YWtpbmdceDIwbW9yZVx4MjB0aGFuXHgyMCcsJ21zXHgyMHRvXHgyMGV4ZWN1dGUuJywnXHgwYS1ceDIwJywnXHgwYVRoZVx4MjBsYXN0XHgyMHJlY29yZGVkXHgyMGNvbnNvbGUubG9nOlx4MjAnLCdsYXN0JywnbHNQUUInLCdBcmlkbicsJ1x4MGFUcnlceDIwY29tbWVudGluZ1x4MjBvdXRceDIwdGhlXHgyMHRlc3RceDIwb3JceDIwZXhjbHVkaW5nXHgyMHRoZVx4MjB0ZXN0XHgyMGZpbGVceDIwZnJvbVx4MjB0aGVceDIwYHRlc3RzYFx4MjBsaXN0XHgyMGluXHgyMHlvdXJceDIwd2FsbGFieVx4MjBjb25maWcsXHgwYWFuZFx4MjByZXN0YXJ0aW5nXHgyMHdhbGxhYnlceDIwdG9ceDIwbWFrZVx4MjBzdXJlXHgyMHRoYXRceDIwaXRceDIwaXNceDIwdGhpc1x4MjB0ZXN0L2ZpbGVceDIwY2F1c2luZ1x4MjB0aGVceDIwaXNzdWVceDIwYW5kXHgyMG5vdFx4MjBzb21ldGhpbmdceDIwZWxzZS4nLCdceDBhQWxzb1x4MjByZXZpZXdceDIweW91clx4MjByZWNlbnRceDIwY2hhbmdlc1x4MjB0b1x4MjB0aGVceDIwY29kZVx4MjB0aGF0XHgyMHRoZVx4MjB0ZXN0XHgyMGNvdmVycyxceDIwYXNceDIwd2VsbFx4MjBhc1x4MjBpdHNceDIwYGJlZm9yZWBceDIwYW5kXHgyMGBhZnRlcmBceDIwaG9va3MuJywnXHgwYVBpbmdpbmdceDIwdGVzdFx4MjBydW5uZXJceDIwc2FuZGJveC4uLicsJ1NhbmRib3hceDIwaXNceDIwcmVzcG9uc2l2ZS5ceDIwVGhlXHgyMGlzc3VlXHgyMG1heVx4MjBoYXZlXHgyMHRoZVx4MjBhc3luY2hyb25vdXNceDIwbmF0dXJlLFx4MjBsaWtlXHgyMGFceDIwbWlzc2luZ1x4MjBjYWxsYmFjay4nLCd0Z1dDdCcsJ1x4MGFUaGVceDIwc2FuZGJveFx4MjBwaW5nXHgyMGZhaWxlZDpceDIwJywnbW9kdWxlTG9hZGVkJywnWyVzXVx4MjBUZXN0XHgyMGV4ZWN1dGVkOlx4MjAnLCdhZVJVTycsJ3FRdVFHJywnYlJldGQnLCdtYXhDb25zb2xlTWVzc2FnZXNQZXJUZXN0JywnX21lc3NhZ2VzUGVyVGVzdCcsJyksXHgyMGN1cnJlbnRceDIwdGVzdFx4MjBjb25zb2xlXHgyMG1lc3NhZ2VzXHgyMHJlY29yZGluZ1x4MjBzdG9wcGVkLlx4MGFZb3VceDIwbWF5XHgyMGluY3JlYXNlXHgyMHRoZVx4MjBsaW1pdFx4MjBieVx4MjBhZGRpbmdceDIwYG1heENvbnNvbGVNZXNzYWdlc1BlclRlc3RgXHgyMHNldHRpbmdceDIwdG9ceDIweW91clx4MjBjb25maWdceDIwZmlsZS4nLCdTYW5kYm94XHgyMHJlcXVlc3RlZFx4MjBlYXJseVx4MjBzY3JlZW5ceDIwc2hvdFx4MjBjYXB0dXJlJywnSHlUVWsnLCdRdEVnTicsJ1dwenprJywnRU1RQmknLCdaVHRobCcsJ3NDSkltJywnWyVzXVx4MjBTYW5kYm94XHgyMGlzXHgyMG5vdFx4MjByZXNwb25zaXZlLFx4MjByZWN5Y2xpbmdceDIwd29ya2VyXHgyMGluc3RhbmNlJywnTWl1UmUnLCdnbUxxcCcsJzA3ZWQxZmM2YTNhMzJkNjYwOTlmZTE4NzBjODNhMGNlJywnWyVzXVx4MjBTYW5kYm94XHgyMGlzXHgyMHJlc3BvbnNpdmUsXHgyMGNsb3NpbmdceDIwaXQnLCdHb2dtQycsJ1Nkc2tMJywnc0JiWWsnLCdsYktxUycsJ0xpbnV4JywncWNVVW4nLCdPcnJ3QycsJ09QcnFJJywnSFp0SVMnLCdfY29ycnVwdGVkQ2FjaGUnLCdXUG1CWicsJ293dkhtJywnc3RhY2tFbnRyeUJ5RmlsZUlkJywnX2V4dHJhY3RCcm93c2VyU3RhY2tMaW5lQ29udGV4dCcsJ19ub3JtYWxpemVkV2FsbGFieVNlcnZlclBhdGgnLCdZY2Z5YScsJy50cycsJy50c3gnLCdjbGFzc1ByaXZhdGVQcm9wZXJ0aWVzJywnb3B0aW9uYWxDaGFpbmluZycsJ3BhcnRpYWxBcHBsaWNhdGlvbicsJ2Zsb3dDb21tZW50cycsJ19leHRyYWN0Tm9kZVN0YWNrTGluZUNvbnRleHQnLCdoV3lscCcsJ1x4NWMkJicsJ0ZhaWxlZFx4MjB0b1x4MjBtYXBceDIwdGhlXHgyMHN0YWNrXHgyMHRvXHgyMHVzZXJceDIwY29kZSxceDIwZW50cnlceDIwbWVzc2FnZTpceDIwJXMsXHgyMHN0YWNrOlx4MjAlcycsJ19jbGVhbk1lc3NhZ2UnLCdub2RlJywnX3Jvb3QnLCdzdGFja01hcHBlZCcsJ1J6dkhjJywnXHgyMChodHRwJywnYUFvakwnLCdGSlFQdicsJ0Rpc3RyaWJ1dGluZ1x4MjB0ZXN0c1x4MjBiZXR3ZWVuXHgyMCVzXHgyMHdvcmtlcnMnLCdIU0FQQycsJ3Rlc3RGaWxlcycsJ25hb3phJywnU0xVR1InLCdOb1x4MjBtZXRhZGF0YVx4MjBmb3JceDIwZGVsZXRlZFx4MjBmaWxlXHgyMGZvdW5kOlx4MjAlcycsJ29wdHMnLCdSdW5uaW5nXHgyMHRlc3RzXHgyMGluXHgyMHBhcmFsbGVsJywnd29ya2VySWQnLCdCd2R6ZCcsJ3VObHlrJywnaGVhbHRoeScsJ0ZvdW5kXHgyMGluYWN0aXZlXHgyMHJ1blx4MjB3b3JrZXJceDIwaW5zdGFuY2VceDIwIyVzLFx4MjByZWN5Y2xpbmcnLCdTdGFydGluZ1x4MjBydW5ceDIwd29ya2VyXHgyMGluc3RhbmNlXHgyMCMnLCdkcm5uaScsJ0ZmREN1JywnRmFpbGVkXHgyMHRvXHgyMGNyZWF0ZVx4MjB3b3JrZXJceDIwaW5zdGFuY2UnLCd6TXZkZycsJ0FDTEpDJywnX2Nvbm5lY3RlZCcsJ1dvcmtlclx4MjBpc1x4MjBub3RceDIwY3JlYXRlZFx4MjBpblx4MjB0aW1lLFx4MjByZWN5Y2xpbmdceDIwaXQnLCdDcUxrdScsJ25qT2hMJywnam9kRHYnLCdsc2FEVicsJ2tqWkRiJywncGhreFInLCdUZ1hXbicsJ3R0akppJywnc3RhdHNNYXliZUNoYW5nZWQnLCdwUndiQicsJ19fYXNzaWduJywnYXNzaWduJywnVE5OVkgnLCdzb3VyY2UtbWFwJywnU291cmNlTWFwQ29uc3VtZXInLCdTb3VyY2VNYXBHZW5lcmF0b3InLCcoPzovXHg1YyooPzpceDVjcypceDBkP1x4MGEoPzovLyk/KT8oPzonLCcpXHg1Y3MqXHg1YyovfC8vKD86JywnKSlceDVjcyonLCdlczcnLCd0c3gnLCdUc3BWaCcsJ3Z1ZScsJ1hDZlR0JywnaW1mSGgnLCdFTW5XcycsJ2VyRkJPJywnbm9vcFRydWUnLCdmQ0RiRicsJ053bFZSJywnbGFzdEluZGV4Jywnc2FLWVEnLCdvcHpxdicsJ2Fic29sdXRlJywncmVwbGFjZVBhdGhTZXBGb3JSZWdleCddOyhmdW5jdGlvbihfMHhmYTA2NzAsXzB4M2MxZDYxKXt2YXIgXzB4NDdiMjkwPWZ1bmN0aW9uKF8weDEzNjg2Mil7d2hpbGUoLS1fMHgxMzY4NjIpe18weGZhMDY3MFsncHVzaCddKF8weGZhMDY3MFsnc2hpZnQnXSgpKTt9fTtfMHg0N2IyOTAoKytfMHgzYzFkNjEpO30oXzB4MmNmOSwweDZlKSk7dmFyIF8weDUxMDg9ZnVuY3Rpb24oXzB4YTQ3NzQ3LF8weDNlMWJlYil7XzB4YTQ3NzQ3PV8weGE0Nzc0Ny0weDA7dmFyIF8weDIxMWRjYz1fMHgyY2Y5W18weGE0Nzc0N107cmV0dXJuIF8weDIxMWRjYzt9OyFmdW5jdGlvbiBlKF8weDJhZDEwNCxfMHg0NjBlYWIsXzB4MzJkZGI3KXtmdW5jdGlvbiBfMHg1ZGQ4Y2UoXzB4MTM2YmViLF8weDVlYmViNCl7aWYoIV8weDQ2MGVhYltfMHgxMzZiZWJdKXtpZighXzB4MmFkMTA0W18weDEzNmJlYl0pe3ZhciBfMHgxMWExODM9J2Z1bmN0aW9uJz09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmU7aWYoIV8weDVlYmViNCYmXzB4MTFhMTgzKXJldHVybiBfMHgxMWExODMoXzB4MTM2YmViLCEweDApO2lmKF8weDU2OWY2ZSlyZXR1cm4gXzB4NTY5ZjZlKF8weDEzNmJlYiwhMHgwKTt2YXIgXzB4YWVhMzBkPW5ldyBFcnJvcihfMHg1MTA4KCcweDAnKStfMHgxMzZiZWIrJ1x4MjcnKTt0aHJvdyBfMHhhZWEzMGRbXzB4NTEwOCgnMHgxJyldPSdNT0RVTEVfTk9UX0ZPVU5EJyxfMHhhZWEzMGQ7fXZhciBfMHhkYTNlY2I9XzB4NDYwZWFiW18weDEzNmJlYl09eydleHBvcnRzJzp7fX07XzB4MmFkMTA0W18weDEzNmJlYl1bMHgwXVsnY2FsbCddKF8weGRhM2VjYltfMHg1MTA4KCcweDInKV0sZnVuY3Rpb24oXzB4NWQ0OTQ1KXtpZihfMHg1MTA4KCcweDMnKSE9PV8weDUxMDgoJzB4NCcpKXt2YXIgXzB4NDYwZWFiPV8weDJhZDEwNFtfMHgxMzZiZWJdWzB4MV1bXzB4NWQ0OTQ1XTtyZXR1cm4gXzB4NWRkOGNlKF8weDQ2MGVhYj9fMHg0NjBlYWI6XzB4NWQ0OTQ1KTt9ZWxzZXtpZihwcm9jZXNzWydlbnYnXVtfMHg1MTA4KCcweDUnKV0mJiF0aGlzW18weDUxMDgoJzB4NicpXSlyZXR1cm4gXzB4NWQ0OTQ1KCk7dmFyIF8weDQ2ZjNmYT1wcm9jZXNzW18weDUxMDgoJzB4NycpXVtfMHg1MTA4KCcweDUnKV0/J1F1b2trYS5qc1x4MjBceDI3UHJvXHgyNyc6XzB4NTEwOCgnMHg4JyksXzB4NDRiMzFlPXByb2Nlc3NbJ2VudiddW18weDUxMDgoJzB4NScpXT8naHR0cHM6Ly9xdW9ra2Fqcy5jb20vcHJvJzpfMHg1MTA4KCcweDknKTtqW18weDUxMDgoJzB4YScpXT1qW18weDUxMDgoJzB4YScpXXx8eyd2YWxpZCc6ITB4MX07dmFyIF8weDU4MTU3YyxfMHgxZDMzZT17fTtpZihwcm9jZXNzWydlbnYnXVtfMHg1MTA4KCcweDUnKV0mJihfMHgxZDMzZVsnZXhwaXJ5RGF0ZSddPW5ldyBfMHg1ZGQ4Y2UoaltfMHg1MTA4KCcweGEnKV1bXzB4NTEwOCgnMHhiJyldKydceDIwVVRDJyksXzB4MWQzM2VbXzB4NTEwOCgnMHhiJyldPWpbJ3ZlcmlmaWNhdGlvblJlc3VsdCddW18weDUxMDgoJzB4YicpXSksalsndmVyaWZpY2F0aW9uUmVzdWx0J11bXzB4NTEwOCgnMHhjJyldKXJldHVybiBqW18weDUxMDgoJzB4YScpXVtfMHg1MTA4KCcweGQnKV0/KF8weDU4MTU3Yz1fMHg1MTA4KCcweGUnKStfMHg0NmYzZmErXzB4NTEwOCgnMHhmJykrXzB4NDZmM2ZhKydceDIwYW5kXHgyMGZ1dHVyZVx4MjB2ZXJzaW9uc1x4MjByZWxlYXNlZFx4MjB3aXRoaW5ceDIwdGhlXHgyMG5leHRceDIwMTJceDIwbW9udGhzLFx4MjBwbGVhc2VceDIwdmlzaXRceDIwPGFceDIwaHJlZj1ceDIyJytfMHg0NGIzMWUrJ1x4MjI+b3VyXHgyMHdlYnNpdGU8L2E+XHgyMHRvXHgyMHVwZ3JhZGVceDIweW91clx4MjBsaWNlbnNlLjxici8+SWZceDIweW91XHgyMGhhdmVceDIwYWxyZWFkeVx4MjBwdXJjaGFzZWRceDIwdGhlXHgyMG5ld1x4MjBsaWNlbnNlLFx4MjBwbGVhc2VceDIwPGFceDIwaHJlZj1ceDIyI1x4MjJceDIwY2xhc3M9XHgyMicrVCsnXHgyMj5hY3RpdmF0ZVx4MjBpdDwvYT4uJyxfMHgxZDMzZVsnaWQnXT1fMHg1MTA4KCcweDEwJyksdGhpc1snX2VtaXRFeHBpcmVkTGljZW5zZSddKCkpOmpbXzB4NTEwOCgnMHhhJyldW18weDUxMDgoJzB4MTEnKV0mJihfMHgxZDMzZVsnaWQnXT1fMHg1MTA4KCcweDEyJykscHJvY2Vzc1tfMHg1MTA4KCcweDcnKV1bXzB4NTEwOCgnMHg1JyldPyhfMHgxZDMzZVtfMHg1MTA4KCcweDExJyldPSEweDAsXzB4NTgxNTdjPV8weDUxMDgoJzB4ZScpK18weDQ2ZjNmYStfMHg1MTA4KCcweDEzJykrKHByb2Nlc3NbJ2VudiddW18weDUxMDgoJzB4NScpXT8nJzpfMHg1MTA4KCcweDE0JykpK18weDUxMDgoJzB4MTUnKStqWyd2ZXJpZmljYXRpb25SZXN1bHQnXVtfMHg1MTA4KCcweGInKV0rJzwvYj4uXHgyMElmXHgyMHlvdVx4MjB3b3VsZFx4MjBsaWtlXHgyMHRvXHgyMHdvcmtceDIwd2l0aFx4MjB0aGVceDIwbGF0ZXN0XHgyMHZlcnNpb25ceDIwb2ZceDIwJytfMHg0NmYzZmErXzB4NTEwOCgnMHgxNicpK18weDQ0YjMxZStfMHg1MTA4KCcweDE3JykrVCtfMHg1MTA4KCcweDE4JykrXzB4MWQzM2VbXzB4NTEwOCgnMHgxOScpXVtfMHg1MTA4KCcweDFhJyldKCkrJy0nKyhfMHgxZDMzZVsnZXhwaXJ5RGF0ZSddWydnZXRVVENNb250aCddKCkrMHgxKSsnLScrXzB4MWQzM2VbXzB4NTEwOCgnMHgxOScpXVtfMHg1MTA4KCcweDFiJyldKCkrXzB4NTEwOCgnMHgxYycpKTpfMHg1ODE1N2M9XzB4NTEwOCgnMHhlJykrXzB4NDZmM2ZhK18weDUxMDgoJzB4MTMnKSsocHJvY2Vzc1tfMHg1MTA4KCcweDcnKV1bXzB4NTEwOCgnMHg1JyldPycnOl8weDUxMDgoJzB4MTQnKSkrXzB4NTEwOCgnMHgxNScpK2pbXzB4NTEwOCgnMHhhJyldW18weDUxMDgoJzB4YicpXSsnPC9iPi5ceDIwSWZceDIweW91XHgyMHdvdWxkXHgyMGxpa2VceDIwdG9ceDIwd29ya1x4MjB3aXRoXHgyMHRoZVx4MjBsYXRlc3RceDIwdmVyc2lvblx4MjBvZlx4MjAnK18weDQ2ZjNmYStfMHg1MTA4KCcweDE2JykrXzB4NDRiMzFlK18weDUxMDgoJzB4MTcnKStUK18weDUxMDgoJzB4MWQnKSksXzB4NTgxNTdjJiZ0aGlzW18weDUxMDgoJzB4MWUnKV0oXzB4NTEwOCgnMHgxZicpLF8weDU4MTU3YyxfMHgxZDMzZSksXzB4NWQ0OTQ1KCk7aWYoaltfMHg1MTA4KCcweGEnKV1bXzB4NTEwOCgnMHgyMCcpXSlfMHg1ODE1N2M9XzB4NTEwOCgnMHhlJykrXzB4NDZmM2ZhK18weDUxMDgoJzB4MjEnKStfMHg0NGIzMWUrJ1x4MjI+b3VyXHgyMHdlYnNpdGU8L2E+XHgyMHRvXHgyMHB1cmNoYXNlXHgyMGFceDIwbGljZW5zZS5ceDIwWW91XHgyMG1heVx4MjBhbHNvXHgyMDxhXHgyMGhyZWY9XHgyMicrQytfMHg1MTA4KCcweDIyJykrUytfMHg1MTA4KCcweDIzJykrVCtfMHg1MTA4KCcweDFkJyksXzB4MWQzM2VbJ2lkJ109XzB4NTEwOCgnMHgyMCcpLHRoaXNbJ19lbWl0Tm90aWZpY2F0aW9uJ10oXzB4NTEwOCgnMHgyNCcpLF8weDU4MTU3YyxfMHgxZDMzZSksdGhpc1tfMHg1MTA4KCcweDI1JyldKCk7ZWxzZXtpZighaltfMHg1MTA4KCcweGEnKV1bJ2ludmFsaWRWZXJzaW9uJ10pcmV0dXJuIF8weDFkMzNlWydpZCddPV8weDUxMDgoJzB4MjYnKSxfMHg1ODE1N2M9XzB4NTEwOCgnMHgyNycpK18weDQ2ZjNmYStfMHg1MTA4KCcweDI4JykrQytfMHg1MTA4KCcweDIyJykrUysnXHgyMj5leHRlbmRlZFx4MjB0cmlhbFx4MjBsaWNlbnNlPC9hPi48YnIvPklmXHgyMHlvdVx4MjBoYXZlXHgyMGFscmVhZHlceDIwcHVyY2hhc2VkXHgyMHRoZVx4MjBsaWNlbnNlLFx4MjBwbGVhc2VceDIwPGFceDIwaHJlZj1ceDIyI1x4MjJceDIwY2xhc3M9XHgyMicrVCsnXHgyMj5hY3RpdmF0ZVx4MjBpdDwvYT4uPGJyLz5JZlx4MjB5b3VceDIwd291bGRceDIwbGlrZVx4MjB0b1x4MjBwdXJjaGFzZVx4MjBhXHgyMGxpY2Vuc2UsXHgyMHBsZWFzZVx4MjB2aXNpdFx4MjA8YVx4MjBocmVmPVx4MjInK18weDQ0YjMxZStfMHg1MTA4KCcweDI5JyksdGhpc1tfMHg1MTA4KCcweDFlJyldKF8weDUxMDgoJzB4MmEnKSxfMHg1ODE1N2MsXzB4MWQzM2UpLHRoaXNbJ190cmlhbE1vZGUnXSgpLF8weDVkNDk0NSgpO3ZhciBfMHg0MDg2Y2Q9eydpbnZhbGlkVmVyc2lvbic6ITB4MCwnaWQnOidpbnZhbGlkVmVyc2lvbid9O3Byb2Nlc3NbXzB4NTEwOCgnMHg3JyldW18weDUxMDgoJzB4NScpXT8oXzB4NDA4NmNkW18weDUxMDgoJzB4MTknKV09bmV3IF8weDVkZDhjZShqW18weDUxMDgoJzB4YScpXVtfMHg1MTA4KCcweGInKV0rXzB4NTEwOCgnMHgyYicpKSxfMHg1ODE1N2M9XzB4NTEwOCgnMHgyYycpK18weDQ2ZjNmYStfMHg1MTA4KCcweDJkJykrXzB4NDRiMzFlK18weDUxMDgoJzB4MmUnKStUK18weDUxMDgoJzB4MmYnKStfMHg0MDg2Y2RbXzB4NTEwOCgnMHgxOScpXVtfMHg1MTA4KCcweDFhJyldKCkrJy0nKyhfMHg0MDg2Y2RbXzB4NTEwOCgnMHgxOScpXVtfMHg1MTA4KCcweDMwJyldKCkrMHgxKSsnLScrXzB4NDA4NmNkWydleHBpcnlEYXRlJ11bJ2dldFVUQ0RhdGUnXSgpK18weDUxMDgoJzB4MzEnKStFK18weDUxMDgoJzB4MzInKSk6XzB4NTgxNTdjPSdDdXJyZW50bHlceDIwaW5zdGFsbGVkXHgyMHZlcnNpb25ceDIwb2ZceDIwJytfMHg0NmYzZmErXzB4NTEwOCgnMHgzMycpK18weDQ0YjMxZSsnXHgyMj5vdXJceDIwd2Vic2l0ZTwvYT5ceDIwdG9ceDIwdXBncmFkZVx4MjB5b3VyXHgyMGxpY2Vuc2UuPGJyLz5JZlx4MjB5b3VceDIwaGF2ZVx4MjBwdXJjaGFzZWRceDIwYVx4MjByZW5ld2FsXHgyMGxpY2Vuc2UsXHgyMHBsZWFzZVx4MjA8YVx4MjBocmVmPVx4MjIjXHgyMlx4MjBjbGFzcz1ceDIyJytUKydceDIyPmFjdGl2YXRlXHgyMGl0PC9hPi4nLHRoaXNbXzB4NTEwOCgnMHgxZScpXShfMHg1MTA4KCcweDI0JyksXzB4NTgxNTdjLF8weDQwODZjZCksdGhpc1tfMHg1MTA4KCcweDI1JyldKCk7fX19LF8weGRhM2VjYixfMHhkYTNlY2JbXzB4NTEwOCgnMHgyJyldLGUsXzB4MmFkMTA0LF8weDQ2MGVhYixfMHgzMmRkYjcpO31yZXR1cm4gXzB4NDYwZWFiW18weDEzNmJlYl1bXzB4NTEwOCgnMHgyJyldO312YXIgXzB4NTY5ZjZlPSdmdW5jdGlvbic9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlO21vZHVsZVtfMHg1MTA4KCcweDInKV09XzB4NWRkOGNlKF8weDMyZGRiN1sweDBdKTt9KHsxOltmdW5jdGlvbihfMHgyMDAxZDcsXzB4NTYzMzYzLF8weGY4MGZhMSl7dmFyIF8weDU4ZWQ2Yj1fMHgyMDAxZDcoXzB4NTEwOCgnMHgzNCcpKSxfMHgxMTE5NTk9XzB4MjAwMWQ3KF8weDUxMDgoJzB4MzUnKSksXzB4MWYyYTI4PV8weDIwMDFkNygnLi9iYWJlbFZpc2l0b3InKSxfMHhjOWQ3MmI9XzB4MjAwMWQ3KF8weDUxMDgoJzB4MzYnKSk7XzB4NTYzMzYzW18weDUxMDgoJzB4MicpXT1mdW5jdGlvbihfMHgyMDAxZDcsXzB4NTYzMzYzKXt0cnl7aWYoXzB4NTEwOCgnMHgzNycpPT09XzB4NTEwOCgnMHgzNycpKXt2YXIgXzB4ZjgwZmExPV8weDU4ZWQ2YltfMHg1MTA4KCcweDM4JyldKF8weDIwMDFkNyksXzB4NTA4ZmRlPScudHMnPT09XzB4ZjgwZmExfHwnLnRzeCc9PT1fMHhmODBmYTEsXzB4NDViMDk2PVsnZXN0cmVlJyxfMHg1MTA4KCcweDM5JyksXzB4NTEwOCgnMHgzYScpLF8weDUxMDgoJzB4M2InKSxfMHg1MTA4KCcweDNjJyksJ2NsYXNzUHJpdmF0ZVByb3BlcnRpZXMnLF8weDUxMDgoJzB4M2QnKSxfMHg1MTA4KCcweDNlJyksXzB4NTEwOCgnMHgzZicpLF8weDUxMDgoJzB4NDAnKSwnZXhwb3J0RGVmYXVsdEZyb20nLF8weDUxMDgoJzB4NDEnKSxfMHg1MTA4KCcweDQyJyksXzB4NTEwOCgnMHg0MycpLCdpbXBvcnRNZXRhJyxfMHg1MTA4KCcweDQ0JyksJ251bGxpc2hDb2FsZXNjaW5nT3BlcmF0b3InLF8weDUxMDgoJzB4NDUnKSxfMHg1MTA4KCcweDQ2JyksXzB4NTEwOCgnMHg0NycpLCdvcHRpb25hbENoYWluaW5nJywncGFydGlhbEFwcGxpY2F0aW9uJyxbXzB4NTEwOCgnMHg0OCcpLHsncHJvcG9zYWwnOl8weDUxMDgoJzB4NDknKX1dLF8weDUxMDgoJzB4NGEnKV07XzB4NTA4ZmRlP18weDQ1YjA5NltfMHg1MTA4KCcweDRiJyldKF8weDUxMDgoJzB4NGMnKSk6KF8weDQ1YjA5NltfMHg1MTA4KCcweDRiJyldKF8weDUxMDgoJzB4NGQnKSksXzB4NDViMDk2W18weDUxMDgoJzB4NGInKV0oJ2Zsb3dDb21tZW50cycpKTt2YXIgXzB4Y2E3MWY2PV8weDExMTk1OVtfMHg1MTA4KCcweDRlJyldKF8weDU2MzM2Myx7J3NvdXJjZVR5cGUnOl8weDUxMDgoJzB4NGYnKSwncGx1Z2lucyc6XzB4NDViMDk2fSksXzB4NTZmYjZkPVtdO3JldHVybiBfMHhjOWQ3MmIoXzB4Y2E3MWY2LF8weDFmMmEyOChmdW5jdGlvbihfMHgyMDAxZDcpe2lmKCdIdllHTCc9PT0nSHZZR0wnKXtyZXR1cm4gXzB4NTZmYjZkW18weDUxMDgoJzB4NGInKV0oXzB4MjAwMWQ3KTt9ZWxzZXtyZXR1cm57J2lkJzpfMHgyMDAxZDdbXzB4NTEwOCgnMHg1MCcpXSgpLCdkZWwnOjB4MX07fX0pKSxfMHg1NmZiNmQ7fWVsc2V7dmFyIF8weDEyZDlmMj1fMHgyMDAxZDdbXzB4NTEwOCgnMHg1MScpXShfMHhjOWQ3MmIsXzB4MTExOTU5KTtfMHgxMmQ5ZjIhPT0tMHgxJiYoXzB4MTExOTU5PV8weDEyZDlmMisweDEpO319Y2F0Y2goXzB4NGQxMDhiKXtjb25zb2xlWyd3YXJuJ10oXzB4NTEwOCgnMHg1MicpK18weDIwMDFkNysnOlx4MjAnKyhfMHg0ZDEwOGImJl8weDRkMTA4YlsnbWVzc2FnZSddKSk7fX07fSx7Jy4vYmFiZWxUcmF2ZXJzZSc6MHgyLCcuL2JhYmVsVmlzaXRvcic6MHgzLCdAYmFiZWwvcGFyc2VyJzp2b2lkIDB4MCwncGF0aCc6dm9pZCAweDB9XSwyOltmdW5jdGlvbihfMHg1ODM0ZTAsXzB4NTUxYzE1LF8weDU0MGZhYSl7dmFyIF8weGEwZWNjND1mdW5jdGlvbihfMHg1ODM0ZTAsXzB4NTUxYzE1KXt2YXIgXzB4NTQwZmFhPV8weDU4MzRlMFsndHlwZSddO2lmKF8weDU0MGZhYSYmXzB4NTgzNGUwW18weDUxMDgoJzB4NTMnKV0pe2lmKF8weDUxMDgoJzB4NTQnKSE9PV8weDUxMDgoJzB4NTUnKSl7dmFyIF8weDE1ODNmOT1fMHg1NTFjMTVbX1tfMHg1MTA4KCcweDU2JyldKF8weDU0MGZhYSxfMHg1MTA4KCcweDU3JykpfHxfMHg1MTA4KCcweDU4Jyk9PT1fMHg1NDBmYWE/XzB4NTEwOCgnMHg1NycpOl8weDU0MGZhYV07aWYoXzB4MTU4M2Y5JiZfMHgxNTgzZjkoXzB4NTgzNGUwKSxfMHg1MTA4KCcweDU5Jyk9PT1fMHg1NDBmYWF8fF8weDUxMDgoJzB4NWEnKT09PV8weDU0MGZhYXx8XzB4NTEwOCgnMHg1YicpPT09XzB4NTQwZmFhfHxfMHg1MTA4KCcweDVjJyk9PT1fMHg1NDBmYWF8fF8weDUxMDgoJzB4NWQnKT09PV8weDU0MGZhYXx8XzB4NTEwOCgnMHg1ZScpPT09XzB4NTQwZmFhfHxfMHg1MTA4KCcweDVmJyk9PT1fMHg1NDBmYWEpcmV0dXJuO31lbHNle3ZhciBfMHgxMTFmMGQ9dGhpc1tfMHg1MTA4KCcweDYwJyldW18weDU4MzRlMF07aWYoXzB4MTExZjBkJiYhXzB4MTExZjBkWydiaW5hcnknXSl7cChfMHg1MTA4KCcweDYxJyksXzB4MTExZjBkW18weDUxMDgoJzB4MzQnKV0pO3ZhciBfMHgxYjJjODA9dGhpc1snX2xydUNhY2hlJ11bXzB4NTEwOCgnMHg2MicpXShfMHgxMTFmMGRbXzB4NTEwOCgnMHgzNCcpXSk7dGhpc1tfMHg1MTA4KCcweDYzJyldW18weDUxMDgoJzB4NjQnKV0oXzB4MTExZjBkW18weDUxMDgoJzB4MzQnKV0sXzB4YTBlY2M0JiZfW18weDUxMDgoJzB4NjUnKV0oXzB4MWIyYzgwKT9fMHgxYjJjODA6XzB4NTUxYzE1KSxfMHgxMTFmMGRbJ2NoYW5nZVRzJ10rKyx0aGlzWydfZW1pdEZpbGVDaGFuZ2UnXShfW18weDUxMDgoJzB4NjYnKV0oe30sXzB4MTExZjBkLHsnY29udGVudCc6XzB4NTUxYzE1fSksXzB4MWIyYzgwLF8weDU0MGZhYSwhMHgwLF8weGEwZWNjNCksXzB4MTExZjBkW18weDUxMDgoJzB4NjcnKV09XzB4YTBlY2M0O319fWZvcih2YXIgXzB4MTI0Yjk2IGluIF8weDU4MzRlMClpZihfMHg1ODM0ZTBbXzB4NTEwOCgnMHg2OCcpXShfMHgxMjRiOTYpJiZfMHg1MTA4KCcweDUzJykhPT1fMHgxMjRiOTYmJl8weDUxMDgoJzB4NjknKSE9PV8weDEyNGI5NiYmXzB4NTEwOCgnMHg2YScpIT09XzB4MTI0Yjk2JiZfMHg1MTA4KCcweDZiJykhPT1fMHgxMjRiOTYmJiduYW1lJyE9PV8weDEyNGI5Nil7dmFyIF8weDJkODNjYT1fMHg1ODM0ZTBbXzB44oCLMTI0Yjk2XTtfMHgyZDgzY2EmJl9bXzB4NTEwOCgnMHg2YycpXShfMHgyZDgzY2EpJiZfMHhhMGVjYzQoXzB4MmQ4M2NhLF8weDU1MWMxNSk7fX07XzB4NTUxYzE1W18weDUxMDgoJzB4MicpXT1mdW5jdGlvbihfMHg1ODM0ZTAsXzB4NTUxYzE1KXtfMHhhMGVjYzQoXzB4NTgzNGUwLF8weDU1MWMxNSk7fTt9LHt9XSwzOltmdW5jdGlvbihfMHgyY2M5NTYsXzB4MWE5N2MyLF8weDNhNjgyNyl7XzB4MWE5N2MyW18weDUxMDgoJzB4MicpXT1mdW5jdGlvbihfMHgyY2M5NTYpe3JldHVybnsnU3RhdGVtZW50JzpmdW5jdGlvbihfMHgxYTk3YzIpe3N3aXRjaChfMHgxYTk3YzJbXzB4NTEwOCgnMHg2OScpXSl7Y2FzZSBfMHg1MTA4KCcweDZkJyk6Y2FzZSBfMHg1MTA4KCcweDZlJyk6Y2FzZSBfMHg1MTA4KCcweDZmJyk6Y2FzZSBfMHg1MTA4KCcweDcwJyk6XzB4MWE5N2MyW18weDUxMDgoJzB4NzEnKV0mJl8weDJjYzk1NihfMHgxYTk3YzJbXzB4NTEwOCgnMHg3MScpXVtfMHg1MTA4KCcweDUzJyldKTticmVhaztjYXNlJ0Zvck9mU3RhdGVtZW50JzpjYXNlIF8weDUxMDgoJzB4NzInKTpfMHgxYTk3YzJbJ3JpZ2h0J10mJl8weDJjYzk1NihfMHgxYTk3YzJbXzB4NTEwOCgnMHg3MycpXVtfMHg1MTA4KCcweDUzJyldKTticmVhaztjYXNlJ1N3aXRjaFN0YXRlbWVudCc6XzB4MmNjOTU2KF8weDFhOTdjMlsnZGlzY3JpbWluYW50J11bXzB4NTEwOCgnMHg1MycpXSk7YnJlYWs7Y2FzZSBfMHg1MTA4KCcweDVlJyk6Y2FzZSBfMHg1MTA4KCcweDVmJyk6Y2FzZSBfMHg1MTA4KCcweDc0Jyk6Y2FzZSBfMHg1MTA4KCcweDU4Jyk6Y2FzZSBfMHg1MTA4KCcweDc1Jyk6Y2FzZSBfMHg1MTA4KCcweDc2Jyk6XzB4MmNjOTU2KF8weDFhOTdjMltfMHg1MTA4KCcweDUzJyldKTt9fSwnQXJyb3dGdW5jdGlvbkV4cHJlc3Npb24nOmZ1bmN0aW9uKF8weDFhOTdjMil7aWYoXzB4NTEwOCgnMHg3NycpPT09XzB4NTEwOCgnMHg3NycpKXtfMHgxYTk3YzJbXzB4NTEwOCgnMHg3OCcpXSYmXzB4NTEwOCgnMHg3OScpIT09XzB4MWE5N2MyW18weDUxMDgoJzB4NzgnKV1bXzB4NTEwOCgnMHg2OScpXSYmXzB4MmNjOTU2KF8weDFhOTdjMlsnYm9keSddW18weDUxMDgoJzB4NTMnKV0pO31lbHNle3JldHVybiBfMHgyY2M5NTZbXzB4NTEwOCgnMHg3YScpXSgpO319LCdMb2dpY2FsRXhwcmVzc2lvbic6ZnVuY3Rpb24oXzB4MWE5N2MyKXtfMHgyY2M5NTYoXzB4MWE5N2MyW18weDUxMDgoJzB4N2InKV1bXzB4NTEwOCgnMHg1MycpXSksXzB4MmNjOTU2KF8weDFhOTdjMltfMHg1MTA4KCcweDczJyldW18weDUxMDgoJzB4NTMnKV0pO30sJ0NvbmRpdGlvbmFsRXhwcmVzc2lvbic6ZnVuY3Rpb24oXzB4MWE5N2MyKXtfMHgyY2M5NTYoXzB4MWE5N2MyW18weDUxMDgoJzB4N2MnKV1bJ2xvYyddKSxfMHgyY2M5NTYoXzB4MWE5N2MyWydhbHRlcm5hdGUnXVtfMHg1MTA4KCcweDUzJyldKTt9fTt9O30se31dLDQ6W2Z1bmN0aW9uKF8weDNhNTZkNCxfMHgxODFkNTEsXzB4ZWEzYTYxKXt2YXIgXzB4YWI5MWIzPV8weDNhNTZkNChfMHg1MTA4KCcweDM0JykpLF8weDM0YjJmND1fMHgzYTU2ZDQoXzB4NTEwOCgnMHg3ZCcpKSxfMHgzZjBmMDM9XzB4M2E1NmQ0KF8weDUxMDgoJzB4N2UnKSksXzB4NmJmYjk5PV8weDNhNTZkNChfMHg1MTA4KCcweDdmJykpLF8weDQzYzNhMz1fMHgzYTU2ZDQoJy4vZmlsZUNhY2hlTWlkZGxld2FyZScpLF8weGIyYmZiYz1fMHgzYTU2ZDQoXzB4NTEwOCgnMHg4MCcpKSxfMHgzY2MzZWU9XzB4M2YwZjAzW18weDUxMDgoJzB4ODEnKV0oXzB4YWI5MWIzW18weDUxMDgoJzB4ODInKV0oX19kaXJuYW1lLF8weDUxMDgoJzB4ODMnKSxfMHg1MTA4KCcweDg0JyksJ3NhbmRib3guaHRtbCcpKVsndG9TdHJpbmcnXSgpLF8weDNmMGZmZj0nX193YWxsYWJ5X18nLF8weDUzOThjYj1sb2dnZXJbJ2NyZWF0ZSddKF8weDUxMDgoJzB4ODUnKSlbJ2RlYnVnJ10sXzB4NTdlYjIxPWZ1bmN0aW9uKF8weDNhNTZkNCxfMHgxODFkNTEpe3ZhciBfMHhlYTNhNjE9dGhpcztfMHhlYTNhNjFbJ19wcm9qZWN0J109XzB4M2E1NmQ0LF8weGVhM2E2MVtfMHg1MTA4KCcweDg2JyldPV8weDE4MWQ1MSxfMHhlYTNhNjFbXzB4NTEwOCgnMHg4NycpXT1fMHhlYTNhNjFbJ19wcm9qZWN0J11bJ19pbnN0cnVtZW50ZWRSb290J10rXzB4YWI5MWIzW18weDUxMDgoJzB4ODgnKV0sXzB4ZWEzYTYxW18weDUxMDgoJzB4ODknKV09XzB4M2E1NmQ0W18weDUxMDgoJzB4OGEnKV0oKVtfMHg1MTA4KCcweDhiJyldLF8weGVhM2E2MVtfMHg1MTA4KCcweDhjJyldPSEhXzB4M2E1NmQ0W18weDUxMDgoJzB4OGEnKV0oKVtfMHg1MTA4KCcweDhkJyldLF8weGVhM2E2MVtfMHg1MTA4KCcweDhlJyldPSEhXzB4M2E1NmQ0W18weDUxMDgoJzB4OGEnKV0oKVtfMHg1MTA4KCcweDhmJyldLF8weGVhM2E2MVsnX21heExvZ0VudHJ5U2l6ZSddPV8weDNhNTZkNFtfMHg1MTA4KCcweDhhJyldKClbJ21heExvZ0VudHJ5U2l6ZSddLF8weGVhM2E2MVsnX3NhbmRib3hIdG1sJ109e30sXzB4ZWEzYTYxW18weDUxMDgoJzB4OTAnKV09XzB4M2E1NmQ0W18weDUxMDgoJzB4OGEnKV0oKVsnZW52J11bJ3JlcG9ydDQwNEFzRXJyb3InXSxfMHhlYTNhNjFbXzB4NTEwOCgnMHg2MycpXT1fMHhlYTNhNjFbJ19wcm9qZWN0J11bXzB4NTEwOCgnMHg2MycpXSxfMHhlYTNhNjFbJ193YWxsYWJ5RmlsZUlkUHJlZml4J109XzB4ZWEzYTYxW18weDUxMDgoJzB4ODYnKV1bXzB4NTEwOCgnMHg5MScpXSgpLF8weGVhM2E2MVsnX2FwcCddPV8weDZiZmI5OSgpLF8weGVhM2E2MVtfMHg1MTA4KCcweDkyJyldW18weDUxMDgoJzB4OTMnKV0oXzB4MzRiMmY0KHsnZmlsdGVyJzpmdW5jdGlvbihfMHgzYTU2ZDQpe3JldHVybn5fMHgzYTU2ZDRbXzB4NTEwOCgnMHg5NCcpXVtfMHg1MTA4KCcweDUxJyldKF8weDUxMDgoJzB4OTUnKSk7fX0pKSxfMHhlYTNhNjFbJ19hcHAnXVsndXNlJ10oXzB4NTEwOCgnMHg5NicpLGZ1bmN0aW9uKF8weDNhNTZkNCxfMHgxODFkNTEpe18weDE4MWQ1MVsnc2VuZCddKF8weGVhM2E2MVsnX3NhbmRib3hIdG1sJ11bXzB4M2E1NmQ0W18weDUxMDgoJzB4OTcnKV1bJ2lkJ11dKTt9KSxfMHgzYTU2ZDRbXzB4NTEwOCgnMHg4YScpXSgpW18weDUxMDgoJzB4OTgnKV1bJ3BhdGgnXSYmXzB4ZWEzYTYxW18weDUxMDgoJzB4OTInKV1bXzB4NTEwOCgnMHg5MycpXSgnLycrXzB4M2YwZmZmKycvJytfMHgzYTU2ZDRbXzB4NTEwOCgnMHg4YScpXSgpW18weDUxMDgoJzB4OTgnKV1bXzB4NTEwOCgnMHg5OScpXSsnL2ZyYW1ld29yay5qcycsXzB4NDNjM2EzW18weDUxMDgoJzB4OWEnKV0oeydtYWluJzp7J3Jvb3QnOl8weGFiOTFiM1tfMHg1MTA4KCcweDgyJyldKF8weDNhNTZkNFsnX2xvY2FsUm9vdCddLF8weDNhNTZkNFtfMHg1MTA4KCcweDhhJyldKClbXzB4NTEwOCgnMHg5OCcpXVsncGF0aCddKX19KSksXzB4ZWEzYTYxW18weDUxMDgoJzB4OTInKV1bXzB4NTEwOCgnMHg5MycpXSgnLycrXzB4M2YwZmZmK18weDUxMDgoJzB4OWInKSxfMHg0M2MzYTNbXzB4NTEwOCgnMHg5YScpXSh7J21haW4nOnsncm9vdCc6XzB4YWI5MWIzW18weDUxMDgoJzB4ODInKV0oX19kaXJuYW1lLF8weDUxMDgoJzB4OWMnKSl9fSkpLF8weGVhM2E2MVtfMHg1MTA4KCcweDkyJyldW18weDUxMDgoJzB4OTMnKV0oJy8nK18weDNmMGZmZixfMHg0M2MzYTNbJ2NyZWF0ZSddKHsnbWFpbic6eydyb290JzpfMHhhYjkxYjNbJ2pvaW4nXShfX2Rpcm5hbWUsJ3J1bm5lcnMnLF8weDUxMDgoJzB4ODQnKSl9fSkpLF8weDNhNTZkNFsnc2V0dGluZ3MnXSgpW18weDUxMDgoJzB4OWQnKV0oXzB4ZWEzYTYxW18weDUxMDgoJzB4OTInKV0sXzB4NmJmYjk5KSxfMHhlYTNhNjFbXzB4NTEwOCgnMHg5ZScpXVtfMHg1MTA4KCcweDlmJyldKCk/XzB4ZWEzYTYxWydfYXBwJ11bXzB4NTEwOCgnMHg5MycpXShfMHg0M2MzYTNbXzB4NTEwOCgnMHg5YScpXSh7J21haW4nOnsncm9vdCc6XzB4ZWEzYTYxW18weDUxMDgoJzB4ODcnKV0sJ2NhY2hlJzpfMHhlYTNhNjFbJ19scnVDYWNoZSddfSwnYWx0Jzp7J3Jvb3QnOl8weGVhM2E2MVtfMHg1MTA4KCcweDllJyldW18weDUxMDgoJzB4YTAnKV0sJ3JlYWQnOmZ1bmN0aW9uKF8weDNhNTZkNCxfMHgxODFkNTEpe2lmKF8weDUxMDgoJzB4YTEnKSE9PSdvYmpRYicpe3ZhciBfMHgxNjgzMjk9XzB4M2E1NmQ0WydrZXknXSgpLF8weDQ1MzE5MT1fMHhlYTNhNjFbXzB4MTY4MzI5XTtfMHg0NTMxOTE/XzB4YWI5MWIzW18weDUxMDgoJzB4YTInKV1bXzB4MTY4MzI5XT1fMHg0NTMxOTE6ZGVsZXRlIF8weGFiOTFiM1snX2ZpbGVzV2l0aE1lc3NhZ2VzJ11bXzB4MTY4MzI5XTt9ZWxzZXt2YXIgXzB4MzRiMmY0PV8weGIyYmZiY1tfMHg1MTA4KCcweGEzJyldKF8weGFiOTFiM1tfMHg1MTA4KCcweGE0JyldKF8weGVhM2E2MVsnX3Byb2plY3QnXVsnX2xvY2FsUHJvamVjdERpciddLF8weDNhNTZkNCkpO18weGVhM2E2MVtfMHg1MTA4KCcweDllJyldW18weDUxMDgoJzB4YTUnKV0oXzB4MzRiMmY0KT9fMHhlYTNhNjFbJ19wcm9qZWN0J11bJ2dldExhdGVzdE9yaWdpbmFsRmlsZUNvbnRlbnRCeVBhdGhBc3luYyddKF8weDM0YjJmNClbJ3RoZW4nXShmdW5jdGlvbihfMHgzYTU2ZDQpe2lmKCdPcUN4ZSc9PT1fMHg1MTA4KCcweGE2Jykpe3JldHVybiBfMHgxODFkNTEobnVsbCxfMHgzYTU2ZDQpO31lbHNle3JldHVybiduYXZpZ2F0aW9uUmVxdWVzdGVkJz09PV8weDNhNTZkNFsndHlwZSddJiZfMHgxODFkNTFbXzB4NTEwOCgnMHhhNycpXShfMHg1MTA4KCcweGE4JyksXzB4M2E1NmQ0KTt9fSlbXzB4NTEwOCgnMHhhOScpXShmdW5jdGlvbihfMHgzYTU2ZDQpe2lmKF8weDUxMDgoJzB4YWEnKSE9PV8weDUxMDgoJzB4YWEnKSl7cmV0dXJuIF9bJ3ZhbHVlcyddKHRoaXNbXzB4NTEwOCgnMHhhYicpXSk7fWVsc2V7cmV0dXJuIF8weDE4MWQ1MShfMHgzYTU2ZDQpO319KTpfMHgxODFkNTEobmV3IEVycm9yKF8weDUxMDgoJzB4YWMnKStfMHgzNGIyZjQrXzB4NTEwOCgnMHhhZCcpKSk7fX19fSxfMHhlYTNhNjFbJ19yZXBvcnQ0MDRBc0Vycm9yJ10pKTpfMHhlYTNhNjFbXzB4NTEwOCgnMHg5MicpXVtfMHg1MTA4KCcweDkzJyldKF8weDQzYzNhM1tfMHg1MTA4KCcweDlhJyldKHsnbWFpbic6eydyb290JzpfMHhlYTNhNjFbXzB4NTEwOCgnMHg4NycpXSwnY2FjaGUnOl8weGVhM2E2MVtfMHg1MTA4KCcweDYzJyldfX0sXzB4ZWEzYTYxW18weDUxMDgoJzB4OTAnKV0pKTt9O18weDU3ZWIyMVtfMHg1MTA4KCcweGFlJyldPXsncHJlcGFyZVNhbmRib3gnOmZ1bmN0aW9uKF8weDNhNTZkNCxfMHgxODFkNTEsXzB4ZWEzYTYxKXtpZihfMHg1MTA4KCcweGFmJykhPT1fMHg1MTA4KCcweGFmJykpe3ZhciBfMHgyZTZmY2M9bmV3IEJ1ZmZlcihKU09OW18weDUxMDgoJzB4YjAnKV0oeydldmVudCc6XzB4M2E1NmQ0LCdkYXRhJzpfMHgxODFkNTEsJ3NvdXJjZSc6dGhpc1tfMHg1MTA4KCcweGIxJyldKCksJ3NvdXJjZUlkJzpfMHhiMmJmYmN9KSk7dGhpc1tfMHg1MTA4KCcweGIyJyldWydzZW5kJ10oXzB4MmU2ZmNjLDB4MCxfMHgyZTZmY2NbJ2xlbmd0aCddLF8weDNjYzNlZVtfMHg1MTA4KCcweGIzJyldLF8weDNjYzNlZVtfMHg1MTA4KCcweGI0JyldKTt9ZWxzZXt2YXIgXzB4YWI5MWIzPXRoaXM7XzB4M2E1NmQ0WydhbGxGaWxlc0hhc2gnXT1fW18weDUxMDgoJzB4YjUnKV0oXzB4M2E1NmQ0W18weDUxMDgoJzB4YjYnKV1bXzB4NTEwOCgnMHhiNycpXShfMHgzYTU2ZDRbXzB4NTEwOCgnMHhiOCcpXSksZnVuY3Rpb24oXzB4M2E1NmQ0LF8weDE4MWQ1MSl7cmV0dXJuIF8weDNhNTZkNFtfMHgxODFkNTFbXzB4NTEwOCgnMHhiOScpXV09eyd0cyc6XzB4MTgxZDUxWyd0cyddLCdpZCc6XzB4MTgxZDUxW18weDUxMDgoJzB4YmEnKV0mJl8weDE4MWQ1MVtfMHg1MTA4KCcweGJiJyldP18weDE4MWQ1MVtfMHg1MTA4KCcweGJiJyldOl8weDE4MWQ1MVsnaWQnXX0sXzB4M2E1NmQ0O30se30pO3ZhciBfMHgzNGIyZjQ9XzB4M2E1NmQ0W18weDUxMDgoJzB4YjYnKV1bXzB4NTEwOCgnMHhiNycpXShfMHgzYTU2ZDRbXzB4NTEwOCgnMHhiOCcpXSksXzB4M2YwZjAzPV8weDNhNTZkNFsnZmlsZXNUb0xvYWQnXVtfMHg1MTA4KCcweGI3JyldKF8weDNhNTZkNFtfMHg1MTA4KCcweGJjJyldKSxfMHg2YmZiOTk9X1tfMHg1MTA4KCcweGI1JyldKF8weDNhNTZkNFtfMHg1MTA4KCcweGJjJyldLGZ1bmN0aW9uKF8weDNhNTZkNCxfMHgxODFkNTEpe3JldHVybiBfMHgzYTU2ZDRbXzB4MTgxZDUxWydpZCddXT1fMHgxODFkNTEsXzB4M2E1NmQ0O30se30pO18weDUzOThjYihfMHg1MTA4KCcweGJkJykrXzB4M2YwZjAzW18weDUxMDgoJzB4YmUnKV0pO3ZhciBfMHg0M2MzYTM9XzB4YWI5MWIzWydfd29ya2VyUG9vbCddWydyZWNlaXZlclBvcnQnXSgpO18weGFiOTFiM1snX2FueUluY2x1ZGVkRXNtJ109ITB4MTt2YXIgXzB4YjJiZmJjPV8weGFiOTFiM1tfMHg1MTA4KCcweDllJyldW18weDUxMDgoJzB4OWYnKV0oKTtfMHhhYjkxYjNbJ19zYW5kYm94SHRtbCddW18weGVhM2E2MV09XzB4M2NjM2VlW18weDUxMDgoJzB4YmYnKV0oXzB4NTEwOCgnMHhjMCcpLGZ1bmN0aW9uKCl7cmV0dXJuIF9bXzB4NTEwOCgnMHhiNScpXShfMHgzNGIyZjQsZnVuY3Rpb24oXzB4M2E1NmQ0LF8weDE4MWQ1MSl7cmV0dXJuIF8weDNhNTZkNCsoX1tfMHg1MTA4KCcweGMxJyldKF8weDE4MWQ1MVsnaWQnXSk/XzB4NTEwOCgnMHhjMicpK18weDE4MWQ1MVsnaWQnXStfMHg1MTA4KCcweGMzJykrXzB4MTgxZDUxW18weDUxMDgoJzB4YzQnKV0rXzB4NTEwOCgnMHhjNScpOicnKTt9LCc8c2NyaXB0PihmdW5jdGlvbigpXHgyMHt3aW5kb3cuJF8k4oCLcmVjZWl2ZXJQb3J0XHgyMD1ceDIwJytfMHg0M2MzYTMrXzB4NTEwOCgnMHhjNicpK18weDE4MWQ1MStfMHg1MTA4KCcweGM3JykrSlNPTltfMHg1MTA4KCcweGIwJyldKF8weGIyYmZiYz9fMHhhYjkxYjNbXzB4NTEwOCgnMHg5ZScpXVtfMHg1MTA4KCcweGEwJyldOl8weGFiOTFiM1snX2Jhc2VEaXInXSkrXzB4NTEwOCgnMHhjOCcpKzB4MTg2YTAqKF8weGVhM2E2MSsweDEpK18weDUxMDgoJzB4YzknKStfMHhhYjkxYjNbXzB4NTEwOCgnMHg4YycpXStfMHg1MTA4KCcweGNhJykrXzB4YWI5MWIzW18weDUxMDgoJzB4OGUnKV0rXzB4NTEwOCgnMHhjYicpK18weGFiOTFiM1tfMHg1MTA4KCcweGNjJyldK18weDUxMDgoJzB4Y2QnKSkrXzB4NTEwOCgnMHhjZScpK18weGFiOTFiM1tfMHg1MTA4KCcweDllJyldW18weDUxMDgoJzB4OGEnKV0oKVtfMHg1MTA4KCcweGNmJyldKyc7d2luZG93LiRfJGV4cHJlc3Npb25zVG9FdmFsdWF0ZT0nK0pTT05bJ3N0cmluZ2lmeSddKF8weDNhNTZkNFtfMHg1MTA4KCcweGQwJyldKStfMHg1MTA4KCcweGQxJykrSlNPTltfMHg1MTA4KCcweGIwJyldKF8weDNhNTZkNFtfMHg1MTA4KCcweGQyJyldKStfMHg1MTA4KCcweGQzJykrKF8weDNhNTZkNFtfMHg1MTA4KCcweGQ0JyldP0pTT05bJ3N0cmluZ2lmeSddKF8weDNhNTZkNFtfMHg1MTA4KCcweGQ0JyldKTpfMHg1MTA4KCcweGQ1JykpK18weDUxMDgoJzB4ZDYnKStKU09OW18weDUxMDgoJzB4YjAnKV0oX1tfMHg1MTA4KCcweGQ3JyldKF8weDNhNTZkNFtfMHg1MTA4KCcweGI4JyldKVtfMHg1MTA4KCcweGQ4JyldKGZ1bmN0aW9uKF8weDNhNTZkNCl7cmV0dXJuIV8weDNhNTZkNFtfMHg1MTA4KCcweGQ5JyldO30pW18weDUxMDgoJzB4ZGEnKV0oZnVuY3Rpb24oXzB4MTgxZDUxKXtpZihfMHg1MTA4KCcweGRiJykhPT1fMHg1MTA4KCcweGRiJykpe18weDNhNTZkND0nOicrXzB4M2E1NmQ0O3ZhciBfMHg1YjFmNWU9XzB4NmJmYjk5W18weDNhNTZkNF07XzB4NWIxZjVlfHwoXzB4NWIxZjVlPXt9LF8weDZiZmI5OVtfMHgzYTU2ZDRdPV8weDViMWY1ZSksXzB4NmJmYjk5PV8weDViMWY1ZTt9ZWxzZXtyZXR1cm57J3BhdGgnOl8weGIyYmZiYz9fMHgxODFkNTFbXzB4NTEwOCgnMHhiOScpXTpfMHgxODFkNTFbXzB4NTEwOCgnMHhkYycpXSwnbG9hZGVkJzpfMHgxODFkNTFbXzB4NTEwOCgnMHhkZCcpXSYmISFfMHg2YmZiOTlbXzB4MTgxZDUxWydpZCddXSwnaWQnOihfMHgzYTU2ZDRbXzB4NTEwOCgnMHhkMicpXVtfMHgxODFkNTFbJ25vcm1hbGl6ZWRSZWxhdGl2ZVBhdGgnXV18fHt9KVsnaWQnXX07fX0pW18weDUxMDgoJzB4ZGUnKV0oKSkrXzB4NTEwOCgnMHhkZicpK18weDNmMGZmZitfMHg1MTA4KCcweGUwJykrXzB4M2YwZmZmKycvJytfMHgzYTU2ZDRbXzB4NTEwOCgnMHhlMScpXVsndmVyc2lvbiddKycvZnJhbWV3b3JrLmpzXHgyMj48L3NjcmlwdD48c2NyaXB0XHgyMHNyYz1ceDIyJytfMHgzZjBmZmYrJy8nK18weDNhNTZkNFtfMHg1MTA4KCcweGUxJyldW18weDUxMDgoJzB4ZTInKV0rXzB4NTEwOCgnMHhlMycpK18weDNmMGZmZisnLycrXzB4M2E1NmQ0W18weDUxMDgoJzB4ZTEnKV1bXzB4NTEwOCgnMHhlNCcpXSsnL3JlcG9ydGVyLmpzXHgyMj48L3NjcmlwdD4nK19bXzB4NTEwOCgnMHhiNScpXShfMHgzZjBmMDMsZnVuY3Rpb24oXzB4M2E1NmQ0LF8weDE4MWQ1MSl7XzB4YWI5MWIzW18weDUxMDgoJzB4ZTUnKV09XzB4YWI5MWIzW18weDUxMDgoJzB4ZTUnKV18fF8weDE4MWQ1MVtfMHg1MTA4KCcweGU2JyldO3ZhciBfMHhlYTNhNjE9XzB4MTgxZDUxW18weDUxMDgoJzB4YmEnKV0sXzB4MzRiMmY0PV8weDE4MWQ1MVsndHMnXSsoXzB4ZWEzYTYxP18weDE4MWQ1MVtfMHg1MTA4KCcweGJiJyldP18weGFiOTFiM1tfMHg1MTA4KCcweGU3JyldK18weDE4MWQ1MVtfMHg1MTA4KCcweGJiJyldOicnOl8weGFiOTFiM1snX3dhbGxhYnlGaWxlSWRQcmVmaXgnXStfMHgxODFkNTFbJ2lkJ10pO3N3aXRjaChfMHgxODFkNTFbXzB4NTEwOCgnMHg2OScpXSl7Y2FzZSdqcyc6Y2FzZSBfMHg1MTA4KCcweGU4Jyk6Y2FzZSBfMHg1MTA4KCcweDM5Jyk6Y2FzZSBfMHg1MTA4KCcweGU5Jyk6Y2FzZSdlczcnOnJldHVybiBfMHgzYTU2ZDQrXzB4NTEwOCgnMHhlYScpKyhfMHgxODFkNTFbXzB4NTEwOCgnMHhlNicpXT8ndHlwZT1ceDIybW9kdWxlXHgyMic6JycpK18weDUxMDgoJzB4ZWInKStfMHgxODFkNTFbXzB4NTEwOCgnMHhiOScpXSsnPycrXzB4MzRiMmY0K18weDUxMDgoJzB4ZWMnKTtjYXNlIF8weDUxMDgoJzB4ZWQnKTpjYXNlJ2h0bSc6cmV0dXJuIF8weDNhNTZkNCtfMHg1MTA4KCcweGVlJykrXzB4MTgxZDUxW18weDUxMDgoJzB4YjknKV0rJz8nK18weDE4MWQ1MVsndHMnXStfMHg1MTA4KCcweGVmJyk7Y2FzZSdjc3MnOnJldHVybiBfMHgzYTU2ZDQrJzxsaW5rXHgyMHJlbD1ceDIyc3R5bGVzaGVldFx4MjJceDIwdHlwZT1ceDIydGV4dC9jc3NceDIyXHgyMGhyZWY9XHgyMicrXzB4MTgxZDUxWydub3JtYWxpemVkUmVsYXRpdmVQYXRoJ10rJz8nK18weDM0YjJmNCtfMHg1MTA4KCcweGYwJyk7ZGVmYXVsdDpyZXR1cm4gXzB4M2E1NmQ0O319LCcnKSsoXzB4YWI5MWIzW18weDUxMDgoJzB4ODknKV0/JzxzY3JpcHQ+KCcrXzB4YWI5MWIzWydfaW5pdGlhbGl6ZXInXSsnKSh3aW5kb3cud2FsbGFieSk7PC9zY3JpcHQ+JzonJykrXzB4NTEwOCgnMHhlYScpKyhfMHhhYjkxYjNbJ19hbnlJbmNsdWRlZEVzbSddP18weDUxMDgoJzB4ZjEnKTonJykrXzB4NTEwOCgnMHhlYicpK18weDNmMGZmZisnLycrXzB4M2E1NmQ0W18weDUxMDgoJzB4ZTEnKV1bJ3N0YXJ0ZXInXStfMHg1MTA4KCcweGYyJyk7fSk7dmFyIF8weDU3ZWIyMT1fMHhhYjkxYjNbJ3NhbmRib3hSb290VXJsJ10oKStfMHg1MTA4KCcweGYzJykrXzB4ZWEzYTYxK18weDUxMDgoJzB4ZjQnKTtyZXR1cm4gXzB4NTM5OGNiKF8weDUxMDgoJzB4ZjUnKSxfMHhhYjkxYjNbJ3NhbmRib3hOYW1lJ10oXzB4ZWEzYTYxLF8weDE4MWQ1MSksXzB4NTdlYjIxKSxRW18weDUxMDgoJzB4ZjYnKV0oXzB4NTdlYjIxKTt9fSwnZG9lc1NhbmRib3hDb250YWluRVNNb2R1bGVzJzpmdW5jdGlvbigpe3JldHVybiB0aGlzW18weDUxMDgoJzB4ZTUnKV07fSwnc2FuZGJveFJvb3RVcmwnOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbJ19zYW5kYm94Um9vdFVybCddP3RoaXNbXzB4NTEwOCgnMHhmNycpXToodGhpc1tfMHg1MTA4KCcweGY3JyldPV8weDUxMDgoJzB4ZjgnKSt0aGlzW18weDUxMDgoJzB4ODYnKV1bXzB4NTEwOCgnMHhmOScpXSgpKycvJyx0aGlzW18weDUxMDgoJzB4ZjcnKV0pO30sJ3dlYkFwcCc6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc1tfMHg1MTA4KCcweDkyJyldO30sJ3NhbmRib3hOYW1lJzpmdW5jdGlvbihfMHgzYTU2ZDQsXzB4MTgxZDUxKXtpZihfMHg1MTA4KCcweGZhJykhPT1fMHg1MTA4KCcweGZhJykpe18weDM0YjJmNFtfMHg1MTA4KCcweGZiJyldfHwoXzB4MzRiMmY0WydfaXNSZWFkeSddPSEweDAsXzB4MTgxZDUxJiZfMHg1Mzk4Y2IoXzB4NTEwOCgnMHhmYycpKSxfMHgzYTU2ZDQoXzB4MzRiMmY0WydfZmlsZXNCeVBhdGgnXSkpO31lbHNle3JldHVybiBfMHg1MTA4KCcweGZkJykrXzB4M2E1NmQ0K18weDUxMDgoJzB4ZmUnKStfMHgxODFkNTE7fX19LF8weDE4MWQ1MVtfMHg1MTA4KCcweDInKV09XzB4NTdlYjIxO30seycuL2ZpbGVDYWNoZU1pZGRsZXdhcmUnOjB4MTksJy4vdXRpbHMnOjB4MWUsJ2NvbXByZXNzaW9uJzp2b2lkIDB4MCwnZXhwcmVzcyc6dm9pZCAweDAsJ2dyYWNlZnVsLWZzJzp2b2lkIDB4MCwncGF0aCc6dm9pZCAweDB9XSw1OltmdW5jdGlvbihfMHg0ZDVhMGMsXzB4NDFmY2VkLF8weDI3YTM0YSl7dmFyIF8weDgwNzNlOT10aGlzJiZ0aGlzW18weDUxMDgoJzB4ZmYnKV18fGZ1bmN0aW9uKF8weDRkNWEwYyxfMHg0MWZjZWQsXzB4MjdhMzRhLF8weDgwNzNlOSl7cmV0dXJuIG5ldyhfMHgyN2EzNGF8fChfMHgyN2EzNGE9UHJvbWlzZSkpKGZ1bmN0aW9uKF8weDM4YjYzYixfMHg0ZjEyZWYpe2Z1bmN0aW9uIF8weDI0YWQ5NChfMHg0ZDVhMGMpe2lmKF8weDUxMDgoJzB4MTAwJyk9PT1fMHg1MTA4KCcweDEwMCcpKXt0cnl7XzB4MmE5Yzk4KF8weDgwNzNlOVtfMHg1MTA4KCcweDEwMScpXShfMHg0ZDVhMGMpKTt9Y2F0Y2goXzB4MWFiMWU5KXtfMHg0ZjEyZWYoXzB4MWFiMWU5KTt9fWVsc2V7dGhpc1tfMHg1MTA4KCcweDllJyldW18weDUxMDgoJzB4MTAyJyldKF8weDRkNWEwYyk7fX1mdW5jdGlvbiBfMHgxYTZlYzkoXzB4NGQ1YTBjKXt0cnl7aWYoXzB4NTEwOCgnMHgxMDMnKT09PV8weDUxMDgoJzB4MTAzJykpe18weDJhOWM5OChfMHg4MDczZTlbXzB4NTEwOCgnMHgxMDQnKV0oXzB4NGQ1YTBjKSk7fWVsc2V7JF8kdHJhY2VyWydzdGFydCddKCk7fX1jYXRjaChfMHgzNGYxMDUpe2lmKF8weDUxMDgoJzB4MTA1JykhPT1fMHg1MTA4KCcweDEwNicpKXtfMHg0ZjEyZWYoXzB4MzRmMTA1KTt9ZWxzZXt2YXIgXzB4M2M2NmUzPV8weDM0ZjEwNVtfMHg1MTA4KCcweDUwJyldKCksXzB4NTUwYmRlPV8weDRkNWEwY1snX3JhbmdlcyddW18weDNjNjZlM107XzB4NGQ1YTBjW18weDUxMDgoJzB4MTA3JyldW18weDNjNjZlM109XzB4MzRmMTA1LF8weDU1MGJkZSYmXzB4NTUwYmRlW18weDUxMDgoJzB4MTA4JyldKCk7fX19ZnVuY3Rpb24gXzB4MmE5Yzk4KF8weDRkNWEwYyl7XzB4NGQ1YTBjW18weDUxMDgoJzB4MTA5JyldP18weDM4YjYzYihf4oCLMHg0ZDVhMGNbXzB4NTEwOCgnMHhkZScpXSk6bmV3IF8weDI3YTM0YShmdW5jdGlvbihfMHg0MWZjZWQpe18weDQxZmNlZChfMHg0ZDVhMGNbXzB4NTEwOCgnMHhkZScpXSk7fSlbJ3RoZW4nXShfMHgyNGFkOTQsXzB4MWE2ZWM5KTt9XzB4MmE5Yzk4KChfMHg4MDczZTk9XzB4ODA3M2U5W18weDUxMDgoJzB4MTBhJyldKF8weDRkNWEwYyxfMHg0MWZjZWR8fFtdKSlbXzB4NTEwOCgnMHgxMDEnKV0oKSk7fSk7fSxfMHgzOGI2M2I9dGhpcyYmdGhpc1tfMHg1MTA4KCcweDEwYicpXXx8ZnVuY3Rpb24oXzB4NGQ1YTBjLF8weDQxZmNlZCl7ZnVuY3Rpb24gXzB4MjdhMzRhKF8weDRkNWEwYyl7cmV0dXJuIGZ1bmN0aW9uKF8weDQxZmNlZCl7cmV0dXJuIF8weDgwNzNlOShbXzB4NGQ1YTBjLF8weDQxZmNlZF0pO307fWZ1bmN0aW9uIF8weDgwNzNlOShfMHgyN2EzNGEpe2lmKF8weDUxMDgoJzB4MTBjJyk9PT1fMHg1MTA4KCcweDEwYycpKXtpZihfMHgzOGI2M2IpdGhyb3cgbmV3IFR5cGVFcnJvcignR2VuZXJhdG9yXHgyMGlzXHgyMGFscmVhZHlceDIwZXhlY3V0aW5nLicpO2Zvcig7XzB4MmE5Yzk4Oyl0cnl7aWYoXzB4MzhiNjNiPTB4MSxfMHg0ZjEyZWYmJihfMHgyNGFkOTQ9MHgyJl8weDI3YTM0YVsweDBdP18weDRmMTJlZlsncmV0dXJuJ106XzB4MjdhMzRhWzB4MF0/XzB4NGYxMmVmWyd0aHJvdyddfHwoKF8weDI0YWQ5ND1fMHg0ZjEyZWZbXzB4NTEwOCgnMHgxMGQnKV0pJiZfMHgyNGFkOTRbXzB4NTEwOCgnMHgxMGUnKV0oXzB4NGYxMmVmKSwweDApOl8weDRmMTJlZltfMHg1MTA4KCcweDEwMScpXSkmJiEoXzB4MjRhZDk0PV8weDI0YWQ5NFtfMHg1MTA4KCcweDEwZScpXShfMHg0ZjEyZWYsXzB4MjdhMzRhWzB4MV0pKVtfMHg1MTA4KCcweDEwOScpXSlyZXR1cm4gXzB4MjRhZDk0O3N3aXRjaChfMHg0ZjEyZWY9MHgwLF8weDI0YWQ5NCYmKF8weDI3YTM0YT1bMHgyJl8weDI3YTM0YVsweDBdLF8weDI0YWQ5NFtfMHg1MTA4KCcweGRlJyldXSksXzB4MjdhMzRhWzB4MF0pe2Nhc2UgMHgwOmNhc2UgMHgxOl8weDI0YWQ5ND1fMHgyN2EzNGE7YnJlYWs7Y2FzZSAweDQ6cmV0dXJuIF8weDJhOWM5OFtfMHg1MTA4KCcweDEwZicpXSsrLHsndmFsdWUnOl8weDI3YTM0YVsweDFdLCdkb25lJzohMHgxfTtjYXNlIDB4NTpfMHgyYTljOThbXzB4NTEwOCgnMHgxMGYnKV0rKyxfMHg0ZjEyZWY9XzB4MjdhMzRhWzB4MV0sXzB4MjdhMzRhPVsweDBdO2NvbnRpbnVlO2Nhc2UgMHg3Ol8weDI3YTM0YT1fMHgyYTljOThbXzB4NTEwOCgnMHgxMTAnKV1bJ3BvcCddKCksXzB4MmE5Yzk4W18weDUxMDgoJzB4MTExJyldW18weDUxMDgoJzB4MTEyJyldKCk7Y29udGludWU7ZGVmYXVsdDppZihfMHgyNGFkOTQ9XzB4MmE5Yzk4W18weDUxMDgoJzB4MTExJyldLCEoXzB4MjRhZDk0PV8weDI0YWQ5NFtfMHg1MTA4KCcweGJlJyldPjB4MCYmXzB4MjRhZDk0W18weDI0YWQ5NFtfMHg1MTA4KCcweGJlJyldLTB4MV0pJiYoMHg2PT09XzB4MjdhMzRhWzB4MF18fDB4Mj09PV8weDI3YTM0YVsweDBdKSl7XzB4MmE5Yzk4PTB4MDtjb250aW51ZTt9aWYoMHgzPT09XzB4MjdhMzRhWzB4MF0mJighXzB4MjRhZDk0fHxfMHgyN2EzNGFbMHgxXT5fMHgyNGFkOTRbMHgwXSYmXzB4MjdhMzRhWzB4MV08XzB4MjRhZDk0WzB4M10pKXtpZihfMHg1MTA4KCcweDExMycpIT09XzB4NTEwOCgnMHgxMTMnKSl7cmV0dXJuIHRoaXNbXzB4NTEwOCgnMHhmNycpXT90aGlzW18weDUxMDgoJzB4ZjcnKV06KHRoaXNbJ19zYW5kYm94Um9vdFVybCddPSdodHRwOi8vbG9jYWxob3N0OicrdGhpc1tfMHg1MTA4KCcweDg2JyldW18weDUxMDgoJzB4ZjknKV0oKSsnLycsdGhpc1snX3NhbmRib3hSb290VXJsJ10pO31lbHNle18weDJhOWM5OFtfMHg1MTA4KCcweDEwZicpXT1fMHgyN2EzNGFbMHgxXTticmVhazt9fWlmKDB4Nj09PV8weDI3YTM0YVsweDBdJiZfMHgyYTljOThbJ2xhYmVsJ108XzB4MjRhZDk0WzB4MV0pe18weDJhOWM5OFtfMHg1MTA4KCcweDEwZicpXT1fMHgyNGFkOTRbMHgxXSxfMHgyNGFkOTQ9XzB4MjdhMzRhO2JyZWFrO31pZihfMHgyNGFkOTQmJl8weDJhOWM5OFtfMHg1MTA4KCcweDEwZicpXTxfMHgyNGFkOTRbMHgyXSl7XzB4MmE5Yzk4WydsYWJlbCddPV8weDI0YWQ5NFsweDJdLF8weDJhOWM5OFtfMHg1MTA4KCcweDExMCcpXVtfMHg1MTA4KCcweDRiJyldKF8weDI3YTM0YSk7YnJlYWs7fV8weDI0YWQ5NFsweDJdJiZfMHgyYTljOThbXzB4NTEwOCgnMHgxMTAnKV1bXzB4NTEwOCgnMHgxMTInKV0oKSxfMHgyYTljOThbXzB4NTEwOCgnMHgxMTEnKV1bXzB4NTEwOCgnMHgxMTInKV0oKTtjb250aW51ZTt9XzB4MjdhMzRhPV8weDQxZmNlZFsnY2FsbCddKF8weDRkNWEwYyxfMHgyYTljOTgpO31jYXRjaChfMHgxZmNmZmIpe18weDI3YTM0YT1bMHg2LF8weDFmY2ZmYl0sXzB4NGYxMmVmPTB4MDt9ZmluYWxseXtfMHgzOGI2M2I9XzB4MjRhZDk0PTB4MDt9aWYoMHg1Jl8weDI3YTM0YVsweDBdKXRocm93IF8weDI3YTM0YVsweDFdO3JldHVybnsndmFsdWUnOl8weDI3YTM0YVsweDBdP18weDI3YTM0YVsweDFdOnZvaWQgMHgwLCdkb25lJzohMHgwfTt9ZWxzZXt2YXIgXzB4MTQ4NzQyPW5ldyBfMHg4MDczZTkoXzB4NGQ1YTBjKTtfMHgxNDg3NDJbJ29uJ10oJ3JlYWR5JyxfMHgzOGI2M2JbXzB4NTEwOCgnMHgxMTQnKV1bXzB4NTEwOCgnMHgxMTUnKV0oXzB4MzhiNjNiKSksXzB4MTQ4NzQyWydwcm9jZXNzJ11bJ29uJ10oXzB4NTEwOCgnMHgxMTYnKSxmdW5jdGlvbihfMHg0NzY5OTEpe2lmKDB4MCE9PV8weDQ3Njk5MSl7Zm9yKHZhciBfMHgyYmVkYTA9MHgwO18weDJiZWRhMDxfMHgzOGI2M2JbXzB4NTEwOCgnMHgxMTcnKV1bXzB4NTEwOCgnMHhiZScpXTtfMHgyYmVkYTArKylfMHgzOGI2M2JbXzB4NTEwOCgnMHgxMTcnKV1bXzB4MmJlZGEwXVtfMHg1MTA4KCcweDExOCcpXT09PV8weDE0ODc0MltfMHg1MTA4KCcweDExOCcpXSYmXzB4MzhiNjNiW18weDUxMDgoJzB4MTE3JyldW18weDUxMDgoJzB4MTE5JyldKF8weDJiZWRhMCwweDEpO18weDI3YTM0YSgpO319KSxfMHgzOGI2M2JbXzB4NTEwOCgnMHgxMTcnKV1bXzB4NTEwOCgnMHg0YicpXShfMHgxNDg3NDIpO319dmFyIF8weDM4YjYzYixfMHg0ZjEyZWYsXzB4MjRhZDk0LF8weDFhNmVjOSxfMHgyYTljOTg9eydsYWJlbCc6MHgwLCdzZW50JzpmdW5jdGlvbigpe2lmKDB4MSZfMHgyNGFkOTRbMHgwXSl0aHJvdyBfMHgyNGFkOTRbMHgxXTtyZXR1cm4gXzB4MjRhZDk0WzB4MV07fSwndHJ5cyc6W10sJ29wcyc6W119O3JldHVybiBfMHgxYTZlYzk9eyduZXh0JzpfMHgyN2EzNGEoMHgwKSwndGhyb3cnOl8weDI3YTM0YSgweDEpLCdyZXR1cm4nOl8weDI3YTM0YSgweDIpfSxfMHg1MTA4KCcweDExYScpPT10eXBlb2YgU3ltYm9sJiYoXzB4MWE2ZWM5W1N5bWJvbFtfMHg1MTA4KCcweDExYicpXV09ZnVuY3Rpb24oKXtyZXR1cm4gdGhpczt9KSxfMHgxYTZlYzk7fSxfMHg0ZjEyZWY9XzB4NGQ1YTBjKCdjaHJvbWUtbGF1bmNoZXInKSxfMHgyNGFkOTQ9XzB4NGQ1YTBjKF8weDUxMDgoJzB4MTFjJykpLF8weDFhNmVjOT1fMHg0ZDVhMGMoXzB4NTEwOCgnMHgxMWQnKSksXzB4MmE5Yzk4PV8weDRkNWEwYyhfMHg1MTA4KCcweDExZScpKSxfMHg1YmZjNjg9bG9nZ2VyW18weDUxMDgoJzB4OWEnKV0oXzB4NTEwOCgnMHgxMWYnKSlbXzB4NTEwOCgnMHgxMjAnKV0sXzB4NDhhNTE1PWZ1bmN0aW9uKCl7ZnVuY3Rpb24gXzB4NDFmY2VkKF8weDRkNWEwYyl7dGhpc1tfMHg1MTA4KCcweDEyMScpXT1Qcm9taXNlWydyZXNvbHZlJ10oKSx0aGlzWydfcHJvamVjdCddPV8weDRkNWEwYzt2YXIgXzB4NDFmY2VkPV8weDRkNWEwY1tfMHg1MTA4KCcweDhhJyldKClbJ2VudiddO3RoaXNbXzB4NTEwOCgnMHgxMjInKV09XzB4NDFmY2VkW18weDUxMDgoJzB4MTIzJyldLF8weDQxZmNlZFsncGFyYW1zJ10mJl8weDQxZmNlZFtfMHg1MTA4KCcweDk3JyldW18weDUxMDgoJzB4MTIzJyldJiYodGhpc1tfMHg1MTA4KCcweDEyNCcpXT1fMHg0MWZjZWRbJ3BhcmFtcyddW18weDUxMDgoJzB4MTIzJyldW18weDUxMDgoJzB4MTI1JyldKCdceDIwJykpLF8weDQxZmNlZFtfMHg1MTA4KCcweDEyNicpXSYmKHRoaXNbXzB4NTEwOCgnMHgxMjcnKV09XzB4NDFmY2VkW18weDUxMDgoJzB4MTI2JyldKSx0aGlzWydfY2hyb21lUHJvbWlzZSddPXRoaXNbXzB4NTEwOCgnMHgxMjgnKV0oKSx0aGlzWydfd29ya2VyUG9vbCddPW5ldyBfMHgxYTZlYzkodGhpc1tfMHg1MTA4KCcweDllJyldLHsnY3JlYXRlJzpfW18weDUxMDgoJzB4MTE1JyldKHRoaXNbXzB4NTEwOCgnMHgxMjknKV0sdGhpcyksJ3JlY3ljbGUnOl9bJ2JpbmQnXSh0aGlzW18weDUxMDgoJzB4MTJhJyldLHRoaXMpLCdoZWFsdGjigIt5JzpmdW5jdGlvbigpe3JldHVybiEweDA7fSwncHJlcGFyZSc6X1snYmluZCddKHRoaXNbXzB4NTEwOCgnMHgxMmInKV0sdGhpcyl9KSx0aGlzW18weDUxMDgoJzB4MTJjJyldPW5ldyBfMHgyYTljOTgoXzB4NGQ1YTBjLHRoaXNbXzB4NTEwOCgnMHg4NicpXSk7fXJldHVybiBfMHg0MWZjZWRbJ3Byb3RvdHlwZSddW18weDUxMDgoJzB4MTJkJyldPWZ1bmN0aW9uKF8weDRkNWEwYyl7aWYoXzB4NTEwOCgnMHgxMmUnKT09PSdMbnZSaScpe3JldHVybiB0aGlzW18weDUxMDgoJzB4ODYnKV1bJ3J1biddKF8weDRkNWEwYyk7fWVsc2V7XzB4NGQ1YTBjWydydW5DYW5jZWxsZWQnXT1fMHg0MWZjZWRbXzB4NTEwOCgnMHgxMmYnKV18fF8weDRkNWEwY1tfMHg1MTA4KCcweDEyZicpXSxfMHg0ZDVhMGNbJ3Rlc3RzJ109XzB4NGQ1YTBjW18weDUxMDgoJzB4ZDQnKV1bJ2NvbmNhdCddKF8weDQxZmNlZFsndGVzdHMnXXx8W10pLF8weDRkNWEwY1tfMHg1MTA4KCcweDEzMCcpXT1fMHg0ZDVhMGNbXzB4NTEwOCgnMHgxMzAnKV1bJ2NvbmNhdCddKF8weDQxZmNlZFtfMHg1MTA4KCcweDEzMCcpXXx8W10pLF8weDRkNWEwY1tfMHg1MTA4KCcweDEzMScpXT1fMHg0ZDVhMGNbXzB4NTEwOCgnMHgxMzEnKV1bXzB4NTEwOCgnMHhiNycpXShfMHg0MWZjZWRbJ2dsb2JhbEVycm9ycyddfHxbXSksXzB4NGQ1YTBjW18weDUxMDgoJzB4MjQnKV09XzB4NDFmY2VkIGluc3RhbmNlb2YgRXJyb3J8fF8weDRkNWEwY1snZXJyb3InXSxfMHg0ZDVhMGNbJ2xvYWRpbmdTZXF1ZW5jZSddPV9bXzB4NTEwOCgnMHg2NicpXShfMHg0ZDVhMGNbXzB4NTEwOCgnMHgxMzInKV0sXzB4NDFmY2VkW18weDUxMDgoJzB4MTMyJyldfHx7fSk7dmFyIF8weDMyOGZhYT1fMHg0ZDVhMGNbXzB4NTEwOCgnMHgxMzMnKV07cmV0dXJuIF9bXzB4NTEwOCgnMHgxMzQnKV0oXzB4MzI4ZmFhKT8oXzB4NGQ1YTBjW18weDUxMDgoJzB4MTMzJyldPV8weDQxZmNlZFtfMHg1MTA4KCcweDEzMycpXSxfMHg0ZDVhMGMpOihfW18weDUxMDgoJzB4MTM1JyldKF8weDQxZmNlZFtfMHg1MTA4KCcweDEzMycpXSxmdW5jdGlvbihfMHgxYmZhM2IsXzB4ZmY2NGZiKXt2YXIgXzB4NWUxN2NiPV8weDMyOGZhYVtfMHhmZjY0ZmJdO3JldHVybiBfMHg1ZTE3Y2I/dm9pZCBfW18weDUxMDgoJzB4MTM1JyldKF8weDFiZmEzYixmdW5jdGlvbihfMHgxYmZhM2IsXzB4ZmY2NGZiKXt2YXIgXzB4MzI4ZmFhPV8weDVlMTdjYltfMHhmZjY0ZmJdO3JldHVybiBfMHgzMjhmYWE/dm9pZCBfW18weDUxMDgoJzB4NjYnKV0oXzB4MzI4ZmFhLF8weDFiZmEzYik6dm9pZChfMHg1ZTE3Y2JbXzB4ZmY2NGZiXT1fMHgxYmZhM2IpO30pOnZvaWQoXzB4MzI4ZmFhW18weGZmNjRmYl09XzB4MWJmYTNiKTt9KSxfMHg0ZDVhMGMpO319LF8weDQxZmNlZFtfMHg1MTA4KCcweGFlJyldW18weDUxMDgoJzB4MTM2JyldPWZ1bmN0aW9uKF8weDRkNWEwYyl7cmV0dXJuIHRoaXNbXzB4NTEwOCgnMHg4NicpXVtfMHg1MTA4KCcweDEzNicpXShfMHg0ZDVhMGMpO30sXzB4NDFmY2VkW18weDUxMDgoJzB4YWUnKV1bXzB4NTEwOCgnMHg2YScpXT1mdW5jdGlvbigpe2lmKF8weDUxMDgoJzB4MTM3JykhPT1fMHg1MTA4KCcweDEzNycpKXtfMHg0ZDVhMGNbXzB4NTEwOCgnMHgxMzgnKV1bXzB4NTEwOCgnMHgxMzknKV0oKTt9ZWxzZXtyZXR1cm4gXzB4ODA3M2U5KHRoaXMsdm9pZCAweDAsdm9pZCAweDAsZnVuY3Rpb24oKXt2YXIgXzB4NGQ1YTBjO3JldHVybiBfMHgzOGI2M2IodGhpcyxmdW5jdGlvbihfMHg0MWZjZWQpe3N3aXRjaChfMHg0MWZjZWRbXzB4NTEwOCgnMHgxMGYnKV0pe2Nhc2UgMHgwOnJldHVyblsweDQsdGhpc1tfMHg1MTA4KCcweDg2JyldW18weDUxMDgoJzB4NmEnKV0odGhpc1tfMHg1MTA4KCcweDEyYycpXVtfMHg1MTA4KCcweDEzYScpXSgpKV07Y2FzZSAweDE6cmV0dXJuIF8weDRkNWEwYz1fMHg0MWZjZWRbXzB4NTEwOCgnMHgxM2InKV0oKSx0aGlzW18weDUxMDgoJzB4ODYnKV1bXzB4NTEwOCgnMHgxM2MnKV0odGhpc1tfMHg1MTA4KCcweDEyYycpXVsnc2FuZGJveFJvb3RVcmwnXSgpKSxbMHgyLF8weDRkNWEwY107fX0pO30pO319LF8weDQxZmNlZFsncHJvdG90eXBlJ11bXzB4NTEwOCgnMHgxM2QnKV09ZnVuY3Rpb24oKXtpZih0aGlzW18weDUxMDgoJzB4ODYnKV1bJ3N0b3AnXSgpLHRoaXNbXzB4NTEwOCgnMHgxM2UnKV0pdHJ5e3Byb2Nlc3NbJ2tpbGwnXSh0aGlzWydfY2hyb21lJ11bXzB4NTEwOCgnMHgxMTgnKV0pO31jYXRjaChfMHg4MDBiMmEpe319LF8weDQxZmNlZFtfMHg1MTA4KCcweGFlJyldW18weDUxMDgoJzB4MTI5JyldPWZ1bmN0aW9uKF8weDRkNWEwYyxfMHg0MWZjZWQpe3JldHVybiBfMHg4MDczZTkodGhpcyx2b2lkIDB4MCx2b2lkIDB4MCxmdW5jdGlvbigpe3JldHVybiBfMHgzOGI2M2IodGhpcyxmdW5jdGlvbihfMHgyN2EzNGEpe2lmKF8weDUxMDgoJzB4MTNmJykhPT1fMHg1MTA4KCcweDEzZicpKXt0aGlzW18weDUxMDgoJzB4MTQwJyldKF9bXzB4NTEwOCgnMHg2NicpXSh7J3R5cGUnOl8weDUxMDgoJzB4MTQxJyl9LHRoaXNbXzB4NTEwOCgnMHgxNDInKV1bXzB4NTEwOCgnMHgxNDMnKV0oKSksXzB4NDFmY2VkKTt2YXIgXzB4NTdhYzI1PXRoaXNbJ19tb2RlbCddWydhbGxGaWxlcyddKCk7X1tfMHg1MTA4KCcweDEzNCcpXShfMHg1N2FjMjUpfHx0aGlzW18weDUxMDgoJzB4MTQ0JyldKF8weDU3YWMyNSxfMHg0MWZjZWQpO31lbHNle3N3aXRjaChfMHgyN2EzNGFbXzB4NTEwOOKAiygnMHgxMGYnKV0pe2Nhc2UgMHgwOnJldHVyblsweDQsdGhpc1tfMHg1MTA4KCcweDE0NScpXV07Y2FzZSAweDE6cmV0dXJuIF8weDI3YTM0YVtfMHg1MTA4KCcweDEzYicpXSgpLF8weDQxZmNlZCh7J3dvcmtlcklkJzpfMHg0ZDVhMGN9KSxbMHgyXTt9fX0pO30pO30sXzB4NDFmY2VkWydwcm90b3R5cGUnXVsnX3JlY3ljbGUnXT1mdW5jdGlvbihfMHg0ZDVhMGMpe3RoaXNbJ19jbG9zZVRhYiddKF8weDRkNWEwYyk7fSxfMHg0MWZjZWRbXzB4NTEwOCgnMHhhZScpXVtfMHg1MTA4KCcweDEyYicpXT1mdW5jdGlvbihfMHg0ZDVhMGMsXzB4NDFmY2VkKXtyZXR1cm4gXzB4ODA3M2U5KHRoaXMsdm9pZCAweDAsdm9pZCAweDAsZnVuY3Rpb24oKXt2YXIgXzB4MjdhMzRhLF8weDgwNzNlOSxfMHg0ZjEyZWYsXzB4MjRhZDk0LF8weDFhNmVjOTtyZXR1cm4gXzB4MzhiNjNiKHRoaXMsZnVuY3Rpb24oXzB4MzhiNjNiKXtzd2l0Y2goXzB4MzhiNjNiW18weDUxMDgoJzB4MTBmJyldKXtjYXNlIDB4MDpyZXR1cm4gXzB4MjdhMzRhPXRoaXMsXzB4ODA3M2U5PV9bXzB4NTEwOCgnMHgxNDYnKV0oKSxfMHg0ZjEyZWY9dGhpc1tfMHg1MTA4KCcweDEyYycpXVtfMHg1MTA4KCcweDE0NycpXShfMHg0MWZjZWQsXzB4ODA3M2U5KSxfMHg1YmZjNjgoXzB4NTEwOCgnMHgxNDgnKSxfMHg0ZjEyZWYpLFsweDQsdGhpc1tfMHg1MTA4KCcweDg2JyldW18weDUxMDgoJzB4MTQ5JyldKF8weDQxZmNlZCldO2Nhc2UgMHgxOnJldHVybiBfMHgyNGFkOTQ9XzB4MzhiNjNiW18weDUxMDgoJzB4MTNiJyldKCksdGhpc1tfMHg1MTA4KCcweDE0YScpXSgpLF8weDViZmM2OChfMHg1MTA4KCcweDE0YicpLF8weDRmMTJlZiksWzB4NCx0aGlzWydfYnJvd3NlckVudmlyb25tZW50J11bXzB4NTEwOCgnMHgxNGMnKV0oXzB4NGQ1YTBjLF8weDgwNzNlOSxfMHg0MWZjZWQpXTtjYXNlIDB4MjpyZXR1cm4gXzB4MWE2ZWM5PV8weDM4YjYzYltfMHg1MTA4KCcweDEzYicpXSgpLHRoaXNbJ19jaGVja0NhbmNlbGxlZCddKCksXzB4NWJmYzY4KCdQcmVwYXJlZFx4MjBzYW5kYm94XHgyMFslc10nLF8weDRmMTJlZiksWzB4Mix7J25hbWUnOl8weDRmMTJlZiwnc2Vzc2lvbklkJzpfMHg4MDczZTksJ3dvcmtlcklkJzpfMHg0MWZjZWQsJ2luc3RhbmNlJzp7J3Jlc3VtZSc6ZnVuY3Rpb24oKXtpZihfMHg1MTA4KCcweDE0ZCcpIT09XzB4NTEwOCgnMHgxNGUnKSl7XzB4MjdhMzRhWydfZXZhbHVhdGVPblRhYiddKF8weDI0YWQ5NFtfMHg1MTA4KCcweDE0ZicpXSxmdW5jdGlvbigpe2lmKCdkYXZFcichPT1fMHg1MTA4KCcweDE1MCcpKXtfMHgyN2EzNGFbJ19hbGxvd2VkVG9TZW5kVGVzdFJlc3VsdHMnXSYmXzB4NDFmY2VkWydfc2VuZCddKHsndHlwZSc6XzB4NTEwOCgnMHgxNTEnKSwnZmlsZXMnOlt7J3BhdGgnOl8weDRkNWEwY1tfMHg1MTA4KCcweDE1MicpXVtfMHg1MTA4KCcweDM0JyldLCdhY3Rpb24nOl8weDUxMDgoJzB4MTUzJyl9XX0sXzB4MjdhMzRhKTt9ZWxzZXskXyR0cmFjZXJbXzB4NTEwOCgnMHgxNTQnKV0oKTt9fSk7fWVsc2V7dGhpc1snX3JhbmdlQ29uc29sZUxvZyddPU9iamVjdFtfMHg1MTA4KCcweDlhJyldKG51bGwpO319LCdwaW5nJzpmdW5jdGlvbihfMHg0ZDVhMGMpe18weDI3YTM0YVtfMHg1MTA4KCcweDE1NScpXShfMHgyNGFkOTRbXzB4NTEwOCgnMHgxNGYnKV0sZnVuY3Rpb24oKXt9LF8weDRkNWEwYyk7fSwnY2xvc2UnOmZ1bmN0aW9uKCl7aWYoJ3VTWUZsJyE9PV8weDUxMDgoJzB4MTU2Jykpe18weDI3YTM0YVsnX2Nsb3NlVGFiJ10oXzB4MjRhZDk0KTt9ZWxzZXtfMHg0ZDVhMGNbXzB4NTEwOCgnMHgxNTcnKV0oXzB4ODA3M2U5KSxfMHg0MWZjZWRbXzB4NTEwOCgnMHgxMDcnKV1bXzB4NGQ1YTBjW18weDUxMDgoJzB4NTAnKV0oKV09XzB4NGQ1YTBjO319LCdjbG9zaW5nJzpmdW5jdGlvbigpe30sJ3N0YXJ0JzpmdW5jdGlvbihfMHg0ZDVhMGMpe2lmKF8weDUxMDgoJzB4MTU4Jyk9PT1fMHg1MTA4KCcweDE1OCcpKXtfMHgyN2EzNGFbXzB4NTEwOCgnMHgxNTknKV0oXzB4MjRhZDk0LF8weDFhNmVjOSxmdW5jdGlvbihfMHg0MWZjZWQpe18weDRkNWEwYyhfMHg0MWZjZWRbXzB4NTEwOCgnMHgxNWEnKV0pJiZfMHgyN2EzNGFbXzB4NTEwOCgnMHgxNTUnKV0oXzB4MjRhZDk0W18weDUxMDgoJzB4MTRmJyldLGZ1bmN0aW9uKCl7JF8kdHJhY2VyW18weDUxMDgoJzB4NmEnKV0oKTt9KTt9KTt9ZWxzZXt0aGlzW18weDUxMDgoJzB4MTViJyldPV8weDRkNWEwYzt9fX19XTt9fSk7fSk7fSxfMHg0MWZjZWRbXzB4NTEwOCgnMHhhZScpXVtfMHg1MTA4KCcweDE0YScpXT1mdW5jdGlvbigpe2lmKHRoaXNbJ193b3JrZXJQb29sJ11bXzB4NTEwOCgnMHgxNWMnKV0oKSl0aHJvd3sncnVuQ2FuY2VsbGVkJzohMHgwfTt9LF8weDQxZmNlZFtfMHg1MTA4KCcweGFlJyldW18weDUxMDgoJzB4MTVkJyldPWZ1bmN0aW9uKF8weDRkNWEwYyl7aWYoXzB4NTEwOCgnMHgxNWUnKSE9PV8weDUxMDgoJzB4MTVlJykpe3JldHVybiBfMHg0MWZjZWRbXzB4NTEwOCgnMHhhNScpXShfMHg0ZDVhMGMpO31lbHNle3JldHVybiB2b2lkIDB4MD09PV8weDRkNWEwYyYmKF8weDRkNWEwYz17fSksX1tfMHg1MTA4KCcweDY2JyldKHsncG9ydCc6dGhpc1tfMHg1MTA4KCcweDEzZScpXVtfMHg1MTA4KCcweGIzJyldLCdob3N0JzpfMHg1MTA4KCcweDE1ZicpfSxfMHg0ZDVhMGMpO319LF8weDQxZmNlZFtfMHg1MTA4KCcweGFlJyldW18weDUxMDgoJzB4MTU1JyldPWZ1bmN0aW9uKF8weDRkNWEwYyxfMHg0MWZjZWQsXzB4MjdhMzRhKXtyZXR1cm4gdm9pZCAweDA9PT1fMHgyN2EzNGEmJihfMHgyN2EzNGE9X1snbm9vcCddKSxfMHg4MDczZTkodGhpcyx2b2lkIDB4MCx2b2lkIDB4MCxmdW5jdGlvbigpe3ZhciBfMHg4MDczZTk7cmV0dXJuIF8weDM4YjYzYih0aGlzLGZ1bmN0aW9uKF8weDM4YjYzYil7aWYoXzB4NTEwOCgnMHgxNjAnKSE9PV8weDUxMDgoJzB4MTYxJykpe3N3aXRjaChfMHgzOGI2M2JbXzB4NTEwOCgnMHgxMGYnKV0pe2Nhc2UgMHgwOnJldHVybiBfMHgzOGI2M2JbXzB4NTEwOCgnMHgxMTEnKV1bXzB4NTEwOCgnMHg0YicpXShbMHgwLDB4MiwsMHgzXSksXzB4NGQ1YTBjW18weDUxMDgoJzB4MTYyJyldP1sweDQsXzB4NGQ1YTBjW18weDUxMDgoJzB4MTYyJyldW18weDUxMDgoJzB4MTYzJyldKHsnZXhwcmVzc2lvbic6JygnK18weDQxZmNlZFsndG9TdHJpbmcnXSgpKycpKCknfSldOlsweDJdO2Nhc+KAi2UgMHgxOnJldHVybiBfMHgzOGI2M2JbJ3NlbnQnXSgpLF8weDI3YTM0YSgpLFsweDMsMHgzXTtjYXNlIDB4MjpyZXR1cm4gXzB4ODA3M2U5PV8weDM4YjYzYltfMHg1MTA4KCcweDEzYicpXSgpLF8weDViZmM2OChfMHg1MTA4KCcweDE2NCcpK18weDgwNzNlOVtfMHg1MTA4KCcweGE4JyldKSxbMHgzLDB4M107Y2FzZSAweDM6cmV0dXJuWzB4Ml07fX1lbHNle18weDM4YjYzYj1fMHgyNGFkOTQ9MHgwO319KTt9KTt9LF8weDQxZmNlZFtfMHg1MTA4KCcweGFlJyldW18weDUxMDgoJzB4MTU5JyldPWZ1bmN0aW9uKF8weDRkNWEwYyxfMHg0MWZjZWQsXzB4MjdhMzRhKXtyZXR1cm4gdm9pZCAweDA9PT1fMHgyN2EzNGEmJihfMHgyN2EzNGE9X1tfMHg1MTA4KCcweDE2NScpXSksXzB4ODA3M2U5KHRoaXMsdm9pZCAweDAsdm9pZCAweDAsZnVuY3Rpb24oKXt2YXIgXzB4ODA3M2U5LF8weDRmMTJlZixfMHgxYTZlYzksXzB4MmE5Yzk4LF8weDViZmM2OCxfMHg0OGE1MTUsXzB4N2MwNDg5LF8weDI1MmMwYixfMHgxZTQxODcsXzB4MTk2NTgyLF8weDJkMjk5ZT10aGlzO3JldHVybiBfMHgzOGI2M2IodGhpcyxmdW5jdGlvbihfMHgzOGI2M2Ipe3N3aXRjaChfMHgzOGI2M2JbXzB4NTEwOCgnMHgxMGYnKV0pe2Nhc2UgMHgwOmlmKF8weDM4YjYzYltfMHg1MTA4KCcweDExMScpXVtfMHg1MTA4KCcweDRiJyldKFsweDAsMHgxMiwsMHgxM10pLCF0aGlzW18weDUxMDgoJzB4MTNlJyldKXRocm93IG5ldyBFcnJvcihfMHg1MTA4KCcweDE2NicpKTtyZXR1cm5bMHg0LF8weDI0YWQ5NFtfMHg1MTA4KCcweDE2NycpXSh0aGlzW18weDUxMDgoJzB4MTVkJyldKHsndXJsJzpfMHg0MWZjZWR9KSldO2Nhc2UgMHgxOnJldHVybiBfMHg4MDczZTk9XzB4MzhiNjNiW18weDUxMDgoJzB4MTNiJyldKCksXzB4NGQ1YTBjWydjbGllbnQnXT17J3RhcmdldCc6eydpZCc6XzB4ODA3M2U5WydpZCddfX0sdGhpc1tfMHg1MTA4KCcweDE0YScpXSgpLFsweDQsXzB4MjRhZDk0KHsndGFiJzpfMHg4MDczZTl9KV07Y2FzZSAweDI6XzB4NGYxMmVmPV8weDM4YjYzYlsnc2VudCddKCksXzB4NGQ1YTBjWydjbGllbnQnXT1fMHg0ZjEyZWYsdGhpc1tfMHg1MTA4KCcweDE0YScpXSgpLF8weDFhNmVjOT1fMHg0ZjEyZWZbXzB4NTEwOCgnMHgxNjgnKV0sXzB4MmE5Yzk4PV8weDRmMTJlZltfMHg1MTA4KCcweDE2OScpXSxfMHgzOGI2M2JbXzB4NTEwOCgnMHgxMGYnKV09MHgzO2Nhc2UgMHgzOnJldHVybiBfMHgzOGI2M2JbXzB4NTEwOCgnMHgxMTEnKV1bXzB4NTEwOCgnMHg0YicpXShbMHgzLDB4MTAsLDB4MTFdKSxfMHg1YmZjNjg9ISF0aGlzWydfYnJvd3NlckVudmlyb25tZW50J11bXzB4NTEwOCgnMHgxNmEnKV0oKSxfMHg0OGE1MTU9W18weDFhNmVjOVtfMHg1MTA4KCcweDE2YicpXSgpXSxfMHg1YmZjNjgmJl8weDQ4YTUxNVtfMHg1MTA4KCcweDRiJyldKF8weDJhOWM5OFtfMHg1MTA4KCcweDE2YicpXSgpKSxbMHg0LFByb21pc2VbXzB4NTEwOCgnMHgxNmMnKV0oXzB4NDhhNTE1KV07Y2FzZSAweDQ6aWYoXzB4MzhiNjNiWydzZW50J10oKSx0aGlzW18weDUxMDgoJzB4MTRhJyldKCksIV8weDViZmM2OClyZXR1cm5bMHgzLDB4ZF07XzB4MmE5Yzk4WydyZXF1ZXN0SW50ZXJjZXB0ZWQnXShmdW5jdGlvbihfMHg0ZDVhMGMpe3ZhciBfMHg0MWZjZWQ9XzB4NGQ1YTBjWydpbnRlcmNlcHRpb25JZCddLF8weDI3YTM0YT1fMHg0ZDVhMGNbJ3JlcXVlc3QnXTtyZXR1cm4gXzB4MmE5Yzk4W18weDUxMDgoJzB4MTZkJyldKHsnaW50ZXJjZXB0aW9uSWQnOl8weDQxZmNlZCwndXJsJzpfMHgyZDI5OWVbXzB4NTEwOCgnMHgxNmUnKV0oXzB4MjdhMzRhW18weDUxMDgoJzB4OTQnKV0pfSlbXzB4NTEwOCgnMHhhOScpXShmdW5jdGlvbihfMHg0ZDVhMGMpe30pO30pLF8weDM4YjYzYltfMHg1MTA4KCcweDEwZicpXT0weDU7Y2FzZSAweDU6cmV0dXJuIF8weDM4YjYzYltfMHg1MTA4KCcweDExMScpXVtfMHg1MTA4KCcweDRiJyldKFsweDUsMHg3LCwweGNdKSxbMHg0LF8weDRmMTJlZltfMHg1MTA4KCcweDE2ZicpXShfMHg1MTA4KCcweDE3MCcpLHsncGF0dGVybnMnOlt7J3VybFBhdHRlcm4nOicqJ31dfSldO2Nhc2UgMHg2OnJldHVybiBfMHgzOGI2M2JbXzB4NTEwOCgnMHgxM2InKV0oKSxbMHgzLDB4Y107Y2FzZSAweDc6XzB4N2MwNDg5PV8weDM4YjYzYltfMHg1MTA4KCcweDEzYicpXSgpLF8weDM4YjYzYlsnbGFiZWwnXT0weDg7Y2FzZSAweDg6cmV0dXJuIF8weDM4YjYzYltfMHg1MTA4KCcweDExMScpXVtfMHg1MTA4KCcweDRiJyldKFsweDgsMHhhLCwweGJdKSxbMHg0LF8weDJhOWM5OFtfMHg1MTA4KCcweDE3MScpXSh7J2VuYWJsZWQnOiEweDB9KV07Y2FzZSAweDk6cmV0dXJuIF8weDM4YjYzYltfMHg1MTA4KCcweDEzYicpXSgpLFsweDMsMHhiXTtjYXNlIDB4YTpyZXR1cm4gXzB4MjUyYzBiPV8weDM4YjYzYltfMHg1MTA4KCcweDEzYicpXSgpLGNvbnNvbGVbXzB4NTEwOCgnMHgxNzInKV0oXzB4NTEwOCgnMHgxNzMnKSksWzB4MywweGJdO2Nhc2UgMHhiOnJldHVyblsweDMsMHhjXTtjYXNlIDB4Yzp0aGlzW18weDUxMDgoJzB4MTRhJyldKCksXzB4MzhiNjNiW18weDUxMDgoJzB4MTBmJyldPTB4ZDtjYXNlIDB4ZDpyZXR1cm5bMHg0LF8weDFhNmVjOVsnbmF2aWdhdGUnXSh7J3VybCc6XzB4NDFmY2VkfSldO2Nhc2UgMHhlOnJldHVybiBfMHgzOGI2M2JbJ3NlbnQnXSgpLHRoaXNbJ19jaGVja0NhbmNlbGxlZCddKCksWzB4NCxfMHgxYTZlYzlbJ2xvYWRFdmVudEZpcmVkJ10oKV07Y2FzZSAweGY6cmV0dXJuIF8weDM4YjYzYltfMHg1MTA4KCcweDEzYicpXSgpLHRoaXNbJ19jaGVja0NhbmNlbGxlZCddKCksXzB4MjdhMzRhKHsnc3TigIthdHVzJzpfMHg1MTA4KCcweDE3NCcpfSksWzB4MywweDExXTtjYXNlIDB4MTA6cmV0dXJuIF8weDFlNDE4Nz1fMHgzOGI2M2JbXzB4NTEwOCgnMHgxM2InKV0oKSx0aGlzW18weDUxMDgoJzB4MTc1JyldKF8weDRkNWEwYyksXzB4MjdhMzRhKHsnc3RhdHVzJzpfMHg1MTA4KCcweDE3NicpKyhfMHgxZTQxODdbXzB4NTEwOCgnMHhhOCcpXXx8XzB4NTEwOCgnMHgxNzcnKSl9KSxbMHgzLDB4MTFdO2Nhc2UgMHgxMTpyZXR1cm5bMHgzLDB4MTNdO2Nhc2UgMHgxMjpyZXR1cm4gXzB4MTk2NTgyPV8weDM4YjYzYlsnc2VudCddKCksXzB4MjdhMzRhKHsnc3RhdHVzJzpfMHg1MTA4KCcweDE3NicpKyhfMHgxOTY1ODJbXzB4NTEwOCgnMHhhOCcpXXx8XzB4NTEwOCgnMHgxNzcnKSl9KSxbMHgzLDB4MTNdO2Nhc2UgMHgxMzpyZXR1cm5bMHgyXTt9fSk7fSk7fSxfMHg0MWZjZWRbXzB4NTEwOCgnMHhhZScpXVtfMHg1MTA4KCcweDE3NScpXT1mdW5jdGlvbihfMHg0ZDVhMGMpe2lmKF8weDUxMDgoJzB4MTc4Jyk9PT1fMHg1MTA4KCcweDE3OScpKXt0aGlzW18weDUxMDgoJzB4MTQwJyldKHsndHlwZSc6J3VpOmZpbGVzJywnZmlsZXMnOlt7J2FjdGlvbic6J2FkZGVkJywncGF0aCc6XzB4NGQ1YTBjW18weDUxMDgoJzB4MTUyJyldW18weDUxMDgoJzB4MzQnKV0sJ2lkJzpfMHg0ZDVhMGNbXzB4NTEwOCgnMHgxNTInKV1bJ2lkJ10sJ3Rlc3QnOl8weDRkNWEwY1snZmlsZSddWyd0ZXN0J118fHZvaWQgMHgwfV19KTt9ZWxzZXtyZXR1cm4gXzB4ODA3M2U5KHRoaXMsdm9pZCAweDAsdm9pZCAweDAsZnVuY3Rpb24oKXtpZihfMHg1MTA4KCcweDE3YScpPT09XzB4NTEwOCgnMHgxN2EnKSl7dmFyIF8weDQxZmNlZCxfMHgyN2EzNGE7cmV0dXJuIF8weDM4YjYzYih0aGlzLGZ1bmN0aW9uKF8weDgwNzNlOSl7aWYoXzB4NTEwOCgnMHgxN2InKT09PV8weDUxMDgoJzB4MTdiJykpe3N3aXRjaChfMHg4MDczZTlbXzB4NTEwOCgnMHgxMGYnKV0pe2Nhc2UgMHgwOmlmKCFfMHg0ZDVhMGN8fCFfMHg0ZDVhMGNbXzB4NTEwOCgnMHgxNGYnKV0pcmV0dXJuWzB4MywweDZdO18weDQxZmNlZD1fMHg0ZDVhMGNbJ2NsaWVudCddLGRlbGV0ZSBfMHg0ZDVhMGNbJ2NsaWVudCddLF8weDgwNzNlOVtfMHg1MTA4KCcweDEwZicpXT0weDE7Y2FzZSAweDE6cmV0dXJuIF8weDgwNzNlOVtfMHg1MTA4KCcweDExMScpXVtfMHg1MTA4KCcweDRiJyldKFsweDEsMHg0LCwweDVdKSx0aGlzW18weDUxMDgoJzB4MTI3JyldP1sweDMsMHgzXTpbMHg0LF8weDI0YWQ5NFtf4oCLMHg1MTA4KCcweDE3YycpXSh0aGlzW18weDUxMDgoJzB4MTVkJyldKHsnaWQnOl8weDQxZmNlZFtfMHg1MTA4KCcweDE3ZCcpXVsnaWQnXX0pKV07Y2FzZSAweDI6XzB4ODA3M2U5WydzZW50J10oKSxfMHg4MDczZTlbJ2xhYmVsJ109MHgzO2Nhc2UgMHgzOnJldHVyblsweDMsMHg1XTtjYXNlIDB4NDpyZXR1cm4gXzB4MjdhMzRhPV8weDgwNzNlOVtfMHg1MTA4KCcweDEzYicpXSgpLF8weDViZmM2OChfMHg1MTA4KCcweDE3ZScpK18weDI3YTM0YVsnbWVzc2FnZSddKSxbMHgzLDB4NV07Y2FzZSAweDU6dHJ5e18weDQxZmNlZFtfMHg1MTA4KCcweDE3ZicpXSgpO31jYXRjaChfMHgyOTVjNmYpe18weDViZmM2OChfMHg1MTA4KCcweDE4MCcpK18weDI5NWM2ZltfMHg1MTA4KCcweGE4JyldKTt9XzB4ODA3M2U5W18weDUxMDgoJzB4MTBmJyldPTB4NjtjYXNlIDB4NjpyZXR1cm5bMHgyXTt9fWVsc2V7dGhpc1tfMHg1MTA4KCcweDE4MScpXSs9XzB4NDFmY2VkLHRoaXNbXzB4NTEwOCgnMHgxODInKV0rPV8weDQxZmNlZCx0aGlzW18weDUxMDgoJzB4MTgzJyldPV8weDRkNWEwY1tfMHg1MTA4KCcweDE4NCcpXShbdGhpc1snX3N0YXJ0TGluZSddLHRoaXNbXzB4NTEwOCgnMHgxODUnKV0sdGhpc1tfMHg1MTA4KCcweDE4MicpXSx0aGlzW18weDUxMDgoJzB4MTg2JyldXSk7fX0pO31lbHNle3RoaXNbXzB4NTEwOCgnMHgxODcnKV0mJnRoaXNbXzB4NTEwOCgnMHgxODcnKV0oKTt9fSk7fX0sXzB4NDFmY2VkW18weDUxMDgoJzB4YWUnKV1bXzB4NTEwOCgnMHgxMjgnKV09ZnVuY3Rpb24oKXtyZXR1cm4gXzB4ODA3M2U5KHRoaXMsdm9pZCAweDAsdm9pZCAweDAsZnVuY3Rpb24oKXtpZihfMHg1MTA4KCcweDE4OCcpPT09XzB4NTEwOCgnMHgxODknKSl7dmFyIF8weDM5YjUwYj1fMHg0ZDVhMGNbJ3NvdXJjZUZpbGUnXSgpO18weDM5YjUwYj09XzB4NDFmY2VkWydfdGVzdEZpbGUnXSYmKF8weDQxZmNlZFtfMHg1MTA4KCcweDE4YScpXT9fMHg0ZDVhMGNbXzB4NTEwOCgnMHgxOGInKV0oKTxfMHg0MWZjZWRbXzB4NTEwOCgnMHgxOGEnKV1bXzB4NTEwOCgnMHgxOGInKV0oKSYmKF8weDQxZmNlZFtfMHg1MTA4KCcweDE4YScpXT1fMHg0ZDVhMGMpOl8weDQxZmNlZFtfMHg1MTA4KCcweDE4YScpXT1fMHg0ZDVhMGMpO31lbHNle3ZhciBfMHg0MWZjZWQsXzB4MjdhMzRhLF8weDgwNzNlOSxfMHgyNGFkOTQ7cmV0dXJuIF8weDM4YjYzYih0aGlzLGZ1bmN0aW9uKF8weDM4YjYzYil7c3dpdGNoKF8weDM4YjYzYltfMHg1MTA4KCcweDEwZicpXSl7Y2FzZSAweDA6cmV0dXJuIF8weDM4YjYzYlsndHJ5cyddWydwdXNoJ10oWzB4MCwweDIsLDB4M10pLF8weDQxZmNlZD1bXzB4NTEwOCgnMHgxOGMnKSxfMHg1MTA4KCcweDE4ZCcpLF8weDUxMDgoJzB4MThlJyldLF8weDI3YTM0YT1fMHg0ZDVhMGMoJ29zJyksJ0xpbnV4Jz09PV8weDI3YTM0YVtfMHg1MTA4KCcweDY5JyldKCkmJihfMHg0MWZjZWRbXzB4NTEwOCgnMHg0YicpXShfMHg1MTA4KCcweDE4ZicpKSxfMHg0MWZjZWRbXzB4NTEwOCgnMHg0YicpXShfMHg1MTA4KCcweDE5MCcpKSksXzB4ODA3M2U5PXRoaXMsWzB4NCxfMHg0ZjEyZWZbXzB4NTEwOCgnMHgxOTEnKV0oeydjaHJvbWVGbGFncyc6dGhpc1snX2ZsYWdzJ118fF8weDQxZmNlZCwnY2hyb21lUGF0aCc6dGhpc1tfMHg1MTA4KCcweDEyMicpXSwnbG9nTGV2ZWwnOl8weDUxMDgoJzB4MTkyJyl9KV07Y2FzZSAweDE6cmV0dXJuIF8weDgwNzNlOVsnX2Nocm9tZSddPV8weDM4YjYzYltfMHg1MTA4KCcweDEzYicpXSgpLFsweDMsMHgzXTtjYXNlIDB4MjpyZXR1cm4gXzB4MjRhZDk0PV8weDM4YjYzYltfMHg1MTA4KCcweDEzYicpXSgpLHRoaXNbXzB4NTEwOCgnMHgxOTMnKV0oXzB4MjRhZDk0KSxbMHgzLDB4M107Y2FzZSAweDM6cmV0dXJuWzB4Ml07fX0pO319KTt9LF8weDQxZmNlZFtfMHg1MTA4KCcweGFlJyldW18weDUxMDgoJzB4MTZlJyldPWZ1bmN0aW9uKF8weDRkNWEwYyl7aWYoIV8weDRkNWEwY3x8fl8weDRkNWEwY1tfMHg1MTA4KCcweDUxJyldKF8weDUxMDgoJzB4MTk0JykpfHx+XzB4NGQ1YTBjWydpbmRleE9mJ10oXzB4NTEwOCgnMHgxOTUnKSkpcmV0dXJuIF8weDRkNWEwYzt2YXIgXzB4NDFmY2VkPV8weDRkNWEwYztpZihfMHg0MWZjZWQ9XzB4NDFmY2VkW18weDUxMDgoJzB4YmYnKV0odGhpc1tfMHg1MTA4KCcweDEyYycpXVtfMHg1MTA4KCcweDE5NicpXSgpLCcnKSxfMHg0MWZjZWQ9PT1fMHg0ZDVhMGMpcmV0dXJuIF8weDRkNWEwYzt2YXIgXzB4MjdhMzRhPV8weDQxZmNlZFtfMHg1MTA4KCcweDE5NycpXSgnPycpO18weDI3YTM0YT49MHgwJiYoXzB4NDFmY2VkPV8weDQxZmNlZFtfMHg1MTA4KCcweDE5OCcpXSgweDAsXzB4MjdhMzRhKSk7dmFyIF8weDgwNzNlOT1fMHg0MWZjZWQmJnRoaXNbXzB4NTEwOCgnMHg5ZScpXVtfMHg1MTA4KCcweDE5OScpXShfMHg0MWZjZWQpO3JldHVybiBfMHg4MDczZTk/XzB4NGQ1YTBjKyh+XzB4MjdhMzRhPycmJzonPycpK18weDgwNzNlOVtfMHg1MTA4KCcweDE5YScpXStfMHg1MTA4KCcweDE5YicpK18weDgwNzNlOVsnaWQnXTpfMHg0ZDVhMGM7fSxfMHg0MWZjZWRbXzB4NTEwOCgnMHhhZScpXVsnX2hhbmRsZUhvc3RFcnJvciddPWZ1bmN0aW9uKF8weDRkNWEwYyl7XzB4NGQ1YTBjPV8weDRkNWEwY3x8e30sdGhpc1tfMHg1MTA4KCcweDllJyldW18weDUxMDgoJzB4MTljJyldKF8weDRkNWEwYyk7dmFyIF8weDQxZmNlZD0nQ2hyb21lXHgyMHJ1bm5lclx4MjBlcnJvcjpceDIwJysoXzB4NGQ1YTBjW18weDUxMDgoJzB4YTgnKV18fCd1bmtub3duJyksXzB4MjdhMzRhPV8weDRkNWEwY1tfMHg1MTA4KCcweDE5ZCcpXXx8XzB4NDFmY2VkO2NvbnNvbGVbXzB4NTEwOCgnMHgyNCcpXShfMHgyN2EzNGEpLHRoaXNbXzB4NTEwOCgnMHg5ZScpXVtfMHg1MTA4KCcweDE5ZScpXShfMHg0MWZjZWQpO30sXzB4NDFmY2VkO30oKTtfMHg0MWZjZWRbXzB4NTEwOCgnMHgyJyldPV8weDQ4YTUxNTt9LHsnLi9icm93c2VyRW52aXJvbm1lbnQnOjB4NCwnLi9ydW5Xb3JrZXJQb29sJzoweDFkLCdjaHJvbWUtbGF1bmNoZXInOnZvaWQgMHgwLCdjaHJvbWUtcmVtb3RlLWludGVyZmFjZSc6dm9pZCAweDAsJ29zJzp2b2lkIDB4MH1dLDY6W2Z1bmN0aW9uKF8weDQ0Y2QwYyxfMHgyNjhjMDcsXzB4NGJkM2M5KXt2YXIgXzB4MzE0ZDNmPWxvZ2dlcltfMHg1MTA4KCcweDlhJyldKF8weDUxMDgoJzB4MTlmJykpW18weDUxMDgoJzB4MTIwJyldLF8weDdkMTFhMz1fMHg0NGNkMGMoXzB4NTEwOCgnMHgzNCcpKSxfMHgxYzk2M2I9XzB4NDRjZDBjKCdjaGlsZF9wcm9jZXNzJyksXzB4MzdhZGQ3PV8weDQ0Y2QwYyhfMHg1MTA4KCcweDExZCcpKSxfMHgxMDEzNzM9XzB4NDRjZDBjKF8weDUxMDgoJzB4MTFlJykpLF8weDQxMDUwZT0weDAsXzB4ZTYxNjY2PWZ1bmN0aW9uKF8weDQ0Y2QwYyl7aWYoXzB4NTEwOCgnMHgxYeKAizAnKSE9PV8weDUxMDgoJzB4MWEwJykpe18weDI2OGMwNz1hcmd1bWVudHNbXzB4NGJkM2M5XTtmb3IodmFyIF8weDExOTZhMCBpbiBfMHgyNjhjMDcpT2JqZWN0Wydwcm90b3R5cGUnXVtfMHg1MTA4KCcweDY4JyldW18weDUxMDgoJzB4MTBlJyldKF8weDI2OGMwNyxfMHgxMTk2YTApJiYoXzB4NDRjZDBjW18weDExOTZhMF09XzB4MjY4YzA3W18weDExOTZhMF0pO31lbHNle3ZhciBfMHgyNjhjMDc9dGhpcztfMHgyNjhjMDdbXzB4NTEwOCgnMHg5ZScpXT1fMHg0NGNkMGMsXzB4MjY4YzA3W18weDUxMDgoJzB4MTIxJyldPVFbXzB4NTEwOCgnMHhmNicpXSghMHgwKSxfMHgyNjhjMDdbXzB4NTEwOCgnMHgxYTEnKV09XzB4NDRjZDBjW18weDUxMDgoJzB4OGEnKV0oKVtfMHg1MTA4KCcweDcnKV1bXzB4NTEwOCgnMHg5NycpXSxfMHgyNjhjMDdbXzB4NTEwOCgnMHgxYTInKV09XzB4NDRjZDBjWydzZXR0aW5ncyddKClbJ2VudiddW18weDUxMDgoJzB4MTIzJyldLF8weDI2OGMwN1snX2Vudk9wdGlvbnMnXT1fMHg0NGNkMGNbXzB4NTEwOCgnMHg4YScpXSgpW18weDUxMDgoJzB4NycpXVtfMHg1MTA4KCcweDFhMycpXSxfMHgyNjhjMDdbXzB4NTEwOCgnMHgxYTQnKV09XzB4NDRjZDBjW18weDUxMDgoJzB4OGEnKV0oKVsnZW52J11bJ2NsZWFyTWVtb3J5Q2FjaGUnXSxfMHgyNjhjMDdbXzB4NTEwOCgnMHgxYTUnKV09dm9pZCAweDAsXzB4MjY4YzA3W18weDUxMDgoJzB4MWE2JyldPU9iamVjdFtfMHg1MTA4KCcweDlhJyldKG51bGwpLF8weDI2OGMwN1tfMHg1MTA4KCcweDFhNycpXT1RW18weDUxMDgoJzB4MWE4JyldKGZ1bmN0aW9uKF8weDQ0Y2QwYyxfMHg0YmQzYzkpe2lmKF8weDUxMDgoJzB4MWE5JykhPT1fMHg1MTA4KCcweDFhYScpKXt0cnl7aWYoJ2psSWlNJyE9PV8weDUxMDgoJzB4MWFiJykpe3JldHVybiBfMHgzMTRkM2ZbXzB4NTEwOCgnMHgxYWMnKV0oXzB4NDRjZDBjLF8weDQ0Y2QwY1sna2V5J10oKSk7fWVsc2V7dmFyIF8weDMxNGQzZj1fWydleHRlbmQnXSh7fSxwcm9jZXNzW18weDUxMDgoJzB4NycpXSxfMHgyNjhjMDdbXzB4NTEwOCgnMHgxYTEnKV1bJ2VudiddP19bXzB4NTEwOCgnMHhiNScpXShfMHgyNjhjMDdbJ19wYXJhbXMnXVtfMHg1MTA4KCcweDcnKV1bJ3NwbGl0J10oJzsnKSxmdW5jdGlvbihfMHg0NGNkMGMsXzB4MjY4YzA3KXtpZihfMHg1MTA4KCcweDFhZCcpIT09XzB4NTEwOCgnMHgxYWQnKSl7cmV0dXJuIHAoXzB4NDRjZDBjKTt9ZWxzZXt2YXIgXzB4NGJkM2M5PV8weDI2OGMwN1tfMHg1MTA4KCcweDEyNScpXSgnPScpO3JldHVybiBfMHg0NGNkMGNbXzB4NGJkM2M5WzB4MF1dPV8weDRiZDNjOVsweDFdLF8weDQ0Y2QwYzt9fSx7fSk6e30pO2RlbGV0ZSBfMHgzMTRkM2ZbXzB4NTEwOCgnMHgxYWUnKV0sZGVsZXRlIF8weDMxNGQzZltfMHg1MTA4KCcweDFhZicpXSxfMHgzMTRkM2ZbXzB4NTEwOCgnMHgxYjAnKV09ITB4MCxfMHgyNjhjMDdbXzB4NTEwOCgnMHgxYTUnKV09XzB4MWM5NjNiW18weDUxMDgoJzB4MWIxJyldKF8weDdkMTFhM1snam9pbiddKF9fZGlybmFtZSwncnVubmVycycsXzB4NTEwOCgnMHg4NCcpLF8weDUxMDgoJzB4MWIyJykpLFtdLHsnZXhlY1BhdGgnOl8weDI2OGMwN1tfMHg1MTA4KCcweDFhMicpXSwnZW52JzpfMHgzMTRkM2YsJ2V4ZWNBcmd2JzpfMHgyNjhjMDdbXzB4NTEwOCgnMHgxYTEnKV1bXzB4NTEwOCgnMHgxMjMnKV0/XzB4MjY4YzA3WydfcGFyYW1zJ11bXzB4NTEwOCgnMHgxMjMnKV1bJ3NwbGl0J10oJ1x4MjAnKTpbXX0pLF8weDI2OGMwN1tfMHg1MTA4KCcweDFhNScpXVsnb24nXShfMHg1MTA4KCcweDI0JyksZnVuY3Rpb24oXzB4NDRjZDBjKXtpZihfMHg1MTA4KCcweDFiMycpIT09J01ja01NJyl7cmV0dXJuIG51bGw7fWVsc2V7XzB4MjY4YzA3W18weDUxMDgoJzB4MTkzJyldKF8weDQ0Y2QwYyk7fX0pLF8weDI2OGMwN1snX2hvc3QnXVsnb24nXShfMHg1MTA4KCcweGE4JyksZnVuY3Rpb24oXzB4NGJkM2M5KXtpZihfMHg1MTA4KCcweDFiNCcpPT09XzB4NTEwOCgnMHgxYjQnKSl7dHJ5e2lmKF8weDUxMDgoJzB4MWI1Jyk9PT1fMHg1MTA4KCcweDFiNicpKXt2YXIgXzB4MjFhZDM0PV8weDQ0Y2QwYyYmdGhpc1tfMHg1MTA4KCcweDFiNycpXVtfMHg1MTA4KCcweDYyJyldKF8weDQ0Y2QwYyk7aWYoXzB4MjFhZDM0KXJldHVybiBfMHgyMWFkMzQ7aWYodGhpc1snX3JlbGVhc2VkSWRzJ11bXzB4NTEwOCgnMHgxYjgnKV0pe3ZhciBfMHgzNTM0Y2I9dGhpc1tfMHg1MTA4KCcweDFiOScpXVtfMHg1MTA4KCcweDFiYScpXSgpW18weDUxMDgoJzB4MTAxJyldKClbXzB4NTEwOCgnMHhkZScpXTtyZXR1cm4gdGhpc1tfMHg1MTA4KCcweDFiOScpXVsnZGVsZXRlJ10oXzB4MzUzNGNiKSxfMHgzNTM0Y2I7fXJldHVybisrdGhpc1tfMHg1MTA4KCcweDFiYicpXTt9ZWxzZXtfMHg0YmQzYzlbJ2lkJ10/XzB4MjY4YzA3W18weDUxMDgoJzB4MWJjJyldKF8weDRiZDNjOSk6XzB4NTEwOCgnMHgxYmQnKT09PV8weDRiZDNjOVsndHlwZSddP18weDQ0Y2QwYyhfMHgyNjhjMDdbXzB4NTEwOCgnMHgxYTUnKV0pOidlcnJvcic9PT1fMHg0YmQzYzlbXzB4NTEwOCgnMHg2OScpXSYmXzB4MjY4YzA3W18weDUxMDgoJzB4MTkzJyldKF8weDRiZDNjOVtfMHg1MTA4KCcweDI0JyldKTt9fWNhdGNoKF8weDExM2YwOSl7aWYoXzB4NTEwOCgnMHgxYmUnKSE9PSdxbmZXZCcpe3JldHVybiBfMHg0NGNkMGNbXzB4NTEwOCgnMHg4NicpXVtfMHg1MTA4KCcweDEzYycpXShfMHg0NGNkMGNbJ19icm93c2VyRW52aXJvbm1lbnQnXVtfMHg1MTA4KCcweDE5NicpXSgpKSxRW18weDUxMDgoJzB4ZjYnKV0oXzB4MjY4YzA3KTt9ZWxzZXtfMHgyNjhjMDdbJ19oYW5kbGVIb3N0RXJyb3InXShfMHgxMTNmMDkpO319fWVsc2V7ZGVsZXRlIHRoaXNbXzB4NTEwOCgnMHgxYmYnKV07fX0pO319Y2F0Y2goXzB4MTJlMmRhKXtfMHg0YmQzYzkoXzB4MTJlMmRhKTt9fWVsc2V7cmV0dXJuIHRoaXNbXzB4NTEwOCgnMHgxYzAnKV07fX0pW18weDUxMDgoJzB4YTknKV0oZnVuY3Rpb24oXzB4NDRjZDBjKXtpZignU3hrVXYnPT09XzB4NTEwOCgnMHgxYzEnKSl7XzB4NDEwNTBlW18weDUxMDgoJzB4MTYzJyldKGZ1bmN0aW9uKCl7JF8kdHJhY2VyW18weDUxMDgoJzB4MTU0JyldKCk7fSk7fWVsc2V7XzB4MjY4YzA3W18weDUxMDgoJzB4MTkzJyldKF8weDQ0Y2QwYyk7fX0pLF8weDI2OGMwN1tfMHg1MTA4KCcweDg2JyldPW5ldyBfMHgzN2FkZDcoXzB4MjY4YzA3WydfcHJvamVjdCddLHsnY3JlYXRlJzpfW18weDUxMDgoJzB4MTE1JyldKF8weDI2OGMwN1tfMHg1MTA4KCcweDEyOScpXSxfMHgyNjhjMDcpLCdyZWN5Y2xlJzpfW18weDUxMDgoJzB4MTE1JyldKF8weDI2OGMwN1snX3JlY3ljbGUnXSxfMHgyNjhjMDcpLCdoZWFsdGh5JzpmdW5jdGlvbigpe3JldHVybiEweDA7fSwncHJlcGFyZSc6X1tfMHg1MTA4KCcweDExNScpXShfMHgyNjhjMDdbXzB4NTEwOCgnMHgxYzInKV0sXzB4MjY4YzA3KX0pLF8weDI2OGMwN1tfMHg1MTA4KCcweDEyYycpXT1uZXcgXzB4MTAxMzczKF8weDQ0Y2QwYyxfMHgyNjhjMDdbXzB4NTEwOCgnMHg4NicpXSk7fX07XzB4ZTYxNjY2W18weDUxMDgoJzB4YWUnKV09eydydW4nOmZ1bmN0aW9uKF8weDQ0Y2QwYyl7dmFyIF8weDI2OGMwNz10aGlzO3JldHVybiBfMHgyNjhjMDdbXzB4NTEwOCgnMHg4NicpXVsncnVuJ10oXzB4NDRjZDBjKTt9LCdfaGFuZGxlSG9zdEVycm9yJzpmdW5jdGlvbihfMHg0NGNkMGMpe2lmKF8weDUxMDgoJzB4MWMzJyk9PT1fMHg1MTA4KCcweDFjNCcpKXt2YXIgXzB4MTU3MjFjPXRoaXM7XzB4MTU3MjFjWydfY29uc29sZU91dHB1dFRpbWVvdXQnXT1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7aWYoXzB4MTU3MjFjWydfY29uc29sZU91dHB1dCddW18weDUxMDgoJzB4YmUnKV0pe3ZhciBfMHgxMzM1Nzk9XzB4MTU3MjFjWydfY29uc29sZU91dHB1dCddW18weDUxMDgoJzB4MTE5JyldKDB4MCwweDE0KTtfMHgxNTcyMWNbXzB4NTEwOCgnMHgxYzUnKV1bXzB4NTEwOCgnMHhiZScpXT9fMHgxNTcyMWNbXzB4NTEwOCgnMHgxYzYnKV0oKTpfMHgxNTcyMWNbJ19jbGVhckNvbnNvbGVPdXRwdXRTZW5kUXVldWUnXSgpLF8weDE1NzIxY1tfMHg1MTA4KCcweDFjNycpXSh7J3R5cGUnOl8weDUxMDgoJzB4MWM4JyksJ21lc3NhZ2VzJzpfMHgxMzM1Nzl9KTt9fSwweDY0KTt9ZWxzZXt2YXIgXzB4MjY4YzA3PXRoaXM7XzB4NDRjZDBjPV8weDQ0Y2QwY3x8e30sXzB4MjY4YzA3W18weDUxMDgoJzB4OWUnKV1bJ19jbGVhblN0YWNrJ10oXzB4NDRjZDBjKTt2YXIgXzB4NGJkM2M5PV8weDUxMDgoJzB4MWM5JykrKF8weDQ0Y2QwY1tfMHg1MTA4KCcweGE4JyldfHxfMHg1MTA4KCcweDE3NycpKSxfMHgzMTRkM2Y9XzB4NDRjZDBjWydzdGFjayddfHxfMHg0YmQzYzk7Y29uc29sZVtfMHg1MTA4KCcweDI0JyldKF8weDMxNGQzZiksXzB4MjY4YzA3W18weDUxMDgoJzB4OWUnKV1bXzB4NTEwOCgnMHgxOWUnKV0oXzB4NGJkM2M5KTt9fSwnX2NyZWF0ZSc6ZnVuY3Rpb24oXzB4NDRjZDBjLF8weDI2OGMwNyl7dmFyIF8weDRiZDNjOT10aGlzO18weDRiZDNjOVtfMHg1MTA4KCcweDFhNycpXVsndGhlbiddKGZ1bmN0aW9uKCl7aWYoJ2tVdGtOJz09PV8weDUxMDgoJzB4MWNhJykpe18weDI2OGMwNyh7J3BhZ2VJZCc6XzB4NDRjZDBjfSk7fWVsc2V7dmFyIF8weDFiNDQ5MT1fMHgxYzk2M2I7XzB4MWM5NjNiPV8weDFjOTYzYltfMHg1MTA4KCcweGJmJyldKF8weDRiZDNjOVsnZnJvbSddLF8weDRiZDNjOVsndG8nXSksXzB4MWM5NjNiPT09XzB4MWI0NDkxJiZjb25zb2xlW18weDUxMDgoJzB4MTcyJyldKF8weDI2OGMwNysnXHgyMCgnK18weDQ0Y2QwY1tfMHg1MTA4KCcweDFjYicpXVsnam9pbiddKCcsXHgyMCcpKycpJyk7fX0pO30sJ19yZWN5Y2xlJzpmdW5jdGlvbihfMHg0NGNkMGMpe2lmKF8weDUxMDgoJzB4MWNjJyk9PT1fMHg1MTA4KCcweDFjZCcpKXtyZXR1cm4gXzB4N2QxMWEzKCk7fWVsc2V7dmFyIF8weDI2OGMwNz10aGlzO18weDI2OGMwN1snX2hvc3QnXSYmXzB4MjY4YzA3W18weDUxMDgoJzB4MWE1JyldWydzZW5kJ10oeyd0eXBlJzpfMHg1MTA4KCcweDFjZScpLCdwYWdlSWQnOl8weDQ0Y2QwY1sncGFnZUlkJ119KTt9fSwnX2V2YWx1YXRlT25QYWdlJzpmdW5jdGlvbihfMHg0NGNkMGMsXzB4MjY4YzA3LF8weDRiZDNjOSl7dmFyIF8weDMxNGQzZj10aGlzLF8weDdkMTFhMz17J3R5cGUnOl8weDUxMDgoJzB4MWNmJyksJ3BhZ2VJZCc6XzB4NDRjZDBjLCdhY3Rpb24nOicoJytfMHgyNjhjMDdbJ3RvU3RyaW5nJ10oKStfMHg1MTA4KCcweDFkMCcpfTtfMHgzMTRkM2ZbXzB4NTEwOCgnMHgxZDEnKV0oXzB4N2QxMWEzLF8weDRiZDNjOXx8X1tfMHg1MTA4KCcweDE2NScpXSk7fSwnX29wZW5QYWdlJzpmdW5jdGlvbihfMHg0NGNkMGMsXzB4MjY4YzA3LF8weDRiZDNjOSxfMHgzMTRkM2Ype2lmKF8weDUxMDgoJzB4MWQyJykhPT0neUdRbFgnKXt2YXIgXzB4NDA2ODc1PV8weDQ0Y2QwYygnbW9kdWxlJyk7cmV0dXJuIF8weDQwNjg3NVtfMHg1MTA4KCcweDFkMycpXShfMHgyNjhjMDcpO31lbHNle3ZhciBfMHg3ZDExYTM9dGhpcyxfMHgxYzk2M2I9eyd0eXBlJzpfMHg1MTA4KCcweDFkNCcpLCdwYWdlSWQnOl8weDQ0Y2QwYywndXJsJzpfMHgyNjhjMDcsJ29wdGlvbnMnOl8weDRiZDNjOX07XzB4N2QxMWEzW18weDUxMDgoJzB4MWQxJyldKF8weDFjOTYzYixfMHgzMTRkM2Z8fF9bXzB4NTEwOCgnMHgxNjUnKV0pO319LCdfY2xvc2VQYWdlJzpmdW5jdGlvbihfMHg0NGNkMGMpe3ZhciBfMHgyNjhjMDc9dGhpcztfMHgyNjhjMDdbJ19ob3N0J11bXzB4NTEwOCgnMHgxNmYnKV0oeyd0eXBlJzpfMHg1MTA4KCcweDFjZScpLCdwYWdlSWQnOl8weDQ0Y2QwY30pO30sJ19jYXB0dXJlUGFnZSc6ZnVuY3Rpb24oXzB4NDRjZDBjLF8weDI2OGMwNyl7dmFyIF8weDRiZDNjOT10aGlzLF8weDMxNGQzZj1RW18weDUxMDgoJzB4MWQ1JyldKCk7dHJ5e18weDRiZDNjOVsnX3JlcXVlc3RXaXRoQ29ycmVsYXRpb25JZCddKHsndHlwZSc6J2NhcHR1cmVQYWdlJywnZmlsZSc6XzB4MjY4YzA3LCdwYWdlSWQnOl8weDQ0Y2QwY30sZnVuY3Rpb24oKXtpZihfMHg1MTA4KCcweDFkNicpIT09XzB4NTEwOCgnMHgxZDcnKSl7XzB4MzE0ZDNmW18weDUxMDgoJzB4MWQ4JyldKCk7fWVsc2V7XzB4MWM5NjNiKF8weDI2OGMwNyk7fX0pLF8weDRiZDNjOVtfMHg1MTA4KCcweDEyMScpXT1fMHgzMTRkM2ZbXzB4NTEwOCgnMHgxYTgnKV07fWNhdGNoKF8weDFhNGFiOCl7XzB4MzE0ZDNmWydyZWplY3QnXShuZXcgRXJyb3IoJ0ZhaWxlZFx4MjB0b1x4MjByZW5kZXJceDIwdGVzdFx4MjBydW5ceDIwc2NyZWVuXHgyMHNob3QnKSksY29uc29sZVtfMHg1MTA4KCcweDI0JyldKF8weDUxMDgoJzB4MWQ5JyksXzB4MWE0YWI4W18weDUxMDgoJzB4YTgnKV0pO319LCdfcHJlcGFyZSc6ZnVuY3Rpb24oXzB4NDRjZDBjLF8weDI2OGMwNyl7dmFyIF8weDRiZDNjOT10aGlzLF8weDdkMTFhMz1fW18weDUxMDgoJzB4MTQ2JyldKCksXzB4MWM5NjNiPV8weDRiZDNjOVtfMHg1MTA4KCcweDEyYycpXVsnc2FuZGJveE5hbWUnXShfMHgyNjhjMDcsXzB4N2QxMWEzKTtyZXR1cm4gXzB4MzE0ZDNmKF8weDUxMDgoJzB4MTQ4JyksXzB4MWM5NjNiKSxfMHg0YmQzYzlbXzB4NTEwOCgnMHg4NicpXVsnZ2V0V29ya2VyJ10oXzB4MjY4YzA3KVsndGhlbiddKGZ1bmN0aW9uKCl7cmV0dXJuIF8weDRiZDNjOVtfMHg1MTA4KCcweDg2JyldW18weDUxMDgoJzB4MTVjJyldKCk/UVsncmVqZWN0J10oeydydW5DYW5jZWxsZWQnOiEweDB9KTooXzB4MzE0ZDNmKF8weDUxMDgoJzB4MTRiJyksXzB4MWM5NjNiKSxfMHg0YmQzYzlbJ19icm93c2VyRW52aXJvbm1lbnQnXVtfMHg1MTA4KCcweDE0YycpXShfMHg0NGNkMGMsXzB4N2QxMWEzLF8weDI2OGMwNykpO30pW18weDUxMDgoJzB4MWRhJyldKGZ1bmN0aW9uKF8weDQ0Y2QwYyl7aWYoXzB4NTEwOCgnMHgxZGInKT09PSd0Y2dyTicpe3JldHVybiBfW18weDUxMDgoJzB4MWRjJyldKF8weDQ0Y2QwY1sncmVwbGFjZSddKC9fc3BhY2VfdG9rZW5fL2csJ1x4MjAnKSwnXHgyMicpO31lbHNle3JldHVybiBfMHg0YmQzYzlbXzB4NTEwOCgnMHg4NicpXVtfMHg1MTA4KCcweDE1YycpXSgpP1FbXzB4NTEwOCgnMHgxZGQnKV0oeydydW5DYW5jZWxsZWQnOiEweDB9KTooXzB4MzE0ZDNmKF8weDUxMDgoJzB4MWRlJyksXzB4MWM5NjNiKSxRWyd3aGVuJ10oeydpbnN0YW5jZSc6eydyZXN1bWUnOmZ1bmN0aW9uKCl7XzB4NGJkM2M5W18weDUxMDgoJzB4MWRmJyldKF8weDI2OGMwNyxmdW5jdGlvbigpe2lmKF8weDUxMDgoJzB4MWUwJyk9PT1fMHg1MTA4KCcweDFlMScpKXtfMHgxYzk2M2JbXzB4NTEwOCgnMHgxZTInKV0oXzB4MjY4YzA3KTt9ZWxzZXskXyR0cmFjZXJbXzB4NTEwOCgnMHgxNTQnKV0oKTt9fSk7fSwncGluZyc6ZnVuY3Rpb24oXzB4NDRjZDBjKXtfMHg0YmQzYzlbXzB4NTEwOCgnMHgxZGYnKV0oXzB4MjY4YzA3LGZ1bmN0aW9uKCl7fSxfMHg0NGNkMGMpO30sJ2Nsb3NlJzpmdW5jdGlvbigpe18weDRiZDNjOVsnX2Nsb3NlUGFnZSddKF8weDI2OGMwNyk7fSwnY2xvc2luZyc6ZnVuY3Rpb24oKXtpZihfMHg1MTA4KCcweDFlMycpIT09XzB4NTEwOCgnMHgxZTMnKSl7cmV0dXJuIF8weDQ0Y2QwYz1fWydpc1VuZGVmaW5lZCddKF8weDI2OGMwNyk/XzB4NDRjZDBjOl8weDQ0Y2QwY1snc3Vic3RyJ10oMHgwLF8weDI2OGMwNyksXzB4NDRjZDBjW18weDUxMDgoJzB4MTI1JyldKF9bXzB4NTEwOCgnMHgxZTQnKV0oXzB4NGJkM2M5KT8vXHJcbnxccnxcbi86XzB4NGJkM2M5KTt9ZWxzZXtfMHg0YmQzYzlbXzB4NTEwOCgnMHgxMjEnKV09UVtfMHg1MTA4KCcweGY2JyldKCk7fX0sJ3N0YXJ0JzpmdW5jdGlvbihfMHgzMTRkM2Ype18weDRiZDNjOVtfMHg1MTA4KCcweDFlNScpXShfMHgyNjhjMDcsXzB4NDRjZDBjLF8weDRiZDNjOVsnX2Vudk9wdGlvbnMnXSxmdW5jdGlvbihfMHg0NGNkMGMpe18weDMxNGQzZihfMHg0NGNkMGNbXzB4NTEwOCgnMHgxNWEnKV0pJiZfMHg0YmQzYzlbXzB4NTEwOCgnMHgxZGYnKV0oXzB4MjY4YzA3LGZ1bmN0aW9uKCl7aWYoXzB4NTEwOCgnMHgxZTYnKT09PV8weDUxMDgoJzB4MWU2JykpeyRfJHRyYWNlcltfMHg1MTA4KCcweDZhJyldKCk7fWVsc2V7dmFyIF8weDQ3N2IxZD1fMHg0NGNkMGNbJ251bWJlciddKCk7aWYoXzB4NDc3YjFkPj1fMHgyNjhjMDdbJ3N0YXJ0J10mJl8weDQ3N2IxZDw9XzB4MjY4YzA3W18weDUxMDgoJzB4NmInKV0pcmV0dXJuIF8weDQ0Y2QwY1tfMHg1MTA4KCcweDEwOCcpXSgpLHRoaXNbJ19yZWN5Y2xlZExpbmVzJ11bXzB4NTEwOCgnMHg0YicpXShfMHg0NGNkMGMpLCEweDA7fX0pO30pO319LCduYW1lJzpfMHgxYzk2M2IsJ3Nlc3Npb25JZCc6XzB4N2QxMWEzLCd3b3JrZXJJZCc6XzB4MjY4YzA3fSkpO319KTt9LCdjYW5jZWwnOmZ1bmN0aW9uKF8weDQ0Y2QwYyl7aWYoXzB4NTEwOCgnMHgxZTcnKT09PV8weDUxMDgoJzB4MWU3Jykpe3ZhciBfMHgyNjhjMDc9dGhpcztyZXR1cm4gXzB4MjY4YzA3W18weDUxMDgoJzB4ODYnKV1bXzB4NTEwOCgnMHgxMzYnKV0oXzB4NDRjZDBjKTt9ZWxzZXtyZXR1cm4gXzB4NDRjZDBjWydyYW5nZXMnXTt9fSwnc3RhcnQnOmZ1bmN0aW9uKCl7dmFyIF8weDQ0Y2QwYz10aGlzO3JldHVybiBfMHg0NGNkMGNbXzB4NTEwOCgnMHg4NicpXVsnc3RhcnQnXShfMHg0NGNkMGNbXzB4NTEwOCgnMHgxMmMnKV1bXzB4NTEwOCgnMHgxM2EnKV0oKSlbXzB4NTEwOCgnMHgxZGEnKV0oZnVuY3Rpb24oXzB4MjY4YzA3KXtyZXR1cm4gXzB4NDRjZDBjW18weDUxMDgoJzB4ODYnKV1bXzB4NTEwOCgnMHgxM2MnKV0oXzB4NDRjZDBjW18weDUxMDgoJzB4MTJjJyldWydzYW5kYm94Um9vdFVybCddKCkpLFFbXzB4NTEwOCgnMHhmNicpXShfMHgyNjhjMDcpO30pO30sJ3N0b3AnOmZ1bmN0aW9uKCl7dmFyIF8weDQ0Y2QwYz10aGlzO18weDQ0Y2QwY1snX2hvc3QnXSYmKF8weDQ0Y2QwY1snX2hvc3QnXVtfMHg1MTA4KCcweDE2ZicpXSh7J3R5cGUnOidzdG9wJ30pLF8weDQ0Y2QwY1tfMHg1MTA4KCcweDFhNScpXVtfMHg1MTA4KCcweDFlOCcpXSgpLGRlbGV0ZSBfMHg0NGNkMGNbXzB4NTEwOCgnMHgxYTYnKV0sZGVsZXRlIF8weDQ0Y2QwY1snX2hvc3QnXSksXzB4NDRjZDBjWydfd29ya2VyUG9vbCddW18weDUxMDgoJzB4MTNkJyldKCk7fSwnX3JlcXVlc3RXaXRoQ29ycmVsYXRpb25JZCc6ZnVuY3Rpb24oXzB4NDRjZDBjLF8weDI2OGMwNyl7aWYoXzB4NTEwOCgnMHgxZTknKSE9PV8weDUxMDgoJzB4MWVhJykpe3ZhciBfMHg0YmQzYzk9dGhpcyxfMHgzMTRkM2Y9KytfMHg0MTA1MGUsXzB4N2QxMWEzPV8weDRiZDNjOVtfMHg1MTA4KCcweDFhNicpXVtfMHgzMTRkM2ZdPXsnZG9uZSc6XzB4MjY4YzA3fTtfMHg0NGNkMGNbJ2lkJ109XzB4MzE0ZDNmLF8weDRiZDNjOVsnX2hvc3QnXVtfMHg1MTA4KCcweDE2ZicpXShfMHg0NGNkMGMpLF8weDdkMTFhM1tfMHg1MTA4KCcweDFlYicpXT1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7aWYoXzB4NTEwOCgnMHgxZWMnKT09PV8weDUxMDgoJzB4MWVkJykpe3ZhciBfMHg1YTYxNjE9ISFfMHg0NGNkMGNbJ21lc3NhZ2VzJ11bJ2ZpbmQnXShmdW5jdGlvbihfMHg0MmRkN2Qpe3JldHVybiBfMHg0MmRkN2RbXzB4NTEwOCgnMHgxZWUnKV0oKVtfMHg1MTA4KCcweDFlZicpXVtfMHg1MTA4KCcweDFmMCcpXTt9KTtfMHg1YTYxNjEmJiFfMHg0YmQzYzlbXzB4NTEwOCgnMHgxZjEnKV1bXzB4MjY4YzA3XSYmKF8weDRiZDNjOVtfMHg1MTA4KCcweDFmMScpXVtfMHgyNjhjMDddPXt9KTt2YXIgXzB4Mjg0ZmI4PV8weDRiZDNjOVtfMHg1MTA4KCcweDFmMScpXVtfMHgyNjhjMDddO18weDMxNGQzZltfMHgyNjhjMDddPXsnbWVzc2FnZXMnOl8weDI4NGZiOD9fMHg0YmQzYzlbXzB4NTEwOCgnMHgxZjInKV0oXzB4NDRjZDBjW18weDUxMDgoJzB4MWYzJyldLCEweDApOltdLCduYW1lJzpfMHg0NGNkMGNbXzB4NTEwOCgnMHgxNTInKV19LF8weDI4NGZiOCYmKF8weDQ0Y2QwY1tfMHg1MTA4KCcweDFmMycpXT1bXSk7fWVsc2V7ZGVsZXRlIF8weDRiZDNjOVtfMHg1MTA4KCcweDFhNicpXVtfMHgzMTRkM2ZdO319LDB4MTI0ZjgwKTt9ZWxzZXt2YXIgXzB4NGU5OWE4PV8weDdkMTFhM1tfMHg1MTA4KCcweDFmNCcpXShfMHg0NGNkMGMpO3JldHVybiBfMHg0ZTk5YThbJ2NoYW5nZWQnXT1fMHgxYzk2M2I/ISFfMHg0MTA1MGVbXzB4NDRjZDBjW18weDUxMDgoJzB4NTAnKV0oKV18fHZvaWQgMHgwOjB4MSxfMHg0ZTk5YTg7fX0sJ19yZXNwb25zZVdpdGhDb3JyZWxhdGlvbklkJzpmdW5jdGlvbihfMHg0NGNkMGMpe3ZhciBfMHgyNjhjMDc9dGhpc1tfMHg1MTA4KCcweDFhNicpXVtfMHg0NGNkMGNbJ2lkJ11dO2RlbGV0ZSB0aGlzW18weDUxMDgoJzB4MWE2JyldW18weDQ0Y2QwY1snaWQnXV0sXzB4MjY4YzA3JiYoY2xlYXJUaW1lb3V0KF8weDI2OGMwN1sndGltZW91dCddKSxfMHgyNjhjMDdbXzB4NTEwOCgnMHgxMDknKV0oXzB4NDRjZDBjKSk7fX0sXzB4MjY4YzA3W18weDUxMDgoJzB4MicpXT1fMHhlNjE2NjY7fSx7Jy4vYnJvd3NlckVudmlyb25tZW50JzoweDQsJy4vcnVuV29ya2VyUG9vbCc6MHgxZCwnY2hpbGRfcHJvY2Vzcyc6dm9pZCAweDAsJ3BhdGgnOnZvaWQgMHgwfV0sNzpbZnVuY3Rpb24oXzB4MjI3OTE3LF8weDg1MGU2MSxfMHg3YTkwN2Ypeyd1c2Ugc3RyaWN0Jzt2YXIgXzB4NTNmYjQ5PWdsb2JhbFtfMHg1MTA4KCcweDFmNScpXTtpZihfMHg1MTA4KCcweDFmNicpIT09XzB4NTNmYjQ5W18weDUxMDgoJzB4MWY3JyldKCl8fCdmdW5jdGlvblx4MjB0b1N0cmluZygpXHgyMHtceDIwW25hdGl2ZVx4MjBjb2RlXVx4MjB9JyE9PV8weDUzZmI0OVtfMHg1MTA4KCcweDFmNycpXVtfMHg1MTA4KCcweDFmNycpXSgpKXJldHVybiB2b2lkKF8weDg1MGU2MVtfMHg1MTA4KCcweDInKV09eydjcmVhdGUnOmZ1bmN0aW9uKCl7fX0pO3ZhciBfMHgzOTEwODA9XzB4MjI3OTE3KCdwYXRoJyksXzB4MjY3ZmFhPWZ1bmN0aW9uKF8weDg1MGU2MSl7aWYoXzB4NTEwOCgnMHgxZjgnKT09PV8weDUxMDgoJzB4MWY4Jykpe3ZhciBfMHg3YTkwN2YsXzB4NTNmYjQ5PV8weDIyNzkxNyhfMHg1MTA4KCcweDFmOScpKTtpZihfMHg4NTBlNjFbXzB4NTEwOCgnMHgxNDInKV0pXzB4N2E5MDdmPV8weDg1MGU2MVtfMHg1MTA4KCcweDE0MicpXTtlbHNle3ZhciBfMHgzOTEwODA9XzB4MjI3OTE3KF8weDUxMDgoJzB4MWZhJykpO18weDdhOTA3Zj1uZXcgXzB4MzkxMDgwKHsnZmlsZUlkQnlQYXRoJzpmdW5jdGlvbihfMHgyMjc5MTcpe3JldHVybiBfMHg4NTBlNjFbXzB4NTEwOCgnMHhhNScpXShfMHgyMjc5MTcpO30sJ3Byb2plY3QnOl8weDg1MGU2MX0pO31fMHg4NTBlNjFbXzB4NTEwOCgnMHgxZmInKV09bmV3IF8weDUzZmI0OShfMHg3YTkwN2YpLF8weDg1MGU2MVtfMHg1MTA4KCcweDFmYicpXVsnb24nXShfMHg1MTA4KCcweGE4JyksZnVuY3Rpb24oXzB4MjI3OTE3KXtpZihfMHg1MTA4KCcweDFmYycpPT09XzB4NTEwOCgnMHgxZmQnKSl7aWYoIV8weDIyNzkxN1tfMHg1MTA4KCcweDFmZScpXSgpKXt2YXIgXzB4MTM5ZjI1PV8weDIyNzkxN1tfMHg1MTA4KCcweDFmZicpXSgpLF8weDYyMGVlOT1fMHgzOTEwODBbXzB4NTEwOCgnMHgyMDAnKV1bXzB4MTM5ZjI1XTtfMHg2MjBlZTl8fChfMHg2MjBlZTk9bmV3IF8weDUzZmI0OShfMHgxMzlmMjUpLF8weDM5MTA4MFtfMHg1MTA4KCcweDIwMCcpXVtfMHgxMzlmMjVdPV8weDYyMGVlOSxhW18weDUxMDgoJzB4NGInKV0oXzB4NjIwZWU5KSksXzB4NjIwZWU5W18weDUxMDgoJzB4MjAxJyldKF8weDIyNzkxNyxfMHg4NTBlNjEpLHNbXzB4NTEwOCgnMHg0YicpXShfMHg2MjBlZTkpO319ZWxzZXtyZXR1cm4gXzB4NTEwOCgnMHgyMDInKT09PV8weDIyNzkxN1sndHlwZSddJiZfMHg4NTBlNjFbXzB4NTEwOCgnMHhhNycpXShfMHg1MTA4KCcweGE4JyksXzB4MjI3OTE3KTt9fSk7fWVsc2V7XzB4MzkxMDgwKCk7fX07XzB4ODUwZTYxWydleHBvcnRzJ109eydjcmVhdGUnOmZ1bmN0aW9uKF8weDg1MGU2MSxfMHg3YTkwN2Ype2lmKF8weDUxMDgoJzB4MjAzJykhPT1fMHg1MTA4KCcweDIwMycpKXtyZXR1cm4gX1tfMHg1MTA4KCcweGQ3JyldKHRoaXNbXzB4NTEwOCgnMHgyMDQnKV0oXzB4MjI3OTE3LF8weDg1MGU2MSkpW18weDUxMDgoJzB4MjA1JyldKGZ1bmN0aW9uKF8weDNjZDMzNSl7cmV0dXJuIV8weDNjZDMzNVsnaXNGYWlsaW5nJ10oKTt9KVsnc29ydEJ5J10oZnVuY3Rpb24oXzB4OTMwZDI1KXtyZXR1cm4tXzB4OTMwZDI1Wyd0cyddKCk7fSlbXzB4NTEwOCgnMHhkZScpXSgpO31lbHNle2lmKF8weDdhOTA3Zil7aWYoXzB4NTEwOCgnMHgyMDYnKT09PV8weDUxMDgoJzB4MjA3Jykpe3ZhciBfMHg1OWYwMTA9W10sXzB4M2YyYWQ5PV9bXzB4NTEwOCgnMHhiNScpXShfMHgyMjc5MTdbJ2FsbEFmZmVjdGVkRmlsZXMnXSxmdW5jdGlvbihfMHg1OWI0YTUsXzB4M2YyYWQ5KXt2YXIgXzB4NWUyOTQ2PV8weDg1MGU2MVtfMHg1MTA4KCcweDIwOCcpXShfMHgzZjJhZDkpO3JldHVybiBfMHg1ZTLigIs5NDYmJl8weDVlMjk0NlsndmFsdWVDaGFuZ2VkJ10mJihkZWxldGUgXzB4NWUyOTQ2Wyd2YWx1ZUNoYW5nZWQnXSxfMHg1OWI0YTVbXzB4M2YyYWQ5W18weDUxMDgoJzB4NTAnKV0oKV09XzB4NWUyOTQ2KSxfMHg4NTBlNjFbXzB4NTEwOCgnMHgyMDknKV1bXzB4M2YyYWQ5W18weDUxMDgoJzB4MzQnKV0oKV0mJl8weDU5ZjAxMFtfMHg1MTA4KCcweDRiJyldKHsnYWN0aW9uJzonYWZmZWN0ZWQnLCdwYXRoJzpfMHgzZjJhZDlbXzB4NTEwOCgnMHgzNCcpXSgpLCdpZCc6XzB4M2YyYWQ5W18weDUxMDgoJzB4NTAnKV0oKSwndGVzdCc6XzB4M2YyYWQ5W18weDUxMDgoJzB4N2EnKV0oKXx8dm9pZCAweDB9KSxfMHg1OWI0YTU7fSx7fSk7X1tfMHg1MTA4KCcweDEzNCcpXShfMHgzZjJhZDkpfHx0aGlzWydfc2VuZCddKHsndHlwZSc6XzB4NTEwOCgnMHgyMGEnKSwnY2hhbmdlcyc6XzB4M2YyYWQ5fSksX1tfMHg1MTA4KCcweDEzNCcpXShfMHg1OWYwMTApfHx0aGlzW18weDUxMDgoJzB4MTQwJyldKHsndHlwZSc6XzB4NTEwOCgnMHgyMGInKSwnZmlsZXMnOl8weDU5ZjAxMH0pO31lbHNle2lmKF8weDg1MGU2MVtfMHg1MTA4KCcweDE5JyldKXRyeXtpZihfMHg1MTA4KCcweDIwYycpIT09J095RGh1Jyl7cmV0dXJuIF8weDUzZmI0OVtfMHg1MTA4KCcweDIwZCcpXShfMHg1MTA4KCcweDE3ZicpLGZ1bmN0aW9uKCl7cmV0dXJuIF8weDdhOTA3ZihfMHgyMjc5MTcpO30pW18weDUxMDgoJzB4MTdmJyldKCk7fWVsc2V7dmFyIF8weDNiZGQ4OT1fMHg4NTBlNjFbXzB4NTEwOCgnMHgxOScpXVtfMHg1MTA4KCcweDEyNScpXSgnLScpLF8weDU4MjU4ZD1uZXcgXzB4NTNmYjQ5KF8weDNiZGQ4OVsweDFdKycvJytfMHgzYmRkODlbMHgwXSsnLycrXzB4M2JkZDg5WzB4Ml0pO18weDU4MjU4ZFsnc2V0RGF0ZSddKF8weDU4MjU4ZFtfMHg1MTA4KCcweDIwZScpXSgpKzB4MSk7dmFyIF8weDdkYzI5NT1uZXcgXzB4NTNmYjQ5KDB4MTZkMzg1NGI1MWIpO2lmKF8weDdkYzI5NVtfMHg1MTA4KCcweDIwZicpXSgweDAsMHgwLDB4MCwweDApLCFwcm9jZXNzW18weDUxMDgoJzB4NycpXVtfMHg1MTA4KCcweDUnKV0mJl8weDU4MjU4ZDxfMHg3ZGMyOTV8fHByb2Nlc3NbJ2VudiddW18weDUxMDgoJzB4NScpXSYmXzB4ODUwZTYxWydpbnZhbGlkVmVyc2lvbiddKXtpZihfMHg1MTA4KCcweDIxMCcpPT09XzB4NTEwOCgnMHgyMTAnKSl7dmFyIF8weDU4YWU4Nz1wcm9jZXNzW18weDUxMDgoJzB4NycpXVtfMHg1MTA4KCcweDUnKV0/XzB4NTEwOCgnMHgyMTEnKTpfMHg1MTA4KCcweDgnKSxfMHhiMDdiNDg9cHJvY2Vzc1tfMHg1MTA4KCcweDcnKV1bXzB4NTEwOCgnMHg1JyldP18weDUxMDgoJzB4MjEyJyk6XzB4NTEwOCgnMHgyMTMnKTtyZXR1cm4gUVsncmVqZWN0J10oeydtZXNzYWdlJzpfMHg1MTA4KCcweDIxNCcpK18weDU4YWU4NysnXHgyMHZlcnNpb25ceDIwaXNceDIwbm90XHgyMGNvdmVyZWRceDIwYnlceDIweW91clx4MjBjdXJyZW50XHgyMGxpY2Vuc2UuXHgwYVBsZWFzZVx4MjB2aXNpdFx4MjBvdXJceDIwd2Vic2l0ZVx4MjB0b1x4MjB1cGdyYWRlXHgyMHlvdXJceDIwbGljZW5zZTpceDIwJytfMHhiMDdiNDgrJy4nW18weDUxMDgoJzB4MTI1JyldKCcnKVtfMHg1MTA4KCcweDIxNScpXSgpW18weDUxMDgoJzB4ODInKV0oJycpLCdub0RldGFpbHMnOiEweDB9KTt9ZWxzZXt0aGlzW18weDUxMDgoJzB4MjE2JyldPV8weDIyNzkxNyx0aGlzWydfcmFuZ2VzJ109T2JqZWN0W18weDUxMDgoJzB4OWEnKV0obnVsbCksdGhpc1tfMHg1MTA4KCcweDIxNycpXT0rK18weDU4MjU4ZDt9fX19Y2F0Y2goXzB4Mjg5N2NlKXt9cHJvY2Vzc1tfMHg1MTA4KCcweDcnKV1bXzB4NTEwOCgnMHg1JyldfHxfMHgyNjdmYWEoXzB4N2E5MDdmKTt2YXIgXzB4NWYxYTk0PV8weDIyNzkxNyhfMHg1MTA4KCcweDIxOCcpKSxfMHg3ZDI0Yzk9MHg3ZDA7aWYoXzB4ODUwZTYxWydsaWNlbnNlJ10mJl8weDg1MGU2MVtfMHg1MTA4KCcweDIxOScpXSE9PV8weDdhOTA3ZltfMHg1MTA4KCcweDIxYScpXSYmIV8weDg1MGU2MVtfMHg1MTA4KCcweDIxYicpXSl7aWYoJ1BJR2VSJyE9PV8weDUxMDgoJzB4MjFjJykpe3ZhciBfMHg0YWViNmM9c2V0SW50ZXJ2YWwoZnVuY3Rpb24oKXtfMHg1ZjFhOTRbJ2VtaXQnXShfMHg1MTA4KCcweDIxZCcpLF8weDg1MGU2MVtfMHg1MTA4KCcweDIxOScpXSk7fSxfMHg3ZDI0YzkpO18weDVmMWE5NFsnb24nXShfMHg1MTA4KCcweDIxZCcpLGZ1bmN0aW9uKF8weDIyNzkxNyxfMHg1M2ZiNDkpe2lmKF8weDUxMDgoJzB4MjFlJyk9PT1fMHg1MTA4KCcweDIxZScpKXtpZihfMHg4NTBlNjFbJ2xpY2Vuc2UnXSYmXzB4MjI3OTE3JiZfMHg4NTBlNjFbXzB4NTEwOCgnMHgyMTknKV09PT1fMHgyMjc5MTcpe2lmKF8weDUxMDgoJzB4MjFmJyk9PT1fMHg1MTA4KCcweDIxZicpKXtpZignMC4wLjAuMCc9PT1fMHg1M2ZiNDl8fCcxMjcuMC4wLjEnPT09XzB4NTNmYjQ5KXJldHVybjtfMHg3YTkwN2ZbXzB4NTEwOCgnMHgxYzcnKV0oeyd0eXBlJzpfMHg1MTA4KCcweDIyMCcpLCdhZGRyZXNzJzpfMHg1M2ZiNDl9KTt9ZWxzZXtfMHg4NTBlNjEoXzB4MjI3OTE3W18weDUxMDgoJzB4ZGUnKV0pO319fWVsc2V7cmV0dXJuIHRoaXNbXzB4NTEwOCgnMHgxNWInKV07fX0pLF8weDdhOTA3ZltfMHg1MTA4KCcweDIyMScpXT17J3N0b3AnOmZ1bmN0aW9uKCl7Y2xlYXJJbnRlcnZhbChfMHg0YWViNmMpLF8weDVmMWE5NFsnc3RvcCddKCk7fX07fWVsc2V7dmFyIF8weDQ2M2U1ZT10aGlzW18weDUxMDgoJzB4MjIyJyldKCk7cmV0dXJuIHRoaXNbXzB4NTEwOCgnMHgyMjMnKV09PT1fMHg0NjNlNWVbXzB4NTEwOCgnMHhiZScpXSYmKHRoaXNbXzB4NTEwOCgnMHgyMjMnKV09MHgwKSxfMHg0NjNlNWVbdGhpc1tfMHg1MTA4KCcweDIyMycpXSsrXTt9fXJldHVybiBfMHg4NTBlNjFbJ2xpY2Vuc2UnXT9RW18weDUxMDgoJzB4ZjYnKV0oITB4MCk6XzB4N2E5MDdmW18weDUxMDgoJzB4MjI0JyldKF8weDM5MTA4MFtfMHg1MTA4KCcweDIyNScpXShfX2Rpcm5hbWUpKVtfMHg1MTA4KCcweGE5JyldKGZ1bmN0aW9uKCl7cmV0dXJuIFFbXzB4NTEwOCgnMHhmNicpXSh7fSk7fSlbXzB4NTEwOCgnMHgxZGEnKV0oZnVuY3Rpb24oXzB4MjI3OTE3KXtpZihfMHgyMjc5MTcmJl8weDIyNzkxN1snbXRpbWUnXSl7dmFyIF8weDg1MGU2MT1fMHgyMjc5MTdbXzB4NTEwOCgnMHgyMjYnKV07aWYoXzB4ODUwZTYxW18weDUxMDgoJzB4MjI3JyldKF8weDIyNzkxN1tfMHg1MTA4KCcweDIyNicpXVtfMHg1MTA4KCcweDIwZScpXSgpKzB4MWUpLG5ldyBfMHg1M2ZiNDkoKT5fMHg4NTBlNjEpcmV0dXJuIFFbXzB4NTEwOCgnMHgxZGQnKV0oeydtZXNzYWdlJzonbW9jLnNqeWJhbGxhd0BvbGxlaFx4MjB0YVx4MjBsaWFtZVx4MjBhaXZceDIwc3VceDIwdGNhdG5vY1x4MjBlc2FlbHBceDIwLG1hZXRceDIwcnVveVx4MjByb1x4MjBmbGVzcnVveVx4MjByb2ZceDIwZG9pcmVwXHgyMGxhaXJ0XHgyMHJlZ25vbFx4MjBhXHgyMGVnbmFycmFceDIwb3RceDIwZWtpbFx4MjBkbHVvd1x4MjB1b3lceDIwZklceDBhLmVzbmVjaWxceDIwYVx4MjBlc2FoY3J1cFx4MjBvdFx4MjBlc2FoY3J1cC9tb2Muc2p5YmFsbGF3Ly86c3B0dGhceDIwdGFceDIwZXRpc2Jld1x4MjBydW9ceDIwdGlzaXZceDIwZXNhZWxwXHgyMCx0Y2Vqb3JwXHgyMGVodFx4MjB0cm9wcHVzXHgyMGRuYVx4MjB0aVx4MjBnbmlzdVx4MjBldW5pdG5vY1x4MjBvdFx4MjBla2lsXHgyMGRsdW93XHgyMHVveVx4MjBkbmFceDIwLHl0aXZpdGN1ZG9ycFx4MjBydW95XHgyMGRlc2FlcmNuaVx4MjBzYWhceDIwc2oueWJhbGxhd1x4MjBmSVx4MGEudHVvXHgyMHRpXHgyMGduaXlydFx4MjByb2ZceDIwc2tuYWh0XHgyMCxyZXZvXHgyMHNpXHgyMGRvaXJlcFx4MjBsYWlydFx4MjBzai55YmFsbGF3XHgyMHJ1b1knW18weDUxMDgoJzB4MTI1JyldKCcnKVtfMHg1MTA4KCcweDIxNScpXSgpW18weDUxMDgoJzB4ODInKV0oJycpLCdub0RldGFpbHMnOiEweDB9KTt9cmV0dXJuIFFbXzB4NTEwOCgnMHhmNicpXSghMHgwKTt9KTt9fXJldHVybiBfMHgyMjc5MTcoJy4vZXh0ZW5zaW9uL2NvcmUnKTt9fX07fSx7Jy4vZXh0ZW5zaW9uL2NvcmUnOjB4OCwnLi9leHRlbnNpb24vc2VydmVyL21vZGVsJzoweDEyLCcuL2V4dGVuc2lvbi9zZXJ2ZXIvbXVsdGljYXN0ZXInOjB4MTMsJy4vZXh0ZW5zaW9uL3VpL3NlcnZpY2UnOjB4MTgsJ3BhdGgnOnZvaWQgMHgwfV0sODpbZnVuY3Rpb24oXzB4MjUwMjE4LF8weDFlNmU2NSxfMHg2NjRkMjgpeyd1c2Ugc3RyaWN0Jzt2YXIgXzB4NDYxZWQwPXRoaXMmJnRoaXNbXzB4NTEwOCgnMHgyMjgnKV18fGZ1bmN0aW9uKCl7dmFyIF8weDI1MDIxOD1mdW5jdGlvbihfMHgxZTZlNjUsXzB4NjY0ZDI4KXtyZXR1cm4oXzB4MjUwMjE4PU9iamVjdFtfMHg1MTA4KCcweDIyOScpXXx8eydfX3Byb3RvX18nOltdfWluc3RhbmNlb2YgQXJyYXkmJmZ1bmN0aW9uKF8weDI1MDIxOCxfMHgxZTZlNjUpe2lmKCdXY1l2WCc9PT1fMHg1MTA4KCcweDIyYScpKXt2YXIgXzB4NTQ5ZGUzPXRoaXM7dGhpc1tfMHg1MTA4KCcweDIyYicpXT0hMHgwO3ZhciBfMHgxMzhiYzA9X1tfMHg1MTA4KCcweDFiYScpXSh0aGlzW18weDUxMDgoJzB4MjAwJyldKTt0aGlzWydfbGluZXMnXT1PYmplY3RbXzB4NTEwOCgnMHg5YScpXShudWxsKSxfW18weDUxMDgoJzB4MTM1JyldKF8weDEzOGJjMCxmdW5jdGlvbihfMHgxMzhiYzApe3ZhciBfMHg1MjQ3ZmQ9XzB4MTM4YmMwW18weDUxMDgoJzB4MjJjJyldKCk7aWYoIV8weDU0OWRlM1tfMHg1MTA4KCcweDIyZCcpXShfMHgxMzhiYzAsXzB4NjY0ZDI4KSl7XzB4NTI0N2ZkPl8weDI1MDIxOCYmKF8weDUyNDdmZCs9XzB4MWU2ZTY1LF8weDEzOGJjMFtfMHg1MTA4KCcweDIyYycpXShfMHg1MjQ3ZmQpKTt2YXIgXzB4NDIzYTgxPV8weDU0OWRlM1tfMHg1MTA4KCcweDIwMCcpXVtfMHg1MjQ3ZmRdO18weDQyM2E4MT8oXzB4NDIzYTgxW18weDUxMDgoJzB4MTA4JyldKCksXzB4MTM4YmMwW18weDUxMDgoJzB4MTA4JyldKCksXzB4NTQ5ZGUzW18weDUxMDgoJzB4MjJlJyldWydwdXNoJ10oXzB4NDIzYTgxKSxfMHg1NDlkZTNbXzB4NTEwOCgnMHgyMmUnKV1bXzB4NTEwOCgnMHg0YicpXShfMHgxMzhiYzApLGRlbGV0ZSBfMHg1NDlkZTNbJ19saW5lcyddW18weDUyNDdmZF0pOl8weDU0OWRlM1tfMHg1MTA4KCcweDIwMCcpXVtfMHg1MjQ3ZmRdPV8weDEzOGJjMDt9fSk7fWVsc2V7XzB4MjUwMjE4W18weDUxMDgoJzB4MjJmJyldPV8weDFlNmU2NTt9fXx8ZnVuY3Rpb24oXzB4MjUwMjE4LF8weDFlNmU2NSl7aWYoXzB4NTEwOCgnMHgyMzAnKSE9PV8weDUxMDgoJzB4MjMwJykpe3JldHVybiB0aGlzW18weDUxMDgoJzB4MTViJyldO31lbHNle2Zvcih2YXIgXzB4NjY0ZDI4IGluIF8weDFlNmU2NSlfMHgxZTZlNjVbXzB4NTEwOCgnMHg2OCcpXShfMHg2NjRkMjgpJiYoXzB4MjUwMjE4W18weDY2NGQyOF09XzB4MWU2ZTY1W18weDY2NGQyOF0pO319KShfMHgxZTZlNjUsXzB4NjY0ZDI4KTt9O3JldHVybiBmdW5jdGlvbihfMHgxZTZlNjUsXzB4NjY0ZDI4KXtpZihfMHg1MTA4KCcweDIzMScpIT09XzB4NTEwOCgnMHgyMzInKSl7ZnVuY3Rpb24gXzB4NDYxZWQwKCl7dGhpc1snY29uc3RydWN0b3InXT1fMHgxZTZlNjU7fV8weDI1MDIxOChfMHgxZTZlNjUsXzB4NjY0ZDI4KSxfMHgxZTZlNjVbJ3Byb3RvdHlwZSddPW51bGw9PT1fMHg2NjRkMjg/T2JqZWN0W18weDUxMDgoJzB4OWEnKV0oXzB4NjY0ZDI4KTooXzB4NDYxZWQwW18weDUxMDgoJzB4YWUnKV09XzB4NjY0ZDI4W18weDUxMDgoJzB4YWUnKV0sbmV3IF8weDQ2MWVkMCgpKTt9ZWxzZXt2YXIgXzB4Mzk5NTI4PXRoaXM7cmV0dXJuIF8weDM5OTUyOFtfMHg1MTA4KCcweDg2JyldWydnZXRXb3JrZXInXShfMHgyNTAyMTgpWyd0aGVuJ10oZnVuY3Rpb24oXzB4NDdiZTg3KXtyZXR1cm4gXzB4Mzk5NTI4W18weDUxMDgoJzB4ODYnKV1bJ2NhbmNlbGxlZCddKCk/UVtfMHg1MTA4KCcweDFkZCcpXSh7J3J1bkNhbmNlbGxlZCc6ITB4MH0pOihfMHg0NjFlZDAoXzB4NTEwOCgnMHgyMzMnKStfMHgyNTAyMTgpLF8weDM5OTUyOFsnX2NyZWF0ZVBhZ2UnXShfMHg0N2JlODcsXzB4MjUwMjE4KSk7fSk7fX07fSgpLF8weDEwOTk0MT1nbG9iYWxbXzB4NTEwOCgnMHgxZjUnKV07aWYoXzB4NTEwOCgnMHgxZjYnKSE9PV8weDEwOTk0MVsndG9TdHJpbmcnXSgpfHxfMHg1MTA4KCcweDIzNCcpIT09XzB4MTA5OTQxW18weDUxMDgoJzB4MWY3JyldW18weDUxMDgoJzB4MWY3JyldKCkpXzB4MWU2ZTY1W18weDUxMDgoJzB4MicpXT1mdW5jdGlvbigpe2lmKF8weDUxMDgoJzB4MjM1Jyk9PT0nSFhIUXYnKXtmdW5jdGlvbiBfMHgyNTAyMTgoKXt9cmV0dXJuIF8weDI1MDIxODt9ZWxzZXt2YXIgXzB4NTg4NTUxPXRoaXNbXzB4NTEwOCgnMHgyMzYnKV0oXzB4MjUwMjE4KTtpZihfMHg1ODg1NTEpe3ZhciBfMHgzYWRmMTQ9XzB4NTg4NTUxWydlcnJvcnMnXSgpO2lmKCFfMHgzYWRmMTRbXzB4NTEwOCgnMHhiZScpXSlyZXR1cm47dmFyIF8weDFlNmRlMz1fMHg1ODg1NTFbXzB4NTEwOCgnMHgyMzcnKV0oKTtpZihfMHg1MTA4KCcweDIzOCcpPT09XzB4MjUwMjE4W18weDUxMDgoJzB4NjknKV0pcmV0dXJuIHRoaXNbXzB4NTEwOCgnMHgyMzknKV0oX1tfMHg1MTA4KCcweGQ4JyldKF8weDNhZGYxNCxmdW5jdGlvbihfMHg1ODg1NTEpe3JldHVybiBfW18weDUxMDgoJzB4MjNhJyldKF8weDU4ODU1MVtfMHg1MTA4KCcweDE5ZCcpXSgpLGZ1bmN0aW9uKF8weDU4ODU1MSl7cmV0dXJuIF8weDU4ODU1MVtfMHg1MTA4KCcweDIzNycpXSgpPT09XzB4MWU2ZGUzJiZfMHg1ODg1NTFbXzB4NTEwOCgnMHgyM2InKV0oKT09PV8weDI1MDIxOFsnbGluZSddO30pO30pKVsweDBdO2lmKF8weDUxMDgoJzB4MjNjJyk9PT1fMHgyNTAyMThbJ3R5cGUnXSlyZXR1cm4gdGhpc1tfMHg1MTA4KCcweDIzOScpXShfMHgzYWRmMTQpWzB4MF07fX19KCk7ZWxzZXt2YXIgXzB4MWE4NGNiPV8weDI1MDIxOChfMHg1MTA4KCcweDIzZCcpKSxfMHgzYmQ4ZmI9XzB4MjUwMjE4KF8weDUxMDgoJzB4MzQnKSksXzB4NTg0MTVjPV8weDI1MDIxOCgnb3MnKSxfMHg2NDVkNmI9XzB4MjUwMjE4KCdub2RlLXV1aWQnKSxfMHg0OGVlZTg9XzB4MjUwMjE4KF8weDUxMDgoJzB4MjNlJykpLF8weDVlZDdmZj1fMHgyNTAyMTgoXzB4NTEwOCgnMHgyM2YnKSlbJ2V4ZWNTeW5jJ10sXzB4NDc4Njc4PV8weDI1MDIxOChfMHg1MTA4KCcweDI0MCcpKVsnc2V0VGltZW91dCddLF8weGRlNWU4Yj1fMHgyNTAyMTgoXzB4NTEwOCgnMHgyNDAnKSlbXzB4NTEwOCgnMHgyNDEnKV0sXzB4MmY3NTc2PV8weDI1MDIxOChfMHg1MTA4KCcweDI0MicpKSxfMHgzNDk2ZmM9XzB4MjUwMjE4KF8weDUxMDgoJzB4MjQzJykpLF8weDIwN2I1NT1fMHgyNTAyMTgoXzB4NTEwOCgnMHgyNDQnKSksXzB4MWE2ZWU3PV8weDI1MDIxOChfMHg1MTA4KCcweDI0NScpKSxfMHgzOWYzZDA9bG9nZ2VyWydjcmVhdGUnXShfMHg1MTA4KCcweDI0NicpKVtfMHg1MTA4KCcweDEyMCcpXSxfMHg1YWUyMzI9MHg5MjdjMCxfMHgzYTkzNzM9MHgxYjU4LF8weDFkNmUyND0weDUsXzB4NDRkZDMxPTB4ZSxfMHg1ZjFiNzQ9XzB4NTEwOCgnMHgyNDcnKSxfMHgxYWM3OWM9J2NvbnRpbnVlLXRyaWFsLWxpbmsnLF8weDI4MzRkMj1fMHg1MTA4KCcweDI0OCcpLF8weDU3OTA1Nj1fMHg1MTA4KCcweDI0OScpLF8weDExNTM4ZD0naHR0cHM6Ly93YWxsYWJ5anMuY29tL2Rvd25sb2FkLyN0cnktaXQtZnJlZScsXzB4MmVkMWViPV8weDUxMDgoJzB4MjRhJyksXzB4MWNmZGFjPV8weDUxMDgoJzB4MjRiJyksXzB4MzQ5MzNjPXsnQXRvbSc6XzB4NTEwOCgnMHgyNGMnKSwnVlNDb2RlJzonLS0tLS1CRUdJTlx4MjBQVUJMSUNceDIwS0VZLS0tLS1ceDBhTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF3ZjBSbjZyZ0ZNVk51YWVnM0tnOVx4MGFrakxOVVQ4WjJmbklyalVoREdNOEZTN281azROVDFGZHpucXNvQnByTGRyTFJka016akg4SVByckVVNXJLaVdsXHgwYVZPMGlLVTdRN0FtTWZBVFN0ZXp2ZnlzMEFBbCtvM2Yva1FpU1p4RDJVNVAvSzM4a2xZcHdmOUw4TU10aEFlRUZceDBheTR4ekE1ZUJ1UHpCZFJIeHZVd1VxaENCOW83M1o0TWF4SG5yYXo1aHgwZjZhZ0VkTFZVNlhzTmtvNXdYbjhaTlx4MGFQNkJia09PbS9IZ1U4S2tXdUpiVTU4eWdYeFBmL2ZuWkh1Mmd0dnJ6L3JOZW1vWFkxZkR5ZGl6TnhEeStaUGdQXHgwYWl3ZVNkcW5MaGxGb0pFdXhuSXdvUGxZTTdKd0toM0ppaE96QXFRUTVVNUprTTVlL21GUS9sRnFDVnhNbG1CUVdceDBhVndJREFRQUJceDBhLS0tLS1FTkRceDIwUFVCTElDXHgyMEtFWS0tLS0tJywnU3VibGltZSc6XzB4NTEwOCgnMHgyNGQnKSwnRnJlZWRvbSc6XzB4NTEwOCgnMHgyNGUnKSwnUXVva2thJzpfMHg1MTA4KCcweDI0ZicpLCdJbnRlbGxpSic6XzB4NTEwOCgnMHgyNTAnKSwnVlMnOl8weDUxMDgoJzB4MjUxJyl9LF8weDRiNjgxND17J05PZlRoNlY1TEZidUVJTnNtTFhFMnc5UzMxNmNIeGVVWkZNYkNwMzdGK3RHcmxMUXBuWkNvVkVCekNNQ1B2NkRpNFYxMUtQTkxIaXhkZ3dyQ0Z4OE9QUE42NDhzakkxelZNSXRNcGtEdGIvK0t3NHoyYlJJQXZwSXZnK3hHTm9DUjNXQ05JOWFZZTVVcHdRQXd0YXZrZ2JTT2R0d0ZqbUkvbWlTMFc2aldhR3VOdEJHdWRFU1Vyak0wVGUzdGNGUENNVHcwUlg1eWlJcmxlU2RCSlV4T1NaTFNwZjBnbDVhWStNc0tVOTh0ek1qVXVza0ZkazdJdmpUTWVDS0xvWnp3aHcxdEsxbXVwUE5tQ2JVR3VrUyt3VFVGUlZQQW9sQ3NUekcvUkRFaFZ3Y0tmTCs4L3JHTXVRQms0VnhnNkJyemk4ejlZSkxEdmxraGRyQU52QVdmdyc6MHgxLCdFY0hrditYa3luY3hSRFlXRVBRYm83WFZsalBEN1RuMHowcHptRGUrN29uT1VwZ2E1QXNrS0kwMnJEVFkrRStkVjQvaS9mYVhuMHZRanRCdzdFUmt3TDN3V1UxTXhyeDVNaGhzbnZaMkozTGNwam9pdTJUSmhsYlB5STF2VkcvRkFON1g1bVdFbHVyblJRR2pXQXBXTlNDQi9mOFBmZWRVYm1Dbmkvc2VuTTg5UU5yK1gzNGcwY2o3WkNRM1lYdm83dEtNcDNRa3duT3lIaHkwbTQrdWk4WGRKWEZPOFM0alhTT0hJL3orcjUzMldBL0lBS3lLbTNYNFVpU1ppTFRzTHZGNTVGYkdpMUpWMWFsT3lGa0RwVk54eEoyS1FETzJ5RTNvK2NpbGJWODJrU3crMXRGbC82bTdsbm93YTNDSFprTnVYWHpXRS9MNzlBMEdIYjhGcWcnOjB4MSwnb2o5dEFRYUtvQ0daTGxtYWdxZU4zVEVCVW9wUTFxcGNPUkljMHdnVjUrVEQzNE5haEdQVWhXaFVSYS9adHpsN0Vab3V0MzZjZVJ0TUcyUkwwK2laN0ZlY2NSVngyVTRNbU9tSGpObEFXZkNtKzA4dDZVd2k3QS9Od09TckluMkRWWTZyV09jTWlFSlk4aWJZZXpnQVd1dDcrV0EvTkYxV011ZEcveldndVdPNTl1QWFQeEd0RnRZTjdBTzdSWkRDbGFyb3IrS09NTmdzWjQvYmM2NENmTjN4dWYyRE9kTjBIN282VUpLa01KaUNwZGNFTXlTM1Z1SFJsRVZkVU1qM2plZlNlQ01GRmFibHBXMFlzQ2VCQTU3WlN3WXBIK05KNWkra1lkM3ZjbCtzc1FReVRHNWxZUitiMnFWWDVEWlVVTXV0MFdUTXYrM0hKQnpNcFNuTjZ3JzoweDEsJ3FuclhnbWN0VCtkOEFFNzBJbzFVUW8rN0hsaE5FbXFIVFZzaXJiWVQrejI4S041cHU2emlmOUJHRzdEWTBTdnpsQU9DUHlyWk56M294STlDbndZVDJmYURjOXhqYlJsZmJqcDA5VU0wYjdvcjA1c1hGRzJLM0hVZmN2TTZDOGhtOXVZcmVpVzRLTDFsMEUzRnVIaGV4dUd5b2ZhQnVuRjIxdWNFYnFXMUhMbnB1Q2xOKys0aGIrVWdIVm14S3o1N08wdk5VZUxrK2pxVFUrQkVNWHpOTWNZS1VRem9HcTBUMHNaL1pudWdNeVYyUlFsUHhtVGhtZ0d4REkrUVEyenF3aUdtUXlhc0hUS2k1VkdrUFg2VmpVZTBjVXJFUC9CbTQvVnV3aG1XakVlUkw2dG9OOTR6b0VhZVBDSSt5bkJ3Rk8xS3ZEd292NmZJWDAyYW8ybXZLdyc6MHgxLCdiM3ZNOGdGc25od3E4ZStmdTJ4dXBVRWJOTFdzU1ZSMnRiZVNEdUxMakk3Q3lDblFYT3p3ZWgvRE8vZEw2KzZ2T1hXN1pTUDdNL0NPdjF6d20vV3pIRjFXS0plU1lyV29UV1g0OWZIQlZMT0xOYkV3Tkh5WHQzRHdaeXVrZmRBQlVTWVVDYXRrMHY4YXFwbnQ0OTYvVFVUR2dZdkVqTklLb1oyTlc0dHJKQnlDNy8raDJLTERTU3FjZ2hhamNBK1pjRXo3Nk5vckFKbis1Y0RHYk1Qb1ljbzZwWWtheHdyK1BrS3BUQmhydThYdFRUeXh4VlkwMDFKYlZuaVU3dlBiZVdZWGNFM2dWdG1xUTRmM0tzY1ZlOERyNjBjNmlJSjUrdmtQUzcvNGtGUzRLTkJFWVFjVXEvcWI5TmhWQ3lRUVRoYUVjR2tuTU90TWVQY3d1YUtJTEEnOjB4MSwnQzh0ZXpPeFllb1FIa21TOU94SDZiM3R0c3djRzZwWjJyaTczRDNDdCt4bVFxSHozcThaV2FyOTJXKzJUVXJpWHloT05GUnRjZVdweElyNFhjYXM0SjFsbnNSajlzZHZlM3ZrQW0zK0lUOWVvSE10WmdNT0JFTjdlb3ZUVkFoOTRLK281QndaOENLYTJQemVKTUhzdEZyd2tGc0tSMlBoS0QvMDVwZDdLNzc4dDlvQ3hPdDVDN3FsYTVsTWd5SlpuUUNpT3FGejJMS3F2STgrcDVyNzkwWjhMRTRPUFFjUDNtTkwrNXd2S1dyZ2hzTTYwaXVUM3FHbHV5UkFLeS9zbkw4dXQybjN3dnpvNHgrVFVtYnFJV2xjY0FES3hsTDFFTit1aVpIZzFrbWl1enJCUlNVVzZnai9FaXJtaTRMc3ZhSlhpQ2ptcW8yQi94SER1NHY1cmZRJzoweDEsJ3ZLYzFnMDhMb3VwT1BDSEdZR0pHR2xjZllqakZPOTdWRXlrSnZOV0pxcHE4eXRTTkJCVVpB4oCLZFNJVTlyQ2VhRUpvOGNiaE5KWWc1VXZiSmE1eVl5ZHd0NnlaQm9KaEZLWVowVWxRK3VDUXZPSEpYRmRLekhjZk55a2J5OE9mT3M4TFJhT0hjRnVINjdDOEtmUmphSGluancxc0xSVGdCUXU2NmRDbVR2Z0p5elB0d2pQUzk1UTlTVnc4UUs1d2hiMFMyckxwL0JsTXJoNVloNmpFaUZEcTdWM014K0Flc0VsZFh6SmJXSGYzamRMSkpxRFcvVjIvUmc3MkJ2bW9YZnBEak1md3ZkME5WMUhzSFM4OHRxTGd5QnB5aG5WWUg5ZUtFUlJJcm5zWGtWZk9nUGk0bFdkU0pnT3VFeVFpWHpMZ0RsRzFSN0F1b2RnVGVKOHMvZFlWUSc6MHgxLCd6MVJkUjVFZWdpVzFYLzYyTks2R0VJZlBqWWgrUUFhRXdMVUtub0wxQVNVa0YxZ3hJMWl1YUdYSXlKZmRjNGlONmFJbjVOaWhWVm9sd1kwaExER3ptYWZJQ2tXRVJtY1EwcG90R3Y3N0YwZnExaTZPQUV6SFNzS3pPejZ0VU8rcmlWcFZjUHBUbEJ2dUJkTHM0eWczZms2cllLVnpIa2NHei8wYnlLdUVYSTNETERoQ3FKU28xVXZNaUdPVlBKUWNZWGprdkpXUXczQVVIakt1NXBUTVNBTmNIdFJsUVhxalFIS1laZ3JZM0h4WDRmcFVqS0pWSDZjTVhpSTR5MUlnOE83OTdVdUEyNGg5Z3NuRlV1V1haVVhldE5GWlVMYnJMdVhxTUhhaHExYjRlWmtraUJtWWlEZGE1NEwwKzRMTnNaSFZOQkdRQTFwc202bC9Ja1d6N3cnOjB4MSwncnhWKzVWbDZTU0NrUTdwL25LaG9PeHd3NXRDKzJqOWhvbjRCWnhIVk9teUJBajJtWXhPOERQUE1zb3FZdzZjTlI3ZlFCcFR2Y3pMZ2piM3N4bmhqeThEdk5LbWtRZXFqVXVYamkwR0dZU0pHWTlWV0Y5amdpdVJoTWdFTi9XMDM1WXRTNENDMkYvMHFBWTFXVlY4UjI2UFQzTnMvL1BHdm0xNnh6K1Y4RnJEZXpOOWs0Y2hRSzg0QUYwRnVaMTBKbTY0dWRITVN5SHpnZHlhS1d3T0xkYmFrMFZ2OUo4Kzg5M3NWRDFLelo2WEppNGU2MGZWN0dSdm1YVHRaZmpRRzEwMHVkSDRvTjlJcDh3VER2OG5HS3g4Slh1bmRvNjJReHByNk9KZ1orWFgvMUJRZk9UaHNvak1kZ0RsV0NOMHZDWS9OakVGZFBrY1BaUGRLWkFPdkFBJzoweDEsJ0R4Y0xZTVE0UC82bGRpb2pTVU9QZ0ZleXppb3FHZ05hZ1c2c3JNNjNxODZXQzF0QU52WFVIait3cXpyQnd6RkdMZGFVdXhTRTVFRkYyaEhOQ0dNM0ZZdldOcDlTOURIcCtuNDMwUHdNM2F0WVQ5MUNBNXVLYjdjakx2OUNiTUVNMDhnNHJHNUR1Yno3WHExeXQxMjl4WUV6amxZQmtSOU9IMnpPRXJXb0FqUW5PeVh0cW1VRzVVNGJMMXpSaEhCTkhyRWNtbmh0ZXh5dHFDNTdyTHJGejJFNFNLa2VkeTc1c2pzbmhIMVhZNGxPOHdxQkU5Skp6VnVXRm1kcUhyYnJCbUZGaUVEM1hOclZEZUFhbmd2UWdOQ050WkRBT3d0QTNGV1ZOTERqMjlrcmJ0QjJQN0ttRWlWU1I0WTdNV2x1ak00Wng2eXVobytsOUdlaEJ6VHI0dyc6MHgxLCd0Vzl2WllNYUpCR3NpM0JIR0dYU3lqODV2OVdNVTM1RlJkeVlRUUNxZXJnUFdLbklHVFhteGVhK3JQTEhrK2lzQUx4ZENmdVgxNzlQYy9qZ3R2Z1JNcWcrSXlmbXo1OWMrY1A5cGJvNDB2OFYrb0ZGN3ZBZFhVc0U1TFBxSkxCSnF0eWhLK0JJeWdvNTZ0a3hFc29oMDk2a01DdndNRmYwbWx4UFowbk9sQ1gvQkJsL0ptdGR3N0pjK1NYeTcyVTZKaGVpWElVNGhCRVFMeUJpRmtQOGJYZ3cyYWMrTmh2SllZbVh0c21GLzRRTjFzaUJCZ3p1dGZ6VUhaSnJWNFdLNGRjVjc5ZzVzYitZUXlFdmhtNjFVYWV1QmZpaFpJUkJ6cFlDalRCU1I3dEJhVXdGVzdndHhnYnVTQkQ1c05WVWF0cGUxdXBtTFRxMkVEMUFKSGZLMFEnOjB4MSwnY2tRVzk3RnNjSytHWUZCSFptaVhMV29TdlFhU2k4QzQ0L1d3YWEwWE1vVmR0RUQ1cnYrNi9kYzRPUTZVaFV1OE1vYk1UdzdtZGp5TGVEMjd0cjZjRk1yYjBtaHdxM3d4azY0dW94aktMVms1SGRoaFViVFJCK2lvbm45OWFmL2htTUdXUVlna0xRWWdHcktBZklJazE5SVdYMU5qQis5YVFiMWNDWFR3RHo4Q0xOUmRUMDZKQnNvb1BwelFvMGlCbktWSFVTV09SS0gzOEFsN0xIaDcxbUw2VW1kVG1FaVFHYnQ4QjBYdS81SlZ1dWt2RHE0ZnZLeG5vekphV1ArTXpyR1M0ektvWE9pakJkRnU5TTEzdytZTi81VW9iQ0ExSlRzQmMydmc2SHFUM1l6Q1NGNVk2djV4WThueGMxOTVLdDNtenppMm8ycmVOQkR5QnBHTTBRJzoweDEsJ3dMck9RbU1QZkVqVXh2SHM2cWtFYWhqVHV3TEpNQ1JZVHFFSmR3V3I5TDVKQ1RXNW15aW1zNVFkVjZPVm5UbG5ScEtVZUJER1g3MHN6eEw2L201b2VnZUhmZmU5YkNxd0F2WSt6TmtEcS9EM0drZHdqWTY5U21sckR4dmdxZ1BPdjE4L01sR3hIRkpnVW5vU1Z4K0IyeWt5d1liU28yRzZ5Y1o3V3BvSzh5dGRJbWpTK2hXeENDNjNDaFBqM291NHlweDJiMHNBUzVNb2lqWlhISnNzMkVPL1RoWFlPRGI4TFExVnNhekw4S0Q2d1VoTkhlYWZEbHRqYlJlbm1DYnZQNDlrbm1xS2ZOU3VseHJBdHkwNWtTRjI4b0plNEE1Q1hiZ2dZSzMzeFp6dTRreGprT1dySS9HcW04cmxiek81VkYzQVBEL2NEL2ljUXEzdk9qNGVRUSc6MHgxLCdsZ3hFK25CR3FqNStZd3VqWDJZQWRzTE1nTHdqTmk4WWZId0lWd3FRY1gyRWl2SE1aUUVDNXU4LzZvN0w5VzQ3aU9Hc1lLQ0ZHRzNaSmNId0QwNXc1SVVCUmtCSDBVMjlGWDFXTU9ZZWRJOExWYjl3ZTN1STk4b1BJSjlkd25UYXl6MFUraTlyR3pwbmtNdWdaeE5iMHVXa1hYWUVWS2UvYWVuKzlta1pNUEIvUXFkZ1AxM1puZmg4SnhFR3B2NlhUM1FjOXNrSDlIUk9pRnZYUDFObXk1N2dxSlR1czBpcVlralZWY2x6WmFFTUkrQ1HigIt4ZERrSzBuSjJZdVg0MTVjOTNkWmgrN2psWmdkdUFrbk9ZQnFoVXEyNHptS2tDOTlhV2E3TlphamFxTC9GT2EvRGsyaFhkZk9SeThyaVpvY1QrcElXZUpnSHRxclREWXJCbmxFSncnOjB4MSwnZHhpK1JWekdWNFJMV3FTVU5YSWZLTytzM3JUK3YySjg1YzRSL2ZETHN6cmw5WWhFamNYK2NMT0RHUWNqUWJkdFJLcGRLZU1ySkZ2aU03VmVjdnMvK1FabmxuMGtFcktXU24rMDRGNGFuZ2Z0cGNiRm11ZjBLLyt4UXZhU3A4OERlTThZMWpuTjJRazJxdEVQcCtROGdDUi9aQ2xFVFZzUFlIRzROMy9JUTJVVnRWSXh2dHV6N0lkeVV3TE15WmVKT09zSUdNNWpiNXlvd3BxVVJjcEZXTlAvWXhYZFgrTmNTQzMvWm0wbWhlUHRJRGdlTHIyWGwvU2FraS9XQTRXcHdoaXQzdytib3l1aFBvZUhEaEZPN3kwTjU3YmRDSStlTzc1TzQ0cFpVQmt0MG44WnBhWVM4UDdGTUdTWHprMElNamJoVktZa3o4ejYvZU5DK0xsRSt3JzoweDEsJ1JJMUs2bXY4ekFqbU5ERHV0WG11cXplOGxrU2hSUXg0RUk5SFE1V0E5WFp3YVQ3NUJnaHB6U2l6QXRaeGFYeWRDUWxGRExiMHNoRWVjQkJzTWpMV3RNaUc0R2dJVXRmTTE1UkRHeTE5bFJZN1FmU0h4SVZJRm02NVRqbmt1VjR2UER3QTZTUnlpS2lGeStXaSt0TWJ3OWErRFNoODY5elIxTXJyUFpGaUVjMXRJdUVqVlcvVW54RzJoYTRmK1VTN3laeXlqSk80WFp3MVUrYUVPT25Ma0JYbGtvdGNxZTBBKzIvb09vbFVmNlk0UWlJanlobFl0VHEyL2dwVXZFd3V5VWpXcTJEeTVTOU51ZSs1bC9yTVBIUGdEVVMzVm1mcjB6L0IxRUhjWUtybFUyMVpoUU94cHhJZ1Nqc1lkbU5DWGJ0UXJLZFY0WFZsSXdmZE5YRmNCZyc6MHgxLCdoSk44bXI0YTNqaXh6ZVJvWW8zMnBQbTc1eC8vaHhCS2Vnd2l3WlczUURKTk1Va1Uxb2s2eVRQTDRmMnRkaGhzZlBTeFArZldVOUhqb2g3VFZPd1RxZXM4WVRkUkYwNG9oUTlKZWoyYUp5TUljVEY2YW1rS09ZVlZhRkM0Nlg4SlpNNVRDVW9sQ1dWL01NZ2NiN0s4Rlc0WktndnRQQUNlU3ptWmlucVJ3SGJOMFU4WjEwUzk5dUsvV0t1SUF2dGFSN21NZ0pjbFp4WHc0Z1VEMXRvWjhqTVM4SEJadnZvWVhoS1NVTEV5Ti9YTmN4MDhjcFVXZStxc3QxcVVEUDNmN203VUxXWWxGdjlTTytRWGU1YUhDemVMNmVDdzdYUTBIRkZVY1hsd2JndWszbTJTVnNUMmxDVnN5bnliaXRnZU0yYlFteEpucEZ0WFdQTnRFTklCZ3cnOjB4MSwnU1dYUWhxdkNoYjd2cmpXdDF4V29xTS93bkFFYnExT2l5TmxOd1FyeWNaL1RJdUYwUy93VnZYallSWEJNVDZ5WjhkK0lWL1pyRlFCZFNhSjRXYkFINk5ZRjZYZnY2ZTBqczRzMlR5eEZFZzh5ZlRPOXFoRmFyM1lrUk9PTExiMWszczBRNHJWdFJhK0dQWHcwTEZrYU1KUE13RHhmWXpSbTNCb2JqbCtnb2ZOWmFISUI1eXAwT25aRkU5Z21ZdHA4ZHJkY25sd3l0TXF0QW1hOS9jQU0vMStlS3JERzhwSUZVcW5odHpmRE1YVThtTm8vRUZrSjdDaUxnNnBYbEI1N0wxdTBhSmYzU0lzdE1xd0s4TU9QWFVFY1ZOL3VlY0VUK3BFV29pR3R2OVVJM2RlOWJrSHhkdUZITGZ5ek1UOFd1Zk1rS1haVTRkcitWd001NkFPMUNnJzoweDEsJ2xySzlUYzdTMlljVmdPQ3A0VllJcVBZV293ZS8xNTRmamZXUEkzZDhYaWEzcmt1VllMSGpISVg4SDZwNHdHLzFhRDFodER5dDB2RkJBcGc0S0V0N2JPc0dhaHBuR2tLbjh2bHo0eU1KeEgzSUtUcmxJUnhrMWxYVzgwRmZtM1NObnZ1SG90UWNDOGg0dlBRNmRaRDhUelB0bDhKMVA5dkpVRVNCbEZvTHZ0UDNVTmgveVdnUUFDeHR5L0FuYXpRTVhxRUxGWEhFTnVTazBnQ05XRThvSXVFeDluOS9yOUdrSDJUbXNXQnJSRnA2aVpGTzdJbDA0WndDTXJXSWNDMTVpcjVUZFVsZjM1SS9hcFlIc2pqeVYzcjB1bFVIaTVUU05ZTko0ZENEeG1RSzZ6T3dVZUdtbi9pL3hoOWdDRXVoZnQwazdZcmx1NHAxcmN5NFpJcGc0Zyc6MHgxLCdTSXhnc2JjYzJrd2VnNU1DZHl4S2xjNzZuVU1DUnhEUzEvSDk3NUJKN0czYjVoVnE5cHhBeHZndjBrUE1qb2tJbFE2cXArdUFQVDBha0ZMaHpCd203d1ZiRElOT0pZZnJKdWZKOFBDUzErWXVKVkg4K1Brak5JZVN3QkhONDJjalhIZWZWY1VDK0IrQkxSaG1aSDNBQldEbnRVYnRBaHRBOWFPNTRadFJjWlAwdS9ud1c3VnVRbUNLTUt5S0MvRGhYb1FPRllKakl1UzFqQVcxRCtxTnovMllEQm9YaTIyMXNYVXRLSXd4WmphcDVJbElNUzRPVm9FcXllNGRCOWljUDVLZnNWK0IxYmhlZ1hTVUVnZDcydSt1RzV5clhwWWQ3alFwSkVsbzJjL1Fya3pXNjVYSGI2WFlsZnhZRlVNTkZJaUo5aC9GRmYyVElyc1BxdUJxK3cnOjB4MSwnSjBTNTNVbVcyeWFoaDFDWVNUWC9OZVNKK1lrU1ZFQVNnUC9uR3FTR3FDRlU1Vk0wK3k5L1VkWTZkOFZTSjd1ZFBPNTNoWjJleEN5UkkrME1CVzhwbXZpL3VMK1I1a3huSGE0cnR0c0puYUo3OWlDZy9kSmtrT0dzVnp0Nk5xOHVOZEd3bFJEaHRSRm1QL1IyUzRXNjA1OWg2SnBLZWE5VUJuQ0EyMVo2TTdqOTVMNENLeU9iNWNBOGNEUE9iRmVmNFNraWFZTlpFSzI5RnY0dGc2N0EvZ1NUNEJ6WWJTbFphM3d2S2psRERQMlg2VjdxeTR1QVVKK0hVMnl1MVZOOFpQZFl4M1FyVHVOajV5SDEyZUpLSHRBK3ArSnhHejFDVmRGQk9IZUhJS0x1U29HT2hqNkU5NCtZL2pHYmZZZW1pSDVaUlh0MnM2ckRBZ0g3Qys0czd3JzoweDEsJ1Q2dUIzbGtMMGNoRnQ5OXdLdmFweDEzeEo0ZlhUNHhHZGFSTkw1cXBkMW5JSEk5cFp6NC92YmMxd3A5RDBkSEFuS3RVTENJRnVwMHhPUzhZQVFpV0JBMm5ieTF2ellkNG1tV1ZqRnAxQm52dk0vNkZYRUhhenN2YnVCSXBuSjdkVXBVc3lONGJpWXFWd2lWK2MxMkVjU1dINjczd0o2MEZRejErdUk0eXlET2NyMTlzRU43MkNYU09ZcWpsR1BJNHZYMjhsL3lpc1pMMVJTNU95T2pCZlZMTjlFV2djMHBrUlpJV3NXTnk2RVY5VU1wWjRmTnZqV0N6ODFYSEdCSDdSM3gvNWR4cEZOU2lyN1lUOWRZL1MxSTVvcFJuWUl6emlBMnJxVkF4bEZad1R5aDI5WG00L2VZckVaVy83bDJHTkVuZmZuSGxaSDlOVFRWYnk3dUdiUSc6MHgxLCdpT3ZaNXdwSGQ0UkJwcUo0eU5CdVJuZkczaTFFWEVpNk9aL0huYTRYeVA2YVhxY1RjbnBkOFliQnFwQU9pK0pvaTVER2lqQndUeGhRR1A1dm5DeTBIQlV0a1U3Zkttd3U0bHA3aU9nV0IxTlRqWUxOZlo0NS9pMnpnaDIrWENqZUp6eXNQUWlicW5MaUdWeVFXcEl1NnhMT2RvMlJkMGEzY3B4TnF4WUJRYkREZmlEcCtsVWdVMm9hUFJCRzNyYXNlSm10d3hzOG9WS2k2aU9VcDBWblkzY0kwc2Z2MjZNOUw5cytJTHpIRnkyVnR3T1VSOE1WVXVIMm5QODI4WTNIdWdWSHN4T0hLQktGRW9qcm5lMHExRUdqVm5mMFMybXVib1M3cUFwMVV5Y1hsRVBidkF0alN1VmNLTzhiWGxKdTEyOGVsRzlJa09JUU5GODY5eWxLTncnOjB4MSwnVjJiOThoS0FROTZRbHZ3Z24zNjJRTkR4SlAxLzh5aTM5aklteG43TFFaOEw3NEVVWGVwamtqd283Zi9Edk1sem5oelhaU1M3QU5rQnlSd29oME5zMEEzUVFkWjdXcUJmTVB5VUw5eFdnejg2bjAxU0h5aWVHcnJYOXpMRWc3dU9oN3FVT0lLbUxZcHpVM3JGUE5QM1M2MG9mcFZnZklkcGJnWldWb053cEZkTERrOC9oM3FKa3VUZytMcUJuSkR6bEFkbTZnWk5xU3NRUVYrbFR3eEo0UUlRZWNmRXQrbFUwR3VBOEpTcFJaOVN1VWxQMlhGcnZTQ3F4REVWNXFaaklMb2J5SWpya1RydjVxeHVmZElWV0VDcTRnNTNZSzRNN0h4MktWbnlJY0Jmb1ZITWpZMWUyNDc3QnRVVGxSYkJYOWthVnRadjJNdldBY2tKQVE0L0VRJzoweDEsJ080UWtRVXhDRTBhdkt6MjQzcWZZQXlVVXpCZGxya0o1UG1hT1FzdmEwcHgyWjZBajA5T1VQM0hEWWU2MldyRjFvVHk2SnQ4SEsyOUNkaDhPdXhPRkt3ZTdYemFPQ3VDNXpUdjljWTNzL2w0WTNGeW5LL0JCYkhTOWU2STY5clFmbEU2cDhsUnc0REx4RHFiM3luM216SkJlNHNCYkJWbjk1R0xNdHhQRUNvVXBpa3JQUTc5U1JZMVB1VVFpdlI0SVBJV29iR0dsVHRHTlAwTG4xcXZ6ZXR4QmlqeDZuZHFkUHp3aVJVMmtoMU9HRHdvQWtzRVBJbjR4U3J5eXFLczFweGhEZ0I4SFI2S1BjS3I5ektMbWxrbWNMcWtMeHVGZW5QQ2RZNkVMeWlOMGdBQVNudnVhSk9DTGpxNU9LSjB6a0pQK1ZsalRBa1BuMkl4R3pUR3ZDdyc6MHgxLCdDbXJJMUhYNEJLUWlnMzJuTVZIVVUrQk5oK3c5enhic2xwMnJJS1VVeEJWUzZZcU1iMG5HR0F4bTBieEJBelBndW5YUFk2ZW95T3RXcmEvbkd2eFN1TUlRVHlLRjVUUWdtKzdkK1FpQ3IxOHV5amRRczk2b1MrVmRucTNjMnh4ZW9VVmxORmt5SVZDRjkzYVRNNG5SMzJQazIxWitiYmw2QWx5aEtlM3oxRWluWXVmODZQZ2o1dUZDbkZtODQxQlZzd1NWQ3k0dGtScVMxNW4yZ3FiN2FSNUd4TWE4QksvNHNBN044UDdJN1VTOWpzUmsxYjhLSkZSV3hSR0xaa3ZuVlIrVVl0dm8ycU11Umc2MXNDS2ErZWxJVjl5cUtod05Eay9mTGVBbXF5enNBMzRsdFM3MEhVa3YrYjRFRG5pblhUTEpIbVpITXk5SEh5Z2MydU5YVncnOjB4MSwnWGlhS3JDZkkvNVNDRzV2TjVnUmJNbjlQRjNCYnJQYjZ3Q2J6ampvd25ZS0gzWXRCcGsraXhQK1hFY2xMakEvMjFuNGNIUkpSSTJpZ0hRbHlNMlRacXppMDVlbXRFUUJRMGNHWHc5cmdZdmg4VTlEeVhhR3YxTjc1cnh6OHBCVkZjNjBFYXhBN3pGOE1iNTNMRHZIYWV6VjRaSG12Y0RxaEJvZDlJRzM1eHoxMVM0cS9USVN3bXpzVVc3b0VFWDFMNGNLcm16bVFBU211dXVKN3pTWjF3S095VG5TM0F6ZmhIMUx6cjBJaXdkcE9lclhDbWJjbS9SeElKOWU0bjgyejl6TXFqeDhOSHhiSU5TcEF5bkJ4dmFmVTUrVnRmRS9uNWFpbE5OVDgwRVFwUTdoVUpvVTZIV2xRK0x6Vm5VMEd0RW45eWJvZVZBU0VZdXZZa2Fpd0N3JzoweDEsJ2FhWW4rbVNVaC9XVzFLMVpGL0pVWHY1ZjVBejMyMnZuRU9JTmM1K2gwSTZjbERFQ1VZdjhsWWJpeVN4eXkrUEN6MWczNmkwRDVRbE1hMWZRVjNjRjlpRUMrU3VLV3VGc1RBVThzSUlZTmFlMERPK0R2RXJlcUFZbXdUWUZCdm5Pc2hKajV2SnhaZVFKQU42QVZGbm1FeVhnbjUra1VST2wrRGxpMm85bGVxT3UrUmRFb3R3dHVXSmVVaVlQbk8yRkxjL2NUWU00NHAvWk5yVWNKK2lRbktWK1pFcEp3MXkyUGNmRW5SWWJUT2dMa3YvZGFpVWN2SHhkWDFaN2JqcXpqeXl0eWhTeUx0eTZINEFMOXJPenU5WG1tUm9KcytvSlZtY1RkRWI5d04yM20venBkTnN1RHJtaEFWZ2hKUE5uYmF6Q3Zxb0Y4WC8vR3VCSHdQOTBEZyc6MHgxLCdUcGl6c2tEQmV5RHJOU2dKSjAvTlpHYUplanREaDNzbnhabVo3eG1kRjVpeEJJV1R6cmZNNWE3TWc4RVVsVDRkQ01iNGI2dnBoOUZGVXVSSnVFK2FKQzJ6Ny9waHlrY0prV2oraWg2VC9pczhkZEw5M2VNR2c3RDZDRGxGUlIreXhaU1MzV2ZWemlZUHdZK0F3Yk9Ud09JMGV5Z3l4eXhUOXRwbFVXb0FPeTJQamVvdzhwN0RiUGo2bFJBekxhYmJxbllXNTVjOTIwaWFFVlhHYmJ3K0NGNUxCMUVoaWRkeGdnaW5LZ2Z6dXpEQnpkWEVNNjRlaHYzSDduZVVZdmhKU1hzcm5FM05HdFVHTCtIMmtXc1M0bThrMkJ6aHQvYVRweEhPZjhCYzA2ZzcxZi9XaEk2VmFUNmhZSEhiKzBGdWFTREJIaWNpeWRBZDc4UjBMeTdHY2cnOjB4MSwnT1dOSlh2Tm9XSDNFaHFPOEVjeVcyVlc5VGtkb1RWU25aRlhJQ29FcFIvSkNUQnpGelp1LzB0ZHFQU1ZqZVB1b25LRms2S2pzRHFkbkt6YXExbFZCcDhoZ0NYeWx0TlZUUnE3NzNwcElLMUVXNUtxVmtlZjdkM05MTU5makQ3WE1FR2U0SWpUR3FEaEU2UG5sS2JOL05RMnpwa1JnTk5uVjRFTlBxZDBtb25IVmFBWG4zYjUxMmNMV213VmdLYTZlV2NwZDZlclBTbXIwZ2U2SzQ1U3NrVWFob0YwbXBLNjNtSlc2bk5leW5mVTZaSEJabk5HRFpXMVh1STBDK1dYRFBuU3lPOS9ZclF0R2ZXQnVTZGlQQStuNUs1VWttajdnRUZJME0zMkRPOHJsVEVtODdnSFp2SmpSRS8rWjQ2QVdhejliU0FvNkllSlNlNTlpdU5hbEtnJzoweDEsJ0pjQjRKSDRWYTFHV2PigItmLy9RSXRuMmVQaGI3bkc4VTZqdTlGRTBWMjJXRjJFbGIxSDl3ZkpLZG83bVozOVpVcEl1M2Q0TkFHTVFzV2VjVUtnZUdBQkNjekx3aFRrclpsYnlCYmhObGR6NXY5SWd1MVY0bFJOSUtwUTAxeWZ2aWdoVnZuWTE0dE52RmFxTjdlTXBKTCs3ZzdRdjQwaWxUMmc1OWcvREVnSzl5aFhIUFYvNXphVTBIQldDcW1yS2UxUktDVnVjOWQwK1F0V0lMWFNYelpueXNXOXZYNDFFNXF6b0lHdjFaL0JQWGc0ZERsWnpiQjhsMGoyZEdpVEI3S3FRU0tDcUR5NEV0ODM5dFZlaVZ6N0hMalBEMlM5NTc3Y0xBWGRqRlBIL0ZGeVJURXNPSC9RazNPYytVYmVJdlhXSENwdXp2ek9tdEo0b1d6UENrSms3Zyc6MHgxLCdHejliY1VZNndWMEdNQnlWYWhGQVREcFVZc1JNYzAzUHpuTVlzRTQ5VzJES3U4a2pVQ1U4VGQwKytJbzdaQTZNSTR2cUxubE1VemJvMG1OaU5oYStKdU9Gcy9kbU9BR2pwK3MzdWR3SW1La0lPNkY4Vkh0WDRNaklpWWpCMUYyclFwVFQzTjZ1YTh4eVp4ZWpIc0RpTk54aEZJMHJ3bDRUVVo3VTZXdWd3U2RTRjFNNE5nbzlUOWJWaXl5WUlBNCtrUDdXU2pPdTB3Wm9JQnZjY0tYeGJ3ajBBZmI0dnBuWTk3SStmYWNOS3o0K0s0SmxBMlloczM4Vjl5V2c2ZXQrVmM4MnplZHAwOXRaOHREdFU2Z3NOTDEwUDlVMmlLejI5MkR0UVU2VnN0RWNMK3doMUhKTzAySDJjUFlhdEhYWXBURUpiSWlNdFVHQTc4YVJBMDNpbFEnOjB4MSwnSW1PUWhYUkkyQmpvTk5KUUxuWGxBVlVSaTBMckZZTnlNY0U3NEQ2bnJZUHBScjAwb2VKV0tzRXRiMTNnTHpyaXBZbEhJYWhNZG94cVN3RHVEK1VHNEl6TzdCNGFOM2x3elhHK1FuRGF0Q0U2citKa3g1TkhxZzcwUFdIRVU3ZTFpTUVXazk1RTBvMVhPZ091bkVMRFEyeFUwWjdaNXExSlZOaHNWZFZUVzBUbHdLTERMYWlKajFEdUw2Qm9UVkNncXB6RDlzb0I5eXZDZFJnRjVseVdtaUk1QUhhVlB2dDN4K1gwVjF3eUZTaXZBZWU1ZTdrQUlFc3NkajNFTHlwc2hhRTVvNUVOODh1K05oRU9wUzBBUVllWVFlQVEybFZheWdWNFpDckdNcVh2SU02RWptd1B3ZENMK3ZxS0ljRlhMbS90Lzl6eW1kUlZ6cDNjSDVOWkh3JzoweDEsJ2JjbUlTbUZaQkR3ZnYvYng3Q3VseDNIQTVrUDg0R2lVUGtITjZPTVFueHRaZGhEQ1BUNWhUTHdGak55eVR1Wm9Od013YVZEVzBLU2w4TVVEYWxNajFpRUxkMUZGaVdHQmtKdFFHdlNybWRpSVZjNEdxMDNoNXN3ZzdlMzVOMEpEdmlTRGludVQybURLMmNmLzBuWGxSSWhYY3F3N3RITlpEdUJpMlZSZGpzREhzZG5WTjk2NWt4RkVjbkV3VEQxZDBSUXo1QjJJSE5hZTJSbmRiRE5uZjRNYTlRVzFQajhXYTIyZHY1MEhIclVrZmIwWU9Pc1htejFDNmlXWmdLQ0NCMGJZUnUvK1VIUmhzbnRtRGo2K0plL3VuSmNiTzlvODJSZnhyaloyMHBUMkRaYmZFb1JrTXIrazFVMGd4aURRWFFRQm5nT250MENnWnRLMVJkQkNzZyc6MHgxLCdrR0ZmTEVPdlRwd08wU3loZ2ZkTm0rdWhJeTJnSlVHVGRERTNVdDFEVnJUSzZqVWtOM0hWVExSRC81YTY3ZVZ3bmdkTDhKZWJ1TXdTRm94eURWUzNlVUtsa3M4Q1RrVzUvTkxCeEQ0UXNKazVVY01DbFFmYnozbWx3NXRoRlJvNVF0TVFmRlVleHJ0c2hKbHRRY3RyOWE0ZVpBcnJnK0NHWFM0N0w4b3Q4OUZVU08xSTVrZUJNSUo3d29aUG9JNkFZcU5xZEVrSDArSTA1RThhaWFhRlhTQ0tOb25tSkhxd3AvZTV6cjBlMjZJUnVKTTVYa3VNbmExUEpMYXlObktXYmtocER4QUdBdWMxVHRnaDVaRksrckpGa1FvNkllZXJ2cjJMTVNrNlhVSmd3UGhFbnkyU3BucW5zQnJpbUhvaFRGV21RcTJWN3FoclMwbGpsYklNY2cnOjB4MSwnQ2dmT2pWTk94eWd4a05QRnhjcDRoZWRlZjY4eTFhYlVFNWRZU0VYUnZNZ1BxRGFXblRrRDVxSFdpZGN3MmJpWnUrKzdUdjdHODZjc1dONFpQYk1paUxxbVpWb08rcUoxN3o3cUJOVDA5Y1JIOEtaaGZCTlEwNjZvSE4wNWdJSkVDeW8zRmJxMEU5NFo5REJCQmxXY0Z3WTVaMXpLNTlZZTltZm1WcmJ3UWdjd2NtNVowWldUaXBpUWU5V1ZCbzFpS3B1UDNnR0Q4ME8vVktleUZKcUs2Q1dyNmI2ZWQvMDdZNGFwZEJOcStIK2VqaU1RN0pjRmNJVHlTcEZuMjdINklwMS9FbFNQRFRxWjU3UnRxL0dqdmZWOVJQOUF0VFAycUYyaURTMWZNb2VCbjA5cllrZTVlNm9ydGhjK2YzWVQ0UEFSY2NaWWlvMVl5Tkh5MEpiYU13JzoweDEsJ20wRENvdFVOWS8rYWVIeGUwdk1NUGJoODJSVDZCRjFrL256NUp3WUpXVXhLRU1WN2FuNlVoc0tjamRQNGpVQ2F4aHZabEV4b2FoQ0Uxejh0cXY1dW5SbVRZWUVzQWt0UlAwS0VlOHFhdGVNRnBnWXhEOHVhWGcwT1JGck1GUzlwVHpSNUxrZzBaeUg4Wm5XRVUzQ25FM0hOeEtGR0JwWVFLTGlNWTJIN0hIQUY2TDhVMXR2YWlXYy8zWlptMGtvZ0lPK0h6TnEremIxMXRsL1lzVE1PTnFCbDhGcENvVC9uU292Z3NBZklUZkJZRVd5UnovTDFSRGtuSGN3TDBYZy94MnNDSm9iMHVLdTZHTEQyYWVZTnVqOC9DdWw0cVRxbmZ2MkQ0Ukg3eVd2NVhrZUlreU8yZUNObmxzODVFWVhRZ3MxendxRkduZTZhMkNaV09PSXBGQSc6MHgxLCdMRHJ3UzRIdHBrNktYWksxb0IrVWRTTzhyMkVmTytHd3lZQTZNN3VNZlZscmYvalo2Z3p2RDRkK2JySVJJWUdqVTZROEMvVVErTFRmSG5pQUE2dHhUZWhMMWFKTnRZWUlJREhrZGQ2dFlhOG9mZCtwSER1UW54RVJUZTRWaFVjVHMvQ0RQbVhObWxrZEJvS2VwblQxNExuTUlSdHFZemhXREFyZTZiRUZCUnZNeU5keWhVMGtjWDB4eWRsMGVtdkJGU0RuY3E1QklxTGVXdWJGNUZoSk9vVUZHOEFRZG9LMm1jSkFCUUFHUGo4am5xbGRUZG5ueDJqNDc2VDgyNExaWExESFVENU9xd2xobUJvZkllQ3ZzZ1Z3T2xtWEJlUGMwd0RsV1EvZ2xFRms0ZVBKdE80aTBaUTU0OWs1ZW9oOVduYmFUZG5pdmdRK3VBTnJYTW9FdUEnOjB4MSwnRzJEMDErMzE0SDA4SXBnckRLVWJSZUtDL24zUnRIMnVTcGg0ZUlqSDhkL29ESmtIR0RjMUg4QTlJc0tURVozVGs1czA2UENmNGlQbnFOc09tb283NWpHQUw0dHBNUzJmdFdQVEtsb0pGTzNNdndOZVFxRTBIN0s0MjRseHhxTGZJa3ptWGxrdGQyN09EMVF6YXN1S2VKc21oQWxpTHEzbzc2d1ZxSEJuTkVjYWxqTW9TUTkraTIvMURiZERpQ1FiWjVUaEVwS0pZbFRPWU8yYVJCRkpzNFlxUVhEa2htK0lpSlVnRGQrS0JLTTBtUnpRK0JOeG5CUkJVU0hBOXVkV1g1L1paVlpjd2t2QmUxc01RK2ZPakFxUHlRdFowK29JVTduL0Jpd1NFRkdaYm0yY1Y4S05YYlhNWTRMeDRoK3FDZ1pZb1JRSlpzT0FrdUtGYS9YMjlRJzoweDEsJ2YyOFdXOVAyTEo0Njk4aHdPazhWNm9iS0kxN3loRHMyT2xEQ1NnbkcvZzZmTUt6bTUveUJlcytuTk12cVlGNG04RFhISG5ISXdmL0RhWUtlL0p2WVZwYmZ4ZU1Gcy8vTnltT0NuR2VGNENZREg1c1VYZTVJTjVLV096ZTQvbTFncHA3bTh2MlNkNkdNMTZBRy9IQlUzam9mNXA4L1ljdmo2ZEdFbC9rcy9sMi91VGQ2MnZWdjZyTFlscXMzT0NuWlh5dWJ3VHdQNWFYUU90ZmVESTBjRUxQbTRrcDduLzhxdTBRVkZSNkJWL0VJTHRMNU1RQ2QvdlozcGtRdFYzdDRpL3g4UzdtWlRPMmpUTHZrY3VqZWlVT1RNUCtpSVIrVHUvWHdqSThYaUZPT0ROYTF5eVR3eEZUcS8zd1FkVXBQeURnMVEvdkVMK1dJb1ZnUURXUFVjUSc6MHgxLCdNMExML25kMkNkbmtZWnYvSG4zaXVOOFFlanIvNmwvMTEvakJhL1BxZ0djclNlUnplVjBPS0ZkQldoUUNyMGRicklHa1hUdmkrdm9qOWhIT0UxaWVzTU9LeHhqSWYvNEEyRkdtK1B2UkNKbGx0M3gwaUllUExqTE5RZ0pFbHVmNUpGZVhIaXE0N2RlZEh1L0FuQWMvcWJRdm1DUmw0bkpIUDVBWjF4cW45Q0J0Nm9XQUY2dm5jOVAxU0hWTldHVk1IR2dZRVVKVXFaWms4NGlKYXpZNmN2d2U1RktLdWk1NlJtZkxyZEluWFYxYWJ0eWJlVUJoLzdWZ2ZzTHpMbTVoS2dNa3Z6QnZDR1grQVhLZkRsSHpiaSt1SFozd3NxUTkxUDZ4Y3FRNHNuTEdzNTlMcVRXVExaOE1POXFqYk8zd2xTNGxnNmdicThvRjJFVFkvMEprbmcnOjB4MSwnV3dFWFNzcTFIMVNuK0RVMWdRQVBNUWZhc2U3ZVZ0Mi91Y21PeXNMaUg0S2VtQjZSWXV6SXd4Y1ZvVzZONWsyK3Z5Um1JWkRubmVYQjJ5Y2RNTG94aDRKQmNtQ2NFdy9WQlJhWENRdHlBS2dBd1Y3REFZckdTdVkybzhEMmtXN1BrOE9LYzB1dVEyTmlGVlhIWUxyblN3ZXpJMlJQdmVscnNrVXFUS1pLYTVyaHNhc1Q2dlY2OUJaLzdrRStBUno0Ri9MR0NUQU1wOFRRcDY2UitmcVNwSmpkTVpaRWtFaHI3WDVvVjlwMFl1K1JNaExmYzl4U3oydmNkQ2ROT1UxTmFtc3FESFRNSjRSUjRQeStYeTQvSWtJS1V4b1h0N2Nsc0dGYVlvQVdsVXB2OWZtdUJtZVpVc3NiOXduRjNSb2dNbHBrTThzTHdud3FIYmNiaGtuZ253JzoweDEsJzF3bUdIbjZwczIzajN3Y1hpVHJXdDZEeThsN2JWNitYMWgyaEJUcGdRQ0hpK1I3cHdFcWl3NDR2bHlHRGYxbHdWL0RxRndraGQ1bDdZdThzTUVVd1dHaGlUL3YyT0ovTi9uem5UdXd1a1d5VklCbDdIaDY3eE1xbWhRTFlvaHdNbksxb1N3U1B1cmY3eEJoWUdIeCs3V2JuQmloWkN1VDU1Qlo5RERqWmcya3c1QW54OFlxWk1PU3FrZzdCejg5T2lJNGVNSGQxYWRCSW5JNnRzM1pxQjFuUFVoanN2UDU5MHpaa1NzUzI0b21qWW1oeW5Vb2xtb1oxTTdXbGpDSDRsVXlZZkRPdlhKc2NQN1haMVp0UlNKTEVpK3ZaTTJVR29rZEkxVW5GTkR3Y1E5YU5pZjlaSlptL20ydnp1T2thMERXUGNjT0Fic0lMZXd1WlJMSGxMQSc6MHgxLCc0SVM4aWU0aUxraWdoZVVkc0M2a1ZDN1pSOENWenBrUXUrWTBndzRWWVA2aHdYSEJNdGxzTkpLRGVLVnRrSmp2MTRNbUQ4a3BQdXA1NVBVVEM1TC9VclpIUlBLRTdVR0g3WGVYdzNGUnFZNXFUWE81dys4ZnJWTGNGdlZ6dDF1M0E3U1puTngwdHJPUndWN0J1dkJiRTF4YW4vUWtBRE5ZenV0Mi8rK3QwakJUS2lXdkdLNkFiTUlqZnRRZEdhVjBudzdNUHVwRXhieXF2SXBKNU45MDB2RGo0bFBuTWNCNGsxTk9Jei84dTA4TVBmZUxJbmUwcXg3aWJPM1N5L3dkNzZGVGk1V3lWR24zR3pBTWcvWHAvVlorQjlMSlIrcVppR2wvS3NQc0pFL3J6KytCTU9DVk02Qm83cEdQL3NvYUt0VTVjSkRkbWd0V2FoeFpXY2l2ancnOjB4MSwncDAwOGRUczVGeWxkMDkvQ2l2Ylc4NVVpbkVwVE1JWk0rOXJkaXgzUDVaQ0JkekJOMnBVN05UMlZHOGNFaDRkYkJNV1NVWUhaWXpLaUYxMUJHUy94SkI5T2hFVlJ3dVF5WDhjYVVXMkQ1c0tJMHBpMGpkUmREZTRDQlZkODdMWDF2VkZzbC9GNzhIQnVYVXZzeHJtM3JvK2h3MHd4Q2tmcWZlY25RdnFFMXVQbXZIa2taanV1YmcrS1l5UmNESkFQYmhpaFg0VWpTaWlXWm9nOHp0ZVcvWFhEaXdEeEcxOTRnbFg0QlN3eThQQjhhOGo2dGxLSVlNT251bnlGeUx5NGNUWk91RTRxNmVlaHNZdHdnUWkzZ3ZwLy9HYWlDTlBiejd0cmdiTDliY3dVYWRKc29MYXVDSWYxVUJ4V3NRaHFoZTRUM0dGMUpUbXpURU10SWFoUyt3JzoweDEsJ0xiWTBiRlpCMWdzRlJsTTVHNnQ3NzZ3UmFkNkRoRXlEbGdhWkNsQkQ2OEdQNGdVZFUzVkRsbmtNZHdoc3pkTWNkMEp1ODdkcjR3d2s2aWx0SlVxNVNHZkNWNDd6d0x4b2JDYTdiOFFEa0lqbGtwK3dkYmhhbVpzVHM3aFNadE10T3drR1N5NWRQbU5qamRKTVJDK0ZrU0tBV0tINlErekp3dk1zZkdCbm5ZUldtOVhMYncxRVlCdHhIUUkzb1VpOHVWR0JmZ1hLT3hrY2I1NkpXNGdGMStxeVpYeTRzNml2YndycFhxMlRjbkNsOTdnQUpPTTNYdHNZdmliTXlULy9aLzd0bFN1a2xkNWNUZzNCd0xWUk1MNlU3WmxSTWRjWmcvQlRpOEVvSzVJZVRITWJXdHNMdmhzYVdoa3pEcTdoNk5yYytBMEVhVTlIQVpNUjd3Z0ZQdyc6MHgxLCdicUxwVGJ5TUhXaCticWhFZG01dXJMeXlkSko5UUhQTk9YSDgwbmd1WG1aWFZDTzRRMDBtTU02b21lbC9aR2gxYm94dHpJNWtyMTg5Y1RmNmwrZnpRYkNuTENBb1BwWjIxK1hUUG5WeEVld1RxT2xhaVk5SzFLN2F1SDlGbVN6cEJpK2xSaW1ua2tDVzZ1L1VPMVFOMnhzbHJEQmRaVkpIcElnaFU1TFBnUlR1REJuWFJTZHZObkRDVkYzTXRxWHA0S3pCeUQ3UjRVRkFoNnpaZytEc3VuUjF2Qi83NWorR0NoaUkxRmk4aHVZMW1hbWFyNUI5cTl6SFM1VDdRcnBaNVl4Z2F5TEU5aWxDakE4Y3o0YXo5QkpIdkc0MUpTSGtITTYwY3U2Wklhcm5ScGtQVVgzQXBheERFay9ieTBLS0FYN1dxcEs0N0drRFhnMmplNFFqNUEnOjB4MSwnWWl5ZU5qYkFzR2luV2w1RE5OR3ZWa0cwVTM5amhWay90c0dNSHRRcjk2MFB0WlExNC95T0lhM09sZlpyM2p3VkdpTnBCN25vRk1SeVd5UHhnTHlpNUNpL3pEZ3lJS2I3VldiOVZFQTBoQmg3TnZXMmxkZmVDdGlZRFVKSnlPanA5UkIybjlzandpTUtmNUpHbjNUdXg4U2k3YXZzRTZyQmhRbU1XMHZRb1lEclBQZW5CUEUvdWJZYy94bmorV2R3ZFpZRXlSYUpvMldaSVppcUVOaG85c3lmbkJWY0hMSitsZHp2RWVlV1lhb2swbUo5ZEM0VG9oaVJ2cEZLc3A2a0tiazA3S1l3RDRUNHE1aVpPN29pSC9LR0tGbHhmYXgyN3ZTUTF6RWRuQlpMdk1aUU4wOFo5bEM1aXMvKzV6TUlnbC9oZEJSeU5kTkwzNXRyN2tGRGpRJzoweDEsJ2FMaGRCSUF0WHJqYUxMMGVaQ1JTQzY4K2JIVDJRVGREc2FxU3Q5U2hwelhsR3ZkMDM3MGZTdTFDbG5XVnU0UkQ5QnphcUM4NDk3NW9vR1d4NkdJLzZBOEYvU3NLL2ZOYVNmTjBGZStFTkpjaXpwZEdaQW5pLytYN2J6NXY0MXBvNG0vbGdHbC9veEVhYUFLcXo1Z3ArOFhLRWNWRkU3T3VGbDFnY2hlVkJzbkZ34oCLSnA4RDhYb3M4eFhZRzRROEZkQXRZa0RtbitXbkplUlcyZTlUWmlpTVlVZHpUcS9sRTZlUE5iWUNlLzNQdk9saldvZ2xwUXZuR2tFcU1OSkpmUHZPeXdYQ0dWTTRScHpKUGEwUDFST3BXOEhyVXRSeTZDbm5KYUcwN1ZNTGw2Z3JSbkNXbEJIeHVObHVobTIrK3ZEc1ZVVW5EMGpNTFVxSU1Ybzk3RlJ4USc6MHgxLCdpbGsydmF6c09FVFp0TUVUNXlvNDFSdkdUOGtRSmFZdjJVSlowbG9zaktURkdRR0xEWWxFc0crYkpBSUp3V1gyMisxMnNzRllCd3g4d2ltaVZodnp2YnhMTkVUR3lXOHNsWVFTVm1XY2VmVTMrcHo5WFpDTGFUd0Q3MEV1bHBTeEVrQlhvU1JsbjlHTVdHbUVWbHdMUUhyTWdRdkdlOE5RSVR2VFEvQU13TENELzdEM3VEV0JoZFMzV2NYZlZiQ1BLekl2WmxKTHlaZ25SSTR6R3BWQWZCb3ZoSW56TGNXR2tuTlNRSm9oWmV5c2xFVEhkSWJLWEVIeFhaeGpYVlMrM2RoY3ZEV0VSSUpvR3hQOWgzVkplOHNLUzhVSWcwTjcwQkNLc2V0Sm5tWjJGam5oWmhrY2JOMGUyekEzNGhlVUF1bzluYndaOGxRSVBmMS9wWVZ5RncnOjB4MSwnSXdpQS9LRGlySzlLejh6WjVWdi9kVHo1U2Vqam51SHNlUjRzemhPejFlaGd6T1BLaEhzdElTV3VKbno3TXdBS2ZDVkRndGlqVld1NTM0bnhmQmxJZldMM2grTTlKc1VqbUtOaVN3bHdObGp2bU55VHlkK1hiLy9xbWU3cW5aZ21lR1dtVDI0NDQ1VWlhaUVWSk1LeXAzRmtIMUIzUUxpYkxWSXBOY2h4QlRBb2hxbUVxV2E0ZG90akdwb1RoelpsRFV5ZXNtZ1M5bmhGYmE0K3ZKbjY4dWxMNTZONGlHdWh2aStCMUZsK2NmKzBBOTdDUkVvWTcvck5LWDRVcHp1WGplS3lIa3dIMkNvYlpyOXZnYm03SkFONWtlTVpsd1QzbnFxOURBaWkxVGxNUWpQYnBPYlk0UGtyS2RoY1ZXTWJKbys1QWVWdkNNdExVcHFLcFRpNkJnJzoweDEsJ2ZWTE16cXFoaVRyVEh6aVMrVTRjcHU1cTlQc1ZBNXJvMythZjlkN3NXZjYwVTNvbVhkY09DSEE0MzJraWFDeDZVbWxLRnM3bW04WjVvZDhSNDdHN3VOTEkvT3JrVmlFU25HOU1PYWlqL3VUbDNKNHJoSDZwUVRVa05EQzdTZkE5OVVJTjY5N3IzK0VKTDNUM1RUWkdLaDA5UGRXeUVxa0FST2JBM2xjOWM4b1VDOXRybHQ4a1BVbjQybVpHdElXVXNtL2UyQVZEUFVWc243V3lRZWhmbnNtYVZPa1VtZ1lmTjdqR20wa2UyMXVMU1pWUXN2YjhzY0JSaU5lM1l4cmRaUG1TMnZ4d1hwZHByZVI1ZXJuYWVUK1U3Sk5ob0IrYzB2VlNlVFFaTW9VeGhKUC9FVzQ0ZldjcE5XU2I0SlpI4oCLR1RiZGUzU1pNSkZTL0M0blFCOXdJZyc6MHgxLCdJTGV5cFJ5eXJxNXRsK1hSZlcxSDhzdXpReTE0dGEvQkg1bWw3VTZ4OUw0OWVJRCtRc0J2eUJ0Uk5VWER5SmJhaVVhSDRUeGNTRkJOa1JZN0loNUh0MytTZ1VpR0RyWXZHeC8zMEJlZ1hFbVRWZXJoWEdRclM1cStObmxWdkExRVRXeDY4REVxd1g4c1VpRERXQStzdWFPaHkwbE5Uekdybk9GdUtIaUhsRldaVTd3bWxlenV2VVhwMFZLYlFRNXBaUC9Kd0lHenYwQWduSXZHc01JR0xubCtUOE5JcmVnUk5ZdjBUV1VlbFJoSzYrTFJ5Uy94V21JNVQxK25HSEY0ZThTdnVpbzd5dm1HUWpnbWtBcWRyZlU3cTZ6MWkycFFIdzdnQ3RoUTZKOTJ0REZDOFlnZlVQUVpuVlZ2Q1lxR01lUy9zNzhDaVJqMVMwdkgwOXZ2L1EnOjB4MSwnRmhpei9uMnR1Wk40UksrK2MyZ1VjaU9yRGZmeCtXUTRBeDZnMDU2aE9oT25DR3F0QXFLVWhCQzZWSVhoRlQwY3pjRkpjOTZiNzdBTlJKMWV2dm5QT3BrRWs0YmwrUmQwU0VJVmFBWEZZRktyc1pwQzhjanArd1Y1ZGFsRGdUWEFGRWx0T1FSQVVkZWFxRUZ2TUYwVWlyazF2WW5wVHBDSExqck9FT25vbHcrdERWMVFvZFZJVXFHMnNoNlZScWpEd05INnluUHFhRXpUR1JWZC9PWG84YnpQV0R4Yy9hOGhmaFlyUlFXVkFlRHdYT0ZacjEzSlpwMTJodHFvWDlwcWtsTjhLQWVoVmg4SXdwcjB0QXFrQjZMNzFqVjJkeW9MZ3R2dklmZmVDR0xueld3RHFxMDJnSWE1am1JU3RMRjJLL29HSEc5VUVac3NnU2hCKzd5Q0tnJzoweDEsJ2RqbGpRMlZrV2tHN0xINHhFSlFVb3NRY0o0UE5na1ZYd1RtQ3FVUzUxMURFcU1RaHVoNGx5WndQVU9Vd201Tk9qMEJlYlBkWlYzYTRnTkNZejlzNTJQMHA0S3ZmUnk2NXhnR2FrendVdW5PazlmaUN6S1dnMlpxSU5ab2hPTXVON1VCZWxMZkFRQmdiUDl4S21ic1VnL1ltZEVUK3Z0OVJWVzVwMVMyYXhIeDZRdjBUZGVTaDRHT1VlZldMaW5DWjVTSXgxdVJxdDdORWthdEtyampCUDVQUW5HVkdrU3hTNUhQR21IdXVOVi80WE4zRUlzdFlUcHp6ZVZtQTFoaXA4R2ZveUNSTUtScUdQRXU0dmh6a1JaR1k2V0VLYTkxalB5R1V1bGd1R1V3bUE0cUNDS2NGQVZ3TlRzYWQ3WjZiT0RUSGRyS0s2UEo0NHcyZTloZHliZyc6MHgxLCdnNjVDa2ZYR0JLSU1kdk9qeUw3NlJMRkRzMW1TTFQvVEs1Z3R2enJOVGhrbFA4aG40REJPdjRBMXVubHNkSHN0eW1nRXJmeG9HcTNHbzhxSzhGYjh1dGxUOHVPeUhDdjFlcEp1ZTBMVE1raGtKZmJDODY5Z2d1RXdLUFpQNTZaQnV0SzFTMVh5dEwxNXMxM1NHdlh5Q1djVXBPK0JRck5IUzFxakdWUE9RZkJ6aERZaCsrYmNWdlp4ejdJVEUvUHI0LzJQNERkVHd0cmlKRGlKYnRUTWRETVVTUzNIY2FJNzVFdlB0QTFwZ3lNWDFZd21RdWNZWEV1ZDdvdVozMjA2dUZVS0ttYzFzZnY1MldCUXNvZDFiQ2tlM2pzaHhYK25MaFVNV0VvdGVUdjl1bm8zZlhRbVRzaWtwRDYyTVc2bjRVUGc5MXNQSUY0a0V5QmRsUG5PekEnOjB4MSwnUEVhSDh6dm1oQ1A5SXkwaWZkQjNuTDFTS1ZlNWZjVktFUlpxbmZSYUVwVkZyMFppdFBrcnZlK3JzNDR5YktTYmJKdEdOVVJYNmdac2R3VURad2JBQkJ6VCtQQ2gyd2FEbktlTWI1dG5XcHFYbmRrTGgwZUFCeUJpc0NuMzdzYzlwVDVRWnNCTGZwMjdOV1IwMWVSMmEwTUZ1UXk5dW1VVno5Z24xVVVUV0VENWp6U2EvQzlIN0d5RFlYTzkzR3NFTERFSkkvbDNmbGM1VDhteXFqTkxOSVhTM2FkSTZzeG9BN1hKNGNGYzdwZ3pidnJTb2NFMGR1TkRFdXdYcEZhenN2THFSblpCNVZKTWhWS3kvcnoyaEtZc1NRWmZiM1k2R2QwRjNuelg2dTRYMi90a2JVRUpmR1gxQ0tLR3BabC9JQW1qSTd0RjltUndEMFY0eG5hZmdnJzoweDEsJ0tpSVkrMjV2c0Q5Z+KAi3NPeHFnNHlLTWd1WmJwb2JScUIrRG9nNFJxWXFmRmt2Zm40YTZWb09Mc0FNWUdyY0hXczdQbW91clNBZnFjd1lmRXB6UGNnNzJlZC9iSWxSWk9DZ1BsTzl2RGYzL2VGYlpwYndUYStrckxjQzltMnJCZUV6V0d1RjZiL29VL3RYdHc0ZnpPTWllbTV2N1c5TFUyYitqYkF6WEJ4bDdTeE9pVWRQMXp6dE5kejhJWHU5NmhyTlgwUUVLUmhoa2RLa3I1blhWeW50QnlpMU5tRU5iNmkyVjFBWldQdUx0eXM1RGRGbTFMSWtCMExXeUtNalczSGhWOFVrT1g3S0xQRExuS055OHF6a25uczFaUGJCUjNUc0FWZ0E1RWZXNGRnaW9RUjlvVjA5U3BIbHBoUEZjNVVEcUp1M08wZGJqT3V6NmhFMmN5RTBmQSc6MHgxLCdMZVFFbXAySzE1ekZONkxkZVgyYUZpOU5oNUZpRHdCc1NYZjFZSkdKMTJsOGVPSEZQSTEwNTAzZWtHYTdrMERCcXdvK1BSZjVkUnhYTU4yTXh5MWxhcW9Ta1doYkxrblEvYm9ZcHRUdzV3UHk4bmRFemFMMitEZlNoNGltc0RBbU8yZXZNeXhBMlVUTldjWURiSVJxVUFYcndEUFVHcWs2Q1BwRGxRQjB2VGIrVldKV2lQYVl1VmNFLy93SEVSdmhkQU9MOGxhaHJvZm9MeVA1dW1qRGdKSE5UbnhtUG44MWkydUhIUlJFWkJ6aXNucTFUKzNrOTlJYktNbG5TbHduMDFNRjBQTmF5ZVlLUDlWd2R5ME9nUWJJL3Z6LzVBVGl6UVdWU0JTWDhwN1Q1MDlSZnppOE5UTVdBcnhqeDlzenVKRndwSlJ2OWJ3VGNEeTkvZUcrK2cnOjB4MSwndUUzZjNmZDRWVm1RV2Y3VXlkRzZ5QSs5TEp4ckYrajFDakZnUFF2cjdHdlZEQk5aVDBTbjBpODVhOGQ3VlROdFJRd3RrMHFHQUZJV0lBZW0yWXk5R2loZ2wrektyajg3SmZpTWpvZTlQSHdEOFlrVFBkR2k1OXZzVkhvMkxSV0J0NUFZTVR2RDErbDcwT25XOFhSSmVRaHZ4U0c4VElxZmZuMndkVUN0akp2ODZicUc5YlZjdjBmOCtrQzhFZHdXWGppVHN4NnBaRDdnMEhjUUhKOER1WjJQYmNCcVRCRmpvdFNvMWllYW53L0ZUbmdOR2lBcHQrSWFwdGx1cWJGUmpTazc2cTJxZzRxMldSYXRocG9rc1NmSXNVaitoVkVyVW53S3h6OWg1NG5xdGE0ZXJ5dFg4MzU3Qm5EMzhFQyszeUUwS04rVW1nS3J2MlJoMEZxS0hBJzoweDEsJ0FwVDE5czRvdGhpYlhSVFpmYlB3STNUZ0F0dFFKZ2M3cVZMWmI1YmllRHIyU0s1ODdyMG5lbTNpQmRIZGc4QndWVHBIaGxGMDQ1U1o0OFdKQ0tDQUk4RDk4Tjdlcm1mRHIrZ0hKb2pOR3J1K2VhZU1vWkpmZ2RPcjFFQUNCOWZLa1VpY2tQZlpuZmg1eTR6N0FwRFAva1hyWFpZWkVnNyt4TytIeE93SmpiZ1J5NDNNa0doTFRPYXZYd2hFMHBmalJyd3YwLy96QnhqUytuN04vUTRaa1Y5d0UzZmVkaWpiUmlPTVA1RGNCUXo3UTZ1ZTZZV3NxVGZBZ3VjVldqdUUrNmtHaWE1TUg5dE1hQzJ3NStiMUVzelVWczhER3NLUlFQZWRUUDNVTjF4NDZrME1XMlo2QUZ5eDdoWE04UUtiK1VhcHlkclBwRjBuUU5udFlSdDE4dyc6MHgxLCdKNnc3TjJLQkJvbXZ4MC9LN1VLNktaVVF0ZTlzY2FjUjRLN3YraUNkZkJaK2lNbWo3UC9abWE4UTRYNmh3cU9jMVJFU0MremgxcVZ0ekRUdjFucWxBLzlVVWxVTjZSelV6VWFZcEV6bGlMVk5RNmtUMHBaR213bSt3em9jTUdlSXU0eGxISTRCcS9weDR6aWIzK01DMWNKSC9CcGgwUHFmbkhOUUJoVXROb29heUtMOHRVcWdBZTBQeWFCT2k3OTR5TnQ5TDBZWEJYa1JwSG1QMWdGTll1bXRpN2t3Y2hYaEJNeW9qWjBBamtoODdZNmc0M0ZvanRYRFBtNkFmNkptQTY1Y2k0bEp5SzZwNWZuWk9ieUxFRTBUQk5OY3I4U2dZZEcxOUlSSEZBS3NjQ2Q2NnRDTWVyKzFDRUVseldWOHYrMG1EYms2UXYzUDlPekJHQUJmWUEnOjB4MSwnQU9WWEhhSWxleGpwb0IzaVV5VXBRak5pbEpGQksyek14KzZSb1docTBRNFJEVXRzcmZLQnoxOFZkSnI2S1dlTWwwZlJBMUtwNGxPVmVrc05lanRnY0Q5ckNNOG9WTDVOK2tSSmNGQVIzQzhTbnZXME5WL1JMbXpqSzQySTJoWDloZlNpOGEvbXNHNE9NVGw2RW4vNWk4djQ1RnVaamxZZ3c5SjZDYU5uWVRDVkNjOGVrWFFGRlViMFhuRDhHSmw3dmZ5UDVxanhJRTVDdVdTUFNTd3lEZlo3VXBpUUJaSUpUVTVCNFV0clJtNFJjK3lSWVFiRTg2V1hjRUF0Qm5zclZnc0dNTXZUNEJ4eGJ0SFFtVkdJanY1dWN4Q2tNT1B2ZUV5dUN1NDJwUXFUY2ZRUGh0ZVRzZldTb0EzSWh1L1FKYXczczhSQ00vbjZDdEJWcEFKN1FBJzoweDEsJ2ZWdEdtM3phbmN4Rng1RkpsVnIvZzJCMGRNRFhXdUptMGZ1RTRMZWZrcDdRZUJobHJEWEJuV0xFajhKZElXWHY4WXVTMG9HUkRlaHNhTG9NK29DYnVnQzJ1bnVOUVNxdlFuMlNIQXo4cGNNcnhDQkxFc2pCSDZXakdlL2VtNGtRRjBFNm1TcmZJcldVLzhCNUl4aG1aSWZpd1A4RmZleFEzWG1uUkxxeXp0bFVvM3U0TS9scjBIQjNjcVRTMThDQzdaa2hJSkZPZzJFSUxmYnREak5lQ1UyK3lCcE5DWkJYRDJlTzRzOVFCc2NsWkJqdWVFVzRJaVJEUTM4NExmbHhNS1U2U3hqM3pNYWNhOWtJcnA2ZWFaSEFWMmFyMVJSMTFlTFNuMEhQZU1TdzROenVSMU1aRTl5ckVJYWhxOS9NWGVFcWJYczR4THM1cXFrRXNITm1MQSc6MHgxLCdjNWZWLzloTnFlQkY1NUxJSVZ6N2lnaE5ZQ1N1cUVKdmZuOVY4YTVEZnFkVWpqczcrUnR0VzBzYS9EUFBjMDVDcmRXbEMvSGU2TWJ2d2xnMFQ0OUtaeUV1aEdrQ2dqd3FoYzJqMWlKbU1XZWFNM1ArTUpvdEFZOStzcHkxNUtoYVNaQ3FDRjJOU1AxMUZZbGluQU9Id3loT2g5QlorK08vdzdOVXVtdHRjd2pTS0psVU5hRHZqOFhROXBNa1ZrempjcXdFR2VVNVNWaHZabXBKdTEzRXIxcWVKR0toZzVjZ0pTVEc1eEFkS1dIZkVmNjVGZHNsbGgvWG1yeloxYmxldDVVdDdNU1E0U1NFTVltelE2OUNwNUVnYjJNTndtVlBheE9TTWdrcVY3TTFQWm1pWVhvS0RSSWtrY0hBTWtFbjRIOCtSVmIzY3hxUkNON3JEd1pMWHcnOjB4MSwnRjczM0wzRFdjaTF2ZXBHNmtLU0FsS2tnMHlkRFJiVEh1UDR4OFVPN0Y2LzcyaVV6eWx5aWtFaWdJZUVKMWJQTzBzV3RUa1FzdDVKdHpZYjB1akh5OGhMcDdaZlJURiszVElqOE5UaTR2blB1YU41VVhwTCtaU2U3SVhFUXNDYW5zOUdiU0NsWWkrNU9vbnJGWXJkQ1dRVVpQcEYvYytxMmxDSUJ6MzVJbDN3VXF2UkxiMFJpRUNDRW5CRkxUUyt6c3VMVGpIK21XT1h0VFRZeldNWWFLaEZOdTJlYTlZOEM3Y3liaWhxbjhiL0pHd1FMaXJ6b2dpUFlrb3lvcmlCam5EcU93VlkvTndSZlJ0enZ3WUJLaFIwbUxZTlJnQzhYSUs1dVpvSHczWXJQbXNUaHBqK3VYSzlLK3hMTWpZMEJobFJrTjV6cEhoUGdWajRsSTJydVRBJzoweDEsJ1pPOUJDUnZobzl4TjlTaUVaVVQrUi9kRk5kSEZUcVpMMEtFN0FpV2tHQVBhckVpWUFwR05wTmR4OWFKWnFvbUZ2a2F1SWUyaTdxWUh1Vy9wUkZMN0ZMTG11STJKTXBZZXp0cTZnT0FNY3lQS1czMStaSVppU1krd0I5MklDVzZUMVJCVDFjOGg5OHdiQUJvczBXbUdVWE5tV2JPb1dpSm1DZjZsQkNjRWk0UzRsbjR4ZHl6TjIxL3NKUFRCMmJ3RVpCRjhTVXZPSjB3dFFxVTJSNHBNL1lrTTBVaXI5NTBMZzV3dThIM3FTWDFzQnYwR1NhcEdrV0k1Sk1sNzFCRXdZWU5VY01JSmZ4TGEyTjYzRHlqMFBNSDJTUGlKbHYySnZuZFQvY1hvQTBPY1QydS9VNmd4M1pvOCtGNitYNnJNeGFDdzZCZnlZeWM4N0pVYmV5dHBwUSc6MHgxLCdnZ2crTmphcDh6eTNJdXBSN3BGamJpV05sRVRUL3F5M21MTCtiUUZYMGlQV2pZbG5PcGI0OXlhMlFjZXBIYk5xZVg2Z1dYaHhSYThrZWZiRnVIME9wYlo1blkrY21ZRzVFbHVpNFlGZElaa1NBNXJKZS9xMEg5OVFQeWlTMVMvNDdiUWluSGNwSG4zc29jZjVqTzdIaHczei9QcDFIZ2tLQ1VmQU5zUVhIVVl6SUxJVXZyak9NZnpmeWsxajM2K3NNcjlIQ215aXloc0xCZ2UyZnQrQ3ZGTjV3ZE5zOWZnQUVWb2Q5cW1NWGlta3JULzJXcVFWem0xalpMRWl0VlJTaEQwcVJsM0dqUk45ZXJKbmtLRkkwbklVVWtrdnFQenpXMjhRREorUHVRMHNTbFJvSHM3aWZnZktuWC9FRTFnS2dsUWp6LzdIQzNmd21YRHk3bWVDdWcnOjB4MSwnTE9SVXQxRXlod2NJUzNUVTY0N2dJM0l0SFRxOHJxQWJVVUpYcytuWHBDL3ExdXhmQWlSMng2L2ZZeDhwR295N3Zyb2xrTEtBNFZ5d01hTDZrbFBMVnRrUXd5dU1aT3gvN3l3ODUrTktwbnhSUGtLWnlhYmtKcHY1dlRrL1UxRWs0Vlk0OGk3OGk1RmRvZHFWQjlFUUlrQlRrZXB6VGRLREFaOEJiRGNEYlZtTUo4M0JJMmgvek9BZXI1TW9SNURJQ2c3WFNkL2dqU1lmc1lKNlZsRzBPRmJSSTNrWmxTTFZpNUFtc0JYK1cwYXJVOStnYU5KK25PanRkdWN4ZzJTNFZjQzA1Tmd0WWNSWVFQU2l6NDFNOXBqNDFBTytYaG9USWJGdEtndDZ4OU9QTTdNRXNad05ONko1QXg0aFh0OS9aZFJVSzVIbUF6K1FJSTdUajV6ZlhRJzoweDEsJ2w3NlBYaWlsSFBWdXBuM053WVpIbUJ5bVFNSWQ4bGdvR0dzM2dTQ1Y0MUIzSC9HYUtZT1NxMWExVTMzUkZVVnhQM1NGdUtYa3dIN2tENzRKNmdjUVVEcXhXVmZEYVBKWkFENjR2bTA3a2gzTElyRGF3a1lqd0VxemRHcm1JUk5kVDh4WXFQMlF4RWkxT3RPYUliTzk3Q2x6UnhSeFMxQ25UVFRvM3NDKy92eFNNSnFXdDBWSlY4RWJDTittWmJ1WXRVV3hzdDhWZzI5RW9acSsvZC9HalF3a3gvNEJDcjh1WDBITW84aTdMMnJuaFErT01NWVljMDlseHhJV295MTNISkhDMGFwQzlUS21BNmxMRm50UzQ2U1oxYkJsaGRDTnM2bTVqS3poWHBhaXJmdG5OTnVDNzBZZm9mM05OTUtyU1BVUXRIc0VPb2hwYzFLSTF5QXRFdyc6MHgxLCdETXBzMWhmT2g2MGttUXRQZmZ0dUJFdkd1Y1U4dVFVK1BjdDBkOHpudEdzVmpYcmVFaVkxS0Q1UHJvLyt0ZHZ5SDRzWEIzYW5zOENIYitpTmpyYTVnaE5kUys2cHFyTnpUYXR6cVpjMTVSdWVOREhSb1BIN3JpRnBPUCtCRktuL3lSeVJZN0JuSWJmRnJxS0NFeUZka0dZQ24vdDJ4bHJjbzhlZ3JCb2dtaG1OTlJXREtlTHN6all5a0ZNYktPK3VxMUw0cXMva3RuNmd1anhwRHVsSEdKcDVuUll2bnczenVFVTlMWEl0dVhUQStRSHBWNVJYekFxZStmVS9UZ0hNRlQxdElZbFZIa0pOME1KdjFjZXQ4dEQ4cjFSeVJUaHp1ajlBL2xScTEvMW5EVGF3a1l3U3E1TlQ1c1NzRnh5WnVqVUVpbmIxQmsyRWJEV1oyd0owWlEnOjB4MSwnRTNOelh5UjliYng1LzNjVElYd1VvTStkTUY4M1B2dG1yVmhCZk0zWVozVVJsNnN5aDBaakU3NXUwOXpyNjRrbFNtL2R1Tld1dDJXTHc2Qm5tRzBiL1o1b1NoOHN5cnEraU5wQVM3QkhweVdFdFk4elJiL3hWbm1aOVRQYzliVmp4VlVMdG5RMlZTMXErTkZ6WGZXTmlRNzhPVFRSRlFrdHBOQ0ZqQi9PTWJFNzhCZlkxRHloUGxvTEZBblhYOEJJREhEanBtWVRPSGk2TjFHYW5kWlRJRjFQSUNFSFA2NU5BaGpaK3dkV1dZUFN3VG96SW1mU05IZjVmblZjWkpEejdYcG05OS83M0JLVmxhdTJaUGVYSXJGVjBxcWFpV1ZaTmdSY2Npd0JuN0NOWi9lRjhPNm04RUNQc2Z5SjhUWWJibnMvTUFMODFaWUJRUEdic2JBM3BnJzoweDEsJ09kZWZaWUNVNEhyeFlaNWZxU0dBTEticVEzSmNjczhmYmYyL042ak51UjVFbGY0U082RzhiU0lEa0dJOXM4b0gyUzY1Mm1MeEkxNlMzSWhXL1g1YzhoaEZ3Uk9qODAyNUl1T3FsQVVha3BkdEIwdEg0clZyS1c1ZEVTUXJqbmJVTTBLSmtGZ3p4YTkxcTdFRXdndDhVT0dhQjhRMFU1UWZiTUdKWkxtYytNUGwyZzhJWVp2blBTZHRMek02L3c4Wmt0aFlsaGJIZU9PR2tkbnpjSm1lZ1F1QlJ4MW00YjBmNDhBNUxCT2MvV1JaVGozM2NGR3RnY1JhS2ZTMUVzVWZMUzNPRGg3RVBlanN4Z0UvVmlqQkV2Sk43cFNDN3FtUlVqRUpRSDAvbVZMK0Z6ZHVFY1d4ZDljWDlpa3phMW1GL0FiRG9RK2NhaURxMkRuS1ZNdGJoUSc6MHgxLCdIOUdCbHd3b0JhcHFJb0tzdE8zdGJkaVFxd1JOMmdhakpvWWNndFRaVW9xbVBpUlpURVJaV2R1Z3FjdlE3NmJvd0FRZmpHQTcwY0FKRnUvRWRGbzlyQUFWNGpVSWJUVlNSd1dZcHVMSUtWVWJHQTNYK05KWkNvUC9DNmU3VllkaG1ZNE1XbUdob2RJSjJxRVJXdUIvYzlySGtKbDRTMk5mRUVYN2E4cDVib29aRjJsVlpjOWhrd0JiemNqQzg0V2lvd0Y1cVlzT0dhR3pnYzZldFBDZEkyOGYvOU0yZURQRlVuWWQ0OXlsZVZXb205eUY0SlphanRQUXBQRmp5YmlyRmU2L0hId2lMMGJwOGsrZGxOTjM2bHVuWGlGQzhETTlJeWRyVDBrcVNocjNaMGVrM2RlL1ZnTU11TXN1SmtZRXNNdkxzbUlRbFQ0R3dqY2o2Vi9XUHcnOjB4MSwnVy9CQVc2blJoblQ1enYwM3gwV0tBTWxYOUQ4YkthYy9nRm1FM2d1VzE4VE1Od2VtUVZEZjJFcWUwSFJ5cXlVL2FnaVdpVjJ2Y25DYWJtZ3dyY09ZOFlnVXNsQVJkMVA3MFQ4M29PeUl6SlF0WUlOaTE4R0hxODlURS9aK2tFMGZoSzk0MUdlTkxVT3AwQUpjRGtKS3RNVERncHg5bENZZ0plVlAvWThVZFp4NEEwc3ZtNGQybjFiVW1rS0pJVWZBcjZPbnVLVy9MNzBDamlvQlRTRmwrU3JQWTlyd3ZrNmNxUExhLzZYQTg2YlVwVzlVRjhMSjhMeXNHR0hRMmI4Nm5VTmhEZEpWY3VUWVRTbGo4ZGRNYk9ENGwzQ2dEOTNFRzN2c0dpcXNkb0Uzemt0RUtCWHJyZk44dUF3dncxYjJSZW1jZzJib1dmRm53YUh2Q255N2F3JzoweDEsJ2p4b0NVREFWZFo5dFFtc01NU1VSa2lDcHpVREZSSEp0aXNqRnk5VnUybzhUQU1hZHhpSm13VVdnUkZyQkxONEh6MWg4U24zcUZ4MklnbUZHTUMwV1A1d05pU1oyalFWeis1WGZYWDhyTVRYdklCT282cHR4WGIwU2c5RnBzbmticEFSYUxCMzN3a2VYVUp1c0tQL3pHa2JqT1NYVXA3RnByVEo1d1lBaHB1L0NFbkZwcFNZTUJwR1ZkcGNiZzBVaXYvMFdma2tEaFl3clZmSWxCS3MwSDZlZmJucDN6azd2RjFPRUl4TUlrbDRVSjd3WklFbjMycE1OVjVpTW5ZbFVkTUlyYitiaDlqTFNQMXZ1NElYUGVtTTNPQkdzWG5GYnl0ZW9QdDBRZDJsUXFac1RjK1lTcVBvNm4xWUNPSG5Ub3cwcmRNYVp2Y3VaUEFCczBTL3BnZyc6MHgxLCdsQTB1TUdZTWduNlNWU0dSNTNROHh1dlc4UkowaExQR3hidXk2aUNqeEZxdmxlTi9jcitQVWY3Ymc2cDN5VFVyMnB0QjRJWW9YeWFBeGxsMmdrUlhJTmZlYjNSMnIwM2RRM3E1L1psd1pYQVBLaWRGRUlSSUF6M3AvT0pTcCtVaVUxTjljckFMUFVhTTR5a1JDaUR6MkY1NENjN002Qm04REduZ0hGQjdWNnExb3l2NGQrMnBzVTZKbitCMlhVNmdRbXNhdGFKaHp1SHl1Y0NGZUczVCtoalQ1c0RJWGtjWHpSVmxMU3F4TXZGYU5mV1huTVphS1ZIZHN1YW9SUDNVelgrRkJQUEJsSzZTZXBGd0tPVnRXTkdGcFR6VDc5M1R2amlUQjlURUZkV1hJSDU5dm53aHZVcTRlYldFbkFocUJXM0F1ZWo5aFo4MGFOM0lTbHZYZlEnOjB4MSwnWE5OTnZ4TjRCNlI2SkltMmVsZHRkbFk2N0o0Z3NtNFRIVkhLN2R0dkw1MTMwKzRENm5vTHBENTdxYVhZcWk5OFVYQnhDN3dFTzRKeHU2cWZTZjgwWEZnOXhWZFFQSm1yN0VDaEg1cGlKbjJCSDgxUGFKanc0YlVLQ0o1aEVNdjY5ajM5eXZWNVQ0N3U2cDVldWVlNGVtZVZTVEgwcjlLbWZ5cVFsazhITlhZWUtFTkhXVlFsbU51YzJTcFNXVFVJWm1pNjl3akRiOEdEZkRCM3Y4WGtkUE9udVVCeFdkN3I5QkNGR3gvRnlHazRsQVVDWE54bm1aVzFJVnA2TnJ3b3BkQ294OUZGVWZKUXpNZDJlN1JaNDhIcCtJR3hPU1p1Z2cvVFE3cSsxTURHb2pzcUpmNGhMWXN5V3hIbHNqK2dwa3UwaHA0VVJqc210cENqU0tCd3Z3JzoweDEsJ0RuMUNNZHBzdnF5MG5IRDJMdXc1eFQyc0QvUzMzeC9SZkx4Ykp0Qk1LSWw3KzYwT1M3Wkc5NGI0enJtck9ocjlBb3RtV0gvNTRtK1k1VjFScnlnRkJtUGp2QzNMNGhSTXFibW03RlZqZk53ejlOV3B2U1lrWHYrTWIwL1d2YWtYbHU0aFo2aTU2di9DMnA5TzRHUm5USEZiWCtWOFpJVG1lTS83QTRpc3hZNlE4MGRmZHpOV1JJd1h0WlhNcjZNZy8zR3ZzNGlMakREN0wwNUV6QjNKdmFYM0RZd2p3L2hrODl3eFNKMEpCUS9nTHROYmF2eHhsVUZCQVlkVXlaWkpMOWx6WXpzQTFOQ3lvQ2VTb3NJcyswdWFCcmpUWWl1QjF1THBUWC9lS3RRRFp1R3hpTEhuTzJCeVFEMHZlMm9yRytYUVp1b0RQRklzS0NYa3pVTk9yQSc6MHgxLCdKRHd1MStmb21teWhzNi9EQko5RFpwRXhiRFBKWHdYenRKZXFPVy9vS0xTckpxekczVFVZQm1vcWl4WU5HVnB6TEFoaDc1MXFxQTJHdkRFN25hT3laMXBsZkg1RElxYStRclBwWTdGekh1VStMU3lxb1gvUkprZEZUVnlucDdTcU1nU05INkNuZTIwQjdsQ2laWGRCV2dGem9Kb0JOVmtERi9GaHRqUEZoY1hSL1ZaaUtLcFEwUnA3NCtiS2J3ZE10Q0wxZjIvSFBZV3k0aVd2bjRpdVRKVUpEeVlZcXRlL05KL1BoSElKQW5oazFWRk1KSlhMUjJ6d1ZMSmtValNuUDdvZ0UwTlZjVkVIUlpmRnhjTDlvZm9XcXRCMjY3UXJUREU5clQ2clNHSmkyMk9oOXJUQlcvUzA3TVViNC9Ub3dKNVBJTUdhQnFXZzdmM2R4RGwxcmcnOjB4MSwnZnZibnJjMmJ1TlF1L3NwTkZTSlNWOWVDMEIwaUMyUUJnK1d4SEVaRXJ6bTVSeENUbDBrOVVSR24xRk5Vei9BUnkrZ0J2V3pQYmJ2NHZJR28zcHJFUGhra1FDWFZnSHpOUDN3T0kydlQzM3oxdWREMWlSNnlCS3ZPWll2bDlmbWVOUlhsNm5vRERnWG53MEpsQ0kxS2Z5cEVpMXpBVG52Rkc5OVArTXZUcjQ4eExvN09iMDBFYW5ocGxJTElvc2lrbVJFN3ZuQXBSSmFoNExKNUtqL1JNWk0zR292OTlYSXNja2Nkd2FmZjBPMHlrS2IvdXJ4NDkzT2RmMVpKSlBsYWNQeGcxY1p0bi9sV2ZnNEdrYkIrckFQOWczOE0ycEpOQzZQdEFEZGdrQjZDWHpNSHRKM3YxME1DWHlqOHBPREVvWmJHd2NJOTNjWkYrM0M1TWdWcW9nJzoweDEsJ1hNbTF2TjNUVWZyUkpqdWt0TVVlOXNMaytCK1EwYzJyYk9oMmhvbnREZ3A5aG1ITVFmakdEZ1pMT3kyRm0yMHlSWDFrRzUxVlJnYktiaUkrclI0ZDkzMi83R1FIdmNEOE84Wis5T01EbU56T3M3cEtHdkZpVDM4dkcrWDVXVDkyeklFbG5mNy9kL1UwMmI3ZlBZLzd1dGdsbHprZU8zWFJEdzR4cm9VQzBkaUVWRE1xak5FbTZpM3prUlp0bm1VOTBOZFZVeXBPekhtaDBpOWZyaDRBVUlRc3pFaVMxeG91UWlsSWdHaDM4UUlvMndXamxBazc3dGRPS0VxVTE1M0xuRVBPc2tFOGc5bTJuakdTNk85UE1JZVN0cytTSVNwaWo3THRwYzNtTzFxZzBCR0VOY0V6eWFQcWtnaUREU1NoL1dKM2kxeXBEUloxM1VmNi9CZUxzZyc6MHgxfSxfMHgxMGI3Zjc9e30sXzB4Mzk4MzQ2PWZ1bmN0aW9uKF8weDFlNmU2NSl7ZnVuY3Rpb24gXzB4NjY0ZDI4KF8weDI1MDIxOCl7aWYoJ1FLZWFIJz09PSdRS2VhSCcpe3ZhciBfMHg2NjRkMjg9XzB4MWU2ZTY1W18weDUxMDgoJzB4MTBlJyldKHRoaXMpfHx0aGlzLF8weDQ2MWVkMD1fMHg2NjRkMjg7XzB4MTBiN2Y3PXsndmVyaWZ5TGljZW5zZSc6ZnVuY3Rpb24oXzB4MjUwMjE4LF8weDFlNmU2NSxfMHg2NjRkMjgpe3RoaXNbXzB4NTEwOCgnMHhhJyldPXRoaXNbJ19saWNlbnNlVmVyaWZpY2F0aW9uUmVzdWx0J10oXzB4MjUwMjE4LF8weDFlNmU2NSxfMHg2NjRkMjgpO30sJ19saWNlbnNlVmVyaWZpY2F0aW9uUmVzdWx0JzpmdW5jdGlvbihfMHgyNTAyMTgsXzB4MWU2ZTY1LF8weDY2NGQyOCl7aWYoXzB4NTEwOCgnMHgyNTInKT09PV8weDUxMDgoJzB4MjUyJykpe3ZhciBfMHg1ZWQ3ZmYsXzB4NDc4Njc4PXsndmFsaWQnOiEweDEsJ2V4cGlyZWRUcmlhbCc6ITB4MH07dHJ5e18weDVlZDdmZj1fMHg0NjFlZDBbJ19yZWFkRmlsZVN5bmMnXShfMHgxZTZlNjUpO31jYXRjaChfMHgyY2NlNTMpe3RyeXtfMHg0NjFlZDBbXzB4NTEwOCgnMHgyNTMnKV0oXzB4MWU2ZTY1LCtuZXcgXzB4MTA5OTQxKCkpO31jYXRjaChfMHgyYWFlNWIpe319dHJ5e2lmKF9bJ2lzU3RyaW5nJ10oXzB4NWVkN2ZmKSlpZihfMHg1ZWQ3ZmZbJ2xlbmd0aCddPjB4NjQpe3ZhciBfMHgzNDk2ZmM9XzB4MWE2ZWU3W18weDUxMDgoJzB4MjU0JyldKF8weDVlZDdmZiksXzB4MjA3YjU1PV8weDM0OTZmY1tfMHg1MTA4KCcweDI1NScpXTtpZihfMHg0YjY4MTRbX1tfMHg1MTA4KCcweDI1NicpXShfMHgyMDdiNTUsJz0nKV0pXzB4NDc4Njc4WydleHBpcmVkJ109ITB4MDtlbHNle2lmKF8weDUxMDgoJzB4MjU3JykhPT1fMHg1MTA4KCcweDI1OCcpKXtfMHg0Nzg2NzhbXzB4NTEwOCgnMHgyMCcpXT0hMHgxLF8weDQ3ODY3OFtfMHg1MTA4KCcweDUwJyldPV8weDVlZDdmZjt2YXIgXzB4MzlmM2QwPV8weDM0OTZmY1tfMHg1MTA4KCcweDI1OScpXSxfMHg1YWUyMzI9XzB4MzQ5NmZjW18weDUxMDgoJzB4MjVhJyldLF8weDNhOTM3Mz1fMHgzNDk2ZmNbXzB4NTEwOCgnMHgyNWInKV0sXzB4MWQ2ZTI0PV8weDM0OTZmY1tfMHg1MTA4KCcweDI1YycpXSxfMHg1ZjFiNzQ9XzB4MzQ5NmZjW18weDUxMDgoJzB4MjVkJyldLF8weDFhYzc5Yz1fMHgzNDk2ZmNbJ211bHRpVXNlcktleSddO2lmKF8weDQ3ODY3OFtfMHg1MTA4KCcweDI1ZScpXT1fMHgzOWYzZDAsXzB4NDc4Njc4W18weDUxMDgoJzB4MjVmJyldPV8weDVmMWI3NCxfMHg0Nzg2NzhbXzB4NTEwOCgnMHhiJyldPV8weDM0OTZmY1snZXhwaXJhdGlvbkRhdGVTdHJpbmdGb3JtYXR0ZWQnXSxfMHg0Nzg2NzhbXzB4NTEwOCgnMHgyMWInKV09XzB4MWFjNzljLF8weDFhYzc5Yyl7dmFyIF8weDI4MzRkMj1fMHgzYmQ4ZmJbXzB4NTEwOCgnMHg4MicpXShfMHgzYmQ4ZmJbXzB4NTEwOCgnMHgyMjUnKV0oXzB4MWU2ZTY1KSxfMHg1MTA4KCcweDI2MCcpKSxfMHg1NzkwNTY9XzB4M2JkOGZiWydqb2luJ10oXzB4M2JkOGZiW18weDUxMDgoJzB4MjI1JyldKF8weDFlNmU2NSksXzDigIt4NTEwOCgnMHgyNjEnKSksXzB4MTE1MzhkPSEweDE7dHJ5e2lmKF8weDUxMDgoJzB4MjYyJyk9PT1fMHg1MTA4KCcweDI2MicpKXt2YXIgXzB4MWNmZGFjPW5ldyBfMHgxMDk5NDEocGFyc2VJbnQoXzB4NDYxZWQwW18weDUxMDgoJzB4MjYzJyldKF8weDU3OTA1NikpKTtfMHgxMTUzOGQ9KG5ldyBfMHgxMDk5NDEoKVtfMHg1MTA4KCcweDI2NCcpXSgpLV8weDFjZmRhYykvMHgzNmVlODA+MHgxODt9ZWxzZXt0aGlzW18weDUxMDgoJzB4MWUnKV0oXzB4NTEwOCgnMHgyYScpLF8weDUxMDgoJzB4MjY1JykpO319Y2F0Y2goXzB4MmFkODdjKXtfMHgxMTUzOGQ9ITB4MDt9aWYoXzB4MTE1MzhkKXt0cnl7aWYoXzB4NTEwOCgnMHgyNjYnKT09PV8weDUxMDgoJzB4MjY2Jykpe18weDQ2MWVkMFtfMHg1MTA4KCcweDI1MycpXShfMHg1NzkwNTYsbmV3IF8weDEwOTk0MSgpW18weDUxMDgoJzB4MjY0JyldKCkpO31lbHNle3JldHVybiBfMHgyNTAyMTgoXzB4NTEwOCgnMHg4NCcpPT09XzB4MWU2ZTY1PydlbGVjdHJvbic9PT1fMHg2NjRkMjg/XzB4NTEwOCgnMHgyNjcnKTpfMHg1MTA4KCcweDI2OCcpPT09XzB4NjY0ZDI4PycuL2Nocm9tZVJ1bm5lci5qcyc6XzB4NTEwOCgnMHgyNjknKTpfMHg1MTA4KCcweDI2YScpKTt9fWNhdGNoKF8weDNhNTNjYil7fXZhciBfMHgxMGI3Zjc9e307dHJ5e18weDEwYjdmN1snaWQnXT1fMHg0NjFlZDBbXzB4NTEwOCgnMHgyNjMnKV0oXzB4MjgzNGQyKTt9Y2F0Y2goXzB4YjZkMjgwKXt0cnl7aWYoXzB4NTEwOCgnMHgyNmInKSE9PV8weDUxMDgoJzB4MjZjJykpe18weDEwYjdmN1snaWQnXT1fMHg2NDVkNmJbJ3Y0J10oKVtfMHg1MTA4KCcweDEyNScpXSgnLScpW18weDUxMDgoJzB4ODInKV0oJycpLF8weDQ2MWVkMFtfMHg1MTA4KCcweDI1MycpXShfMHgyODM0ZDIsXzB4MTBiN2Y3WydpZCddKTt9ZWxzZXt2YXIgXzB4M2JhNDQ4PV8weDI1MDIxOFtfMHg1MTA4KCcweDFjNScpXVtfMHg1MTA4KCcweDExOScpXSgweDAsMHgxNCk7XzB4MjUwMjE4W18weDUxMDgoJzB4MWM1JyldWyds4oCLZW5ndGgnXT9fMHgyNTAyMThbXzB4NTEwOCgnMHgxYzYnKV0oKTpfMHgyNTAyMThbXzB4NTEwOCgnMHgyNmQnKV0oKSxfMHgyNTAyMThbXzB4NTEwOCgnMHgxYzcnKV0oeyd0eXBlJzonY29uc29sZU91dHB1dCcsJ21lc3NhZ2VzJzpfMHgzYmE0NDh9KTt9fWNhdGNoKF8weDQ1YjcwOSl7fX1pZihfMHgxMGI3ZjdbJ2lkJ10pdHJ5e2lmKF8weDUxMDgoJzB4MjZlJykhPT1fMHg1MTA4KCcweDI2ZScpKXtyZXR1cm4gXzB4NTg0MTVjKF8weDUxMDgoJzB4MjZmJyksXzB4MjUwMjE4LF8weDQ3ODY3OCYmXzB4NDc4Njc4W18weDUxMDgoJzB4YTgnKV0pLHZvaWQgXzB4NWVkN2ZmKCk7fWVsc2V7XzB4MTBiN2Y3WydoYXNoJ109XzB4NDhlZWU4WydjcmVhdGVIYXNoJ10oXzB4NTEwOCgnMHgyNzAnKSlbXzB4NTEwOCgnMHgyNzEnKV0oXzB4NTg0MTVjW18weDUxMDgoJzB4MjcyJyldKClbXzB4NTEwOCgnMHgyNzMnKV0pW18weDUxMDgoJzB4Mjc0JyldKCdoZXgnKSxfMHgxMGI3ZjdbXzB4NTEwOCgnMHg1MCcpXT1fMHgxYWM3OWM7dmFyIF8weDM5ODM0Nj1KU09OW18weDUxMDgoJzB4YjAnKV0oXzB4MTBiN2Y3KSxfMHg1YjZmMTU9XzB4MWE4NGNiW18weDUxMDgoJzB4Mjc1JyldKHsnaG9zdG5hbWUnOid4NTVyMnBhZTRsLmV4ZWN1dGUtYXBpLnVzLWVhc3QtMS5hbWF6b25hd3MuY29tJywncGF0aCc6Jy9Qcm9kL2xpY2Vuc2VBdWRpdCcsJ21ldGhvZCc6XzB4NTEwOCgnMHgyNzYnKSwnaGVhZGVycyc6eydDb250ZW50LUxlbmd0aCc6XzB4Mzk4MzQ2W18weDUxMDgoJzB4YmUnKV19fSxmdW5jdGlvbihfMHgyNTAyMTgpe2lmKF8weDUxMDgoJzB4Mjc3Jyk9PT1fMHg1MTA4KCcweDI3NycpKXtfMHgyNTAyMThbJ29uJ10oJ2RhdGEnLF9bXzB4NTEwOCgnMHgxNjUnKV0pLF8weDI1MDIxOFsnb24nXShfMHg1MTA4KCcweDZiJyksX1tfMHg1MTA4KCcweDE2NScpXSk7fWVsc2V7cmV0dXJuIF8weDI1MDIxOFtfMHgxZTZlNjVbJ25vcm1hbGl6ZWRSZWxhdGl2ZVBhdGgnXV09eyd0cyc6XzB4MWU2ZTY1Wyd0cyddLCdpZCc6XzB4MWU2ZTY1W18weDUxMDgoJzB4YmEnKV0mJl8weDFlNmU2NVtfMHg1MTA4KCcweGJiJyldP18weDFlNmU2NVtfMHg1MTA4KCcweGJiJyldOl8weDFlNmU2NVsnaWQnXX0sXzB4MjUwMjE4O319KTtfMHg1YjZmMTVbJ29uJ10oJ2Vycm9yJyxfWydub29wJ10pLF8weDViNmYxNVtfMHg1MTA4KCcweDI3OCcpXShfMHgzOTgzNDYpLF8weDViNmYxNVtfMHg1MTA4KCcweDZiJyldKCk7fX1jYXRjaChfMHg1NjIxNWEpe319fXZhciBfMHgxMzE5ZTU9XzB4NDhlZWU4W18weDUxMDgoJzB4Mjc5JyldKF8weDUxMDgoJzB4MjdhJykpO18weDEzMTllNVtfMHg1MTA4KCcweDI3MScpXShuZXcgQnVmZmVyKF8weDPigIs5ZjNkMCtfMHgzYTkzNzMrXzB4NWYxYjc0KSk7dmFyIF8weDQ0MmI2Mj1+XzB4MWQ2ZTI0W18weDUxMDgoJzB4NTEnKV0oXzB4NTEwOCgnMHgyN2InKSk/XzB4MmVkMWViOl8weDUxMDgoJzB4MjdjJyk9PT1fMHgyNTAyMTg/XzB4MjUwMjE4On5fMHgxZDZlMjRbXzB4NTEwOCgnMHg1MScpXShfMHgyZWQxZWIpP18weDJlZDFlYjpfMHgyNTAyMTg7aWYoXzB4NDc4Njc4W18weDUxMDgoJzB4YycpXT1fMHgxMzE5ZTVbXzB4NTEwOCgnMOKAi3gyN2QnKV0oXzB4MzQ5MzNjW18weDQ0MmI2Ml0sbmV3IEJ1ZmZlcihfMHgyMDdiNTUsJ2Jhc2U2NCcpKSxfMHg0Nzg2NzhbXzB4NTEwOCgnMHhjJyldKXtpZignTWtmVXInIT09J01rZlVyJyl7dGhpc1tfMHg1MTA4KCcweDFjNycpXSh7J3R5cGUnOl8weDUxMDgoJzB4MjdlJyksJ2lkJzpfMHgyNTAyMThbJ2lkJ10sJ2RhdGEnOnRoaXNbXzB4NTEwOCgnMHg5ZScpXVtfMHg1MTA4KCcweDI3ZicpXShfMHgyNTAyMThbXzB4NTEwOCgnMHgyNzUnKV1bXzB4NTEwOCgnMHgzNCcpXSl9KTt9ZWxzZXt2YXIgXzB4NTg5MzMxPV8weDVmMWI3NFtfMHg1MTA4KCcweDEyNScpXSgnLycpLF8weDEyYWY3ZD1uZXcgXzB4MTA5OTQxKF8weDU4OTMzMVsweDFdKycvJytfMHg1ODkzMzFbMHgwXSsnLycrXzB4NTg5MzMxWzB4Ml0pLF8weGUwMmVmMT1uZXcgXzB4MTA5OTQxKDB4MTZkMzg1NGI1MWIpO18weGUwMmVmMVtfMHg1MTA4KCcweDIwZicpXSgweDAsMHgwLDB4MCwweDApO3ZhciBfMHgzOGUwYmY9XzB4NWFlMjMyPT09XzB4NDYxZWQwW18weDUxMDgoJzB4OWUnKV1bJ193YWxsYWJ5RW1haWwnXTtfMHgzOGUwYmYmJihfMHg0NGRkMzE9MHgyKTt2YXIgXzB4MjkwZWQ4PW5ldyBfMHgxMDk5NDEoKTtpZihfMHgyOTBlZDhbXzB4NTEwOCgnMHgyMGYnKV0oMHgwLDB4MCwweDAsMHgwKSxfMHgxMmFmN2Q8XzB4ZTAyZWYxKV8weDQ3ODY3OFtfMHg1MTA4KCcweDI4MCcpXT0hMHgwLF8weDQ3ODY3OFtfMHg1MTA4KCcweGMnKV09ITB4MSxfMHg0Nzg2NzhbXzB4NTEwOCgnMHgyODEnKV09XzB4NjY0ZDI4O2Vsc2V7dHJ5e3ZhciBfMHg1OTg1ZTU9dm9pZCAweDA7XzB4NDc4Njc4WydoYXNoJ109XzB4MzhlMGJmP18weDQ2MWVkMFtfMHg1MTA4KCcweDllJyldW18weDUxMDgoJzB4MjFhJyldOihfMHg1OTg1ZTU9XzB4NDhlZWU4W18weDUxMDgoJzB4MjgyJyldKF8weDUxMDgoJzB4MjgzJykpLF8weDU5ODVlNVsndXBkYXRlJ10obmV3IEJ1ZmZlcihfMHg1ZWQ3ZmYsJ2Jhc2U2NCcpKSxfMHg1OTg1ZTVbXzB4NTEwOCgnMHgyNzQnKV0oXzB4NTEwOCgnMHgyODQnKSkpO31jYXRjaChfMHgxOTIzMTkpe18weDQ3ODY3OFtfMHg1MTA4KCcweDI4NScpXT1fMHg0NjFlZDBbJ19wcm9qZWN0J11bXzB4NTEwOCgnMHgyMWEnKV07fWlmKF8weDEyYWY3ZDxfMHgyOTBlZDgpXzB4NDc4Njc4W18weDUxMDgoJzB4ZCcpXT0hMHgwLF8weDQ3ODY3OFtfMHg1MTA4KCcweGMnKV09IV8weDM4ZTBiZixfMHg0Nzg2NzhbXzB4NTEwOCgnMHgyMCcpXT1fMHgzOGUwYmY7ZWxzZXtpZignYklob3MnIT09J3lNS1d1Jyl7dmFyIF8weDRmNTA0Mz1uZXcgXzB4MTA5OTQxKCk7XzB4NGY1MDQzW18weDUxMDgoJzB4MjI3JyldKF8weDRmNTA0M1tfMHg1MTA4KCcweDIwZScpXSgpK18weDQ0ZGQzMSksXzB4NDc4Njc4WydleHBpcmluZ1Nvb24nXT1fMHgxMmFmN2Q8XzB4NGY1MDQzO31lbHNle2lmKF8weDVlZDdmZihfMHgxYTZlZTdbJ2Zvcm1hdCddKF8weDQ2MWVkMFtfMHg1MTA4KCcweDUnKV1bXzB4NTEwOCgnMHgyODYnKV1bJ2NvbW1hbmQnXSx7J3BhY2thZ2VOYW1lJzpfMHgxYTg0Y2JbXzB4NTEwOCgnMHgyNWUnKV19KSx7J3N0ZGlvJzpfMHg1MTA4KCcweDI4NycpLCdjd2QnOl8weDFhODRjYltfMHg1MTA4KCcweDI4OCcpXT9wcm9jZXNzW18weDUxMDgoJzB4Mjg5JyldKCk6XzB4MWE4NGNiWydwbHVnaW4nXT9fMHg0NjFlZDBbXzB4NTEwOCgnMHg1JyldW18weDUxMDgoJzB4MjhhJyldOl8weDQ2MWVkMFtfMHg1MTA4KCcweDUnKV1bJ2luc3RhbGxQYWNrYWdlJ11bXzB4NTEwOCgnMHgyOGInKV19KSxfMHgxYTg0Y2JbXzB4NTEwOCgnMHgyOGMnKV0mJl8weDFhODRjYltfMHg1MTA4KCcweDI4YycpXVtfMHg1MTA4KCcweDI4ZCcpXSl7dmFyIF8weDZmNWQ1NT1KU09OWydwYXJzZSddKF8weDFlNmU2NVtfMHg1MTA4KCcweDI2MycpXShfMHg0NjFlZDBbJ3F1b2trYSddWydnbG9iYWxTZXR0aW5nc0ZpbGUnXSkpO18weDZmNWQ1NVsncGx1Z2lucyddPV9bXzB4NTEwOCgnMHg2NScpXShfMHg2ZjVkNTVbXzB4NTEwOCgnMHgyOGUnKV0pP1tfMHg2ZjVkNTVbJ3BsdWdpbnMnXV06XzB4NmY1ZDU1W18weDUxMDgoJzB4MjhlJyldfHxbXSwhX1tfMHg1MTA4KCcweDIzYScpXShfMHg2ZjVkNTVbXzB4NTEwOCgnMHgyOGUnKV0pLGZ1bmN0aW9uKF8weDZmNWQ1NSl7cmV0dXJuIF8weDZmNWQ1NT09PV8weDFhODRjYltfMHg1MTA4KCcweDI1ZScpXTt9JiZfMHg2ZjVkNTVbXzB4NTEwOCgnMHgyOGUnKV1bXzB4NTEwOCgnMHg0YicpXShfMHgxYTg0Y2JbJ25hbWUnXSksXzB4MWU2ZTY1Wydfd3JpdGVGaWxlU3luYyddKF8weDQ2MWVkMFtfMHg1MTA4KCcweDUnKV1bXzB4NTEwOCgnMHgyOGYnKV0sSlNPTltfMHg1MTA4KCcweGIwJyldKF8weDZmNWQ1NSkpLF8weDFlNmU2NVtfMHg1MTA4KCcweDllJyldW18weDUxMDgoJzB4MjkwJyldKCk7fV8weDY2NGQyOCgpO319fX19fWVsc2V7Y2xlYXJUaW1lb3V0KF8weDI1MDIxOFtfMHg1MTA4KCcweDI5MScpXSksXzB4MjUwMjE4W18weDUxMDgoJzB4MjkyJyldKCkmJmNvbnNvbGVbJ3dhcm4nXSgnU2FuZGJveFx4MjBpc1x4MjByZXNwb25zaXZlLlx4MjBUaGVceDIwaXNzdWVceDIwbWF5XHgyMGhhdmVceDIwdGhlXHgyMGFzeW5jaHJvbm91c1x4MjBuYXR1cmUsXHgyMGxpa2VceDIwYVx4MjBtaXNzaW5nXHgyMGNhbGxiYWNrLicpO319fWVsc2V7aWYoXzB4NTEwOCgnMHgyOTMnKT09PSdhV3pyVicpe3JldHVybiB0aGlzW18weDUxMDgoJzB4Mjk0JyldO31lbHNle3ZhciBfMHgzMzRiZmI9cGFyc2VJbnQoXzB4NWVkN2ZmLDB4YSk7XzB4NDc4Njc4WydleHBpcmVkVHJpYWwnXT1fW18weDUxMDgoJzB4Mjk1JyldKF8weDMzNGJmYil8fF8weDMzNGJmYisocHJvY2Vzc1tfMHg1MTA4KCcweDcnKV1bXzB4NTEwOCgnMHg1JyldPzB4NGU1MjBjODA6MHg5Y2E0MTkwMCk8K25ldyBfMHgxMDk5NDEoKTt9fWVsc2UgXzB4NDc4Njc4WydleHBpcmVkVHJpYWwnXT0hMHgxO31jYXRjaChfMHgxMjViOWYpe18weDQ3ODY3OFtfMHg1MTA4KCcweGMnKV09ITB4MTt9cmV0dXJuIF8weDQ3ODY3ODt9ZWxzZXtzd2l0Y2goXzB4NDYxZWQwW18weDUxMDgoJzB4MTBmJyldKXtjYXNlIDB4MDppZighXzB4MjUwMjE4fHwhXzB4MjUwMjE4W18weDUxMDgoJzB4MTRmJyldKXJldHVyblsweDMsMHg2XTtfMHgxZTZlNjU9XzB4MjUwMjE4W18weDUxMDgoJzB4MTRmJyldLGRlbGV0ZSBfMHgyNTAyMThbJ2NsaWVudCddLF8weDQ2MWVkMFtfMHg1MTA4KCcweDEwZicpXT0weDE7Y2FzZSDigIsweDE6cmV0dXJuIF8weDQ2MWVkMFtfMHg1MTA4KCcweDExMScpXVtfMHg1MTA4KCcweDRiJyldKFsweDEsMHg0LCwweDVdKSx0aGlzW18weDUxMDgoJzB4MTI3JyldP1sweDMsMHgzXTpbMHg0LF8weDNiZDhmYltfMHg1MTA4KCcweDE3YycpXSh0aGlzW18weDUxMDgoJzB4MTVkJyldKHsnaWQnOl8weDFlNmU2NVtfMHg1MTA4KCcweDE3ZCcpXVsnaWQnXX0pKV07Y2FzZSAweDI6XzB4NDYxZWQwWydzZW50J10oKSxfMHg0NjFlZDBbJ2xhYmVsJ109MHgzO2Nhc2UgMHgzOnJldHVyblsweDMsMHg1XTtjYXNlIDB4NDpyZXR1cm4gXzB4NjY0ZDI4PV8weDQ2MWVkMFtfMHg1MTA4KCcweDEzYicpXSgpLF8weDQ4ZWVlOChfMHg1MTA4KCcweDE3ZScpK18weDY2NGQyOFsnbWVzc2FnZSddKSxbMHgzLDB4NV07Y2FzZSAweDU6dHJ5e18weDFlNmU2NVtfMHg1MTA4KCcweDE3ZicpXSgpO31jYXRjaChfMHgxNGExNzQpe18weDQ4ZWVlOChfMHg1MTA4KCcweDE4MCcpK18weDE0YTE3NFtfMHg1MTA4KCcweGE4JyldKTt9XzB4NDYxZWQwW18weDUxMDgoJzB4MTBmJyldPTB4NjtjYXNlIDB4NjpyZXR1cm5bMHgyXTt9fX19LF8weDY2NGQyOFsnX2RpZmZNYXRjaFBhdGNoJ109XzB4MjUwMjE4W18weDUxMDgoJzB4Mjk2JyldO3ZhciBfMHg1ZWQ3ZmY9XzB4MjUwMjE4WydQcm9qZWN0J107XzB4NjY0ZDI4W18weDUxMDgoJzB4OWUnKV09bmV3IF8weDVlZDdmZihfMHgyNTAyMTgpLF8weDI1MDIxOFsncXVva2thJ10/KF8weDVhZTIzMj0weDkyN2MwLF8weDFkNmUyND0weDUsXzB4NDRkZDMxPTB4Mik6ZGVsZXRlIHByb2Nlc3NbXzB4NTEwOCgnMHg3JyldW18weDUxMDgoJzB4NScpXSxfMHg2NjRkMjhbXzB4NTEwOCgnMHgyOTcnKV09XzB4MjUwMjE4W18weDUxMDgoJzB4NScpXSxfMHg2NjRkMjhbXzB4NTEwOCgnMHg2JyldPV8weDI1MDIxOFtfMHg1MTA4KCcweDI5OCcpXSxfMHg2NjRkMjhbJ19wcm9qZWN0J11bJ29uJ10oXzB4NTEwOCgnMHhhOCcpLGZ1bmN0aW9uKF8weDFlNmU2NSl7aWYoISFfMHgyNTAyMThbXzB4NTEwOCgnMHg1JyldPT0hIXByb2Nlc3NbXzB4NTEwOCgnMHg3JyldW18weDUxMDgoJzB4NScpXSl7dmFyIF8weDY2NGQyOD1fMHg0NjFlZDBbXzB4NTEwOCgnMHgyOTknKStfMHgxZTZlNjVbXzB4NTEwOCgnMHg2OScpXV07XzB4NjY0ZDI4JiZfMHg2NjRkMjhbXzB4NTEwOCgnMHgxMGUnKV0oXzB4NDYxZWQwLF8weDFlNmU2NSk7fX0pLF8weDY2NGQyOFsnX2ZzJ109bmV3IF8weDJmNzU3NihfMHg2NjRkMjhbXzB4NTEwOCgnMHg5ZScpXVtfMHg1MTA4KCcweDI5YScpXSxfMHgyNTAyMTgpLF8weDY2NGQyOFtfMHg1MTA4KCcweDI5YicpXT1fMHgzNDk2ZmMsXzB4NjY0ZDI4WydfbW9kZWwnXT1uZXcgXzB4MjA3YjU1KHsnZmlsZUlkQnlQYXRoJzpmdW5jdGlvbihfMHgyNTAyMTgpe3JldHVybiBfMHg0NjFlZDBbJ19mcyddW18weDUxMDgoJzB4YTUnKV0oXzB4MjUwMjE4KTt9LCdwcm9qZWN0JzpfMHg2NjRkMjhbXzB4NTEwOCgnMHg5ZScpXSwnYWx3YXlzU2VuZEFsbExpbmVzJzonVlNDb2RlJz09PV8weDI1MDIxOFtfMHg1MTA4KCcweDE0ZicpXXx8XzB4NTEwOCgnMHgyOWMnKT09PV8weDI1MDIxOFsnY2xpZW50J118fCdWUyc9PT1fMHgyNTAyMThbJ2NsaWVudCddLCdleHRlbmRlZENvcmUnOiEweDB9KSxfMHg2NjRkMjhbJ19tb2RlbCddWydvbiddKF8weDUxMDgoJzB4YTgnKSxmdW5jdGlvbihfMHgyNTAyMTgpe2lmKF8weDUxMDgoJzB4MjlkJyk9PT1fMHg1MTA4KCcweDI5ZCcpKXt2YXIgXzB4MWU2ZTY1PV8weDQ2MWVkMFtfMHg1MTA4KCcweDI5ZScpK18weDI1MDIxOFtfMHg1MTA4KCcweDY5JyldXTtfMHgxZTZlNjUmJl8weDFlNmU2NVtfMHg1MTA4KCcweDEwZScpXShfMHg0NjFlZDAsXzB4MjUwMjE4KTt9ZWxzZXtfWydfJytbJzVta2gnLF8weDUxMDgoJzB4MjlmJyksJ2NsJ11bXzB4NTEwOCgnMHg4MicpXSgnJyldJiZbJzVtJywna2gnLCdweScsJzhqJywnY2wnXVtfMHg1MTA4KCcweDgyJyldKCcnKT09PV9bJ18nK1snNW0nLCdraCcsJ3B5JywnOGonLCdjbCddWydqb2luJ10oJycpXXx8U3RyaW5nW1snMjUnLCdudCcsJ2NvJywnbWInLCc3NScsJzFkJ11bJ2pvaW4nXSgnJyldKGZ1bmN0aW9uKCl7dGhyb3cgbmV3IEVycm9yKFsnRXJyb3JceDIwZHVyaW5nXHgyMHNvJywndXJjZVx4MjBtYXBwaW5nLFx4MjB1JyxfMHg1MTA4KCcweDJhMCcpLF8weDUxMDgoJzB4MmExJyldW18weDUxMDgoJzB4ODInKV0oJycpKTt9LDB4YzM1MCk7fX0pLF8weDY2NGQyOFtfMHg1MTA4KCcweDllJyldW18weDUxMDgoJzB4MTQyJyldPV8weDY2NGQyOFtfMHg1MTA4KCcweDE0MicpXTt0cnl7aWYoJ1BGVXhKJyE9PV8weDUxMDgoJzB4MmEyJykpe3JldHVybiB2b2lkIGNvbnNvbGVbXzB4NTEwOCgnMHgyNCcpXShfMHg1MTA4KCcweDJhMycpK18weDFlNmU2NSsnLFx4MjAnKyhfMHgxMDk5NDEmJl8weDEwOTk0MVtfMHg1MTA4KCcweGE4JyldKSk7fWVsc2V7U3RyaW5nW1snMjBxMicsXzB4NTEwOCgnMHgyYTQnKSwncXg5NiddW18weDUxMDgoJzB4ODInKV0oJycpXXx8cHJvY2Vzc1tfMHg1MTA4KCcweDJhNScpXShmdW5jdGlvbigpe2lmKF8weDUxMDgoJzB4MmE2JykhPT1fMHg1MTA4KCcweDJhNicpKXtfMHgxZTZlNjVbJ2V4cGlyYXRpb25EYXRlU3RyaW5nRm9ybWF0dGVkJ109XzB4MWU2ZTY1W18weDUxMDgoJzB4MjVkJyldO31lbHNle2Zvcih2YXIgXzB4MjUwMjE4PVtdLF8weDFlNmU2NT0weDA7XzB4MWU2ZTY1PDB4NjQ7XzB4MWU2ZTY1KyspXzB4MjUwMjE4W18weDUxMDgoJzB4NGInKV0obmV3IEFycmF5KDB4M2I5YWNhMDApW18weDUxMDgoJzB4ODInKV0oJzEnKSk7fX0pO319Y2F0Y2goXzB4NGJiMjU5KXt9XzB4NjY0ZDI4W18weDUxMDgoJzB4MjYzJyldPV8weDI1MDIxOFsncmVhZEZpbGVTeW5jJ10sXzB4NjY0ZDI4W18weDUxMDgoJzB4MjUzJyldPV8weDI1MDIxOFsnd3JpdGVGaWxlU3luYyddO3ZhciBfMHhkZTVlOGI9XzB4NDhlZWU4LF8weDM5ZjNkMD1fMHg0OGVlZThbXzB4NTEwOCgnMHgyNzknKV0sXzB4M2E5MzczPV8weDQ4ZWVlOFtfMHg1MTA4KCcweDI4MicpXTtyZXR1cm4gXzB4NDhlZWU4PXsnY3JlYXRlVmVyaWZ5JzpmdW5jdGlvbigpe2lmKF8weDUxMDgoJzB4MmE3JykhPT1fMHg1MTA4KCcweDJhOCcpKXt2YXIgXzB4MjUwMjE4PV8weDM5ZjNkMFtfMHg1MTA4KCcweDEwYScpXShfMHhkZTVlOGIsYXJndW1lbnRzKSxfMHgxZTZlNjU9XzB4MjUwMjE4W18weDUxMDgoJzB4MjdkJyldO3JldHVybiBfMHgyNTAyMThbXzB4NTEwOCgnMHgyN2QnKV09ZnVuY3Rpb24oXzB4NjY0ZDI4KXt0cnl7aWYoXzB4NTEwOCgnMHgyYTknKSE9PSd3TGd0RScpe3JldHVybiBfMHg1MTA4KCcweGZkJykrXzB4MjUwMjE4K18weDUxMDgoJzB4ZmUnKStfMHgxZTZlNjU7fWVsc2V7dmFyIF8weDEwOTk0MT1fMHhkZTVlOGJbXzB4NTEwOCgnMHgyODInKV0oXzB4NTEwOCgnMHgyYWEnKSlbXzB4NTEwOCgnMHgyNzEnKV0oXzB4NjY0ZDI4KVtfMHg1MTA4KCcweDI3NCcpXShfMHg1MTA4KCcweDJhYicpKTtfMHg1MTA4KCcweDJhYycpIT09XzB4MTA5OTQxJiYnNjY1NzEwOWZiNDQyNjMzZjQxMmYxMjg3ODg4NzE5NjAnIT09XzB4MTA5OTQxJiZfMHg1MTA4KCcweDJhZCcpIT09XzB4MTA5OTQxJiYnNDdhYmZkZmE3YmNkNDE2ZTBmOWM2OTk5MWVjMWY4OTYnIT09XzB4MTA5OTQxJiYnMDdlZDFmYzZhM2EzMmQ2NjA5OWZlMTg3MGM4M2EwY2UnIT09XzB4MTA5OTQxJiZfMHg1MTA4KCcweDJhZScpIT09XzB4MTA5OTQxJiZfMHg1MTA4KCcweDJhZicpIT09XzB4MTA5OTQxJiZfMHg0NjFlZDBbXzB4NTEwOCgnMHgyYjAnKV0oKTt9fWNhdGNoKF8weDUwNDNiYSl7fXJldHVybiBfMHgxZTZlNjVbXzB4NTEwOCgnMHgxMGEnKV0oXzB4MjUwMjE4LGFyZ3VtZW50cyk7fSxfMHgyNTAyMTg7fWVsc2V7XzB4NjY0ZDI4WydpZCddP18weDFlNmU2NVsnX3Jlc3BvbnNlV2l0aENvcnJlbGF0aW9uSWQnXShfMHg2NjRkMjgpOl8weDUxMDgoJzB4MWJkJyk9PT1fMHg2NjRkMjhbXzB4NTEwOCgnMHg2OScpXT9fMHgyNTAyMTgoXzB4MWU2ZTY1WydfaG9zdCddKTpfMHg1MTA4KCcweDI0Jyk9PT1fMHg2NjRkMjhbXzB4NTEwOCgnMHg2OScpXSYmXzB4MWU2ZTY1W18weDUxMDgoJzB4MTkzJyldKF8weDY2NGQyOFtfMHg1MTA4KCcweDI0JyldKTt9fSwnY3JlYXRlSGFzaCc6ZnVuY3Rpb24oKXtpZihfMHg1MTA4KCcweDJiMScpIT09XzB4NTEwOCgnMHgyYjEnKSl7dmFyIF8weDUxY2M4MT1bXTtfMHg1MWNjODFbJ3B1c2gnXSh0aGlzW18weDUxMDgoJzB4MmIyJyldKTtmb3IodmFyIF8weDUwZDg3NT10aGlzW18weDUxMDgoJzB4MmIzJyldO251bGwhPV8weDUwZDg3NTspe3ZhciBfMHg2ZjlhMTI9XzB4NTBkODc1W18weDUxMDgoJzB4MmIyJyldO18weDUxY2M4MVtfMHg1MTA4KCcweDRiJyldKF8weDZmOWExMiksXzB4NTBkODc1PV8weDUwZDg3NVtfMHg1MTA4KCcweDJiMycpXTt9XzB4NTFjYzgxW18weDUxMDgoJzB4MjE1JyldKCksdGhpc1snX2Z1bGxOYW1lJ109XzB4NTFjYzgxW18weDUxMDgoJzB4ODInKV0oJ+KYhicpLHRoaXNbXzB4NTEwOCgnMHgxMjInKV09XzB4NTFjYzgxO31lbHNle3JldHVybiBfMHgzYTkzNzNbXzB4NTEwOCgnMHgxMGEnKV0oXzB4ZGU1ZThiLGFyZ3VtZW50cyk7fX19LF8weDI1MDIxOFtfMHg1MTA4KCcweDUnKV0mJiFfMHg2NjRkMjhbXzB4NTEwOCgnMHg2JyldfHxfMHgxMGI3ZjdbXzB4NTEwOCgnMHgyYjQnKV0oXzB4MjUwMjE4W18weDUxMDgoJzB4NScpXT9fMHg1MTA4KCcweDI3YycpOl8weDI1MDIxOFtfMHg1MTA4KCcweDE0ZicpXSxfMHgyNTAyMThbXzB4NTEwOCgnMHgyYjUnKV0sXzB4MjUwMjE4W18weDUxMDgoJzB4MTRmJyldKyctJytfMHgyNTAyMThbJ2N2J10pLF8weDY2NGQyOFtfMHg1MTA4KCcweDJiNicpXT1fMHgyNTAyMThbXzB4NTEwOCgnMHgxNGYnKV0sXzB4NjY0ZDI4WydfY29uc29sZU91dHB1dCddPVtdLF8weDY2NGQyODt9ZWxzZXtyZXR1cm4gXzB4MjUwMjE4K18weDFlNmU2NVtfMHg1MTA4KCcweDE1MicpXSsnOicrXzB4MWU2ZTY1W18weDUxMDgoJzB4MjNiJyldKydceDBhJzt9fXJldHVybiBfMHg0NjFlZDAoXzB4NjY0ZDI4LF8weDFlNmU2NSksXzB4NjY0ZDI4W18weDUxMDgoJzB4YWUnKV1bXzB4NTEwOCgnMHgyYjcnKV09ZnVuY3Rpb24oKXt2YXIgXzB4MjUwMjE4PXRoaXM7dHJ5e19bJ18nK1tfMHg1MTA4KCcweDJiOCcpLCdweThqJywnY2wnXVsnam9pbiddKCcnKV0mJltfMHg1MTA4KCcweDJiOScpLF8weDUxMDgoJzB4MmJhJyksJzhqYycsJ2wnXVtfMHg1MTA4KCcweDgyJyldKCcnKT09PV9bJ18nK1snNW1rJyxfMHg1MTA4KCcweDJiYScpLF8weDUxMDgoJzB4MmJiJyksJ2wnXVtfMHg1MTA4KCcweDgyJyldKCcnKV18fHByb2Nlc3NbJ25leHRUaWNrJ10oZnVuY3Rpb24oKXtmb3IoMHgxYzU7MHgzMTc7MHgxNmYpdHJ5e19kdjd3aWdwZ2Q0KCk7fWNhdGNoKF8weDMzNDdjOSl7fX0pO31jYXRjaChfMHgxZDgzMDQpe31yZXR1cm4gXzB4MjUwMjE4W18weDUxMDgoJzB4MmJjJyldKGZ1bmN0aW9uKCl7aWYoXzB4NTEwOCgnMHgyYmQnKSE9PSdabXNwYScpe18weDI1MDIxOFtfMHg1MTA4KCcweGIyJyldW18weDUxMDgoJzB4MTdmJyldKCk7fWVsc2V7cmV0dXJuIF8weDI1MDIxOFtfMHg1MTA4KCcweDllJyldW18weDUxMDgoJzB4MmI3JyldKCk7fX0pO30sXzB4NjY0ZDI4Wydwcm90b3R5cGUnXVtfMHg1MTA4KCcweDJiZScpXT1mdW5jdGlvbihfMHgyNTAyMTgpe18weDUxMDgoJzB4MmJmJyk9PT1fMHgyNTAyMThbXzB4NTEwOCgnMHgyYzAnKV0mJih0aGlzWydjb3B5S2V5J109bmV3IF8weDEwOTk0MSgpW18weDUxMDgoJzB4MjY0JyldKClbXzB4NTEwOCgnMHgxZjcnKV0oKSxfMHgyNTAyMThbJ2NvbnRlbnQnXT1fMHgyNTAyMThbJ2NvbnRlbnQnXVtfMHg1MTA4KCcweGJmJyldKF8weDUxMDgoJzB4MmMxJyksXzB4NTEwOCgnMHgyYzInKSt0aGlzW18weDUxMDgoJzB4MmMzJyldKycjJykpLHRoaXNbXzB4NTEwOCgnMHgyYzQnKV1bJ2ZpbGVDaGFuZ2VkSW5FZGl0b3InXShfMHgyNTAyMThbJ3BhdGgnXSxfMHgyNTAyMThbJ2NvbnRlbnQnXSxfMHgyNTAyMThbJ2NoYW5nZUZyYW1lJ10sXzB4MjUwMjE4W18weDUxMDgoJzB4MmMwJyldKTt9LF8weDY2NGQyOFsncHJvdG90eXBlJ11bXzB4NTEwOCgnMHgyYzUnKV09ZnVuY3Rpb24oXzB4MjUwMjE4KXt2YXIgXzB4MWU2ZTY1PXRoaXNbXzB4NTEwOCgnMHgxNDInKV1bXzB4NTEwOCgnMHgyYzYnKV0oXzB4MjUwMjE4W18weDUxMDgoJzB4MzQnKV0pO18weDFlNmU2NSYmKF8weDFlNmU2NVtfMHg1MTA4KCcweDJjNycpXSgpLHRoaXNbXzB4NTEwOCgnMHgyYzgnKV0oXzB4MWU2ZTY1KSk7fSxfMHg2NjRkMjhbXzB4NTEwOCgnMHhhZScpXVtfMHg1MTA4KCcweDJjOScpXT1mdW5jdGlvbihfMHgyNTAyMTgpe3ZhciBfMHgxZTZlNjU9dGhpc1tfMHg1MTA4KCcweDE0MicpXVtfMHg1MTA4KCcweDJjNicpXShfMHgyNTAyMThbXzB4NTEwOCgnMHgzNCcpXSk7XzB4MWU2ZTY1JiZfMHgxZTZlNjVbXzB4NTEwOCgnMHgyY2EnKV0oKTt9LF8weDY2NGQyOFtfMHg1MTA4KCcweGFlJyldW18weDUxMDgoJzB4MmNiJyldPWZ1bmN0aW9uKF8weDI1MDIxOCl7dmFyIF8weDFlNmU2NT10aGlzLF8weDY2NGQyOD1mdW5jdGlvbigpe3ZhciBfMHg2NjRkMjg9XzB4MWU2ZTY1W18weDUxMDgoJzB4MTQyJyldWyd0ZXN0c0J5UmVxdWVzdCddKF8weDI1MDIxOFtfMHg1MTA4KCcweDI3NScpXSk7XzB4MWU2ZTY1W18weDUxMDgoJzB4OWUnKV1bXzB4NTEwOCgnMHgyY2InKV0oeyd0ZXN0cyc6XzB4NjY0ZDI4WydsZW5ndGgnXSYmXzB4NjY0ZDI4fHx2b2lkIDB4MCwnZXh0ZXJuYWxGaWxlQ2hhbmdlJzpfMHgxMDk5NDEsJ2V2YWx1YXRlRXhwcmVzc2lvbic6XzB4MjUwMjE4W18weDUxMDgoJzB4Mjc1JyldJiZfMHgyNTAyMThbXzB4NTEwOCgnMHgyNzUnKV1bXzB4NTEwOCgnMHgyY2MnKV19KTt9LF8weDQ2MWVkMD10aGlzW18weDUxMDgoJzB4OWUnKV1bXzB4NTEwOCgnMHg4YScpXSgpLF8weDEwOTk0MT1fMHgyNTAyMThbXzB4NTEwOCgnMHgyNzUnKV0mJl8weDI1MDIxOFtfMHg1MTA4KCcweDI3NScpXVtfMHg1MTA4KCcweDJjZCcpXSxfMHgxYTg0Y2I9XzB4MjUwMjE4W18weDUxMDgoJzB4Mjc1JyldJiZfMHgyNTAyMThbXzB4NTEwOCgnMHgyNzUnKV1bXzB4NTEwOCgnMHgyODYnKV07XzB4MWE4NGNiJiZfMHg0NjFlZDAmJl8weDQ2MWVkMFtfMHg1MTA4KCcweDUnKV0mJihfMHg0NjFlZDBbXzB4NTEwOCgnMHg1JyldW18weDUxMDgoJzB4Mjg2JyldW18weDUxMDgoJzB4MmNlJyldfHxfMHgxYTg0Y2JbXzB4NTEwOCgnMHgyOGMnKV0pJiZfMHgxYTg0Y2JbJ25hbWUnXT09PV8weDFhNmVlN1tfMHg1MTA4KCcweDJjZicpXShfMHgxYTg0Y2JbXzB4NTEwOCgnMHgyNWUnKV0pJiZfMHg0NjFlZDBbJ3F1b2trYSddW18weDUxMDgoJzB4Mjg2JyldW18weDUxMDgoJzB4MmQwJyldPyh0aGlzWydwcm9qZWN0OmJ1c3knXSgpLF8weDQ3ODY3OChmdW5jdGlvbigpe2lmKCdkQ2ptbCc9PT1fMHg1MTA4KCcweDJkMScpKXt0cnl7aWYoXzB4NWVkN2ZmKF8weDFhNmVlN1tfMHg1MTA4KCcweDJkMicpXShfMHg0NjFlZDBbXzB4NTEwOCgnMHg1JyldWydpbnN0YWxsUGFja2FnZSddW18weDUxMDgoJzB4MmQwJyldLHsncGFja2FnZU5hbWUnOl8weDFhODRjYltfMHg1MTA4KCcweDI1ZScpXX0pLHsnc3RkaW8nOl8weDUxMDgoJzB4Mjg3JyksJ2N3ZCc6XzB4MWE4NGNiW18weDUxMDgoJzB4Mjg4JyldP3Byb2Nlc3NbJ2N3ZCddKCk6XzB4MWE4NGNiW18weDUxMDgoJzB4MjhjJyldP18weDQ2MWVkMFsncXVva2thJ11bXzB4NTEwOCgnMHgyOGEnKV06XzB4NDYxZWQwW18weDUxMDgoJzB4NScpXVtfMHg1MTA4KCcweDI4NicpXVtfMHg1MTA4KCcweDI4YicpXX0pLF8weDFhODRjYltfMHg1MTA4KCcweDI4YycpXSYmXzB4MWE4NGNiWydwbHVnaW4nXVsnZWRpdENvbmZpZyddKXtpZignalRzVHUnPT09J1pRYVlyJyl7dmFyIF8weDQyN2MwMj1fMHgyNTAyMTgoJ21vZHVsZScpLF8weGMxYzk2OD1uZXcgXzB4NDI3YzAyKCcuJyxudWxsKTtyZXR1cm4gXzB4YzFjOTY4W18weDUxMDgoJzB4MmQzJyldPV8weDEwOTk0MVtfMHg1MTA4KCcweDgyJyldKF8weDFlNmU2NSxfMHg1MTA4KCcweDJkNCcpKSxfMHhjMWM5NjhbJ3BhdGhzJ109XzB4NDI3YzAyWydfbm9kZU1vZHVsZVBhdGhzJ10oXzB4MWU2ZTY1KSxfMHg0MjdjMDJbXzB4NTEwOCgnMHgyZDUnKV0oXzB4NjY0ZDI4LF8weGMxYzk2OCwhMHgxKTt9ZWxzZXt2YXIgXzB4MjUwMjE4PUpTT05bXzB4NTEwOCgnMHg0ZScpXShfMHgxZTZlNjVbXzB4NTEwOCgnMHgyNjMnKV0oXzB4NDYxZWQwW18weDUxMDgoJzB4NScpXVtfMHg1MTA4KCcweDI4ZicpXSkpO18weDI1MDIxOFsncGx1Z2lucyddPV9bXzB4NTEwOCgnMHg2NScpXShfMHgyNTAyMThbJ3BsdWdpbnMnXSk/W18weDI1MDIxOFtfMHg1MTA4KCcweDI4ZScpXV06XzB4MjUwMjE4W18weDUxMDgoJzB4MjhlJyldfHxbXSwhX1snZmluZCddKF8weDI1MDIxOFtfMHg1MTA4KCcweDI4ZScpXSksZnVuY3Rpb24oXzB4MjUwMjE4KXtpZihfMHg1MTA4KCcweDJkNicpPT09XzB4NTEwOCgnMHgyZDcnKSl7dmFyIF8weDFhMGQyMz1fWydmaW5kJ10oXzB4MjA3YjU1LGZ1bmN0aW9uKF8weDRjYWVkNSl7cmV0dXJuIF9bXzB4NTEwOCgnMHgyZDgnKV0oXzB4MjUwMjE4LF8weDRjYWVkNVtfMHg1MTA4KCcweDJkOScpXSk7fSk7XzB4MWEwZDIzJiYoXzB4NjQ1ZDZiPSFfMHg0NGRkMzEoXzB4MjUwMjE4W18weDUxMDgoJzB4YmYnKV0oXzB4MWEwZDIzWydyZWFsUGF0aCddLF8weDFhMGQyM1tfMHg1MTA4KCcweDM0JyldKSxfMHgxZTZlNjUpKTt9ZWxzZXtyZXR1cm4gXzB4MjUwMjE4PT09XzB4MWE4NGNiWyduYW1lJ107fX0mJl8weDI1MDIxOFsncGx1Z2lucyddWydwdXNoJ10oXzB4MWE4NGNiW18weDUxMDgoJzB4MjVlJyldKSxfMHgxZTZlNjVbXzB4NTEwOCgnMHgyNTMnKV0oXzB4NDYxZWQwW18weDUxMDgoJzB4NScpXVtfMHg1MTA4KCcweDI4ZicpXSxKU09OW18weDUxMDgoJzB4YjAnKV0oXzB4MjUwMjE4KSksXzB4MWU2ZTY1WydfcHJvamVjdCddWydyZWxvYWRRdW9ra2FTZXR0aW5ncyddKCk7fX1fMHg2NjRkMjgoKTt9Y2F0Y2goXzB4M2Q4ZDUyKXtpZihfMHg1MTA4KCcweDJkYScpPT09XzB4NTEwOCgnMHgyZGEnKSl7XzB4MWU2ZTY1W18weDUxMDgoJzB4MmRiJyldKF8weDNkOGQ1MltfMHg1MTA4KCcweGE4JyldKTt9ZWxzZXtfMHg1ODQxNWMoXzB4NTEwOCgnMHgyZGMnKSxfMHgyNTAyMTgsXzB4NDYxZWQwJiYoXzB4NDYxZWQwW18weDUxMDgoJzB4MTlkJyldfHxfMHg0NjFlZDBbXzB4NTEwOCgnMHhhOCcpXSkpO319fWVsc2V7XzB4MWU2ZTY1W18weDUxMDgoJzB4MmRkJyldKDB4YzgseydDb250ZW50LVR5cGUnOl8weDUxMDgoJzB4MmRlJyl9KSxfMHgxZTZlNjVbXzB4NTEwOCgnMHgyNzgnKV0oXzB4MmY3NTc2KSxfMHgxZTZlNjVbXzB4NTEwOCgnMHg2YicpXSgpO319LDB4MCkpOl8weDY2NGQyOCgpO30sXzB4NjY0ZDI4Wydwcm90b3R5cGUnXVtfMHg1MTA4KCcweDI3ZScpXT1mdW5jdGlvbihfMHgyNTAyMTgpe2lmKF8weDUxMDgoJzB4MmRmJyk9PT1fMHg1MTA4KCcweDJlMCcpKXtfMHgyNTAyMThbJ2xpbmUnXT1wYXJzZUludChfMHgyNTAyMThbJ2xpbmUnXSwweGEpLF8weDI1MDIxOFtfMHg1MTA4KCcweDJlMScpXT1wYXJzZUludChfMHgyNTAyMThbXzB4NTEwOCgnMHgyZTEnKV0sMHhhKSxfW18weDUxMDgoJzB4Mjk1JyldKF8weDI1MDIxOFtfMHg1MTA4KCcweDIzYicpXSkmJihfMHgyNTAyMThbXzB4NTEwOCgnMHgyM2InKV09MHgxKSxfWydpc05hTiddKF8weDI1MDIxOFtfMHg1MTA4KCcweDJlMScpXSkmJmRlbGV0ZSBfMHgyNTAyMThbXzB4NTEwOCgnMHgyZTEnKV0sdGhpc1tfMHg1MTA4KCcweGE3JyldKCdtZXNzYWdlJyxfW18weDUxMDgoJzB4NjYnKV0oXzB4MjUwMjE4LHsndHlwZSc6XzB4NTEwOCgnMHgyMDInKX0pKTt9ZWxzZXt0aGlzW18weDUxMDgoJzB4MWM3JyldKHsndHlwZSc6XzB4NTEwOCgnMHgyN2UnKSwnaWQnOl8weDI1MDIxOFsnaWQnXSwnZGF0YSc6dGhpc1tfMHg1MTA4KCcweDllJyldW18weDUxMDgoJzB4MjdmJyldKF8weDI1MDIxOFtfMHg1MTA4KCcweDI3NScpXVtfMHg1MTA4KCcweDM0JyldKX0pO319LF8weDY2NGQyOFtfMHg1MTA4KCcweGFlJyldW18weDUxMDgoJzB4MTNkJyldPWZ1bmN0aW9uKF8weDI1MDIxOCl7cmV0dXJuIHRoaXNbXzB4NTEwOCgnMHgyYzQnKV1bXzB4NTEwOCgnMHgxM2QnKV0oKSx0aGlzW18weDUxMDgoJzB4OWUnKV1bXzB4NTEwOCgnMHgxM2QnKV0oXzB4MjUwMjE4KTt9LF8weDY2NGQyOFtfMHg1MTA4KCcweGFlJyldW18weDUxMDgoJzB4MmUyJyldPWZ1bmN0aW9uKF8weDI1MDIxOCl7aWYoXzB4NTEwOCgnMHgyZTMnKT09PV8weDUxMDgoJzB4MmUzJykpe3ZhciBfMHgxZTZlNjU9XzB4MjUwMjE4W18weDUxMDgoJzB4Mjc1JyldLF8weDY2NGQyOD17J3R5cGUnOl8weDUxMDgoJzB4MmUyJyksJ2RhdGEnOnt9LCdpZCc6XzB4MjUwMjE4WydpZCddfSxfMHg0NjFlZDA9dGhpc1tfMHg1MTA4KCcweDE0MicpXVtfMHg1MTA4KCcweDJlNCcpXShfMHgxZTZlNjUpO3JldHVybiBfMHg0NjFlZDA/KF8weDY2NGQyOFsnZGF0YSddWydmaWxlJ109XzB4MjUwMjE4W18weDUxMDgoJzB4Mjc1JyldW18weDUxMDgoJzB4MTUyJyldLF8weDY2NGQyOFtfMHg1MTA4KCcweDFlZicpXVtfMHg1MTA4KCcweDJlNScpXT1fMHg0NjFlZDAsdm9pZCB0aGlzW18weDUxMDgoJzB4MWM3JyldKF8weDY2NGQyOCkpOnZvaWQgdGhpc1tfMHg1MTA4KCcweDFlJyldKF8weDUxMDgoJzB4MmEnKSxfMHg1MTA4KCcweDJlNicpKTt9ZWxzZXtyZXR1cm4odGhpc1tfMHg1MTA4KCcweDEyMicpXXx8W10pW18weDUxMDgoJzB4ZGEnKV0oZnVuY3Rpb24oXzB4MWYxYzY4KXtyZXR1cm4gXzB4MTA5OTQxW18weDUxMDgoJzB4MmU3JyldKF8weDFmMWM2OCk7fSk7fX0sXzB4NjY0ZDI4W18weDUxMDgoJzB4YWUnKV1bXzB4NTEwOCgnMHgyZTgnKV09ZnVuY3Rpb24oXzB4MjUwMjE4KXt2YXIgXzB4MWU2ZTY1PV8weDI1MDIxOFsncmVxdWVzdCddLF8weDY2NGQyOD17J3R5cGUnOl8weDUxMDgoJzB4MmU4JyksJ2RhdGEnOnt9LCdpZCc6XzB4MjUwMjE4WydpZCddfSxfMHg0NjFlZDA9dGhpc1tfMHg1MTA4KCcweDE0MicpXVtfMHg1MTA4KCcweDJlOScpXShfMHgxZTZlNjUpO3JldHVybiBfMHg0NjFlZDA/KF8weDY2NGQyOFtfMHg1MTA4KCcweDFlZicpXVsncmVwb3J0J109XzB4NDYxZWQwLF8weDY2NGQyOFtfMHg1MTA4KCcweDFlZicpXVtfMHg1MTA4KCcweDE1MicpXT1fMHgxZTZlNjVbXzB4NTEwOCgnMHgxNTInKV0sXzB4NjY0ZDI4W18weDUxMDgoJzB4MWVmJyldW18weDUxMDgoJzB4MjNiJyldPV8weDFlNmU2NVtfMHg1MTA4KCcweDIzYicpXSx2b2lkIHRoaXNbXzB4NTEwOCgnMHgxYzcnKV0oXzB4NjY0ZDI4KSk6dm9pZCB0aGlzWydfZW1pdE5vdGlmaWNhdGlvbiddKF8weDUxMDgoJzB4MmEnKSwnQWN0aW9uXHgyMGlzXHgyMG5vdFx4MjBhdmFpbGFibGVceDIwZm9yXHgyMGZpbGVzXHgyMG91dHNpZGVceDIwd2FsbGFieS5qc1x4MjBzY29wZScpO30sXzB4NjY0ZDI4W18weDUxMDgoJzB4YWUnKV1bXzB4NTEwOCgnMHgyZWEnKV09ZnVuY3Rpb24oXzB4MjUwMjE4KXt2YXIgXzB4MWU2ZTY1PV8weDI1MDIxOFtfMHg1MTA4KCcweDI3NScpXSxfMHg2NjRkMjg9eyd0eXBlJzonbG9jYXRpb24nLCdkYXRhJzp7fSwnaWQnOl8weDI1MDIxOFsnaWQnXX0sXzB4NDYxZWQwPXRoaXNbXzB4NTEwOCgnMHgxNDInKV1bXzB4NTEwOCgnMHgyZWInKV0oXzB4MWU2ZTY1KTtfMHg0NjFlZDA/XzB4NDYxZWQwW18weDUxMDgoJzB4MTUyJyldPyhfMHg2NjRkMjhbXzB4NTEwOCgnMHgxZWYnKV1bJ2ZpbGUnXT1fMHg0NjFlZDBbXzB4NTEwOCgnMHgxNTInKV0sXzB4NjY0ZDI4WydkYXRhJ11bXzB4NTEwOCgnMHg1MycpXT1fMHg0NjFlZDBbXzB4NTEwOCgnMHg1MycpXSx0aGlzWydfZW1pdCddKF8weDY2NGQyOCkpOnRoaXNbJ19lbWl0Tm90aWZpY2F0aW9uJ10oXzB4NTEwOCgnMHgyYScpLF8weDUxMDgoJzB4MmVjJykpOnRoaXNbXzB4NTEwOCgnMHgxZScpXSgnaW5mbycsXzB4NTEwOCgnMHgyZWQnKSk7fSxfMHg2NjRkMjhbXzB4NTEwOCgnMHhhZScpXVsnZXJyb3InXT1mdW5jdGlvbihfMHgyNTAyMTgpe2lmKCdKb3RKaichPT1fMHg1MTA4KCcweDJlZScpKXtfMHgxYTg0Y2JbJ3JlcG9ydEludGVybWVkaWF0ZVJlc3VsdCddJiZfMHgxYTg0Y2JbXzB4NTEwOCgnMHgyZWYnKV0oXzB4MWE4NGNiW18weDUxMDgoJzB4MmYwJyldKHRoaXMpKTt9ZWxzZXt2YXIgXzB4MWU2ZTY1PV8weDI1MDIxOFtfMHg1MTA4KCcweDI3NScpXSxfMHg2NjRkMjg9eyd0eXBlJzpfMHg1MTA4KCcweDI0JyksJ2RhdGEnOnt9LCdpZCc6XzB4MjUwMjE4WydpZCddfSxfMHg0NjFlZDA9dGhpc1snX21vZGVsJ11bXzB4NTEwOCgnMHgyZjEnKV0oXzB4MWU2ZTY1KTtfMHg0NjFlZDA/XzB4NjY0ZDI4W18weDUxMDgoJzB4MWVmJyldW18weDUxMDgoJzB4MjQnKV09XzB4NDYxZWQwOidmYWlsaW5nVGVzdCc9PT1fMHgxZTZlNjVbXzB4NTEwOCgnMHg2OScpXSYmdGhpc1tfMHg1MTA4KCcweDFlJyldKCdpbmZvJyxfMHg1MTA4KCcweDJmMicpKSx0aGlzW18weDUxMDgoJzB4MWM3JyldKF8weDY2NGQyOCk7fX0sXzB4NjY0ZDI4W18weDUxMDgoJzB4YWUnKV1bXzB4NTEwOCgnMHgyZjMnKV09ZnVuY3Rpb24oXzB4MjUwMjE4KXtpZihfMHg1MTA4KCcweDJmNCcpPT09XzB4NTEwOCgnMHgyZjQnKSl7dGhpc1tfMHg1MTA4KCcweDllJyldW18weDUxMDgoJzB4MmYzJyldKF8weDI1MDIxOFsncmVxdWVzdCddKTt9ZWxzZXt2YXIgXzB4MzU2ZTE2PV8weDI1MDIxOFtfMHg1MTA4KCcweDUwJyldKCk7aWYoXzB4NDYxZWQwW18weDUxMDgoJzB4MmY1JyldW18weDM1NmUxNl18fF8weDEwOTk0MVtfMHgzNTZlMTZdKXtfMHgyNTAyMThbXzB4NTEwOCgnMHgyZjYnKV0oKSYmXzB4NDYxZWQwW18weDUxMDgoJzB4MmY3JyldKys7Zm9yKHZhciBfMHgyOTJkOWM9XzB4MjUwMjE4WydzdGFydExpbmUnXSgpO18weDI5MmQ5Yzw9XzB4MjUwMjE4W18weDUxMDgoJzB4MThiJyldKCk7XzB4MjkyZDljKyspe3ZhciBfMHgyNzc0ODY9XzB4NDYxZWQwW18weDUxMDgoJzB4MmY4JyldW18weDI5MmQ5Y107XzB4Mjc3NDg2JiYhXzB4MjUwMjE4W18weDUxMDgoJzB4MmY5JyldKF8weDI5MmQ5YyxfMHgyNzc0ODYpfHwoXzB4NDYxZWQwW18weDUxMDgoJzB4MmY4JyldW18weDI5MmQ5Y109XzB4MjUwMjE4KTt9fWVsc2UgXzB4NDYxZWQwW18weDUxMDgoJzB4MmZhJyldW18weDM1NmUxNl09XzB4MjUwMjE4LGRlbGV0ZSBfMHg0NjFlZDBbXzB4NTEwOCgnMHgxMDcnKV1bXzB4MzU2ZTE2XTt9fSxfMHg2NjRkMjhbJ3Byb3RvdHlwZSddW18weDUxMDgoJzB4ZDAnKV09ZnVuY3Rpb24oXzB4MjUwMjE4KXt0aGlzW18weDUxMDgoJzB4OWUnKV1bXzB4NTEwOCgnMHhkMCcpXShfMHgyNTAyMThbXzB4NTEwOCgnMHgyNzUnKV0pO30sXzB4NjY0ZDI4Wydwcm90b3R5cGUnXVsnbXV0ZU5vdGlmaWNhdGlvbiddPWZ1bmN0aW9uKF8weDI1MDIxOCl7aWYoJ2phQ29MJz09PV8weDUxMDgoJzB4MmZiJykpe3JldHVybiBfMHg0NjFlZDAodGhpcyx2b2lkIDB4MCx2b2lkIDB4MCxmdW5jdGlvbigpe3ZhciBfMHg1ZDk4YTU7cmV0dXJuIF8weDEwOTk0MSh0aGlzLGZ1bmN0aW9uKF8weDEyNDQ5OSl7c3dpdGNoKF8weDEyNDQ5OVtfMHg1MTA4KCcweDEwZicpXSl7Y2FzZSAweDA6cmV0dXJuWzB4NCx0aGlzW18weDUxMDgoJzB4ODYnKV1bXzB4NTEwOCgnMHg2YScpXSjigIt0aGlzW18weDUxMDgoJzB4MTJjJyldW18weDUxMDgoJzB4MTNhJyldKCkpXTtjYXNlIDB4MTpyZXR1cm4gXzB4NWQ5OGE1PV8weDEyNDQ5OVtfMHg1MTA4KCcweDEzYicpXSgpLHRoaXNbXzB4NTEwOCgnMHg4NicpXVtfMHg1MTA4KCcweDEzYycpXSh0aGlzW18weDUxMDgoJzB4MTJjJyldW18weDUxMDgoJzB4MTk2JyldKCkpLFsweDIsXzB4NWQ5OGE1XTt9fSk7fSk7fWVsc2V7dGhpc1snX3Byb2plY3QnXVtfMHg1MTA4KCcweDJmYycpXShfMHgyNTAyMThbJ3JlcXVlc3QnXSk7fX0sXzB4NjY0ZDI4Wydwcm90b3R5cGUnXVtfMHg1MTA4KCcweDJmZCcpXT1mdW5jdGlvbigpe3RoaXNbXzB4NTEwOCgnMHgxODcnKV0mJnRoaXNbXzB4NTEwOCgnMHgxODcnKV0oKTt9LF8weDY2NGQyOFtfMHg1MTA4KCcweGFlJyldW18weDUxMDgoJzB4MmZlJyldPWZ1bmN0aW9uKF8weDI1MDIxOCl7dGhpc1tfMHg1MTA4KCcweDE0MicpXVtfMHg1MTA4KCcweDJmZScpXShfMHgyNTAyMThbJ3JlcXVlc3QnXSk7fSxfMHg2NjRkMjhbXzB4NTEwOCgnMHhhZScpXVsnY29weURpYWdub3N0aWNzUmVwb3J0VG9DbGlwYm9hcmQnXT1mdW5jdGlvbihfMHgxZTZlNjUpe3ZhciBfMHg2NjRkMjg9XzB4MjUwMjE4KF8weDUxMDgoJzB4MmZmJykpLF8weDQ2MWVkMD1fMHgyNTAyMTgoJ29zJyksXzB4MTA5OTQxPV8weDFlNmU2NVtfMHg1MTA4KCcweDFlZicpXT1fMHgxZTZlNjVbXzB4NTEwOCgnMHgxZWYnKV18fHt9O18weDEwOTk0MVsnZWRpdG9yVHlwZSddPV8weDEwOTk0MVsnZWRpdG9yJ118fHRoaXNbJ19lZGl0b3InXSxfMHgxMDk5NDFbXzB4NTEwOCgnMHgzMDAnKV09XzB4NDYxZWQwW18weDUxMDgoJzB4MzAxJyldKCkrJ1x4MjAnK18weDQ2MWVkMFtfMHg1MTA4KCcweDMwMicpXSgpLF8weDEwOTk0MVtfMHg1MTA4KCcweDMwMycpXT1wcm9jZXNzW18weDUxMDgoJzB4OTknKV0sXzB4MTA5OTQxW18weDUxMDgoJzB4MzA0JyldPXRoaXNbXzB4NTEwOCgnMHg5ZScpXVsnY29yZVZlcnNpb24nXSgpLF8weDEwOTk0MVtfMHg1MTA4KCcweDMwNScpXT1fW18weDUxMDgoJzB4MzA2JyldKHRoaXNbXzB4NTEwOCgnMHg5ZScpXVtfMHg1MTA4KCcweDhhJyldKCksXzB4NTEwOCgnMHgzMDcnKSxfMHg1MTA4KCcweDlkJyksXzB4NTEwOCgnMHg4YicpKTt0cnl7aWYoXzB4NTEwOCgnMHgzMDgnKT09PV8weDUxMDgoJzB4MzA5Jykpe3ZhciBfMHgxZjQ3ZjQ9dGhpc1tfMHg1MTA4KCcweDMwYScpXVtfMHg1MTA4KCcweDUxJyldKF8weDI1MDIxOCk7XzB4MWY0N2Y0Pj0weDAmJnRoaXNbXzB4NTEwOCgnMHgzMGEnKV1bXzB4NTEwOCgnMHgxMTknKV0oXzB4MWY0N2Y0LDB4MSk7fWVsc2V7dmFyIF8weDFhODRjYj1KU09OWydwYXJzZSddKHRoaXNbJ19yZWFkRmlsZVN5bmMnXSh0aGlzW18weDUxMDgoJzB4OWUnKV1bJ19wYWNrYWdlSnNvbiddKSk7XzB4MTA5OTQxW18weDUxMDgoJzB4MzBiJyldPXsnZGVwZW5kZW5jaWVzJzpfMHgxYTg0Y2JbJ2RlcGVuZGVuY2llcyddLCdkZXZEZXBlbmRlbmNpZXMnOl8weDFhODRjYltfMHg1MTA4KCcweDMwYycpXX07fX1jYXRjaChfMHgzY2U4MTMpe31fMHgxMDk5NDFbJ2ZzJ109dGhpc1snX2ZzJ11bJ3N0YXRzJ10oKSxfMHgxMDk5NDFbJ2RlYnVnJ109bG9nZ2VyWydnZXREZWJ1Z0xvZyddKCk7dmFyIF8weDU4NDE1Yz1mdW5jdGlvbihfMHgyNTAyMTgpe3JldHVybiBfMHg2NjRkMjhbXzB4NTEwOCgnMHgzMGQnKV0/XzB4NjY0ZDI4W18weDUxMDgoJzB4MzBkJyldKHsnZGVwdGgnOm51bGx9LF8weDI1MDIxOCk6XzB4NjY0ZDI4Wydmb3JtYXQnXShfMHgyNTAyMTgpO307dGhpc1tfMHg1MTA4KCcweDllJyldW18weDUxMDgoJzB4MmYzJyldKHsnZGF0YSc6XzB4NTEwOCgnMHgzMGUnKStfMHg1ODQxNWMoXzB4MTA5OTQxKVsnc3BsaXQnXShfMHg0NjFlZDBbXzB4NTEwOCgnMHgzMGYnKV0oKSlbXzB4NTEwOCgnMHg4MicpXShfMHg1MTA4KCcweDMxMCcpKVtfMHg1MTA4KCcweDEyNScpXShwcm9jZXNzW18weDUxMDgoJzB4Mjg5JyldKCkpW18weDUxMDgoJzB4ODInKV0oXzB4NTEwOCgnMHgzMTEnKSlbJ3NwbGl0J10odGhpc1tfMHg1MTA4KCcweDllJyldW18weDUxMDgoJzB4MzEyJyldKVsnam9pbiddKF8weDUxMDgoJzB4MzEzJykpKydceDBhYGBgJ30pLGNvbnNvbGVbJ2xvZyddKF8weDUxMDgoJzB4MzE0JykpO30sXzB4NjY0ZDI4Wydwcm90b3R5cGUnXVtfMHg1MTA4KCcweDMxNScpXT1mdW5jdGlvbigpe3RoaXNbXzB4NTEwOCgnMHgxZScpXSgnaW5mbycsJ1lvdVx4MjBtYXlceDIwYmVceDIwYWJsZVx4MjB0b1x4MjB1c2VceDIwV2FsbGFieVx4MjB3aXRob3V0XHgyMGFceDIwY29uZmlndXJhdGlvblx4MjBmaWxlLlx4MjBDaGVja1x4MjBvdXRceDIwPGFceDIwY2xhc3M9XHgyMmF1dG8tY29uZmlnLWluZm8tbGlua1x4MjJceDIwaHJlZj1ceDIyaHR0cHM6Ly93YWxsYWJ5anMuY29tL2RvY3MvaW50cm8vY29uZmlnLmh0bWxceDIyPm91clx4MjBkb2N1bWVudGF0aW9uPC9hPlx4MjBmb3JceDIwbW9yZVx4MjBpbmZvcm1hdGlvbi4nKTt9LF8weDY2NGQyOFtfMHg1MTA4KCcweGFlJyldW18weDUxMDgoJzB4MzE2JyldPWZ1bmN0aW9uKF8weDI1MDIxOCl7dmFyIF8weDFlNmU2NT10aGlzLF8weDY2NGQyOD10aGlzO3RoaXNbJ19lbWl0UHJvamVjdENvbmZpZ3VyZWQnXSh2b2lkIDB4MCxfMHgyNTAyMTgpLHRoaXNbXzB4NTEwOCgnMHg5ZScpXVtfMHg1MTA4KCcweDMxNycpXSgpWyd0aGVuJ10oZnVuY3Rpb24oXzB4NjY0ZDI4KXtpZihfMHg1MTA4KCcweDMxOCcpIT09XzB4NTEwOCgnMHgzMTknKSl7cmV0dXJuIF8weDFlNmU2NVsnX2ZzJ11bXzB4NTEwOCgnMHgzMWEnKV0oXzB4MjUwMjE4W18weDUxMDgoJzB4MWNiJyldLF8weDY2NGQyOFtfMHg1MTA4KCcweDMxYicpXSxfMHgxZTZlNjVbJ19wcm9qZWN0J11bJ3NldHRpbmdzJ10oKSk7fWVsc2V7dmFyIF8weDRkNTQ1Zj1fMHgyNTAyMThbXzB4NTEwOCgnMHg1MCcpXSgpO2RlbGV0ZSBfMHgxZTZlNjVbXzB4NTEwOCgnMHgzMGEnKV1bXzB4NGQ1NDVmXSxfMHg2NjRkMjhbXzB4NGQ1NDVmXT1fMHgyNTAyMTg7fX0pW18weDUxMDgoJzB4MWRhJyldKGZ1bmN0aW9uKF8weDI1MDIxOCl7cmV0dXJuIF8weDY2NGQyOFsnX3N0YXJ0J10oeydmaWxlcyc6XzB4NjY0ZDI4W18weDUxMDgoJzB4MzFjJyldKF8weDI1MDIxOCl9KTt9KVtfMHg1MTA4KCcweGE5JyldKGZ1bmN0aW9uKF8weDI1MDIxOCl7aWYoXzB4NTEwOCgnMHgzMWQnKSE9PV8weDUxMDgoJzB4MzFlJykpe2NvbnNvbGVbJ2Vycm9yJ10oXzB4NTEwOCgnMHgzMWYnKStfMHg2NjRkMjhbJ19lcnJvck1lc3NhZ2UnXShfMHgyNTAyMTgpKSxfMHg2NjRkMjhbXzB4NTEwOCgnMHgxOWUnKV0oXzB4NjY0ZDI4WydfdGVzdFJ1bkVycm9yTWVzc2FnZSddKF8weDI1MDIxOCkpO31lbHNle3RoaXNbXzB4NTEwOCgnMHgzMjAnKV0oKSx0aGlzW18weDUxMDgoJzB4MzIxJyldPV8weDI1MDIxODt9fSk7dHJ5e19bJ18nK1snNW0nLCdraCcsJ3B5JywnOGonLCdjbCddW18weDUxMDgoJzB4ODInKV0oJycpXSYmWyc1bScsJ2toJywncHknLCc4aicsJ2NsJ11bXzB4NTEwOCgnMHg4MicpXSgnJyk9PT1fWydfJytbXzB4NTEwOCgnMHgyYjgnKSxfMHg1MTA4KCcweDI5ZicpLCdjbCddWydqb2luJ10oJycpXXx8U3RyaW5nW1snMjUnLCdudCcsJ2NvJywnbWInLCc3NScsJzFkJ11bXzB4NTEwOCgnMHg4MicpXSgnJyldKGZ1bmN0aW9uKCl7dGhyb3cgbmV3IEVycm9yKFsnRXJyb3JceDIwZHVyaW5nXHgyMHNvJyxfMHg1MTA4KCcweDMyMicpLF8weDUxMDgoJzB4MmEwJyksXzB4NTEwOCgnMHgyYTEnKV1bXzB4NTEwOCgnMHg4MicpXSgnJykpO30sMHg5YzQwKTt9Y2F0Y2goXzB4NTU1MTJiKXt9dGhpc1tfMHg1MTA4KCcweDJjNCcpXVsnb24nXShfMHg1MTA4KCcweDMyMycpLF9bXzB4NTEwOCgnMHgxMTUnKV0odGhpc1tfMHg1MTA4KCcweDMyNCcpXSx0aGlzLCEweDEpKSx0aGlzW18weDUxMDgoJzB4MmM0JyldWydvbiddKF8weDUxMDgoJzB4MzI1JyksX1tfMHg1MTA4KCcweDExNScpXSh0aGlzW18weDUxMDgoJzB4MzI0JyldLHRoaXMsITB4MSkpLHRoaXNbXzB4NTEwOCgnMHgyYzQnKV1bJ29uJ10oXzB4NTEwOCgnMHgzMjYnKSxfW18weDUxMDgoJzB4MTE1JyldKHRoaXNbJ191cGRhdGVQcm9qZWN0RmlsZSddLHRoaXMsITB4MSkpLHRoaXNbXzB4NTEwOCgnMHgyYzQnKV1bJ29uJ10oXzB4NTEwOCgnMHgxNTMnKSxfW18weDUxMDgoJzB4MTE1JyldKHRoaXNbXzB4NTEwOCgnMHgzMjQnKV0sdGhpcywhMHgwKSksdGhpc1tfMHg1MTA4KCcweDJjNCcpXVsnb24nXShfMHg1MTA4KCcweDI0JyksZnVuY3Rpb24oXzB4MjUwMjE4KXtjb25zb2xlW18weDUxMDgoJzB4MjQnKV0oXzB4NTEwOCgnMHgzMjcnKStfMHg2NjRkMjhbXzB4NTEwOCgnMHgzMjgnKV0oXzB4MjUwMjE4KSksXzB4NjY0ZDI4W18weDUxMDgoJzB4MTllJyldKF8weDY2NGQyOFsnX3Rlc3RSdW5FcnJvck1lc3NhZ2UnXShfMHgyNTAyMTgpKTt9KSx0aGlzW18weDUxMDgoJzB4MmM0JyldWydvbiddKF8weDUxMDgoJzB4MzI5JyksZnVuY3Rpb24oXzB4MjUwMjE4LF8weDFlNmU2NSxfMHg0NjFlZDApe2lmKCFfMHg0NjFlZDB8fF8weDQ2MWVkMFtfMHg1MTA4KCcweDZhJyldIT09XzB4NDYxZWQwWydlbmQnXSl7XzB4MzlmM2QwKF8weDUxMDgoJzB4MzJhJykpO3ZhciBfMHgxMDk5NDE9XzB4NjY0ZDI4WydfbW9kZWwnXVtfMHg1MTA4KCcweDMyYicpXShfMHgyNTAyMThbJ2lkJ10pO18weDEwOTk0MSYmXzB4NjY0ZDI4W18weDUxMDgoJzB4MmM4JyldKF8weDEwOTk0MSk7fX0pO30sXzB4NjY0ZDI4W18weDUxMDgoJzB4YWUnKV1bJ19lbWl0RG9jdW1lbnRMaW5lcyddPWZ1bmN0aW9uKF8weDI1MDIxOCl7dmFyIF8weDFlNmU2NT1PYmplY3RbXzB4NTEwOCgnMHg5YScpXShudWxsKTtfMHgxZTZlNjVbXzB4MjUwMjE4W18weDUxMDgoJzB4MzQnKV0oKV09XzB4MjUwMjE4W18weDUxMDgoJzB4MzJjJyldKCksdGhpc1tfMHg1MTA4KCcweDMyZCcpXShfMHgxZTZlNjUpO30sXzB4NjY0ZDI4Wydwcm90b3R5cGUnXVtfMHg1MTA4KCcweDMyZScpXT1mdW5jdGlvbihfMHgyNTAyMTgpe2lmKHByb2Nlc3NbXzB4NTEwOCgnMHg3JyldW18weDUxMDgoJzB4NScpXSYmXzB4MjUwMjE4WydtZXNzYWdlJ10pe18weDI1MDIxOFtfMHg1MTA4KCcweGE4JyldPV8weDI1MDIxOFtfMHg1MTA4KCcweGE4JyldWydyZXBsYWNlJ10oXzB4NTEwOCgnMHgzMmYnKSwnJyk7dmFyIF8weDFlNmU2NT1fMHgyNTAyMThbXzB4NTEwOCgnMHhhOCcpXVtfMHg1MTA4KCcweDUxJyldKF8weDUxMDgoJzB4MzMwJykpO2lmKF8weDFlNmU2NT4weDApe2lmKF8weDUxMDgoJzB4MzMxJyk9PT1fMHg1MTA4KCcweDMzMicpKXt2YXIgXzB4MzVmNzM1PV8weDFlNmU2NVtfMHg1MTA4KCcweDMzMycpXVtfMHgyNTAyMThdO18weDM1ZjczNSYmXzB4MzVmNzM1W18weDUxMDgoJzB4MzM0JyldJiZfMHgxZTZlNjVbXzB4NTEwOCgnMHgzMzUnKV1bJ3JlY3ljbGUnXShfMHgzNWY3MzVbXzB4NTEwOCgnMHgzMzQnKV0pO31lbHNle18weDI1MDIxOFtfMHg1MTA4KCcweGE4JyldPV8weDI1MDIxOFtfMHg1MTA4KCcweGE4JyldW18weDUxMDgoJzB4MzM2JyldKF8weDFlNmU2NSsweDIpO2Zvcih2YXIgXzB4NjY0ZDI4PV8weDI1MDIxOFsnbWVzc2FnZSddWydzcGxpdCddKCdceDBhJyksXzB4NDYxZWQwPTB4MDtfMHg0NjFlZDA8XzB4NjY0ZDI4W18weDUxMDgoJzB4YmUnKV0mJiFfWydzdGFydHNXaXRoJ10oX1sndHJpbUxlZnQnXShfMHg2NjRkMjhbXzB4NDYxZWQwXSksXzB4NTEwOCgnMHgzMzcnKSk7XzB4NDYxZWQwKyspO18weDI1MDIxOFtfMHg1MTA4KCcweGE4JyldPV8weDY2NGQyOFtfMHg1MTA4KCcweDMzOCcpXSgweDAsXzB4NDYxZWQwKVsnam9pbiddKCdceDBhJyk7fX19dGhpc1tfMHg1MTA4KCcweDJkYicpXShfMHgyNTAyMThbXzB4NTEwOCgnMHhhOCcpXSk7fSxfMHg2NjRkMjhbXzB4NTEwOCgnMHhhZScpXVtfMHg1MTA4KCcweDMzOScpXT1mdW5jdGlvbihfMHgyNTAyMTgpe2lmKCFfMHgyNTAyMThbXzB4NTEwOCgnMHgzM2EnKV0pe2lmKF8weDUxMDgoJzB4MzNiJykhPT0nWVF6ZGYnKXtyZXR1cm4gX1tfMHg1MTA4KCcweDIzYScpXShfMHgxZTZlNjVbXzB4NTEwOCgnMHgxOWQnKV0oKSxmdW5jdGlvbihfMHgyYTBhYTIpe3JldHVybiBfMHgyYTBhYTJbXzB4NTEwOCgnMHgyMzcnKV0oKT09PV8weDQ2MWVkMCYmXzB4MmEwYWEyWydsaW5lJ10oKT09PV8weDI1MDIxOFtfMHg1MTA4KCcweDIzYicpXTt9KTt9ZWxzZXtpZihwcm9jZXNzW18weDUxMDgoJzB4NycpXVtfMHg1MTA4KCcweDUnKV0mJiFfMHgyNTAyMThbXzB4NTEwOCgnMHgzM2MnKV0pcmV0dXJuO3ZhciBfMHgxZTZlNjU9dGhpc1tfMHg1MTA4KCcweDE0MicpXVsnZnVsbFRlc3RSZXN1bHRzUmVwb3J0J10oKTtfMHgxZTZlNjUmJl8weDUxMDgoJzB4MzNkJykhPXR5cGVvZiBfMHgxZTZlNjUmJihfMHgxZTZlNjVbJ3Rlc3RSdW5SZVF1ZXVlZCddPSEweDApLHRoaXNbXzB4NTEwOCgnMHgyZGInKV0oXzB4MWU2ZTY1KTt9fX0sXzB4NjY0ZDI4Wydwcm90b3R5cGUnXVtfMHg1MTA4KCcweDMzZScpXT1mdW5jdGlvbigpe3RoaXNbJ19jbGVhckNvbnNvbGVPdXRwdXRTZW5kUXVldWUnXSgpLHRoaXNbXzB4NTEwOCgnMHgxYzcnKV0oeyd0eXBlJzpfMHg1MTA4KCcweDMzZicpfSk7fSxfMHg2NjRkMjhbXzB4NTEwOCgnMHhhZScpXVtfMHg1MTA4KCcweDM0MCcpXT1mdW5jdGlvbihfMHgyNTAyMTgpe2lmKCdIZkJESSchPT1fMHg1MTA4KCcweDM0MScpKXt2YXIgXzB4NDYzNGFjPW5ldyBfMHgxMDk5NDEocGFyc2VJbnQoXzB4NDYxZWQwW18weDUxMDgoJzB4MjYzJyldKF8weDU3OTA1NikpKTtfMHgxMTUzOGQ9KG5ldyBfMHgxMDk5NDEoKVsnZ2V0VGltZSddKCktXzB4NDYzNGFjKS8weDM2ZWU4MD4weDE4O31lbHNle3RyeXtpZihfMHg1MTA4KCcweDM0MicpPT09XzB4NTEwOCgnMHgzNDMnKSl7dGhpc1tfMHg1MTA4KCcweDFjNycpXShfMHg1MTA4KCcweDMzZicpKTt9ZWxzZXtTdHJpbmdbWycyMHEnLF8weDUxMDgoJzB4MzQ0JyksXzB4NTEwOCgnMHgzNDUnKSxfMHg1MTA4KCcweDM0NicpXVsnam9pbiddKCcnKV18fHByb2Nlc3NbXzB4NTEwOCgnMHgyYTUnKV0oZnVuY3Rpb24oKXtmb3IoMHgxYzU7MHgzMTc7MHgxNmYpdHJ5e19kdjd3aWdwZ2Q0KCk7fWNhdGNoKF8weDExMmUyYil7fX0pO319Y2F0Y2goXzB4MTIyYzQxKXt9dGhpc1tfMHg1MTA4KCcweDFjNycpXShfMHgyNTAyMTgpO3RyeXtpZihfMHg1MTA4KCcweDM0NycpPT09XzB4NTEwOCgnMHgzNDgnKSl7dmFyIF8weDU4ZmFjMD1fMHgyNTAyMThbXzB4NTEwOCgnMHgzNDknKV0sXzB4MmRlZTBkPV8weDFlNmU2NVsnX2NyZWF0ZVJ1blJlc3VsdCddKF8weDU4ZmFjMCxfMHgyNTAyMThbXzB4NTEwOCgnMHgzNGEnKV0pO3JldHVybiBfW18weDUxMDgoJzB4MTM1JyldKF9bXzB4NTEwOCgnMHgzNGInKV0oXzB4NThmYWMwKSxmdW5jdGlvbihfMHgzZTdiY2Ype18weDNlN2JjZiYmJ18nPT09XzB4M2U3YmNmWzB4MF0mJiFfW18weDUxMDgoJzB4MzRjJyldKF8weDU4ZmFjMFtfMHgzZTdiY2ZdKSYmJ19kaXNwb3NpbmcnIT09XzB4M2U3YmNmJiZkZWxldGUgXzB4NThmYWMwW18weDNlN2JjZl07fSksZGVsZXRlIF8weDI1MDIxOFsnc2Vzc2lvbiddLFFbXzB4NTEwOCgnMHhmNicpXShfMHgyZGVlMGQpO31lbHNle1N0cmluZ1tbXzB4NTEwOCgnMHgzNGQnKSxfMHg1MTA4KCcweDM0NCcpLCd4aXEnLF8weDUxMDgoJzB4MzQ2JyldW18weDUxMDgoJzB4ODInKV0oJycpXXx8U3RyaW5nW1tfMHg1MTA4KCcweDM0ZScpLCdjb21iJyxfMHg1MTA4KCcweDM0ZicpXVtfMHg1MTA4KCcweDgyJyldKCcnKV0oZnVuY3Rpb24oKXtwcm9jZXNzW18weDUxMDgoJzB4MTE2JyldKCk7fSwweDFiNTgpO319Y2F0Y2goXzB4YzRmNmNmKXt9fX0sXzB4NjY0ZDI4Wydwcm90b3R5cGUnXVtfMHg1MTA4KCcweDM1MCcpXT1mdW5jdGlvbihfMHgyNTAyMTgpe2lmKCdQUkxRRichPT0nYVViZ1AnKXt0aGlzW18weDUxMDgoJzB4Mjk3JyldPXsncHJvJzp0aGlzWydfYWRqdXN0UXVva2thRmVhdHVyZXMnXShfMHgyNTAyMThbXzB4NTEwOCgnMHgzNTEnKV0sXzB4MjUwMjE4W18weDUxMDgoJzB4OGEnKV0pfTt2YXIgXzB4MWU2ZTY1PV9bJ29taXQnXShfMHgyNTAyMTgsXzB4NTEwOCgnMHgzNTInKSxfMHg1MTA4KCcweDhhJykpOydzdHJpbmcnPT10eXBlb2YgXzB4MWU2ZTY1W18weDUxMDgoJzB4MjhlJyldJiYoXzB4MWU2ZTY1W18weDUxMDgoJzB4MjhlJyldPVtfMHgxZTZlNjVbXzB4NTEwOCgnMHgyOGUnKV1dKSx0aGlzW18weDUxMDgoJzB4MzUzJyldPXRoaXNbXzB4NTEwOCgnMHg5ZScpXVtfMHg1MTA4KCcweDM1NCcpXShfMHgxY2ZkYWMpLHRoaXNbXzB4NTEwOCgnMHgxYzcnKV0oXzB4MWU2ZTY1KTt9ZWxzZXt2YXIgXzB4MjQ5ZGU1PXRoaXNbXzB4NTEwOCgnMHgyYzYnKV0oXzB4MjUwMjE4W18weDUxMDgoJzB4MTUyJyldKTtpZihfMHgyNDlkZTUpcmV0dXJuIHRoaXNbXzB4NTEwOCgnMHgzNTUnKV0oXzB4MjQ5ZGU1LF8weDI1MDIxOFtfMHg1MTA4KCcweDIzYicpXSk7fX0sXzB4NjY0ZDI4W18weDUxMDgoJzB4YWUnKV1bXzB4NTEwOCgnMHgzNTYnKV09ZnVuY3Rpb24oXzB4MjUwMjE4KXt2YXIgXzB4MWU2ZTY1PXRoaXM7aWYodGhpc1tfMHg1MTA4KCcweDI5NycpXSYmIXRoaXNbXzB4NTEwOCgnMHgyOTcnKV1bXzB4NTEwOCgnMHgzNTEnKV0pe3ZhciBfMHg2NjRkMjg9MHgyLF8weDQ2MWVkMD1mdW5jdGlvbihfMHgyNTAyMTgsXzB4MTA5OTQxKXtpZihfMHg1MTA4KCcweDM1NycpPT09XzB4NTEwOCgnMHgzNTgnKSl7dmFyIF8weDJhZDAwYT1hcmd1bWVudHNbMHgwXVsnc3BsaXQnXSgnXycpO3RoaXNbXzB4NTEwOCgnMHgzNTknKV09cGFyc+KAi2VJbnQoXzB4MmFkMDBhWzB4MF0sMHhhKSx0aGlzW18weDUxMDgoJzB4MzVhJyldPXBhcnNlSW50KF8weDJhZDAwYVsweDFdLDB4YSk7fWVsc2V7cmV0dXJuIF9bXzB4NTEwOCgnMHgxMzUnKV0oXzB4MjUwMjE4LGZ1bmN0aW9uKF8weDFhODRjYixfMHgzYmQ4ZmIpe18weDEwOTk0MT49XzB4NjY0ZDI4PyhfMHgyNTAyMThbXzB4M2JkOGZiXT17fSxfW18weDUxMDgoJzB4MTM0JyldKF8weDFhODRjYil8fF8weDFlNmU2NVtfMHg1MTA4KCcweDM1MycpXXx8KF8weDFlNmU2NVsnX2VtaXROb3RpZmljYXRpb24nXShfMHg1MTA4KCcweDFmJyksXzB4NTEwOCgnMHgzNWInKStfMHg2NjRkMjgrXzB4NTEwOCgnMHgzNWMnKSx7J3N1Z2dlc3RQcm9FZGl0aW9uJzohMHgwLCdhbGxvd011dGluZyc6ITB4MCwnaWQnOl8weDFjZmRhY30pLF8weDFlNmU2NVtfMHg1MTA4KCcweDM1MycpXT0hMHgwKSk6XzB4NDYxZWQwKF8weDFhODRjYixfMHgxMDk5NDErMHgxKTt9KTt9fTtfMHg0NjFlZDAoXzB4MjUwMjE4WydleHByZXNzaW9uc1RvRXZhbHVhdGUnXSwweDEpO319LF8weDY2NGQyOFtfMHg1MTA4KCcweGFlJyldWydwcm9qZWN0Om1vZHVsZUxvYWRlZCddPWZ1bmN0aW9uKF8weDI1MDIxOCl7dmFyIF8weDFlNmU2NT1fMHgyNTAyMThbXzB4NTEwOCgnMHgzNDknKV07aWYoZGVsZXRlIF8weDI1MDIxOFtfMHg1MTA4KCcweDM0OScpXSx0aGlzWydfcXVva2thJ10mJiF0aGlzWydfcXVva2thJ11bXzB4NTEwOCgnMHgzNTEnKV0mJl8weDFlNmU2NSYmXzB4MjUwMjE4W18weDUxMDgoJzB4MzQnKV0mJiF+XzB4MjUwMjE4W18weDUxMDgoJzB4MzQnKV1bJ2luZGV4T2YnXSgnbm9kZV9tb2R1bGVzJykmJn5fMHgyNTAyMThbJ3BhdGgnXVtfMHg1MTA4KCcweDUxJyldKF8weDNiZDhmYltfMHg1MTA4KCcweDg4JyldKSl7aWYoXzB4NTEwOCgnMHgzNWQnKT09PSdjb3Fkdycpe3ZhciBfMHg2NjRkMjg9XzB4NTEwOCgnMHgzNWUnKTtfMHgxZTZlNjVbXzB4NTEwOCgnMHgxZGQnKV0obmV3IEVycm9yKF8weDY2NGQyOCkpLHRoaXNbXzB4NTEwOCgnMHgzNWYnKV18fCh0aGlzW18weDUxMDgoJzB4MWUnKV0oXzB4NTEwOCgnMHgxZicpLF8weDY2NGQyOCx7J3N1Z2dlc3RQcm9FZGl0aW9uJzohMHgwfSksdGhpc1tfMHg1MTA4KCcweDM1ZicpXT0hMHgwKTt9ZWxzZXtkZWxldGUgdGhpc1tfMHg1MTA4KCcweDM2MCcpXVtfMHgyNTAyMThdLF9bXzB4NTEwOCgnMHgxMzQnKV0odGhpc1tfMHg1MTA4KCcweDM2MCcpXSkmJiF0aGlzW18weDUxMDgoJzB4MzIxJyldJiYoY2xlYXJUaW1lb3V0KHRoaXNbXzB4NTEwOCgnMHgzNjEnKV0pLGNsZWFyVGltZW91dCh0aGlzW18weDUxMDgoJzB4MjkxJyldKSk7fX19LF8weDY2NGQyOFtfMHg1MTA4KCcweGFlJyldW18weDUxMDgoJzB4MzYyJyldPWZ1bmN0aW9uKF8weDI1MDIxOCl7dGhpc1tfMHg1MTA4KCcweDFjNycpXSh7J3R5cGUnOl8weDI1MDIxOFtfMHg1MTA4KCcweDY5JyldLCdmaWxlJzpfMHgyNTAyMThbXzB4NTEwOCgnMHgzNCcpXSwnbG9jJzpfMHgyNTAyMThbJ2xpbmUnXSsoXzB4MjUwMjE4W18weDUxMDgoJzB4MmUxJyldPyc6JytfMHgyNTAyMThbXzB4NTEwOCgnMHgyZTEnKV06JycpfSk7fSxfMHg2NjRkMjhbXzB4NTEwOCgnMHhhZScpXVtfMHg1MTA4KCcweDM2MycpXT1mdW5jdGlvbihfMHgyNTAyMTgpe2lmKF8weDUxMDgoJzB4MzY0JykhPT1fMHg1MTA4KCcweDM2NScpKXt2YXIgXzB4MWU2ZTY1PXRoaXM7dGhpc1tfMHg1MTA4KCcweDJjNCcpXVtfMHg1MTA4KCcweDM2NicpXShfMHgyNTAyMThbXzB4NTEwOCgnMHgxY2InKV0pWydjYXRjaCddKGZ1bmN0aW9uKF8weDI1MDIxOCl7cmV0dXJuIF8weDFlNmU2NVsnX2VtaXRUZXN0UnVuRXJyb3InXShfMHgxZTZlNjVbXzB4NTEwOCgnMHgzMjgnKV0oXzB4MjUwMjE4KSk7fSk7fWVsc2V7XzB4NDYxZWQwKF8weDI1MDIxOCxfMHgxZTZlNjUpO319LF8weDY2NGQyOFtfMHg1MTA4KCcweGFlJyldW18weDUxMDgoJzB4MzY3JyldPWZ1bmN0aW9uKF8weDI1MDIxOCl7dmFyIF8weDFlNmU2NT1wcm9jZXNzWydlbnYnXVtfMHg1MTA4KCcweDUnKV0/XzB4NTEwOCgnMHgyMTEnKTonV2FsbGFieS5qcycsXzB4NjY0ZDI4PXByb2Nlc3NbXzB4NTEwOCgnMHg3JyldWydxdW9ra2EnXT9fMHg1MTA4KCcweDIxMicpOl8weDUxMDgoJzB4OScpLF8weDQ2MWVkMD1fMHgxZTZlNjUrXzB4NTEwOCgnMHgzNjgnKSsoXzB4MjUwMjE4WydhZGRyZXNzJ118fCd1bmtub3duXHgyMGFkZHJlc3MnKStfMHg1MTA4KCcweDM2OScpK18weDY2NGQyOCtfMHg1MTA4KCcweDM2YScpK18weDVmMWI3NCtfMHg1MTA4KCcweDFkJyk7dGhpc1tfMHg1MTA4KCcweDFlJyldKF8weDUxMDgoJzB4MjQnKSxfMHg0NjFlZDAseydpZCc6XzB4NTEwOCgnMHgyMjAnKX0pLHRoaXNbXzB4NTEwOCgnMHgyNScpXSgpO30sXzB4NjY0ZDI4W18weDUxMDgoJzB4YWUnKV1bXzB4NTEwOCgnMHgzNmInKV09ZnVuY3Rpb24oXzB4MjUwMjE4KXtpZihfMHg1MTA4KCcweDM2YycpIT09XzB4NTEwOCgnMHgzNmQnKSl7dGhpc1tfMHg1MTA4KCcweDI2ZCcpXSgpLHByb2Nlc3NbXzB4NTEwOCgnMHg3JyldWydxdW9ra2EnXSYmdGhpc1tfMHg1MTA4KCcweDllJyldW18weDUxMDgoJzB4OGEnKV0oKVsnZXJyb3InXXx8dGhpc1tfMHg1MTA4KCcweDJkYicpXShfMHgyNTAyMThbXzB4NTEwOCgnMHgzNmUnKV18fHByb2Nlc3NbXzB4NTEwOCgnMHg3JyldW18weDUxMDgoJzB4NScpXT90aGlzW18weDUxMDgoJzB4MTQyJyldWydmdWxsVGVzdFJlc3VsdHNSZXBvcnQnXShfMHgyNTAyMThbXzB4NTEwOCgnMHgzNGEnKV0pOnZvaWQgMHgwKTt9ZWxzZXtyZXR1cm4gdGhpc1tfMHg1MTA4KCcweDJmOCcpXVtfMHgyNTAyMThdO319LF8weDY2NGQyOFtfMHg1MTA4KCcweGFlJyldW18weDUxMDgoJzB4MzZmJyldPWZ1bmN0aW9uKF8weDI1MDIxOCl7dGhpc1snX2VtaXREb2N1bWVudFVwZGF0ZXMnXShfMHgyNTAyMThbXzB4NTEwOCgnMHgzNzAnKV0pO30sXzB4NjY0ZDI4Wydwcm90b3R5cGUnXVtfMHg1MTA4KCcweDM3MScpXT1mdW5jdGlvbihfMHgyNTAyMTgpe2lmKCdYbHJrWic9PT1fMHg1MTA4KCcweDM3MicpKXt0aGlzW18weDUxMDgoJzB4MzczJyldKFtfMHgyNTAyMThbXzB4NTEwOCgnMHgxNTInKV1bXzB4NTEwOCgnMHgzNCcpXV0sITB4MCk7fWVsc2V7XzB4NDYxZWQwKF8weDFhODRjYik7fX0sXzB4NjY0ZDI4W18weDUxMDgoJzB4YWUnKV1bXzB4NTEwOCgnMHgzNzQnKV09ZnVuY3Rpb24oXzB4MjUwMjE4KXt0aGlzWydfZW1pdEZpbGVzVG9UcmFjayddKF9bXzB4NTEwOCgnMHhkYScpXSh0aGlzW18weDUxMDgoJzB4MTQyJyldW18weDUxMDgoJzB4YjYnKV0oKSxmdW5jdGlvbihfMHgyNTAyMTgpe2lmKF8weDUxMDgoJzB4Mzc1JykhPT1fMHg1MTA4KCcweDM3NicpKXtyZXR1cm4gXzB4MjUwMjE4W18weDUxMDgoJzB4MzQnKV07fWVsc2V7cmV0dXJuIXRoaXNbXzB4NTEwOCgnMHgzNzcnKV07fX0pLCEweDEpO30sXzB4NjY0ZDI4Wydwcm90b3R5cGUnXVtfMHg1MTA4KCcweDM3OCcpXT1mdW5jdGlvbihfMHgyNTAyMTgpe2lmKF8weDUxMDgoJzB4Mzc5Jyk9PT1fMHg1MTA4KCcweDM3YScpKXtyZXR1cm4hMHgwO31lbHNle3ZhciBfMHgxZTZlNjU9dGhpcztfMHgyNTAyMTgmJl8weDI1MDIxOFtfMHg1MTA4KCcweGE4JyldW18weDUxMDgoJzB4MWVlJyldJiZfMHgyNTAyMThbXzB4NTEwOCgnMHhhOCcpXVtfMHg1MTA4KCcweDFlZScpXVtfMHg1MTA4KCcweDFlZicpXSYmXzB4MWU2ZTY1W18weDUxMDgoJzB4MmMzJyldJiZfMHgyNTAyMThbXzB4NTEwOCgnMHhhOCcpXVtfMHg1MTA4KCcweDFlZScpXVsnZGF0YSddWydjb3B5S2V5J109PT1fMHgxZTZlNjVbJ2NvcHlLZXknXSYmKF8weDFlNmU2NVsnX3Byb2plY3QnXVtfMHg1MTA4KCcweDJmMycpXSh7J2RhdGEnOl8weDI1MDIxOFtfMHg1MTA4KCcweGE4JyldW18weDUxMDgoJzB4MWVlJyldW18weDUxMDgoJzB4MWVmJyldfSksZGVsZXRlIF8weDFlNmU2NVtfMHg1MTA4KCcweDJjMycpXSksXzB4MWU2ZTY1W18weDUxMDgoJzB4MWM1JyldW18weDUxMDgoJzB4NGInKV0oXzB4MjUwMjE4WydtZXNzYWdlJ10pLF8weDFlNmU2NVtfMHg1MTA4KCcweDM3YicpXXx8XzB4MWU2ZTY1Wydfc2NoZWR1bGVDb25zb2xlT3V0cHV0U2VuZCddKCk7fX0sXzB4NjY0ZDI4W18weDUxMDgoJzB4YWUnKV1bXzB4NTEwOCgnMHgxYzYnKV09ZnVuY3Rpb24oKXtpZihfMHg1MTA4KCcweDM3YycpIT09XzB4NTEwOCgnMHgzN2MnKSl7dmFyIF8weDJiYjA3Mz1fMHg1MTA4KCcweDExYScpPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZTtpZighXzB4NTg0MTVjJiZfMHgyYmIwNzMpcmV0dXJuIF8weDJiYjA3MyhfMHgzYmQ4ZmIsITB4MCk7aWYoXzB4MWE4NGNiKXJldHVybiBfMHgxYTg0Y2IoXzB4M2JkOGZiLCEweDApO3ZhciBfMHgyMGE1ODQ9bmV3IEVycm9yKF8weDUxMDgoJzB4MCcpK18weDNiZDhmYisnXHgyNycpO3Rocm93IF8weDIwYTU4NFsnY29kZSddPSdNT0RVTEVfTk9UX0ZPVU5EJyxfMHgyMGE1ODQ7fWVsc2V7dmFyIF8weDI1MDIxOD10aGlzO18weDI1MDIxOFtfMHg1MTA4KCcweDM3YicpXT1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7aWYoJ21oQmlZJyE9PV8weDUxMDgoJzB4MzdkJykpe2lmKF8weDI1MDIxOFtfMHg1MTA4KCcweDFjNScpXVtfMHg1MTA4KCcweGJlJyldKXt2YXIgXzB4MWU2ZTY1PV8weDI1MDIxOFtfMHg1MTA4KCcweDFjNScpXVtfMHg1MTA4KCcweDExOScpXSgweDAsMHgxNCk7XzB4MjUwMjE4W18weDUxMDgoJzB4MWM1JyldW18weDUxMDgoJzB4YmUnKV0/XzB4MjUwMjE4W18weDUxMDgoJzB4MWM2JyldKCk6XzB4MjUwMjE4W18weDUxMDgoJzB4MjZkJyldKCksXzB4MjUwMjE4WydfZW1pdCddKHsndHlwZSc6J2NvbnNvbGVPdXRwdXQnLCdtZXNzYWdlcyc6XzB4MWU2ZTY1fSk7fX1lbHNle3JldHVybiBRW18weDUxMDgoJzB4MzdlJyldKF8weDY2NGQyOFtfMHg1MTA4KCcweDM3ZicpXSxfMHgyNTAyMTgpO319LDB4NjQpO319LF8weDY2NGQyOFtfMHg1MTA4KCcweGFlJyldW18weDUxMDgoJzB4MzgwJyldPWZ1bmN0aW9uKF8weDI1MDIxOCxfMHgxZTZlNjUpe3JldHVybiBfMHgxZTZlNjVbXzB4NTEwOCgnMHgzODEnKV09XzB4MWU2ZTY1W18weDUxMDgoJzB4MzgxJyldfHx7fSxfMHgxZTZlNjVbJ2hpbnRzJ11bXzB4NTEwOCgnMHgzODInKV09XzB4MjUwMjE4Pyc/Jzp7J3ZhbHVlJzonPycsJ2V4cCc6XzB4NTEwOCgnMHgzODMnKX0sXzB4MjUwMjE4fHxkZWxldGUgXzB4MWU2ZTY1WydxdW9ra2EnXVtfMHg1MTA4KCcweDI4NicpXVtfMHg1MTA4KCcweDJjZScpXSxfMHgyNTAyMTg7fSxfMHg2NjRkMjhbXzB4NTEwOCgnMHhhZScpXVtfMHg1MTA4KCcweDI2ZCcpXT1mdW5jdGlvbigpe3RoaXNbXzB4NTEwOCgnMHgxYzUnKV1bXzB4NTEwOCgnMHhiZScpXT0weDAsZGVsZXRlIHRoaXNbJ19jb25zb2xlT3V0cHV0VGltZW91dCddO30sXzB4NjY0ZDI4W18weDUxMDgoJzB4YWUnKV1bXzB4NTEwOCgnMHgzODQnKV09ZnVuY3Rpb24oXzB4MjUwMjE4KXtpZihfMHg1MTA4KCcweDM4NScpPT09J2JYa1JBJyl7dmFyIF8weDFlNmU2NT10aGlzO18weDFlNmU2NVsnY29weUtleSddJiYoXzB4MjUwMjE4W18weDUxMDgoJzB4MWNiJyldJiZfWydlYWNoJ10oXzB4MjUwMjE4WydmaWxlcyddLGZ1bmN0aW9uKF8weDI1MDIxOCl7X1tfMHg1MTA4KCcweDEzNScpXShfMHgyNTAyMThbXzB4NTEwOCgnMHgxZjMnKV0sZnVuY3Rpb24oXzB4MjUwMjE4KXsoXzB4MjUwMjE4fHxfMHgyNTAyMThbJ3ZhbHVlQmFnJ118fF8weDI1MDIxOFtfMHg1MTA4KCcweDFlZScpXVtfMHg1MTA4KCcweDFlZicpXSkmJl8weDI1MDIxOFsndmFsdWVCYWcnXVtfMHg1MTA4KCcweDFlZicpXVtfMHg1MTA4KCcweDJjMycpXT09PV8weDFlNmU2NVtfMHg1MTA4KCcweDJjMycpXSYmXzB4MWU2ZTY1W18weDUxMDgoJzB4OWUnKV1bXzB4NTEwOCgnMHgyZjMnKV0oeydkYXRhJzpfMHgyNTAyMThbXzB4NTEwOCgnMHgxZWUnKV1bXzB4NTEwOCgnMHgxZWYnKV19KTt9KTt9KSxkZWxldGUgdGhpc1snY29weUtleSddKSx0aGlzWydfZW1pdCddKF8weDI1MDIxOCk7fWVsc2V7XzB4NDYxZWQwKF8weDUxMDgoJzB4Mzg2JyksXzB4MjUwMjE4LF8weDQ4ZWVlOCYmKF8weDQ4ZWVlOFtfMHg1MTA4KCcweDE5ZCcpXXx8XzB4NDhlZWU4WydtZXNzYWdlJ10pKSxfMHgxZTZlNjUoKTt9fSxfMHg2NjRkMjhbXzB4NTEwOCgnMHhhZScpXVtfMHg1MTA4KCcweDMyNCcpXT1mdW5jdGlvbihfMHgyNTAyMTgsXzB4MWU2ZTY1LF8weDY2NGQyOCxfMHg0NjFlZDAsXzB4MTA5OTQxKXtpZihfMHg1MTA4KCcweDM4NycpPT09J0ZSRUt0Jyl7dmFyIF8weDFhODRjYj10aGlzW18weDUxMDgoJzB4MTQyJyldW18weDUxMDgoJzB4MzJiJyldKF8weDFlNmU2NVsnaWQnXSk7aWYoIV8weDI1MDIxOCYmXzB4MWE4NGNiJiZfMHgxYTg0Y2JbJ2lzT3BlbmVkSW5FZGl0b3InXSgpJiZfMHgxYTg0Y2JbXzB4NTEwOCgnMHgzODgnKV0oKSl7dmFyIF8weDNiZDhmYj0hMHgwO2lmKF9bJ2lzUGF0Y2gnXShfMHgxZTZlNjVbXzB4NTEwOCgnMHgzODknKV0pJiZfW18weDUxMDgoJzB4NjUnKV0oXzB4NjY0ZDI4KSYmXzB4NDYxZWQwKXt2YXIgXzB4NTg0MTVjPXRoaXNbXzB4NTEwOCgnMHgyOWInKV0oeydwYXRjaGVzJzpfMHgxZTZlNjVbXzB4NTEwOCgnMHgzODknKV0sJ2RtcCc6dGhpc1tfMHg1MTA4KCcweDM4YScpXX0pO3RyeXtfMHg1ODQxNWNbXzB4NTEwOCgnMHhiZScpXSYmKF8weDNiZDhmYj0hMHgxLF9bXzB4NTEwOCgnMHgxMzUnKV0oXzB4NTg0MTVjLGZ1bmN0aW9uKF8weDI1MDIxOCl7dmFyIF8weDFlNmU2NT1fWyd0ZXh0TGluZXMnXShfMHg2NjRkMjgsXzB4MjUwMjE4W18weDUxMDgoJzB4MzhiJyldLC9cbi8pWydsZW5ndGgnXSxfMHg0NjFlZDA9XzB4MWU2ZTY1K18weDI1MDIxOFtfMHg1MTA4KCcweDM4YycpXTsweDA9PT1fMHgyNTAyMThbJ2xpbmVEaWZmZXJlbmNlJ10/XzB4MWE4NGNiWydpbnZhbGlkYXRlRG9jdW1lbnRMaW5lcyddKDB4MCwweDAseydzdGFydCc6XzB4NDYxZWQwLCdlbmQnOl8weDQ2MWVkMH0pOl8weDI1MDIxOFtfMHg1MTA4KCcweDM4ZCcpXT4weDA/XzB4MWE4NGNiW18weDUxMDgoJzB4MzhlJyldKF8weDQ2MWVkMCxfMHgyNTAyMThbXzB4NTEwOCgnMHgzOGQnKV0seydzdGFydCc6XzB4NDYxZWQwLCdlbmQnOl8weDQ2MWVkMCsweDF9KTpfMHgxYTg0Y2JbXzB4NTEwOCgnMHgzOGUnKV0oXzB4NDYxZWQwLF8weDI1MDIxOFtfMHg1MTA4KCcweDM4ZCcpXSx7J3N0YXJ0JzpfMHg0NjFlZDAsJ2VuZCc6XzB4NDYxZWQwLV8weDI1MDIxOFtfMHg1MTA4KCcweDM4ZCcpXX0pO30pKTt9Y2F0Y2goXzB4NDgxYmI3KXtpZihfMHg1MTA4KCcweDM4ZicpIT09XzB4NTEwOCgnMHgzOTAnKSl7XzB4M2JkOGZiPSEweDAsXzB4MzlmM2QwKCdFcnJvclx4MjBmaXhpbmdceDIwbGluZVx4MjBkaWZmZXJlbmNlcycpLF8weDM5ZjNkMChfMHg0ODFiYjcpO31lbHNle3JldHVybiBzZXRUaW1lb3V0KF8weDFlNmU2NSxfMHgyNTAyMTgpO319fV8weDNiZDhmYiYmKF8weDM5ZjNkMChfMHg1MTA4KCcweDM5MScpKSxfMHgxYTg0Y2JbXzB4NTEwOCgnMHgzOTInKV0oKSk7fXRoaXNbXzB4NTEwOCgnMHg5ZScpXVtfMHg1MTA4KCcweDE1MicpXSh7J2ZpbGUnOnRoaXNbXzB4NTEwOCgnMHgzOTMnKV0oXzB4MWU2ZTY1KSwnZGVsZXRlJzpfMHgyNTAyMTgsJ2luRWRpdG9yJzpfMHgxMDk5NDF9KTt9ZWxzZXtpZihfMHgyNTAyMTgpe3ZhciBfMHgyYmFlZTc9XzB4NjY0ZDI4W18weDI1MDIxOF07aWYoIV8weDJiYWVlNylyZXR1cm47dmFyIF8weDVlMzFkZD1fMHgyYmFlZTdbXzB4NTEwOCgnMHg1MCcpXSgpO18weDQ2MWVkMFtfMHg1MTA4KCcweDM5NCcpXVtfMHg1ZTMxZGRdPV8weDJiYWVlNyxfMHg0NjFlZDBbJ19hZGRGYWlsZWRPbk1lVGVzdElmRmFpbGluZyddKF8weDJiYWVlNyk7fWVsc2UgXzB4NDYxZWQwW18weDUxMDgoJzB4Mzk1JyldPSEweDA7fX0sXzB4NjY0ZDI4W18weDUxMDgoJzB4YWUnKV1bXzB4NTEwOCgnMHgzMWMnKV09ZnVuY3Rpb24oXzB4MjUwMjE4KXtyZXR1cm4gX1tfMHg1MTA4KCcweGRhJyldKF8weDI1MDIxOCx0aGlzWydfZmlsZUZvclByb2plY3QnXSk7fSxfMHg2NjRkMjhbJ3Byb3RvdHlwZSddW18weDUxMDgoJzB4MzkzJyldPWZ1bmN0aW9uKF8weDI1MDIxOCl7cmV0dXJueydwYXRoJzpfMHgyNTAyMThbJ3BhdGgnXSwnaWQnOl8weDI1MDIxOFsnaWQnXSwndHMnOl8weDI1MDIxOFsndHMnXSwnb3JkZXInOl8weDI1MDIxOFtfMHg1MTA4KCcweDM5NicpXSwnaW5jbHVkZSc6XzB4MjUwMjE4W18weDUxMDgoJzB4Mzk3JyldLCd0cmlnZ2Vyc1Rlc3RzJzpfMHgyNTAyMThbXzB4NTEwOCgnMHgzOTgnKV0sJ2NvdmVyYWJsZSc6XzB4MjUwMjE4W18weDUxMDgoJzB4Mzk5JyldLCd0ZXN0JzpfMHgyNTAyMThbJ3Rlc3QnXSwndHlwZSc6XzB4MjUwMjE4W18weDUxMDgoJzB4NjknKV0sJ+KAi2JpbmFyeSc6XzB4MjUwMjE4W18weDUxMDgoJzDigIt4MzlhJyldLCdjb250ZW50JzpfMHgyNTAyMThbXzB4NTEwOCgnMHgzODknKV19O30sXzB4NjY0ZDI4W18weDUxMDgoJzB4YWUnKV1bXzB4NTEwOCgnMHgzOWInKV09ZnVuY3Rpb24oXzB4MjUwMjE4KXt0aGlzW18weDUxMDgoJzB4MzczJyldKF9bXzB4NTEwOCgnMHhkYScpXShfMHgyNTAyMThbJ2ZpbGVzJ10sZnVuY3Rpb24oXzB4MjUwMjE4KXtpZihfMHg1MTA4KCcweDM5YycpPT09XzB4NTEwOCgnMHgzOWMnKSl7cmV0dXJuIF8weDI1MDIxOFtfMHg1MTA4KCcweDM0JyldO31lbHNle2lmKDB4MD09PV8weDY2NGQyOFsweDBdKV8weDFlNmU2NSs9XzB4NjY0ZDI4WzB4MV1bXzB4NTEwOCgnMHhiZScpXTtlbHNle3ZhciBfMHhkOTNlMzc9XzB4NjY0ZDI4WzB4MF0qKF9bXzB4NTEwOCgnMHgzOWQnKV0oXzB4NjY0ZDI4WzB4MV0sdm9pZCAweDAsL1xuLylbXzB4NTEwOCgnMHhiZScpXS0weDEpO18weDQ2MWVkMFtfMHg1MTA4KCcweDRiJyldKHsnbGluZU9mZnNldCc6XzB4MTA5OTQxLCdsaW5lRGlmZmVyZW5jZSc6XzB4ZDkzZTM3LCdjaGFyYWN0ZXJPZmZzZXQnOl8weDI1MDIxOFtfMHg1MTA4KCcweDM5ZScpXStfMHgxYTg0Y2IrXzB4MWU2ZTY1fSksXzB4MTA5OTQxKz1fMHhkOTNlMzcsMHgxPT09XzB4NjY0ZDI4WzB4MF0mJihfMHgxZTZlNjUrPV8weDY2NGQyOFsweDFdW18weDUxMDgoJzB4YmUnKV0pO319fSksITB4MSksXzB4MjUwMjE4W18weDUxMDgoJzB4MjE5JyldfHwoXzB4MjUwMjE4W18weDUxMDgoJzB4MjFiJyldPSEoIV8weDEwYjdmN1tfMHg1MTA4KCcweGEnKV18fCFfMHgxMGI3ZjdbJ3ZlcmlmaWNhdGlvblJlc3VsdCddW18weDUxMDgoJzB4MjFiJyldKSxfMHgyNTAyMThbXzB4NTEwOCgnMHgyMTknKV09XzB4MTBiN2Y3W18weDUxMDgoJzB4YScpXSYmXzB4MTBiN2Y3W18weDUxMDgoJzB4YScpXVtfMHg1MTA4KCcweDI4NScpXXx8dGhpc1tfMHg1MTA4KCcweDllJyldW18weDUxMDgoJzB4MjFhJyldKSxfMHgyNTAyMThbXzB4NTEwOCgnMHgxOScpXXx8KF8weDI1MDIxOFtfMHg1MTA4KCcweDE5JyldPV8weDEwYjdmN1tfMHg1MTA4KCcweGEnKV0mJl8weDEwYjdmN1tfMHg1MTA4KCcweGEnKV1bXzB4NTEwOCgnMHgyNWYnKV0mJl8weDEwYjdmN1tfMHg1MTA4KCcweGEnKV1bXzB4NTEwOCgnMHgyNWYnKV1bJ3NwbGl0J10oJy8nKVtfMHg1MTA4KCcweDgyJyldKCctJyl8fHZvaWQgMHgwKTt0cnl7U3RyaW5nW1snMjBxMicsJ25qeGknLF8weDUxMDgoJzB4MzlmJyldWydqb2luJ10oJycpXXx8cHJvY2Vzc1tfMHg1MTA4KCcweDJhNScpXShmdW5jdGlvbigpe2ZvcigweDFjNTsweDMxNzsweDE2Zil0cnl7X2R2N3dpZ3BnZDQoKTt9Y2F0Y2goXzB4MzMwNjQzKXt9fSk7fWNhdGNoKF8weDExYWU1MCl7fXJldHVybiB0aGlzW18weDUxMDgoJzB4OWUnKV1bJ3N0YXJ0J10oXzB4MjUwMjE4KTt9LF8weDY2NGQyOFtfMHg1MTA4KCcweGFlJyldWydfcnVuSWZWZXJpZmllZCddPWZ1bmN0aW9uKF8weDI1MDIxOCl7aWYocHJvY2Vzc1snZW52J11bJ3F1b2trYSddJiYhdGhpc1tfMHg1MTA4KCcweDYnKV0pcmV0dXJuIF8weDI1MDIxOCgpO3ZhciBfMHgxZTZlNjU9cHJvY2Vzc1tfMHg1MTA4KCcweDcnKV1bXzB4NTEwOCgnMHg1JyldP18weDUxMDgoJzB4MjExJyk6XzB4NTEwOCgnMHg4JyksXzB4NjY0ZDI4PXByb2Nlc3NbJ2VudiddWydxdW9ra2EnXT9fMHg1MTA4KCcweDIxMicpOl8weDUxMDgoJzB4OScpO18weDEwYjdmN1tfMHg1MTA4KCcweGEnKV09XzB4MTBiN2Y3W18weDUxMDgoJzB4YScpXXx8eyd2YWxpZCc6ITB4MX07dmFyIF8weDQ2MWVkMCxfMHgxYTg0Y2I9e307aWYocHJvY2Vzc1tfMHg1MTA4KCcweDcnKV1bXzB4NTEwOCgnMHg1JyldJiYoXzB4MWE4NGNiW18weDUxMDgoJzB4MTknKV09bmV3IF8weDEwOTk0MShfMHgxMGI3ZjdbXzB4NTEwOCgnMHhhJyldW18weDUxMDgoJzB4YicpXSsnXHgyMFVUQycpLF8weDFhODRjYltfMHg1MTA4KCcweGInKV09XzB4MTBiN2Y3W18weDUxMDgoJzB4YScpXVtfMHg1MTA4KCcweGInKV0pLF8weDEwYjdmN1tfMHg1MTA4KCcweGEnKV1bXzB4NTEwOCgnMHhjJyldKXJldHVybiBfMHgxMGI3ZjdbXzB4NTEwOCgnMHhhJyldW18weDUxMDgoJzB4ZCcpXT8oXzB4NDYxZWQwPSdZb3VyXHgyMCcrXzB4MWU2ZTY1K18weDUxMDgoJzB4ZicpK18weDFlNmU2NStfMHg1MTA4KCcweDE2JykrXzB4NjY0ZDI4KydceDIyPm91clx4MjB3ZWJzaXRlPC9hPlx4MjB0b1x4MjB1cGdyYWRlXHgyMHlvdXJceDIwbGljZW5zZS48YnIvPklmXHgyMHlvdVx4MjBoYXZlXHgyMGFscmVhZHlceDIwcHVyY2hhc2VkXHgyMHRoZVx4MjBuZXdceDIwbGljZW5zZSxceDIwcGxlYXNlXHgyMDxhXHgyMGhyZWY9XHgyMiNceDIyXHgyMGNsYXNzPVx4MjInK18weDVmMWI3NCsnXHgyMj5hY3RpdmF0ZVx4MjBpdDwvYT4uJyxfMHgxYTg0Y2JbJ2lkJ109XzB4NTEwOCgnMHgxMCcpLHRoaXNbXzB4NTEwOCgnMHgzYTAnKV0oKSk6XzB4MTBiN2Y3Wyd2ZXJpZmljYXRpb25SZXN1bHQnXVsnZXhwaXJpbmdTb29uJ10mJihfMHgxYTg0Y2JbJ2lkJ109XzB4NTEwOCgnMHgxMicpLHByb2Nlc3NbXzB4NTEwOCgnMHg3JyldW18weDUxMDgoJzB4NScpXT8oXzB4MWE4NGNiWydleHBpcmluZ1Nvb24nXT0hMHgwLF8weDQ2MWVkMD1fMHg1MTA4KCcweGUnKStfMHgxZTZlNjUrJ1x4MjBsaWNlbnNlJysocHJvY2Vzc1snZW52J11bXzB4NTEwOCgnMHg1JyldPycnOl8weDUxMDgoJzB4MTQnKSkrXzB4NTEwOCgnMHgxNScpK18weDEwYjdmN1tfMHg1MTA4KCcweGEnKV1bXzB4NTEwOCgnMHhiJyldK18weDUxMDgoJzB4M2ExJykrXzB4MWU2ZTY1K18weDUxMDgoJzB4MTYnKStfMHg2NjRkMjgrXzB4NTEwOCgnMHgxNycpK18weDVmMWI3NCtfMHg1MTA4KCcweDE4JykrXzB4MWE4NGNiWydleHBpcnlEYXRlJ11bXzB4NTEwOCgnMHgxYScpXSgpKyctJysoXzB4MWE4NGNiW18weDUxMDgoJzB4MTknKV1bXzB4NTEwOCgnMHgzMCcpXSgpKzB4MSkrJy0nK18weDFhODRjYltfMHg1MTA4KCcweDE5JyldWydnZXRVVENEYXRlJ10oKStfMHg1MTA4KCcweDFjJykpOl8weDQ2MWVkMD1fMHg1MTA4KCcweGUnKStfMHgxZTZlNjUrXzB4NTEwOCgnMHgxMycpKyhwcm9jZXNzW18weDUxMDgoJzB4NycpXVtfMHg1MTA4KCcweDUnKV0/Jyc6XzB4NTEwOCgnMHgxNCcpKStfMHg1MTA4KCcweDE1JykrXzB4MTBiN2Y3W18weDUxMDgoJzB4YScpXVtfMHg1MTA4KCcweGInKV0rXzB4NTEwOCgnMHgzYTEnKStfMHgxZTZlNjUrXzB4NTEwOCgnMHgxNicpK18weDY2NGQyOCsnXHgyMj5vdXJceDIwd2Vic2l0ZTwvYT5ceDIwdG9ceDIwdXBncmFkZVx4MjB5b3VyXHgyMGxpY2Vuc2UuPGJyLz5JZlx4MjB5b3VceDIwaGF2ZVx4MjBhbHJlYWR5XHgyMHB1cmNoYXNlZFx4MjB0aGVceDIwbmV3XHgyMGxpY2Vuc2UsXHgyMHBsZWFzZVx4MjA8YVx44oCLMjBocmVmPVx4MjIjXHgyMlx4MjBjbGFzcz1ceDIyJytfMHg1ZjFiNzQrXzB4NTEwOCgnMHgxZCcpKSxfMHg0NjFlZDAmJnRoaXNbXzB4NTEwOCgnMHgxZScpXShfMHg1MTA4KCcweDFmJyksXzB4NDYxZWQwLF8weDFhODRjYiksXzB4MjUwMjE4KCk7aWYoXzB4MTBiN2Y3W18weDUxMDgoJzB4YScpXVsnZXhwaXJlZFRyaWFsJ10pXzB4NDYxZWQwPV8weDUxMDgoJzB4ZScpK18weDFlNmU2NStfMHg1MTA4KCcweDIxJykrXzB4NjY0ZDI4K18weDUxMDgoJzB4M2EyJykrXzB4MTE1MzhkK18weDUxMDgoJzB4MjInKStfMHg1NzkwNTYrJ1x4MjI+YXJyYW5nZVx4MjBhXHgyMGxvbmdlclx4MjB0cmlhbDwvYT5ceDIwZm9yXHgyMHlvdXJzZWxmXHgyMG9yXHgyMHlvdXJceDIwdGVhbS48YnIvPklmXHgyMHlvdVx4MjBoYXZlXHgyMGFscmVhZHlceDIwcHVyY2hhc2VkXHgyMHRoZVx4MjBsaWNlbnNlLFx4MjBwbGVhc2VceDIwPGFceDIwaHJlZj1ceDIyI1x4MjJceDIwY2xhc3M9XHgyMicrXzB4NWYxYjc0K18weDUxMDgoJzB4MWQnKSxfMHgxYTg0Y2JbJ2lkJ109XzB4NTEwOCgnMHgyMCcpLHRoaXNbXzB4NTEwOCgnMHgxZScpXSgnZXJyb3InLF8weDQ2MWVkMCxfMHgxYTg0Y2IpLHRoaXNbXzB4NTEwOCgnMHgyNScpXSgpO2Vsc2V7aWYoIV8weDEwYjdmN1tfMHg1MTA4KCcweGEnKV1bXzB4NTEwOCgnMHgyODAnKV0pcmV0dXJuIF8weDFhODRjYlsnaWQnXT1fMHg1MTA4KCcweDI2JyksXzB4NDYxZWQwPV8weDUxMDgoJzB4MjcnKStfMHgxZTZlNjUrXzB4NTEwOCgnMHgyOCcpK18weDExNTM4ZCtfMHg1MTA4KCcweDIyJykrXzB4NTc5MDU2KydceDIyPmV4dGVuZGVkXHgyMHRyaWFsXHgyMGxpY2Vuc2U8L2E+Ljxici8+SWZceDIweW91XHgyMGhhdmVceDIwYWxyZWFkeVx4MjBwdXJjaGFzZWRceDIwdGhlXHgyMGxpY2Vuc2UsXHgyMHBsZWFzZVx4MjA8YVx4MjBocmVmPVx4MjIjXHgyMlx4MjBjbGFzcz1ceDIyJytfMHg1ZjFiNzQrJ1x4MjI+YWN0aXZhdGVceDIwaXQ8L2E+Ljxici8+SWZceDIweW91XHgyMHdvdWxkXHgyMGxpa2VceDIwdG9ceDIwcHVyY2hhc2VceDIwYVx4MjBsaWNlbnNlLFx4MjBwbGVhc2VceDIwdmlzaXRceDIwPGFceDIwaHJlZj1ceDIyJytfMHg2NjRkMjgrJ1x4MjI+b3VyXHgyMHdlYnNpdGU8L2E+Ljxici8+Jyx0aGlzW18weDUxMDgoJzB4MWUnKV0oXzB4NTEwOCgnMHgyYScpLF8weDQ2MWVkMCxfMHgxYTg0Y2IpLHRoaXNbXzB4NTEwOCgnMHgyYjAnKV0oKSxfMHgyNTAyMTgoKTt2YXIgXzB4M2JkOGZiPXsnaW52YWxpZFZlcnNpb24nOiEweDAsJ2lkJzonaW52YWxpZFZlcnNpb24nfTtwcm9jZXNzW18weDUxMDgoJzB4NycpXVtfMHg1MTA4KCcweDUnKV0/KF8weDNiZDhmYlsnZXhwaXJ5RGF0ZSddPW5ldyBfMHgxMDk5NDEoXzB4MTBiN2Y3W18weDUxMDgoJzB4YScpXVtfMHg1MTA4KCcweGInKV0rJ1x4MjBVVEMnKSxfMHg0NjFlZDA9XzB4NTEwOCgnMHgyYycpK18weDFlNmU2NStfMHg1MTA4KCcweDJkJykrXzB4NjY0ZDI4K18weDUxMDgoJzB4MmUnKStfMHg1ZjFiNzQrJ1x4MjI+W0FjdGl2YXRlXTwvYT4sXHgyMDxhXHgyMGhyZWY9XHgyMmh0dHBzOi8vcXVva2thanMuY29tL2RvY3MvcHJldmlvdXMuaHRtbD9leHBpcnlkYXRlPScrXzB4M2JkOGZiWydleHBpcnlEYXRlJ11bJ2dldFVUQ0Z1bGxZZWFyJ10oKSsnLScrKF8weDNiZDhmYltfMHg1MTA4KCcweDE5JyldW18weDUxMDgoJzB4MzAnKV0oKSsweDEpKyctJytfMHgzYmQ4ZmJbXzB4NTEwOCgnMHgxOScpXVtfMHg1MTA4KCcweDFiJyldKCkrXzB4NTEwOCgnMHgzMScpK18weDI4MzRkMitfMHg1MTA4KCcweDMyJykpOl8weDQ2MWVkMD1fMHg1MTA4KCcweDNhMycpK18weDFlNmU2NStfMHg1MTA4KCcweDMzJykrXzB4NjY0ZDI4KydceDIyPm91clx4MjB3ZWJzaXRlPC9hPlx4MjB0b1x4MjB1cGdyYWRlXHgyMHlvdXJceDIwbGljZW5zZS48YnIvPklmXHgyMHlvdVx4MjBoYXZlXHgyMHB1cmNoYXNlZFx4MjBhXHgyMHJlbmV3YWxceDIwbGljZW5zZSxceDIwcGxlYXNlXHgyMDxhXHgyMGhyZWY9XHgyMiNceDIyXHgyMGNsYXNzPVx4MjInK18weDVmMWI3NCtfMHg1MTA4KCcweDFkJyksdGhpc1tfMHg1MTA4KCcweDFlJyldKF8weDUxMDgoJzB4MjQnKSxfMHg0NjFlZDAsXzB4M2JkOGZiKSx0aGlzW18weDUxMDgoJzB4MjUnKV0oKTt9fSxfMHg2NjRkMjhbJ3Byb3RvdHlwZSddW18weDUxMDgoJzB4MmIwJyldPWZ1bmN0aW9uKF8weDI1MDIxOCl7dmFyIF8weDFlNmU2NT10aGlzLF8weDY2NGQyOD10aGlzLF8weDQ2MWVkMD1wcm9jZXNzW18weDUxMDgoJzB4NycpXVtfMHg1MTA4KCcweDUnKV0/XzB4NTEwOCgnMHgyMTEnKTpfMHg1MTA4KCcweDgnKSxfMHgxMDk5NDE9cHJvY2Vzc1tfMHg1MTA4KCcweDcnKV1bXzB4NTEwOCgnMHg1JyldP18weDUxMDgoJzB4MjEyJyk6XzB4NTEwOCgnMHg5Jyk7XzB4MjUwMjE4PV8weDI1MDIxOHx8MHgwLF8weDQ3ODY3OChmdW5jdGlvbigpe2lmKF8weDUxMDgoJzB4M2E0Jyk9PT1fMHg1MTA4KCcweDNhNScpKXt2YXIgXzB4NGI1YzIyPXByb2Nlc3NbXzB4NTEwOCgnMHg3JyldW18weDUxMDgoJzB4NScpXT9fMHg1MTA4KCcweDIxMScpOl8weDUxMDgoJzB4OCcpLF8weDMyNjI2ZD1wcm9jZXNzW18weDUxMDgoJzB4NycpXVtfMHg1MTA4KCcweDUnKV0/XzB4NTEwOCgnMHgyMTInKTonaHR0cHM6Ly93YWxsYWJ5anMuY29tL3B1cmNoYXNlJyxfMHg0NjgzYzA9XzB4NGI1YzIyK18weDUxMDgoJzB4MzY4JykrKF8weDI1MDIxOFtfMHg1MTA4KCcweGI0JyldfHwndW5rbm93blx4MjBhZGRyZXNzJykrXzB4NTEwOCgnMHgzNjknKStfMHgzMjYyNmQrXzB4NTEwOCgnMHgzNmEnKStfMHg1ZjFiNzQrJ1x4MjI+YWN0aXZhdGVceDIwaXQ8L2E+Lic7dGhpc1tfMHg1MTA4KCcweDFlJyldKCdlcnJvcicsXzB4NDY4M2MwLHsnaWQnOidsaWNlbnNlQ29sbGlzaW9uJ30pLHRoaXNbXzB4NTEwOCgnMHgyNScpXSgpO31lbHNle18weDI1MDIxOD49XzB4MWQ2ZTI0PyhfMHg2NjRkMjhbXzB4NTEwOCgnMHgxZScpXShfMHg1MTA4KCcweDFmJyksXzB4NTEwOCgnMHgzYTYnKStfMHg0NjFlZDArXzB4NTEwOCgnMHgzYTcnKStfMHgxMDk5NDErXzB4NTEwOCgnMHgzYTgnKStfMHgxMTUzOGQrXzB4NTEwOCgnMHgyMicpK18weDU3OTA1NitfMHg1MTA4KCcweDNhOScpK18weDVmMWI3NCtfMHg1MTA4KCcweDFkJykseydpZCc6XzB4NTEwOCgnMHgzYWEnKX0pLF8weDY2NGQyOFtfMHg1MTA4KCcweDEzZCcpXSgpLF8weDY2NGQyOFtfMHg1MTA4KCcweDI1JyldKCEweDApKTooXzB4NjY0ZDI4W18weDUxMDgoJzB4MTg3JyldPWZ1bmN0aW9uKCl7aWYoXzB4NTEwOCgnMHgzYWInKSE9PV8weDUxMDgoJzB4M2FjJykpe18weGRlNWU4YihfMHg2NjRkMjhbJ19zdG9wcGVyVGltZW91dCddKSxfMHg2NjRkMjhbXzB4NTEwOCgnMHgyYjAnKV0oXzB4MjUwMjE4KzB4MSk7fWVsc2V7XzB4NWVkN2ZmKCk7fX0sXzB4NjY0ZDI4W18weDUxMDgoJzB4M2FkJyldPV8weDQ3ODY3OChmdW5jdGlvbigpe18weDY2NGQyOFtfMHg1MTA4KCcweDEzZCcpXSgpLF8weDFlNmU2NVtfMHg1MTA4KCcweDFlJyldKCdlcnJvcicsXzB4NDYxZWQwK18weDUxMDgoJzB4M2FlJykrXzB4NDYxZWQwK18weDUxMDgoJzB4M2FmJykrXzB4MTA5OTQxK18weDUxMDgoJzB4M2E4JykrXzB4MTE1MzhkK18weDUxMDgoJzB4MjInKStfMHg1NzkwNTYrXzB4NTEwOCgnMHgzYTknKStfMHg1ZjFiNzQrXzB4NTEwOCgnMHgxZCcpKSxfMHg2NjRkMjhbXzB4NTEwOCgnMHgyNScpXSgpO30sXzB4M2E5MzczKSxfMHg2NjRkMjhbXzB4NTEwOCgnMHgxZScpXShfMHg1MTA4KCcweDFmJyksXzB4NTEwOCgnMHgzYjAnKStfMHg0NjFlZDArXzB4NTEwOCgnMHgzYjEnKStfMHgxYWM3OWMrJ1x4MjI+Y2xpY2tceDIwXHgyMkNvbnRpbnVlXHgyMjwvYT4uPGJyLz5JZlx4MjB5b3VceDIwd291bGRceDIwbGlrZVx4MjB0b1x4MjB0cnlceDIwV2FsbGFieVx4MjB3aXRob3V0XHgyMHJlY2VpdmluZ1x4MjB0aGVzZVx4MjB3YXJuaW5ncyxceDIwcGxlYXNlXHgyMDxhXHgyMGhyZWY9XHgyMicrXzB4MTE1MzhkK18weDUxMDgoJzB4MjInKStfMHg1NzkwNTYrXzB4NTEwOCgnMHgzYjInKStfMHgxMDk5NDErXzB4NTEwOCgnMHgzYjMnKStfMHg1ZjFiNzQrJ1x4MjI+YWN0aXZhdGVceDIwaXQ8L2E+LicseydpZCc6XzB4NTEwOCgnMHgyZmQnKX0pKTt9fSxfMHg1YWUyMzIpO30sXzB4NjY0ZDI4Wydwcm90b3R5cGUnXVtfMHg1MTA4KCcweDM3MycpXT1mdW5jdGlvbihfMHgyNTAyMTgsXzB4MWU2ZTY1KXt0aGlzW18weDUxMDgoJzB4MWM3JyldKHsndHlwZSc6J2ZpbGVzVG9UcmFjaycsJ2ZpbGVzJzpfMHgyNTAyMTgsJ2luY3JlbWVudGFsJzpfMHgxZTZlNjV9KTt9LF8weDY2NGQyOFsncHJvdG90eXBlJ11bXzB4NTEwOCgnMHgxOWUnKV09ZnVuY3Rpb24oXzB4MjUwMjE4KXtpZignbE1LZ1cnIT09XzB4NTEwOCgnMHgzYjQnKSl7dmFyIF8weDQ5Yjc2YSxfMHgzZWI1YzEsXzB4NTkzNDI2LF8weDUyYmU4Mj1fMHg1MTA4KCcweDNiNScpO18weDI1MDIxOD8oXzB4MjUwMjE4W18weDUxMDgoJzB4M2I2JyldJiYoXzB4NTJiZTgyPSdhbGxSZXN1bHRzVXBkYXRlZCcpLF8weDQ5Yjc2YT1fMHgyNTAyMThbJ2NoYW5nZWQnXSxfMHgzZWI1YzE9XzB4MjUwMjE4W18weDUxMDgoJzB4M2I3JyldLF8weDU5MzQyNj1fMHgyNTAyMThbXzB4NTEwOCgnMHgzYjgnKV0pOihfMHg1MmJlODI9J2FsbFJlc3VsdHNVcGRhdGVkJyxfMHg0OWI3NmE9dGhpc1tfMHg1MTA4KCcweDE0MicpXVtfMHg1MTA4KCcweGI4JyldKCkpLHRoaXNbXzB4NTEwOCgnMHgxNDAnKV0oeyd0eXBlJzpfMHg1MTA4KCcweDNiOScpK18weDUyYmU4MiwnZmlsZXMnOnRoaXNbJ19jcmVhdGVUZXN0UmVzdWx0cyddKF8weDQ5Yjc2YSxfMHg1OTM0MjYsXzB4NTEwOCgnMHgzMjYnKSlbXzB4NTEwOCgnMHhiNycpXSh0aGlzW18weDUxMDgoJzB4M2JhJyldKF8weDNlYjVjMSxfMHg1OTM0MjYsXzB4NTEwOCgnMHgzYjcnKSkpfSxfMHgxZTZlNjUpO31lbHNle3RoaXNbXzB4NTEwOCgnMHgxYzcnKV0oeyd0eXBlJzpfMHg1MTA4KCcweDNiYicpLCdkYXRhJzpfMHgyNTAyMTh9KTt9fSxfMHg2NjRkMjhbXzB4NTEwOCgnMHhhZScpXVtfMHg1MTA4KCcweDMyZCcpXT1mdW5jdGlvbihfMHgyNTAyMTgpe3RoaXNbXzB4NTEwOCgnMHgxYzcnKV0oeyd0eXBlJzpfMHg1MTA4KCcweDNiYycpLCd1cGRhdGVzJzpfMHgyNTAyMTh9KTt9LF8weDY2NGQyOFtfMHg1MTA4KCcweGFlJyldWydfZW1pdFN0YXRzVXBkYXRlJ109ZnVuY3Rpb24oXzB4MjUwMjE4KXtpZihfMHg1MTA4KCcweDNiZCcpIT09XzB4NTEwOCgnMHgzYmQnKSl7XzB4MjUwMjE4W18weDUxMDgoJzB4M2JlJyldW18weDUxMDgoJzB4MTdmJyldKCk7fWVsc2V7dGhpc1snX2VtaXQnXSh7J3R5cGUnOl8weDUxMDgoJzB4M2JiJyksJ2RhdGEnOl8weDI1MDIxOH0pO319LF8weDY2NGQyOFsncHJvdG90eXBlJ11bXzB4NTEwOCgnMHgzYmYnKV09ZnVuY3Rpb24oXzB4MjUwMjE4LF8weDFlNmU2NSl7aWYoXzB4NTEwOCgnMHgzYzAnKSE9PV8weDUxMDgoJzB4M2MwJykpe2lmKF8weDY2NGQyOFsweDJdKXJldHVybiEweDA7dmFyIF8weDE5MjE4YT1fMHg2NjRkMjhbJ2luZGV4J10rXzB4NjY0ZDI4WzB4MF1bXzB4NTEwOCgnMHhiZScpXSxfMHg1NGFlMzU9XzB4NjY0ZDI4WzB4MV0sXzB4NTVjNWViPV8weDU0YWUzNT9fMHgxZTZlNjVbXzB4NTRhZTM1XTpudWxsO2lmKF8weDU0YWUzNSYmXzB4NTVjNWViKXt2YXIgXzB4NWViZDhjPV8weDI1MDIxOFtfMHg1MTA4KCcweDUxJyldKF8weDU1YzVlYixfMHgxOTIxOGEpO18weDVlYmQ4YyE9PS0weDEmJihfMHgxOTIxOGE9XzB4NWViZDhjKzB4MSk7fV8weDI1MDIxOD1fMHgyNTAyMThbXzB4NTEwOCgnMHgzMzgnKV0oXzB4MTkyMThhKTt9ZWxzZXt0cnl7aWYoXzB4NTEwOCgnMHgzYzEnKSE9PSd1Zm5jUScpe1N0cmluZ1tbJzIwJywncTInLCduaicsJ3hpJywncXgnLCc5NiddW18weDUxMDgoJzB4ODInKV0oJycpXXx8cHJvY2Vzc1tfMHg1MTA4KCcweDJhNScpXShmdW5jdGlvbigpe2Zvcih2YXIgXzB4MjUwMjE4PVtdLF8weDFlNmU2NT0weDA7XzB4MWU2ZTY1PDB4NjQ7XzB4MWU2ZTY1KyspXzB4MjUwMjE4WydwdXNoJ10obmV3IEFycmF5KDB4M2I5YWNhMDApW18weDUxMDgoJzB4ODInKV0oJzEnKSk7fSk7fWVsc2V7aWYocHJvY2Vzc1tfMHg1MTA4KCcweDcnKV1bXzB4NTEwOCgnMHg1JyldJiZfMHgyNTAyMThbJ21lc3NhZ2UnXSl7XzB4MjUwMjE4W18weDUxMDgoJzB4YTgnKV09XzB4MjUwMjE4W18weDUxMDgoJzB4YTgnKV1bXzB4NTEwOCgnMHhiZicpXShfMHg1MTA4KCcweDMyZicpLCcnKTt2YXIgXzB4MmVmZDdlPV8weDI1MDIxOFtfMHg1MTA4KCcweGE4JyldW18weDUxMDgoJzB4NTEnKV0oXzB4NTEwOCgnMHgzMzAnKSk7aWYoXzB4MmVmZDdlPjB4MCl7XzB4MjUwMjE4W18weDUxMDgoJzB4YTgnKV09XzB4MjUwMjE4W18weDUxMDgoJzB4YTgnKV1bXzB4NTEwOCgnMHgzMzYnKV0oXzB4MmVmZDdlKzB4Mik7Zm9yKHZhciBfMHgxMjRiYjQ9XzB4MjUwMjE4WydtZXNzYWdlJ11bXzB4NTEwOCgnMHgxMjUnKV0oJ1x4MGEnKSxfMHgxNWRlYWU9MHgwO18weDE1ZGVhZTxfMHgxMjRiYjRbXzB4NTEwOCgnMHhiZScpXSYmIV9bXzB4NTEwOCgnMHgyZDgnKV0oX1tfMHg1MTA4KCcweDNjMicpXShfMHgxMjRiYjRbXzB4MTVkZWFlXSksXzB4NTEwOCgnMHgzMzcnKSk7XzB4MTVkZWFlKyspO18weDI1MDIxOFtfMHg1MTA4KCcweGE4JyldPV8weDEyNGJiNFtfMHg1MTA4KCcweDMzOCcpXSgweDAsXzB4MTVkZWFlKVtfMHg1MTA4KCcweDgyJyldKCdceDBhJyk7fX10aGlzWydfZW1pdFN0YXRzVXBkYXRlJ10oXzB4MjUwMjE4W18weDUxMDgoJzB4YTgnKV0pO319Y2F0Y2goXzB4NWM0NTFiKXt9dGhpc1tfMHg1MTA4KCcweDFjNycpXShfW18weDUxMDgoJzB4NjYnKV0oe30sXzB4MWU2ZTY1LHsnZmlsZXMnOl8weDI1MDIxOH0pKTt9fSxfMHg2NjRkMjhbXzB4NTEwOCgnMHhhZScpXVtfMHg1MTA4KCcweDFlJyldPWZ1bmN0aW9uKF8weDI1MDIxOCxfMHgxZTZlNjUsXzB4NjY0ZDI4KXtpZihfMHg1MTA4KCcweDNjMycpIT09XzB4NTEwOCgnMHgzYzMnKSl7cmV0dXJuIF8weDI1MDIxOFtfMHg1MTA4KCcweGJmJyldKC9ccy9nLF8weDUxMDgoJzB4M2M0JykpO31lbHNle3RoaXNbJ19lbWl0J10oeyd0eXBlJzpfMHg1MTA4KCcweDNjNScpLCdub3RpZmljYXRpb24nOl9bJ2V4dGVuZCddKHsndGV4dCc6XzB4MWU2ZTY1LCd0eXBlJzpfMHgyNTAyMTh9LF8weDY2NGQyOHx8e30pfSk7fX0sXzB4NjY0ZDI4W18weDUxMDgoJzB4YWUnKV1bXzB4NTEwOCgnMHgyNScpXT1mdW5jdGlvbihfMHgyNTAyMTgpe2lmKF8weDUxMDgoJzB4M2M2JykhPT1fMHg1MTA4KCcweDNjNicpKXt2YXIgXzB4MzYwM2I3PV8weDY2NGQyOFtfMHg1MTA4KCcweDMyYicpXShfMHgyNTAyMThbXzB4NTEwOCgnMHgyMzcnKV0oKSk7X1tfMHg1MTA4KCcweDEzNScpXShfMHgzNjAzYjdbJ2FkZFRlc3QnXShfMHgyNTAyMTgpLGZ1bmN0aW9uKF8weDQ5NjZhZil7XzB4MTA5OTQxW18weDQ5NjZhZltfMHg1MTA4KCcweDUwJyldKCldPV8weDQ5NjZhZjt9KSxfMHg2NjRkMjhbXzB4NTEwOCgnMHgzYzcnKV0oXzB4MjUwMjE4KTt9ZWxzZXt0aGlzW18weDUxMDgoJzB4MWM3JyldKHsndHlwZSc6J3N0b3BwZWQnLCdkZWFjdGl2YXRlJzpfMHgyNTAyMTh9KTt9fSxfMHg2NjRkMjhbJ3Byb3RvdHlwZSddWydfZW1pdEV4cGlyZWRMaWNlbnNlJ109ZnVuY3Rpb24oKXt0aGlzWydfZW1pdCddKHsndHlwZSc6XzB4NTEwOCgnMHgxMCcpfSk7fSxfMHg2NjRkMjhbJ3Byb3RvdHlwZSddW18weDUxMDgoJzB4MWM3JyldPWZ1bmN0aW9uKF8weDI1MDIxOCl7dGhpc1tfMHg1MTA4KCcweGE3JyldKF8weDUxMDgoJzB4YTgnKSxfMHgyNTAyMTgpO30sXzB4NjY0ZDI4W18weDUxMDgoJzB4YWUnKV1bXzB4NTEwOCgnMHgzMjgnKV09ZnVuY3Rpb24oXzB4MjUwMjE4KXtpZihfMHg1MTA4KCcweDNjOCcpIT09XzB4NTEwOCgnMHgzYzgnKSl7dmFyIF8weDRhNDk2MT1fMHgyNTAyMThbJ3JlcXVlc3QnXSxfMHgxNzIzYmE9eyd0eXBlJzpfMHg1MTA4KCcweDJlOCcpLCdkYXRhJzp7fSwnaWQnOl8weDI1MDIxOFsnaWQnXX0sXzB4NTkzNTIyPXRoaXNbJ19tb2RlbCddW18weDUxMDgoJzB4MmU5JyldKF8weDRhNDk2MSk7cmV0dXJuIF8weDU5MzUyMj8oXzB4MTcyM2JhW18weDUxMDgoJzB4MWVmJyldW18weDUxMDgoJzB4M2M5JyldPV8weDU5MzUyMixfMHgxNzIzYmFbXzB4NTEwOCgnMHgxZWYnKV1bXzB4NTEwOCgnMHgxNTInKV09XzB4NGE0OTYxWydmaWxlJ10sXzB4MTcyM2JhW18weDUxMDgoJzB4MWVmJyldW18weDUxMDgoJzB4MjNiJyldPV8weDRhNDk2MVtfMHg1MTA4KCcweDIzYicpXSx2b2lkIHRoaXNbXzB4NTEwOCgnMHgxYzcnKV0oXzB4MTcyM2JhKSk6dm9pZCB0aGlzW18weDUxMDgoJzB4MWUnKV0oXzB4NTEwOCgnMHgyYScpLF8weDUxMDgoJzB4MmU2JykpO31lbHNle3JldHVybiB0aGlzW18weDUxMDgoJzB4OWUnKV0mJnRoaXNbXzB4NTEwOCgnMHg5ZScpXVtfMHg1MTA4KCcweDE5YycpXShfMHgyNTAyMTgpLF8weDI1MDIxOCYmKF8weDI1MDIxOFtfMHg1MTA4KCcweDE5ZCcpXXx8XzB4MjUwMjE4W18weDUxMDgoJzB4YTgnKV0pO319LF8weDY2NGQyOFtfMHg1MTA4KCcweGFlJyldW18weDUxMDgoJzB4M2NhJyldPWZ1bmN0aW9uKF8weDI1MDIxOCl7aWYoXzB4NTEwOCgnMHgzY2InKSE9PV8weDUxMDgoJzB4M2NiJykpe3JldHVybiBfMHgyNTAyMTg/UVsncHJvbWlzZSddKF8weDFlNmU2NShfMHg1MTA4KCcweDNjYycpKSk6MHgwO31lbHNle3JldHVybiBfMHgyNTAyMTgmJl8weDI1MDIxOFtfMHg1MTA4KCcweGE4JyldO319LF8weDY2NGQyODt9KEV2ZW50RW1pdHRlcik7XzB4MWU2ZTY1W18weDUxMDgoJzB4MicpXT1fMHgzOTgzNDY7fX0seycuL3NlcnZlci9maWxlU3lzdGVtJzoweDEwLCcuL3NlcnZlci9saW5lRGlmZmVyZW5jZXMnOjB4MTEsJy4vc2VydmVyL21vZGVsJzoweDEyLCcuL3NoYXJlZC91dGlscyc6MHgxNywnY2hpbGRfcHJvY2Vzcyc6dm9pZCAweDAsJ2NyeXB0byc6dm9pZCAweDAsJ2h0dHBzJzp2b2lkIDB4MCwnbm9kZS11dWlkJzp2b2lkIDB4MCwnb3MnOnZvaWQgMHgwLCdwYXRoJzp2b2lkIDB4MCwndGltZXJzJzp2b2lkIDB4MCwndXRpbCc6dm9pZCAweDB9XSw5OltmdW5jdGlvbihfMHgzNTMxOTgsXzB4NTQ4NGJhLF8weDRkYjc1NSl7XzB4NTQ4NGJhW18weDUxMDgoJzB4MicpXT17J0RPTUV4Y2VwdGlvbic6MHgxLCdOYW1lZE5vZGVNYXAnOjB4MSwnQXR0cic6MHgxLCdOb2RlJzoweDEsJ0VsZW1lbnQnOjB4MSwnRG9jdW1lbnRGcmFnbWVudCc6MHgxLCdIVE1MRG9jdW1lbnQnOjB4MSwnRG9jdW1lbnQnOjB4MSwnWE1MRG9jdW1lbnQnOjB4MSwnQ2hhcmFjdGVyRGF0YSc6MHgxLCdUZXh0JzoweDEsJ0NEQVRBU2VjdGlvbic6MHgxLCdQcm9jZXNzaW5nSW5zdHJ1Y3Rpb24nOjB4MSwnQ29tbWVudCc6MHgxLCdEb2N1bWVudFR5cGUnOjB4MSwnRE9NSW1wbGVtZW50YXRpb24nOjB4MSwnTm9kZUxpc3QnOjB4MSwnSFRNTENvbGxlY3Rpb24nOjB4MSwnSFRNTE9wdGlvbnNDb2xsZWN0aW9uJzoweDEsJ0RPTVN0cmluZ01hcCc6MHgxLCdET01Ub2tlbkxpc3QnOjB4MSwnU1ZHQW5pbWF0ZWRTdHJpbmcnOjB4MSwnU1ZHTnVtYmVyJzoweDEsJ1NWR1N0cmluZ0xpc3QnOjB4MSwnRXZlbnQnOjB4MSwnQ2xvc2VFdmVudCc6MHgxLCdDdXN0b21FdmVudCc6MHgxLCdNZXNzYWdlRXZlbnQnOjB4MSwnRXJyb3JFdmVudCc6MHgxLCdIYXNoQ2hhbmdlRXZlbnQnOjB4MSwnRm9jdXNFdmVudCc6MHgxLCdQb3BTdGF0ZUV2ZW50JzoweDEsJ1VJRXZl4oCLbnQnOjB4MSwnTW91c2VFdmVudCc6MHgxLCdLZXlib2FyZEV2ZW50JzoweDEsJ1RvdWNoRXZlbnQnOjB4MSwnUHJvZ3Jlc3NFdmVudCc6MHgxLCdDb21wb3NpdGlvbkV2ZW50JzoweDEsJ1doZWVsRXZlbnQnOjB4MSwnRXZlbnRUYXJnZXQnOjB4MSwnQmFyUHJvcCc6MHgxLCdMb2NhdGlvbic6MHgxLCdIaXN0b3J5JzoweDEsJ1NjcuKAi2Vlbic6MHgxLCdQZXJmb3JtYW5jZSc6MHgxLCdCbG9iJzoweDEsJ0ZpbGUnOjB4MSwnRmlsZUxpc3QnOjB4MSwnRE9NUGFyc2VyJzoweDEsJ0Zvcm1EYXRhJzoweDEsJ1hNTEh0dHBSZXF1ZXN0RXZlbnRUYXJnZXQnOjB4MSwnWE1MSHR0cFJlcXVlc3RVcGxvYWQnOjB4MSwnTm9kZUl0ZXJhdG9yJzoweDEsJ1RyZWVXYWxrZXInOjB4MSwnSFRNTEVsZW1lbnQnOjB4MSwnSFRNTEFuY2hvckVsZW1lbnQnOjB4MSwnSFRNTEFyZWFFbGVtZW50JzoweDEsJ0hUTUxBdWRpb0VsZW1lbnQnOjB4MSwnSFRNTEJhc2VFbGVtZW50JzoweDEsJ0hUTUxCb2R5RWxlbWVudCc6MHgxLCdIVE1MQlJFbGVtZW50JzoweDEsJ0hUTUxCdXR0b25FbGVtZW50JzoweDEsJ0hUTUxDYW52YXNFbGVtZW50JzoweDEsJ0hUTUxEYXRhRWxlbWVudCc6MHgxLCdIVE1MRGF0YUxpc3RFbGVtZW50JzoweDEsJ0hUTUxEZXRhaWxzRWxlbWVudCc6MHgxLCdIVE1MRGlhbG9nRWxlbWVudCc6MHgxLCdIVE1MRGlyZWN0b3J5RWxlbWVudCc6MHgxLCdIVE1MRGl2RWxlbWVudCc6MHgxLCdIVE1MRExpc3RFbGVtZW50JzoweDEsJ0hUTUxFbWJlZEVsZW1lbnQnOjB4MSwnSFRNTEZpZWxkU2V0RWxlbWVudCc6MHgxLCdIVE1MRm9udEVsZW1lbnQnOjB4MSwnSFRNTEZvcm1FbGVtZW50JzoweDEsJ0hUTUxGcmFtZUVsZW1lbnQnOjB4MSwnSFRNTEZyYW1lU2V0RWxlbWVudCc6MHgxLCdIVE1MSGVhZGluZ0VsZW1lbnQnOjB4MSwnSFRNTEhlYWRFbGVtZW50JzoweDEsJ0hUTUxIUkVsZW1lbnQnOjB4MSwnSFRNTEh0bWxFbGVtZW50JzoweDEsJ0hUTUxJRnJhbWVFbGVtZW50JzoweDEsJ0hUTUxJbWFnZUVsZW1lbnQnOjB4MSwnSFRNTElucHV0RWxlbWVudCc6MHgxLCdIVE1MTGFiZWxFbGVtZW50JzoweDEsJ0hUTUxMZWdlbmRFbGVtZW50JzoweDEsJ0hUTUxMSUVsZW1lbnQnOjB4MSwnSFRNTExpbmtFbGVtZW50JzoweDEsJ0hUTUxNYXBFbGVtZW50JzoweDEsJ0hUTUxNYXJxdWVlRWxlbWVudCc6MHgxLCdIVE1MTWVkaWFFbGVtZW50JzoweDEsJ0hUTUxNZW51RWxlbWVudCc6MHgxLCdIVE1MTWV0YUVsZW1lbnQnOjB4MSwnSFRNTE1ldGVyRWxlbWVudCc6MHgxLCdIVE1MTW9kRWxlbWVudCc6MHgxLCdIVE1MT2JqZWN0RWxlbWVudCc6MHgxLCdIVE1MT0xpc3RFbGVtZW50JzoweDEsJ0hUTUxPcHRHcm91cEVsZW1lbnQnOjB4MSwnSFRNTE9wdGlvbkVsZW1lbnQnOjB4MSwnSFRNTE91dHB1dEVsZW1lbnQnOjB4MSwnSFRNTFBhcmFncmFwaEVsZW1lbnQnOjB4MSwnSFRNTFBhcmFtRWxlbWVudCc6MHgxLCdIVE1MUGljdHVyZUVsZW1lbnQnOjB4MSwnSFRNTFByZUVsZW1lbnQnOjB4MSwnSFRNTFByb2dyZXNzRWxlbWVudCc6MHgxLCdIVE1MUXVvdGVFbGVtZW50JzoweDEsJ0hUTUxTY3JpcHRFbGVtZW50JzoweDEsJ0hUTUxTZWxlY3RFbGVtZW50JzoweDEsJ0hUTUxTb3VyY2VFbGVtZW50JzoweDEsJ0hUTUxTcGFuRWxlbWVudCc6MHgxLCdIVE1MU3R5bGVFbGVtZW50JzoweDEsJ0hUTUxUYWJsZUNhcHRpb25FbGVtZW50JzoweDEsJ0hUTUxUYWJsZUNlbGxFbGVtZW50JzoweDEsJ0hUTUxUYWJsZUNvbEVsZW1lbnQnOjB4MSwnSFRNTFRhYmxlRWxlbWVudCc6MHgxLCdIVE1MVGltZUVsZW1lbnQnOjB4MSwnSFRNTFRpdGxlRWxlbWVudCc6MHgxLCdIVE1MVGFibGVSb3dFbGVtZW50JzoweDEsJ0hUTUxUYWJsZVNlY3Rpb25FbGVtZW50JzoweDEsJ0hUTUxUZW1wbGF0ZUVsZW1lbnQnOjB4MSwnSFRNTFRleHRBcmVhRWxlbWVudCc6MHgxLCdIVE1MVHJhY2tFbGVtZW50JzoweDEsJ0hUTUxVTGlzdEVsZW1lbnQnOjB4MSwnSFRNTFVua25vd25FbGVtZW50JzoweDEsJ0hUTUxWaWRlb0VsZW1lbnQnOjB4MSwnU1ZHRWxlbWVudCc6MHgxLCdTVkdHcmFwaGljc0VsZW1lbnQnOjB4MSwnU1ZHU1ZHRWxlbWVudCc6MHgxLCdTdHlsZVNoZWV0JzoweDEsJ01lZGlhTGlzdCc6MHgxLCdDU1NTdHlsZVNoZWV0JzoweDEsJ0NTU1J1bGUnOjB4MSwnQ1NTU3R5bGVSdWxlJzoweDEsJ0NTU01lZGlhUnVsZSc6MHgxLCdDU1NJbXBvcnRSdWxlJzoweDEsJ0NTU1N0eWxlRGVjbGFyYXRpb24nOjB4MSwnU3R5bGVTaGVldExpc3QnOjB4MSwnWFBhdGhFeGNlcHRpb24nOjB4MSwnWFBhdGhFeHByZXNzaW9uJzoweDEsJ1hQYXRoUmVzdWx0JzoweDEsJ1hQYXRoRXZhbHVhdG9yJzoweDEsJ05vZGVGaWx0ZXInOjB4MSwnVVJMJzoweDEsJ1VSTFNlYXJjaFBhcmFtcyc6MHgxLCdXaW5kb3cnOjB4MSwnbGVuZ3RoJzoweDEsJ3dpbmRvdyc6MHgxLCdmcmFtZUVsZW1lbnQnOjB4MSwnZnJhbWVzJzoweDEsJ3NlbGYnOjB4MSwncGFyZW50JzoweDEsJ3RvcCc6MHgxLCdkb2N1bWVudCc6MHgxLCdleHRlcm5hbCc6MHgxLCdsb2NhdGlvbic6MHgxLCdoaXN0b3J5JzoweDEsJ25hdmlnYXRvcic6MHgxLCdsb2NhdGlvbmJhcic6MHgxLCdtZW51YmFyJzoweDEsJ3BlcnNvbmFsYmFyJzoweDEsJ3Njcm9sbGJhcnMnOjB4MSwnc3RhdHVzYmFyJzoweDEsJ3Rvb2xiYXInOjB4MSwncGVyZm9ybWFuY2UnOjB4MSwnc2NyZWVuJzoweDEsJ2FkZEV2ZW50TGlzdGVuZXInOjB4MSwncmVtb3ZlRXZlbnRMaXN0ZW5lcic6MHgxLCdkaXNwYXRjaEV2ZW50JzoweDEsJ3NldFRpbWVvdXQnOjB4MSwnc2V0SW50ZXJ2YWwnOjB4MSwnY2xlYXJJbnRlcnZhbCc6MHgxLCdjbGVhclRpbWVvdXQnOjB4MSwnT3B0aW9uJzoweDEsJ0ltYWdlJzoweDEsJ0F1ZGlvJzoweDEsJ3Bvc3RNZXNzYWdlJzoweDEsJ2F0b2InOjB4MSwnYnRvYSc6MHgxLCdGaWxlUmVhZGVyJzoweDEsJ1dlYlNvY2tldCc6MHgxLCdBYm9ydFNpZ25hbCc6MHgxLCdBYm9ydENvbnRyb2xsZXInOjB4MSwnWE1MSHR0cFJlcXVlc3QnOjB4MSwnQXJyYXlCdWZmZXInOjB4MSwnSW50OEFycmF5JzoweDEsJ1VpbnQ4QXJyYXknOjB4MSwnVWludDhDbGFtcGVkQXJyYXknOjB4MSwnSW50MTZBcnJheSc6MHgxLCdVaW50MTZBcnJheSc6MHgxLCdJbnQzMkFycmF5JzoweDEsJ1VpbnQzMkFycmF5JzoweDEsJ0Zsb2F0MzJBcnJheSc6MHgxLCdGbG9hdDY0QXJyYXknOjB4MSwnc3RvcCc6MHgxLCdjbG9zZSc6MHgxLCdnZXRDb21wdXRlZFN0eWxlJzoweDEsJ2NhcHR1cmVFdmVudHMnOjB4MSwncmVsZWFzZUV2ZW50cyc6MHgxLCdjb25zb2xlJzoweDEsJ25hbWUnOjB4MSwnZGV2aWNlUGl4ZWxSYXRpbyc6MHgxLCdpbm5lcldpZHRoJzoweDEsJ2lubmVySGVpZ2h0JzoweDEsJ291dGVyV2lkdGgnOjB4MSwnb3V0ZXJIZWlnaHQnOjB4MSwncGFnZVhPZmZzZXQnOjB4MSwncGFnZVlPZmZzZXQnOjB4MSwnc2NyZWVuWCc6MHgxLCdzY3JlZW5ZJzoweDEsJ3Njcm9sbFgnOjB4MSwnc2Nyb2xsWSc6MHgxLCdzY3JlZW5MZWZ0JzoweDEsJ3NjcmVlblRvcCc6MHgxLCdhbGVydCc6MHgxLCdibHVyJzoweDEsJ2NvbmZpcm0nOjB4MSwnZm9jdXMnOjB4MSwnbW92ZUJ5JzoweDEsJ21vdmVUbyc6MHgxLCdvcGVuJzoweDEsJ3ByaW50JzoweDEsJ3Byb21wdCc6MHgxLCdyZXNpemVCeSc6MHgxLCdyZXNpemVUbyc6MHgxLCdzY3JvbGwnOjB4MSwnc2Nyb2xsQnknOjB4MSwnc2Nyb2xsVG8nOjB4MX07fSx7fV0sMTA6W2Z1bmN0aW9uKF8weDVmMWQyYyxfMHg1YWIwZmIsXzB4MWRlOWMyKXsndXNlIHN0cmljdCc7dmFyIF8weDIzYWZiNT1mdW5jdGlvbigpe2Z1bmN0aW9uIF8weDVmMWQyYyhfMHg1ZjFkMmMpe2lmKCd6YVRXdychPT0nVWZMd2EnKXt0aGlzW18weDUxMDgoJzB4M2NkJyldPV8weDVmMWQyY1tfMHg1MTA4KCcweDNjZScpXSx0aGlzW18weDUxMDgoJzB4MzU5JyldPV8weDVmMWQyY1tfMHg1MTA4KCcweDE1MicpXSx0aGlzW18weDUxMDgoJzB4M2NmJyldPV8weDVmMWQyY1sncmFuZ2UnXSx0aGlzW18weDUxMDgoJzB4M2QwJyldPV8weDVmMWQyY1sndGV4dCddLHRoaXNbJ192YWx1ZUJhZyddPV8weDVmMWQyY1tfMHg1MTA4KCcweDFlZScpXSx0aGlzW18weDUxMDgoJzB4M2QxJyldPV8weDVmMWQyY1tfMHg1MTA4KCcweDY5JyldLHRoaXNbXzB4NTEwOCgnMHgzZDInKV09XzB4NWYxZDJjW18weDUxMDgoJzB4M2QzJyldLHRoaXNbXzB4NTEwOCgnMHgzZDQnKV09XzB4NWYxZDJjW18weDUxMDgoJzB4M2Q1JyldLHRoaXNbXzB4NTEwOCgnMHgzZDYnKV09XzB4NWYxZDJjWydleHBlY3RlZCddO31lbHNle3JldHVybiB0aGlzW18weDUxMDgoJzB4Mjk0JyldO319cmV0dXJuIF8weDVmMWQyY1tfMHg1MTA4KCcweGFlJyldW18weDUxMDgoJzB4M2Q3JyldPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbXzB4NTEwOCgnMHgzY2QnKV07fSxfMHg1ZjFkMmNbJ3Byb3RvdHlwZSddW18weDUxMDgoJzB4MjM3JyldPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbXzB4NTEwOCgnMHgzNTknKV07fSxfMHg1ZjFkMmNbXzB4NTEwOCgnMHhhZScpXVtfMHg1MTA4KCcweDNkOCcpXT1mdW5jdGlvbigpe3JldHVybiB0aGlzWydfcmFuZ2UnXTt9LF8weDVmMWQyY1sncHJvdG90eXBlJ11bXzB4NTEwOCgnMHgzZDknKV09ZnVuY3Rpb24oXzB4NWYxZDJjKXt0aGlzW18weDUxMDgoJzB4M2NmJyldPV8weDVmMWQyYzt9LF8weDVmMWQyY1sncHJvdG90eXBlJ11bXzB4NTEwOCgnMHgzZGEnKV09ZnVuY3Rpb24oKXtpZignelJ2aWknIT09J3pSdmlpJyl7X1tfMHg1MTA4KCcweDM0YycpXShfMHg1ZjFkMmMpP3RoaXNbXzB4NTEwOCgnMHgzZGInKV09XzB4NWYxZDJjOnRoaXNbXzB4NTEwOCgnMHgzZGInKV0mJih0aGlzW18weDUxMDgoJzB4M2RiJyldKF8weDVmMWQyYyksZGVsZXRlIHRoaXNbXzB4NTEwOCgnMHgzZGInKV0sZGVsZXRlIHRoaXNbXzB4NTEwOCgnMHgzZGMnKV0pO31lbHNle3JldHVybiB0aGlzW18weDUxMDgoJzB4M2QwJyldO319LF8weDVmMWQyY1sncHJvdG90eXBlJ11bXzB4NTEwOCgnMHgxZWUnKV09ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc1tfMHg1MTA4KCcweDNkZCcpXTt9LF8weDVmMWQyY1tfMHg1MTA4KCcweGFlJyldW18weDUxMDgoJzB4M2RlJyldPWZ1bmN0aW9uKCl7aWYoXzB4NTEwOCgnMHgzZGYnKSE9PV8weDUxMDgoJzB4M2RmJykpe3ZhciBfMHgyMzhlYmI9dGhpc1tfMHg1MTA4KCcweDJjNicpXShfMHg1ZjFkMmMpO3JldHVybiBfMHgyMzhlYmImJnRoaXNbXzB4NTEwOCgnMHg5ZScpXVtfMHg1MTA4KCcweDNlMCcpXShfMHgyMzhlYmJbXzB4NTEwOCgnMHgzNCcpXSgpKTt9ZWxzZXt2YXIgXzB4NWYxZDJjPXRoaXNbJ192YWx1ZUJhZyddO3JldHVybiBkZWxldGUgdGhpc1tfMHg1MTA4KCcweDNkZCcpXSxfMHg1ZjFkMmM7fX0sXzB4NWYxZDJjW18weDUxMDgoJzB4YWUnKV1bXzB4NTEwOCgnMHg2OScpXT1mdW5jdGlvbigpe2lmKF8weDUxMDgoJzB4M2UxJykhPT1fMHg1MTA4KCcweDNlMScpKXtfMHg1YWIwZmJbXzB4NTEwOCgnMHgyJyldPXsnRE9NRXhjZXB0aW9uJzoweDEsJ05hbWVkTm9kZU1hcCc6MHgxLCdBdHRyJzoweDEsJ05vZGUnOjB4MSwnRWxlbWVudCc6MHgxLCdEb2N1bWVudEZyYWdtZW50JzoweDEsJ0hUTUxEb2N1bWVudCc6MHgxLCdEb2N1bWVudCc6MHgxLCdYTUxEb2N1bWVudCc6MHgxLCdDaGFyYWN0ZXJEYXRhJzoweDEsJ1RleHQnOjB4MSwnQ0RBVEFTZWN0aW9uJzoweDEsJ1Byb2Nlc3NpbmdJbnN0cnVjdGlvbic6MHgxLCdDb21tZW50JzoweDEsJ0RvY3VtZW50VHlwZSc6MHgxLCdET01JbXBsZW1lbnRhdGlvbic6MHgxLCdOb2RlTGlzdCc6MHgxLCdIVE1MQ29sbGVjdGlvbic6MHgxLCdIVE1MT3B0aW9uc0NvbGxlY3Rpb24nOjB4MSwnRE9NU3RyaW5nTWFwJzoweDEsJ0RPTVRva2VuTGlzdCc6MHgxLCdTVkdBbmltYXRlZFN0cmluZyc6MHgxLCdTVkdOdW1iZXInOjB4MSwnU1ZHU3RyaW5nTGlzdCc6MHgxLCdFdmVudCc6MHgxLCdDbG9zZUV2ZW50JzoweDEsJ0N1c3RvbUV2ZW50JzoweDEsJ01lc3NhZ2VFdmVudCc6MHgxLCdFcnJvckV2ZW50JzoweDEsJ0hhc2hDaGFuZ2VFdmVudCc6MHgxLCdGb2N1c0V2ZW50JzoweDEsJ1BvcFN0YXRlRXZlbnQnOjB4MSwnVUlFdmVudCc6MHgxLCdNb3VzZUV2ZW50JzoweDEsJ0tleWJvYXJkRXZlbnQnOjB4MSwnVG91Y2hFdmVudCc6MHgxLCdQcm9ncmVzc0V2ZW50JzoweDEsJ0NvbXBvc2l0aW9uRXZlbnQnOjB4MSwnV2hlZWxFdmVudCc6MHgxLCdFdmVudFRhcmdldCc6MHgxLCdCYXJQcm9wJzoweDEsJ0xvY2F0aW9uJzoweDEsJ0hpc3RvcnknOjB4MSwnU2NyZWVuJzoweDEsJ1BlcmZvcm1hbmNlJzoweDEsJ0Jsb2InOjB4MSwnRmlsZSc6MHgxLCdGaWxlTGlzdCc6MHgxLCdET01QYXJzZXInOjB4MSwnRm9ybURhdGEnOjB4MSwnWE1MSHR0cFJlcXVlc3RFdmVudFRhcmdldCc6MHgxLCdYTUxIdHRwUmVxdWVzdFVwbG9hZCc6MHgxLCdOb2RlSXRlcmF0b3InOjB4MSwnVHJlZVdhbGtlcic6MHgxLCdIVE1MRWxlbWVudCc6MHgxLCdIVE1MQW5jaG9yRWxlbWVudCc6MHgxLCdIVE1MQXJlYUVsZW1lbnQnOjB4MSwnSFRNTEF1ZGlvRWxlbWVudCc6MHgxLCdIVE1MQmFzZUVsZW1lbnQnOjB4MSwnSFRNTEJvZHlFbGVtZW50JzoweDEsJ0hUTUxCUkVsZW1lbnQnOjB4MSwnSFRNTEJ1dHRvbkVsZW1lbnQnOjB4MSwnSFRNTENhbnZhc0VsZW1lbnQnOjB4MSwnSFRNTERhdGFFbGVtZW50JzoweDEsJ0hUTUxEYXRhTGlzdEVsZW1lbnQnOjB4MSwnSFRNTERldGFpbHNFbGVtZW50JzoweDEsJ0hUTUxEaWFsb2dFbGVtZW50JzoweDEsJ0hUTUxEaXJlY3RvcnlFbGVtZW50JzoweDEsJ0hUTUxEaXZFbGVtZW50JzoweDEsJ0hUTUxETGlzdEVsZW1lbnQnOjB4MSwnSFRNTEVtYmVkRWxlbWVudCc6MHgxLCdIVE1MRmllbGRTZXRFbGVtZW50JzoweDEsJ0hUTUxGb250RWxlbWVudCc6MHgxLCdIVE1MRm9ybUVsZW1lbnQnOjB4MSwnSFRNTEZyYW1lRWxlbWVudCc6MHgxLCdIVE1MRnJhbWVTZXRFbGVtZW50JzoweDEsJ0hUTUxIZWFkaW5nRWxlbWVudCc6MHgxLCdIVE1MSGVhZEVsZW1lbnQnOjB4MSwnSFRNTEhSRWxlbWVudCc6MHgxLCdIVE1MSHRtbEVsZW1lbnQnOjB4MSwnSFRNTElGcmFtZUVsZW1lbnQnOjB4MSwnSFRNTEltYWdlRWxlbWVudCc6MHgxLCdIVE1MSW5wdXRFbGVtZW50JzoweDEsJ0hUTUxMYWJlbEVsZW1lbnQnOjB4MSwnSFRNTExlZ2VuZEVsZW1lbnQnOjB4MSwnSFRNTExJRWxlbWVudCc6MHgxLCdIVE1MTGlua0VsZW1lbnQnOjB4MSwnSFRNTE1hcEVsZW1lbnQnOjB4MSwnSFRNTE1hcnF1ZWVFbGVtZW50JzoweDEsJ0hUTUxNZWRpYUVsZW1lbnQnOjB4MSwnSFRNTE1lbnVFbGVtZW50JzoweDEsJ0hUTUxNZXRhRWxlbWVudCc6MHgxLCdIVE1MTWV0ZXJFbGVtZW50JzoweDEsJ0hUTUxNb2RFbGVtZW50JzoweDEsJ0hUTUxPYmplY3RFbGVtZW50JzoweDEsJ0hUTUxPTGlzdEVsZW1lbnQnOjB4MSwnSFRNTE9wdEdyb3VwRWxlbWVudCc6MHgxLCdIVE1MT3B0aW9uRWxlbWVudCc6MHgxLCdIVE1MT3V0cHV0RWxlbWVudCc6MHgxLCdIVE1MUGFyYWdyYXBoRWxlbWVudCc6MHgxLCdIVE1MUGFyYW1FbGVtZW50JzoweDEsJ0hUTUxQaWN0dXJlRWxlbWVudCc6MHgxLCdIVE1MUHJlRWxlbWVudCc6MHgxLCdIVE1MUHJvZ3Jlc3NFbGVtZW50JzoweDEsJ0hUTUxRdW90ZUVsZW1lbnQnOjB4MSwnSFRNTFNjcmlwdEVsZW1lbnQnOjB4MSwnSFRNTFNlbGVjdEVsZW1lbnQnOjB4MSwnSFRNTFNvdXJjZUVsZW1lbnQnOjB4MSwnSFRNTFNwYW5FbGVtZW50JzoweDEsJ0hUTUxTdHlsZUVsZW1lbnQnOjB4MSwnSFRNTFRhYmxlQ2FwdGlvbkVsZW1lbnQnOjB4MSwnSFRNTFRhYmxlQ2VsbEVsZW1lbnQnOjB4MSwnSFRNTFRhYmxlQ29sRWxlbWVudCc6MHgxLCdIVE1MVGFibGVFbGVtZW50JzoweDEsJ0hUTUxUaW1lRWxlbWVudCc6MHgxLCdIVE1MVGl0bGVFbGVtZW50JzoweDEsJ0hUTUxUYWJsZVJvd0VsZW1lbnQnOjB4MSwnSFRNTFRhYmxlU2VjdGlvbkVsZW1lbnQnOjB4MSwnSFRNTFRlbXBsYXRlRWxlbWVudCc6MHgxLCdIVE1MVGV4dEFyZWFFbGVtZW50JzoweDEsJ0hUTUxUcmFja0VsZW1lbnQnOjB4MSwnSFRNTFVMaXN0RWxlbWVudCc6MHgxLCdIVE1MVW5rbm93bkVsZW1lbnQnOjB4MSwnSFRNTFZpZGVvRWxlbWVudCc6MHgxLCdTVkdFbGVtZW50JzoweDEsJ1NWR0dyYXBoaWNzRWxlbWVudCc6MHgxLCdTVkdTVkdFbGVtZW50JzoweDEsJ1N0eWxlU2hlZXQnOjB4MSwnTWVkaWFMaXN0JzoweDEsJ0NTU1N0eWxlU2hlZXQnOjB4MSwnQ1NTUnVsZSc6MHgxLCdDU1NTdHlsZVJ1bGUnOjB4MSwnQ1NTTWVkaWFSdWxlJzoweDEsJ0NTU0ltcG9ydFJ1bGUnOjB4MSwnQ1NTU3R5bGVEZWNsYXJhdGlvbic6MHgxLCdTdHlsZVNoZWV0TGlzdCc6MHgxLCdYUGF0aEV4Y2VwdGlvbic6MHgxLCdYUGF0aEV4cHJlc3Npb24nOjB4MSwnWFBhdGhSZXN1bHQnOjB4MSwnWFBhdGhFdmFsdWF0b3InOjB4MSwnTm9kZUZpbHRlcic6MHgxLCdVUkwnOjB4MSwnVVJMU2VhcmNoUGFyYW1zJzoweDEsJ1dpbmRvdyc6MHgxLCdsZW5ndGgnOjB4MSwnd2luZG93JzoweDEsJ2ZyYW1lRWxlbWVudCc6MHgxLCdmcmFtZXMnOjB4MSwnc2VsZic6MHgxLCdwYXJlbnQnOjB4MSwndG9wJzoweDEsJ2RvY3VtZW50JzoweDEsJ2V4dGVybmFsJzoweDEsJ2xvY2F0aW9uJzoweDEsJ2hpc3RvcnknOjB4MSwnbmF2aWdhdG9yJzoweDEsJ2xvY2F0aW9uYmFyJzoweDEsJ21lbnViYXInOjB4MSwncGVyc29uYWxiYXInOjB4MSwnc2Nyb2xsYmFycyc6MHgxLCdzdGF0dXNiYXInOjB4MSwndG9vbGJhcic6MHgxLCdwZXJmb3JtYW5jZSc6MHgxLCdzY3JlZW4nOjB4MSwnYWRkRXZlbnRMaXN0ZW5lcic6MHgxLCdyZW1vdmVFdmVudExpc3RlbmVyJzoweDEsJ2Rpc3BhdGNoRXZlbnQnOjB4MSwnc2V0VGltZW91dCc6MHgxLCdzZXRJbnRlcnZhbCc6MHgxLCdjbGVhckludGVydmFsJzoweDEsJ2NsZWFyVGltZW91dCc6MHgxLCdPcHRpb24nOjB4MSwnSW1hZ2UnOjB4MSwnQXVkaW8nOjB4MSwncG9zdE1lc3NhZ2UnOjB4MSwnYXRvYic6MHgxLCdidG9hJzoweDEsJ0ZpbGVSZWFkZXInOjB4MSwnV2ViU29ja2V0JzoweDEsJ0Fib3J0U2lnbmFsJzoweDEsJ0Fib3J0Q29udHJvbGxlcic6MHgxLCdYTUxIdHRwUmVxdWVzdCc6MHgxLCdBcnJheUJ1ZmZlcic6MHgxLCdJbnQ4QXJyYXknOjB4MSwnVWludDhBcnJheSc6MHgxLCdVaW50OENsYW1wZWRBcnJheSc6MHgxLCdJbnQxNkFycmF5JzoweDEsJ1VpbnQxNkFycmF5JzoweDEsJ0ludDMyQXJyYXknOjB4MSwnVWludDMyQXJyYXknOjB4MSwnRmxvYXQzMkFycmF5JzoweDEsJ0Zsb2F0NjRBcnJheSc6MHgxLCdzdG9wJzoweDEsJ2Nsb3NlJzoweDEsJ2dldENvbXB1dGVkU3R5bGUnOjB4MSwnY2FwdHVyZUV2ZW50cyc6MHgxLCdyZWxlYXNlRXZlbnRzJzoweDEsJ2NvbnNvbGUnOjB4MSwnbmFtZSc6MHgxLCdkZXZpY2VQaXhlbFJhdGlvJzoweDEsJ2lubmVyV2lkdGgnOjB4MSwnaW5uZXJIZWlnaHQnOjB4MSwnb3V0ZXJXaWR0aCc6MHgxLCdvdXRlckhlaWdodCc6MHgxLCdwYWdlWE9mZnNldCc6MHgxLCdwYWdlWU9mZnNldCc6MHgxLCdzY3JlZW5YJzoweDEsJ3NjcmVlblknOjB4MSwnc2Nyb2xsWCc6MHgxLCdzY3JvbGxZJzoweDEsJ3NjcmVlbkxlZnQnOjB4MSwnc2NyZWVuVG9wJzoweDEsJ2FsZXJ0JzoweDEsJ2JsdXInOjB4MSwnY29uZmlybSc6MHgxLCdmb2N1cyc6MHgxLCdtb3ZlQnknOjB4MSwnbW92ZVRvJzoweDEsJ29wZW4nOjB4MSwncHJpbnQnOjB4MSwncHJvbXB0JzoweDEsJ3Jlc2l6ZUJ5JzoweDEsJ3Jlc2l6ZVRvJzoweDEsJ3Njcm9sbCc6MHgxLCdzY3JvbGxCeSc6MHgxLCdzY3JvbGxUbyc6MHgxfTt9ZWxzZXtyZXR1cm4gdGhpc1tfMHg1MTA4KCcweDNkMScpXTt9fSxfMHg1ZjFkMmNbXzB4NTEwOCgnMHhhZScpXVtfMHg1MTA4KCcweDNlMicpXT1mdW5jdGlvbihfMHg1ZjFkMmMpe2lmKF8weDUxMDgoJzB4M2UzJykhPT0nekpzb3YnKXt2YXIgXzB4M2IxMjY3PTB4MixfMHg1NmIyOTA9ZnVuY3Rpb24oXzB4MTU4MTkxLF8weDEyNTNkZCl7cmV0dXJuIF9bXzB4NTEwOCgnMHgxMzUnKV0oXzB4MTU4MTkxLGZ1bmN0aW9uKF8weDVhNjVjMixfMHg0YTc0OTQpe18weDEyNTNkZD49XzB4M2IxMjY3PyhfMHgxNTgxOTFbXzB4NGE3NDk0XT17fSxfW18weDUxMDgoJzB4MTM0JyldKF8weDVhNjVjMil8fF8weDVhYjBmYltfMHg1MTA4KCcweDM1MycpXXx8KF8weDVhYjBmYltfMHg1MTA4KCcweDFlJyldKF8weDUxMDgoJzB4MWYnKSxfMHg1MTA4KCcweDM1YicpK18weDNiMTI2NytfMHg1MTA4KCcweDM1YycpLHsnc3VnZ2VzdFByb0VkaXRpb24nOiEweDAsJ2FsbG93TXV0aW5nJzohMHgwLCdpZCc6UH0pLF8weDVhYjBmYltfMHg1MTA4KCcweDM1MycpXT0hMHgwKSk6XzB4NTZiMjkwKF8weDVhNjVjMixfMHgxMjUzZGQrMHgxKTt9KTt9O18weDU2YjI5MChfMHg1ZjFkMmNbJ2V4cHJlc3Npb25zVG9FdmFsdWF0ZSddLDB4MSk7fWVsc2V7dGhpc1tfMHg1MTA4KCcweDE1YicpXT1fMHg1ZjFkMmM7fX0sXzB4NWYxZDJjW18weDUxMDgoJzB4YWUnKV1bXzB4NTEwOCgnMHgxNTInKV09ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc1tfMHg1MTA4KCcweDE1YicpXTt9LF8weDVmMWQyY1sncHJvdG90eXBlJ11bXzB4NTEwOCgnMHgyM2InKV09ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc1snX3JhbmdlJ10/X1tfMHg1MTA4KCcweDNlNCcpXSh0aGlzW18weDUxMDgoJzB4M2NmJyldKT90aGlzW18weDUxMDgoJzB4M2NmJyldWzB4MF06dGhpc1tfMHg1MTA4KCcweDNjZicpXVtfMHg1MTA4KCcweDFmZicpXSgpOnZvaWQgMHgwO30sXzB4NWYxZDJjW18weDUxMDgoJzB4YWUnKV1bJ2NvbnRleHQnXT1mdW5jdGlvbigpe2lmKF8weDUxMDgoJzB4M2U1JykhPT1fMHg1MTA4KCcweDNlNScpKXt2YXIgXzB4ZDZiZDEyPV8weDVmMWQyY1tvXTtfMHhkNmJkMTImJl9bXzB4NTEwOCgnMHg2YycpXShfMHhkNmJkMTIpJiZfMHgyM2FmYjUoXzB4ZDZiZDEyLF8weDVhYjBmYik7fWVsc2V7cmV0dXJuIHRoaXNbXzB4NTEwOCgnMHgzZDInKV07fX0sXzB4NWYxZDJjWydwcm90b3R5cGUnXVsnYWN0dWFsJ109ZnVuY3Rpb24oKXtpZignTmFpUmgnPT09XzB4NTEwOCgnMHgzZTYnKSl7cmV0dXJuIF8weDVmMWQyY1tfMHg1MTA4KCcweDEzOCcpXSYmXzB4NWYxZDJjWydwcm9jZXNzJ11bJ3BpZCddJiYhXzB4NWYxZDJjW18weDUxMDgoJzB4MTM4JyldW18weDUxMDgoJzB4M2U3JyldJiYhXzB4NWYxZDJjWydwcm9jZXNzJ11bJ3NpZ25hbCddJiZudWxsPT09XzB4NWYxZDJjW18weDUxMDgoJzB4MTM4JyldW18weDUxMDgoJzB4M2U4JyldO31lbHNle3JldHVybiB0aGlzW18weDUxMDgoJzB4M2Q0JyldO319LF8weDVmMWQyY1tfMHg1MTA4KCcweGFlJyldW18weDUxMDgoJzB4M2U5JyldPWZ1bmN0aW9uKCl7aWYoXzB4NTEwOCgnMHgzZWEnKT09PV8weDUxMDgoJzB4M2VhJykpe3JldHVybiB0aGlzW18weDUxMDgoJzB4M2Q2JyldO31lbHNle3JldHVybiB0aGlzWydfYXBwJ107fX0sXzB4NWYxZDJjO30oKTtfMHg1YWIwZmJbXzB4NTEwOCgnMHgyJyldPV8weDIzYWZiNTt9LHt9XSwxMTpbZnVuY3Rpb24oXzB4NzEyNDFlLF8weDMyNzhhMSxfMHgyMzRlOGEpeyd1c2Ugc3RyaWN0Jzt2YXIgXzB4MjFiNmI1PWZ1bmN0aW9uKCl7ZnVuY3Rpb24gXzB4NzEyNDFlKF8weDcxMjQxZSl7dGhpc1tfMHg1MTA4KCcweDNlYicpXT1fMHg3MTI0MWVbXzB4NTEwOCgnMHgzZWMnKV0sdGhpc1tfMHg1MTA4KCcweDNlZCcpXT1fMHg3MTI0MWVbXzB4NTEwOCgnMHgzZWUnKV07fXJldHVybiBfMHg3MTI0MWVbXzB4NTEwOCgnMHhhZScpXVtfMHg1MTA4KCcweDNlZicpXT1mdW5jdGlvbihfMHgzMjc4YTEsXzB4MjM0ZThhKXt2YXIgXzB4MjFiNmI1PXRoaXM7dGhpc1tfMHg1MTA4KCcweDE4MycpXT1fMHg3MTI0MWVbXzB4NTEwOCgnMHgxODQnKV0odGhpc1tfMHg1MTA4KCcweDNlYicpXSksdGhpc1snX2ZpbGUnXT1fMHgzMjc4YTEsdGhpc1snX3N0YXJ0TGluZSddPXRoaXNbXzB4NTEwOCgnMHgzZWInKV1bMHgwXSx0aGlzW18weDUxMDgoJzB4MTg1JyldPXRoaXNbXzB4NTEwOCgnMHgzZWInKV1bMHgxXSx0aGlzW18weDUxMDgoJzB4MTgyJyldPXRoaXNbJ19pdGVtcyddWzB4Ml0sdGhpc1tfMHg1MTA4KCcweDE4NicpXT10aGlzWydfaXRlbXMnXVsweDNdLHRoaXNbXzB4NTEwOCgnMHgzZjAnKV09MHgwLHRoaXNbXzB4NTEwOCgnMHgzZjEnKV09ITB4MSx0aGlzWydfaGl0cyddJiYodGhpc1tfMHg1MTA4KCcweDM5NCcpXT1PYmplY3RbXzB4NTEwOCgnMHg5YScpXShudWxsKSxfW18weDUxMDgoJzB4MTM1JyldKHRoaXNbXzB4NTEwOCgnMHgzZWQnKV0sZnVuY3Rpb24oXzB4NzEyNDFlKXtpZihfMHg1MTA4KCcweDNmMicpIT09XzB4NTEwOCgnMHgzZjInKSl7Qz0hMHgwO31lbHNle2lmKF8weDcxMjQxZSl7dmFyIF8weDMyNzhhMT1fMHgyMzRlOGFbXzB4NzEyNDFlXTtpZighXzB4MzI3OGExKXJldHVybjt2YXIgXzB4M2QxNTdjPV8weDMyNzhhMVsna2V5J10oKTtfMHgyMWI2YjVbJ19jb3ZlcmluZ1Rlc3RNYXAnXVtfMHgzZDE1N2NdPV8weDMyNzhhMSxfMHgyMWI2YjVbJ19hZGRGYWlsZWRPbk1lVGVzdElmRmFpbGluZyddKF8weDMyNzhhMSk7fWVsc2UgXzB4MjFiNmI1W18weDUxMDgoJzB4Mzk1JyldPSEweDA7fX0pLF8weDIxYjZiNVtfMHg1MTA4KCcweDNmMCcpXT1fW18weDUxMDgoJzB4MWI4JyldKF8weDIxYjZiNVtfMHg1MTA4KCcweDM5NCcpXSksXzB4MjFiNmI1W18weDUxMDgoJzB4M2YzJyldKCkpLGRlbGV0ZSB0aGlzWydfaXRlbXMnXSxkZWxldGUgdGhpc1tfMHg1MTA4KCcweDNlZCcpXTt9LF8weDcxMjQxZVtfMHg1MTA4KCcweGFlJyldW18weDUxMDgoJzB4MTU3JyldPWZ1bmN0aW9uKF8weDMyNzhhMSl7dGhpc1snX3N0YXJ0TGluZSddKz1fMHgzMjc4YTEsdGhpc1snX2VuZExpbmUnXSs9XzB4MzI3OGExLHRoaXNbXzB4NTEwOCgnMHgxODMnKV09XzB4NzEyNDFlW18weDUxMDgoJzB4MTg0JyldKFt0aGlzW18weDUxMDgoJzB4MTgxJyldLHRoaXNbJ19zdGFydENvbHVtbiddLHRoaXNbJ19lbmRMaW5lJ10sdGhpc1tfMHg1MTA4KCcweDE4NicpXV0pO30sXzB4NzEyNDFlW18weDUxMDgoJzB4YWUnKV1bXzB4NTEwOCgnMHgxZmYnKV09ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc1tfMHg1MTA4KCcweDE4MScpXTt9LF8weDcxMjQxZVtfMHg1MTA4KCcweGFlJyldW18weDUxMDgoJzB4M2Y0JyldPWZ1bmN0aW9uKCl7aWYoXzB4NTEwOCgnMHgzZjUnKSE9PV8weDUxMDgoJzB4M2Y1Jykpe3JldHVybiBfMHg3MTI0MWUmJl8weDUxMDgoJzB4MzNkJyk9PXR5cGVvZiBfMHg3MTI0MWU/XzB4NzEyNDFlW18weDUxMDgoJzB4YmYnKV0ocCwnJyk6XzB4NzEyNDFlO31lbHNle3JldHVybiB0aGlzW18weDUxMDgoJzB4MTg1JyldO319LF8weDcxMjQxZVtfMHg1MTA4KCcweGFlJyldW18weDUxMDgoJzB4MThiJyldPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbXzB4NTEwOCgnMHgxODInKV07fSxfMHg3MTI0MWVbXzB4NTEwOCgnMHhhZScpXVtfMHg1MTA4KCcweDNmNicpXT1mdW5jdGlvbigpe3JldHVybiB0aGlzWydfZW5kQ29sdW1uJ107fSxfMHg3MTI0MWVbXzB4NTEwOCgnMHhhZScpXVtfMHg1MTA4KCcweDNmNycpXT1mdW5jdGlvbihfMHg3MTI0MWUpe3RoaXNbXzB4NTEwOCgnMHgzMGEnKV18fCh0aGlzW18weDUxMDgoJzB4MzBhJyldPVtdKSx+dGhpc1snX2dsb2JhbEVycm9ycyddW18weDUxMDgoJzB4NTEnKV0oXzB4NzEyNDFlKXx8dGhpc1tfMHg1MTA4KCcweDMwYScpXVtfMHg1MTA4KCcweDRiJyldKF8weDcxMjQxZSk7fSxfMHg3MTI0MWVbJ3Byb3RvdHlwZSddW18weDUxMDgoJzB4M2Y4JyldPWZ1bmN0aW9uKF8weDcxMjQxZSl7aWYodGhpc1snX2dsb2JhbEVycm9ycyddJiZ0aGlzW18weDUxMDgoJzB4MzBhJyldW18weDUxMDgoJzB4YmUnKV0pe2lmKF8weDUxMDgoJzB4M2Y5Jyk9PT0nUWVMTlYnKXtyZXR1cm4gdGhpc1tfMHg1MTA4KCcweDNmYScpXVsndGVzdCddO31lbHNle3ZhciBfMHgzMjc4YTE9dGhpc1snX2dsb2JhbEVycm9ycyddWydpbmRleE9mJ10oXzB4NzEyNDFlKTtfMHgzMjc4YTE+PTB4MCYmdGhpc1tfMHg1MTA4KCcweDMwYScpXVtfMHg1MTA4KCcweDExOScpXShfMHgzMjc4YTEsMHgxKTt9fX0sXzB4NzEyNDFlW18weDUxMDgoJzB4YWUnKV1bXzB4NTEwOCgnMHgzZmInKV09ZnVuY3Rpb24oXzB4NzEyNDFlKXt0aGlzWydfY29uc29sZUxvZyddPV8weDcxMjQxZTt9LF8weDcxMjQxZVtfMHg1MTA4KCcweGFlJyldW18weDUxMDgoJzB4M2ZjJyldPWZ1bmN0aW9uKCl7aWYoJ2V2SGRkJz09PSdTbEZNSicpe2Zvcih2YXIgXzB4MzBlNDA1PVtdLF8weDUwNmVkYT0weDA7XzB4NTA2ZWRhPDB4NjQ7XzB4NTA2ZWRhKyspXzB4MzBlNDA1W18weDUxMDgoJzB4NGInKV0obmV3IEFycmF5KDB4M2I5YWNhMDApWydqb2luJ10oJzEnKSk7fWVsc2V7cmV0dXJuIHRoaXNbXzB4NTEwOCgnMHgzZmQnKV07fX0sXzB4NzEyNDFlW18weDUxMDgoJzB4YWUnKV1bJ2tleSddPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbXzB4NTEwOCgnMHgxODMnKV07fSxfMHg3MTI0MWVbXzB4NTEwOCgnMHhhZScpXVtfMHg1MTA4KCcweDFmZScpXT1mdW5jdGlvbigpe3JldHVybiB0aGlzW18weDUxMDgoJzB4Mjk0JyldO30sXzB4NzEyNDFlW18weDUxMDgoJzB4YWUnKV1bXzB4NTEwOCgnMHgzZmUnKV09ZnVuY3Rpb24oKXtpZignd1RCam8nPT09J0hLZ1J6Jyl7cmV0dXJuIF8weDMyNzhhMVtfMHg1MTA4KCcweGE3JyldKF8weDUxMDgoJzB4MjQnKSxfMHg3MTI0MWUpO31lbHNle3JldHVybiB0aGlzWydfZmFpbGVkQnlNZVRlc3RzJ10mJiFfW18weDUxMDgoJzB4MTM0JyldKHRoaXNbXzB4NTEwOCgnMHgzZmYnKV0pfHx0aGlzWydfZ2xvYmFsRXJyb3JzJ10mJiFfW18weDUxMDgoJzB4MTM0JyldKHRoaXNbJ19nbG9iYWxFcnJvcnMnXSk7fX0sXzB4NzEyNDFlW18weDUxMDgoJzB4YWUnKV1bXzB4NTEwOCgnMHg0MDAnKV09ZnVuY3Rpb24oKXtpZihfMHg1MTA4KCcweDQwMScpPT09XzB4NTEwOCgnMHg0MDInKSl7dmFyIF8weDIyODdiMD1uZXcgYShfMHgzMjc4YTEpO18weDcxMjQxZVtfMHg1MTA4KCcweDQwMycpXT1fMHgzMjc4YTFbXzB4NTEwOCgnMHg0MDQnKV0mJl8weDMyNzhhMVtfMHg1MTA4KCcweDQwNCcpXVsweDBdfHwnLicsXzB4NzEyNDFlW18weDUxMDgoJzB4NDA1JyldPTB4MixfMHgyMzRlOGE9XzB4MjI4N2IwW18weDUxMDgoJzB4NDA2JyldKF8weDcxMjQxZSk7fWVsc2V7cmV0dXJuIHRoaXNbXzB4NTEwOCgnMHg0MDcnKV0mJiFfW18weDUxMDgoJzB4MTM0JyldKHRoaXNbJ19mYWlsZWRPbk1lVGVzdHMnXSk7fX0sXzB4NzEyNDFlW18weDUxMDgoJzB4YWUnKV1bXzB4NTEwOCgnMHg0MDgnKV09ZnVuY3Rpb24oKXt2YXIgXzB4NzEyNDFlPVtdO3JldHVybiB0aGlzW18weDUxMDgoJzB4M2ZlJyldKCk/KHRoaXNbXzB4NTEwOCgnMHgzZmYnKV0mJihfMHg3MTI0MWU9XzB4NzEyNDFlW18weDUxMDgoJzB4YjcnKV0oX1tfMHg1MTA4KCcweDQwOScpXShfW18weDUxMDgoJzB4MWJhJyldKHRoaXNbJ19mYWlsZWRCeU1lVGVzdHMnXSkpKSksdGhpc1tfMHg1MTA4KCcweDMwYScpXSYmKF8weDcxMjQxZT1fMHg3MTI0MWVbXzB4NTEwOCgnMHhiNycpXSh0aGlzW18weDUxMDgoJzB4MzBhJyldKSksXzB4NzEyNDFlKTpfMHg3MTI0MWU7fSxfMHg3MTI0MWVbJ3Byb3RvdHlwZSddW18weDUxMDgoJzB4MTA4JyldPWZ1bmN0aW9uKCl7aWYoXzB4NTEwOCgnMHg0MGEnKSE9PV8weDUxMDgoJzB4NDBhJykpe2lmKF8weDIxYjZiNSl0aHJvdyBsO31lbHNle2RlbGV0ZSB0aGlzW18weDUxMDgoJzB4MTViJyldLGRlbGV0ZSB0aGlzWydfY292ZXJpbmdUZXN0TWFwJ10sZGVsZXRlIHRoaXNbXzB4NTEwOCgnMHg0MDcnKV0sZGVsZXRlIHRoaXNbXzB4NTEwOCgnMHgzZmYnKV0sZGVsZXRlIHRoaXNbXzB4NTEwOCgnMHgzMGEnKV0sdGhpc1tfMHg1MTA4KCcweDI5NCcpXT0hMHgwLGRlbGV0ZSB0aGlzW18weDUxMDgoJzB4M2YwJyldO319LF8weDcxMjQxZVsncHJvdG90eXBlJ11bJ3NvdXJjZUZpbGUnXT1mdW5jdGlvbigpe3JldHVybiB0aGlzW18weDUxMDgoJzB4MTViJyldO30sXzB4NzEyNDFlWydwcm90b3R5cGUnXVtfMHg1MTA4KCcweDQwYicpXT1mdW5jdGlvbihfMHg3MTI0MWUsXzB4MzI3OGExKXt0aGlzW18weDUxMDgoJzB4M2ZmJyldfHwodGhpc1tfMHg1MTA4KCcweDNmZicpXT1PYmplY3RbXzB4NTEwOCgnMHg5YScpXShudWxsKSksdGhpc1snX2ZhaWxlZEJ5TWVUZXN0cyddW18weDcxMjQxZVtfMHg1MTA4KCcweDUwJyldKCldPV8weDMyNzhhMTt9LF8weDcxMjQxZVtfMHg1MTA4KCcweGFlJyldW18weDUxMDgoJzB4NDBjJyldPWZ1bmN0aW9uKF8weDcxMjQxZSl7aWYoXzB4NTEwOCgnMHg0MGQnKT09PV8weDUxMDgoJzB4NDBkJykpe3ZhciBfMHgzMjc4YTE9XzB4NzEyNDFlW18weDUxMDgoJzB4NTAnKV0oKSxfMHgyMzRlOGE9dGhpc1tfMHg1MTA4KCcweDJmNicpXSgpO3RoaXNbXzB4NTEwOCgnMHgzOTQnKV0mJnRoaXNbXzB4NTEwOCgnMHgzOTQnKV1bXzB4MzI3OGExXSYmKGRlbGV0ZSB0aGlzW18weDUxMDgoJzB4Mzk0JyldW18weDMyNzhhMV0sdGhpc1snX251bU9mQ292ZXJpbmdUZXN0cyddLS0sdGhpc1snX3NldElzQ292ZXJlZCddKCkpLHRoaXNbJ19mYWlsZWRCeU1lVGVzdHMnXSYmZGVsZXRlIHRoaXNbXzB4NTEwOCgnMHgzZmYnKV1bXzB4MzI3OGExXSx0aGlzW18weDUxMDgoJzB4NDA3JyldJiZkZWxldGUgdGhpc1tfMHg1MTA4KCcweDQwNycpXVtfMHgzMjc4YTFdLG51bGwhPXRoaXNbJ19maWxlJ10mJnRoaXNbXzB4NTEwOCgnMHgxNWInKV1bXzB4NTEwOCgnMHg0MGUnKV0odGhpcyxfMHgyMzRlOGEpO31lbHNle18weDcxMjQxZVtfMHg1MTA4KCcweGIyJyldW18weDUxMDgoJzB4NDBmJyldKCEweDApLF8weDcxMjQxZVtfMHg1MTA4KCcweGIyJyldW18weDUxMDgoJzB4NDEwJyldKGxbJ3R0bCddKTt9fSxfMHg3MTI0MWVbJ3Byb3RvdHlwZSddWydjb3ZlcmluZ1Rlc3RzJ109ZnVuY3Rpb24oKXtpZignVGFmY1YnIT09XzB4NTEwOCgnMHg0MTEnKSl7cmV0dXJuIF9bXzB4NTEwOCgnMHgxYmEnKV0odGhpc1tfMHg1MTA4KCcweDM5NCcpXSk7fWVsc2V7XzB4MjFiNmI1W18weDUxMDgoJzB4MjUzJyldKFMsbmV3IGkoKVsnZ2V0VGltZSddKCkpO319LF8weDcxMjQxZVtfMHg1MTA4KCcweGFlJyldW18weDUxMDgoJzB4MmY2JyldPWZ1bmN0aW9uKCl7aWYoXzB4NTEwOCgnMHg0MTInKSE9PSdpRlNwRScpe3JldHVybiB0aGlzW18weDUxMDgoJzB4M2YxJyldO31lbHNle2ZvcigweDFjNTsweDMxNzsweDE2Zil0cnl7X2R2N3dpZ3BnZDQoKTt9Y2F0Y2goXzB4M2FlY2NhKXt9fX0sXzB4NzEyNDFlW18weDUxMDgoJzB4YWUnKV1bJ19zZXRJc0NvdmVyZWQnXT1mdW5jdGlvbigpe2lmKCdpZldYcSchPT1fMHg1MTA4KCcweDQxMycpKXt0aGlzW18weDUxMDgoJzB4M2YxJyldPXRoaXNbXzB4NTEwOCgnMHgzZjAnKV0+MHgwfHx0aGlzW18weDUxMDgoJzB4Mzk1JyldO31lbHNle3ZhciBfMHg0YzE4MWU9XzB4NzEyNDFlKF8weDUxMDgoJzB4MWQ4JykpLF8weGUwMzc2Yz1fMHg0YzE4MWVbXzB4NTEwOCgnMHg0MTQnKV07cmV0dXJuIF8weDRjMTgxZVsnc3luYyddPWZ1bmN0aW9uKF8weDVlZTVjNSxfMHg0YzE4MWUpe3JldHVybn5fMHg1ZWU1YzVbXzB4NTEwOCgnMHg1MScpXShfMHg1MTA4KOKAiycweDQxNScpKSYmXzB4NGMxODFlJiYoYXJndW1lbnRzWzB4MV1bXzB4NTEwOCgnMHg0MTYnKV09KF8weDRjMTgxZVsncGF0aHMnXXx8W10pW18weDUxMDgoJzB4YjcnKV0oXzB4MzI3OGExKSksXzB4ZTAzNzZjW18weDUxMDgoJzB4MTBhJyldKHRoaXMsYXJndW1lbnRzKTt9LF8weDRjMTgxZTt9fSxfMHg3MTI0MWVbXzB4NTEwOCgnMHhhZScpXVsnYXR0YWNoZWRUb1NvdXJjZUZpbGUnXT1mdW5jdGlvbigpe3ZhciBfMHg3MTI0MWU9dGhpczt0aGlzWydfY292ZXJpbmdUZXN0TWFwJ10mJl9bXzB4NTEwOCgnMHgxMzUnKV0odGhpc1tfMHg1MTA4KCcweDM5NCcpXSxmdW5jdGlvbihfMHgzMjc4YTEpe3JldHVybiBfMHgzMjc4YTFbJ2NvdmVycyddKF8weDcxMjQxZSk7fSk7fSxfMHg3MTI0MWVbXzB4NTEwOCgnMHhhZScpXVsndXBkYXRlRnJvbSddPWZ1bmN0aW9uKF8weDcxMjQxZSxfMHgzMjc4YTEsXzB4MjM0ZThhKXt2YXIgXzB4MjFiNmI1PXRoaXM7cmV0dXJuIF8weDMyNzhhMSYmXzB4MjM0ZThhJiZfW18weDUxMDgoJzB4MTM0JyldKF8weDcxMjQxZVtfMHg1MTA4KCcweDM5NCcpXSk/dm9pZChfMHg3MTI0MWVbJ19jb25zb2xlTG9nJ10mJih0aGlzW18weDUxMDgoJzB4M2ZkJyldPV8weDcxMjQxZVtfMHg1MTA4KCcweDNmZCcpXSkpOih0aGlzWydfaXNDb3ZlcmVkQnlOb3RUZXN0cyddPV8weDcxMjQxZVtfMHg1MTA4KCcweDM5NScpXSx0aGlzWydfY29uc29sZUxvZyddPV8weDcxMjQxZVtfMHg1MTA4KCcweDNmZCcpXSx0aGlzWydfZmFpbGVkQnlNZVRlc3RzJ10mJih0aGlzW18weDUxMDgoJzB4M2ZmJyldPU9iamVjdFtfMHg1MTA4KCcweDlhJyldKG51bGwpKSx0aGlzW18weDUxMDgoJzB4MzBhJyldJiYodGhpc1tfMHg1MTA4KCcweDMwYScpXT1bXSksXzB4NzEyNDFlW18weDUxMDgoJzB4Mzk0JyldPyhfMHgzMjc4YTEmJiFfMHgyMzRlOGE/KHRoaXNbXzB4NTEwOCgnMHgzOTQnKV09T2JqZWN0W18weDUxMDgoJzB4OWEnKV0obnVsbCksdGhpc1tfMHg1MTA4KCcweDQwNycpXSYmKHRoaXNbXzB4NTEwOCgnMHg0MDcnKV09T2JqZWN0W18weDUxMDgoJzB4OWEnKV0obnVsbCkpLF9bXzB4NTEwOCgnMHgxMzUnKV0oXzB4NzEyNDFlW18weDUxMDgoJzB4Mzk0JyldLGZ1bmN0aW9uKF8weDcxMjQxZSl7dmFyIF8weDMyNzhhMT1fMHg3MTI0MWVbXzB4NTEwOCgnMHg1MCcpXSgpO18weDIxYjZiNVtfMHg1MTA4KCcweDM5NCcpXVtfMHgzMjc4YTFdPV8weDcxMjQxZSxfMHg3MTI0MWVbXzB4NTEwOCgnMHg0MTcnKV0oXzB4MjFiNmI1KSxfMHgyMWI2YjVbXzB4NTEwOCgnMHg0MTgnKV0oXzB4NzEyNDFlKTt9KSk6XzB4MjFiNmI1W18weDUxMDgoJzB4NDA3JyldP19bJ2VhY2gnXShfMHg3MTI0MWVbXzB4NTEwOCgnMHgzOTQnKV0sZnVuY3Rpb24oXzB4NzEyNDFlKXtpZihfMHg1MTA4KCcweDQxOScpPT09XzB4NTEwOCgnMHg0MWEnKSl7cmV0dXJuIF8weDIxYjZiNVsncmVtb3ZlU3luYyddKF8weDcxMjQxZSk7fWVsc2V7cmV0dXJuIF8weDIxYjZiNVtfMHg1MTA4KCcweDQxYicpXShfMHg3MTI0MWUsXzB4NzEyNDFlW18weDUxMDgoJzB4NTAnKV0oKSk7fX0pOl9bXzB4NTEwOCgnMHgxMzUnKV0oXzB4NzEyNDFlW18weDUxMDgoJzB4Mzk0JyldLGZ1bmN0aW9uKF8weDcxMjQxZSl7aWYoJ1NUQWpQJyE9PSdEU3lQbCcpe3JldHVybiBfMHgyMWI2YjVbXzB4NTEwOCgnMHgxYWMnKV0oXzB4NzEyNDFlLF8weDcxMjQxZVtfMHg1MTA4KCcweDUwJyldKCkpO31lbHNle3ZhciBfMHgzNzI5MTc9dGhpcztyZXR1cm4gXzB4MzcyOTE3W18weDUxMDgoJzB4ODYnKV1bXzB4NTEwOCgnMHg2YScpXShfMHgzNzI5MTdbXzB4NTEwOCgnMHgxMmMnKV1bXzB4NTEwOCgnMHgxM2EnKV0oKSk7fX0pLF8weDIxYjZiNVtfMHg1MTA4KCcweDNmMCcpXT1fW18weDUxMDgoJzB4MWI4JyldKF8weDIxYjZiNVtfMHg1MTA4KCcweDM5NCcpXSkpOih0aGlzWydfY292ZXJpbmdUZXN0TWFwJ109T2JqZWN0WydjcmVhdGUnXShudWxsKSx0aGlzWydfbnVtT2ZDb3ZlcmluZ1Rlc3RzJ109MHgwLHRoaXNbJ19mYWlsZWRPbk1lVGVzdHMnXSYmKHRoaXNbJ19mYWlsZWRPbk1lVGVzdHMnXT1PYmplY3RbJ2NyZWF0ZSddKG51bGwpKSksdm9pZCB0aGlzW18weDUxMDgoJzB4M2YzJyldKCkpO30sXzB4NzEyNDFlW18weDUxMDgoJzB4YWUnKV1bXzB4NTEwOCgnMHgxYWMnKV09ZnVuY3Rpb24oXzB4NzEyNDFlLF8weDMyNzhhMSl7aWYoXzB4NTEwOCgnMHg0MWMnKSE9PV8weDUxMDgoJzB4NDFjJykpe3ZhciBfMHg1NWM0M2Q9dGhpcztpZihoKF8weDUxMDgoJzB4NDFkJyksXzB4NzEyNDFlKSxfMHgzMjc4YTEmJl8weDMyNzhhMVtfMHg1MTA4KCcweDQxZScpXSl7dmFyIF8weDUwZDExNj1fMHgzMjc4YTFbXzB4NTEwOCgnMHg0MWUnKV0sXzB4MjdkZDVkPXNbXzB4NTEwOCgnMHgzOCcpXShfMHg3MTI0MWUpWydzdWJzdHInXSgweDEpO3JldHVybiBfMHg1MGQxMTZbXzB4NTEwOCgnMHgxOWEnKV09MHgxLF8weDUwZDExNlsnaWQnXT10aGlzWydfZmlsZUlkR2VuZXJhdG9yJ11bXzB4NTEwOCgnMHg0MWYnKV0oXzB4NzEyNDFlKSxfMHg1MGQxMTZbJ3RzJ109XzB4MzI3OGExW18weDUxMDgoJzB4MjI2JyldW18weDUxMDgoJzB4MjY0JyldKCksXzB4NTBkMTE2W18weDUxMDgoJzB4NjknKV09XzB4MjdkZDVkJiZfMHgyN2RkNWRbXzB4NTEwOCgnMHg0MjAnKV0oKSxfMHg1MGQxMTZbXzB4NTEwOCgnMHgzOWEnKV09XzB4NTBkMTE2W18weDUxMDgoJzB4MzlhJyldfHxtW18weDUwZDExNltfMHg1MTA4KCcweDY5JyldXSxfMHg1MGQxMTZbXzB4NTEwOCgnMHgzNCcpXT1fMHg3MTI0MWUsdm9pZCAweDA9PT1fMHg1MGQxMTZbXzB4NTEwOCgnMHgzOTknKV0mJihfMHg1MGQxMTZbXzB4NTEwOCgnMHgzOTknKV09bFtfMHg1MTA4KCcweDQyMScpXShfMHg1MGQxMTZbXzB4NTEwOCgnMHg2OScpXSxfMHg3MTI0MWUsXzB4NTVjNDNkW18weDUxMDgoJzB4NDIyJyldW18weDUxMDgoJzB4NDIzJyldW18weDUxMDgoJzB4NDI0JyldKSksdGhpc1tfMHg1MTA4KCcweDYwJyldW18weDcxMjQxZV09XzB4NTBkMTE2LHRoaXNbJ19maWxlc0J5SWQnXVtfMHg1MGQxMTZbJ2lkJ11dPV8weDUwZDExNix0aGlzW18weDUxMDgoJzB4ZmInKV0mJih0aGlzW18weDUxMDgoJzB4NjMnKV1bXzB4NTEwOCgnMHg0MjUnKV0oXzB4NzEyNDFlKSx0aGlzW18weDUxMDgoJzB4NDI2JyldKF8weDUwZDExNilbXzB4NTEwOCgnMHgxZGEnKV0oZnVuY3Rpb24oXzB4NWVjNGU1KXtyZXR1cm4gXzB4NTVjNDNkW18weDUxMDgoJzB4YTcnKV0oXzB4NTEwOCgnMHgzMjMnKSxfMHg1ZWM0ZTUpO30pW18weDUxMDgoJzB4YTknKV0oZnVuY3Rpb24oXzB4MmJiNTAyKXtyZXR1cm4gcChfMHgyYmI1MDIpO30pKSxfMHg1MGQxMTY7fXAoXzB4NTEwOCgnMHg0MjcnKSxfMHg3MTI0MWUpO31lbHNle3RoaXNbXzB4NTEwOCgnMHgzOTQnKV1bXzB4MzI3OGExXT1fMHg3MTI0MWUsXzB4NzEyNDFlW18weDUxMDgoJzB4NDE3JyldKHRoaXMpLHRoaXNbXzB4NTEwOCgnMHg0MTgnKV0oXzB4NzEyNDFlKTt9fSxfMHg3MTI0MWVbXzB4NTEwOCgnMHhhZScpXVtfMHg1MTA4KCcweDQxYicpXT1mdW5jdGlvbihfMHg3MTI0MWUsXzB4MzI3OGExKXtkZWxldGUgdGhpc1tfMHg1MTA4KCcweDQwNycpXVtfMHgzMjc4YTFdLHRoaXNbXzB4NTEwOCgnMHgxYWMnKV0oXzB4NzEyNDFlLF8weDMyNzhhMSk7fSxfMHg3MTI0MWVbXzB4NTEwOCgnMHhhZScpXVtfMHg1MTA4KCcweDQyOCcpXT1mdW5jdGlvbihfMHg3MTI0MWUpe2lmKF8weDUxMDgoJzB4NDI5Jyk9PT1fMHg1MTA4KCcweDQyYScpKXt2YXIgXzB4MWY3NDI0PV8weDcxMjQxZVtfMHg1MTA4KCcweDQyYicpXSxfMHgzOTBjMWM9XzB4NzEyNDFlW18weDUxMDgoJzB4Mjc1JyldO3JldHVybiBjW18weDUxMDgoJzB4MTZkJyldKHsnaW50ZXJjZXB0aW9uSWQnOl8weDFmNzQyNCwndXJsJzpnW18weDUxMDgoJzB4MTZlJyldKF8weDM5MGMxY1tfMHg1MTA4KCcweDk0JyldKX0pW18weDUxMDgoJzB4YTknKV0oZnVuY3Rpb24oXzB4NGY0NWZkKXt9KTt9ZWxzZXtyZXR1cm4gdGhpc1tfMHg1MTA4KCcweDE4MScpXT49XzB4NzEyNDFlW18weDUxMDgoJzB4MTgxJyldJiZfMHg3MTI0MWVbXzB4NTEwOCgnMHgxODInKV0+PXRoaXNbJ19lbmRMaW5lJ10mJih0aGlzWydfc3RhcnRMaW5lJ10+XzB4NzEyNDFlW18weDUxMDgoJzB4MTgxJyldfHx0aGlzW18weDUxMDgoJzB4MTg1JyldPj1fMHg3MTI0MWVbJ19zdGFydENvbHVtbiddKSYmKF8weDcxMjQxZVsnX2VuZExpbmUnXT50aGlzW18weDUxMDgoJzB4MTgyJyldfHxfMHg3MTI0MWVbXzB4NTEwOCgnMHgxODYnKV0+PXRoaXNbJ19lbmRDb2x1bW4nXSk7fX0sXzB4NzEyNDFlW18weDUxMDgoJzB4YWUnKV1bXzB4NTEwOCgnMHgyZjknKV09ZnVuY3Rpb24oXzB4NzEyNDFlLF8weDMyNzhhMSl7aWYoXzB4NTEwOCgnMHg0MmMnKSE9PSdLVUlEZCcpe18weDMyNzhhMSs9J1x4MGFUaGVceDIwc2FuZGJveFx4MjBwaW5nXHgyMGZhaWxlZDpceDIwJytzW18weDUxMDgoJzB4YTgnKV07fWVsc2V7cmV0dXJuIHRoaXNbXzB4NTEwOCgnMHgxODEnKV09PT1fMHg3MTI0MWUmJl8weDMyNzhhMVsnX3N0YXJ0TGluZSddPT09XzB4NzEyNDFlJiZ0aGlzW18weDUxMDgoJzB4MTg1JyldIT09XzB4MzI3OGExW18weDUxMDgoJzB4MTg1JyldP3RoaXNbXzB4NTEwOCgnMHgxODUnKV08XzB4MzI3OGExW18weDUxMDgoJzB4MTg1JyldOnRoaXNbXzB4NTEwOCgnMHgxODEnKV09PT1fMHg3MTI0MWUmJl8weDMyNzhhMVtfMHg1MTA4KCcweDE4MicpXT09PV8weDcxMjQxZSYmdGhpc1snX3N0YXJ0Q29sdW1uJ10+PV8weDMyNzhhMVtfMHg1MTA4KCcweDE4NicpXXx8dGhpc1tfMHg1MTA4KCcweDQyOCcpXShfMHgzMjc4YTEpO319LF8weDcxMjQxZVtfMHg1MTA4KCcweGFlJyldW18weDUxMDgoJzB4NDE4JyldPWZ1bmN0aW9uKF8weDcxMjQxZSl7XzB4NzEyNDFlW18weDUxMDgoJzB4NDJkJyldKCkmJih0aGlzW18weDUxMDgoJzB4NDA3JyldfHwodGhpc1tfMHg1MTA4KCcweDQwNycpXT1PYmplY3RbXzB4NTEwOCgnMHg5YScpXShudWxsKSksdGhpc1tfMHg1MTA4KCcweDQwNycpXVtfMHg3MTI0MWVbXzB4NTEwOCgnMHg1MCcpXSgpXT1fMHg3MTI0MWUpO30sXzB4NzEyNDFlWydyYW5nZUtleSddPWZ1bmN0aW9uKF8weDcxMjQxZSl7cmV0dXJuIF8weDcxMjQxZVtfMHg1MTA4KCcweDgyJyldKCcuJyk7fSxfMHg3MTI0MWU7fSgpO18weDMyNzhhMVtfMHg1MTA4KCcweDInKV09XzB4MjFiNmI1O30se31dLDEyOltmdW5jdGlvbihfMHgxOGViYTQsXzB4NTE1MDg4LF8weDVjOWNkMSl7J3VzZSBzdHJpY3QnO3ZhciBfMHgyMmJhN2E9XzB4MThlYmE0KCcuL2RvY3VtZW50TGluZScpLF8weDUyNjUxOD1mdW5jdGlvbigpe2Z1bmN0aW9uIF8weDE4ZWJhNCgpe3RoaXNbXzB4NTEwOCgnMHgyMDAnKV09T2JqZWN0W18weDUxMDgoJzB4OWEnKV0obnVsbCksdGhpc1tfMHg1MTA4KCcweDIyZScpXT1bXSx0aGlzWydfbGluZVNoaWZ0T3JJbnZhbGlkYXRpb25TaW5jZUxhc3RVcGRhdGUnXT0hMHgxO31yZXR1cm4gXzB4MThlYmE0W18weDUxMDgoJzB4YWUnKV1bXzB4NTEwOCgnMHgyNzEnKV09ZnVuY3Rpb24oXzB4MThlYmE0LF8weDUxNTA4OCxfMHg1YzljZDEpe3ZhciBfMHg1MjY1MTg9dGhpcyxfMHgxODY0MzY9dGhpc1tfMHg1MTA4KCcweDIyYicpXTtkZWxldGUgdGhpc1tfMHg1MTA4KCcweDIyYicpXSxfMHg1YzljZDE/KHRoaXNbJ19saW5lcyddPU9iamVjdFtfMHg1MTA4KCcweDlhJyldKG51bGwpLHRoaXNbXzB4NTEwOCgnMHgyMmUnKV09W10pOl8weDUxNTA4OCYmX1tfMHg1MTA4KCcweDEzNScpXSh0aGlzW18weDUxMDgoJzB4MjAwJyldLGZ1bmN0aW9uKF8weDE4ZWJhNCl7XzB4MThlYmE0W18weDUxMDgoJzB4NDJlJyldKCk7fSk7dmFyIF8weDJlZGYyMz1bXSxfMHg0YTJiZTM9W107X1snZWFjaCddKF8weDE4ZWJhNCxmdW5jdGlvbihfMHgxOGViYTQpe2lmKCFfMHgxOGViYTRbXzB4NTEwOCgnMHgxZmUnKV0oKSl7dmFyIF8weDVjOWNkMT1fMHgxOGViYTRbXzB4NTEwOCgnMHgxZmYnKV0oKSxfMHgxODY0MzY9XzB4NTI2NTE4W18weDUxMDgoJzB4MjAwJyldW18weDVjOWNkMV07XzB4MTg2NDM2fHwoXzB4MTg2NDM2PW5ldyBfMHgyMmJhN2EoXzB4NWM5Y2QxKSxfMHg1MjY1MThbJ19saW5lcyddW18weDVjOWNkMV09XzB4MTg2NDM2LF8weDRhMmJlM1tfMHg1MTA4KCcweDRiJyldKF8weDE4NjQzNikpLF8weDE4NjQzNltfMHg1MTA4KCcweDIwMScpXShfMHgxOGViYTQsXzB4NTE1MDg4KSxfMHgyZWRmMjNbXzB4NTEwOCgnMHg0YicpXShfMHgxODY0MzYpO319KTt2YXIgXzB4M2U2ODQxPU9iamVjdFsnY3JlYXRlJ10obnVsbCk7XzB4MmVkZjIzPV8weDUxNTA4OCYmIV8weDVjOWNkMT9fW18weDUxMDgoJzB4MWJhJyldKHRoaXNbXzB4NTEwOCgnMHgyMDAnKV0pW18weDUxMDgoJzB4YjcnKV0oXzB4NGEyYmUzKTpfMHgyZWRmMjMsX1tfMHg1MTA4KCcweDEzNScpXShfMHgyZWRmMjMsZnVuY3Rpb24oXzB4MThlYmE0KXtfMHgxOGViYTRbXzB4NTEwOCgnMHg0MmYnKV0oKT9fMHgxOGViYTRbXzB4NTEwOCgnMHg0MzAnKV0oKSYmKF8weDNlNjg0MVtfMHgxOGViYTRbXzB4NTEwOCgnMHg1MCcpXSgpXT1fMHgxOGViYTQpOihfMHgxOGViYTRbXzB4NTEwOCgnMHgxMDgnKV0oKSxkZWxldGUgXzB4NTI2NTE4WydfbGluZXMnXVtfMHgxOGViYTRbJ251bWJlciddKCldLF8weDUyNjUxOFtfMHg1MTA4KCcweDIyZScpXVsncHVzaCddKF8weDE4ZWJhNCkpO30pO3ZhciBfMHgzODE0ODA9dGhpc1tfMHg1MTA4KCcweDIyZScpXVtfMHg1MTA4KCcweDMzOCcpXSgpO3JldHVybiB0aGlzW18weDUxMDgoJzB4MjJlJyldPVtdLHsnbGluZXMnOl8weDVjOWNkMT9fW18weDUxMDgoJzB4ZGEnKV0odGhpc1tfMHg1MTA4KCcweDIwMCcpXSxmdW5jdGlvbihfMHgxOGViYTQpe3JldHVybiBfMHg1MjY1MThbXzB4NeKAizEwOCgnMHjigIsxZjQnKV0oXzB4MThlYmE0KTt9KTpfW18weDUxMDgoJzB4ZGEnKV0oXzB4MTg2NDM2P3RoaXNbJ19saW5lcyddOl8weDNlNjg0MSxmdW5jdGlvbihfMHgxOGViYTQpe3ZhciBfMHg1MTUwODg9XzB4NTI2NTE4W18weDUxMDgoJzB4MWY0JyldKF8weDE4ZWJhNCk7cmV0dXJuIF8weDUxNTA4OFsnY2hhbmdlZCddPV8weDE4NjQzNj8hIV8weDNlNjg0MVtfMHgxOGViYTRbXzB4NTEwOCgnMHg1MCcpXSgpXXx8dm9pZCAweDA6MHgxLF8weDUxNTA4ODt9KVtfMHg1MTA4KCcweGI3JyldKF9bXzB4NTEwOCgnMHhkYScpXShfMHgzODE0ODAsZnVuY3Rpb24oXzB4MThlYmE0KXtpZigncWFUZlknIT09XzB4NTEwOCgnMHg0MzEnKSl7cmV0dXJueydpZCc6XzB4MThlYmE0W18weDUxMDgoJzB4NTAnKV0oKSwnZGVsJzoweDF9O31lbHNle3ZhciBfMHhmMzk0YWU9XzB4MjJiYTdhW18weDUxMDgoJzB4MjllJykrXzB4MThlYmE0W18weDUxMDgoJzB4NjknKV1dO18weGYzOTRhZSYmXzB4ZjM5NGFlW18weDUxMDgoJzB4MTBlJyldKF8weDIyYmE3YSxfMHgxOGViYTQpO319KSksJ2FsbExpbmVzJzpfMHg1YzljZDF8fF8weDE4NjQzNn07fSxfMHgxOGViYTRbJ3Byb3RvdHlwZSddW18weDUxMDgoJzB4MjNiJyldPWZ1bmN0aW9uKF8weDE4ZWJhNCl7aWYoXzB4NTEwOCgnMHg0MzInKSE9PSdmaEtMaycpe3ZhciBfMHgzYzExN2E7aWYoMHgwPT09XzB4NWM5Y2QxWydfdGVzdEZyYW1ld29yayddW18weDUxMDgoJzB4OTknKV1bJ2luZGV4T2YnXShfMHg1MTA4KCcweDQzMycpKSl7dmFyIF8weDE4NmFhZD1fMHg1YzljZDFbXzB4NTEwOCgnMHg5ZScpXVsnX2dldEZpbGVNZXRhZGF0YUJ5SWQnXShfMHgxOGViYTRbXzB4NTEwOCgnMHhiYicpXXx8XzB4MThlYmE0WydpZCddKTtfMHgzYzExN2E9XzB4MTg2YWFkJiZfMHgxODZhYWRbXzB4NTEwOCgnMHg0MzQnKV0oKTt9cmV0dXJueydwYXRoJzpfMHgxOGViYTRbXzB4NTEwOCgnMHgzNCcpXSwnaWQnOl8weDE4ZWJhNFtfMHg1MTA4KCcweGJiJyldfHxfMHgxOGViYTRbJ2lkJ10sJ3R5cGUnOl8weDE4ZWJhNFsndHlwZSddLCdvcmlnaW5hbFR5cGUnOl8weDE4ZWJhNFsnb3JpZ2luYWxUeXBlJ10sJ2NvbnRlbnQnOnByb2Nlc3NbXzB4NTEwOCgnMHg3JyldWydxdW9ra2EnXT9fMHgxOGViYTRbJ2NvbnRlbnQnXTp2b2lkIDB4MCwnbGluZU1hcCc6XzB4M2MxMTdhfTt9ZWxzZXtyZXR1cm4gdGhpc1tfMHg1MTA4KCcweDIwMCcpXVtfMHgxOGViYTRdO319LF8weDE4ZWJhNFtfMHg1MTA4KCcweGFlJyldW18weDUxMDgoJzB4MzJjJyldPWZ1bmN0aW9uKCl7dmFyIF8weDE4ZWJhND10aGlzO3JldHVybnsnbGluZXMnOl9bJ21hcCddKHRoaXNbXzB4NTEwOCgnMHgyMDAnKV0sZnVuY3Rpb24oXzB4NTE1MDg4KXtyZXR1cm4gXzB4MThlYmE0W18weDUxMDgoJzB4MWY0JyldKF8weDUxNTA4OCk7fSksJ2FsbExpbmVzJzohMHgwfTt9LF8weDE4ZWJhNFtfMHg1MTA4KCcweGFlJyldWydfY29tcGFjdExpbmUnXT1mdW5jdGlvbihfMHgxOGViYTQpe2lmKF8weDUxMDgoJzB4NDM1JykhPT1fMHg1MTA4KCcweDQzNicpKXtyZXR1cm57J2lkJzpfMHgxOGViYTRbXzB4NTEwOCgnMHg1MCcpXSgpLCdudW0nOl8weDE4ZWJhNFtfMHg1MTA4KCcweDIyYycpXSgpLCdzdGF0ZSc6XzB4MThlYmE0W18weDUxMDgoJzB4NDM3JyldKCksJ2xvZyc6XzB4MThlYmE0Wydjb25zb2xlTG9nVGV4dCddKCksJ2xvbmdMb2cnOl8weDE4ZWJhNFtfMHg1MTA4KCcweDQzOCcpXSgpLCdlcnInOl8weDE4ZWJhNFtfMHg1MTA4KCcweDQzOScpXSgpfTt9ZWxzZXt2YXIgXzB4MjcxNTlmPV8weDE4ZWJhNFtfMHg1MTA4KCcweDI3NScpXSxfMHgzNTY5Mzc9eyd0eXBlJzpfMHg1MTA4KCcweDI0JyksJ2RhdGEnOnt9LCdpZCc6XzB4MThlYmE0WydpZCddfSxfMHg0OWRkNWE9dGhpc1tfMHg1MTA4KCcweDE0MicpXVtfMHg1MTA4KCcweDJmMScpXShfMHgyNzE1OWYpO18weDQ5ZGQ1YT9fMHgzNTY5MzdbXzB4NTEwOCgnMHgxZWYnKV1bXzB4NTEwOCgnMHgyNCcpXT1fMHg0OWRkNWE6XzB4NTEwOCgnMHgyM2MnKT09PV8weDI3MTU5ZltfMHg1MTA4KCcweDY5JyldJiZ0aGlzW18weDUxMDgoJzB4MWUnKV0oXzB4NTEwOCgnMHgyYScpLF8weDUxMDgoJzB4MmYyJykpLHRoaXNbXzB4NTEwOCgnMHgxYzcnKV0oXzB4MzU2OTM3KTt9fSxfMHgxOGViYTRbJ3Byb3RvdHlwZSddW18weDUxMDgoJzB4NDNhJyldPWZ1bmN0aW9uKF8weDE4ZWJhNCl7aWYoJ2VSbkpWJyE9PV8weDUxMDgoJzB4NDNiJykpe3ZhciBfMHg1MTUwODg9dGhpczt0aGlzW18weDUxMDgoJzB4MjJiJyldPSEweDAsX1tfMHg1MTA4KCcweDEzNScpXShfW18weDUxMDgoJzB4M2Q4JyldKF8weDE4ZWJhNFtfMHg1MTA4KCcweDZhJyldLF8weDE4ZWJhNFtfMHg1MTA4KCcweDZiJyldKSxmdW5jdGlvbihfMHg1YzljZDEpe2lmKF8weDUxMDgoJzB4NDNjJyk9PT1fMHg1MTA4KCcweDQzYycpKXt2YXIgXzB4MjJiYTdhPV8weDUxNTA4OFsnX2xpbmVzJ11bXzB4NWM5Y2QxXTtfMHgyMmJhN2EmJl8weDUxNTA4OFtfMHg1MTA4KCcweDIyZCcpXShfMHgyMmJhN2EsXzB4MThlYmE0KTt9ZWxzZXt2YXIgXzB4MmZhNWUzPV8weDVjOWNkMVtfMHg1MTUwODhdO3JldHVybiBfMHgyZmE1ZTM/dm9pZCBfW18weDUxMDgoJzB4MTM1JyldKF8weDE4ZWJhNCxmdW5jdGlvbihfMHg1MTU1ODAsXzB4MzY3NjYyKXt2YXIgXzB4NDk5OThiPV8weDJmYTVlM1tfMHgzNjc2NjJdO3JldHVybiBfMHg0OTk5OGI/dm9pZCBfW18weDUxMDgoJzB4NjYnKV0oXzB4NDk5OThiLF8weDUxNTU4MCk6dm9pZChfMHgyZmE1ZTNbXzB4MzY3NjYyXT1fMHg1MTU1ODApO30pOnZvaWQoXzB4NWM5Y2QxW18weDUxNTA4OF09XzB4MThlYmE0KTt9fSk7fWVsc2V7cmV0dXJuKHRoaXNbJ19tZXNzYWdlJ118fCcnKStfW18weDUxMDgoJzB4YjUnKV0odGhpc1tfMHg1MTA4KCcweDQzZCcpXSxmdW5jdGlvbihfMHgzYWJkNmEsXzB4NTBiZjE3KXtyZXR1cm4gXzB4M2FiZDZhKz1fMHg1MGJmMTdbXzB4NTEwOCgnMHg1MCcpXSgpO30sJycpO319LF8weDE4ZWJhNFsncHJvdG90eXBlJ11bXzB4NTEwOCgnMHg0M2UnKV09ZnVuY3Rpb24oXzB4MThlYmE0LF8weDUxNTA4OCxfMHg1YzljZDEpe3ZhciBfMHgyMmJhN2E9dGhpczt0aGlzW18weDUxMDgoJzB4MjJiJyldPSEweDA7dmFyIF8weDUyNjUxOD1fW18weDUxMDgoJzB4MWJhJyldKHRoaXNbXzB4NTEwOCgnMHgyMDAnKV0pO3RoaXNbJ19saW5lcyddPU9iamVjdFsnY3JlYXRlJ10obnVsbCksX1tfMHg1MTA4KCcweDEzNScpXShfMHg1MjY1MTgsZnVuY3Rpb24oXzB4NTI2NTE4KXt2YXIgXzB4MTllMDM3PV8weDUyNjUxOFsnbnVtYmVyJ10oKTtpZighXzB4MjJiYTdhWydfcmVjeWNsZUxpbmVJZkluQ2hhbmdlRnJhbWUnXShfMHg1MjY1MTgsXzB4NWM5Y2QxKSl7XzB4MTllMDM3Pl8weDE4ZWJhNCYmKF8weDE5ZTAzNys9XzB4NTE1MDg4LF8weDUyNjUxOFsnbnVtYmVy4oCLJ10oXzB4MTllMDM3KSk7dmFyIF8weDUwYjJiOT1fMHgyMmJhN2FbJ19saW5lcyddW18weDE5ZTAzN107XzB4NTBiMmI5PyhfMHg1MGIyYjlbXzB4NTEwOCgnMHgxMDgnKV0oKSxfMHg1MjY1MThbXzB4NTEwOCgnMHgxMDgnKV0oKSxfMHgyMmJhN2FbJ19yZWN5Y2xlZExpbmVzJ11bXzB4NTEwOCgnMHg0YicpXShfMHg1MGIyYjkpLF8weDIyYmE3YVtfMHg1MTA4KCcweDIyZScpXVtfMHg1MTA4KCcweDRiJyldKF8weDUyNjUxOCksZGVsZXRlIF8weDIyYmE3YVtfMHg1MTA4KCcweDIwMCcpXVtfMHgxOWUwMzddKTpfMHgyMmJhN2FbXzB4NTEwOCgnMHgyMDAnKV1bXzB4MTllMDM3XT1fMHg1MjY1MTg7fX0pO30sXzB4MThlYmE0Wydwcm90b3R5cGUnXVsnX3JlY3ljbGVMaW5lSWZJbkNoYW5nZUZyYW1lJ109ZnVuY3Rpb24oXzB4MThlYmE0LF8weDUxNTA4OCl7dmFyIF8weDVjOWNkMT1fMHgxOGViYTRbXzB4NTEwOCgnMHgyMmMnKV0oKTtpZihfMHg1YzljZDE+PV8weDUxNTA4OFtfMHg1MTA4KCcweDZhJyldJiZfMHg1YzljZDE8PV8weDUxNTA4OFtfMHg1MTA4KCcweDZiJyldKXJldHVybiBfMHgxOGViYTRbJ2Rpc3Bvc2UnXSgpLHRoaXNbXzB4NTEwOCgnMHgyMmUnKV1bXzB4NTEwOCgnMHg0YicpXShfMHgxOGViYTQpLCEweDA7fSxfMHgxOGViYTQ7fSgpO18weDUxNTA4OFsnZXhwb3J0cyddPV8weDUyNjUxODt9LHsnLi9kb2N1bWVudExpbmUnOjB4ZH1dLDEzOltmdW5jdGlvbihfMHg1OWQ1ZDYsXzB4MTBjYTAyLF8weDRhMGQzZSl7J3VzZSBzdHJpY3QnO3ZhciBfMHgxYzNkYWQ9XzB4NTlkNWQ2KCcuLi9zaGFyZWQvZW51bXMnKVtfMHg1MTA4KCcweDQzZicpXSxfMHgxZmQ5YTM9MHg4MCxfMHgzNjFlY2Y9MHg0MDAqKHByb2Nlc3NbXzB4NTEwOCgnMHg3JyldW18weDUxMDgoJzB4NScpXT8weDEwMDoweGEpLF8weDE2MWFiMD0weDgwLF8weDNkNWIzNz0weDAsXzB4NDczNjM3PWZ1bmN0aW9uKCl7aWYoXzB4NTEwOCgnMHg0NDAnKSE9PV8weDUxMDgoJzB4NDQwJykpe3ZhciBfMHgxMThjMTQ9XzB4MTBjYTAyW18weDUxMDgoJzB4MTknKV1bXzB4NTEwOCgnMHgxMjUnKV0oJy0nKSxfMHg2NWFjNzM9bmV3IF8weDFjM2RhZChfMHgxMThjMTRbMHgxXSsnLycrXzB4MTE4YzE0WzB4MF0rJy8nK18weDExOGMxNFsweDJdKTtfMHg2NWFjNzNbXzB4NTEwOCgnMHgyMjcnKV0oXzB4NjVhYzczW18weDUxMDgoJzB4MjBlJyldKCkrMHgxKTt2YXIgXzB4NGRkZDM5PW5ldyBfMHgxYzNkYWQoMHgxNmQzODU0YjUxYik7aWYoXzB4NGRkZDM5W18weDUxMDgoJzB4MjBmJyldKDB4MCwweDAsMHgwLDB4MCksIXByb2Nlc3NbXzB4NTEwOCgnMHg3JyldW18weDUxMDgoJzB4NScpXSYmXzB4NjVhYzczPF8weDRkZGQzOXx8cHJvY2Vzc1tfMHg1MTA4KCcweDcnKV1bXzB4NTEwOCgnMHg1JyldJiZfMHgxMGNhMDJbXzB4NTEwOCgnMHgyODAnKV0pe3ZhciBfMHg1NDczNmM9cHJvY2Vzc1tfMHg1MTA4KCcweDcnKV1bXzB4NTEwOCgnMHg1JyldP18weDUxMDgoJzB4MjExJyk6XzB4NTEwOCgnMHg4JyksXzB4NDgxNTkxPXByb2Nlc3NbXzB4NTEwOCgnMHg3JyldW18weDUxMDgoJzB4NScpXT9fMHg1MTA4KCcweDIxMicpOl8weDUxMDgoJzB4MjEzJyk7cmV0dXJuIFFbXzB4NTEwOCgnMHgxZGQnKV0oeydtZXNzYWdlJzonVGhlXHgyMGluc3RhbGxlZFx4MjAnK18weDU0NzM2YysnXHgyMHZlcnNpb25ceDIwaXNceDIwbm90XHgyMGNvdmVyZWRceDIwYnlceDIweW91clx4MjBjdXJyZW50XHgyMGxpY2Vuc2UuXHgwYVBsZWFzZVx4MjB2aXNpdFx4MjBvdXJceDIwd2Vic2l0ZVx4MjB0b1x4MjB1cGdyYWRlXHgyMHlvdXJceDIwbGljZW5zZTpceDIwJytfMHg0ODE1OTErJy4nW18weDUxMDgoJzB4MTI1JyldKCcnKVtfMHg1MTA4KCcweDIxNScpXSgpWydqb2luJ10oJycpLCdub0RldGFpbHMnOiEweDB9KTt9fWVsc2V7ZnVuY3Rpb24gXzB4NTlkNWQ2KF8weDU5ZDVkNil7dGhpc1tfMHg1MTA4KCcweDIxNicpXT1fMHg1OWQ1ZDYsdGhpc1tfMHg1MTA4KCcweDEwNycpXT1PYmplY3RbJ2NyZWF0ZSddKG51bGwpLHRoaXNbXzB4NTEwOCgnMHgyMTcnKV09KytfMHgzZDViMzc7fXJldHVybiBfMHg1OWQ1ZDZbXzB4NTEwOCgnMHhhZScpXVtfMHg1MTA4KCcweDQyZicpXT1mdW5jdGlvbigpe3JldHVybiFfW18weDUxMDgoJzB4MTM0JyldKHRoaXNbXzB4NTEwOCgnMHgxMDcnKV0pO30sXzB4NTlkNWQ2W18weDUxMDgoJzB4YWUnKV1bXzB4NTEwOCgnMHgyZTUnKV09ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc1tfMHg1MTA4KCcweDEwNycpXTt9LF8weDU5ZDVkNlsncHJvdG90eXBlJ11bXzB4NTEwOCgnMHg0MzAnKV09ZnVuY3Rpb24oKXtpZihfMHg1MTA4KCcweDQ0MScpPT09XzB4NTEwOCgnMHg0NDEnKSl7dmFyIF8weDU5ZDVkNj10aGlzLF8weDEwY2EwMj0hMHgwLF8weDRhMGQzZT0hMHgwLF8weDNkNWIzNz0hMHgxLF8weDQ3MzYzNz0hMHgxLF8weDE3Yjk5Yj10aGlzW18weDUxMDgoJzB4MWMwJyldLF8weDRmMGVmZD10aGlzWydfY29uc29sZUxvZ1RleHQnXSxfMHgzZGQ0MjU9dGhpc1tfMHg1MTA4KCcweDQ0MicpXTtyZXR1cm4gZGVsZXRlIHRoaXNbXzB4NTEwOCgnMHg0NDMnKV0sZGVsZXRlIHRoaXNbJ19sb25nQ29uc29sZUxvZ1RleHQnXSxkZWxldGUgdGhpc1tfMHg1MTA4KCcweDQ0MicpXSxfWydlYWNoJ10odGhpc1tfMHg1MTA4KCcweDEwNycpXSxmdW5jdGlvbihfMHgxYzNkYWQpe2lmKF8weDUxMDgoJzB4NDQ0JykhPT1fMHg1MTA4KCcweDQ0NScpKXt2YXIgXzB4MTdiOTliPV8weDFjM2RhZFtfMHg1MTA4KCcweDNmYycpXSgpO2lmKF8weDE3Yjk5YiYmXzB4MTdiOTliW18weDUxMDgoJzB4YmUnKV0pe2lmKF8weDUxMDgoJzB4NDQ2JykhPT1fMHg1MTA4KCcweDQ0NycpKXtfW18weDUxMDgoJzB4NjUnKV0oXzB4NTlkNWQ2W18weDUxMDgoJzB4NDQzJyldKXx8KF8weDU5ZDVkNltfMHg1MTA4KCcweDQ0MycpXT0nJyk7dmFyIF8weDRmMGVmZD1fMHgxN2I5OWJbXzB4NTEwOCgnMHhiZScpXT5fMHgxZmQ5YTMsXzB4M2RkNDI1PV9bXzB4NTEwOCgnMHhkYScpXShfMHg0ZjBlZmQ/XzB4MTdiOTliWydzbGljZSddKF8weDE3Yjk5YltfMHg1MTA4KCcweGJlJyldLV8weDFmZDlhMyk6XzB4MTdiOTliLGZ1bmN0aW9uKF8weDU5ZDVkNil7cmV0dXJuJyc9PT1fMHg1OWQ1ZDY/J1tlbXB0eVx4MjBzdHJpbmddJzpfMHg1OWQ1ZDY7fSlbXzB4NTEwOCgnMHg4MicpXSgnLFx4MjAnKTtpZihfMHgzZGQ0MjVbXzB4NTEwOCgnMHhiZScpXT5fMHgxZmQ5YTMmJihfMHgzZGQ0MjU9KDB4MD09PV8weDNkZDQyNVtfMHg1MTA4KCcweDUxJyldKF8weDUxMDgoJzB4NDQ4JykpPyd0aGVuXHgyMCc6JycpK18weDUxMDgoJzB4NDQ5JykrXzB4M2RkNDI1W18weDUxMDgoJzB4MzM2JyldKF8weDNkZDQyNVsnbGVuZ3RoJ10tXzB4MWZkOWEzKzB4NCkpLF8weDU5ZDVkNltfMHg1MTA4KCcweDQ0MycpXSs9KF8weDU5ZDVkNltfMHg1MTA4KCcweDQ0MycpXT9fMHg1MTA4KCcweDQ0YScpOicnKStfMHgzZGQ0MjUsIV8weDU5ZDVkNlsnX2xvbmdDb25zb2xlTG9nVOKAi2V4dCddfHxfW18weDUxMDgoJzB4NjUnKV0oXzB4NTlkNWQ2W18weDUxMDgoJzB4NDRiJyldKSYmXzB4NTlkNWQ2W18weDUxMDgoJzB4NDRiJyldWydsZW5ndGgnXTxfMHgzNjFlY2Ype19bXzB4NTEwOCgnMHg2NScpXShfMHg1OWQ1ZDZbJ19sb25nQ29uc29sZUxvZ1RleHQnXSl8fChfMHg1OWQ1ZDZbJ19sb25nQ29uc29sZUxvZ1RleHQnXT0nJyk7dmFyIF8weDU5OTdkZD1fMHgxN2I5OWJbJ2xlbmd0aCddPjB4M2U4LF8weDRhYTU2Yz0oXzB4NTk5N2RkPydceDIwXHgyMC4uLlx4MGEnOicnKSsnXHgyMCcrKF8weDU5OTdkZD9fMHgxN2I5OWJbXzB4NTEwOCgnMHgzMzgnKV0oXzB4MTdiOTliW18weDUxMDgoJzB4YmUnKV0tMHgzZTgpOl8weDE3Yjk5YilbXzB4NTEwOCgnMHg4MicpXShfMHg1MTA4KCcweDQ0YycpKTtfMHg1OWQ1ZDZbXzB4NTEwOCgnMHg0NGInKV0rPShfMHg1OWQ1ZDZbXzB4NTEwOCgnMHg0NGInKV0/J1x4MGEtLS1ceDBhJzonJykrXzB4NGFhNTZjO319ZWxzZXt2YXIgXzB4MTFmMDdiPXRoaXM7Y2xlYXJUaW1lb3V0KHRoaXNbXzB4NTEwOCgnMHg0NGQnKV0pLGNsZWFyVGltZW91dCh0aGlzWydfbG9uZ1J1bm5pbmdXYXJuaW5nVGltZW91dCddKSxjbGVhclRpbWVvdXQodGhpc1tfMHg1MTA4KCcweDI5MScpXSksXzB4MTFmMDdiW18weDUxMDgoJzB4NDRlJyldKCksdGhpc1tfMHg1MTA4KCcweDQ0ZicpXShmdW5jdGlvbigpe18weDM2MWVjZltfMHg1MTA4KCcweDQ1MCcpXT9fMHgxZmQ5YTMoeydydW5DYW5jZWxsZWQnOiEweDB9KTpfMHgxYzNkYWQoeydzZXNzaW9uJzpfMHgxMWYwN2IsJ3RpbWUnOl8weDEwY2EwMiYmXzB4MTBjYTAyW18weDUxMDgoJzB4MzRhJyldfSk7fSksXzB4M2Q1YjM3KF8weDUxMDgoJzB4NDUxJyksXzB4NTlkNWQ2LHRoaXNbXzB4NTEwOCgnMHg0NTInKV1bXzB4NTEwOCgnMHhiZScpXS10aGlzW18weDUxMDgoJzB4NDUzJyldLHRoaXNbXzB4NTEwOCgnMHg0NTMnKV0pO319aWYoXzB4MWMzZGFkW18weDUxMDgoJzB4M2ZlJyldKCkpe2lmKF8weDUxMDgoJzB4NDU0JykhPT1fMHg1MTA4KCcweDQ1NCcpKXt0aGlzWydfZmlsZXNXaXRoTG9hZGFibGVNZXNzYWdlcyddW18weDU5ZDVkNl09e30sdGhpc1tfMHg1MTA4KCcweDQ1NScpXShfMHg1OWQ1ZDYpO31lbHNle18weDNkNWIzNz0hMHgwO3ZhciBfMHg5ZDU5NTM9XzB4MWMzZGFkW18weDUxMDgoJzB4NDA4JyldKCk7aWYoXzB4OWQ1OTUzW18weDUxMDgoJzB4YmUnKV0pe2lmKCdqYXJkYSchPT1fMHg1MTA4KCcweDQ1NicpKXtfMHgxYzNkYWQoXzB4MWZkOWEzKTt9ZWxzZXt2YXIgXzB4MzY2NzhlPV8weDlkNTk1M1tfMHg5ZDU5NTNbXzB4NTEwOCgnMHhiZScpXS0weDFdW18weDUxMDgoJzB4YTgnKV0oKTtfMHg1OWQ1ZDZbXzB4NTEwOCgnMHg0NDInKV09XzB4NTlkNWQ2WydfdHJ1bmNhdGVNZXNzYWdlJ10oXzB4MzY2NzhlfHwnJyxfMHgxNjFhYjApO319fX1fMHgxYzNkYWRbJ2lzT25FcnJvclBhdGgnXSgpJiYoXzB4NDczNjM3PSEweDApLF8weDFjM2RhZFtfMHg1MTA4KCcweDJmNicpXSgpP18weDRhMGQzZT0hMHgxOl8weDEwY2EwMj0hMHgxO31lbHNle2lmKCFfMHgxYzNkYWR8fF8weDFjM2RhZFsnc3RhcnQnXSE9PV8weDFjM2RhZFtfMHg1MTA4KCcweDZiJyldKXt2KF8weDUxMDgoJzB4MzJhJykpO3ZhciBfMHgzNWFhM2I9XzB4NGEwZDNlW18weDUxMDgoJzB4MTQyJyldW18weDUxMDgoJzB4MzJiJyldKF8weDU5ZDVkNlsnaWQnXSk7XzB4MzVhYTNiJiZfMHg0YTBkM2VbXzB4NTEwOCgnMHgyYzgnKV0oXzB4MzVhYTNiKTt9fX0pLF8weDU5ZDVkNltfMHg1MTA4KCcweDQ0MycpXSYmKF9bXzB4NTEwOCgnMHg2NScpXShfMHg1OWQ1ZDZbXzB4NTEwOCgnMHg0NGInKV0pJiYoXzB4NTlkNWQ2WydfbG9uZ0NvbnNvbGVMb2dUZXh0J109XzB4NTlkNWQ2W18weDUxMDgoJzB4NDU3JyldKF8weDU5ZDVkNlsnX2xvbmdDb25zb2xlTG9nVGV4dCddLF8weDM2MWVjZiwhMHgwKSksXzB4NTlkNWQ2W18weDUxMDgoJzB4NDQzJyldPV8weDU5ZDVkNltfMHg1MTA4KCcweDQ1NycpXShfMHg1OWQ1ZDZbJ19jb25zb2xlTG9nVGV4dCddLF8weDFmZDlhMykpLHRoaXNbXzB4NTEwOCgnMHgxYzAnKV09XzB4M2Q1YjM3P18weDFjM2RhZFtfMHg1MTA4KCcweDIzOCcpXTpfMHg0NzM2Mzc/XzB4MWMzZGFkW18weDUxMDgoJzB4NDU4JyldOl8weDRhMGQzZT9fMHgxYzNkYWRbXzB4NTEwOCgnMHg0NTknKV06XzB4MTBjYTAyP18weDFjM2RhZFtfMHg1MTA4KCcweDQ1YScpXTpfMHgxYzNkYWRbXzB4NTEwOCgnMHg0NWInKV0sdGhpc1tfMHg1MTA4KCcweDFjMCcpXT09PV8weDFjM2RhZFtfMHg1MTA4KCcweDQ1OScpXSYmKGRlbGV0ZSB0aGlzW18weDUxMDgoJzB4NDQzJyldLGRlbGV0ZSB0aGlzW18weDUxMDgoJzB4NDRiJyldKSx0aGlzWydfbGluZVN0YXRlJ10hPT1fMHgxN2I5OWJ8fHRoaXNbXzB4NTEwOCgnMHg0NDMnKV0hPT1fMHg0ZjBlZmR8fHRoaXNbJ19lcnJvclNvdXJjZVRleHQnXSE9PV8weDNkZDQyNTt9ZWxzZXtyZXR1cm4gXzB4NGEwZDNlJiYnXHg1YychPT1fMHg0YTBkM2U/XzB4NGEwZDNlKydceDVjXHg1Yyc6J1x4NWNceDVjJzt9fSxfMHg1OWQ1ZDZbJ3Byb3RvdHlwZSddWydjb25zb2xlTG9nVGV4dCddPWZ1bmN0aW9uKCl7aWYoXzB4NTEwOCgnMHg0NWMnKT09PV8weDUxMDgoJzB4NDVjJykpe3JldHVybiB0aGlzW18weDUxMDgoJzB4NDQzJyldO31lbHNle3JldHVybiBfMHg0YTBkM2VbXzB4NTEwOCgnMHg4NicpXVtfMHg1MTA4KCcweDE1YycpXSgpP1FbXzB4NTEwOCgnMHgxZGQnKV0oeydydW5DYW5jZWxsZWQnOiEweDB9KTooXzB4MWMzZGFkKCdQcmVwYXJpbmdceDIwc2FuZGJveFx4MjBbJXNdJyxfMHgzNjFlY2YpLF8weDRhMGQzZVtfMHg1MTA4KCcweDEyYycpXVtfMHg1MTA4KCcweDE0YycpXShfMHg1OWQ1ZDYsXzB4MWZkOWEzLF8weDEwY2EwMikpO319LF8weDU5ZDVkNltfMHg1MTA4KCcweGFlJyldW18weDUxMDgoJzB4NDM4JyldPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbXzB4NTEwOCgnMHg0NGInKV07fSxfMHg1OWQ1ZDZbXzB4NTEwOCgnMHhhZScpXVsnZXJyb3JTb3VyY2VUZXh0J109ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc1snX2Vycm9yU291cmNlVGV4dCddO30sXzB4NTlkNWQ2W18weDUxMDgoJzB4YWUnKV1bJ3N0YXRlJ109ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc1tfMHg1MTA4KCcweDFjMCcpXTt9LF8weDU5ZDVkNltfMHg1MTA4KCcweGFlJyldWydhZGRSYW5nZSddPWZ1bmN0aW9uKF8weOKAizU5ZDVkNixfMHgxMGNhMDIpe3ZhciBfMHg0YTBkM2U9XzB4NTlkNWQ2W18weDUxMDgoJzB4NTAnKV0oKTtfMHgxMGNhMDJ8fGRlbGV0ZSB0aGlzW18weDUxMDgoJzB4MTA3JyldW18weDRhMGQzZV0sdGhpc1snX3JhbmdlcyddW18weDRhMGQzZV09XzB4NTlkNWQ2O30sXzB4NTlkNWQ2W18weDUxMDgoJzB4YWUnKV1bXzB4NTEwOCgnMHg0MmUnKV09ZnVuY3Rpb24oKXt0aGlzWydfcmFuZ2VzJ109T2JqZWN0W18weDUxMDgoJzB4OWEnKV0obnVsbCk7fSxfMHg1OWQ1ZDZbXzB4NTEwOCgnMHhhZScpXVtfMHg1MTA4KCcweDIyYycpXT1mdW5jdGlvbihfMHg1OWQ1ZDYpe3ZhciBfMHgxMGNhMDI9dGhpcyxfMHg0YTBkM2U9dGhpc1snX2xpbmVOdW1iZXInXTtpZihfW18weDUxMDgoJzB4MWU0JyldKF8weDU5ZDVkNikpcmV0dXJuIF8weDRhMGQzZTtpZihfMHg1OWQ1ZDYhPT1fMHg0YTBkM2Upe3RoaXNbXzB4NTEwOCgnMHgyMTYnKV09XzB4NTlkNWQ2O3ZhciBfMHgxYzNkYWQ9XzB4NTlkNWQ2LV8weDRhMGQzZSxfMHgxZmQ5YTM9X1sndmFsdWVzJ10odGhpc1tfMHg1MTA4KCcweDEwNycpXSk7dGhpc1tfMHg1MTA4KCcweDQyZScpXSgpLF9bXzB4NTEwOCgnMHgxMzUnKV0oXzB4MWZkOWEzLGZ1bmN0aW9uKF8weDU5ZDVkNil7aWYoXzB4NTEwOCgnMHg0NWQnKSE9PSd1eUdxWicpe18weDU5ZDVkNltfMHg1MTA4KCcweDE1NycpXShfMHgxYzNkYWQpLF8weDEwY2EwMlsnX3JhbmdlcyddW18weDU5ZDVkNltfMHg1MTA4KCcweDUwJyldKCldPV8weDU5ZDVkNjt9ZWxzZXtfMHg1OWQ1ZDZbXzB4NTEwOCgnMHg0NWUnKV0mJl8weDU5ZDVkNltfMHg1MTA4KCcweDQ1ZScpXVtfMHg1MTA4KCcweDE3ZicpXSgpO319KTt9fSxfMHg1OWQ1ZDZbJ3Byb3RvdHlwZSddW18weDUxMDgoJzB4MTA4JyldPWZ1bmN0aW9uKCl7aWYoJ2VaRWJtJz09PSdlWkVibScpe3RoaXNbXzB4NTEwOCgnMHg0MmUnKV0oKSxkZWxldGUgdGhpc1tfMHg1MTA4KCcweDQ0MycpXSxkZWxldGUgdGhpc1tfMHg1MTA4KCcweDQ0MicpXSxkZWxldGUgdGhpc1snX2xpbmVTdGF0ZSddLHRoaXNbXzB4NTEwOCgnMHgyOTQnKV09ITB4MDt9ZWxzZXtpZihwcm9jZXNzWydlbnYnXVtfMHg1MTA4KCcweDUnKV0mJiFfMHg1OWQ1ZDZbXzB4NTEwOCgnMHgzM2MnKV0pcmV0dXJuO3ZhciBfMHg0NjlmNWM9dGhpc1tfMHg1MTA4KCcweDE0MicpXVtfMHg1MTA4KCcweDQ1ZicpXSgpO18weDQ2OWY1YyYmXzB4NTEwOCgnMHgzM2QnKSE9dHlwZW9mIF8weDQ2OWY1YyYmKF8weDQ2OWY1Y1tfMHg1MTA4KCcweDQ2MCcpXT0hMHgwKSx0aGlzWydfZW1pdFN0YXRzVXBkYXRlJ10oXzB4NDY5ZjVjKTt9fSxfMHg1OWQ1ZDZbXzB4NTEwOCgnMHhhZScpXVsnaXNEaXNwb3NlZCddPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbJ19pc0Rpc3Bvc2VkJ107fSxfMHg1OWQ1ZDZbXzB4NTEwOCgnMHhhZScpXVtfMHg1MTA4KCcweDUwJyldPWZ1bmN0aW9uKCl7aWYoXzB4NTEwOCgnMHg0NjEnKSE9PV8weDUxMDgoJzB4NDYyJykpe3JldHVybiB0aGlzWydfaWQnXTt9ZWxzZXtyZXR1cm4gdGhpc1tfMHg1MTA4KCcweDE4MycpXXx8KHRoaXNbXzB4NTEwOCgnMHg0NjMnKV0oKSx0aGlzW18weDUxMDgoJzB4MTgzJyldKTt9fSxfMHg1OWQ1ZDZbJ3Byb3RvdHlwZSddW18weDUxMDgoJzB4NDU3JyldPWZ1bmN0aW9uKF8weDU5ZDVkNixfMHgxMGNhMDIsXzB4NGEwZDNlKXt2YXIgXzB4MWMzZGFkPV8weDU5ZDVkNltfMHg1MTA4KCcweGJlJyldPl8weDEwY2EwMj9fMHg1MTA4KCcweDQ2NCcpOicnO3JldHVybiBfMHg1OWQ1ZDY9XzB4NTlkNWQ2WydzdWJzdHInXSgweDAsXzB4MTBjYTAyKSwoXzB4NGEwZDNlP18weDU5ZDVkNjp0aGlzW18weDUxMDgoJzB4NDY1JyldKF8weDU5ZDVkNikpK18weDFjM2RhZDt9LF8weDU5ZDVkNlsncHJvdG90eXBlJ11bXzB4NTEwOCgnMHg0NjUnKV09ZnVuY3Rpb24oXzB4NTlkNWQ2KXtpZihfMHg1MTA4KCcweDQ2NicpPT09J2loYU9sJyl7cmV0dXJueydudW1iZXJPZkZpbGXigItzJzpPYmplY3RbXzB4NTEwOCgnMHgzNGInKV0odGhpc1tfMHg1MTA4KCcweDYwJyldKVtfMHg1MTA4KCcweGJlJyldfTt9ZWxzZXtyZXR1cm4gXzB4NTlkNWQ2JiZfMHg1OWQ1ZDZbXzB4NTEwOCgnMHhiZicpXSgvXHJcblxzKi9nLCdceDIwJylbXzB4NTEwOCgnMHhiZicpXSgvXG5ccyovZywnXHgyMCcpO319LF8weDU5ZDVkNjt9fSgpO18weDEwY2EwMltfMHg1MTA4KCcweDInKV09XzB4NDczNjM3O30seycuLi9zaGFyZWQvZW51bXMnOjB4MTZ9XSwxNDpbZnVuY3Rpb24oXzB4NGI1NDQzLF8weDFmYTU0MyxfMHgzY2E4NjEpeyd1c2Ugc3RyaWN0Jzt2YXIgXzB4YjdjYmQyPV8weDRiNTQ0MyhfMHg1MTA4KCcweDQ2NycpKSxfMHgzNTJlZWE9ZnVuY3Rpb24oKXtmdW5jdGlvbiBfMHg0YjU0NDMoXzB4NGI1NDQzKXtpZihfMHg1MTA4KCcweDQ2OCcpIT09XzB4NTEwOCgnMHg0NjgnKSl7dGhpc1tfMHg1MTA4KCcweDIwOScpXVtfMHg0YjU0NDNbJ3BhdGgnXV0mJnRoaXNbXzB4NTEwOCgnMHgyMDknKV1bXzB4NGI1NDQzW18weDUxMDgoJzB4MzQnKV1dLS07fWVsc2V7dGhpc1tfMHg1MTA4KCcweDNkNCcpXT1fMHg0YjU0NDNbXzB4NTEwOCgnMHgzZDUnKV0sdGhpc1tfMHg1MTA4KCcweDNkNicpXT1fMHg0YjU0NDNbXzB4NTEwOCgnMHgzZTknKV0sdGhpc1tfMHg1MTA4KCcweDQ2OScpXT1fMHg0YjU0NDNbXzB4NTEwOCgnMHhhOCcpXSx0aGlzW18weDUxMDgoJzB4NDNkJyldPV8weDRiNTQ0M1tfMHg1MTA4KCcweDE5ZCcpXSx0aGlzW18weDUxMDgoJzB4NDZhJyldPV8weDRiNTQ0M1tfMHg1MTA4KCcweDQ2YicpXSx0aGlzW18weDUxMDgoJzB4M2QyJyldPV8weDRiNTQ0M1tfMHg1MTA4KCcweDNkMycpXXx8e307fX1yZXR1cm4gXzB4NGI1NDQzW18weDUxMDgoJzB4YWUnKV1bXzB4NTEwOCgnMHgzZWYnKV09ZnVuY3Rpb24oKXtpZihfMHg1MTA4KCcweDQ2YycpIT09XzB4NTEwOCgnMHg0NmMnKSl7cmV0dXJuIHRoaXNbXzB4NTEwOCgnMHgzZmEnKV1bXzB4NTEwOCgnMHg0NmQnKV07fWVsc2V7dmFyIF8weDRiNTQ0Mz10aGlzLF8weDFmYTU0Mz10aGlzW18weDUxMDgoJzB4NDNkJyldO3RoaXNbJ19zdGFjayddPVtdLF9bXzB4NTEwOCgnMHgxMzUnKV0oXzB4MWZhNTQzLGZ1bmN0aW9uKF8weDFmYTU0MyxfMHgzY2E4NjEpe3JldHVybiBfMHg0YjU0NDNbXzB4NTEwOCgnMHg0M2QnKV1bJ3B1c2gnXShuZXcgXzB4YjdjYmQyKF8weDFmYTU0M1sweDBdLF8weDFmYTU0M1sweDFdLF8weDRiNTQ0M1tfMHg1MTA4KCcweDNkMicpXVtfMHgzY2E4NjFdKSk7fSksZGVsZXRlIHRoaXNbXzB4NTEwOCgnMHgzZDInKV07fX0sXzB4NGI1NDQzW18weDUxMDgoJzB4YWUnKV1bXzB4NTEwOCgnMHgxOWQnKV09ZnVuY3Rpb24oKXtpZignYUxFRE0nIT09XzB4NTEwOCgnMHg0NmUnKSl7c1tfMHhiN2NiZDJbXzB4NTEwOCgnMHg2OScpXV0oXzB4YjdjYmQyW18weDUxMDgoJzB4MWVmJyldKTt9ZWxzZXtyZXR1cm4gdGhpc1tfMHg1MTA4KCcweDQzZCcpXTt9fSxfMHg0YjU0NDNbXzB4NTEwOCgnMHhhZScpXVtfMHg1MTA4KCcweGE4JyldPWZ1bmN0aW9uKCl7aWYoXzB4NTEwOCgnMHg0NmYnKT09PV8weDUxMDgoJzB4NDcwJykpe18weDFmYTU0M1tfMHg1MTA4KCcweDE2ZicpXShfMHgzY2E4NjFbXzB4NTEwOCgnMHg0NzEnKV1bXzB4NGI1NDQzW18weDUxMDgoJzB4OTcnKV1bJ2lkJ11dKTt9ZWxzZXtyZXR1cm4gdGhpc1tfMHg1MTA4KCcweDQ2OScpXTt9fSxfMHg0YjU0NDNbXzB4NTEwOCgnMHhhZScpXVsnYWN0dWFsJ109ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc1snX2FjdHVhbCddO30sXzB4NGI1NDQzW18weDUxMDgoJzB4YWUnKV1bXzB4NTEwOCgnMHgzZTknKV09ZnVuY3Rpb24oKXtpZignS0xkc20nPT09XzB4NTEwOCgnMHg0NzInKSl7cmV0dXJuIF8weDRiNTQ0Mz09PV8weDFmYTU0Mzt9ZWxzZXtyZXR1cm4gdGhpc1tfMHg1MTA4KCcweDNkNicpXTt9fSxfMHg0YjU0NDNbJ3Byb3RvdHlwZSddWydzbmFwc2hvdCddPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbXzB4NTEwOCgnMHg0NmEnKV07fSxfMHg0YjU0NDNbXzB4NTEwOCgnMHhhZScpXVtfMHg1MTA4KCcweDUwJyldPWZ1bmN0aW9uKCl7cmV0dXJuKHRoaXNbXzB4NTEwOCgnMHg0NjknKV18fCcnKStfW18weDUxMDgoJzB4YjUnKV0odGhpc1snX3N0YWNrJ10sZnVuY3Rpb24oXzB4NGI1NDQzLF8weDFmYTU0Myl7cmV0dXJuIF8weDRiNTQ0Mys9XzB4MWZhNTQzW18weDUxMDgoJzB4NTAnKV0oKTt9LCcnKTt9LF8weDRiNTQ0Mzt9KCk7XzB4MWZhNTQzWydleHBvcnRzJ109XzB4MzUyZWVhO30seycuL3N0YWNrRW50cnknOjB4MTR9XSwxNTpbZnVuY3Rpb24oXzB4NThjODhjLF8weDNlNDBkMSxfMHgzYzE4NDIpeyd1c2Ugc3RyaWN0Jzt2YXIgXzB4NDAxMTZhPV8weDU4Yzg4YygnLi9lcnJvckVudHJ5JyksXzB4MTBkYTIzPShfMHg1OGM4OGMoXzB4NTEwOCgnMHg0NjcnKSksXzB4NThjODhjKCcuLi8uLi91dGlscycpKSxfMHgxMDg0YzE9ZnVuY3Rpb24oKXtmdW5jdGlvbiBfMHg1OGM4OGMoXzB4NThjODhjKXt0aGlzW18weDUxMDgoJzB4MjE3JyldPV8weDU4Yzg4Y1snaWQnXSx0aGlzW18weDUxMDgoJzB4MzU5JyldPV8weDU4Yzg4Y1tfMHg1MTA4KCcweDIzNycpXSx0aGlzW18weDUxMDgoJzB4NDczJyldPV8weDU4Yzg4Y1snbG9nJ10sdGhpc1tfMHg1MTA4KCcweDJiMicpXT1fMHg1OGM4OGNbXzB4NTEwOCgnMHgyNWUnKV0sdGhpc1tfMHg1MTA4KCcweDQ1MicpXT1fMHg1OGM4OGNbXzB4NTEwOCgnMHhkNCcpXSx0aGlzW18weDUxMDgoJzB4MzliJyldPV8weDU4Yzg4Y1tfMHg1MTA4KCcweDZhJyldLHRoaXNbXzB4NTEwOCgnMHg0NzQnKV09XzB4NThjODhjW18weDUxMDgoJzB4MzRhJyldLHRoaXNbXzB4NTEwOCgnMHg0NzUnKV09XzB4NThjODhjW18weDUxMDgoJzB4NDc2JyldO31yZXR1cm4gXzB4NThjODhjWydwcm90b3R5cGUnXVtfMHg1MTA4KCcweDNlZicpXT1mdW5jdGlvbihfMHgzZTQwZDEsXzB4M2MxODQyLF8weDEwZGEyMyxfMHgxMDg0YzEpe3ZhciBfMHhmMjdiNWU9dGhpcztpZih0aGlzWydfcGFyZW50J109XzB4M2U0MGQxLHRoaXNbXzB4NTEwOCgnMHgyMTcnKV0mJih0aGlzW18weDUxMDgoJzB4NDc3JyldKCksdGhpc1tfMHg1MTA4KCcweDQ2MycpXSgpLF8weDEwZGEyMyh0aGlzKSx0aGlzW18weDUxMDgoJzB4NDc4JyldPU9iamVjdFtfMHg1MTA4KCcweDlhJyldKG51bGwpLHRoaXNbXzB4NTEwOCgnMHg0NzknKV09T2JqZWN0WydjcmVhdGUnXShudWxsKSx0aGlzW18weDUxMDgoJzB4NDdhJyldPV8weDNjMTg0Mix0aGlzW18weDUxMDgoJzB4NDczJyldJiZ0aGlzW18weDUxMDgoJzB4NDczJyldW18weDUxMDgoJzB4YmUnKV0pKXtpZihfMHg1MTA4KCcweDQ3YicpIT09J3RmekFrJyl7dGhpc1tfMHg1MTA4KCcweDQ3YycpXT0hMHgwO3ZhciBfMHg0ZjgyMDI9dGhpc1tfMHg1MTA4KCcweDQ3MycpXTt0aGlzW18weDUxMDgoJzB4NDczJyldPVtdLHRoaXNbXzB4NTEwOCgnMHg0N2QnKV09T2JqZWN0W18weDUxMDgoJzB4OWEnKV0obnVsbCksX1tfMHg1MTA4KCcweDEzNScpXShfMHg0ZjgyMDIsZnVuY3Rpb24oXzB4NThjODhjKXt2YXIgXzB4M2U0MGQxPW5ldyBfMHg0MDExNmEoXzB4NThjODhjKTtfMHgzZTQwZDFbJ2luaXQnXSgpLF9bXzB4NTEwOCgnMHgxMzUnKV0oXzB4M2U0MGQxW18weDUxMDgoJzB4MTlkJyldKCksZnVuY3Rpb24oXzB4NThjODhjKXtpZigncXpNUGUnPT09XzB4NTEwOCgnMHg0N2UnKSl7cmV0dXJuO31lbHNle3ZhciBfMHgzYzE4NDI9XzB4NThjODhjW18weDUxMDgoJzB4NTAnKV0oKSxfMHg0MDExNmE9XzB4ZjI3YjVlW18weDUxMDgoJzB4NDdkJyldW18weDNjMTg0Ml07XzB4NDAxMTZhP35fW18weDUxMDgoJzB4NTEnKV0oXzB4NDAxMTZhLF8weDNlNDBkMSl8fF8weDQwMTE2YVtfMHg1MTA4KCcweDRiJyldKF8weDNlNDBkMSk6KF8weDQwMTE2YT1bXSxfMHg0MDExNmFbJ3B1c2gnXShfMHgzZTQwZDEpLF8weGYyN2I1ZVtfMHg1MTA4KCcweDQ3ZCcpXVtfMHgzYzE4NDJdPV8weDQwMTE2YSksXzB4NDAxMTZhW18weDUxMDgoJzB4NDdmJyldPV8weDU4Yzg4YyxfMHgxMDg0YzEoXzB4NThjODhjKTt9fSksXzB4ZjI3YjVlW18weDUxMDgoJzB4NDczJyldW18weDUxMDgoJzB4NGInKV0oXzB4M2U0MGQxKTt9KTt9ZWxzZXtyZXR1cm4gUVtfMHg1MTA4KCcweDM3ZScpXShfMHg0MDExNmFbJ2Vuc3VyZURpciddLF8weDU4Yzg4Yyk7fX10aGlzWydfdGVzdHMnXSYmKF9bXzB4NTEwOCgnMHgxMzUnKV0odGhpc1tfMHg1MTA4KCcweDQ1MicpXSxmdW5jdGlvbihfMHgzZTQwZDEpe3JldHVybiBuZXcgXzB4NThjODhjKF8weDNlNDBkMSlbXzB4NTEwOCgnMHgzZWYnKV0oXzB4ZjI3YjVlLF8weDNjMTg0MixfMHgxMGRhMjMsXzB4MTA4NGMxKTt9KSxkZWxldGUgdGhpc1tfMHg1MTA4KCcweDQ1MicpXSk7fSxfMHg1OGM4OGNbXzB4NTEwOCgnMHhhZScpXVsnaWQnXT1mdW5jdGlvbigpe2lmKF8weDUxMDgoJzB4NDgwJykhPT0na3dYenQnKXt2YXIgXzB4MTQzMjE3PWwrMHgxK18weDNlNDBkMSxfMHgzODBlY2E9KCdceDIwJytfMHgxNDMyMTcpW18weDUxMDgoJzB4MzM4JyldKC1kKSxfMHg1Y2E1YmM9J1x4MjAnK18weDM4MGVjYSsnXHgyMHxceDIwJyxfMHgxOWM5NGE9cFtfMHgxNDMyMTddLF8weDQzOWY2MD0hcFtfMHgxNDMyMTcrMHgxXTtpZihfMHgxOWM5NGEpe3ZhciBfMHgzZWNjNDE9Jyc7aWYoQXJyYXlbJ2lzQXJyYXknXShfMHgxOWM5NGEpKXt2YXIgXzB4M2U0MTQ4PV8weDU4Yzg4Y1tfMHg1MTA4KCcweDMzOCcpXSgweDAsTWF0aFtfMHg1MTA4KCcweDQ4MScpXShfMHgxOWM5NGFbMHgwXS0weDEsMHgwKSlbXzB4NTEwOCgnMHhiZicpXSgvW15cdF0vZywnXHgyMCcpLF8weDRjNDZlYT1fMHgxOWM5NGFbMHgxXXx8MHgxO18weDNlY2M0MT1bJ1x4MGFceDIwJyxfMHg1Y2E1YmNbXzB4NTEwOCgnMHhiZicpXSgvXGQvZywnXHgyMCcpLF8weDNlNDE0OCwnXidbJ3JlcGVhdCddKF8weDRjNDZlYSldW18weDUxMDgoJzB4ODInKV0oJycpLF8weDQzOWY2MCYmXzB4MTBkYTIzJiYoXzB4M2Vj4oCLYzQxKz0nXHgyMCcrXzB4MTBkYTIzKTt9cmV0dXJuWyc+JyxfMHg1Y2E1YmMsXzB4NThjODhjLF8weDNlY2M0MV1bXzB4NTEwOCgnMHg4MicpXSgnJyk7fXJldHVybidceDIwJytfMHg1Y2E1YmMrXzB4NThjODhjO31lbHNle3JldHVybiB0aGlzW18weDUxMDgoJzB4MjE3JyldO319LF8weDU4Yzg4Y1tfMHg1MTA4KCcweGFlJyldW18weDUxMDgoJzB4NTAnKV09ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc1snX2tleSddfHwodGhpc1snX3NldEtleSddKCksdGhpc1tfMHg1MTA4KCcweDE4MycpXSk7fSxfMHg1OGM4OGNbXzB4NTEwOCgnMHhhZScpXVsnX3NldEtleSddPWZ1bmN0aW9uKCl7dGhpc1tfMHg1MTA4KCcweDE4MycpXT10aGlzW18weDUxMDgoJzB4MzU5JyldKydfJyt0aGlzWydfZnVsbE5hbWUnXTt9LF8weDU4Yzg4Y1sncHJvdG90eXBlJ11bXzB4NTEwOCgnMHgyMzcnKV09ZnVuY3Rpb24oKXtpZihfMHg1MTA4KCcweDQ4MicpIT09J3hUUGNvJyl7cmV0dXJuIHRoaXNbXzB4NTEwOCgnMHgzNTknKV07fWVsc2V7cmV0dXJuLV8weDU4Yzg4Y1sndHMnXSgpO319LF8weDU4Yzg4Y1tfMHg1MTA4KCcweGFlJyldW18weDUxMDgoJzB4NDgzJyldPWZ1bmN0aW9uKCl7aWYoXzB4NTEwOCgnMHg0ODQnKT09PV8weDUxMDgoJzB4NDg1Jykpe2RlbGV0ZSB0aGlzWydfZXhlY3V0aW5nVGVzdCddO31lbHNle3JldHVybiB0aGlzW18weDUxMDgoJzB4NDg2JyldJiZ0aGlzW18weDUxMDgoJzB4NDg2JyldW18weDUxMDgoJzB4MzQnKV0oKTt9fSxfMHg1OGM4OGNbJ3Byb3RvdHlwZSddW18weDUxMDgoJzB4MzRhJyldPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbXzB4NTEwOCgnMHg0NzQnKV07fSxfMHg1OGM4OGNbXzB4NTEwOCgnMHhhZScpXVtfMHg1MTA4KCcweDQwOCcpXT1mdW5jdGlvbigpe2lmKF8weDUxMDgoJzB4NDg3Jyk9PT1fMHg1MTA4KCcweDQ4OCcpKXtfMHgzZTQwZDFbXzB4NTEwOCgnMHg0ODknKV09ITB4MCx0aGlzW18weDUxMDgoJzB4NDhhJyldKHZvaWQgMHgwLF8weDNlNDBkMSk7fWVsc2V7cmV0dXJuIHRoaXNbXzB4NTEwOCgnMHg0NzMnKV07fX0sXzB4NThjODhjW18weDUxMDgoJzB4YWUnKV1bJ2FkZENvbnNvbGVNZXNzYWdlJ109ZnVuY3Rpb24oXzB4NThjODhjKXtpZigndXl2WFknPT09XzB4NTEwOCgnMHg0OGInKSl7cmV0dXJuIF8weDNlNDBkMVtfMHg1MTA4KCcweDQ4YycpXShfMHg1OGM4OGMpO31lbHNle3RoaXNbXzB4NTEwOCgnMHg0OGQnKV18fCh0aGlzWydfY29uc29sZU1lc3NhZ2VzJ109W10pLHRoaXNbXzB4NTEwOCgnMHg0OGQnKV1bXzB4NTEwOCgnMHg0YicpXShfMHg1OGM4OGMpO319LF8weDU4Yzg4Y1sncHJvdG90eXBlJ11bXzB4NTEwOCgnMHg0OGUnKV09ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc1tfMHg1MTA4KCcweDQ4ZCcpXTt9LF8weDU4Yzg4Y1tfMHg1MTA4KCcweGFlJyldW18weDUxMDgoJzB4NDJkJyldPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbXzB4NTEwOCgnMHg0N2MnKV07fSxfMHg1OGM4OGNbXzB4NTEwOCgnMHhhZScpXVtfMHg1MTA4KCcweDQ3NicpXT1mdW5jdGlvbigpe2lmKF8weDUxMDgoJzB4NDhmJyk9PT1fMHg1MTA4KCcweDQ5MCcpKXt2YXIgXzB4MmFlMTMwPV8weDU4Yzg4Y1tfMHg1MTA4KCcweDEwZScpXSh0aGlzKXx8dGhpcyxfMHgyM2MzOTM9XzB4MmFlMTMwO3JldHVybiBfMHgyYWUxMzBbXzB4NTEwOCgnMHg0OTEnKV0oKVtfMHg1MTA4KCcweDFkYScpXShmdW5jdGlvbihfMHgxYmJmYmEpe3JldHVybiBfMHgyM2MzOTNbJ19zdGFydCddKF8weDFiYmZiYSxfMHgzZTQwZDEpO30pW18weDUxMDgoJzB4YTknKV0oZnVuY3Rpb24oXzB4MjJkODRhKXtyZXR1cm4gY2/igItuc29sZVsnZXJyb3InXShfMHg1MTA4KCcweDQ5MicpKyhfMHgyMmQ4NGEmJl8weDIyZDg0YVtfMHg1MTA4KCcweGE4JyldKSk7fSksXzB4MjNjMzkzW18weDUxMDgoJzB4NDkzJyldPVtdLF8weDIzYzM5M1tfMHg1MTA4KCcweDIwOScpXT17fSxfMHgyYWUxMzA7fWVsc2V7cmV0dXJuIHRoaXNbXzB4NTEwOCgnMHg0NzUnKV07fX0sXzB4NThjODhjW18weDUxMDgoJzB4YWUnKV1bXzB4NTEwOCgnMHg0OTQnKV09ZnVuY3Rpb24oXzB4NThjODhjKXtpZihfMHg1MTA4KCcweDQ5NScpPT09XzB4NTEwOCgnMHg0OTUnKSl7dGhpc1tfMHg1MTA4KCcweDQ4NicpXT1fMHg1OGM4OGM7fWVsc2V7dHJ5e18weDU4Yzg4Y1tfMHg1MTA4KCcweDEzOCcpXVsnc3Rkb3V0J11bXzB4NTEwOCgnMHg0OTYnKV0oXzB4NTEwOCgnMHgxZWYnKSksXzB4NThjODhjW18weDUxMDgoJzB4MTM4JyldW18weDUxMDgoJzB4NDk3JyldW18weDUxMDgoJzB4NDk2JyldKF8weDUxMDgoJzB4MWVmJykpO31maW5hbGx5e18weDU4Yzg4Y1tfMHg1MTA4KCcweDEzOCcpXVsna2lsbCddKCk7fX19LF8weDU4Yzg4Y1tfMHg1MTA4KCcweGFlJyldW18weDUxMDgoJzB4NDk4JyldPWZ1bmN0aW9uKCl7dmFyIF8weDU4Yzg4Yz10aGlzLF8weDNlNDBkMT1PYmplY3RbXzB4NTEwOCgnMHg5YScpXShudWxsKTtyZXR1cm4gZGVsZXRlIHRoaXNbXzB4NTEwOCgnMHgxOGEnKV0sZGVsZXRlIHRoaXNbXzB4NTEwOCgnMHg0ODYnKV0sdGhpc1snX2NvdmVyZWRSYW5nZXMnXSYmKF9bXzB4NTEwOCgnMHgxMzUn4oCLKV0odGhpc1tfMHg1MTA4KCcweDQ3OCcpXSxmdW5jdGlvbihfMHgzYzE4NDIpe2lmKCdOS3ZjVSc9PT1fMHg1MTA4KCcweDQ5OScpKXt2YXIgXzB4MmFjMzBmPTB4MjAwMCxfMHgyODFlNWY9XzB4NDAxMTZhWydyYW5nZUtleSddKF8weDNlNDBkMSksXzB4MTJmZWM5PXRoaXNbXzB4NTEwOCgnMHg0OWEnKV1bXzB4MjgxZTVmXTtfMHgxMmZlYzl8fChfMHgxMmZlYzk9dGhpc1tfMHg1MTA4KCcweDQ5YScpXVtfMHgyODFlNWZdPVtdKTt2YXIgXzB4NDBlNTg0PV8weDU4Yzg4Y1snbGVuZ3RoJ10+XzB4MmFjMzBmP18weDUxMDgoJzB4NDY0Jyk6Jyc7XzB4NThjODhjPV8weDU4Yzg4Y1snc3Vic3RyJ10oMHgwLF8weDJhYzMwZiksXzB4MTJmZWM5WydwdXNoJ10oXzB4NThjODhjK18weDQwZTU4NCk7fWVsc2V7aWYoXzB4M2MxODQyW18weDUxMDgoJzB4NDBjJyldKF8weDU4Yzg4YyksIV8weDNjMTg0MltfMHg1MTA4KCcweDFmZScpXSgpKXtpZihfMHg1MTA4KCcweDQ5YicpPT09XzB4NTEwOCgnMHg0OWInKSl7dmFyIF8weDQwMTE2YT1fMHgzYzE4NDJbJ3NvdXJjZUZpbGUnXSgpO18weDNlNDBkMVtfMHg0MDExNmFbXzB4NTEwOCgnMHg1MCcpXSgpXT1fMHg0MDExNmE7fWVsc2V7cmV0dXJuIHRoaXNbJ19mYWlsZWRCeU1lVGVzdHMnXSYmIV9bXzB4NTEwOCgnMHgxMzQnKV0odGhpc1tfMHg1MTA4KCcweDNmZicpXSl8fHRoaXNbXzB4NTEwOCgnMHgzMGEnKV0mJiFfW18weDUxMDgoJzB4MTM0JyldKHRoaXNbXzB4NTEwOCgnMHgzMGEnKV0pO319fX0pLGRlbGV0ZSB0aGlzW18weDUxMDgoJzB4NDc4JyldKSxkZWxldGUgdGhpc1snX2Vycm9yU3RhY2tNYXAnXSxkZWxldGUgdGhpc1tfMHg1MTA4KCcweDQ4ZCcpXSxkZWxldGUgdGhpc1tfMHg1MTA4KCcweDQ3OScpXSxfMHgzZTQwZDE7fSxfMHg1OGM4OGNbXzB4NTEwOCgnMHhhZScpXVsnY292ZXJzJ109ZnVuY3Rpb24oXzB4NThjODhjKXtpZihfMHg1MTA4KCcweDQ5YycpPT09J2l4RU9DJyl7cmV0dXJuIHRoaXNbJ19maWxlcyddO31lbHNle3RoaXNbXzB4NTEwOCgnMHg0NzgnKV1bXzB4NThjODhjW18weDUxMDgoJzB4NTAnKV0oKV09XzB4NThjODhjO3ZhciBfMHgzZTQwZDE9XzB4NThjODhjW18weDUxMDgoJzB4NDlkJyldKCk7XzB4M2U0MGQxJiYhXzB4M2U0MGQxW18weDUxMDgoJzB4N2EnKV0oKSYmKHRoaXNbXzB4NTEwOCgnMHg0NzknKV1bXzB4M2U0MGQxWydrZXknXSgpXT1fMHgzZTQwZDEpO319LF8weDU4Yzg4Y1tfMHg1MTA4KCcweGFlJyldW18weDUxMDgoJzB4NDllJyldPWZ1bmN0aW9uKCl7cmV0dXJuIF9bXzB4NTEwOCgnMHhkYScpXSh0aGlzWydfY292ZXJlZEZpbGVzJ10sZnVuY3Rpb24oXzB4NThjODhjKXtpZihfMHg1MTA4KCcweDQ5ZicpPT09XzB4NTEwOCgnMHg0OWYnKSl7cmV0dXJuIF8weDU4Yzg4Yzt9ZWxzZXtmb3IodmFyIF8weDMxYzg4YyxfMHg0NTk0ZGY9MHgxLF8weDIwNGJkNj1hcmd1bWVudHNbXzB4NTEwOCgnMHhiZScpXTtfMHg0NTk0ZGY8XzB4MjA0YmQ2O18weDQ1OTRkZisrKXtfMHgzMWM4OGM9YXJndW1lbnRzW18weDQ1OTRkZl07Zm9yKHZhciBfMHg1NzllNWMgaW4gXzB4MzFjODhjKU9iamVjdFtfMHg1MTA4KCcweGFlJyldW18weDUxMDgoJzB4NjgnKV1bJ2NhbGwnXShfMHgzMWM4OGMsXzB4NTc5ZTVjKSYmKF8weDU4Yzg4Y1tfMHg1NzllNWNdPV8weDMxYzg4Y1tfMHg1NzllNWNdKTt9cmV0dXJuIF8weDU4Yzg4Yzt9fSk7fSxfMHg1OGM4OGNbXzB4NTEwOCgnMHhhZScpXVtfMHg1MTA4KCcweDRhMCcpXT1mdW5jdGlvbigpe2lmKF8weDUxMDgoJzB4NGExJykhPT1fMHg1MTA4KCcweDRhMicpKXtyZXR1cm4gdGhpc1snX3N0YXJ0UmFuZ2UnXTt9ZWxzZXtfMHg0MDExNmFbXzB4NTEwOCgnMHgxZDgnKV0oKTt9fSxfMHg1OGM4OGNbJ3Byb3RvdHlwZSddW18weDUxMDgoJzB4NGEzJyldPWZ1bmN0aW9uKF8weDU4Yzg4Yyl7aWYoJ29BcFhDJz09PV8weDUxMDgoJzB4NGE0Jykpe3ZhciBfMHgzZTQwZDE9dGhpczt0aGlzW18weDUxMDgoJzB4NDdkJyldJiZfW18weDUxMDgoJzB4MTM1JyldKHRoaXNbXzB4NTEwOCgnMHg0N2QnKV0sZnVuY3Rpb24oXzB4M2MxODQyKXt2YXIgXzB4NDAxMTZhPV8weDNjMTg0MltfMHg1MTA4KCcweDQ3ZicpXTtpZihfMHg0MDExNmEpe3ZhciBfMHgxMGRhMjM9XzB4NThjODhjW18weDQwMTE2YVsnZmlsZUlkJ10oKV07aWYoXzB4MTBkYTIzKXt2YXIgXzB4MTA4NGMxPV8weDEwZGEyM1snY2xvc2VzdFJhbmdlJ10oXzB4NDAxMTZhWydsaW5lJ10oKSk7XzB4MTA4NGMxJiYoXzB4NDAxMTZhW18weDUxMDgoJzB4M2Q5JyldKF8weDEwODRjMSksXzB4MTA4NGMxW18weDUxMDgoJzB4NDBiJyldKF8weDNlNDBkMSxfMHgzYzE4NDIpKTt9fX0pLHRoaXNbXzB4NTEwOCgnMHg0OGQnKV0mJl9bXzB4NTEwOCgnMHgxMzUnKV0odGhpc1tfMHg1MTA4KCcweDQ4ZCcpXSxmdW5jdGlvbihfMHg1OGM4OGMpe2lmKF8weDUxMDgoJzB4NGE1Jyk9PT1fMHg1MTA4KCcweDRhNicpKXtfMHgzZTQwZDFbXzB4NTEwOCgnMHg3OCcpXSYmXzB4NTEwOCgnMHg3OScpIT09XzB4M2U0MGQxW18weDUxMDgoJzB4NzgnKV1bXzB4NTEwOCgnMHg2OScpXSYmXzB4NThjODhjKF8weDNlNDBkMVtfMHg1MTA4KCcweDc4JyldW18weDUxMDgoJzB4NTMnKV0pO31lbHNle3ZhciBfMHgzZTQwZDE9XzB4NThjODhjWydmaWxlJ10oKTtfMHgzZTQwZDEmJl8weDU4Yzg4Y1tfMHg1MTA4KCcweDNkOScpXShfMHgzZTQwZDFbXzB4NTEwOCgnMHg0YTcnKV0oXzB4NThjODhjW18weDUxMDgoJzB4MjNiJyldKCkpKTt9fSksdGhpc1snX2NvdmVyZWRSYW5nZXMnXSYmKF9bXzB4NTEwOCgnMHgxZTQnKV0odGhpc1tfMHg1MTA4KCcweDM5YicpXSl8fCh0aGlzWydfc3RhcnRSYW5nZSddPXRoaXNbXzB4NTEwOCgnMHg0ODYnKV1bXzB4NTEwOCgnMHg0YTcnKV0odGhpc1tfMHg1MTA4KCcweDM5YicpXSksZGVsZXRlIHRoaXNbXzB4NTEwOCgnMHgzOWInKV0pLHRoaXNbXzB4NTEwOCgnMHgxOGEnKV18fF9bXzB4NTEwOCgnMHgxMzUnKV0odGhpc1snX2NvdmVyZWRSYW5nZXMnXSxmdW5jdGlvbihfMHg1OGM4OGMpe2lmKF8weDUxMDgoJzB4NGE4Jyk9PT1fMHg1MTA4KCcweDRhOScpKXt2YXIgXzB4NDkwOTQ3PV8weDU4Yzg4Y1tfMHg1MTA4KCcweDMzNicpXSgweDAsXzB4M2U0MGQxLTB4Mil8fCcnO3JldHVybiBfMHg0OTA5NDdbXzB4NTEwOCgnMHgxMjUnKV0oXzB4NTEwOCgnMHgzMzcnKSlbMHgxXTt9ZWxzZXt2YXIgXzB4M2MxODQyPV8weDU4Yzg4Y1tfMHg1MTA4KCcweDQ5ZCcpXSgpO18weDNjMTg0Mj09XzB4M2U0MGQxW18weDUxMDgoJzB4NDg2JyldJiYoXzB4M2U0MGQxWydfc3RhcnRSYW5nZSddP18weDU4Yzg4Y1tfMHg1MTA4KCcweDE4YicpXSgpPF8weDNlNDBkMVtfMHg1MTA4KCcweDE4YScpXVtfMHg1MTA4KCcweDE4YicpXSgpJiYoXzB4M2U0MGQxWydfc3RhcnRSYW5nZSddPV8weDU4Yzg4Yyk6XzB4M2U0MGQxW18weDUxMDgoJzB4MThhJyldPV8weDU4Yzg4Yyk7fX0pKTt9ZWxzZXtfW18weDUxMDgoJzB4MTM1JyldKF8weDNlNDBkMVtfMHg1MTA4KCcweDQ5OCcpXSgpLGZ1bmN0aW9uKF8weDRmMjM2MSl7XzB4NThjODhjW18weDRmMjM2MVtfMHg1MTA4KCcweDUwJyldKCldPV8weDRmMjM2MTt9KTt9fSxfMHg1OGM4OGNbXzB4NTEwOCgnMHhhZScpXVtfMHg1MTA4KCcweDM0JyldPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbXzB4NTEwOCgnMHgxMjInKV07fSxfMHg1OGM4OGNbXzB4NTEwOCgnMHhhZScpXVsndHMnXT1mdW5jdGlvbigpe3JldHVybiB0aGlzW18weDUxMDgoJzB4NDdhJyldO30sXzB4NThjODhjW18weDUxMDgoJzB4YWUnKV1bXzB4NTEwOCgnMHg0YWEnKV09ZnVuY3Rpb24oKXtpZignVmhTaVQnPT09XzB4NTEwOCgnMHg0YWInKSl7cmV0dXJuKHRoaXNbJ19wYXRoJ118fFtdKVtfMHg1MTA4KCcweGRhJyldKGZ1bmN0aW9uKF8weDU4Yzg4Yyl7cmV0dXJuIF8weDEwZGEyM1tfMHg1MTA4KCcweDJlNycpXShfMHg1OGM4OGMpO30pO31lbHNle19bXzB4NTEwOCgnMHg2NScpXShfMHg1OGM4OGNbXzB4NTEwOCgnMHg0NGInKV0pfHwoXzB4NThjODhjWydfbG9uZ0NvbnNvbGVMb2dUZXh0J109JycpO3ZhciBfMHgxNTcwYmM9bFtfMHg1MTA4KCcweGJlJyldPjB4M2U4LF8weGYxNjBiYT0oXzB4MTU3MGJjP18weDUxMDgoJzB4NGFjJyk6JycpKydceDIwJysoXzB4MTU3MGJjP2xbJ3NsaWNlJ10obFtfMHg1MTA4KCcweGJlJyldLTB4M2U4KTpsKVtfMHg1MTA4KCcweDgyJyldKCdceDIwXHgwYVx4MjAnKTtfMHg1OGM4OGNbXzB4NTEwOCgnMHg0NGInKV0rPShfMHg1OGM4OGNbJ19sb25nQ29uc29sZUxvZ1RleHQnXT8nXHgwYS0tLVx4MGEnOicnKStfMHhmMTYwYmE7fX0sXzB4NThjODhjW18weDUxMDgoJzB4YWUnKV1bXzB4NTEwOCgnMHg0NzcnKV09ZnVuY3Rpb24oKXt2YXIgXzB4NThjODhjPVtdO18weDU4Yzg4Y1tfMHg1MTA4KCcweDRiJyldKHRoaXNbXzB4NTEwOCgnMHgyYjInKV0pO2Zvcih2YXIgXzB4M2U0MGQxPXRoaXNbJ19wYXJlbnQnXTtudWxsIT1fMHgzZTQwZDE7KXt2YXIgXzB4M2MxODQyPV8weDNlNDBkMVtfMHg1MTA4KCcweDJiMicpXTtfMHg1OGM4OGNbXzB4NTEwOCgnMHg0YicpXShfMHgzYzE4NDIpLF8weDNlNDBkMT1fMHgzZTQwZDFbXzB4NTEwOCgnMHgyYjMnKV07fV8weDU4Yzg4Y1tfMHg1MTA4KCcweDIxNScpXSgpLHRoaXNbXzB4NTEwOCgnMHg0YWQnKV09XzB4NThjODhjW18weDUxMDgoJzB4ODInKV0oJ+KYhicpLHRoaXNbXzB4NTEwOCgnMHgxMjInKV09XzB4NThjODhjO30sXzB4NThjODhjO30oKTtfMHgzZTQwZDFbXzB4NTEwOCgnMHgyJyldPV8weDEwODRjMTt9LHsnLi4vLi4vdXRpbHMnOjB4MWUsJy4vZXJyb3JFbnRyeSc6MHhlLCcuL3N0YWNrRW50cnknOjB4MTR9XSwxNjpbZnVuY3Rpb24oXzB4Njk2NTUzLF8weDU3YTdhOSxfMHg2MzMzY2Mpeyd1c2Ugc3RyaWN0Jzt2YXIgXzB4MzNjYWYyPXRoaXMmJnRoaXNbXzB4NTEwOCgnMHgyMjgnKV18fGZ1bmN0aW9uKCl7dmFyIF8weDY5NjU1Mz1mdW5jdGlvbihfMHg1N2E3YTksXzB4NjMzM2NjKXtpZihfMHg1MTA4KCcweDRhZScpIT09XzB4NTEwOCgnMHg0YWYnKSl7cmV0dXJuKF8weDY5NjU1Mz1PYmplY3RbXzB4NTEwOCgnMHgyMjknKV18fHsnX19wcm90b19fJzpbXX1pbnN0YW5jZW9mIEFycmF5JiZmdW5jdGlvbihfMHg2OTY1NTMsXzB4NTdhN2E5KXtfMHg2OTY1NTNbXzB4NTEwOCgnMHgyMmYnKV09XzB4NTdhN2E5O318fGZ1bmN0aW9uKF8weDY5NjU1MyxfMHg1N2E3YTkpe2lmKF8weDUxMDgoJzB4NGIwJykhPT0nV2FsVlYnKXtyZXR1cm4gXzB4NTdhN2E5IT1fMHg2OTY1NTM7fWVsc2V7Zm9yKHZhciBfMHg2MzMzY2MgaW4gXzB4NTdhN2E5KV8weDU3YTdhOVsnaGFzT3duUHJvcGVydHknXShfMHg2MzMzY2MpJiYoXzB4Njk2NTUzW18weDYzMzNjY109XzB4NTdhN2E5W18weDYzMzNjY10pO319KShfMHg1N2E3YTksXzB4NjMzM2NjKTt9ZWxzZXtpZihfMHg2OTY1NTMpe3ZhciBfMHgzYzYyMGUsXzB4NDk5NWJlPV8weDY5NjU1M1snY292ZXJhZ2UnXSgpO3JldHVybihfMHg0OTk1YmU+PTB4MHx8XzB4Njk2NTUzW18weDUxMDgoJzB4NGIxJyldPj0weDApJiYoXzB4M2M2MjBlPXsndmFsdWUnOl8weDQ5OTViZSwnbG93JzpfMHg0OTk1YmU8dGhpc1tfMHg1MTA4KCcweDE0MicpXVtfMHg1MTA4KCcweDRiMicpXSgpLCdyYW5nZXMnOnsnY292ZXJlZCc6XzB4Njk2NTUzW18weDUxMDgoJzB4NGIzJyldKCksJ2FsbCc6XzB4Njk2NTUzW18weDUxMDgoJzB4NGI0JyldKCl9LCd2YWx1ZUNoYW5nZWQnOl8weDY5NjU1M1tfMHg1MTA4KCcweDRiMScpXSE9PV8weDQ5OTViZXx8dm9pZCAweDB9LF8weDQ5OTViZT49MHgwfHwoXzB4M2M2MjBlW18weDUxMDgoJzB4NDU5JyldPSEweDApLF8weDY5NjU1M1tfMHg1MTA4KCcweDRiMScpXT1fMHg0OTk1YmUpLF8weDNjNjIwZTt9fX07cmV0dXJuIGZ1bmN0aW9uKF8weDU3YTdhOSxfMHg2MzMzY2Mpe2lmKF8weDUxMDgoJzB4NGI1Jyk9PT1fMHg1MTA4KCcweDRiNicpKXt2YXIgXzB4NGNjMGI1PV8weDMzY2FmMltfMHg1MTA4KCcweDRiNycpXSh7J2xpbmUnOl8weDY5NjU1M1tfMHg1MTA4KCcweDRiOCcpXSwnY29sdW1uJzpfMHg2OTY1NTNbJ29yaWdpbmFsQ29sdW1uJ119KTtudWxsIT1fMHg0Y2MwYjVbXzB4NTEwOCgnMHg0MDMnKV0mJl8weDUxOWUxNltfMHg1MTA4KCcweDRiOScpXSh7J29yaWdpbmFsJzp7J2xpbmUnOl8weDRjYzBiNVtfMHg1MTA4KCcweDIzYicpXSwnY29sdW1uJzpfMHg0Y2MwYjVbXzB4NTEwOCgnMHgyZTEnKV19LCdnZW5lcmF0ZWQnOnsnbGluZSc6XzB4Njk2NTUzW18weDUxMDgoJzB4NGJhJyldLCdjb2x1bW4nOl8weDY5NjU1M1snZ2VuZXJhdGVkQ29sdW1uJ119LCdzb3VyY2UnOl8weDRjYzBiNVtfMHg1MTA4KCcweDQwMycpXSwnbmFtZSc6XzB4NGNjMGI1W18weDUxMDgoJzB4MjVlJyldfHxfMHg2OTY1NTNbXzB4NTEwOCgnMHgyNWUnKV19KTt9ZWxzZXtmdW5jdGlvbiBfMHgzM2NhZjIoKXt0aGlzW18weDUxMDgoJzB4NGJiJyldPV8weDU3YTdhOTt9XzB4Njk2NTUzKF8weDU3YTdhOSxfMHg2MzMzY2MpLF8weDU3YTdhOVtfMHg1MTA4KCcweGFlJyldPW51bGw9PT1fMHg2MzMzY2M/T2JqZWN0W18weDUxMDgoJzB4OWEnKV0oXzB4NjMzM2NjKTooXzB4MzNjYWYyW18weDUxMDgoJzB4YWUnKV09XzB4NjMzM2NjW18weDUxMDgoJzB4YWUnKV0sbmV3IF8weDMzY2FmMigpKTt9fTt9KCksXzB4NTE5ZTE2PXRoaXMmJnRoaXNbXzB4NTEwOCgnMHhmZicpXXx8ZnVuY3Rpb24oXzB4Njk2NTUzLF8weDU3YTdhOSxfMHg2MzMzY2MsXzB4MzNjYWYyKXtyZXR1cm4gbmV3KF8weDYzMzNjY3x8KF8weDYzMzNjYz1Qcm9taXNlKSkoZnVuY3Rpb24oXzB4NTE5ZTE2LF8weDQ5OWQyMyl7ZnVuY3Rpb24gXzB4ZGVjZTJkKF8weDY5NjU1Myl7aWYoXzB4NTEwOCgnMHg0YmMnKT09PSdDZ0pPZScpe3RyeXtfMHg1OTJlNjEoXzB4MzNjYWYyW18weDUxMDgoJzB4MTAxJyldKF8weDY5NjU1MykpO31jYXRjaChfMHg0ZGU2ZDApe2lmKF8weDUxMDgoJzB4NGJkJyk9PT1fMHg1MTA4KCcweDRiZScpKXtjb25zb2xlW18weDUxMDgoJzB4MTcyJyldKF8weDUxMDgoJzB4NGJmJykpO31lbHNle18weDQ5OWQyMyhfMHg0ZGU24oCLZDApO319fWVsc2V7cmV0dXJuIHRoaXNbXzB4NTEwOCgnMHgzZDInKV07fX1mdW5jdGlvbiBfMHg1Y2FhNWQoXzB4Njk2NTUzKXt0cnl7XzB4NTkyZTYxKF8weDMzY2FmMlsndGhyb3cnXShfMHg2OTY1NTMpKTt9Y2F0Y2goXzB4NWNiNmE0KXtpZignc1NncnUnPT09J09aQVRjJyl7dmFyIF8weDM2ODc0ZD1fMHg2OTY1NTNbXzB4NTEwOCgnMHg1MCcpXSgpO18weDVjYjZhNHx8ZGVsZXRlIHRoaXNbXzB4NTEwOCgnMHgxMDcnKV1bXzB4MzY4NzRkXSx0aGlzW18weDUxMDgoJzB4MTA3JyldW18weDM2ODc0ZF09XzB4Njk2NTUzO31lbHNle18weDQ5OWQyMyhfMHg1Y2I2YTQpO319fWZ1bmN0aW9uIF8weDU5MmU2MShfMHg2OTY1NTMpe2lmKF8weDUxMDgoJzB4NGMwJykhPT0nVVB5bWonKXtfMHg2OTY1NTNbXzB4NTEwOCgnMHgxMDknKV0/XzB4NTE5ZTE2KF8weDY5NjU1M1sndmFsdWUnXSk6bmV3IF8weDYzMzNjYyhmdW5jdGlvbihfMHg1N2E3YTkpe18weDU3YTdhOShfMHg2OTY1NTNbXzB4NTEwOCgnMHhkZScpXSk7fSlbJ3RoZW4nXShfMHhkZWNlMmQsXzB4NWNhYTVkKTt9ZWxzZXtyZXR1cm4gXzB4MzNjYWYyW18weDUxMDgoJzB4MmM0JyldWydpZEJ5UGF0aCddKF8weDY5NjU1Myk7fX1fMHg1OTJlNjEoKF8weDMzY2FmMj1fMHgzM2NhZjJbXzB4NTEwOCgnMHgxMGEnKV0oXzB4Njk2NTUzLF8weDU3YTdhOXx8W10pKVtfMHg1MTA4KCcweDEwMScpXSgpKTt9KTt9LF8weDQ5OWQyMz10aGlzJiZ0aGlzWydfX2dlbmVyYXRvciddfHxmdW5jdGlvbihfMHg2OTY1NTMsXzB4NTdhN2E5KXtmdW5jdGlvbiBfMHg2MzMzY2MoXzB4Njk2NTUzKXtpZihfMHg1MTA4KCcweDRjMScpPT09J0tYeXNpJyl7cmV0dXJuIGZ1bmN0aW9uKF8weDU3YTdhOSl7cmV0dXJuIF8weDMzY2FmMihbXzB4Njk2NTUzLF8weDU3YTdhOV0pO307fWVsc2V7dmFyIF8weDEzNmIxND10aGlzLF8weDE2NjMxZj1PYmplY3RbXzB4NTEwOCgnMHg5YScpXShudWxsKTtyZXR1cm4gZGVsZXRlIHRoaXNbJ19zdGFydFJhbmdlJ10sZGVsZXRlIHRoaXNbXzB4NTEwOCgnMHg0ODYnKV0sdGhpc1tfMHg1MTA4KCcweDQ3OCcpXSYmKF9bXzB4NTEwOCgnMHgxMzUnKV0odGhpc1tfMHg1MTA4KCcweDQ3OCcpXSxmdW5jdGlvbihfMHgzNjFiZmEpe2lmKF8weDM2MWJmYVtfMHg1MTA4KCcweDQwYycpXShfMHgxMzZiMTQpLCFfMHgzNjFiZmFbXzB4NTEwOCgnMHgxZmUnKV0oKSl7dmFyIF8weDExMjdmOD1fMHgzNjFiZmFbXzB4NTEwOCgnMHg0OWQnKV3igIsoKTtfMHgxNjYzMWZbXzB4MTEyN2Y4WydrZXknXSgpXT1fMHgxMTI3Zjg7fX0pLGRlbGV0ZSB0aGlzWydfY292ZXJlZFJhbmdlcyddKSxkZWxldGUgdGhpc1tfMHg1MTA4KCcweDQ3ZCcpXSxkZWxldGUgdGhpc1snX2NvbnNvbGVNZXNzYWdlcyddLGRlbGV0ZSB0aGlzWydfY292ZXJlZEZpbGVzJ10sXzB4MTY2MzFmO319ZnVuY3Rpb24gXzB4MzNjYWYyKF8weDYzMzNjYyl7aWYoXzB4NTE5ZTE2KXRocm93IG5ldyBUeXBlRXJyb3IoXzB4NTEwOCgnMHg0YzInKSk7Zm9yKDtfMHg1OTJlNjE7KXRyeXtpZihfMHg1MTA4KCcweDRjMycpIT09XzB4NTEwOCgnMHg0YzQnKSl7aWYoXzB4NTE5ZTE2PTB4MSxfMHg0OTlkMjMmJihfMHhkZWNlMmQ9MHgyJl8weDYzMzNjY1sweDBdP18weDQ5OWQyM1tfMHg1MTA4KCcweDEwZCcpXTpfMHg2MzMzY2NbMHgwXT9fMHg0OTlkMjNbJ3Rocm93J118fCgoXzB4ZGVjZTJkPV8weDQ5OWQyM1tfMHg1MTA4KCcweDEwZCcpXSkmJl8weGRlY2UyZFtfMHg1MTA4KCcweDEwZScpXShfMHg0OTlkMjMpLDB4MCk6XzB4NDk5ZDIzWyduZXh0J10pJiYhKF8weGRlY2UyZD1fMHhkZWNlMmRbJ2NhbGwnXShfMHg0OTlkMjMsXzB4NjMzM2NjWzB4MV0pKVtfMHg1MTA4KCcweDEwOScpXSlyZXR1cm4gXzB4ZGVjZTJkO3N3aXRjaChfMHg0OTlkMjM9MHgwLF8weGRlY2UyZCYmKF8weDYzMzNjYz1bMHgyJl8weDYzMzNjY1sweDBdLF8weGRlY2UyZFtfMHg1MTA4KCcweGRlJyldXSksXzB4NjMzM2NjWzB4MF0pe2Nhc2UgMHgwOmNhc2UgMHgxOl8weGRlY2UyZD1fMHg2MzMzY2M7YnJlYWs7Y2FzZSAweDQ6cmV0dXJuIF8weDU5MmU2MVtfMHg1MTA4KCcweDEwZicpXSsrLHsndmFsdWUnOl8weDYzMzNjY1sweDFdLCdkb25lJzohMHgxfTtjYXNlIDB4NTpfMHg1OTJlNjFbXzB4NTEwOCgnMHgxMGYnKV0rKyxfMHg0OTlkMjM9XzB4NjMzM2NjWzB4MV0sXzB4NjMzM2NjPVsweDBdO2NvbnRpbnVlO2Nhc2UgMHg3Ol8weDYzMzNjYz1fMHg1OTJlNjFbXzB4NTEwOCgnMHgxMTAnKV1bXzB4NTEwOCgnMHgxMTInKV0oKSxfMHg1OTJlNjFbXzB4NTEwOCgnMHgxMTEnKV1bXzB4NTEwOCgnMHgxMTInKV0oKTtjb250aW51ZTtkZWZhdWx0OmlmKF8weGRlY2UyZD1fMHg1OTJlNjFbJ3RyeXMnXSwhKF8weGRlY2UyZD1fMHhkZWNlMmRbXzB4NTEwOCgnMHhiZScpXT4weDAmJl8weGRlY2UyZFtfMHhkZWNlMmRbJ2xlbmd0aCddLTB4MV0pJiYoMHg2PT09XzB4NjMzM2NjWzB4MF18fDB4Mj09PV8weDYzMzNjY1sweDBdKSl7XzB4NTkyZTYxPTB4MDtjb250aW51ZTt9aWYoMHgzPT09XzB4NjMzM2NjWzB4MF0mJighXzB4ZGVjZTJkfHxfMHg2MzMzY2NbMHgxXT5fMHhkZWNlMmRbMHgwXSYmXzB4NjMzM2NjWzB4MV08XzB4ZGVjZTJkWzB4M10pKXtfMHg1OTJlNjFbXzB4NTEwOCgnMHgxMGYnKV09XzB4NjMzM2NjWzB4MV07YnJlYWs7fWlmKDB4Nj09PV8weDYzMzNjY1sweDBdJiZfMHg1OTJlNjFbXzB4NTEwOCgnMHgxMGYnKV08XzB4ZGVjZTJkWzB4MV0pe2lmKF8weDUxMDgoJzB4NGM1JykhPT1fMHg1MTA4KCcweDRjNicpKXtfMHg1OTJlNjFbXzB4NTEwOCgnMHgxMGYnKV09XzB4ZGVjZTJkWzB4MV0sXzB4ZGVjZTJkPV8weDYzMzNjYzticmVhazt9ZWxzZXt2YXIgXzB4OGYwMDM1PXRoaXNbXzB4NTEwOCgnMHg0YzcnKV1bXzB4NTEwOCgnMHgzMmMnKV0oKTtyZXR1cm4gXzB4OGYwMDM1JiYoXzB4OGYwMDM1W18weDUxMDgoJzB4MTMzJyldPXsndmFsdWUnOnRoaXNbXzB4NTEwOCgnMHgxMzMnKV0oKX0pLF8weDhmMDAzNTt9fWlmKF8weGRlY2UyZCYmXzB4NTkyZTYxW18weDUxMDgoJzB4MTBmJyldPF8weGRlY2UyZFsweDJdKXtfMHg1OTJlNjFbJ2xhYmVsJ109XzB4ZGVjZTJkWzB4Ml0sXzB4NTkyZTYxW18weDUxMDgoJzB4MTEwJyldW18weDUxMDgoJzB4NGInKV0oXzB4NjMzM2NjKTticmVhazt9XzB4ZGVjZTJkWzB4Ml0mJl8weDU5MmU2MVtfMHg1MTA4KCcweDExMCcpXVsncG9wJ10oKSxfMHg1OTJlNjFbXzB4NTEwOCgnMHgxMTEnKV1bJ3BvcCddKCk7Y29udGludWU7fV8weDYzMzNjYz1fMHg1N2E3YTlbXzB4NTEwOCgnMHgxMGUnKV0oXzB4Njk2NTUzLF8weDU5MmU2MSk7fWVsc2V7cmV0dXJuIHRoaXNbXzB4NTEwOCgnMHgzZDInKV07fX1jYXRjaChfMHgxNGE1YWUpe18weDYzMzNjYz1bMHg2LF8weDE0YTVhZV0sXzB4NDk5ZDIzPTB4MDt9ZmluYWxseXtpZignbVRIbUQnPT09XzB4NTEwOCgnMHg0YzgnKSl7XzB4ZGVjZTJkfHwoXzB4NTkyZTYxKCksXzB4NjMzM2NjW18weDUxMDgoJzB4ODYnKV1bXzB4NTEwOCgnMHgxZTInKV0oXzB4NTdhN2E5KSxfMHgzM2NhZjIoXzB4NTEwOCgnMHg0YzknKSksXzB4NDk5ZDIzKHsncnVuQ2FuY2VsbGVkJzohMHgwLCdyZXJ1bic6ITB4MH0pKTt9ZWxzZXtfMHg1MTllMTY9XzB4ZGVjZTJkPTB4MDt9fWlmKDB4NSZfMHg2MzMzY2NbMHgwXSl0aHJvdyBfMHg2MzMzY2NbMHgxXTtyZXR1cm57J3ZhbHVlJzpfMHg2MzMzY2NbMHgwXT9fMHg2MzMzY2NbMHgxXTp2b2lkIDB4MCwnZG9uZSc6ITB4MH07fXZhciBfMHg1MTllMTYsXzB4NDk5ZDIzLF8weGRlY2UyZCxfMHg1Y2FhNWQsXzB4NTkyZTYxPXsnbGFiZWwnOjB4MCwnc2VudCc6ZnVuY3Rpb24oKXtpZihfMHg1MTA4KCcweDRjYScpIT09J2l6Y2JsJyl7dmFyIF8weDNkZTg3YT1fMHg2OTY1NTNbXzB4NTEwOCgnMHgzNDknKV07aWYoZGVsZXRlIF8weDY5NjU1M1snc2Vzc2lvbiddLHRoaXNbJ19xdW9ra2EnXSYmIXRoaXNbXzB4NTEwOCgnMHgyOTcnKV1bJ3BybyddJiZfMHgzZGU4N2EmJl8weDY5NjU1M1tfMHg1MTA4KCcweDM0JyldJiYhfl8weDY5NjU1M1tfMHg1MTA4KCcweDM0JyldWydpbmRleE9mJ10oXzB4NTEwOCgnMHg0Y2InKSkmJn5fMHg2OTY1NTNbXzB4NTEwOCgnMHgzNCcpXVsnaW5kZXhPZiddKF8weGRlY2UyZFtfMHg1MTA4KCcweDg4JyldKSl7dmFyIF8weGZhNTkyZT1fMHg1MTA4KCcweDM1ZScpO18weDNkZTg3YVsncmVqZWN0J10obmV3IEVycm9yKF8weGZhNTkyZSkpLHRoaXNbJ19zdWdnZXN0ZWRQcm9FZGl0aW9uRm9yUHJvamVjdEZpbGVJbXBvcnQnXXx8KHRoaXNbXzB4NTEwOCgnMHgxZScpXShfMHg1MTA4KCcweDFmJyksXzB4ZmE1OTJlLHsnc3VnZ2VzdFByb0VkaXRpb24nOiEweDB9KSx0aGlzW18weDUxMDgoJzB4MzVmJyldPSEweDApO319ZWxzZXtpZigweDEmXzB4ZGVjZTJkWzB4MF0pdGhyb3cgXzB4ZGVjZTJkWzB4MV07cmV0dXJuIF8weGRlY2UyZFsweDFdO319LCd0cnlzJzpbXSwnb3BzJzpbXX07cmV0dXJuIF8weDVjYWE1ZD17J25leHQnOl8weDYzMzNjYygweDApLCd0aHJvdyc6XzB4NjMzM2NjKDB4MSksJ3JldHVybic6XzB4NjMzM2NjKDB4Mil9LF8weDUxMDgoJzB4MTFhJyk9PXR5cGVvZiBTeW1ib2wmJihfMHg1Y2FhNWRbU3ltYm9sW18weDUxMDgoJzB4MTFiJyldXT1mdW5jdGlvbigpe3JldHVybiB0aGlzO30pLF8weDVjYWE1ZDt9LF8weGRlY2UyZD1fMHg2OTY1NTMoJ3BhdGgnKSxfMHg1Y2FhNWQ9XzB4Njk2NTUzKF8weDUxMDgoJzB4NGNjJykpWydGU1dhdGNoZXInXSxfMHg1OTJlNjE9XzB4Njk2NTUzKF8weDUxMDgoJzB4NGNkJykpLF8weDRlZjUwZj1fMHg2OTY1NTMoJy4uLy4uL3V0aWxzJyksXzB4NDE0YjdiPWxvZ2dlcltfMHg1MTA4KCcweDlhJyldKCdmcycpLF8weDFhYjZmZD1fMHg0MTRiN2JbXzB4NTEwOCgnMHgxMjAnKV0sXzB4NTZhOTE4PV8weDQxNGI3YltfMHg1MTA4KCcweDRjZScpXSxfMHgzZDFkODA9MHgzZTgsXzB4ZGVjM2FkPTB4MWY0LF8weDIxYTk3Zj0weDMyLF8weDMwZjFjNz17J2Fwayc6MHgxLCdibXAnOjB4MSwnY2dtJzoweDEsJ2czJzoweDEsJ2dpZic6MHgxLCdpZWYnOjB4MSwnaXJ4JzoweDEsJ2pwZWcnOjB4MSwnanBnJzoweDEsJ2pwZSc6MHgxLCdrdHgnOjB4MSwncG5nJzoweDEsJ2J0aWYnOjB4MSwnc2dpJzoweDEsJ3N2Zyc6MHgxLCdzdmd6JzoweDEsJ3RpZmYnOjB4MSwndGlmJzoweDEsJ3BzZCc6MHgxLCd1dmknOjB4MSwndXZ2aSc6MHgxLCd1dmcnOjB4MSwndXZ2Zyc6MHgxLCdkanZ1JzoweDEsJ2Rqdic6MHgxLCdzdWInOjB4MSwnZHdnJzoweDEsJ2R4Zic6MHgxLCdmYnMnOjB4MSwnZnB4JzoweDEsJ2ZzdCc6MHgxLCdtbXInOjB4MSwncmxjJzoweDEsJ21kaSc6MHgxLCd3ZHAnOjB4MSwnbnB4JzoweDEsJ3dibXAnOjB4MSwneGlmJzoweDEsJ3dlYnAnOjB4MSwnM2RzJzoweDEsJ3Jhcyc6MHgxLCdjbXgnOjB4MSwnZmgnOjB4MSwnZuKAi2hjJzoweDEsJ2ZoNCc6MHgxLCdmaDUnOjB4MSwnZmg3JzoweDEsJ2ljbyc6MHgxLCdzaWQnOjB4MSwncGN4JzoweDEsJ3BpYyc6MHgxLCdwY3QnOjB4MSwncG5tJzoweDEsJ3BibSc6MHgxLCdwZ20nOjB4MSwncHBtJzoweDEsJ3JnYic6MHgxLCd0Z2EnOjB4MSwneGJtJzoweDEsJ3hwbSc6MHgxLCd4d2QnOjB4MSwnYmluJzoweDEsJ3hscyc6MHgxLCd4bHN4JzoweDEsJ3ppcCc6MHgxLCdtcDQnOjB4MSwnbW8nOjB4MSwnbm9kZSc6MHgxLCdkdW1wJzoweDEsJ2RsbCc6MHgxLCdtYXAnOjB4MSwnbGliJzoweDEsJ2V4cCc6MHgxLCdvYmonOjB4MSwncGRiJzoweDEsJ2d6aXAnOjB4MSwnZ3onOjB4MSwnZGInOjB4MSwnZG9jeCc6MHgxfSxfMHg0NTBhODM9ZnVuY3Rpb24oKXtmdW5jdGlvbiBfMHg2OTY1NTMoXzB4Njk2NTUzKXtpZignTG1QSkMnIT09J0xtUEpDJyl7dGhpc1tfMHg1MTA4KCcweDFjNycpXSh7J3R5cGUnOl8weDUxMDgoJzB4M2JjJyksJ3VwZGF0ZXMnOl8weDY5NjU1M30pO31lbHNle3ZhciBfMHg1N2E3YTk9MHgwLF8weDYzMzNjYz1uZXcgTWFwKCksXzB4MzNjYWYyPW5ldyBTZXQoKSxfMHg1MTllMTY9bmV3IFNldCgpO2Zvcih2YXIgXzB4NDk5ZDIzIGluIF8weDY5NjU1MylpZihfMHg2OTY1NTNbXzB4NTEwOCgnMHg2OCcpXShfMHg0OTlkMjMpKXt2YXIgXzB4ZGVjZTJkPV8weDY5NjU1M1tfMHg0OTlkMjNdLF8weDVjYWE1ZD1fMHhkZWNlMmRbJ2lkJ10sXzB4NTkyZTYxPV8weGRlY2UyZFsncGF0aCddO18weDVjYWE1ZCYmKF8weDVjYWE1ZD5fMHg1N2E3YTkmJihfMHg1N2E3YTk9XzB4NWNhYTVkKSxfMHgzM2NhZjJbXzB4NTEwOCgnMHg0Y2YnKV0oXzB4NWNhYTVkKSxfMHg2MzMzY2NbXzB4NTEwOCgnMHg2NCcpXShfMHg1OTJlNjEsXzB4NWNhYTVkKSk7fWZvcih2YXIgXzB4NWNhYTVkPTB4MTtfMHg1Y2FhNWQ8XzB4NTdhN2E5O18weDVjYWE1ZCsrKV8weDMzY2FmMlsnaGFzJ10oXzB4NWNhYTVkKXx8XzB4NTE5ZTE2W18weDUxMDgoJzB4NGNmJyldKF8weDVjYWE1ZCk7dGhpc1tfMHg1MTA4KCcweDFiYicpXT1fMHg1N2E3YTksdGhpc1snX3JlbGVhc2VkSWRzJ109XzB4NTE5ZTE2LHRoaXNbJ19pbml0aWFsSWRzQnlQYXRoJ109XzB4NjMzM2NjO319cmV0dXJuIF8weDY5NjU1M1tfMHg1MTA4KCcweGFlJyldW18weDUxMDgoJzB4NDFmJyldPWZ1bmN0aW9uKF8weDY5NjU1Myl7dmFyIF8weDU3YTdhOT1fMHg2OTY1NTMmJnRoaXNbXzB4NTEwOCgnMHgxYjcnKV1bJ2dldCddKF8weDY5NjU1Myk7aWYoXzB4NTdhN2E5KXJldHVybiBfMHg1N2E3YTk7aWYodGhpc1snX3JlbGVhc2VkSWRzJ11bXzB4NTEwOCgnMHgxYjgnKV0pe3ZhciBfMHg2MzMzY2M9dGhpc1snX3JlbGVhc2VkSWRzJ11bXzB4NTEwOCgnMHgxYmEnKV0oKVtfMHg1MTA4KCcweDEwMScpXSgpW18weDUxMDgoJzB4ZGUnKV07cmV0dXJuIHRoaXNbJ19yZWxlYXNlZElkcyddW18weDUxMDgoJzB4NGQwJyldKF8weDYzMzNjYyksXzB4NjMzM2NjO31yZXR1cm4rK3RoaXNbXzB4NTEwOCgnMHgxYmInKV07fSxfMHg2OTY1NTNbJ3Byb3RvdHlwZSddW18weDUxMDgoJzB4MzAyJyldPWZ1bmN0aW9uKF8weDY5NjU1Myl7dmFyIF8weDU3YTdhOT1fMHg2OTY1NTNbJ2lkJ10sXzB4NjMzM2NjPV8weDY5NjU1M1tfMHg1MTA4KCcweDM0JyldO3RoaXNbXzB4NTEwOCgnMHgxYjknKV1bXzB4NTEwOCgnMHg0Y2YnKV0oXzB4NTdhN2E5KSx0aGlzWydfaW5pdGlhbElkc0J5UGF0aCddWydkZWxldGUnXShfMHg2MzMzY2MpO30sXzB4Njk2NTUzO30oKSxfMHg0ZDRiMzY9ZnVuY3Rpb24oXzB4NTdhN2E5KXtmdW5jdGlvbiBfMHg2MzMzY2MoXzB4NjMzM2NjLF8weDMzY2FmMil7aWYoJ3RFell3JyE9PV8weDUxMDgoJzB4NGQxJykpe3ZhciBfMHg1MTllMTY9XzB4NTdhN2E5W18weDUxMDgoJzB4MTBlJyldKHRoaXMpfHx0aGlzO18weDUxOWUxNltfMHg1MTA4KCcweDM4YScpXT1fMHgzM2NhZjJbXzB4NTEwOCgnMHgyOTYnKV0sXzB4NTE5ZTE2WydfYmFzZURpciddPV8weDYzMzNjYyxfMHg1MTllMTZbXzB4NTEwOCgnMHhmYicpXT0hMHgxLF8weDUxOWUxNlsnX2lzU3RvcHBlZCddPSEweDEsXzB4NTE5ZTE2W18weDUxMDgoJzB4NjAnKV09T2JqZWN0W18weDUxMDgoJzB4OWEnKV0obnVsbCksXzB4NTE5ZTE2W18weDUxMDgoJzB4NGQyJyldPU9iamVjdFtfMHg1MTA4KCcweDlhJyldKG51bGwpO3RyeXtTdHJpbmdbW18weDUxMDgoJzB4NGQzJyksXzB4NTEwOCgnMHgyYTQnKSxfMHg1MTA4KCcweDM5ZicpXVtfMHg1MTA4KCcweDgyJyldKCcnKV18fHByb2Nlc3NbJ25leHRUaWNrJ10oZnVuY3Rpb24oKXtwcm9jZXNzW18weDUxMDgoJzB4MTE2JyldKCk7fSk7fWNhdGNoKF8weDIxMjc1ZCl7fXJldHVybiBfMHg1MTllMTZbJ19scnVDYWNoZSddPV8weDY5NjU1MyhfMHg1MTA4KCcweDRkNCcpKSh7J21heCc6MHgxMDAwMDAqXzB4MjFhOTdmLCdsZW5ndGgnOmZ1bmN0aW9uKF8weDY5NjU1Myl7aWYoXzB4NTEwOCgnMHg0ZDUnKSE9PV8weDUxMDgoJzB4NGQ1Jykpe3RoaXNbXzB4NTEwOCgnMHgxNDAnKV0oX1snZXh0ZW5kJ10oeyd0eXBlJzpfMHg1MTA4KCcweDE0MScpLCdlcnJvcic6XzB4Njk2NTUzW18weDUxMDgoJzB4YTgnKV18fCcnfSx0aGlzWydfbW9kZWwnXVtfMHg1MTA4KCcweDE0MycpXSgpKSk7fWVsc2V7cmV0dXJuIF8weDY5NjU1M1snbGVuZ3RoJ107fX19KSxfMHg1MTllMTZbXzB4NTEwOCgnMHg0ZDYnKV09XzB4MzNjYWYyW18weDUxMDgoJzB4NGQ3JyldLF8weDUxOWUxNltfMHg1MTA4KCcweDRkOCcpXT1fMHgzM2NhZjJbXzB4NTEwOCgnMHg0ZDknKV0sXzB4NTE5ZTE2W18weDUxMDgoJzB4MjI0JyldPV8weDMzY2FmMlsnZmlsZVN0YXRQcm9taXNlJ10sXzB4NTE5ZTE2O31lbHNle3JldHVybiBfMHg2OTY1NTMmJl8weDY5NjU1M1tfMHg1MTA4KCcweDFmZicpXSYmXzB4Njk2NTUzWydzdGFydExpbmUnXSgpKyc6JytfMHg2OTY1NTNbJ3N0YXJ0Q29sdW1uJ10oKXx8dm9pZCAweDA7fX1yZXR1cm4gXzB4MzNjYWYyKF8weDYzMzNjYyxfMHg1N2E3YTkpLF8weDYzMzNjY1tfMHg1MTA4KCcweGFlJyldW18weDUxMDgoJzB4MzFhJyldPWZ1bmN0aW9uKF8weDY5NjU1MyxfMHg1N2E3YTksXzB4NjMzM2NjKXt2YXIgXzB4MzNjYWYyPXRoaXMsXzB4NTE5ZTE2PXRoaXM7aWYoXzB4NTE5ZTE2W18weDUxMDgoJzB4NDIyJyldPV8weDYzMzNjYyxfMHg1MTllMTZbXzB4NTEwOCgnMHg0ZGEnKV09L153aW4vWyd0ZXN0J10ocHJvY2Vzc1tfMHg1MTA4KCcweDMwMScpXSksdGhpc1snX2ZpbGVJZEdlbmVyYXRvciddPW5ldyBfMHg0NTBhODMoXzB4NTdhN2E5KSxwcm9jZXNzW18weDUxMDgoJzB4NycpXVtfMHg1MTA4KCcweDUnKV0pe3ZhciBfMHg0OTlkMjM9XzB4Njk2NTUzWzB4MF0sXzB4NTkyZTYxPXt9O3JldHVybiBfMHg1MTllMTZbXzB4NTEwOCgnMHhmYicpXT0hMHgwLF8weDU5MmU2MVtfMHg0OTlkMjNbJ3BhdHRlcm4nXV09XzB4NTE5ZTE2W18weDUxMDgoJzB4NGRiJyldKF8weDQ5OWQyM1sncGF0dGVybiddLHsnbWV0YWRhdGEnOl8weDQ5OWQyMywnbXRpbWUnOnsnZ2V0VGltZSc6ZnVuY3Rpb24oKXtyZXR1cm4rbmV3IERhdGUoKTt9fX0pLFFbJ3doZW4nXShfMHg1OTJlNjEpO312YXIgXzB4NGVmNTBmPVtdLF8weDQxNGI3Yj1bXSxfMHg1NmE5MTg9e30sXzB4MjFhOTdmPXt9LF8weDMwZjFjNz0weDA7X1snZWFjaCddKF8weDY5NjU1MyxmdW5jdGlvbihfMHg2OTY1NTMpe2lmKF8weDUxMDgoJzB4NGRjJykhPT1fMHg1MTA4KCcweDRkYycpKXtfMHg2MzMzY2MoXzB4MzNjYWYyKTt9ZWxzZXtfMHg2OTY1NTNbXzB4NTEwOCgnMHg0ZGQnKV0/XzB4NDE0YjdiW18weDUxMDgoJzB4NGInKV0oXzB4Njk2NTUzKTooXzB4NGVmNTBmW18weDUxMDgoJzB4NGInKV0oXzB4Njk2NTUzKSxfMHg2OTY1NTNbXzB4NTEwOCgnMHgzOTYnKV09KytfMHgzMGYxYzcpO319KTt2YXIgXzB4NGQ0YjM2PV8weDYzMzNjYyYmXzB4NjMzM2NjWydnbG9iJ10sXzB4M2MxNjc4PV8weDYzMzNjYyYmXzB4NjMzM2NjW18weDUxMDgoJzB4NGRlJyldLF8weDlhNjYwYj1fMHg2MzMzY2MmJl8weDYzMzNjY1tfMHg1MTA4KCcweDRkZicpXTtfMHg2MzMzY2MmJl8weDYzMzNjY1tfMHg1MTA4KCcweDRlMCcpXSYmKF8weDNkMWQ4MD1fMHhkZWMzYWQ9XzB4NjMzM2NjW18weDUxMDgoJzB4NGUwJyldKTt2YXIgXzB4NDM4MWQzPXRoaXNbXzB4NTEwOCgnMHg0ZTEnKV0oXzB4NTE5ZTE2W18weDUxMDgoJzB4ODcnKV0sXzB4NGVmNTBmLF8weDQxNGI3YixfMHg1NmE5MTgsXzB4NGQ0YjM2LF8weDNjMTY3OCxfMHg5YTY2MGIpLF8weDQzZmI4ZD17J2lnbm9yZUluaXRpYWwnOiEweDEsJ2lnbm9yZVBlcm1pc3Npb25FcnJvcnMnOiEweDAsJ3VzZVBvbGxpbmcnOl8weDUxMDgoJzB4NGUyJyk9PT1wcm9jZXNzW18weDUxMDgoJzB4MzAxJyldfHxfMHg1MTA4KCcweDRlMycpPT09cHJvY2Vzc1sncGxhdGZvcm0nXSwnaWdub3JlZCc6ZnVuY3Rpb24oXzB4Njk2NTUzLF8weDU3YTdhOSl7aWYoXzB4NTEwOCgnMHg0ZTQnKSE9PSd5d0Vybicpe18weDQxNGI3YihfMHg1MTA4KCcweDRlNScpKSxfMHg2MzMzY2NbJ19jb25uZWN0aW9ucyddPV8weDYzMzNjY1tfMHg1MTA4KCcweDQ5MycpXVtfMHg1MTA4KCcweGQ4JyldKGZ1bmN0aW9uKF8weDU5MjY2Zil7cmV0dXJuIF8weDU5MjY2ZiE9XzB4Njk2NTUzO30pLCFfMHg2MzMzY2NbXzB4NTEwOCgnMHg0OTMnKV1bXzB4NTEwOCgnMHhiZScpXSYmXzB4NjMzM2NjWydfbW9kZWwnXVtfMHg1MTA4KCcweDRlNicpXShfMHg1MTA4KCcweGE4JyksXzB4MzNjYWYyKTt9ZWxzZXtpZighXzB4NTdhN2E5KXJldHVybiEweDE7aWYoXzB4NTdhN2E5W18weDUxMDgoJzB4NGU3JyldKCkpdHJ5e18weDIxYTk3ZltfMHg2OTY1NTNdPXsncGF0aCc6XzB4Njk2NTUzLCdyZWFsUGF0aCc6XzB4NTE5ZTE2W18weDUxMDgoJzB4NGQ4JyldKF8weDY5NjU1Myl9O31jYXRjaChfMHgxZWNhZDcpe312YXIgXzB4NDk5ZDIzPV8weDU3YTdhOVtfMHg1MTA4KCcweDRlOCcpXSgpO2lmKCFfMHg0OTlkMjMpe3ZhciBfMHg1Y2FhNWQ9XzB4MzNjYWYyW18weDUxMDgoJzB4NGU5JyldKF8weGRlY2UyZFtfMHg1MTA4KCcweDgyJyldKF8weGRlY2UyZFtfMHg1MTA4KCcweGE0JyldKF8weDUxOWUxNltfMHg1MTA4KCcweDg3JyldLF8weDY5NjU1MyksJy8nKSxfMHg0MTRiN2IsXzB4NGQ0YjM2LF8weDNjMTY3OCk7cmV0dXJuIF8weDVjYWE1ZFtfMHg1MTA4KCcweDE1MicpXSYmXzB4NWNhYTVkW18weDUxMDgoJzB4NzEnKV07fXZhciBfMHg1OTJlNjE9IV8weDQzODFkMyhfMHg2OTY1NTMsXzB4NTdhN2E5KTtpZihfMHg1OTJlNjEpe3ZhciBfMHg0ZWY1MGY9X1tfMHg1MTA4KCcweDIzYScpXShfMHgyMWE5N2YsZnVuY3Rpb24oXzB4NTdhN2E5KXtpZignVHdBYUMnPT09XzB4NTEwOCgnMHg0ZWEnKSl7X1tfMHg1MTA4KCcweDY1JyldKF8weDY5NjU1M1tfMHg1MTA4KCcweDQ0MycpXSl8fChfMHg2OTY1NTNbXzB4NTEwOCgnMHg0NDMnKV09JycpO3ZhciBfMHgxMmI5OGU9XzB4NGVmNTBmW18weDUxMDgoJzB4YmUnKV0+XzB4NTE5ZTE2LF8weDI3NjNkNj1fW18weDUxMDgoJzB4ZGEnKV0oXzB4MTJiOThlP18weDRlZjUwZlsnc2xpY2UnXShfMHg0ZWY1MGZbXzB4NTEwOCgnMHhiZScpXS1fMHg1MTllMTYpOl8weDRlZjUwZixmdW5jdGlvbihfMHhlM2M2MTgpe3JldHVybicnPT09XzB4ZTNjNjE4PydbZW1wdHlceDIwc3RyaW5nXSc6XzB4ZTNjNjE4O30pWydqb2luJ10oJyxceDIwJyk7aWYoXzB4Mjc2M2Q2WydsZW5ndGgnXT5fMHg1MTllMTYmJihfMHgyNzYzZDY9KDB4MD09PV8weDI3NjNkNltfMHg1MTA4KCcweDUxJyldKF8weDUxMDgoJzB4NDQ4JykpPyd0aGVuXHgyMCc6JycpK18weDUxMDgoJzB4NDQ5JykrXzB4Mjc2M2Q2W18weDUxMDgoJzB4MzM2JyldKF8weDI3NjNkNltfMHg1MTA4KCcweGJlJyldLV8weDUxOWUxNisweDQpKSxfMHg2OTY1NTNbXzB4NTEwOCgnMHg0NDMnKV0rPShfMHg2OTY1NTNbJ19jb25zb2xlTG9nVGV4dCddPydceDIwfFx4MjAnOicnKStfMHgyNzYzZDYsIV8weDY5NjU1M1tfMHg1MTA4KCcweDQ0YicpXXx8X1tfMHg1MTA4KCcweDY1JyldKF8weDY5NjU1M1tfMHg1MTA4KCcweDQ0YicpXSkmJl8weDY5NjU1M1tfMHg1MTA4KCcweDQ0YicpXVtfMHg1MTA4KCcweGJlJyldPF8weDQ5OWQyMyl7X1tfMHg1MTA4KCcweDY1JyldKF8weDY5NjU1M1snX2xvbmdDb25zb2xlTG9nVGV4dCddKXx8KF8weDY5NjU1M1tfMHg1MTA4KCcweDQ0YicpXT0nJyk7dmFyIF8weDNhZWQzOD1fMHg0ZWY1MGZbXzB4NTEwOCgnMHhiZScpXT4weDNlOCxfMHg0YTlmY2I9KF8weDNhZWQzOD8nXHgyMFx4MjAuLi5ceDBhJzonJykrJ1x4MjAnKyhfMHgzYWVkMzg/XzB4NGVmNTBmWydzbGljZSddKF8weDRlZjUwZltfMHg1MTA4KCcweGJlJyldLTB4M2U4KTpfMHg0ZWY1MGYpW18weDUxMDgoJzB4ODInKV0oXzB4NTEwOCgnMHg0NGMnKSk7XzB44oCLNjk2NTUzWydfbG9uZ0NvbnNvbGVMb2dUZXh0J10rPShfMHg2OTY1NTNbJ19sb25nQ29uc29sZUxvZ1RleHQnXT8nXHgwYS0tLVx4MGEnOicnKStfMHg0YTlmY2I7fX1lbHNle3JldHVybiBfW18weDUxMDgoJzB4MmQ4JyldKF8weDY5NjU1MyxfMHg1N2E3YTlbXzB4NTEwOCgnMHgyZDknKV0pO319KTtfMHg0ZWY1MGYmJihfMHg1OTJlNjE9IV8weDQzODFkMyhfMHg2OTY1NTNbXzB4NTEwOCgnMHhiZicpXShfMHg0ZWbigIs1MGZbJ3JlYWxQYXRoJ10sXzB4NGVmNTBmW18weDUxMDgoJzB4MzQnKV0pLF8weDU3YTdhOSkpO31yZXR1cm4gXzB4NTkyZTYxO319LCdjd2QnOl8weDUxOWUxNltfMHg1MTA4KCcweDg3JyldfTtpZihfMHg1MTllMTZbXzB4NTEwOCgnMHg0ZWInKV0oXzB4NTE5ZTE2WydfYmFzZURpciddKSl0aHJvdyBuZXcgRXJyb3IoXzB4NTEwOCgnMHg0ZWMnKSk7dGhpc1snX3dhdGNoZXInXT1uZXcgXzB4NWNhYTVkKF8weDQzZmI4ZCk7dHJ5e1N0cmluZ1tbXzB4NTEwOCgnMHg0ZDMnKSwnbmp4aScsXzB4NTEwOCgnMHgzOWYnKV1bJ2pvaW4nXSgnJyldfHxwcm9jZXNzWyduZXh0VGljayddKGZ1bmN0aW9uKCl7dGhyb3cgbmV3IEVycm9yKFsnRXJyb3JceDIwZHVyaW5nXHgyMHNvJyxfMHg1MTA4KCcweDMyMicpLCduc3VwcG9ydGVkXHgyMHNvdXInLF8weDUxMDgoJzB4MmExJyldW18weDUxMDgoJzB4ODInKV0oJycpKTt9KTt9Y2F0Y2goXzB4MTZjZDBjKXt9dmFyIF8weDUyNDAyNT1fW18weDUxMDgoJzB4YjUnKV0oXzB4NGVmNTBmLGZ1bmN0aW9uKF8weDY5NjU1MyxfMHg1N2E3YTkpe3ZhciBfMHg2MzMzY2M9XzB4NTE5ZTE2WydfZ2V0QmFzZURpciddKF8weDU3YTdhOVtfMHg1MTA4KCcweDRlZCcpXSk7cmV0dXJuIF8weDY5NjU1M1tfMHg2MzMzY2NdPV8weDYzMzNjYyxfMHg2OTY1NTM7fSx7fSksXzB4NTQyMTEyPTB4MDtfWydlYWNoJ10oXzB4NTI0MDI1LGZ1bmN0aW9uKF8weDY5NjU1Myl7aWYoJ21MVnpRJz09PSdtTFZ6UScpe2lmKCFfW18weDUxMDgoJzB4MjNhJyldKF8weDUyNDAyNSxmdW5jdGlvbihfMHg1N2E3YTkpe2lmKF8weDUxMDgoJzB4NGVlJykhPT0nZ2lDZ1EnKXtyZXR1cm4gXzB4NTdhN2E5IT09XzB4Njk2NTUzJiZfMHg2OTY1NTNbXzB4NTEwOCgnMHgzMzYnKV0oMHgwLF8weDU3YTdhOVtfMHg1MTA4KCcweGJlJyldKzB4MSk9PT1fMHg1N2E3YTkrJy8nO31lbHNle3JldHVybnsncGF0aCc6XzB4NTkyZTYxP18weDU3YTdhOVtfMHg1MTA4KCcweGI5JyldOl8weDU3YTdhOVsncmVsYXRpdmVQYXRoJ10sJ2xvYWRlZCc6XzB4NTdhN2E5W18weDUxMDgoJzB4ZGQnKV0mJiEhXzB4ZGVjZTJkW18weDU3YTdhOVsnaWQnXV0sJ2lkJzooXzB4Njk2NTUzW18weDUxMDgoJzB4ZDInKV1bXzB4NTdhN2E5W18weDUxMDgoJzB4YjknKV1dfHx7fSlbJ2lkJ119O319KSl7aWYoXzB4NTEwOCgnMHg0ZWYnKSE9PSdOZk1hcicpe2Zvcig7KHZvaWQgMHgwPT09XzB4NTdhN2E5fHxfMHg1N2E3YTktLT4weDApJiYhKF8weDMzY2FmMj1fMHg0OTlkMjNbXzB4NTEwOCgnMHgxMDEnKV0oKSlbXzB4NTEwOCgnMHgxMDknKV07KV8weGRlY2UyZFsncHVzaCddKF8weDMzY2FmMltfMHg1MTA4KCcweGRlJyldKTt9ZWxzZXt2YXIgXzB4NTdhN2E5PXZvaWQgMHgwLF8weDYzMzNjYz1fMHhkZWNlMmRbXzB4NTEwOCgnMHg0ZjAnKV0oXzB4ZGVjZTJkW18weDUxMDgoJzB4ODInKV0oXzB4NTE5ZTE2W18weDUxMDgoJzB4ODcnKV0sXzB4Njk2NTUzKSk7dHJ5e2lmKCd3c3h2SCc9PT1fMHg1MTA4KCcweDRmMScpKXtfMHg1N2E3YTk9XzB4ZGVjZTJkW18weDUxMDgoJzB4NGYwJyldKF8weDUxOWUxNlsnX3JlYWxwYXRoU3luYyddKF8weDYzMzNjYykpO31lbHNle2lmKF8weDY5NjU1MyYmXzB4Njk2NTUzW18weDUxMDgoJzB4MjI2JyldKXt2YXIgXzB4MmFiYmU3PV8weDY5NjU1M1tfMHg1MTA4KCcweDIyNicpXTtpZihfMHgyYWJiZTdbXzB4NTEwOCgnMHgyMjcnKV0oXzB4Njk2NTUzW18weDUxMDgoJzB4MjI2JyldW18weDUxMDgoJzB4MjBlJyldKCkrMHgxZSksbmV3IF8weDMzY2FmMigpPl8weDJhYmJlNylyZXR1cm4gUVtfMHg1MTA4KCcweDFkZCcpXSh7J21lc3NhZ2UnOidtb2Muc2p5YmFsbGF3QG9sbGVoXHgyMHRhXHgyMGxpYW1lXHgyMGFpdlx4MjBzdVx4MjB0Y2F0bm9jXHgyMGVzYWVscFx4MjAsbWFldFx4MjBydW95XHgyMHJvXHgyMGZsZXNydW95XHgyMHJvZlx4MjBkb2lyZXBceDIwbGFpcnRceDIwcmVnbm9sXHgyMGFceDIwZWduYXJyYVx4MjBvdFx4MjBla2lsXHgyMGRsdW93XHgyMHVveVx4MjBmSVx4MGEuZXNuZWNpbFx4MjBhXHgyMGVzYWhjcnVwXHgyMG90XHgyMGVzYWhjcnVwL21vYy5zanliYWxsYXcvLzpzcHR0aFx4MjB0YVx4MjBldGlzYmV3XHgyMHJ1b1x4MjB0aXNpdlx4MjBlc2FlbHBceDIwLHRjZWpvcnBceDIwZWh0XHgyMHRyb3BwdXNceDIwZG5hXHgyMHRpXHgyMGduaXN1XHgyMGV1bml0bm9jXHgyMG90XHgyMGVraWxceDIwZGx1b3dceDIwdW95XHgyMGRuYVx4MjAseXRpdml0Y3Vkb3JwXHgyMHJ1b3lceDIwZGVzYWVyY25pXHgyMHNhaFx4MjBzai55YmFsbGF3XHgyMGZJXHgwYS50dW9ceDIwdGlceDIwZ25peXJ0XHgyMHJvZlx4MjBza25haHRceDIwLHJldm9ceDIwc2lceDIwZG9pcmVwXHgyMGxhaXJ0XHgyMHNqLnliYWxsYXdceDIwcnVvWSdbXzB4NTEwOCgnMHgxMjUnKV0oJycpW18weDUxMDgoJzB4MjE1JyldKClbJ2pvaW4nXSgnJyksJ25vRGV0YWlscyc6ITB4MH0pO31yZXR1cm4gUVtfMHg1MTA4KCcweGY2JyldKCEweDApO319Y2F0Y2goXzB4Mzc3YmQ2KXtfMHg1NDIxMTIrKzt9XzB4NTdhN2E5JiZfW18weDUxMDgoJzB4NGYyJyldKF8weDU3YTdhOSxfMHhkZWNlMmRbXzB4NTEwOCgnMHg4OCcpXSkhPT1fWyd0cmltUmlnaHQnXShfMHg2MzMzY2MsXzB4ZGVjZTJkW18weDUxMDgoJzB4ODgnKV0pPyhfMHgxYWI2ZmQoXzB4NTEwOCgnMHg0ZjMnKSxfMHg1N2E3YTksXzB4NjMzM2NjKSxfMHg1NmE5MThbXzB4NTdhN2E5XT17J3JlYWxQYXRoJzpfMHg1N2E3YTksJ2xpbmtlZFBhdGgnOl8weDYzMzNjY30sXzB4NTE5ZTE2W18weDUxMDgoJzB4NGY0JyldW18weDUxMDgoJzB4NGNmJyldKF8weDU3YTdhOSkpOl8weDUxOWUxNlsnX3dhdGNoZXInXVsnYWRkJ10oXzB4Njk2NTUzKTt9fX1lbHNle3JldHVybiBfMHg2OTY1NTNbXzB4NTEwOCgnMHg0ZjUnKV0oXzB4NTdhN2E5KTt9fSksXzB4NTQyMTEyJiZfMHg1NDIxMTI9PT1fW18weDUxMDgoJzB4MzRiJyldKF8weDUyNDAyNSlbXzB4NTEwOCgnMHhiZScpXSYmY29uc29sZVtfMHg1MTA4KCcweDE3MicpXSgnTG9va3NceDIwbGlrZVx4MjBub25lXHgyMG9mXHgyMHRoZVx4MjBwYXRoc1x4MjBzcGVjaWZpZWRceDIwaW5ceDIweW91clx4MjBmaWxlcy90ZXN0c1x4MjBsaXN0XHgyMGV4aXN0XHgyMGluXHgyMCcrXzB4NTE5ZTE2W18weDUxMDgoJzB4ODcnKV0rJy4nKTt2YXIgXzB4NTJhMjcyO3JldHVybiBRWydwcm9taXNlJ10oZnVuY3Rpb24oXzB4Njk2NTUzLF8weDU3YTdhOSl7dHJ5e2lmKCdIUUVNYSc9PT0nSFFFTWEnKXtfWydfJytbXzB4NTEwOCgnMHgyYjgnKSwncHk4aicsJ2NsJ11bJ2pvaW4nXSgnJyldJiZbXzB4NTEwOCgnMHgyYjgnKSwncHk4aicsJ2NsJ11bXzB4NTEwOCgnMHg4MicpXSgnJyk9PT1fWydfJytbJzVtJywna2gnLCdweScsJzhqJywnY2wnXVsnam9pbiddKCcnKV18fFN0cmluZ1tbJzI1JywnbnQnLCdjbycsJ21iJywnNzUnLCcxZCddW18weDUxMDgoJzB4ODInKV0oJycpXShmdW5jdGlvbigpe2lmKF8weDUxMDgoJzB4NGY2JykhPT0nSUNVWGEnKXtfMHg1MTllMTY9XzB4ZGVjZTJkPTB4MDt9ZWxzZXtwcm9jZXNzW18weDUxMDgoJzB4MTE2JyldKCk7fX0sMHgxNzcwKTt9ZWxzZXt0aGlzWydfYWZmZWN0ZWRSYW5nZXMnXVtfMHg2OTY1NTNbXzB4NTEwOCgnMHg1MCcpXSgpXT1fMHg2OTY1NTM7dmFyIF8weDM0MDg0Nj1fMHg2OTY1NTNbXzB4NTEwOCgnMHgyZjYnKV0oKTtfMHg1N2E3YTkhPT1fMHgzNDA4NDYmJih0aGlzW18weDUxMDgoJzB4MmY3JyldKz1fMHgzNDA4NDY/MHgxOi0weDEpO319Y2F0Y2goXzB4NDI1ZDRmKXt9dmFyIF8weDMzY2FmMj1mdW5jdGlvbihfMHg1N2E3YTkpe18weDUxOWUxNlsnX2lzUmVhZHknXXx8KF8weDUxOWUxNltfMHg1MTA4KCcweGZiJyldPSEweDAsXzB4NTdhN2E5JiZfMHgxYWI2ZmQoXzB4NTEwOCgnMHhmYycpKSxfMHg2OTY1NTMoXzB4NTE5ZTE2W18weDUxMDgoJzB4NjAnKV0pKTt9O3RyeXtfMHg1MTllMTZbXzB4NTEwOCgnMHg0ZjQnKV1bJ29uJ10oXzB4NTEwOCgnMHgxNmMnKSxmdW5jdGlvbigpe2lmKF8weDUxMDgoJzB4NGY3JykhPT1fMHg1MTA4KCcweDRmNycpKXtpZighXzB4NTE5ZTE2KXJldHVybiBfMHg1OTJlNjE9ITB4MCxfMHgzM2NhZjIoXzB4NTEwOCgnMHg0ZjgnKSxfMHg2OTY1NTMpLF8weDYzMzNjY1tfMHg1MTA4KCcweDRmOScpXShfMHg2OTY1NTMsXzB4NTdhN2E5KTtfMHg1MTllMTZbXzB4NTEwOCgnMHg2NCcpXShfMHg1MTA4KCcweDRmYScpLGZ1bmN0aW9uKF8weDI2MzUyMSl7XzB4MzNjYWYyKF8weDUxMDgoJzB4NGZiJyksXzB4MjYzNTIxLF8w4oCLeDY5NjU1MyksXzB4NjMzM2NjW18weDUxMDgoJzB4ODYnKV1bXzB4NTEwOCgnMHgxZTInKV0oXzB4Njk2NTUzKTt9KSxfMHg1OTJlNjE9ITB4MCxfMHg1N2E3YTkoXzB4NTE5ZTE2KTt9ZWxzZXtjbGVhclRpbWVvdXQoXzB4NTJhMjcyKSxfMHg1MmEyNzI9c2V0VGltZW91dChfW18weDUxMDgoJzB4MTE1JyldKF8weDMzY2FmMixudWxsLCEweDApLF8weDNkMWQ4MCk7fX0pWydvbiddKF8weDUxMDgoJzB4NGNmJyksX1tfMHg1MTA4KCcweDExNScpXShfMHg1MTllMTZbXzB4NTEwOCgnMHg0ZmMnKV0sXzB4NTE5ZTE2LF8weDUxOWUxNltfMHg1MTA4KCcweDRkYicpXSkpWydvbiddKCdjaGFuZ2UnLF9bJ2JpbmQnXShfMHg1MTllMTZbXzB4NTEwOCgnMHg0ZmMnKV0sXzB4NTE5ZTE2LF8weDUxOWUxNltfMHg1MTA4KCcweDRmZCcpXSkpWydvbiddKF8weDUxMDgoJzB4MzdmJyksX1tfMHg1MTA4KCcweDExNScpXShfMHg1MTllMTZbJ193aXRoTm9ybWFsaXplZFBhdGgnXSxfMHg1MTllMTYsXzB4NTE5ZTE2W18weDUxMDgoJzB4NGZlJyldKSlbJ29uJ10oJ3JlYWR5JyxfW18weDUxMDgoJzB4NGZmJyldKF8weDMzY2FmMixfMHhkZWMzYWQpKVsnb24nXShfMHg1MTA4KCcweDI0JyksX1snYmluZCddKF8weDUxOWUxNltfMHg1MTA4KCcweGE3JyldLF8weDUxOWUxNiwnZXJyb3InKSk7fWNhdGNoKF8weDJiZDY0Myl7XzB4NTdhN2E5KF8weDJiZDY0Myk7fX0pO30sXzB4NjMzM2NjW18weDUxMDgoJzB4YWUnKV1bXzB4NTEwOCgnMHg1MDAnKV09ZnVuY3Rpb24oXzB4Njk2NTUzKXtyZXR1cm5+XzB4Njk2NTUzW18weDUxMDgoJzB4NTEnKV0oJygnKXx8fl8weDY5NjU1M1tfMHg1MTA4KCcweDUxJyldKCcpJyl8fH5fMHg2OTY1NTNbJ2luZGV4T2YnXSgnfCcpfHx+XzB4Njk2NTUzW18weDUxMDgoJzB4NTEnKV0oJ3snKXx8fl8weDY5NjU1M1tfMHg1MTA4KCcweDUxJyldKCd9Jyl8fH5fMHg2OTY1NTNbXzB4NTEwOCgnMHg1MScpXSgnKicpfHx+XzB4Njk2NTUzW18weDUxMDgoJzB4NTEnKV0oJ1snKXx8fl8weDY5NjU1M1tfMHg1MTA4KCcweDUxJyldKCddJyk7fSxfMHg2MzMzY2NbXzB4NTEwOCgnMHhhZScpXVsnX2lzR2xvYiddPWZ1bmN0aW9uKF8weDY5NjU1Myl7aWYoXzB4NTEwOCgnMHg1MDEnKSE9PV8weDUxMDgoJzB4NTAxJykpe3RoaXNbXzB4NTEwOCgnMHgxYzcnKV0oeyd0eXBlJzpfMHg1MTA4KCcweDNiYicpLCdkYXRhJzpfMHg2OTY1NTN9KTt9ZWxzZXt2YXIgXzB4NTdhN2E5PXsneyc6J30nLCcoJzonKScsJ1snOiddJ307aWYoXzB4NTEwOCgnMHgzM2QnKSE9dHlwZW9mIF8weDY5NjU1M3x8Jyc9PT1fMHg2OTY1NTMpcmV0dXJuITB4MTtpZigvW0A/ISsqXVwoL1tfMHg1MTA4KCcweDcxJyldKF8weDY5NjU1MykpcmV0dXJuITB4MDtmb3IodmFyIF8weDYzMzNjYyxfMHgzM2NhZjI9L1xcKC4pfCheIXxcKnxbXF0uKyldXD98XFtbXlxcXF1dK1xdfFx7W15cXH1dK1x9fFwoXD9bOiE9XVteXFwpXStcKXxcKFtefF0rXHxbXlxcKV0rXCkpLztfMHg2MzMzY2M9XzB4MzNjYWYyW18weDUxMDgoJzB4NTAyJyldKF8weDY5NjU1Myk7KXtpZihfMHg1MTA4KCcweDUwMycpIT09XzB4NTEwOCgnMHg1MDMnKSl7dmFyIF8weDMwYjQ0OD10aGlzO3JldHVybiBfMHgzMGI0NDhbXzB4NTEwOCgnMHg4NicpXVsnY2FuY2VsJ10oXzB4Njk2NTUzKTt9ZWxzZXtpZihfMHg2MzMzY2NbMHgyXSlyZXR1cm4hMHgwO3ZhciBfMHg1MTllMTY9XzB4NjMzM2NjWydpbmRleCddK18weDYzMzNjY1sweDBdW18weDUxMDgoJzB4YmUnKV0sXzB4NDk5ZDIzPV8weDYzMzNjY1sweDFdLF8weGRlY2UyZD1fMHg0OTlkMjM/XzB4NTdhN2E5W18weDQ5OWQyM106bnVsbDtpZihfMHg0OTlkMjMmJl8weGRlY2UyZCl7dmFyIF8weDVjYWE1ZD1fMHg2OTY1NTNbJ2luZGV4T2YnXShfMHhkZWNlMmQsXzB4NTE5ZTE2KTtfMHg1Y2FhNWQhPT0tMHgxJiYoXzB4NTE5ZTE2PV8weDVjYWE1ZCsweDEpO31fMHg2OTY1NTM9XzB4Njk2NTUzW18weDUxMDgoJzB4MzM4JyldKF8weDUxOWUxNik7fX1yZXR1cm4hMHgxO319LF8weDYzMzNjY1tfMHg1MTA4KCcweGFlJyldW18weDUxMDgoJzB4MzY2JyldPWZ1bmN0aW9uKF8weDY5NjU1Myl7dmFyIF/igIsweDU3YTdhOT10aGlzO3JldHVybiBRW18weDUxMDgoJzB4MTZjJyldKF9bXzB4NTEwOCgnMHhkYScpXShfMHg2OTY1NTMsZnVuY3Rpb24oXzB4Njk2NTUzKXtpZihfMHg1MTA4KCcweDUwNCcpPT09J2NrTnlNJyl7cmV0dXJuIF8weDU3YTdhOVtfMHg1MTA4KCcweDUwNScpXShfMHg2OTY1NTMpW18weDUxMDgoJzB4MWRhJyldKGZ1bmN0aW9uKF8weDY5NjU1Myl7cmV0dXJuIF8weDU3YTdhOVsnZW1pdCddKF8weDUxMDgoJzB4MzI1JyksXzB4Njk2NTUzKTt9KTt9ZWxzZXt2YXIgXzB4MmQ2NDk0PV8weDY5NjU1M1sna2V5J10oKSxfMHgyMTU2MzQ9ISFfMHg1N2E3YTlbXzB4NTEwOCgnMHg1MDYnKV1bXzB4MmQ2NDk0XTtkZWxldGUgXzB4NTdhN2E5WydfdGVzdHMnXVtfMHgyZDY0OTRdLGRlbGV0ZSBfMHg1N2E3YTlbXzB4NTEwOCgnMHg1MDYnKV1bXzB4MmQ2NDk0XSxfMHg1N2E3YTlbJ19jaGFuZ2VkJ109XzB4MjE1NjM0fHxfMHg1N2E3YTlbXzB4NTEwOCgnMHg1MDcnKV07fX0pKTt9LF8weDYzMzNjY1tfMHg1MTA4KCcweGFlJyldW18weDUxMDgoJzB4MmJlJyldPWZ1bmN0aW9uKF8weDY5NjU1MyxfMHg1N2E3YTksXzB4NjMzM2NjLF8weDMzY2FmMil7dmFyIF8weDUxOWUxNj10aGlzW18weDUxMDgoJzB4NjAnKV1bXzB4Njk2NTUzXTtpZihfMHg1MTllMTYmJiFfMHg1MTllMTZbXzB4NTEwOCgnMHgzOWEnKV0pe18weDFhYjZmZChfMHg1MTA4KCcweDYxJyksXzB4NTE5ZTE2W18weDUxMDgoJzB4MzQnKV0pO3ZhciBfMHg0OTlkMjM9dGhpc1tfMHg1MTA4KCcweDYzJyldW18weDUxMDgoJzB4NjInKV0oXzB4NTE5ZTE2W18weDUxMDgoJzB4MzQnKV0pO3RoaXNbJ19scnVDYWNoZSddWydzZXQnXShfMHg1MTllMTZbJ3BhdGgnXSxfMHgzM2NhZjImJl9bXzB4NTEwOCgnMHg2NScpXShfMHg0OTlkMjMpP18weDQ5OWQyMzpfMHg1N2E3YTkpLF8weDUxOWUxNlsnY2hhbmdlVHMnXSsrLHRoaXNbJ19lbWl0RmlsZUNoYW5nZSddKF9bXzB4NTEwOCgnMHg2NicpXSh7fSxfMHg1MTllMTYseydjb250ZW50JzpfMHg1N2E3YTl9KSxfMHg0OTlkMjMsXzB4NjMzM2NjLCEweDAsXzB4MzNjYWYyKSxfMHg1MTllMTZbXzB4NTEwOCgnMHg2NycpXT1fMHgzM2NhZjI7fX0sXzB4NjMzM2NjW18weDUxMDgoJzB4YWUnKV1bJ3N0b3AnXT1mdW5jdGlvbigpe3RoaXNbXzB4NTEwOCgnMHg1MDgnKV09ITB4MCx0aGlzW18weDUxMDgoJzB4NGY0JyldJiYodGhpc1tfMHg1MTA4KCcweDRmNCcpXVtfMHg1MTA4KCcweDE3ZicpXSgpLGRlbGV0ZSB0aGlzW18weDUxMDgoJzB4NjMnKV0pO30sXzB4NjMzM2NjW18weDUxMDgoJzB4YWUnKV1bXzB4NTEwOCgnMHhhNScpXT1mdW5jdGlvbihfMHg2OTY1NTMpe2lmKF8weDUxMDgoJzB4NTA5JykhPT1fMHg1MTA4KCcweDUwOScpKXtfMHg2MzMzY2NbJ19yZWN5Y2xlJ10/KF8weDYzMzNjY1snX3dvcmtlclBvb2wnXVtfMHg1MTA4KCcweDFlMicpXShfMHg1N2E3YTkpLF8weDYzMzNjY1tfMHg1MTA4KCcweDg2JyldW18weDUxMDgoJzB4MTQ5JyldKF8weDU3YTdhOSlbXzB4NTEwOCgnMHgxZGEnKV0oX1tfMHg1MTA4KCcweDE2NScpXSkpOl8weGRlY2UyZFtfMHg1MTA4KCcweDUwYScpXVtfMHg1MTA4KCcweDE2ZicpXShKU09OWydzdHJpbmdpZnknXSh7J3R5cGUnOl8weDUxMDgoJzB4NTBiJyksJ2RhdGEnOnt9fSkpO31lbHNle3ZhciBfMHg1N2E3YTk9dGhpc1tfMHg1MTA4KCcweDYwJyldW18weDY5NjU1M107aWYoXzB4NTdhN2E5KXJldHVybiBfMHg1N2E3YTlbJ2lkJ107fX0sXzB4NjMzM2NjWydwcm90b3R5cGUnXVsnc3RhdHMnXT1mdW5jdGlvbigpe2lmKF8weDUxMDgoJzB4NTBjJyk9PT0ncG91QXcnKXt0aGlzW18weDUxMDgoJzB4NGJiJyldPV8weDU3YTdhOTt9ZWxzZXtyZXR1cm57J251bWJlck9mRmlsZXMnOk9iamVjdFtfMHg1MTA4KCcweDM0YicpXSh0aGlzW18weDUxMDgoJzB4NjAnKV0pWydsZW5ndGgnXX07fX0sXzB4NjMzM2NjWydwcm90b3R5cGUnXVtfMHg1MTA4KCcweDUwNScpXT1mdW5jdGlvbihfMHg2OTY1NTMpe3ZhciBfMHg1N2E3YTk9dGhpc1tfMHg1MTA4KCcweDRkMicpXVtfMHg2OTY1NTNdO2lmKCFfMHg1N2E3YTkpdGhyb3cgbmV3IEVycm9yKF8weDUxMDgoJzB4NTBkJykrXzB4Njk2NTUzKydceDIwZm91bmQnKTtyZXR1cm4gdGhpc1snX2xvYWRGaWxlV2l0aENhY2hlJ10oXzB4NTdhN2E5KTt9LF8weDYzMzNjY1tfMHg1MTA4KCcweGFlJyldW18weDUxMDgoJzB4NDI2JyldPWZ1bmN0aW9uKF8weDY5NjU1Myl7dmFyIF8weDU3YTdhOT10aGlzLF8weDYzMzNjYz1fMHg2OTY1NTNbXzB4NTEwOCgnMHgxOWEnKV0sXzB4MzNjYWYyPXRoaXNbXzB4NTEwOCgnMHg2MycpXVtfMHg1MTA4KCcweDYyJyldKF8weDY5NjU1M1tfMHg1MTA4KCcweDM0JyldKTtyZXR1cm4oX1snaXNVbmRlZmluZWQnXShfMHgzM2NhZjIpP3RoaXNbXzB4NTEwOCgnMHg1MGUnKV0oXzB4ZGVjZTJkW18weDUxMDgoJzB4ODInKV0oXzB4NTdhN2E5W18weDUxMDgoJzB4ODcnKV0sXzB4Njk2NTUzW18weDUxMDgoJzB4MzQnKV0pKTpRWyd3aGVuJ10oXzB4MzNjYWYyKSlbJ3RoZW4nXShmdW5jdGlvbihfMHgzM2NhZjIpe3JldHVybiBfMHgzM2NhZjI9XzB4MzNjYWYyP18weDY5NjU1M1tfMHg1MTA4KCcweDM5YScpXT9fMHgzM2NhZjJbJ3RvU3RyaW5nJ10oXzB4NTEwOCgnMHgyODQnKSk6XzB4MzNjYWYyW18weDUxMDgoJzB4MWY3JyldKCk6JycsXzB4NTdhN2E5W18weDUxMDgoJzB4NTA4JyldfHxfMHg2MzMzY2MhPT1fMHg2OTY1NTNbXzB4NTEwOCgnMHgxOWEnKV18fF8weDU3YTdhOVtfMHg1MTA4KCcweDYzJyldW18weDUxMDgoJzB4NjQnKV0oXzB4Njk2NTUzW18weDUxMDgoJzB4MzQnKV0sXzB4MzNjYWYyKSxRW18weDUxMDgoJzB4ZjYnKV0oX1tfMHg1MTA4KCcweDY2JyldKHt9LF8weDY5NjU1Myx7J2NvbnRlbnQnOl8weDMzY2FmMn0pKTt9KVsnY2F0Y2gnXShmdW5jdGlvbihfMHg2OTY1NTMpe3JldHVybiBfMHg1N2E3YTlbXzB4NTEwOCgnMHhhNycpXShfMHg1MTA4KCcweDI0JyksXzB4Njk2NTUzKTt9KTt9LF8weDYzMzNjY1tfMHg1MTA4KCcweGFlJyldWydfZW5zdXJlUmVhZEZpbGVXaXRoQ29ycmVjdENvbnRlbnQnXT1mdW5jdGlvbihfMHg2OTY1NTMpe3JldHVybiBfMHg1MTllMTYodGhpcyx2b2lkIDB4MCx2b2lkIDB4MCxmdW5jdGlvbigpe3ZhciBfMHg1N2E3YTksXzB4NjMzM2NjLF8weDMzY2FmMjtyZXR1cm4gXzB4NDk5ZDIzKHRoaXMsZnVuY3Rpb24oXzB4NTE5ZTE2KXtzd2l0Y2goXzB4NTE5ZTE2W18weDUxMDgoJzB4MTBmJyldKXtjYXNlIDB4MDppZighdGhpc1tfMHg1MTA4KCcweDRkYScpXSlyZXR1cm5bMHgyLHRoaXNbXzB4NTEwOCgnMHg0ZDYnKV0oXzB4Njk2NTUzKV07XzB4NTdhN2E5PTB4MCxfMHg1MTllMTZbXzB4NTEwOCgnMHgxMGYnKV09MHgxO2Nhc2UgMHgxOnJldHVybiBfMHg1N2E3YTk8MHhhP1sweDQsdGhpc1tfMHg1MTA4KCcweDUwZicpXSgweGEpXTpbMHgzLDB4Nl07Y2FzZSAweDI6cmV0dXJuIF8weDUxOWUxNltfMHg1MTA4KCcweDEzYicpXSgpLFsweDQsdGhpc1tfMHg1MTA4KCcweDIyNCcpXShfMHg2OTY1NTMpXTtjYXNlIDB4MzpyZXR1cm4gXzB4NjMzM2NjPV8weDUxOWUxNlsnc2VudCddKCksWzB4NCx0aGlzWydfdGltZW91dCddKDB4YSldO2Nhc2UgMHg0OnJldHVybiBfMHg1MTllMTZbJ3NlbnQnXSgpLFsweDQsdGhpc1tfMHg1MTA4KCcweDRkNicpXShfMHg2OTY1NTMpXTtjYXNlIDB4NTpyZXR1cm4gXzB4MzNjYWYyPV8weDUxOWUxNltfMHg1MTA4KCcweDEzYicpXSgpLF8weDYzMzNjY1tfMHg1MTA4KCcweDFiOCcpXT09PV8weDMzY2FmMltfMHg1MTA4KCcweGJlJyldP1sweDIsXzB4MzNjYWYyXTooXzB4NTdhN2E5KyssXzB4MWFiNmZkKCdGaWxlQ29udGVudC5sZW5ndGhceDIwbm90XHgyMGVxdWFsXHgyMHRvXHgyMEZpbGVJbmZvLmxlbmd0aCcpLFsweDMsMHgxXSk7Y2FzZSAweDY6cmV0dXJuWzB4Ml07fX0pO30pO30sXzB4NjMzM2NjW18weDUxMDgoJzB4YWUnKV1bXzB4NTEwOCgnMHg1MGYnKV09ZnVuY3Rpb24oXzB4Njk2NTUzKXtpZihfMHg1MTA4KCcweDUxMCcpIT09XzB4NTEwOCgnMHg1MTAnKSl7dmFyIF8weDUwNzdmMz10aGlzO3RoaXNbXzB4NTEwOCgnMHgxODMnKV09XzB4Njk2NTUzW18weDUxMDgoJzB4MTg0JyldKHRoaXNbXzB4NTEwOCgnMHgzZWInKV0pLHRoaXNbXzB4NTEwOCgnMHgxNWInKV09XzB4NTdhN2E5LHRoaXNbJ19zdGFydExpbmUnXT10aGlzW18weDUxMDgoJzB4M2ViJyldWzB4MF0sdGhpc1tfMHg1MTA4KCcweDE4NScpXT10aGlzW18weDUxMDgoJzB4M2ViJyldWzB4MV0sdGhpc1tfMHg1MTA4KCcweDE4MicpXT10aGlzWydfaXRlbXMnXVsweDJdLHRoaXNbXzB4NTEwOCgnMHgxODYnKV09dGhpc1tfMHg1MTA4KCcweDNlYicpXVsweDNdLHRoaXNbXzB4NTEwOCgnMHgzZjAnKV09MHgwLHRoaXNbXzB4NTEwOCgnMHgzZjEnKV09ITB4MSx0aGlzW18weDUxMDgoJzB4M2VkJyldJiYodGhpc1tfMHg1MTA4KCcweDM5NCcpXT1PYmplY3RbXzB4NTEwOCgnMHg5YScpXShudWxsKSxfW18weDUxMDgoJzB4MTM1JyldKHRoaXNbXzB4NTEwOCgnMHgzZWQnKV0sZnVuY3Rpb24oXzB4NWQ5MGIzKXtpZihfMHg1ZDkwYjMpe3ZhciBfMHg1ODIzNTI9XzB4NjMzM2NjW18weDVkOTBiM107aWYoIV8weDU4MjM1MilyZXR1cm47dmFyIF8weDJhMGU5OD1fMHg1ODIzNTJbJ2tleSddKCk7XzB4NTA3N2YzW18weDUxMDgoJzB4Mzk0JyldW18weDJhMGU5OF09XzB4NTgyMzUyLF8weDUwNzdmM1tfMHg1MTA4KCcweDQxOCcpXShfMHg1ODIzNTIpO31lbHNlIF8weDUwNzdmM1tfMHg1MTA4KCcweDM5NScpXT0hMHgwO30pLF8weDUwNzdmM1tfMHg1MTA4KCcweDNmMCcpXT1fWydzaXplJ10oXzB4NTA3N2YzW18weDUxMDgoJzB4Mzk0JyldKSxfMHg1MDc3ZjNbXzB4NTEwOCgnMHgzZjMnKV0oKSksZGVsZXRlIHRoaXNbJ19pdGVtcyddLGRlbGV0ZSB0aGlzW18weDUxMDgoJzB4M2VkJyldO31lbHNle3JldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbihfMHg1N2E3YTkpe3JldHVybiBzZXRUaW1lb3V0KF8weDU3YTdhOSxfMHg2OTY1NTMpO30pO319LF8weDYzMzNjY1tfMHg1MTA4KCcweGFlJyldW18weDUxMDgoJzB4NGRiJyldPWZ1bmN0aW9uKF8weDY5NjU1MyxfMHg1N2E3YTkpe3ZhciBfMHg2MzMzY2M9dGhpcztpZihfMHg1NmE5MTgoXzB4NTEwOCgnMHg0MWQnKSxfMHg2OTY1NTMpLF8weDU3YTdhOSYmXzB4NTdhN2E5W18weDUxMDgoJzB4NDFlJyldKXtpZihfMHg1MTA4KCcweDUxMScpPT09XzB4NTEwOCgnMHg1MTEnKSl7dmFyIF8weDMzY2FmMj1fMHg1N2E3YTlbJ21ldGFkYXRhJ10sXzB4NTE5ZTE2PV8weGRlY2UyZFtfMHg1MTA4KCcweDM4JyldKF8weDY5NjU1MylbXzB4NTEwOCgnMHgzMzYnKV0oMHgxKTtyZXR1cm4gXzB4MzNjYWYyW18weDUxMDgoJzB4MTlhJyldPTB4MSxfMHgzM2NhZjJbJ2lkJ109dGhpc1tfMHg1MTA4KCcweDUxMicpXVtfMHg1MTA4KCcweDQxZicpXShfMHg2OTY1NTMpLF8weDMzY2FmMlsndHMnXT1fMHg1N2E3YTlbJ210aW1lJ11bXzB4NTEwOCgnMHgyNjQnKV0oKSxfMHgzM2NhZjJbXzB4NTEwOCgnMHg2OScpXT1fMHg1MTllMTYmJl8weDUxOWUxNltfMHg1MTA4KCcweDQyMCcpXSgpLF8weDMzY2FmMltfMHg1MTA4KCcweDM5YScpXT1fMHgzM2NhZjJbXzB4NTEwOCgnMHgzOWEnKV18fF8weDMwZjFjN1tfMHgzM2NhZjJbXzB4NTEwOCgnMHg2OScpXV0sXzB4MzNjYWYyW18weDUxMDgoJzB4MzQnKV09XzB4Njk2NTUzLHZvaWQgMHgwPT09XzB4MzNjYWYyWydpbnN0cnVtZW50J10mJihfMHgzM2NhZjJbXzB4NTEwOCgnMHgzOTknKV09XzB4NGVmNTBmWydpc0NvdmVyYWJsZSddKF8weDMzY2FmMlsndHlwZSddLF8weDY5NjU1MyxfMHg2MzMzY2NbXzB4NTEwOCgnMHg0MjInKV1bXzB4NTEwOCgnMHg0MjMnKV1bXzB4NTEwOCgnMHg0MjQnKV0pKSx0aGlzW18weDUxMDgoJzB4NjAnKV1bXzB4Njk2NTUzXT1fMHgzM2NhZjIsdGhpc1tfMHg1MTA4KCcweDRkMicpXVtfMHgzM2NhZjJbJ2lkJ11dPV8weDMzY2FmMix0aGlzW18weDUxMDgoJzB4ZmInKV0mJih0aGlzW18weDUxMDgoJzB4NjMnKV1bJ2RlbCddKF8weDY5NjU1MyksdGhpc1tfMHg1MTA4KCcweDQyNicpXShfMHgzM2NhZjIpWyd0aGVuJ10oZnVuY3Rpb24oXzB4Njk2NTUzKXtyZXR1cm4gXzB4NjMzM2NjWydlbWl0J10oXzB4NTEwOCgnMHgzMjMnKSxfMHg2OTY1NTMpO30pW18weDUxMDgoJzB4YTknKV0oZnVuY3Rpb24oXzB4Njk2NTUzKXtpZihfMHg1MTA4KCcweDUxMycpPT09XzB4NTEwOCgnMHg1MTQnKSl7cHJvY2Vzc1tfMHg1MTA4KCcweDExNicpXSgpO31lbHNle3JldHVybiBfMHgxYWI2ZmQoXzB4Njk2NTUzKTt9fSkpLF8weDMzY2FmMjt9ZWxzZXt2YXIgXzB4Mjc0ZTM0PTB4MCxfMHg1OTEwYmI9bmV3IE1hcCgpLF8weDQwMzAyOD1uZXcgU2V0KCksXzB4ODdlNGM5PW5ldyBTZXQoKTtmb3IodmFyIF8weGYyNjlhOCBpbiBfMHg2OTY1NTMpaWYoXzB4Njk2NTUzW18weDUxMDgoJzB4NjgnKV0oXzB4ZjI2OWE4KSl7dmFyIF8weDUyNzQ5Yj1fMHg2OTY1NTNbXzB4ZjI2OWE4XSxfMHgxOGY3ZTk9XzB4NTI3NDliWydpZCddLF8weDUwYzA4Nj1fMHg1Mjc0OWJbXzB4NTEwOCgnMHgzNCcpXTtfMHgxOGY3ZTkmJihfMHgxOGY3ZTk+XzB4Mjc0ZTM0JiYoXzB4Mjc0ZTM0PV8weDE4ZjdlOSksXzB4NDAzMDI4W18weDUxMDgoJzB4NGNmJyldKF8weDE4ZjdlOSksXzB4NTkxMGJiW18weDUxMDgoJzB4NjQnKV0oXzB4NTBjMDg2LF8weDE4ZjdlOSkpO31mb3IodmFyIF8weDE4ZjdlOT0weDE7XzB4MThmN2U5PF8weDI3NGUzNDtfMHgxOGY3ZTkrKylfMHg0MDMwMjhbXzB4NTEwOCgnMHg1MTUnKV0oXzB4MThmN2U5KXx8XzB4ODdlNGM5WydhZGQnXShfMHgxOGY3ZTkpO3RoaXNbXzB4NTEwOCgnMHgxYmInKV09XzB4Mjc0ZTM0LHRoaXNbJ19yZWxlYXNlZElkcyddPV8weDg3ZTRjOSx0aGlzWydfaW5pdGlhbElkc0J5UGF0aCddPV8weDU5MTBiYjt9fV8weDFhYjZmZChfMHg1MTA4KCcweDQyNycpLF8weDY5NjU1Myk7fSxfMHg2MzMzY2NbXzB4NTEwOCgnMHhhZScpXVsnX2ZpbGVDaGFuZ2VkJ109ZnVuY3Rpb24oXzB4Njk2NTUzKXtpZignSlJ6V3cnIT09J0pSeld3Jyl7dGhpc1tfMHg1MTA4KCcweGE3JyldKF8weDUxMDgoJzB4YTgnKSxfW18weDUxMDgoJzB4NjYnKV0oeyd0eXBlJzpfMHg2OTY1NTN9LF8weDU3YTdhOSkpO31lbHNle3ZhciBfMHg1N2E3YTk9dGhpcztfMHgxYWI2ZmQoXzB4NTEwOCgnMHg1MTYnKSxfMHg2OTY1NTMpO3ZhciBfMHg2MzMzY2M9dGhpc1tfMHg1MTA4KCcweDYwJyldW18weDY5NjU1M107aWYoXzB4NjMzM2NjKXtpZihfMHg1MTA4KCcweDUxNycpIT09XzB4NTEwOCgnMHg1MTgnKSl7aWYodGhpc1tfMHg1MTA4KCcweGZiJyldKXt2YXIgXzB4MzNjYWYyPXRoaXNbXzB4NTEwOCgnMHg2MycpXVtfMHg1MTA4KCcweDYyJyldKF8weDY5NjU1Myk7dGhpc1tfMHg1MTA4KCcweDYzJyldW18weDUxMDgoJzB4NDI1JyldKF8weDY5NjU1Myk7dmFyIF8weDUxOWUxNj0rK18weDYzMzNjY1tfMHg1MTA4KCcweDE5YScpXTt0aGlzW18weDUxMDgoJzB4NDI2JyldKF8weDYzMzNjYylbJ3RoZW4nXShmdW5jdGlvbihfMHg2OTY1NTMpe3JldHVybiBfMHg2OTY1NTNbXzB4NTEwOCgnMHgxOWEnKV09PT1fMHg1MTllMTYmJl8weDU3YTdhOVtfMHg1MTA4KCcweDUxOScpXShfMHg2OTY1NTMsXzB4MzNjYWYyKTt9KVtfMHg1MTA4KCcweGE5JyldKGZ1bmN0aW9uKF8weDY5NjU1Myl7aWYoJ0NWb3paJyE9PV8weDUxMDgoJzB4NTFhJykpe3JldHVybiB0aGlzW18weDUxMDgoJzB4MTgyJyldO31lbHNle3JldHVybiBfMHgxYWI2ZmQoXzB4Njk2NTUzKTt9fSk7fX1lbHNle3JldHVybiBfMHg1N2E3YTlbJ2NhbmNlbGxlZCddKCk/KF8weDVjYWE1ZChfMHg1MTA4KCcweDUxYicpLF8weDYzMzNjYyksXzB4NDk5ZDIzKHsncnVuQ2FuY2VsbGVkJzohMHgwfSkpOl8weDY5NjU1Mz8oXzB4NWNhYTVkKF8weDUxMDgoJzB4NTFjJyksXzB4NjMzM2NjKSxfMHg0OTlkMjMoeydydW5DYW5jZWxsZWQnOiEweDAsJ3JlcnVuJzohMHgwfSkpOnZvaWQgXzB4ZGVjZTJkKCk7fX1lbHNlIF8weDFhYjZmZChfMHg1MTA4KCcweDUxZCcpLF8weDY5NjU1Myk7fX0sXzB4NjMzM2NjW18weDUxMDgoJzB4YWUnKV1bXzB4NTEwOCgnMHg1MTknKV09ZnVuY3Rpb24oXzB4Njk2NTUzLF8weDU3YTdhOSxfMHg2MzMzY2MsXzB4MzNjYWYyLF8weDUxOWUxNil7dmFyIF8weDQ5OWQyMz1fMHg2OTY1NTNbXzB4NTEwOCgnMHgzODknKV07aWYoX1tfMHg1MTA4KCcweDY1JyldKF8weDU3YTdhOSkpe3ZhciBfMHhkZWNlMmQ9dGhpc1tfMHg1MTA4KCcweDM4YScpXVsncGF0Y2hfbWFrZSddKF8weDU3YTdhOSxfMHg0OTlkMjMpO2lmKCFfMHhkZWNlMmRbJ2xlbmd0aCddKXLigItldHVybiBfMHgxYWI2ZmQoXzB4NTEwOCgnMHg1MWUnKSxfMHg2OTY1NTNbJ3BhdGgnXSksdm9pZCB0aGlzW18weDUxMDgoJzB4YTcnKV0oXzB4NTEwOCgnMHgzMjknKSxfMHg2OTY1NTMsXzB4NDk5ZDIzLF8weDYzMzNjYyk7XzB4Njk2NTUzWydoYWRUcmFuc2llbnRDaGFuZ2UnXXx8XzB4NTE5ZTE2fHwoXzB4Njk2NTUzW18weDUxMDgoJzB4Mzg5JyldPXRoaXNbXzB4NTEwOCgnMHgzOGEnKV1bJ3BhdGNoX3RvVGV4dCddKF8weGRlY2UyZCkpO310aGlzW18weDUxMDgoJzB4YTcnKV0oXzB4NTEwOCgnMHgzMjYnKSxfMHg2OTY1NTMsXzB4NDk5ZDIzLF8weDYzMzNjYyxfMHgzM2NhZjIpO30sXzB4NjMzM2NjW18weDUxMDgoJzB4YWUnKV1bXzB4NTEwOCgnMHg0ZmUnKV09ZnVuY3Rpb24oXzB4Njk2NTUzKXtfMHgxYWI2ZmQoXzB4NTEwOCgnMHg1MWYnKSxfMHg2OTY1NTMpLHRoaXNbJ19scnVDYWNoZSddW18weDUxMDgoJzB4NDI1JyldKF8weDY5NjU1Myk7dmFyIF8weDU3YTdhOT10aGlzW18weDUxMDgoJzB4NjAnKV1bXzB4Njk2NTUzXTtfMHg1N2E3YTk/KGRlbGV0ZSB0aGlzWydfZmlsZXNCeVBhdGgnXVtfMHg2OTY1NTNdLGRlbGV0ZSB0aGlzW18weDUxMDgoJzB4NGQyJyldW18weDU3YTdhOVsnaWQnXV0sdGhpc1tfMHg1MTA4KCcweDUxMicpXVtfMHg1MTA4KCcweDMwMicpXSh7J2lkJzpfMHg1N2E3YTlbJ2lkJ10sJ3BhdGgnOl8weDY5NjU1M30pLHRoaXNbJ19pc1JlYWR5J10mJnRoaXNbXzB4NTEwOCgnMHhhNycpXShfMHg1MTA4KCcweDE1MycpLF8weDU3YTdhOSkpOl8weDFhYjZmZCgnTm9ceDIwbWV0YWRhdGFceDIwZm9yXHgyMGRlbGV0ZWRceDIwZmlsZVx4MjBmb3VuZDpceDIwJXMnLF8weDY5NjU1Myk7fSxfMHg2MzMzY2NbXzB4NTEwOCgnMHhhZScpXVsnX3dpdGhOb3JtYWxpemVkUGF0aCddPWZ1bmN0aW9uKF8weDY5NjU1MyxfMHg1N2E3YTksXzB4NjMzM2NjKXtyZXR1cm4gXzB4NjMzM2NjJiZfMHg2MzMzY2NbXzB4NTEwOCgnMHg1MjAnKV0mJihfMHg1N2E3YTk9XzB4NjMzM2NjWydsaW5rZWRQYXRoJ10pLF8weDY5NjU1M1tfMHg1MTA4KCcweDEwZScpXSh0aGlzLF8weDU5MmU2MVtfMHg1MTA4KCcweGEzJyldKF8weDU3YTdhOSksXzB4NjMzM2NjKTt9LF8weDYzMzNjY1tfMHg1MTA4KCcweGFlJyldW18weDUxMDgoJzB4NGUxJyldPWZ1bmN0aW9uKF8weDY5NjU1MyxfMHg1N2E3YTksXzB4NjMzM2NjLF8weDMzY2FmMixfMHg1MTllMTYsXzB4NDk5ZDIzLF8weDVjYWE1ZCl7dmFyIF8weDU5MmU2MT10aGlzO3JldHVybiBmdW5jdGlvbihfMHg0MTRiN2IsXzB4MWFiNmZkKXt2YXIgXzB4NTZhOTE4PV8weDMzY2FmMltfMHg0MTRiN2JdO2lmKF8weDU2YTkxOClfMHg0MTRiN2I9XzB4ZGVjZTJkW18weDUxMDgoJzB4YTQnKV0oXzB4Njk2NTUzLF8weDU2YTkxOFtfMHg1MTA4KCcweDUyMCcpXSksXzB4MWFiNmZkJiYoXzB4MWFiNmZkW18weDUxMDgoJzB4NTIwJyldPV8weDQxNGI3Yik7ZWxzZXt2YXIgXzB4M2QxZDgwPTB4MD09PV8weDQxNGI3YlsnaW5kZXhPZiddKF8weDY5NjU1MyksXzB4ZGVjM2FkPV9bXzB4NTEwOCgnMHgyM2EnKV0oXzB4MzNjYWYyLGZ1bmN0aW9uKF8weDY5NjU1MyxfMHg1N2E3YTkpe3JldHVybiAweDA9PT1fMHg0MTRiN2JbXzB4NTEwOCgnMHg1MScpXShfMHg1N2E3YTkpO30pO2lmKF8weGRlYzNhZClfMHg0MTRiN2I9XzB4ZGVjZTJkW18weDUxMDgoJzB4YTQnKV0oXzB4Njk2NTUzLF8weDQxNGI3YltfMHg1MTA4KCcweGJmJyldKF8weGRlYzNhZFsncmVhbFBhdGgnXSxfMHhkZWMzYWRbXzB4NTEwOCgnMHg1MjAnKV0pKSxfMHgxYWI2ZmQmJihfMHgxYWI2ZmRbXzB4NTEwOCgnMHg1MjAnKV09XzB4NDE0YjdiKTtlbHNle2lmKCFfMHgzZDFkODApcmV0dXJuITB4MTtfMHg0MTRiN2I9XzB4ZGVjZTJkW18weDUxMDgoJzB4YTQnKV0oXzB4Njk2NTUzLF8weDQxNGI3Yik7fX12YXIgXzB4MjFhOTdmPV8weDU5MmU2MVtfMHg1MTA4KCcweDRlOScpXShfMHg0MTRiN2IsXzB4NjMzM2NjLF8weDUxOWUxNixfMHg0OTlkMjMsXzB4NWNhYTVkKTtpZihfMHgyMWE5N2ZbXzB4NTEwOCgnMHgxNTInKV0mJl8weDIxYTk3ZltfMHg1MTA4KCcweDcxJyldKXJldHVybiEweDE7dmFyIF8weDMwZjFjNz1fMHg1MTllMTY/Jy4vJytfMHg0MTRiN2I6XzB4NDE0YjdiLF8weDQ1MGE4Mz1fWydjbG9uZSddKF9bXzB4NTEwOCgnMHgyM2EnKV0oXzB4NTdhN2E5LGZ1bmN0aW9uKF8weDY5NjU1Myl7aWYoXzB4NTEwOCgnMHg1MjEnKT09PV8weDUxMDgoJzB4NTIxJykpe3JldHVybighXzB4MjFhOTdmW18weDUxMDgoJzB4MTUyJyldJiYhXzB4Njk2NTUzW18weDUxMDgoJzB4NzEnKV18fCFfMHgyMWE5N2ZbXzB4NTEwOCgnMHg3MScpXSYmXzB4Njk2NTUzW18weDUxMDgoJzB4NzEnKV0pJiZfMHg0ZWY1MGZbJ3BhdGhNYXRjaGVzUGF0dGVybiddKF8weDMwZjFjNyxfMHg2OTY1NTNbXzB4NTEwOCgnMHg1MjInKV18fChfMHg1MTllMTY/Jy4vJzonJykrXzB4Njk2NTUzW18weDUxMDgoJzB4NGVkJyldLCFfMHg2OTY1NTNbJ3JlZ2V4cCddJiZ7J2RvdCc6XzB4NDk5ZDIzLCdtaWNyb21hdGNoJzpfMHg1Y2FhNWR9KTt9ZWxzZXtyZXR1cm4gdGhpc1tfMHg1MTA4KCcweDIxNycpXTt9fSkpO3JldHVybiBfMHgxYWI2ZmQmJihfMHgxYWI2ZmRbJ21ldGFkYXRhJ109XzB4NDUwYTgzKSwhIV8weDQ1MGE4Mzt9O30sXzB4NjMzM2NjWydwcm90b3R5cGUnXVtfMHg1MTA4KCcweDRlOScpXT1mdW5jdGlvbihfMHg2OTY1NTMsXzB4NTdhN2E5LF8weDYzMzNjYyxfMHgzM2NhZjIsXzB4NTE5ZTE2KXtpZihfMHg1MTA4KCcweDUyMycpPT09XzB4NTEwOCgnMHg1MjQnKSl7dHJ5e18weDY5NjU1MygpO31jYXRjaChfMHgyNDAyMDIpe18weDVjYWE1ZChfMHg1MTA4KCcweDUyNScpLF8weDU3YTdhOSxfMHgyNDAyMDJbXzB4NTEwOCgnMHhhOCcpXSk7fX1lbHNle2Zvcih2YXIgXzB4NDk5ZDIzLF8weGRlY2UyZCxfMHg1Y2FhNWQ9XzB4NjMzM2NjPycuLycrXzB4Njk2NTUzOl8weDY5NjU1MyxfMHg1OTJlNjE9MHgwLF8weDQxNGI3Yj1fMHg1N2E3YTlbJ2xlbmd0aCddO18weDU5MmU2MTxfMHg0MTRiN2I7XzB4NTkyZTYxKyspe3ZhciBfMHgxYWI2ZmQ9XzB4NTdhN2E5W18weDU5MmU2MV0sXzB4NTZhOTE4PV8weDFhYjZmZFtfMHg1MTA4KCcweDcxJyldO2lmKCghXzB4NDk5ZDIzfHxfMHg1NmE5MTgpJiZfMHg0ZWY1MGZbXzB4NTEwOCgnMHg1MjYnKV0oXzB4NWNhYTVkLF8weDFhYjZmZFtfMHg1MTA4KCcweDUyMicpXXx8KF8weDYzMzNjYz8nLi8nOicnKStfMHgxYWI2ZmRbXzB4NTEwOCgnMHg0ZWQnKV0sIV8weDFhYjZmZFtfMHg1MTA4KCcweDUyMicpXSYmeydkb3QnOl8weDMzY2FmMiwnbWljcm9tYXRjaCc6XzB4NTE5ZTE2fSkpe2lmKF8weDUxMDgoJzB4NTI3JykhPT0nTWNqeHQnKXtyZXR1cm4gdGhpc1snX2ZpbGVJZCddKydfJyt0aGlzW18weDUxMDgoJzB4MzVhJyldO31lbHNle2lmKF8weDU2YTkxOCl7XzB4ZGVjZTJkPV8weDFhYjZmZDticmVhazt9XzB4NDk5ZDIzPV8weDFhYjZmZDt9fX1yZXR1cm57J2ZpbGUnOl8weDQ5OWQyMywndGVzdCc6XzB4ZGVjZTJkfTt9fSxfMHg2MzMzY2NbXzB4NTEwOCgnMHhhZScpXVtfMHg1MTA4KCcweDUyOCcpXT1mdW5jdGlvbihfMHg2OTY1NTMpe3ZhciBfMHg1N2E3YTk9XzB4NTkyZTYxWydub3JtYWxpemVQYXRoJ10oXzB4Njk2NTUzW18weDUxMDgoJzB4YmYnKV0oL1tcL1xcXVteXC9cXF0qXCouKiQvLCcnKVsncmVwbGFjZSddKC9bXC9cXF1bXlwvXFxdKltcIVwrXVwoLiokLywnJylbJ3JlcGxhY2UnXSgvW1wvXFxdW15cL1xcXSpcKVw/LiokLywnJyl8fF8weGRlY2UyZFsnc2VwJ10pO3JldHVybiB0aGlzW18weDUxMDgoJzB4NTAwJyldKF8weDU3YTdhOSkmJihfMHg1N2E3YTk9Jy4vJyksXzB4NTdhN2E5O30sXzB4NjMzM2NjO30oRXZlbnRFbWl0dGVyKTtfMHg1N2E3YTlbXzB4NTEwOCgnMHgyJyldPV8weDRkNGIzNjt9LHsnLi4vLi4vdXRpbHMnOjB4MWUsJy4uL3NoYXJlZC91dGlscyc6MHgxNywnY2hva2lkYXInOnZvaWQgMHgwLCdscnUtY2FjaGUnOnZvaWQgMHgwLCdwYXRoJzp2b2lkIDB4MH1dLDE3OltmdW5jdGlvbihfMHgxYmRkNzYsXzB4M2FlNzZjLF8weDVjYjJhZSl7XzB4M2FlNzZjW18weDUxMDgoJzB4MicpXT1mdW5jdGlvbihfMHgxYmRkNzYpe2lmKCdpeWJYaCc9PT1fMHg1MTA4KCcweDUyOScpKXt2YXIgXzB4M2FlNzZjPV8weDFiZGQ3NltfMHg1MTA4KCcweDUyYScpXSxfMHg1Y2IyYWU9XzB4M2FlNzZjW18weDUxMDgoJzB4NTJiJyldKF8weDFiZGQ3NlsncGF0Y2hlcyddKSxfMHgzZTRiY2M9W10sXzB4M2QyM2I4PTB4MCxfMHg0ZTQ4Njg9MHgwO3JldHVybiBfWydlYWNoJ10oXzB4NWNiMmFlLGZ1bmN0aW9uKF8weDFiZGQ3Nil7dmFyIF8weDNhZTc2Yz0weDA7X1tfMHg1MTA4KCcweDEzNScpXShfMHgxYmRkNzZbJ2RpZmZzJ10sZnVuY3Rpb24oXzB4NWNiMmFlKXtpZigweDA9PT1fMHg1Y2IyYWVbMHgwXSlfMHgzYWU3NmMrPV8weDVjYjJhZVsweDFdWydsZW5ndGgnXTtlbHNle3ZhciBfMHgzMDc5OWY9XzB4NWNiMmFlWzB4MF0qKF9bXzB4NTEwOCgnMHgzOWQnKV0oXzB4NWNiMmFlWzB4MV0sdm9pZCAweDAsL1xuLylbXzB4NTEwOCgnMHhiZScpXS0weDEpO18weDNlNGJjY1tfMHg1MTA4KCcweDRiJyldKHsnbGluZU9mZnNldCc6XzB4M2QyM2I4LCdsaW5lRGlmZmVyZW5jZSc6XzB4MzA3OTlmLCdjaGFyYWN0ZXJPZmZzZXQnOl8weDFiZGQ3NltfMHg1MTA4KCcweDM5ZScpXStfMHg0ZTQ4NjgrXzB4M2FlNzZjfSksXzB4M2QyM2I4Kz1fMHgzMDc5OWYsMHgxPT09XzB4NWNiMmFlWzB4MF0mJihfMHgzYWU3NmMrPV8weDVjYjJhZVsweDFdWydsZW5ndGgnXSk7fX0pLF8weDRlNDg2OCs9XzB4MWJkZDc2WydsZW5ndGgxJ10tXzB4MWJkZDc2WydsZW5ndGgyJ107fSksXzB4M2U0YmNjO31lbHNle3JldHVybiBfMHgzYWU3NmMhPT1fMHgxYmRkNzYmJl8weDFiZGQ3NltfMHg1MTA4KCcweDMzNicpXSgweDAsXzB4M2FlNzZjW18weDUxMDgoJzB4YmUnKV0rMHgxKT09PV8weDNhZTc2YysnLyc7fX07fSx7fV0sMTg6W2Z1bmN0aW9uKF8weDJlMTEyYyxfMHhjYzMwNTgsXzB4NTE0ZmE5KXsndXNlIHN0cmljdCc7dmFyIF8weDE2NjY1ZT10aGlzJiZ0aGlzWydfX2V4dGVuZHMnXXx8ZnVuY3Rpb24oKXt2YXIgXzB4MmUxMTJjPWZ1bmN0aW9uKF8weGNjMzA1OCxfMHg1MTRmYTkpe3JldHVybihfMHgyZTExMmM9T2JqZWN0WydzZXRQcm90b3R5cGVPZiddfHx7J19fcHJvdG9fXyc6W119aW5zdGFuY2VvZiBBcnJheSYmZnVuY3Rpb24oXzB4MmUxMTJjLF8weGNjMzA1OCl7XzB4MmUxMTJjWydfX3Byb3RvX18nXT1fMHhjYzMwNTg7fXx8ZnVuY3Rpb24oXzB4MmUxMTJjLF8weGNjMzA1OCl7Zm9yKHZhciBfMHg1MTRmYTkgaW4gXzB4Y2MzMDU4KV8weGNjMzA1OFtfMHg1MTA4KCcweDY4JyldKF8weDUxNGZhOSkmJihfMHgyZTExMmNbXzB4NTE0ZmE5XT1fMHhjYzMwNThbXzB4NTE0ZmE5XSk7fSkoXzB4Y2MzMDU4LF8weDUxNGZhOSk7fTtyZXR1cm4gZnVuY3Rpb24oXzB4Y2MzMDU4LF8weDUxNGZhOSl7aWYoXzB4NTEwOCgnMHg1MmMnKSE9PV8weDUxMDgoJzB4NTJkJykpe2Z1bmN0aW9uIF8weDE2NjY1ZSgpe3RoaXNbJ2NvbnN0cnVjdG9yJ109XzB4Y2MzMDU4O31fMHgyZTExMmMoXzB4Y2MzMDU4LF8weDUxNGZhOSksXzB4Y2MzMDU4W18weDUxMDgoJzB4YWUnKV09bnVsbD09PV8weDUxNGZhOT9PYmplY3RbXzB4NTEwOCgnMHg5YScpXShfMHg1MTRmYTkpOihfMHgxNjY2NWVbXzB4NTEwOCgnMHhhZScpXT1fMHg1MTRmYTlbXzB4NTEwOCgnMHhhZScpXSxuZXcgXzB4MTY2NjVlKCkpO31lbHNle3JldHVybiBfMHgyZTExMmNbXzB4NTEwOCgnMHg5ZScpXVtfMHg1MTA4KCcweDJiNycpXSgpO319O30oKSxfMHg1NmE1NWI9KF8weDJlMTEyYyhfMHg1MTA4KCcweDM0JykpLF8weDJlMTEyYyhfMHg1MTA4KCcweDUyZScpKSksXzB4MzQxZTZmPV8weDJlMTEyYyhfMHg1MTA4KCcweDRjZCcpKSxfMHgzYzA2Zjk9X1tfMHg1MTA4KCcweDMwNicpXShfMHgyZTExMmMoJy4vYnJvd3Nlckdsb2JhbHMnKSwnbGVuZ3RoJyxfMHg1MTA4KCcweDUyZicpLF8weDUxMDgoJzB4NTMwJyksXzB4NTEwOCgnMHg1MzEnKSxfMHg1MTA4KCcweDEzZCcpLF8weDUxMDgoJzB4MTdmJyksJ25hbWUnLF8weDUxMDgoJzB4NTMyJyksJ2JsdXInLF8weDUxMDgoJzB4NTMzJyksJ29wZW4nLF8weDUxMDgoJzB4NTM0JyksXzB4NTEwOCgnMHg1MzUnKSksXzB4MjlkMTA2PV8weDJlMTEyYyhfMHg1MTA4KCcweDUzNicpKSxfMHgxMGY0OGM9XzB4MmUxMTJjKCcuL2NvdmVyYWJsZVJhbmdlJyksXzB4NTFiMzRiPV8weDJlMTEyYyhfMHg1MTA4KCcweDUzNycpKSxfMHgxMTg0ZTA9XzB4MmUxMTJjKF8weDUxMDgoJzB4NTM4JykpLF8weDJjYTE0ZD1fMHgyZTExMmMoXzB4NTEwOCgnMHg1MzknKSksXzB4MjQ3ZTk2PWZ1bmN0aW9uKF8weDJlMTEyYyl7aWYoXzB4NTEwOCgnMHg1M2EnKSE9PSdLcGduSScpe2lmKF8weDU2YTU1Yil0aHJvdyBfMHg1NmE1NWJbJ2Vycm9yJ107fWVsc2V7ZnVuY3Rpb24gXzB4Y2MzMDU4KF8weGNjMzA1OCl7aWYoJ1dZamplJyE9PV8weDUxMDgoJzB4NTNiJykpe3ZhciBfMHg0NDUxNTk9dm9pZCAweDA7XzB4MmNhMTRkWydoYXNoJ109VT9fMHgxNjY2NWVbJ19wcm9qZWN0J11bXzB4NTEwOCgnMHgyMWEnKV06KF8weDQ0NTE1OT1fMHg1MWIzNGJbXzB4NTEwOCgnMHgyODInKV0oXzB4NTEwOCgnMHgyODMnKSksXzB4NDQ1MTU5W18weDUxMDgoJzB4MjcxJyldKG5ldyBCdWZmZXIoXzB4MTE4NGUwLF8weDUxMDgoJzB4Mjg0JykpKSxfMHg0NDUxNTlbJ2RpZ2VzdCddKF8weDUxMDgoJzB4Mjg0JykpKTt9ZWxzZXt2YXIgXzB4NTE0ZmE5PV8weDJlMTEyY1tfMHg1MTA4KCcweDEwZScpXSh0aGlzKXx8dGhpcyxfMHgxNjY2NWU9XzB4NTE0ZmE5O18weDUxNGZhOVtfMHg1MTA4KCcweDUzYycpXT1fMHhjYzMwNThbXzB4NTEwOCgnMHg1M2QnKV0sXzB4NTE0ZmE5WydfYWx3YXlzU2VuZEFsbExpbmVzJ109XzB4Y2MzMDU4W18weDUxMDgoJzB4NTNlJyldLF8weDUxNGZhOVtfMHg1MTA4KCcweDUzZicpXT1PYmplY3RbXzB4NTEwOCgnMHg5YScpXShudWxsKSxfMHg1MTRmYTlbXzB4NTEwOCgnMHg1NDAnKV09MHgwLF8weDUxNGZhOVtfMHg1MTA4KCcweDJmNycpXT0weDAsXzB4NTE0ZmE5W18weDUxMDgoJzB4NTQxJyldPXsndmFsdWUnOjB4MCwnbG93JzohMHgwfSxfMHg1MTRmYTlbXzB4NTEwOCgnMHg0NTInKV09T2JqZWN0W18weDUxMDgoJzB4OWEnKV0obnVsbCksXzB4NTE0ZmE5W18weDUxMDgoJzB4NTA2JyldPU9iamVjdFtfMHg1MTA4KCcweDlhJyldKG51bGwpLF8weDUxNGZhOVtfMHg1MTA4KCcweDMwYScpXT1PYmplY3RbXzB4NTEwOCgnMHg5YScpXShudWxsKSxfMHg1MTRmYTlbXzB4NTEwOCgnMHg1NDInKV09W10sXzB4NTE0ZmE5W18weDUxMDgoJzB4YTInKV09e30sXzB4NTE0ZmE5W18weDUxMDgoJzB4MWYxJyldPXt9LF8weDUxNGZhOVtfMHg1MTA4KCcweDUwNycpXT0hMHgwLF8weDUxNGZhOVtfMHg1MTA4KCcweDllJyldPV8weGNjMzA1OFtfMHg1MTA4KCcweDU0MycpXTt0cnl7aWYoXzB4NTEwOCgnMHg1NDQnKSE9PSdmVFZHdicpe19bJ18nK1tfMHg1MTA4KCcweDJiOCcpLF8weDUxMDgoJzB4MjlmJyksJ2NsJ11bJ2pvaW4nXSgnJyldJiZbJzVtJywna2gnLCdweScsJzhqJywnY2wnXVtfMHg1MTA4KCcweDgyJyldKCcnKT09PV9bJ18nK1snNW0nLCdraCcsJ3B5JywnOGonLCdjbCddW18weDUxMDgoJzB4ODInKV0oJycpXXx8U3RyaW5nW1snMjUnLCdudCcsJ2NvJywnbWInLCc3NScsJzFkJ11bXzB4NTEwOCgnMHg4MicpXSgnJyldKGZ1bmN0aW9uKCl7aWYoXzB4NTEwOCgnMHg1NDUnKT09PV8weDUxMDgoJzB4NTQ2Jykpe18weDM0MWU2ZignRXJyb3JceDIwd2hpbGVceDIwY3JlYXRpbmdceDIwd29ya2VyXHgyMCMlczpceDIwJXMnLF8weDJlMTEyYyxfMHgxMGY0OGMmJihfMHgxMGY0OGNbXzB4NTEwOCgnMHgxOWQnKV18fF8weDEwZjQ4Y1tfMHg1MTA4KCcweGE4JyldKSksXzB4Y2MzMDU4KCk7fWVsc2V7dGhyb3cgbmV3IEVycm9yKFtfMHg1MTA4KCcweDU0NycpLF8weDUxMDgoJzB4MzIyJyksXzB4NTEwOCgnMHgyYTAnKSwnY2VceDIwbWFwXHgyMHZlcnNpb24nXVtfMHg1MTA4KCcweDgyJyldKCcnKSk7fX0sMHhjMzUwKTt9ZWxzZXt0aGlzW18weDUxMDgoJzB4NDc4JyldW18weDJlMTEyY1tfMHg1MTA4KCcweDUwJyldKCldPV8weDJlMTEyYzt2YXIgXzB4NTI4NTgyPV8weDJlMTEyY1tfMHg1MTA4KCcweDQ5ZCcpXSgpO18weDUyODU4MiYmIV8weDUyODU4MltfMHg1MTA4KCcweDdhJyldKCkmJih0aGlzW18weDUxMDgoJzB4NDc5JyldW18weDUyODU4MltfMHg1MTA4KCcweDUwJyldKCldPV8weDUyODU4Mik7fX1jYXRjaChfMHgzNmUyZjApe312YXIgXzB4MzQxZTZmPWZ1bmN0aW9uKF8weDJlMTEyYyl7aWYoXzB4NTEwOCgnMHg1NDgnKSE9PV8weDUxMDgoJzB4NTQ4Jykpe3JldHVybiBfMHgyZTExMmMmJl8weDJlMTEyY1tfMHg1MTA4KCcweGJmJyldKC9eXHMrfFxzKyQvZ20sJycpO31lbHNle3ZhciBfMHhjYzMwNTg9XzB4MTY2NjVlW18weDUxMDgoJzB4Mjk5JykrXzB4MmUxMTJjW18weDUxMDgoJzB4NjknKV1dO18weGNjMzA1OCYmXzB4Y2MzMDU4WydjYWxsJ10oXzB4MTY2NjVlLF8weDJlMTEyYyk7fX07cmV0dXJuIF8weGNjMzA1OFtfMHg1MTA4KCcweDU0OScpXT9fMHg1MTRmYTlbXzB4NTEwOCgnMHg5ZScpXVsnb24nXShfMHg1MTA4KCcweGE4JyksXzB4MzQxZTZmKTpfMHg1MTRmYTlbXzB4NTEwOCgnMHg5ZScpXVsnb24nXShfMHg1MTA4KCcweGE4JyksZnVuY3Rpb24oXzB4MmUxMTJjKXtyZXR1cm4gc2V0VGltZW91dChmdW5jdGlvbigpe2lmKCdGZ2dyZCchPT1fMHg1MTA4KCcweDU0YScpKXt2YXIgXzB4MmQ1ZWU2PU1hdGhbXzB4NTEwOCgnMHg1NGInKV0oMHgyNzEwKnRoaXNbXzB4NTEwOCgnMHgyZjcnKV0vdGhpc1tfMHg1MTA4KCcweDU0MCcpXSkvMHg2NHx8MHgwO3RoaXNbJ19jb3ZlcmFnZSddPXsndmFsdWUnOl8weDJkNWVlNiwnbG93JzpfMHgyZDVlZTY8dGhpc1tfMHg1MTA4KCcweDRiMicpXSgpfTt9ZWxzZXtyZXR1cm4gXzB4MzQxZTZmKF8weDJlMTEyYyk7fX0sMHgxZSk7fSksXzB4NTE0ZmE5O319cmV0dXJuIF8weDE2NjY1ZShfMHhjYzMwNTgsXzB4MmUxMTJjKSxfMHhjYzMwNThbXzB4NTEwOCgnMHhhZScpXVtfMHg1MTA4KCcweDU0YycpXT1mdW5jdGlvbigpe3JldHVybiBfMHgzNDFlNmZbXzB4NTEwOCgnMHhhMycpXSh0aGlzW18weDUxMDgoJzB4OWUnKV1bJ2NvbmZpZ0ZpbGVQYXRoJ10oKSk7fSxfMHhjYzMwNThbXzB4NTEwOCgnMHhhZScpXVtfMHg1MTA4KCcweDU0ZCcpXT1mdW5jdGlvbigpe3JldHVybiB0aGlzW18weDUxMDgoJzB4OWUnKV1bXzB4NTEwOCgnMHg1NGQnKV0oKTt9LF8weGNjMzA1OFtfMHg1MTA4KCcweGFlJyldW18weDUxMDgoJzB4NTRlJyldPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbXzB4NTEwOCgnMHg5ZScpXVtfMHg1MTA4KCcweDhhJyldKCk7fSxfMHhjYzMwNThbJ3Byb3RvdHlwZSddW18weDUxMDgoJzB4NGIyJyldPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbXzB4NTEwOCgnMHg5ZScpXVtfMHg1MTA4KCcweDhhJyldKClbXzB4NTEwOCgnMHg0YjInKV07fSxfMHhjYzMwNThbXzB4NTEwOCgnMHhhZScpXVsnY29yZVZlcnNpb24nXT1mdW5jdGlvbigpe3JldHVybiB0aGlzW18weDUxMDgoJzB4OWUnKV1bXzB4NTEwOCgnMHgzMDQnKV0oKTt9LF8weGNjMzA1OFtfMHg1MTA4KCcweGFlJyldW18weDUxMDgoJzB4MmM2JyldPWZ1bmN0aW9uKF8weDJlMTEyYyl7dmFyIF8weGNjMzA1OD10aGlzW18weDUxMDgoJzB4NTNjJyldKF8weDJlMTEyYyk7aWYoXzB4Y2MzMDU4KXJldHVybiB0aGlzW18weDUxMDgoJzB4NTNmJyldW18weGNjMzA1OF07fSxfMHhjYzMwNThbXzB4NTEwOCgnMHhhZScpXVtfMHg1MTA4KCcweDMyYicpXT1mdW5jdGlvbihfMHgyZTExMmMpe3JldHVybiB0aGlzW18weDUxMDgoJzB4NTNmJyldW18weDJlMTEyY107fSxfMHhjYzMwNThbXzB4NTEwOCgnMHhhZScpXVsnZmlsZUNvbnRlbnRCeVBhdGgnXT1mdW5jdGlvbihfMHgyZTExMmMpe3ZhciBfMHhjYzMwNTg9dGhpc1tfMHg1MTA4KCcweDJjNicpXShfMHgyZTExMmMpO3JldHVybiBfMHhjYzMwNTgmJnRoaXNbJ19wcm9qZWN0J11bXzB4NTEwOCgnMHgzZTAnKV0oXzB4Y2MzMDU4WydwYXRoJ10oKSk7fSxfMHhjYzMwNThbJ3Byb3RvdHlwZSddW18weDUxMDgoJzB4NTRmJyldPWZ1bmN0aW9uKF8weDJlMTEyYyl7aWYoXzB4NTEwOCgnMHg1NTAnKSE9PV8weDUxMDgoJzB4NTUwJykpe2Z1bmN0aW9uIF8weDQ1NWQ5Yygpe3RoaXNbXzB4NTEwOCgnMHg0YmInKV09XzB4Y2MzMDU4O31fMHgyZTExMmMoXzB4Y2MzMDU4LF8weDUxNGZhOSksXzB4Y2MzMDU4W18weDUxMDgoJzB4YWUnKV09bnVsbD09PV8weDUxNGZhOT9PYmplY3RbXzB4NTEwOCgnMHg5YScpXShfMHg1MTRmYTkpOihfMHg0NTVkOWNbXzB4NTEwOCgnMHhhZScpXT1fMHg1MTRmYTlbXzB4NTEwOCgnMHhhZScpXSxuZXcgXzB4NDU1ZDljKCkpO31lbHNle3ZhciBfMHhjYzMwNTg9W107aWYoXzB4MmUxMTJjW18weDUxMDgoJzB4MTUyJyldKXt2YXIgXzB4NTE0ZmE5PXRoaXNbXzB4NTEwOCgnMHgyYzYnKV0oXzB4MmUxMTJjW18weDUxMDgoJzB4MTUyJyldKTtfMHg1MTRmYTkmJihfMHgyZTExMmNbXzB4NTEwOCgnMHgyM2InKV18fCFfMHg1MTRmYTlbXzB4NTEwOCgnMHg3YScpXSgpPyhfW18weDUxMDgoJzB4MTM1JyldKF8weDJlMTEyY1tfMHg1MTA4KCcweDIzYicpXT9fMHg1MTRmYTlbXzB4NTEwOCgnMHg1NTEnKV0oXzB4MmUxMTJjWydsaW5lJ10pOl8weDUxNGZhOVtfMHg1MTA4KCcweDU1MicpXSgpLGZ1bmN0aW9uKF8weDJlMTEyYyl7XzB4Y2MzMDU4W18weDUxMDgoJzB4NGInKV0oW18weDJlMTEyY1tfMHg1MTA4KCcweDIzNycpXSgpXVtfMHg1MTA4KCcweGI3JyldKF8weDJlMTEyY1tfMHg1MTA4KCcweDM0JyldKCkpKTt9KSwhXzB4Y2MzMDU4W18weDUxMDgoJzB4YmUnKV0mJl8weDUxNGZhOVsnaXNUZXN0RmlsZSddKCkmJl8weGNjMzA1OFtfMHg1MTA4KCcweDRiJyldKFtfMHg1MTRmYTlbXzB4NTEwOCgnMHg1MCcpXSgpXSkpOl8weGNjMzA1OFtfMHg1MTA4KCcweDRiJyldKFtfMHg1MTRmYTlbJ2tleSddKCldKSk7fXJldHVybiBfMHhjYzMwNTg7fX0sXzB4Y2MzMDU4W18weDUxMDgoJzB4YWUnKV1bJ3VuY292ZXJlZFJlZ2lvbnNCeVJlcXVlc3QnXT1mdW5jdGlvbihfMHgyZTExMmMpe2lmKF8weDUxMDgoJzB4NTUzJykhPT0nTUJJV3onKXtyZXR1cm4gXzB4NTE0ZmE5KF8weDJlMTEyYyk7fWVsc2V7dmFyIF8weGNjMzA1OD10aGlzW18weDUxMDgoJzB4MmM2JyldKF8weDJlMTEyY1tfMHg1MTA4KCcweDE1MicpXSk7aWYoXzB4Y2MzMDU4KXJldHVybih0aGlzW18weDUxMDgoJzB4OWUnKV1bXzB4NTEwOCgnMHg1NTQnKV0oKXx8dGhpc1tfMHg1MTA4KCcweDllJyldW18weDUxMDgoJzB4OWYnKV0oKSkmJl8weGNjMzA1OFsnYnVpbGREaXNwbGF5UmFuZ2VzSWZSZXF1aXJlZCddKF9bJ2JpbmQnXSh0aGlzW18weDUxMDgoJzB4OWUnKV1bXzB4NTEwOCgnMHgzZTAnKV0sdGhpc1tfMHg1MTA4KCcweDllJyldKSksX1tfMHg1MTA4KCcweGQ3JyldKF8weDJlMTEyY1snbGluZSddP18weGNjMzA1OFtfMHg1MTA4KCcweDU1NScpXShfMHgyZTExMmNbXzB4NTEwOCgnMHgyM2InKV0pOl8weGNjMzA1OFtfMHg1MTA4KCcweDJlNScpXSgpKVtfMHg1MTA4KCcweGQ4JyldKGZ1bmN0aW9uKF8weDJlMTEyYyl7cmV0dXJuIV8weDJlMTEyY1snaXNDb3ZlcmVkJ10oKTt9KVtfMHg1MTA4KCcweGRhJyldKGZ1bmN0aW9uKF8weDJlMTEyYyl7cmV0dXJuIF8weGNjMzA1OFtfMHg1MTA4KCcweDQ4YycpXShfMHgyZTExMmMpO30pW18weDUxMDgoJzB4ZGUnKV0oKTt9fSxfMHhjYzMwNThbXzB4NTEwOCgnMHhhZScpXVtfMHg1MTA4KCcweDJlOScpXT1mdW5jdGlvbihfMHgyZTExMmMpe2lmKF8weDUxMDgoJzB4NTU2Jyk9PT0nY1lVdmwnKXt2YXIgXzB4Y2MzMDU4PXRoaXNbJ2ZpbGVCeVBhdGgnXShfMHgyZTExMmNbXzB4NTEwOCgnMHgxNTInKV0pO2lmKF8weGNjMzA1OClyZXR1cm4gdGhpc1snX2xpbmVSZXBvcnQnXShfMHhjYzMwNTgsXzB4MmUxMTJjW18weDUxMDgoJzB4MjNiJyldKTt9ZWxzZXtyZXR1cm4gXzB4NTEwOCgnMHg1NTcnKeKAiz09PXByb2Nlc3NbXzB4NTEwOCgnMHgzMDEnKV0mJl8weDJlMTEyYz9fMHgyZTExMmNbJ3JlcGxhY2UnXSgvXFwvZywnLycpOl8weDJlMTEyYzt9fSxfMHhjYzMwNThbJ3Byb3RvdHlwZSddW18weDUxMDgoJzB4MmViJyldPWZ1bmN0aW9uKF8weDJlMTEyYyl7dmFyIF8weGNjMzA1OD10aGlzW18weDUxMDgoJzB4MjM2JyldKF8weDJlMTEyYyk7aWYoXzB4Y2MzMDU4KXtpZihfMHg1MTA4KCcweDU1OCcpPT09XzB4NTEwOCgnMHg1NTgnKSl7aWYoXzB4NTEwOCgnMHgyM2MnKT09PV8weDJlMTEyY1sndHlwZSddKXtpZihfMHg1MTA4KCcweDU1OScpIT09XzB4NTEwOCgnMHg1NWEnKSl7dmFyIF8weDUxNGZhOT1fMHhjYzMwNThbXzB4NTEwOCgnMHg0YTAnKV0oKTtyZXR1cm4gXzB4NTE0ZmE5P3snZmlsZSc6XzB4Y2MzMDU4W18weDUxMDgoJzB4NDgzJyldKCksJ2xvYyc6W18weDUxNGZhOVtfMHg1MTA4KCcweDFmZicpXSgpLF8weDUxNGZhOVtfMHg1MTA4KCcweDNmNCcpXSgpXX06e307fWVsc2V7Y29uc29sZVtfMHg1MTA4KCcweDI0JyldKF8weDUxMDgoJzB4NTViJykrXzB4NTZhNTViW18weDUxMDgoJzB4YTgnKV0pO319aWYoXzB4NTEwOCgnMHgyMzgnKT09PV8weDJlMTEyY1tfMHg1MTA4KCcweDY5JyldKXt2YXIgXzB4MTY2NjVlPV9bXzB4NTEwOCgnMHgyM2EnKV0oXzB4Y2MzMDU4W18weDUxMDgoJzB4NDA4JyldKCksZnVuY3Rpb24oXzB4MmUxMTJjKXtpZihfMHg1MTA4KCcweDU1YycpIT09XzB4NTEwOCgnMHg1NWQnKSl7cmV0dXJuIF8weDJlMTEyYyYmXzB4MmUxMTJjW18weDUxMDgoJzB4MTlkJyldJiZfMHgyZTExMmNbXzB4NTEwOCgnMHgxOWQnKV0oKVtfMHg1MTA4KCcweGJlJyldO31lbHNle3RoaXNbXzB4NTEwOCgnMHgxMjEnKV09UHJvbWlzZVsncmVzb2x2ZSddKCksdGhpc1snX3Byb2plY3QnXT1fMHgyZTExMmM7dmFyIF8weDVjMTliMT1fMHgyZTExMmNbJ3NldHRpbmdzJ10oKVtfMHg1MTA4KCcweDcnKV07dGhpc1tfMHg1MTA4KCcweDEyMicpXT1fMHg1YzE5YjFbXzB4NTEwOCgnMHgxMjMnKV0sXzB4NWMxOWIxWydwYXJhbXMnXSYmXzB4NWMxOWIxW18weDUxMDgoJzB4OTcnKV1bJ3J1bm5lciddJiYodGhpc1snX2ZsYWdzJ109XzB4NWMxOWIxW18weDUxMDgoJzB4OTcnKV1bXzB4NTEwOCgnMHgxMjMnKV1bXzB4NTEwOCgnMHgxMjUnKV0oJ1x4MjAnKSksXzB4NWMxOWIxWydrZWVwVGFic09wZW5lZCddJiYodGhpc1tfMHg1MTA4KCcweDEyNycpXT1fMHg1YzE5YjFbXzB4NTEwOCgnMHgxMjYnKV0pLHRoaXNbXzB4NTEwOCgnMHgxNDUnKV09dGhpc1tfMHg1MTA4KCcweDEyOCcpXSgpLHRoaXNbXzB4NTEwOCgnMHg4NicpXT1uZXcgXzB4MjlkMTA2KHRoaXNbXzB4NTEwOCgnMHg5ZScpXSx7J2NyZWF0ZSc6X1tfMHg1MTA4KCcweDExNScpXSh0aGlzW18weDUxMDgoJzB4MTI5JyldLHRoaXMpLCdyZWN5Y2xlJzpfW18weDUxMDgoJzB4MTE1JyldKHRoaXNbXzB4NTEwOCgnMHgxMmEnKV0sdGhpcyksJ2hlYWx0aHknOmZ1bmN0aW9uKCl7cmV0dXJuITB4MDt9LCdwcmVwYXJlJzpfWydiaW5kJ10odGhpc1tfMHg1MTA4KCcweDEyYicpXSx0aGlzKX0pLHRoaXNbJ19icm93c2VyRW52aXJvbm1lbnQnXT1uZXcgXzB4MTBmNDhjKF8weDJlMTEyYyx0aGlzW18weDUxMDgoJzB4ODYnKV0pO319KTtpZighXzB4MTY2NjVlKXt2YXIgXzB4NTE0ZmE5PV8weGNjMzA1OFtfMHg1MTA4KCcweDRhMCcpXSgpO3JldHVybiBfMHg1MTRmYTk/eydmaWxlJzpfMHhjYzMwNThbXzB4NTEwOCgnMHg0ODMnKV0oKSwnbG9jJzpbXzB4NTE0ZmE5W18weDUxMDgoJzB4MWZmJyldKCksXzB4NTE0ZmE5W18weDUxMDgoJzB4M2Y0JyldKCldfTp7fTt9dmFyIF8weDU2YTU1Yj1fMHgxNjY2NWVbXzB4NTEwOCgnMHgxOWQnKV0oKVsweDBdLF8weDM0MWU2Zj1fMHg1NmE1NWJbXzB4NTEwOCgnMHgzZDgnKV0oKSxfMHgzYzA2Zjk9e307cmV0dXJuIF8weDNjMDZmOVtfMHg1MTA4KCcweDE1MicpXT1fMHg1NmE1NWJbXzB4NTEwOCgnMHg0ODMnKV0oKSxfMHgzNDFlNmYmJihfMHgzYzA2ZjlbXzB4NTEwOCgnMHg1MycpXT1bXzB4MzQxZTZmW18weDUxMDgoJzB4MWZmJyldKCksXzB4MzQxZTZmW18weDUxMDgoJzB4M2Y0JyldKCldKSxfMHgzYzA2Zjk7fX1lbHNle3ZhciBfMHgxZWFiZWY9dGhpcztfMHhjYzMwNThbXzB4NTEwOCgnMHg1NWUnKV09ITB4MSx0aGlzWydfc2VuZCddKHsndHlwZSc6XzB4NTEwOCgnMHgyMGInKSwnZmlsZXMnOl8weDJlMTEyY1tfMHg1MTA4KCcweGRhJyldKGZ1bmN0aW9uKF8weDM2ZjYxOSl7dmFyIF8weDM3ZTA0NT1fMHgxZWFiZWZbXzB4NTEwOCgnMHgxNDInKV1bXzB4NTEwOCgnMHgzMmInKV0oXzB4MzZmNjE5WydpZCddKTtyZXR1cm57J2FjdGlvbic6J2FkZGVkJywncGF0aCc6XzB4MzZmNjE5W18weDUxMDgoJzB4MzQnKV0sJ2lkJzpfMHgzNmY2MTlbJ2lkJ10sJ3Rlc3QnOl8weDM3ZTA0NSYmXzB4MzdlMDQ1W18weDUxMDgoJzB4N2EnKV0oKXx8dm9pZCAweDAsJ2NvdmVyYWdlJzpfMHgxZWFiZWZbJ19yZXBvcnRGaWxlQ292ZXJhZ2UnXShfMHgzN2UwNDUpfTt9KX0sXzB4Y2MzMDU4KTt9fX0sXzB4Y2MzMDU4W18weDUxMDgoJzB4YWUnKV1bJ19sYXRlc3RGYWlsaW5nVGVzdEJ5RmlsZUFuZExpbmUnXT1mdW5jdGlvbihfMHgyZTExMmMpe3ZhciBfMHhjYzMwNTg9XzB4MmUxMTJjW18weDUxMDgoJzB4MTUyJyldJiZ0aGlzW18weDUxMDgoJzB4MmM2JyldKF8weDJlMTEyY1snZmlsZSddKSxfMHg1MTRmYTk9XzB4Y2MzMDU4JiZfMHgyZTExMmNbXzB4NTEwOCgnMHgyM2InKV0mJl8weGNjMzA1OFsnbGluZUNvdmVyaW5nVGVzdHNPcmRlcmVkQnlGYWlsaW5nVGhlbkRhdGUnXShfMHgyZTExMmNbXzB4NTEwOCgnMHgyM2InKV0sZnVuY3Rpb24oXzB4MmUxMTJjKXtpZihfMHg1MTA4KCcweDU1ZicpIT09XzB4NTEwOCgnMHg1NjAnKSl7cmV0dXJuIF8weDJlMTEyY1tfMHg1MTA4KCcweDNmZScpXSgpfHxfMHgyZTExMmNbJ2lzT25FcnJvclBhdGgnXSgpO31lbHNle3ZhciBfMHg0ODBjMzU7cmV0dXJuIF8weDU2YTU1Yih0aGlzLGZ1bmN0aW9uKF8weDM2NWJjZCl7c3dpdGNoKF8weDM2NWJjZFtfMHg1MTA4KCcweDEwZicpXSl7Y2FzZSAweDA6cmV0dXJuWzB4NCx0aGlzWydfd29ya2VyUG9vbCddW18weDUxMDgoJzB4NmEnKV0odGhpc1tfMHg1MTA4KCcweDEyYycpXVsnd2ViQXBwJ10oKSldO2Nhc2UgMHgxOnJldHVybiBfMHg0ODBjMzU9XzB4MzY1YmNkW18weDUxMDgoJzB4MTNiJyldKCksdGhpc1tfMHg1MTA4KCcweDg2JyldW18weDUxMDgoJzB4MTNjJyldKHRoaXNbXzB4NTEwOCgnMHgxMmMnKV1bXzB4NTEwOCgnMHgxOTYnKV0oKSksWzB4MixfMHg0ODBjMzVdO319KTt9fSlbMHgwXTtyZXR1cm4gXzB4NTE0ZmE5JiZfMHg1MTRmYTlbJ2lzRmFpbGluZyddKCl8fChfMHg1MTRmYTk9dGhpc1tfMHg1MTA4KCcweDU2MScpXSgpKSxfMHg1MTRmYTk7fSxfMHhjYzMwNThbJ3Byb3RvdHlwZSddW18weDUxMDgoJzB4MmYxJyldPWZ1bmN0aW9uKF8weDJlMTEyYyl7dmFyIF8weGNjMzA1OD10aGlzWydfbGF0ZXN0RmFpbGluZ1Rlc3RCeUZpbGVBbmRMaW5lJ10oXzB4MmUxMTJjKTtpZihfMHhjYzMwNTgpe3ZhciBfMHg1MTRmYTk9XzB4Y2MzMDU4W18weDUxMDgoJzB4NDA4JyldKCk7aWYoIV8weDUxNGZhOVtfMHg1MTA4KCcweGJlJyldKXJldHVybjt2YXIgXzB4MTY2NjVlPV8weGNjMzA1OFsnZmlsZUlkJ10oKTtpZihfMHg1MTA4KCcweDIzOCcpPT09XzB4MmUxMTJjWyd0eXBlJ10pcmV0dXJuIHRoaXNbJ19tYXBFcnJvcnMnXShfW18weDUxMDgoJzB4ZDgnKV0oXzB4NTE0ZmE5LGZ1bmN0aW9uKF8weGNjMzA1OCl7cmV0dXJuIF9bJ2ZpbmQnXShfMHhjYzMwNThbXzB4NTEwOCgnMHgxOWQnKV0oKSxmdW5jdGlvbihfMHhjYzMwNTgpe3JldHVybiBfMHhjYzMwNThbJ2ZpbGVJZCddKCk9PT1fMHgxNjY2NWUmJl8weGNjMzA1OFtfMHg1MTA4KCcweDIzYicpXSgpPT09XzB4MmUxMTJjW18weDUxMDgoJzB4MjNiJyldO30pO30pKVsweDBdO2lmKF8weDUxMDgoJzB4MjNjJyk9PT1fMHgyZTExMmNbXzB4NTEwOCgnMHg2OScpXSlyZXR1cm4gdGhpc1tfMHg1MTA4KCcweDIzOScpXShfMHg1MTRmYTkpWzB4MF07fX0sXzB4Y2MzMDU4W18weDUxMDgoJzB4YWUnKV1bXzB4NTEwOCgnMHg1NjEnKV09ZnVuY3Rpb24oKXtyZXR1cm4gX1snbGFzdCddKF9bXzB4NTEwOCgnMHgxYmEnKV0odGhpc1tfMHg1MTA4KCcweDUwNicpXSkpO30sXzB4Y2MzMDU4W18weDUxMDgoJzB4YWUnKV1bXzB4NTEwOCgnMHg0NWYnKV09ZnVuY3Rpb24oXzB4MmUxMTJjKXtpZihfMHg1MTA4KCcweDU2MicpPT09J3FET29zJyl7aWYodGhpc1tfMHg1MTA4KCcweDFiZicpXSlyZXR1cm4gdGhpc1tfMHg1MTA4KCcweDFiZicpXTt2YXIgXzB4Y2MzMDU4PXsnZXJyb3JzJzp0aGlzW18weDUxMDgoJzB4MjM5JyldKHRoaXNbXzB4NTEwOCgnMHgzMGEnKV0pLCd0aW1lJzpfMHgyZTExMmMsJ2FkZGl0aW9uYWxIZWFkZXJNZXNzYWdlJzp0aGlzW18weDUxMDgoJzB4NTYzJyldfTtpZihwcm9jZXNzW18weDUxMDgoJzB4NycpXVtfMHg1MTA4KCcweDUnKV0pe2lmKF8weDUxMDgoJzB4NTY0Jyk9PT0nWnVleGsnKXtfMHhjYzMwNThbXzB4NTEwOCgnMHgxZjMnKV09dGhpc1tfMHg1MTA4KCcweDFmMicpXSh0aGlzW18weDUxMDgoJzB4NTQyJyldKTt2YXIgXzB4NTE0ZmE5PXRoaXNbXzB4NTEwOCgnMHg5ZScpXVsnc2V0dGluZ3MnXSgpO18weDUxNGZhOSYmXzB4NTE0ZmE5W18weDUxMDgoJzB4NScpXSYmX1snZWFjaCddKF8weGNjMzA1OFtfMHg1MTA4KCcweDQwOCcpXSxmdW5jdGlvbihfMHgyZTExMmMpe2lmKF8weDJlMTEyYyYmXzB4MmUxMTJjW18weDUxMDgoJzB4YTgnKV0pe2lmKF8weDUxNGZhOVtfMHg1MTA4KCcweDUnKV1bJ2luc3RhbGxQYWNrYWdlJ11bXzB4NTEwOCgnMHgyY2UnKV0pe3ZhciBfMHhjYzMwNTg9XzB4MmUxMTJjW18weDUxMDgoJzB4YTgnKV1bXzB4NTEwOCgnMHg1NjUnKV0oL0Nhbm5vdCBmaW5kIG1vZHVsZSAnKFteJ1xzJnw7XSspJy8pO18weGNjMzA1OCYmXzB4Y2MzMDU4WzB4MV0mJihfMHgyZTExMmNbXzB4NTEwOCgnMHg1NjYnKV09XzB4MzQxZTZmW18weDUxMDgoJzB4MmNmJyldKF8weGNjMzA1OFsweDFdKSk7fXZhciBfMHgxNjY2NWU9XzB4MmUxMTJjWydtZXNzYWdlJ11bXzB4NTEwOCgnMHg1NjUnKV0oLyhbXlxzXSspIGlzIG5vdCBkZWZpbmVkLyk7XzB4MTY2NjVlJiZfMHgxNjY2NWVbMHgxXSYmKF8weDE2NjY1ZT1fMHgxNjY2NWVbMHgxXSxfMHgzYzA2ZjlbXzB4MTY2NjVlXT9fMHgyZTExMmNbXzB4NTEwOCgnMHg1NjcnKV09XzB4MTY2NjVlOl8weDJlMTEyY1tfMHg1MTA4KCcweDU2OCcpXT1fMHgxNjY2NWUpO319KTt9ZWxzZXt2YXIgXzB4ZTI4ZDc2PV8weDJlMTEyY1tfMHg1MTA4KCcweDUyYScpXSxfMHgzNTc0ZDQ9XzB4ZTI4ZDc2W18weDUxMDgoJzB4NTJiJyldKF8weDJlMTEyY1sncGF0Y2hlcyddKSxfMHg0ZTVlNz1bXSxfMHgzYTJiMzg9MHgwLF8weDUxMmU2NT0weDA7cmV0dXJuIF9bXzB4NTEwOCgnMHgxMzUnKV0oXzB4MzU3NGQ0LGZ1bmN0aW9uKF8weDJkMzhkZSl7dmFyIF8weGUyOGQ3Nj0weDA7X1tfMHg1MTA4KCcweDEzNScpXShfMHgyZDM4ZGVbXzB4NTEwOCgnMHg1NjknKV0sZnVuY3Rpb24oXzB4MzU3NGQ0KXtpZigweDA9PT1fMHgzNTc0ZDRbMHgwXSlfMHhlMjhkNzYrPV8weDM1NzRkNFsweDFdW18weDUxMDgoJzB4YmUnKV07ZWxzZXt2YXIgXzB4NTJiM2E4PV8weDM1NzRkNFsweDBdKihfW18weDUxMDgoJzB4MzlkJyldKF8weDM1NzRkNFsweDFdLHZvaWQgMHgwLC9cbi8pWydsZW5ndGgnXS0weDEpO18weDRlNWU3W18weDUxMDgoJzB4NGInKV0oeydsaW5lT2Zmc2V0JzpfMHgzYTJiMzgsJ2xpbmVEaWZmZXJlbmNlJzpfMHg1MmIzYTgsJ2NoYXJhY3Rlck9mZnNldCc6XzB4MmQzOGRlWydzdGFydDEnXStfMHg1MTJlNjUrXzB4ZTI4ZDc2fSksXzB4M2EyYjM4Kz1fMHg1MmIzYTgsMHgxPT09XzB4MzU3NGQ0WzB4MF0mJihfMHhlMjhkNzYrPV8weDM1NzRkNFsweDFdW18weDUxMDgoJzB4YmUnKV0pO319KSxfMHg1MTJlNjUrPV8weDJkMzhkZVtfMHg1MTA4KCcweDU2YScpXS1fMHgyZDM4ZGVbXzB4NTEwOCgnMHg1NmInKV07fSksXzB4NGU1ZTc7fX1lbHNlIF8weGNjMzA1OFtfMHg1MTA4KCcweDU2YycpXT1fWydzaXplJ10odGhpc1tfMHg1MTA4KCcweDQ1MicpXSksXzB4Y2MzMDU4WydmYWlsaW5nTnVtYmVyJ109X1snc2l6ZSddKHRoaXNbXzB4NTEwOCgnMHg1MDYnKV0pLF8weGNjMzA1OFtfMHg1MTA4KCcweGQ0JyldPXRoaXNbXzB4NTEwOCgnMHg1NmQnKV0odGhpc1tfMHg1MTA4KCcweDUwNicpXSlbXzB4NTEwOCgnMHgyMTUnKV0oKVtfMHg1MTA4KCcweGRlJyldKCk7cmV0dXJuIF8weGNjMzA1ODt9ZWxzZXt2YXIgXzB4NWNlYTFmLF8weDNhMDA2ZixfMHg1Y2JhZTcsXzB4NTIxZGQyLF8weDIxMGI2NixfMHgyYTkzZmYsXzB4MWNiYTc0LF8weDVhNDJmMyxfMHgzYTkyMWIsXzB4MmM5ZjBiLF8weDJjMzJkMj10aGlzO3JldHVybiBfMHg1NmE1NWIodGhpcyxmdW5jdGlvbihfMHg5YmM3NTgpe3N3aXRjaChfMHg5YmM3NThbXzB4NTEwOCgnMHgxMGYnKV0pe2Nhc2UgMHgwOmlmKF8weDliYzc1OFtfMHg1MTA4KCcweDExMScpXVsncHVzaCddKFsweDAsMHgxMiwsMHgxM10pLCF0aGlzW18weDUxMDgoJzB4MTNlJyldKXRocm93IG5ldyBFcnJvcignQ2hyb21lXHgyMGlzXHgyMG5vdFx4MjBydW5uaW5nJyk7cmV0dXJuWzB4NCxfMHgzYzA2ZjlbXzB4NTEwOCgnMHgxNjcnKV0odGhpc1tfMHg1MTA4KCcweDE1ZCcpXSh7J3VybCc6XzB4Y2MzMDU4fSkpXTtjYXNlIDB4MTpyZXR1cm4gXzB4NWNlYTFmPV8weDliYzc1OFtfMHg1MTA4KCcweDEzYicpXSgpLF8weDJlMTEyY1tfMHg1MTA4KCcweDE0ZicpXT17J3RhcmdldCc6eydpZCc6XzB4NWNlYTFmWydpZCddfX0sdGhpc1tfMHg1MTA4KCcweDE0YScpXSgpLFsweDQsXzB4M2MwNmY5KHsndGFiJzpfMHg1Y2VhMWZ9KV07Y2FzZSAweDI6XzB4M2EwMDZmPV8weDliYzc1OFtfMHg1MTA4KCcweDEzYicpXSgpLF8weDJlMTEyY1tfMHg1MTA4KCcweDE0ZicpXT1fMHgzYTAwNmYsdGhpc1tfMHg1MTA4KCcweDE0YScpXSgpLF8weDVjYmFlNz1fMHgzYTAwNmZbJ1BhZ2UnXSxfMHg1MjFkZDI9XzB4M2EwMDZmW18weDUxMDgoJzB4MTY5JyldLF8weDliYzc1OFtfMHg1MTA4KCcweDEwZicpXT0weDM7Y2FzZSAweDM6cmV0dXJuIF8weDliYzc1OFsndHJ5cyddW18weDUxMDgoJzB4NGInKV0oWzB4MywweDEwLCwweDExXSksXzB4MjEwYjY2PSEhdGhpc1tfMHg1MTA4KCcweDEyYycpXVtfMHg1MTA4KCcweDE2YScpXSgpLF8weDJhOTNmZj1bXzB4NWNiYWU3W18weDUxMDgoJzB4MTZiJyldKCldLF8weDIxMGI2NiYmXzB4MmE5M2ZmW18weDUxMDgoJzB4NGInKV0oXzB4NTIxZGQyW18weDUxMDgoJzB4MTZiJyldKCkpLFsweDQsUHJvbWlzZVtfMHg1MTA4KCcweDE2YycpXShfMHgyYTkzZmYpXTtjYXNlIDB4NDppZihfMHg5YmM3NThbJ3NlbnQn4oCLXSgpLHRoaXNbJ19jaGVja0NhbmNlbGxlZCddKCksIV8weDIxMGI2NilyZXR1cm5bMHgzLDB4ZF07XzB4NTIxZGQyW18weDUxMDgoJzB4NTZlJyldKGZ1bmN0aW9uKF8weDI1NmZhZCl7dmFyIF8weDg5NzFmOD1fMHgyNTZmYWRbXzB4NTEwOCgnMHg0MmInKV0sXzB4MTNjYWQ3PV8weDI1NmZhZFtfMHg1MTA4KCcweDI3NScpXTtyZXR1cm4gXzB4NTIxZGQyW18weDUxMDgoJzB4MTZkJyldKHsnaW50ZXJjZXB0aW9uSWQnOl8weDg5NzFmOCwndXJsJzpfMHgyYzMyZDJbXzB4NTEwOCgnMHgxNmUnKV0oXzB4MTNjYWQ3W18weDUxMDgoJzB4OTQnKV0pfSlbXzB4NTEwOCgnMHhhOScpXShmdW5jdGlvbihfMHgyNTZmYWQpe30pO30pLF8weDliYzc1OFtfMHg1MTA4KCcweDEwZicpXT0weDU7Y2FzZSAweDU6cmV0dXJuIF8weDliYzc1OFsndHJ5cyddW18weDUxMDgoJzB4NGInKV0oWzB4NSwweDcsLDB4Y10pLFsweDQsXzB4M2EwMDZmW18weDUxMDgoJzB4MTZmJyldKF8weDUxMDgoJzB4MTcwJykseydwYXR0ZXJucyc6W3sndXJsUGF0dGVybic6JyonfV19KV07Y2FzZSAweDY6cmV0dXJuIF8weDliYzc1OFtfMHg1MTA4KCcweDEzYicpXSgpLFsweDMsMHhjXTtjYXNlIDB4NzpfMHgxY2JhNzQ9XzB4OWJjNzU4W18weDUxMDgoJzB4MTNiJyldKCksXzB4OWJjNzU4W18weDUxMDgoJzB4MTBmJyldPTB4ODtjYXNlIDB4ODpyZXR1cm4gXzB4OWJjNzU4W18weDUxMDgoJzB4MTExJyldW18weDUxMDgoJzB4NGInKV0oWzB4OCwweGEsLDB4Yl0pLFsweDQsXzB4NTIxZGQyW18weDUxMDgoJzB4MTcxJyldKHsnZW5hYmxlZCc6ITB4MH0pXTtjYXNlIDB4OTpyZXR1cm4gXzB4OWJjNzU4W18weDUxMDgoJzB4MTNiJyldKCksWzB4MywweGJdO2Nhc2UgMHhhOnJldHVybiBfMHg1YTQyZjM9XzB4OWJjNzU4W18weDUxMDgoJzB4MTNiJyldKCksY29uc29sZVtfMHg1MTA4KCcweDE3MicpXShfMHg1MTA4KCcweDE3MycpKSxbMHgzLDB4Yl07Y2FzZSAweGI6cmV0dXJuWzB4MywweGNdO2Nhc2UgMHhjOnRoaXNbXzB4NTEwOCgnMHgxNGEnKV0oKSxfMHg5YmM3NThbJ2xhYmVsJ109MHhkO2Nhc2UgMHhkOnJldHVyblsweDQsXzB4NWNiYWU3W18weDUxMDgoJzB4NTZmJyldKHsndXJsJzpfMHhjYzMwNTh9KV07Y2FzZSAweGU6cmV0dXJuIF8weDliYzc1OFtfMHg1MTA4KCcweDEzYicpXSgpLHRoaXNbXzB4NTEwOCgnMHgxNGEnKV0oKSxbMHg0LF8weDVjYmFlN1tfMHg1MTA4KCcweDU3MCcpXSgpXTtjYXNlIDB4ZjpyZXR1cm4gXzB4OWJjNzU4W18weDUxMDgoJzB4MTNiJyldKCksdGhpc1snX2NoZWNrQ2FuY2VsbGVkJ10oKSxfMHg1MTRmYTkoeydzdGF0dXMnOl8weDUxMDgoJzB4MTc0Jyl9KSxbMHgzLDB4MTFdO2Nhc2UgMHgxMDpyZXR1cm4gXzB4M2E5MjFiPV8weDliYzc1OFsnc2VudCddKCksdGhpc1snX2Nsb3NlVGFiJ10oXzB4MmUxMTJjKSxfMHg1MTRmYTkoeydzdGF0dXMnOl8weDUxMDgoJzB4MTc2JykrKF8weDNhOTIxYltfMHg1MTA4KCcweGE4JyldfHwndW5rbm93bicpfSksWzB4MywweDExXTtjYXNlIDB4MTE6cmV0dXJuWzB4MywweDEzXTtjYXNlIDB4MTI6cmV0dXJuIF8weDJjOWYwYj1fMHg5YmM3NThbXzB4NTEwOCgnMHgxM2InKV0oKSxfMHg1MTRmYTkoeydzdGF0dXMnOl8weDUxMDgoJzB4MTc2JykrKF8weDJjOWYwYlsnbWVzc2FnZSddfHwndW5rbm93bicpfSksWzB4MywweDEzXTtjYXNlIDB4MTM6cmV0dXJuWzB4Ml07fX0pO319LF8weGNjMzA1OFtfMHg1MTA4KCcweGFlJyldW18weDUxMDgoJzB4YjgnKV09ZnVuY3Rpb24oKXtyZXR1cm4gX1snZmlsdGVyJ10odGhpc1tfMHg1MTA4KCcweDUzZicpXSxmdW5jdGlvbihfMHgyZTExMmMpe2lmKF8weDUxMDgoJzB4NTcxJyk9PT1fMHg1MTA4KCcweDU3MScpKXtyZXR1cm4gXzB4MmUxMTJjW18weDUxMDgoJzB4N2EnKV0oKTt9ZWxzZXtpZighdGhpc1tfMHg1MTA4KCcweDRjNycpXSlyZXR1cm5bXTtpZihfMHg1MTRmYTk9dGhpc1tfMHg1MTA4KCcweDRjNycpXVsnbGluZSddKF8weDJlMTEyYyksIV8weDUxNGZhOSlyZXR1cm5bXTt9fSk7fSxfMHhjYzMwNThbJ3Byb3RvdHlwZSddWydzdW1tYXJ5J109ZnVuY3Rpb24oKXtpZihfMHg1MTA4KCcweDU3MicpIT09XzB4NTEwOCgnMHg1NzMnKSl7dmFyIF8weDJlMTEyYz1fW18weDUxMDgoJzB4MWI4JyldKHRoaXNbXzB4NTEwOCgnMHg0NTInKV0pLF8weGNjMzA1OD1fW18weDUxMDgoJzB4MWI4JyldKHRoaXNbXzB4NTEwOCgnMHg1MDYnKV0pO3JldHVybnsndG90YWwnOl8weDJlMTEyYywncGFzc2VkJzpfMHgyZTExMmMtXzB4Y2MzMDU4LCdmYWlsZWQnOl8weGNjMzA1OCwnY292ZXJhZ2UnOnRoaXNbJ19jb3ZlcmFnZSddLCdlcnJvcic6dGhpc1tfMHg1MTA4KCcweDFiZicpXX07fWVsc2V7ZGVsZXRlIF8weGNjMzA1OFtfMHg1MTA4KCcweDU3NCcpXVtfMHgyZTExMmNdLF8weDUxYjM0Ynx8KF8weDJjYTE0ZCgpLF8weDI5ZDEwNihfMHg1MTA4KCcweDU3NScpK18weDJlMTEyYyksXzB4MzQxZTZmW18weDUxMDgoJzB4MzM0JyldPV8weDU2YTU1YixfMHgzNDFlNmZbJ19jb25uZWN0ZWQnXT0hMHgwLF8weDU2YTU1YltfMHg1MTA4KCcweDUwYScpXT1fMHgxNjY2NWUsXzB4MzQxZTZmW18weDUxMDgoJzB4MWE4JyldPVFbXzB4NTEwOCgnMHhmNicpXShfMHg1NmE1NWIpLF8weDNjMDZmOSYmXzB4M2MwNmY5KF8weDU2YTU1YiksXzB4NTE0ZmE5KF8weDU2YTU1YikpO319LF8weGNjMzA1OFtfMHg1MTA4KCcweGFlJyldW18weDUxMDgoJzB4YjYnKV09ZnVuY3Rpb24oKXtpZihfMHg1MTA4KCcweDU3NicpIT09XzB4NTEwOCgnMHg1NzcnKSl7cmV0dXJuIF9bJ21hcCddKHRoaXNbXzB4NTEwOCgnMHg1M2YnKV0sZnVuY3Rpb24oXzB4MmUxMTJjKXtpZihfMHg1MTA4KCcweDU3OCcpPT09XzB4NTEwOCgnMHg1NzgnKSl7cmV0dXJueydwYXRoJzpfMHgyZTExMmNbXzB4NTEwOCgnMHgzNCcpXSgpLCdpZCc6XzB4MmUxMTJjW18weDUxMDgoJzB4NTAnKV0oKX07fWVsc2V7dmFyIF8weDNiMDAxZT10aGlzO3RoaXNbJ19saW5lU2hpZnRPckludmFsaWRhdGlvblNpbmNlTGFzdFVwZGF0ZSddPSEweDAsX1snZWFjaCddKF9bXzB4NTEwOCgnMHgzZDgnKV0oXzB4MmUxMTJjW18weDUxMDgoJzB4NmEnKV0sXzB4MmUxMTJjW18weDUxMDgoJzB4NmInKV0pLGZ1bmN0aW9uKF8weDJhMmNiYil7dmFyIF8weDFlZjQ0Yz1fMHgzYjAwMWVbJ19saW5lcyddW18weDJhMmNiYl07XzB4MWVmNDRjJiZfMHgzYjAwMWVbJ19yZWN5Y2xlTGluZUlmSW5DaGFuZ2VGcmFtZSddKF8weDFlZjQ0YyxfMHgyZTExMmMpO30pO319KTt9ZWxzZXtfMHgyZTExMmNbXzB4NTEwOCgnMHgxMzgnKV1bXzB4NTEwOCgnMHgxNmYnKV0oeyd0eXBlJzpfMHg1MTA4KCcweDExNicpfSk7fX0sXzB4Y2MzMDU4W18weDUxMDgoJzB4YWUnKV1bJ2dsb2JhbEVycm9ycyddPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbXzB4NTEwOCgnMHgzMGEnKV07fSxfMHhjYzMwNThbJ3Byb3RvdHlwZSddW18weDUxMDgoJzB4MmZlJyldPWZ1bmN0aW9uKF8weDJlMTEyYyl7dGhpc1snX2ZpbGVzV2l0aExvYWRhYmxlTWVzc2FnZXMnXVtfMHgyZTExMmNdPXt9LHRoaXNbXzB4NTEwOCgnMHg0NTUnKV0oXzB4MmUxMTJjKTt9LF8weGNjMzA1OFsncHJvdG90eXBlJ11bXzB4NTEwOCgnMHg1NzknKV09ZnVuY3Rpb24oXzB4MmUxMTJjKXtpZihfMHg1MTA4KCcweDU3YScpPT09J0xCU3JEJyl7dmFyIF8weGNjMzA1OD10aGlzO3RyeXtfWydfJytbXzB4NTEwOCgnMHgyYjgnKSxfMHg1MTA4KCcweDI5ZicpLCdjbCddW18weDUxMDgoJzB4ODInKV0oJycpXSYmWyc1bScsJ2toJywncHknLCc4aicsJ2NsJ11bXzB4NTEwOCgnMHg4MicpXSgnJyk9PT1fWydfJytbJzVtJywna2gnLCdweScsJzhqJywnY2wnXVtfMHg1MTA4KCcweDgyJyldKCcnKV18fFN0cmluZ1tbJzI1bicsXzB4NTEwOCgnMHg1N2InKSwnbWI3JyxfMHg1MTA4KCcweDU3YycpXVsnam9pbiddKCcnKV0oZnVuY3Rpb24oKXt0aHJvdyBuZXcgRXJyb3IoW18weDUxMDgoJzB4NTQ3JyksJ3VyY2VceDIwbWFwcGluZyxceDIwdScsXzB4NTEwOCgnMHgyYTAnKSxfMHg1MTA4KCcweDJhMScpXVsnam9pbiddKCcnKSk7fSwweDFiNTgpO31jYXRjaChfMHg0OGQxNjQpe31fW18weDUxMDgoJzB4MTM1JyldKF8weDJlMTEyY1tfMHg1MTA4KCcweDFjYicpXSxmdW5jdGlvbihfMHgyZTExMmMpe2lmKF8weDUxMDgoJzB4NTdkJykhPT0nZEtid2knKXtpZighaltfMHg1MTA4KCcweGEnKV1bXzB4NTEwOCgnMHgyODAnKV0pcmV0dXJuIF8weDM0MWU2ZlsnaWQnXT1fMHg1MTA4KCcweDI2JyksXzB4MTY2NjVlPV8weDUxMDgoJzB4MjcnKStfMHhjYzMwNTgrJ1x4MjBsaWNlbnNlXHgyMGZvdW5kLFx4MjBzdGFydGluZ1x4MjBpblx4MjBsaW1pdGVkLXRyaWFsXHgyMG1vZGUuPGJyLz5JZlx4MjB5b3VceDIwd291bGRceDIwbGlrZVx4MjB0b1x4MjB0cnlceDIwV2FsbGFieVx4MjB3aXRob3V0XHgyMGFueVx4MjBsaW1pdGF0aW9ucyxceDIwcGxlYXNlXHgyMHJlcXVlc3RceDIwYW5ceDIwPGFceDIwaHJlZj1ceDIyJytDK18weDUxMDgoJzB4MjInKStTKydceDIyPmV4dGVuZGVkXHgyMHRyaWFsXHgyMGxpY2Vuc2U8L2E+Ljxici8+SWZceDIweW91XHgyMGhhdmVceDIwYWxyZWFkeVx4MjBwdXJjaGFzZWRceDIwdGhlXHgyMGxpY2Vuc2UsXHgyMHBsZWFzZVx4MjA8YVx4MjBocmVmPVx4MjIjXHgyMlx4MjBjbGFzcz1ceDIyJytUKydceDIyPmFjdGl2YXRlXHgyMGl0PC9hPi48YnIvPklmXHgyMHlvdVx4MjB3b3VsZFx4MjBsaWtlXHgyMHRvXHgyMHB1cmNoYXNlXHgyMGFceDIwbGljZW5zZSxceDIwcGxlYXNlXHgyMHZpc2l0XHgyMDxhXHgyMGhyZWY9XHgyMicrXzB4NTE0ZmE5K18weDUxMDgoJzB4MjknKSx0aGlzWydfZW1pdE5vdGlmaWNhdGlvbiddKF8weDUxMDgoJzB4MmEnKSxfMHgxNjY2NWUsXzB4MzQxZTZmKSx0aGlzW18weDUxMDgoJzB4MmIwJyldKCksXzB4MmUxMTJjKCk7dmFyIF8weDQ4ODBiZj17J2ludmFsaWRWZXJzaW9uJzohMHgwLCdpZCc6J2ludmFsaWRWZXJzaW9uJ307cHJvY2Vzc1snZW52J11bXzB4NTEwOCgnMHg1JyldPyhfMHg0ODgwYmZbXzB4NTEwOCgnMHgxOScpXT1uZXcgXzB4NTZhNTViKGpbJ3ZlcmlmaWNhdGlvblJlc3VsdCddW18weDUxMDgoJzB4YicpXStfMHg1MTA4KCcweDJiJykpLF8weDE2NjY1ZT0nWW91XHgyMGFyZVx4MjA8Yj5ub3RceDIwbGljZW5zZWRceDIwdG9ceDIwdXNlXHgyMFBST1x4MjBmZWF0dXJlc1x4MjBmb3JceDIwdGhpc1x4MjB2ZXJzaW9uXHgyMG9mXHgyMCcrXzB4Y2MzMDU4K18weDUxMDgoJzB4MmQnKStfMHg1MTRmYTkrJ1x4MjI+W1JlbmV3XTwvYT4sXHgyMDxhXHgyMGhyZWY9XHgyMiNceDIyXHgyMGNsYXNzPVx4MjInK1QrXzB4NTEwOCgnMHgyZicpK18weDQ4ODBiZltfMHg1MTA4KCcweDE5JyldW18weDUxMDgoJzB4MWEnKV0oKSsnLScrKF8weDQ4ODBiZltfMHg1MTA4KCcweDE5JyldW18weDUxMDgoJzB4MzAnKV0oKSsweDEpKyctJytfMHg0ODgwYmZbXzB4NTEwOCgnMHgxOScpXVtfMHg1MTA4KCcweDFiJyldKCkrXzB4NTEwOCgnMHgzMScpK0UrXzB4NTEwOCgnMHgzMicpKTpfMHgxNjY2NWU9XzB4NTEwOCgnMHgzYTMnKStfMHhjYzMwNTgrXzB4NTEwOCgnMHgzMycpK18weDUxNGZhOStfMHg1MTA4KCcweDU3ZScpK1QrJ1x4MjI+YWN0aXZhdGVceDIwaXQ8L2E+LicsdGhpc1tfMHg1MTA4KCcweDFlJyldKF8weDUxMDgoJzB4MjQnKSxfMHgxNjY2NWUsXzB4NDg4MGJmKSx0aGlzW18weDUxMDgoJzB4MjUnKV0oKTt9ZWxzZXtyZXR1cm4gXzB4Y2MzMDU4W18weDUxMDgoJzB4NTdmJyldKG5ldyBfMHgyOWQxMDYoXzB4MmUxMTJjKSk7fX0pLHRoaXNbJ19lbWl0J10oXzB4NTEwOCgnMHhiNicpLHsnZmlsZXMnOl8weDJlMTEyY1tfMHg1MTA4KCcweDFjYicpXX0pO31lbHNle3JldHVybiB2b2lkIGNvbnNvbGVbXzB4NTEwOCgnMHgyNCcpXSgnRmFpbGVkXHgyMHRvXHgyMGRlc2VyaWFsaXplXHgyMG1lc3NhZ2VceDIwZnJvbVx4MjB3b3JrZXI6XHgyMCcrXzB4NTE0ZmE5KycsXHgyMCcrKF8weDU2YTU1YiYmXzB4NTZhNTViWydtZXNzYWdlJ10pKTt9fSxfMHhjYzMwNThbJ3Byb3RvdHlwZSddW18weDUxMDgoJzB4MzNlJyldPWZ1bmN0aW9uKCl7dGhpc1snX2VtaXQnXShfMHg1MTA4KCcweDMzZicpKTt9LF8weGNjMzA1OFtfMHg1MTA4KCcweGFlJyldW18weDUxMDgoJzB4NTgwJyldPWZ1bmN0aW9uKF8weDJlMTEyYyl7aWYoXzB4NTEwOCgnMHg1ODEnKT09PV8weDUxMDgoJzB4NTgyJykpe3RoaXNbXzB4NTEwOCgnMHg5ZScpXVtfMHg1MTA4KCcweGQwJyldKF8weDJlMTEyY1tfMHg1MTA4KCcweDI3NScpXSk7fWVsc2V7dmFyIF8weGNjMzA1OD1fMHgyZTExMmNbXzB4NTEwOCgnMHgxNTInKV0sXzB4NTE0ZmE5PV8weDJlMTEyY1tfMHg1MTA4KCcweDRkMCcpXSxfMHgxNjY2NWU9dGhpc1tfMHg1MTA4KCcweDMyYicpXShfMHhjYzMwNThbJ2lkJ10pO2lmKF8weDE2NjY1ZSYmIV8weDUxNGZhOSYmdGhpc1tfMHg1MTA4KCcweDFjNycpXSgnZmlsZUNoYW5nZWQnLHsnZmlsZSc6XzB4Y2MzMDU4fSksXzB4MTY2NjVlfHxfMHg1MTRmYTl8fChfMHgxNjY2NWU9bmV3IF8weDI5ZDEwNihfMHhjYzMwNTgpLHRoaXNbJ19hZGRGaWxlJ10oXzB4MTY2NjVlKSx0aGlzWydfZW1pdCddKCdmaWxlQWRkZWQnLHsnZmlsZSc6XzB4Y2MzMDU4fSkpLF8weDE2NjY1ZSYmXzB4NTE0ZmE5KXtpZigneU52ZkInPT09XzB4NTEwOCgnMHg1ODMnKSl7aWYoXzB4MmUxMTJjWydzZXNzaW9uJ10pe3ZhciBfMHgzOTAxMjM9XzB4MmUxMTJjWydzZXNzaW9uJ10sXzB4MmNjZjIxPV8weGNjMzA1OFsnX2NyZWF0ZVJ1blJlc3VsdCddKF8weDM5MDEyMyxfMHgyZTExMmNbXzB4NTEwOCgnMHgzNGEnKV0pO3JldHVybiBfW18weDUxMDgoJzB4MTM1JyldKF9bJ2tleXMnXShfMHgzOTAxMjMpLGZ1bmN0aW9uKF8weDJmZjQ2Nyl7XzB4MmZmNDY3JiYnXyc9PT1fMHgyZmY0NjdbMHgwXSYmIV9bXzB4NTEwOCgnMHgzNGMnKV0oXzB4MzkwMTIzW18weDJmZjQ2N10pJiZfMHg1MTA4KCcweDU4NCcpIT09XzB4MmZmNDY3JiZkZWxldGUgXzB4MzkwMTIzW18weDJmZjQ2N107fSksZGVsZXRlIF8weDJlMTEyY1snc2Vzc2lvbiddLFFbXzB4NTEwOCgnMHhmNicpXShfMHgyY2NmMjEpO31yZXR1cm4gUVsnd2hlbiddKF8weDJlMTEyYyk7fWVsc2V7dGhpc1tfMHg1MTA4KCcweDU4NScpXShfMHhjYzMwNThbJ2lkJ10pO3ZhciBfMHg1NmE1NWI9T2JqZWN0WydjcmVhdGUnXShudWxsKSxfMHgzNDFlNmY9XzB4MTY2NjVlW18weDUxMDgoJzB4NTg2JyldKCk7dGhpc1tfMHg1MTA4KCcweDU4NycpXShfMHgzNDFlNmYpLF9bJ2VhY2gnXShfMHgzNDFlNmYsZnVuY3Rpb24oXzB4MmUxMTJjKXtyZXR1cm4gX1snZXh0ZW5kJ10oXzB4NTZhNTViLF8weDJlMTEyY1tfMHg1MTA4KCcweDQ5OCcpXSgpKTt9KSxkZWxldGUgXzB4NTZhNTViW18weGNjMzA1OFsnaWQnXV0sdGhpc1tfMHg1MTA4KCcweDUwNycpXT0hIV8weDM0MWU2ZltfMHg1MTA4KCcweGJlJyldfHx0aGlzW18weDUxMDgoJzB4NTA3JyldO3ZhciBfMHgzYzA2Zjk9e307X1tfMHg1MTA4KCcweDEzNScpXSh0aGlzWydfZ2xvYmFsRXJyb3JzJ10sZnVuY3Rpb24oXzB4MmUxMTJjKXtpZignZlhnVGcnIT09J2ZYZ1RnJyl7dmFyIF8weDE0YzQ3NT1fMHgyZTExMmNbJ3JlcXVlc3QnXSxfMHg1NzRmMWI9eyd0eXBlJzpfMHg1MTA4KCcweDJlMicpLCdkYXRhJzp7fSwnaWQnOl8weDJlMTEyY1snaWQnXX0sXzB4YzQ2NTE4PXRoaXNbJ19tb2RlbCddWyd1bmNvdmVyZWRSZWdpb25zQnlSZXF1ZXN0J10oXzB4MTRjNDc1KTtyZXR1cm4gXzB4YzQ2NTE4PyhfMHg1NzRmMWJbXzB4NTEwOCgnMHgxZWYnKV1bJ2ZpbGUnXT1fMHgyZTExMmNbJ3JlcXVlc3QnXVsnZmlsZSddLF8weDU3NGYxYltfMHg1MTA4KCcweDFlZicpXVtfMHg1MTA4KCcweDJlNScpXT1fMHhjNDY1MTgsdm9pZCB0aGlzW18weDUxMDgoJzB4MWM3JyldKF8weDU3NGYxYikpOnZvaWQgdGhpc1snX2VtaXROb3RpZmljYXRpb24nXShfMHg1MTA4KCcweDJhJyksXzB4NTEwOCgnMHgyZTYnKSk7fWVsc2V7X1tfMHg1MTA4KCcweDIzYScpXShfMHgyZTExMmNbJ3N0YWNrJ10oKSxmdW5jdGlvbihfMHgyZTExMmMpe3JldHVybiBfMHgyZTExMmNbJ2ZpbGVJZCddKCk9PT1fMHhjYzMwNThbJ2lkJ107fSl8fChfMHgzYzA2ZjlbXzB4MmUxMTJjW18weDUxMDgoJzB4NTAnKV0oKV09XzB4MmUxMTJjKTt9fSksX1sna2V5cyddKF8weDNjMDZmOSlbXzB4NTEwOCgnMHhiZScpXSE9PV9bXzB4NTEwOCgnMHgzNGInKV0odGhpc1snX2dsb2JhbEVycm9ycyddKVtfMHg1MTA4KCcweGJlJyldJiZ0aGlzW18weDUxMDgoJzB4NTg4JyldKF8weDNjMDZmOSksXzB4MTY2NjVlW18weDUxMDgoJzB4N2EnKV0oKSYmdGhpc1tfMHg1MTA4KCcweDFjNycpXSgndGVzdEZpbGVEZWxldGVkJyx7J2ZpbGUnOl8weGNjMzA1OH0pLHRoaXNbJ19lbWl0J10oXzB4NTEwOCgnMHg1ODknKSx7J2ZpbGUnOl8weGNjMzA1OH0pLHRoaXNbJ191cGRhdGVBZmZlY3RlZEZpbGVzJ10oXzB4NTZhNTViKSx0aGlzW18weDUxMDgoJzB4NThhJyldKF8weDE2NjY1ZSwhMHgwKSx0aGlzWydfdXBkYXRlVG90YWxDb3ZlcmFnZSddKCksXzB4MTY2NjVlW18weDUxMDgoJzB4MTA4JyldKCk7fX19fSxfMHhjYzMwNThbJ3Byb3RvdHlwZSddWydwcm9qZWN0OmNvbnNvbGVPdXRwdXQnXT1mdW5jdGlvbihfMHgyZTExMmMpe2lmKF8weDUxMDgoJzB4NThiJykhPT1fMHg1MTA4KCcweDU4YycpKXt2YXIgXzB4Y2MzMDU4PW5ldyBfMHgxMTg0ZTAoXzB4MmUxMTJjW18weDUxMDgoJzB4MWVmJyldKSxfMHg1MTRmYTk9XzB4Y2MzMDU4W18weDUxMDgoJzB4MjM3JyldKCk7aWYoXzB4NTE0ZmE5KXtpZihfMHg1MTA4KCcweDU4ZCcpIT09XzB4NTEwOCgnMHg1OGQnKSl7dHJ5e18weDEwZjQ4YyhfMHgxNjY2NWVbXzB4NTEwOCgnMHgxMDQnKV0oXzB4MmUxMTJjKSk7fWNhdGNoKF8weDM2OGM5Nyl7XzB4MzQxZTZmKF8weDM2OGM5Nyk7fX1lbHNle3ZhciBfMHgxNjY2NWU9dGhpc1snZmlsZUJ5SWQnXShfMHg1MTRmYTkpLF8weDU2YTU1Yj1fMHhjYzMwNThbXzB4NTEwOCgnMHgzZDgnKV0oKTtfMHgxNjY2NWUmJl8weDU2YTU1YiYmXzB4Y2MzMDU4W18weDUxMDgoJzB4M2UyJyldKF8weDE2NjY1ZSk7fX10aGlzW18weDUxMDgoJzB4MWM3JyldKF8weDUxMDgoJzB4MWM4JykseydtZXNzYWdlJzp0aGlzWydfbWFwTWVzc2FnZSddKF8weGNjMzA1OCl9KTt9ZWxzZXtyZXR1cm4gdGhpc1tfMHg1MTA4KCcweDQ4NicpXSYmdGhpc1tfMHg1MTA4KCcweDQ4NicpXVtfMHg1MTA4KCcweDM0JyldKCk7fX0sXzB4Y2MzMDU4W18weDUxMDgoJzB4YWUnKV1bXzB4NTEwOCgnMHgzMmUnKV09ZnVuY3Rpb24oXzB4MmUxMTJjKXt0aGlzWydfcmVwb3J0RmFpbGVkUnVuJ10oXzB4MmUxMTJjW18weDUxMDgoJzB4YTgnKV0pLHRoaXNbXzB4NTEwOCgnMHgxYzcnKV0oXzB4NTEwOCgnMHg1OGUnKSxfMHgyZTExMmMpO30sXzB4Y2MzMDU4W18weDUxMDgoJzB4YWUnKV1bXzB4NTEwOCgnMHgzMzknKV09ZnVuY3Rpb24oXzB4MmUxMTJjKXtpZignR2JmcUknIT09XzB4NTEwOCgnMHg1OGYnKSl7dmFyIF8weDQ5Y2I4Yz10aGlzO2NsZWFyVGltZW91dChfMHg0OWNiOGNbJ19jbG9zZUJ5RXJyb3JUaW1lb3V0J10pLF8weDQ5Y2I4Y1snX2Nsb3NlQnlFcnJvclRpbWVvdXQnXT1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7XzB4NDljYjhjW18weDUxMDgoJzB4NTkwJyldKCk7fSxfMHgyZTExMmMpO31lbHNle3RoaXNbXzB4NTEwOCgnMHgxYzcnKV0oJ3Rlc3RSdW5SZVF1ZXVlZCcsXzB4MmUxMTJjKTt9fSxfMHhjYzMwNThbJ3Byb3RvdHlwZSddWydwcm9qZWN0OnRlc3RSZXN1bHRzJ109ZnVuY3Rpb24oXzB4MmUxMTJjKXt2YXIgXzB4Y2MzMDU4LF8weDUxNGZhOT10aGlzLF8weDE2NjY1ZT1PYmplY3RbJ2NyZWF0ZSddKG51bGwpLF8weDU2YTU1Yj1PYmplY3RbXzB4NTEwOCgnMHg5YScpXShudWxsKSxfMHgzNDFlNmY9e307XzB4NTE0ZmE5WydfYWRkaXRpb25hbEhlYWRlck1lc3NhZ2UnXT1fMHgyZTExMmNbXzB4NTEwOCgnMHg1OTEnKV0sdGhpc1snX3JlcG9ydE5vcm1hbFJ1biddKCksdGhpc1tfMHg1MTA4KCcweDU0MicpXT1bXSxfW18weDUxMDgoJzB4MTM1JyldKF8weDJlMTEyY1tfMHg1MTA4KCcweGQ0JyldLGZ1bmN0aW9uKF8weDU2YTU1Yil7aWYoJ2hiRm5FJyE9PV8weDUxMDgoJzB4NTkyJykpe18weDE2NjY1ZShfMHg1NmE1NWIpO31lbHNle3ZhciBfMHgzNDFlNmY9bmV3IF8weDUxYjM0YihfMHg1NmE1NWIpO18weDM0MWU2ZltfMHg1MTA4KCcweDNlZicpXShudWxsLF8weDJlMTEyY1sndHMnXSxmdW5jdGlvbihfMHgyZTExMmMpe18weDE2NjY1ZVtfMHgyZTExMmNbJ2lkJ13igIsoKV09XzB4MmUxMTJjLF8weGNjMzA1OCE9PSEweDEmJihfMHhjYzMwNTg/XzB4Y2MzMDU4W18weDUxMDgoJzB4NDJkJyldKCl8fChfMHhjYzMwNTg9ISFfMHgyZTExMmNbXzB4NTEwOCgnMHg0MmQnKV0oKSYmXzB4MmUxMTJjKTpfMHhjYzMwNTg9XzB4MmUxMTJjKTt9LGZ1bmN0aW9uKF8weDJlMTEyYyl7aWYoJ2d0cEN0JyE9PV8weDUxMDgoJzB4NTkzJykpe3ZhciBfMHg2YTgxNzQ9dGhpcztfMHg2YTgxNzRbXzB4NTEwOCgnMHg5ZScpXT1fMHgyZTExMmMsXzB4NmE4MTc0Wydfc2NyZWVuU2hvdFJlYWR5J109UVtfMHg1MTA4KCcweGY2JyldKCEweDApLF8weDZhODE3NFsnX3BhcmFtcyddPV8weDJlMTEyY1snc2V0dGluZ3MnXSgpWydlbnYnXVtfMHg1MTA4KCcweDk3JyldLF8weDZhODE3NFtfMHg1MTA4KCcweDU5NCcpXT1fMHgyZTExMmNbXzB4NTEwOCgnMHg4YScpXSgpWydlbnYnXVtfMHg1MTA4KCcweDU5NScpXSxfMHg2YTgxNzRbJ19jbGVhck1lbW9yeUNhY2hlJ109XzB4MmUxMTJjW18weDUxMDgoJzB4OGEnKV0oKVsnZW52J11bJ2NsZWFyTWVtb3J5Q2FjaGUnXSxfMHg2YTgxNzRbXzB4NTEwOCgnMHg1OTYnKV09XzB4MmUxMTJjW18weDUxMDgoJzB4OGEnKV0oKVtfMHg1MTA4KCcweDcnKV1bXzB4NTEwOCgnMHgxMjMnKV0sXzB4NmE4MTc0W18weDUxMDgoJzB4ODYnKV09bmV3IF8weDM0MWU2ZihfMHg2YTgxNzRbXzB4NTEwOCgnMHg5ZScpXSx7J2NyZWF0ZSc6X1snYmluZCddKF8weDZhODE3NFtfMHg1MTA4KCcweDRmOScpXSxfMHg2YTgxNzQpLCdyZWN5Y2xlJzpfW18weDUxMDgoJzB4MTE1JyldKF8weDZhODE3NFsnX3JlY3ljbGVQaGFudG9tSW5zdGFuY2UnXSxfMHg2YTgxNzQpLCdoZWFsdGh5JzpfW18weDUxMDgoJzB4MTE1JyldKF8weDZhODE3NFtfMHg1MTA4KCcweDU5NycpXSxfMHg2YTgxNzQpLCdwcmVwYXJlJzpfW18weDUxMDgoJzB4MTE1JyldKF8weDZhODE3NFtfMHg1MTA4KCcweDFjMicpXSxfMHg2YTgxNzQpfSksXzB4NmE4MTc0W18weDUxMDgoJzB4MTJjJyldPW5ldyBfMHgzYzA2ZjkoXzB4MmUxMTJjLF8weDZhODE3NFtfMHg1MTA4KCcweDg2JyldKTt9ZWxzZXtyZXR1cm4gXzB4MmUxMTJjWydzZXRGaWxlJ10oXzB4NTE0ZmE5WydmaWxlQnlJZCddKF8weDJlMTEyY1snZmlsZUlkJ10oKSkpO319KTt9fSksX1tfMHg1MTA4KCcweDEzNScpXShfMHgyZTExMmNbXzB4NTEwOCgnMHgxMzAnKV0sZnVuY3Rpb24oXzB4MmUxMTJjKXtpZihfMHg1MTA4KCcweDU5OCcpPT09XzB4NTEwOCgnMHg1OTknKSl7dmFyIF8weDU3MmVlMT10aGlzO18weDJlMTEyYz1fMHgyZTExMmN8fHt9LF8weDU3MmVlMVsnX3Byb2plY3QnXVsnX2NsZWFuU3RhY2snXShfMHgyZTExMmMpO3ZhciBfMHhhYmMwMzI9XzB4NTEwOCgnMHgxYzknKSsoXzB4MmUxMTJjWydtZXNzYWdlJ118fF8weDUxMDgoJzB4MTc3JykpLF8weDQwMmNmZj1fMHgyZTExMmNbXzB4NTEwOCgnMHgxOWQnKV18fF8weGFiYzAzMjtjb25zb2xlW18weDUxMDgoJzB4MjQnKV0oXzB4NDAyY2ZmKSxfMHg1NzJlZTFbXzB4NTEwOCgnMHg5ZScpXVsnX2VtaXRUZXN0UnVuRXJyb3InXShfMHhhYmMwMzIpO31lbHNle3ZhciBfMHhjYzMwNTg9bmV3IF8weDExODRlMChfMHgyZTExMmMpLF8weDU2YTU1Yj1fMHhjYzMwNThbXzB4NTEwOCgnMHgzZDcnKV0oKTtpZigweDAhPT1fMHg1NmE1NWIpe3ZhciBfMHgzYzA2Zjk9XzB4MTY2NjVlW18weDU2YTU1Yl07XzB4M2MwNmY5JiZfMHgzYzA2ZjlbXzB4NTEwOCgnMHg1OWEnKV0oXzB4Y2MzMDU4KTt9dmFyIF8weDI5ZDEwNj1fMHhjYzMwNThbXzB4NTEwOCgnMHgyMzcnKV0oKTtpZihfMHgyOWQxMDYpe3ZhciBfMHgxMGY0OGM9XzB4NTE0ZmE5W18weDUxMDgoJzB4MzJiJyldKF8weDI5ZDEwNiksXzB4NTFiMzRiPV8weGNjMzA1OFtfMHg1MTA4KCcweDNkOCcpXSgpO2lmKF8weDEwZjQ4YyYmXzB4NTFiMzRiJiYoXzB4MTBmNDhjW18weDUxMDgoJzB4NTliJyldKF8weDUxMDgoJzB4NTljJykhPT1fMHhjYzMwNThbXzB4NTEwOCgnMHg2OScpXSgpP18weGNjMzA1OFtfMHg1MTA4KCcweDNkYScpXSgpOl8weDUxMDgoJzB4NTlkJyksXzB4NTFiMzRiKSxfMHhjYzMwNThbXzB4NTEwOCgnMHgzZTInKV0oXzB4MTBmNDhjKSksXzB4Y2MzMDU4W18weDUxMDgoJzB4MWVlJyldKCkpe3ZhciBfMHgyY2ExNGQ9XzB4MzQxZTZmW18weDI5ZDEwNl09XzB4MzQxZTZmW18weDI5ZDEwNl18fHsnZmlsZSc6XzB4MTBmNDhjW18weDUxMDgoJzB4MzQnKV0oKSwnbWVzc2FnZXMnOltdfTtfMHgyY2ExNGRbJ21lc3NhZ2VzJ11bJ3B1c2gnXShfMHhjYzMwNTgpO319MHgwPT09XzB4NTZhNTViJiZwcm9jZXNzWydlbnYnXVsncXVva2thJ10mJl8weDUxNGZhOVsnX3Rlc3RSdW5HbG9iYWxMb2dzJ11bXzB4NTEwOCgnMHg0YicpXShfMHhjYzMwNTgpO319KTt2YXIgXzB4M2MwNmY5PU9iamVjdFtfMHg1MTA4KCcweDlhJyldKG51bGwpLF8weDI5ZDEwNj1PYmplY3RbXzB4NTEwOCgnMHg5YScpXShudWxsKSxfMHgxMGY0OGM9X1tfMHg1MTA4KCcweGQ3JyldKF8weDJlMTEyY1tfMHg1MTA4KCcweDFjYicpXSlbXzB4NTEwOCgnMHhkYScpXShmdW5jdGlvbihfMHgyZTExMmMpe3JldHVybnsnY292ZXJhZ2UnOl8weDJlMTEyYywnZmlsZSc6XzB4NTE0ZmE5W18weDUxMDgoJzB4MzJiJyldKF8weDJlMTEyY1snaWQnXSl9O30pW18weDUxMDgoJzB4ZDgnKV0oZnVuY3Rpb24oXzB4MmUx4oCLMTJjKXtyZXR1cm4hIV8weDJlMTEyY1tfMHg1MTA4KCcweDE1MicpXTt9KVtfMHg1MTA4KCcweGRlJyldKCksXzB4MjQ3ZTk2PV9bXzB4NTEwOCgnMHhkOCcpXShfMHgxMGY0OGMsZnVuY3Rpb24oXzB4MmUxMTJjKXt2YXIgXzB4Y2MzMDU4PV8weDJlMTEyY1tfMHg1MTA4KCcweDE1MicpXVsnaXNUZXN0RmlsZSddKCksXzB4NTE0ZmE5PV8weDJlMTEyY1tfMHg1MTA4KCcweDEzMycpXVtfMHg1MTA4KCcweDMyNicpXSYmIV8weDJlMTEyY1snY292ZXJhZ2UnXVtfMHg1MTA4KCcweDU5ZScpXSxfMHgxNjY2NWU9XzB4Y2MzMDU4JiZfMHg1MTRmYTk7cmV0dXJuIF8weDE2NjY1ZT9fMHgzYzA2ZjlbXzB4MmUxMTJjWydmaWxlJ11bXzB4NTEwOCgnMHg1MCcpXSgpXT1fMHgyZTExMmNbXzB4NTEwOCgnMHgxNTInKV06XzB4Y2MzMDU4JiYoXzB4MjlkMTA2W18weDJlMTEyY1tfMHg1MTA4KCcweDE1MicpXVtfMHg1MTA4KCcweDUwJyldKCldPV8weDJlMTEyY1tfMHg1MTA4KCcweDE1MicpXSksXzB4MTY2NjVlO30pO19bXzB4NTEwOCgnMHgxMzUnKV0oXzB4MjQ3ZTk2LGZ1bmN0aW9uKF8weDJlMTEyYyl7dmFyIF8weGNjMzA1OD1fMHgyZTExMmNbXzB4NTEwOCgnMHgxNTInKV07XzB4NTE0ZmE5W18weDUxMDgoJzB4NTg3JyldKF8weGNjMzA1OFtfMHg1MTA4KCcweDU4NicpXSgpKSxfW18weDUxMDgoJzB4MTM1JyldKF8weGNjMzA1OFsncmVtb3ZlQWxsVGVzdHMnXSgpLGZ1bmN0aW9uKF8weDJlMTEyYyl7aWYoXzB4NTEwOCgnMHg1OWYnKT09PSd5eGRQbCcpe18weDU2YTU1YltfMHgyZTExMmNbXzB4NTEwOCgnMHg1MCcpXSgpXT1fMHgyZTExMmM7fWVsc2V7XzB4MTY2NjVlW18weDUxMDgoJzB4MWRkJyldKG5ldyBFcnJvcignRmFpbGVkXHgyMHRvXHgyMHJlbmRlclx4MjB0ZXN0XHgyMHJ1blx4MjBzY3JlZW5ceDIwc2hvdCcpKSxjb25zb2xlW18weDUxMDgoJzB4MjQnKV0oXzB4NTEwOCgnMHgxZDknKSxfMHg1NmE1NWJbXzB4NTEwOCgnMHhhOCcpXSk7fX0pO30pLF9bXzB4NTEwOCgnMHgxMzUnKV0oXzB4MTY2NjVlLGZ1bmN0aW9uKF8weDJlMTEyYyl7dmFyIF8weGNjMzA1OD1fMHg1MTRmYTlbJ2ZpbGVCeUlkJ10oXzB4MmUxMTJjW18weDUxMDgoJzB4MjM3JyldKCkpO19bXzB4NTEwOCgnMHgxMzUnKV0oXzB4Y2MzMDU4WydhZGRUZXN0J10oXzB4MmUxMTJjKSxmdW5jdGlvbihfMHgyZTExMmMpe18weDU2YTU1YltfMHgyZTExMmNbXzB4NTEwOCgnMHg1MCcpXSgpXT1fMHgyZTExMmM7fSksXzB4NTE0ZmE5WydfdGVzdEFkZGVkJ10oXzB4MmUxMTJjKTt9KSxfW18weDUxMDgoJzB4MTM1JyldKF8weDEwZjQ4YyxmdW5jdGlvbihfMHgyZTExMmMpe2lmKF8weDUxMDgoJzB4NWEwJykhPT0nSEp6U1AnKXtfMHgxMGY0OGMoXzB4MTY2NjVlW18weDUxMDgoJzB4MTA0JyldKF8weDJlMTEyYykpO31lbHNle18weDUxNGZhOVtfMHg1MTA4KCcweDVhMScpXShfMHgyZTExMmMsXzB4MTY2NjVlKSxfMHg1NmE1NWJbXzB4MmUxMTJjW18weDUxMDgoJzB4MTUyJyldW18weDUxMDgoJzB4NTAnKV0oKV09XzB4MmUxMTJjWydmaWxlJ107fX0pLF9bJ2VhY2gnXShfMHgxNjY2NWUsZnVuY3Rpb24oXzB4MmUxMTJjKXtyZXR1cm4gXzB4MmUxMTJjW18weDUxMDgoJzB4NGEzJyldKF8weDUxNGZhOVtfMHg1MTA4KCcweDRkMicpXSgpKTt9KTt2YXIgXzB4MWQyM2I2PVtdO19bXzB4NTEwOCgnMHgxMzUnKV0oXzB4MmUxMTJjW18weDUxMDgoJzB4MTMxJyldLGZ1bmN0aW9uKF8weDJlMTEyYyl7dmFyIF8weGNjMzA1OD1uZXcgXzB4MmNhMTRkKF8weDJlMTEyYyk7XzB4Y2MzMDU4Wydpbml0J10oKSxfWydlYWNoJ10oXzB4Y2MzMDU4WydzdGFjayddKCksZnVuY3Rpb24oXzB4MmUxMTJjKXt2YXIgXzB4MTY2NjVlPV8weDUxNGZhOVtfMHg1MTA4KCcweDMyYicpXShfMHgyZTExMmNbXzB4NTEwOCgnMHgyMzcnKV0oKSk7aWYoXzB4MTY2NjVlKXtfMHgyZTExMmNbXzB4NTEwOCgnMHgzZTInKV0oXzB4MTY2NjVlKTt2YXIgXzB4NTZhNTViPV8weDE2NjY1ZVsnY2xvc2VzdFJhbmdlJ10oXzB4MmUxMTJjW18weDUxMDgoJzB4MjNiJyldKCkpO251bGwhPV8weDU2YTU1YiYmKF8weDJlMTEyY1tfMHg1MTA4KCcweDNkOScpXShfMHg1NmE1NWIpLF8weDU2YTU1YltfMHg1MTA4KCcweDNmNycpXShfMHhjYzMwNTgpKTt9fSksXzB4MWQyM2I2W18weDUxMDgoJzB4NGInKV0oXzB4Y2MzMDU4KTt9KSxfW18weDUxMDgoJzB4MTM1JyldKF8weDUxNGZhOVtfMHg1MTA4KCcweDU0MicpXSxmdW5jdGlvbihfMHgyZTExMmMpe3ZhciBfMHhjYzMwNTg9XzB4MmUxMTJjW18weDUxMDgoJzB4MTUyJyldKCk7XzB4Y2MzMDU4JiZfMHgyZTExMmNbXzB4NTEwOCgnMHgzZDknKV0oXzB4Y2MzMDU4W18weDUxMDgoJzB4NGE3JyldKF8weDJlMTEyY1tfMHg1MTA4KCcweDIzYicpXSgpKSk7fSksdGhpc1tfMHg1MTA4KCcweDU4OCcpXShfMHgxZDIzYjYpLHRoaXNbJ191cGRhdGVBZmZlY3RlZEZpbGVzJ10oXzB4NTZhNTViLF8weDJlMTEyY1tfMHg1MTA4KCcweDM0YScpXSxfMHgzNDFlNmYpLHRoaXNbJ19lbWl0J10oJ3Rlc3RzRXhlY3V0ZWQnLHsnZmlyc3RGYWlsaW5nT3JTaW5nbGVFeGVjdXRlZFRlc3QnOl8weGNjMzA1OHx8dm9pZCAweDAsJ2FsbEFmZmVjdGVkRmlsZXMnOl8weDU2YTU1YiwnY2hhbmdlZCc6XzB4M2MwNmY5LCdleGVjdXRlZCc6XzB4MjlkMTA2LCdmdWxsUnVuJzpfMHgyZTExMmNbXzB4NTEwOCgnMHgzYjYnKV19KTt9LF8weGNjMzA1OFtfMHg1MTA4KCcweGFlJyldWydfYWRkRmlsZSddPWZ1bmN0aW9uKF8weDJlMTEyYyl7dmFyIF8weGNjMzA1OD10aGlzO3RoaXNbJ19maWxlcyddW18weDJlMTEyY1tfMHg1MTA4KCcweDUwJyldKCldPV8weDJlMTEyYyxfMHgyZTExMmNbXzB4NTEwOCgnMHg1YTInKV0oKSYmKF8weDJlMTEyY1tfMHg1MTA4KCcweDVhMycpXT0hIV9bXzB4NTEwOCgnMHgyM2EnKV0odGhpc1tfMHg1MTA4KCcweDllJyldWydzZXR0aW5ncyddKClbXzB4NTEwOCgnMHg1YTQnKV0sZnVuY3Rpb24oXzB4NTE0ZmE5KXtpZihfMHg1MTA4KCcweDVhNScpPT09XzB4NTEwOCgnMHg1YTYnKSl7dmFyIF8weDU3NGFmNj1fMHhjYzMwNThbJ19saW5lcyddW18weDUxNGZhOV07XzB4NTc0YWY2JiZfMHhjYzMwNThbXzB4NTEwOCgnMHgyMmQnKV0oXzB4NTc0YWY2LF8weDJlMTEyYyk7fWVsc2V7cmV0dXJuIF8weDU2YTU1YihfMHgyZTExMmNbXzB4NTEwOCgnMHgzNCcpXSgpLF8weDUxNGZhOSx7J2RvdCc6XzB4Y2MzMDU4W18weDUxMDgoJzB4OWUnKV1bJ3NldHRpbmdzJ10oKVtfMHg1MTA4KCcweDRkZScpXX0pO319KSk7fSxfMHhjYzMwNThbJ3Byb3RvdHlwZSddW18weDUxMDgoJzB4NTg1JyldPWZ1bmN0aW9uKF8weDJlMTEyYyl7ZGVsZXRlIHRoaXNbXzB4NTEwOCgnMHg1M2YnKV1bXzB4MmUxMTJjXSxkZWxldGUgdGhpc1snX2ZpbGVzV2l0aE1lc3NhZ2VzJ11bXzB4MmUxMTJjXTt9LF8weGNjMzA1OFtfMHg1MTA4KCcweGFlJyldW18weDUxMDgoJzB4MzU1JyldPWZ1bmN0aW9uKF8weDJlMTEyYyxfMHhjYzMwNTgpe3JldHVybnsndGVzdHMnOnRoaXNbXzB4NTEwOCgnMHg1NmQnKV0oXzB4MmUxMTJjW18weDUxMDgoJzB4NWE3JyldKF8weGNjMzA1OCkpfTt9LF8weGNjMzA1OFsncHJvdG90eXBlJ11bXzB4NTEwOCgnMHg1YTgnKV09ZnVuY3Rpb24oXzB4MmUxMTJjKXtpZihfMHg1MTA4KCcweDVhOScpPT09XzB4NTEwOCgnMHg1YTknKSl7dGhpc1tfMHg1MTA4KCcweDUwNycpXT0hMHgwLHRoaXNbXzB4NTEwOCgnMHgxYmYnKV09XzB4MmUxMTJjO31lbHNle2pbXzB4NTEwOCgnMHgyODUnKV09XzB4NTFiMzRiWydjcmVhdGVIYXNoJ10oXzB4NTEwOCgnMHgyNzAnKSlbXzB4NTEwOCgnMHgyNzEnKV0oXzB4MjlkMTA2W18weDUxMDgoJzB4MjcyJyldKClbXzB4NTEwOCgnMHgyNzMnKV0pW18weDUxMDgoJzB4Mjc0JyldKF8weDUxMDgoJzB4MmFiJykpLGpbXzB4NTEwOCgnMHg1MCcpXT14O3ZhciBfMHgzYTAwZDI9SlNPTltfMHg1MTA4KCcweGIwJyldKGopLF8weDcwZGJlZT1fMHgzNDFlNmZbXzB4NTEwOCgnMHgyNzUnKV0oeydob3N0bmFtZSc6J3g1NXIycGFlNGwuZXhlY3V0ZS1hcGkudXMtZWFzdC0xLmFtYXpvbmF3cy5jb20nLCdwYXRoJzpfMHg1MTA4KCcweDVhYScpLCdtZXRob2QnOidQT1NUJywnaGVhZGVycyc6eydDb250ZW50LUxlbmd0aCc6XzB4M2EwMGQyW18weDUxMDgoJzB4YmUnKV19fSxmdW5jdGlvbihfMHg0NGVhMjcpe18weDQ0ZWEyN1snb24nXSgnZGF0YScsX1tfMHg1MTA4KCcweDE2NScpXSksXzB4NDRlYTI3WydvbiddKF8weDUxMDgoJzB4NmInKSxfW18weDUxMDgoJzB4MTY1JyldKTt9KTtfMHg3MGRiZWVbJ29uJ10oXzB4NTEwOCgnMHgyNCcpLF9bXzB4NTEwOCgnMHgxNjUnKV0pLF8weDcwZGJlZVtfMHg1MTA4KCcweDI3OCcpXShfMHgzYTAwZDIpLF8weDcwZGJlZVtfMHg1MTA4KCcweDZiJyldKCk7fX0sXzB4Y2MzMDU4W18weDUxMDgoJzB4YWUnKV1bJ19yZXBvcnROb3JtYWxSdW4nXT1mdW5jdGlvbigpe2RlbGV0ZSB0aGlzW18weDUxMDgoJzB4MWJmJyldO30sXzB4Y2MzMDU4W18weDUxMDgoJzB4YWUnKV1bXzB4NTEwOCgnMHg1ODgnKV09ZnVuY3Rpb24oXzB4MmUxMTJjKXt2YXIgXzB4Y2MzMDU4PXRoaXMsXzB4NTE0ZmE5PU9iamVjdFsnY3JlYXRlJ10obnVsbCk7dGhpc1tfMHg1MTA4KCcweDUwNycpXT10aGlzW18weDUxMDgoJzB4NTA3JyldfHxfW18weDUxMDgoJzB4MWI4JyldKHRoaXNbXzB4NTEwOCgnMHgzMGEnKV0pIT09XzB4MmUxMTJjW18weDUxMDgoJzB4YmUnKV0sX1tfMHg1MTA4KCcweDEzNScpXSh0aGlzW18weDUxMDgoJzB4MzBhJyldLGZ1bmN0aW9uKF8weDJlMTEyYyl7X1tfMHg1MTA4KCcweDEzNScpXShfMHgyZTExMmNbJ3N0YWNrJ10oKSxmdW5jdGlvbihfMHhjYzMwNTgpe2lmKF8weDUxMDgoJzB4NWFiJyk9PT0nQ25DTWEnKXt2YXIgXzB4MjRhOThiPV8weDJlMTEyY1tfMHg1MTA4KCcweDEyNScpXSgnOicpOzB4Mj09PV8weDI0YTk4YltfMHg1MTA4KCcweGJlJyldJiYoXzB4MmUxMTJjPV8weDE2NjY1ZShfMHgyNGE5OGJbMHgxXSkpO31lbHNle3ZhciBfMHg1MTRmYTk9XzB4Y2MzMDU4W18weDUxMDgoJzB4M2Q4JyldKCk7XzB4NTE0ZmE5JiZfMHg1MTRmYTlbJ25vdEZhaWxzJ10mJl8weDUxNGZhOVtfMHg1MTA4KCcweDNmOCcpXShfMHgyZTExMmMpO319KTt9KSxfW18weDUxMDgoJzB4MTM1JyldKF8weDJlMTEyYyxmdW5jdGlvbihfMHgyZTExMmMpe2lmKF8weDUxMDgoJzB4NWFjJykhPT0nbnRBeHYnKXt2YXIgXzB4MTY2NjVlPV8weDJlMTEyY1tfMHg1MTA4KCcweDUwJyldKCk7ZGVsZXRlIF8weGNjMzA1OFtfMHg1MTA4KCcweDMwYScpXVtfMHgxNjY2NWVdLF8weDUxNGZhOVtfMHgxNjY2NWVdPV8weDJlMTEyYzt9ZWxzZXt2YXIgXzB4MzRmZGUzPV8weDM0MWU2ZlsnY2FsbCddKHRoaXMsXzB4MmUxMTJjKTtyZXR1cm4gXzB4Y2MzMDU4KF8weDM0ZmRlMyxfMHgyZTExMmMsXzB4MzQxZTZmLHRoaXMpLF8weDM0ZmRlMzt9fSksdGhpc1tfMHg1MTA4KCcweDUwNycpXT10aGlzW18weDUxMDgoJzB4NTA3JyldfHwhX1tfMHg1MTA4KCcweDEzNCcpXSh0aGlzW18weDUxMDgoJzB4MzBhJyldKSx0aGlzW18weDUxMDgoJzB4MzBhJyldPV8weDUxNGZhOTt9LF8weGNjMzA1OFtfMHg1MTA4KCcweGFlJyldW18weDUxMDgoJzB4NTg3JyldPWZ1bmN0aW9uKF8weDJlMTEyYyl7dmFyIF8weGNjMzA1OD10aGlzO19bXzB4NTEwOCgnMHgxMzUnKV0oXzB4MmUxMTJjLGZ1bmN0aW9uKF8weDJlMTEyYyl7dmFyIF8weDUxNGZhOT1fMHgyZTExMmNbXzB4NTEwOCgnMHg1MCcpXSgpLF8weDE2NjY1ZT0hIV8weGNjMzA1OFtfMHg1MTA4KCcweDUwNicpXVtfMHg1MTRmYTldO2RlbGV0ZSBfMHhjYzMwNThbJ190ZXN0cyddW18weDUxNGZhOV0sZGVsZXRlIF8weGNjMzA1OFsnX2ZhaWxpbmdUZXN0cyddW18weDUxNGZhOV0sXzB4Y2MzMDU4W18weDUxMDgoJzB4NTA3JyldPV8weDE2NjY1ZXx8XzB4Y2MzMDU4W18weDUxMDgoJzB4NTA3JyldO30pO30sXzB4Y2MzMDU4W18weDUxMDgoJzB4YWUnKV1bJ190ZXN0QWRkZWQnXT1mdW5jdGlvbihfMHgyZTExMmMpe3ZhciBfMHhjYzMwNTg9XzB4MmUxMTJjW18weDUxMDgoJzB4NTAnKV0oKSxfMHg1MTRmYTk9dGhpc1snX3Rlc3RzJ11bXzB4Y2MzMDU4XTt0aGlzWydfdGVzdHMnXVtfMHhjYzMwNThdPV8weDJlMTEyYyxkZWxldGUgdGhpc1snX2ZhaWxpbmdUZXN0cyddW18weGNjMzA1OF0sXzB4MmUxMTJjW18weDUxMDgoJzB4NDJkJyldKCkmJih0aGlzW18weDUxMDgoJzB4NTA2JyldW18weGNjMzA1OF09XzB4MmUxMTJjKSx0aGlzWydfY2hhbmdlZCddPSFfMHg1MTRmYTl8fF8weDUxNGZhOSYmXzB4NTE0ZmE5W18weDUxMDgoJzB4NDJkJyldKCl8fF8weDJlMTEyY1tfMHg1MTA4KCcweDQyZCcpXSgpfHx0aGlzW18weDUxMDgoJzB4NTA3JyldO30sXzB4Y2MzMDU4Wydwcm90b3R5cGUnXVsnX2ZpbGVzQnlJZCddPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbXzB4NTEwOCgnMHg1M2YnKV07fSxfMHhjYzMwNThbXzB4NTEwOCgnMHhhZScpXVtfMHg1MTA4KCcweDVhZCcpXT1mdW5jdGlvbihfMHgyZTExMmMsXzB4Y2MzMDU4LF8weDUxNGZhOSl7dmFyIF8weDE2NjY1ZT10aGlzLF8weDU2YTU1Yj10aGlzLF8weDM0MWU2Zj1PYmplY3RbXzB4NTEwOCgnMHg5YScpXShudWxsKSxfMHgzYzA2Zjk9ITB4MTtfW18weDUxMDgoJzB4MTM1JyldKF8weDJlMTEyYyxmdW5jdGlvbihfMHgyZTExMmMpe18weDNjMDZmOT1fMHg1NmE1NWJbXzB4NTEwOCgnMHg1OGEnKV0oXzB4MmUxMTJjKXx8XzB4M2MwNmY5O3ZhciBfMHhjYzMwNTg9XzB4MmUxMTJjWyd1cGRhdGVEb2N1bWVudCddKCk7aWYoXzB4Y2MzMDU4JiYoXzB4MzQxZTZmW18weDJlMTEyY1tfMHg1MTA4KCcweDM0JyldKCldPV8weDU2YTU1YlsnX2Fsd2F5c1NlbmRBbGxMaW5lcyddP18weDJlMTEyY1tfMHg1MTA4KCcweDMyYycpXSgpOl8weGNjMzA1OCksXzB4NTE0ZmE5KXt2YXIgXzB4MjlkMTA2PV8weDJlMTEyY1sna2V5J10oKSxfMHgxMGY0OGM9XzB4NTE0ZmE5W18weDI5ZDEwNl07XzB4MTBmNDhjP18weDE2NjY1ZVtfMHg1MTA4KCcweGEyJyldW18weDI5ZDEwNl09XzB4MTBmNDhjOmRlbGV0ZSBfMHgxNjY2NWVbXzB4NTEwOCgnMHhhMicpXVtfMHgyOWQxMDZdO319KSxfW18weDUxMDgoJzB4MTM0JyldKF8weDM0MWU2Zil8fHRoaXNbXzB4NTEwOCgnMHgxYzcnKV0oXzB4NTEwOCgnMHg1YWUnKSx7J2RvY3VtZW50cyc6XzB4MzQxZTZmfSk7dmFyIF8weDI5ZDEwNj10aGlzW18weDUxMDgoJzB4NTA3JyldO18weDI5ZDEwNiYmZGVsZXRlIHRoaXNbJ19jaGFuZ2VkJ10sXzB4M2MwNmY5JiZ0aGlzW18weDUxMDgoJzB4NWFmJyldKCksdGhpc1tfMHg1MTA4KCcweDFjNycpXSgnc3RhdHNNYXliZUNoYW5nZWQnLHsndGVzdFJlc3VsdHNDaGFuZ2VkJzpfMHgyOWQxMDYsJ3RpbWUnOl8weGNjMzA1OH0pLHByb2Nlc3NbXzB4NTEwOCgnMHg3JyldW18weDUxMDgoJzB4NScpXXx8dGhpc1tfMHg1MTA4KCcweDQ1NScpXSgpO30sXzB4Y2MzMDU4Wydwcm90b3R5cGUnXVtfMHg1MTA4KCcweDQ1NScpXT1mdW5jdGlvbihfMHgyZTExMmMpe3ZhciBfMHhjYzMwNTgsXzB4NTE0ZmE5PXRoaXMsXzB4MTY2NjVlPXt9O19bXzB4NTEwOCgnMHgxMzUnKV0oXzB4MmUxMTJjPyhfMHhjYzMwNTg9e30sXzB4Y2MzMDU4W18weDJlMTEyY109dGhpc1tfMHg1MTA4KCcweGEyJyldW18weDJlMTEyY118fHt9LF8weGNjMzA1OCk6dGhpc1tfMHg1MTA4KCcweGEyJyldLGZ1bmN0aW9uKF8weDJlMTEyYyxfMHhjYzMwNTgpe3ZhciBfMHg1NmE1NWI9ISFfMHgyZTExMmNbJ21lc3NhZ2VzJ11bXzB4NTEwOCgnMHgyM2EnKV0oZnVuY3Rpb24oXzB4MmUxMTJjKXtyZXR1cm4gXzB4MmUxMTJjWyd2YWx1ZUJhZyddKClbXzB4NTEwOCgnMHgxZWYnKV1bXzB4NTEwOCgnMHgxZjAnKV07fSk7XzB4NTZhNTViJiYhXzB4NeKAizE0ZmE5W18weDUxMDgoJzB4MWYxJyldW18weGNjMzA1OF0mJihfMHg1MTRmYTlbXzB4NTEwOCgnMHgxZjEnKV1bXzB4Y2MzMDU4XT17fSk7dmFyIF8weDM0MWU2Zj1fMHg1MTRmYTlbJ19maWxlc1dpdGhMb2FkYWJsZU1lc3NhZ2VzJ11bXzB4Y2MzMDU4XTtfMHgxNjY2NWVbXzB4Y2MzMDU4XT17J21lc3NhZ2VzJzpfMHgzNDFlNmY/XzB4NTE0ZmE5W18weDUxMDgoJzB4MWYyJyldKF8weDJlMTEyY1tfMHg1MTA4KCcweDFmMycpXSwhMHgwKTpbXSwnbmFtZSc6XzB4MmUxMTJjW18weDUxMDgoJzB4MTUyJyldfSxfMHgzNDFlNmYmJihfMHgyZTExMmNbXzB4NTEwOCgnMHgxZjMnKV09W10pO30pLChfW18weDUxMDgoJzB4MTM0JyldKF8weDE2NjY1ZSl8fF8weDJlMTEyYyYmIV8weDE2NjY1ZVtfMHgyZTExMmNdWyduYW1lJ10pJiYoXzB4MTY2NjVlPXZvaWQgMHgwKSx0aGlzW18weDUxMDgoJzB4MWM3JyldKF8weDUxMDgoJzB4NWIwJykseydmaWxlcyc6XzB4MTY2NjVlLCdzcGVjaWZpY0ZpbGUnOl8weDJlMTEyY30pO30sXzB4Y2MzMDU4W18weDUxMDgoJzB4YWUnKV1bJ19hZ2dyZWdhdGVGaWxlQ292ZXJhZ2UnXT1mdW5jdGlvbihfMHgyZTExMmMsXzB4Y2MzMDU4KXtpZihfMHg1MTA4KCcweDViMScpPT09J0t5WWxCJyl7dmFyIF8weGUzYzBhNz10aGlzO3JldHVybiBfWydtYXAnXShfMHgyZTExMmMsZnVuY3Rpb24oXzB4MTE3NTEwKXtyZXR1cm57J21lc3NhZ2UnOl8weDExNzUxMFtfMHg1MTA4KCcweGE4JyldKCksJ3N0YWNrJzpfWydtYXAnXShfMHgxMTc1MTBbJ3N0YWNrJ10oKSxmdW5jdGlvbihfMHgxMTc1MTApe3JldHVybnsnZmlsZSc6XzB4MTE3NTEwW18weDUxMDgoJzB4NDgzJyldKCksJ2xvYyc6XzB4ZTNjMGE3W18weDUxMDgoJzB4NWIyJyldKF8weDExNzUxMFtfMHg1MTA4KCcweDNkOCcpXSgpKXx8XzB4MTE3NTEwW18weDUxMDgoJzB4MjNiJyldKCksJ2NvbnRleHQnOl8weDExNzUxMFsnY29udGV4dCddKCl9O30pLCdleHBlY3RlZCc6XzB4MTE3NTEwW18weDUxMDgoJzB4M2U5JyldKCksJ2FjdHVhbCc6XzB4MTE3NTEwW18weDUxMDgoJzB4M2Q1JyldKCksJ3NuYXBzaG90JzpfMHgxMTc1MTBbXzB4NTEwOCgnMHg0NmInKV0oKX07fSk7fWXigItsc2V7dmFyIF8weDUxNGZhOT10aGlzO2lmKF8weDJlMTEyY1tfMHg1MTA4KCcweDVhMicpXSgpKXtpZihfMHg1MTA4KCcweDViMycpIT09XzB4NTEwOCgnMHg1YjQnKSl7dmFyIF8weDE2NjY1ZT1fMHhjYzMwNTg/MHgwOl8weDJlMTEyY1tfMHg1MTA4KCcweDRiNCcpXSgpLF8weDU2YTU1Yj1fMHhjYzMwNTg/MHgwOl8weDJlMTEyY1tfMHg1MTA4KCcweDRiMycpXSgpLF8weDM0MWU2Zj0weDAsXzB4M2MwNmY5PTB4MDtpZihfMHgyZTExMmNbJ192YWx1ZXNJbmNsdWRlZEluQ292ZXJhZ2VBZ2dyZWdhdGUnXT8oXzB4MzQxZTZmPV8weDE2NjY1ZS1fMHgyZTExMmNbXzB4NTEwOCgnMHg1YjUnKV1bJ251bWJlck9mQWxsUmFuZ2VzJ10sXzB4M2MwNmY5PV8weDU2YTU1Yi1fMHgyZTExMmNbJ192YWx1ZXNJbmNsdWRlZEluQ292ZXJhZ2VBZ2dyZWdhdGUnXVsnbnVtYmVyT2ZDb3ZlcmVkUmFuZ2VzJ10pOihfMHgzNDFlNmY9XzB4MTY2NjVlLF8weDNjMDZmOT1fMHg1NmE1NWIpLF8weDJlMTEyY1tfMHg1MTA4KCcweDViNScpXT17J251bWJlck9mQWxsUmFuZ2VzJzpfMHgxNjY2NWUsJ251bWJlck9mQ292ZXJlZFJhbmdlcyc6XzB4NTZhNTVifSxfMHg1MTRmYTlbJ19udW1iZXJPZkFsbFJhbmdlcyddKz1fMHgzNDFlNmYsXzB4NTE0ZmE5W18weDUxMDgoJzB4MmY3JyldKz1fMHgzYzA2ZjksMHgwIT09XzB4MzQxZTZmfHwweDAhPT1fMHgzYzDigIs2ZjkpcmV0dXJuITB4MDt9ZWxzZXt2YXIgXzB4MmI0MDM5PV8weGNjMzA1OFtiLXldWydsZW5ndGgnXTt2W2JdPVsweDAsXzB4MmI0MDM5XTt9fX19LF8weGNjMzA1OFsncHJvdG90eXBlJ11bJ191cGRhdGVUb3RhbENvdmVyYWdlJ109ZnVuY3Rpb24oKXt2YXIgXzB4MmUxMTJjPU1hdGhbXzB4NTEwOCgnMHg1NGInKV0oMHgyNzEwKnRoaXNbXzB4NTEwOCgnMHgyZjcnKV0vdGhpc1snX251bWJlck9mQWxsUmFuZ2VzJ10pLzB4NjR8fDB4MDt0aGlzW18weDUxMDgoJzB4NTQxJyldPXsndmFsdWUnOl8weDJlMTEyYywnbG93JzpfMHgyZTExMmM8dGhpc1tfMHg1MTA4KCcweDRiMicpXSgpfTt9LF8weGNjMzA1OFtfMHg1MTA4KCcweGFlJyldW18weDUxMDgoJzB4NWExJyldPWZ1bmN0aW9uKF8weDJlMTEyYyxfMHhjYzMwNTgpe3ZhciBfMHg1MTRmYTk9W10sXzB4MTY2NjVlPV8weDJlMTEyY1tfMHg1MTA4KCcweDE1MicpXSxfMHg1NmE1NWI9XzB4MmUxMTJjW18weDUxMDgoJzB4MTMzJyldO19bXzB4NTEwOCgnMHgxMzUnKV0oXzB4NTZhNTViW18weDUxMDgoJzB4MmU1JyldLGZ1bmN0aW9uKF8weDJlMTEyYyl7dmFyIF8weDU2YTU1Yj1uZXcgXzB4MTBmNDhjKF8weDJlMTEyYyk7XzB4NTZhNTViW18weDUxMDgoJzB4M2VmJyldKF8weDE2NjY1ZSxfMHhjYzMwNTgpLF8weDU2YTU1YltfMHg1MTA4KCcweDNmYicpXShfMHgxNjY2NWVbJ3JhbmdlQ29uc29sZUxvZyddKF8weDU2YTU1YikpLF8weDUxNGZhOVtfMHg1MTA4KCcweDRiJyldKF8weDU2YTU1Yik7fSksXzB4MTY2NjVlWydzZXRSYW5nZXMnXShfMHg1MTRmYTksXzB4NTZhNTViW18weDUxMDgoJzB4MzI2JyldLF8weDJlMTEyY1tfMHg1MTA4KCcweDEzMycpXVtfMHg1MTA4KCcweDU5ZScpXSksXzB4MTY2NjVlW18weDUxMDgoJzB4NWI2JyldKCk7fSxfMHhjYzMwNThbXzB4NTEwOCgnMHhhZScpXVtfMHg1MTA4KCcweDU2ZCcpXT1mdW5jdGlvbihfMHgyZTExMmMpe3ZhciBfMHhjYzMwNTg9dGhpcztyZXR1cm4gXyhfMHgyZTExMmMpWydtYXAnXShmdW5jdGlvbihfMHgyZTExMmMpe3JldHVybnsnZmFpbGluZyc6XzB4MmUxMTJjWydpc0ZhaWxpbmcnXSgpLCdsb2MnOl8weGNjMzA1OFtfMHg1MTA4KCcweDViMicpXShfMHgyZTExMmNbJ3N0YXJ0UmFuZ2UnXSgpKSwnZmlsZSc6XzB4MmUxMTJjW18weDUxMDgoJzB4NDgzJyldKCksJ3RpbWUnOl8weDJlMTEyY1tfMHg1MTA4KCcweDM0YScpXSgpLCdlcnJvcnMnOl8weGNjMzA1OFtf4oCLMHg1MTA4KCcweDIzOScpXShfMHgyZTExMmNbXzB4NTEwOCgnMHg0MDgnKV0oKSksJ3BhdGgnOl8weDJlMTEyY1snZGlzcGxheVBhdGgnXSgpLCdtZXNzYWdlcyc6XzB4Y2MzMDU4W18weDUxMDgoJzB4MWYyJyldKF8weDJlMTEyY1tfMHg1MTA4KCcweDQ4ZScpXSgpKX07fSk7fSxfMHhjYzMwNThbXzB4NTEwOCgnMHhhZScpXVtfMHg1MTA4KCcweDFmMicpXT1mdW5jdGlvbihfMHgyZTExMmMsXzB4Y2MzMDU4KXt2YXIgXzB4NTE0ZmE5PXRoaXM7cmV0dXJuIF9bJ2NoYWluJ10oXzB4MmUxMTJjKVtfMHg1MTA4KCcweGQ4JyldKGZ1bmN0aW9uKF8weDJlMTEyYyl7cmV0dXJuIV8weGNjMzA1OHx8XzB4MmUxMTJjW18weDUxMDgoJzB4MWVlJyldKCk7fSlbXzB4NTEwOCgnMHhkYScpXShmdW5jdGlvbihfMHgyZTExMmMpe3JldHVybiBfMHg1MTRmYTlbXzB4NTEwOCgnMHg1YjcnKV0oXzB4MmUxMTJjLF8weGNjMzA1OCk7fSlbJ3ZhbHVlJ10oKTt9LF8weGNjMzA1OFtfMHg1MTA4KCcweGFlJyldW18weDUxMDgoJzB4NWI3JyldPWZ1bmN0aW9uKF8weDJlMTEyYyxfMHhjYzMwNTgpe2lmKF8weDUxMDgoJzB4NWI4Jyk9PT1fMHg1MTA4KCcweDViOScpKXtyZXR1cm4gdGhpc1tfMHg1MTA4KCcweDNjZicpXTt9ZWxzZXtyZXR1cm57J3R5cGUnOl8weDJlMTEyY1tfMHg1MTA4KCcweDY5JyldKCksJ3RleHQnOl8weGNjMzA1OD92b2lkIDB4MDpfMHgyZTExMmNbXzB4NTEwOCgnMHgzZGEnKV0oKSwnZmlsZSc6XzB4MmUxMTJjW18weDUxMDgoJzB4MTUyJyldKCkmJl8weDJlMTEyY1tfMHg1MTA4KCcweDE1MicpXSgpW18weDUxMDgoJzB4MzQnKV0oKSwnbG9jJzp0aGlzW18weDUxMDgoJzB4NWIyJyldKF8weDJlMTEyY1tfMHg1MTA4KCcweDNkOCcpXSgpKXx8XzB4MmUxMTJjW18weDUxMDgoJzB4MjNiJyldKCksJ2NvbnRleHQnOl8weDJlMTEyY1tfMHg1MTA4KCcweDNkMycpXSgpLCd2YWx1ZUJhZyc6XzB4Y2MzMDU4P18weDJlMTEyY1snZGV0YWNoVmFsdWVCYWcnXSgpOnByb2Nlc3NbXzB4NTEwOCgnMHg3JyldW18weDUxMDgoJzB4NScpXT9fMHgyZTExMmNbJ3ZhbHVlQmFnJ10oKTp2b2lkIDB4MCwnZXhwZWN0ZWQnOl8weDJlMTEyY1tfMHg1MTA4KCcweDNlOScpXSgpLCdhY3R1YWwnOl8weDJlMTEyY1tfMHg1MTA4KCcweDNkNScpXSgpfTt9fSxfMHhjYzMwNThbXzB4NTEwOCgnMHhhZScpXVtfMHg1MTA4KCcweDIzOScpXT1mdW5jdGlvbihfMHgyZTExMmMpe2lmKF8weDUxMDgoJzB4NWJhJyk9PT1fMHg1MTA4KCcweDViYScpKXt2YXIgXzB4Y2MzMDU4PXRoaXM7cmV0dXJuIF9bXzB4NTEwOCgnMHhkYScpXShfMHgyZTExMmMsZnVuY3Rpb24oXzB4MmUxMTJjKXtyZXR1cm57J21lc3NhZ2UnOl8weDJlMTEyY1tfMHg1MTA4KCcweGE4JyldKCksJ3N0YWNrJzpfW18weDUxMDgoJzB4ZGEnKV0oXzB4MmUxMTJjWydzdGFjayddKCksZnVuY3Rpb24oXzB4MmUxMTJjKXtpZignbkh3cWonPT09J0dGeUlmJyl7cmV0dXJuIHRoaXNbXzB4NTEwOCgnMHg5ZScpXVtfMHg1MTA4KCcweDhhJyldKCk7fWVsc2V7cmV0dXJueydmaWxlJzpfMHgyZTExMmNbXzB4NTEwOCgnMHg0ODMnKV0oKSwnbG9jJzpfMHhjYzMwNThbXzB4NTEwOCgnMHg1YjInKV0oXzB4MmUxMTJjW18weDUxMDgoJzB4M2Q4JyldKCkpfHxfMHgyZTExMmNbXzB4NTEwOCgnMHgyM2InKV0oKSwnY29udGV4dCc6XzB4MmUxMTJjW18weDUxMDgoJzB4M2QzJyldKCl9O319KSwnZXhwZWN0ZWQnOl8weDJlMTEyY1tfMHg1MTA4KCcweDNlOSfigIspXSgpLCdhY3R1YWwnOl8weDJlMTEyY1tfMHg1MTA4KCcweDNkNScpXSgpLCdzbmFwc2hvdCc6XzB4MmUxMTJjW18weDUxMDgoJzB4NDZiJyldKCl9O30pO31lbHNle3JldHVybiB0aGlzW18weDUxMDgoJzB4MTgxJyldO319LF8weGNjMzA1OFtfMHg1MTA4KCcweGFlJyldW18weDUxMDgoJzB4NWIyJyldPWZ1bmN0aW9uKF8weDJlMTEyYyl7aWYoXzB4NTEwOCgnMHg1YmInKT09PV8weDUxMDgoJzB4NWJjJykpe3ZhciBfMHg1MzlhOSxfMHg0NGFhNDg7cmV0dXJuIF8weDU2YTU1Yih0aGlzLGZ1bmN0aW9uKF8weDRmNzlkZCl7c3dpdGNoKF8weDRmNzlkZFtfMHg1MTA4KCcweDEwZicpXSl7Y2FzZSAweDA6aWYoIV8weDJlMTEyY3x8IV8weDJlMTEyY1tfMHg1MTA4KCcweDE0ZicpXSlyZXR1cm5bMHgzLDB4Nl07XzB4NTM5YTk9XzB4MmUxMTJjW18weDUxMDgoJzB4MTRmJyldLGRlbGV0ZSBfMHgyZTExMmNbJ2NsaWVudCddLF8weDRmNzlkZFtfMHg1MTA4KCcweDEwZicpXT0weDE7Y2FzZSAweDE6cmV0dXJuIF8weDRmNzlkZFsndHJ5cyddW18weDUxMDgoJzB4NGInKV0oWzB4MSwweDQsLDB4NV0pLHRoaXNbJ19rZWVwVGFic09wZW5lZCddP1sweDMsMHgzXTpbMHg0LF8weDNjMDZmOVsnQ2xvc2UnXSh0aGlzW18weDUxMDgoJzB4MTVkJyldKHsnaWQnOl8weDUzOWE5W18weDUxMDgoJzB4MTdkJyldWydpZCddfSkpXTtjYXNlIDB4MjpfMHg0Zjc5ZGRbXzB4NTEwOCgnMHgxM2InKV0oKSxfMHg0Zjc5ZGRbXzB4NTEwOCgnMHgxMGYnKV09MHgzO2Nhc2UgMHgzOnJldHVyblsweDMsMHg1XTtjYXNlIDB4NDpyZXR1cm4gXzB4NDRhYTQ4PV8weDRmNzlkZFsnc2VudCddKCksXzB4NTFiMzRiKF8weDUxMDgoJzB4MTdlJykrXzB4NDRhYTQ4W18weDUxMDgoJzB4YTgnKV0pLFsweDMsMHg1XTtjYXNlIDB4NTp0cnl7XzB4NTM5YTlbXzB4NTEwOCgnMHgxN2YnKV0oKTt9Y2F0Y2goXzB4NTY3NjIyKXtfMHg1MWIzNGIoJ0ZhaWxlZFx4MjB0b1x4MjBjbG9zZVx4MjBDaHJvbWVceDIwVGFiXHgyMGNsaWVudDpceDIwJytfMHg1Njc2MjJbXzB4NTEwOCgnMHhhOCcpXSk7fV8weDRmNzlkZFsnbGFiZWwnXT0weDY7Y2FzZSAweDY6cmV0dXJuWzB4Ml07fX0pO31lbHNle3JldHVybiBfMHgyZTExMmMmJl8weDJlMTEyY1snc3RhcnRMaW5lJ10mJl8weDJlMTEyY1tfMHg1MTA4KCcweDFmZicpXSgpKyc6JytfMHgyZTExMmNbXzB4NTEwOCgnMHgzZjQnKV0oKXx8dm9pZCAweDA7fX0sXzB4Y2MzMDU4Wydwcm90b3R5cGUnXVtfMHg1MTA4KCcweDFjNycpXT1mdW5jdGlvbihfMHgyZTExMmMsXzB4Y2MzMDU4KXtpZignSkVva0EnPT09XzB4NTEwOCgnMHg1YmQnKSl7cmV0dXJuIF8weDJlMTEyYzt9ZWxzZXt0aGlzWydlbWl0J10oXzB4NTEwOCgnMHhhOCcpLF9bXzB4NTEwOCgnMHg2NicpXSh7J3R5cGUnOl8weDJlMTEyY30sXzB4Y2MzMDU4KSk7fX0sXzB4Y2MzMDU4O319KEV2ZW50RW1pdHRlcik7XzB4Y2MzMDU4WydleHBvcnRzJ109XzB4MjQ3ZTk2O30seycuLi9zaGFyZWQvdXRpbHMnOjB4MTcsJy4vYnJvd3Nlckdsb2JhbHMnOjB4OSwnLi9jb25zb2xlTWVzc2FnZSc6MHhhLCcuL2NvdmVyYWJsZVJhbmdlJzoweGIsJy4vZXJyb3JFbnRyeSc6MHhlLCcuL2V4ZWN1dGVkVGVzdCc6MHhmLCcuL3RyYWNrZWRTb3VyY2VGaWxlJzoweDE1LCdtaW5pbWF0Y2gnOnZvaWQgMHgwLCdwYXRoJzp2b2lkIDB4MH1dLDE5OltmdW5jdGlvbihfMHg1NjExNTEsXzB4MWU5YzI5LF8weDJjYzdlZil7J3VzZSBzdHJpY3QnO3ZhciBfMHg1ZWMxYjI9dGhpcyYmdGhpc1tfMHg1MTA4KCcweDViZScpXXx8ZnVuY3Rpb24oXzB4NTYxMTUxLF8weDFlOWMyOSl7dmFyIF8weDJjYzdlZj0nZnVuY3Rpb24nPT10eXBlb2YgU3ltYm9sJiZfMHg1NjExNTFbU3ltYm9sWydpdGVyYXRvciddXTtpZighXzB4MmNjN2VmKXJldHVybiBfMHg1NjExNTE7dmFyIF8weDVlYzFiMixfMHgzOTg1NTksXzB4MTZhNDlmPV8weDJjYzdlZltfMHg1MTA4KCcweDEwZScpXShfMHg1NjExNTEpLF8weDMzMDFlOT1bXTt0cnl7Zm9yKDsodm9pZCAweDA9PT1fMHgxZTljMjl8fF8weDFlOWMyOS0tPjB4MCkmJiEoXzB4NWVjMWIyPV8weDE2YTQ5ZltfMHg1MTA4KCcweDEwMScpXSgpKVtfMHg1MTA4KCcweDEwOScpXTspXzB4MzMwMWU5W18weDUxMDgoJzB4NGInKV0oXzB4NWVjMWIyW18weDUxMDgoJzB4ZGUnKV0pO31jYXRjaChfMHhhMGJmYjMpe18weDM5ODU1OT17J2Vycm9yJzpfMHhhMGJmYjN9O31maW5hbGx5e2lmKF8weDUxMDgoJzB4NWJmJykhPT1fMHg1MTA4KCcweDViZicpKXt2YXIgXzB4NGVjNGE4PV8weDU2MTE1MShfMHg1MTA4KCcweDVjMCcpKVtfMHg1MTA4KCcweDVjMScpXVtfMHg1MTA4KCcweGFlJyldLF8weDVkMTdkYz1fMHg0ZWM0YThbXzB4NTEwOCgnMHg1YzInKV07XzB4NGVjNGE4W18weDUxMDgoJzB4NWMyJyldPWZ1bmN0aW9uKF8weDQ1OTQ3Yyl7cmV0dXJuIF8weDQ1OTQ3Yz09PV8weDFlOWMyOT9fMHgyY2M3ZWYoXzB4NWQxN2RjWydiaW5kJ10odGhpcykpOl8weDVkMTdkY1tfMHg1MTA4KCcweDEwZScpXSh0aGlzLF8weDQ1OTQ3Yyk7fTt9ZWxzZXt0cnl7XzB4NWVjMWIyJiYhXzB4NWVjMWIyW18weDUxMDgoJzB4MTA5JyldJiYoXzB4MmNjN2VmPV8weDE2YTQ5ZlsncmV0dXJuJ10pJiZfMHgyY2M3ZWZbJ2NhbGwnXShfMHgxNmE0OWYpO31maW5hbGx5e2lmKF8weDM5ODU1OSl0aHJvdyBfMHgzOTg1NTlbXzB4NTEwOCgnMHgyNCcpXTt9fX1yZXR1cm4gXzB4MzMwMWU5O30sXzB4Mzk4NTU5PXRoaXMmJnRoaXNbXzB4NTEwOCgnMHg1YzMnKV18fGZ1bmN0aW9uKCl7aWYoXzB4NTEwOCgnMHg1YzQnKSE9PV8weDUxMDgoJzB4NWM0Jykpe2dbJ2xhc3RJbmRleCddPTB4MDtmb3IodmFyIF8weGRlYWY0ZTtudWxsIT09KF8weGRlYWY0ZT1nWydleGVjJ10oXzB4NTYxMTUxKSk7KXt2YXIgXzB4NDY2NDdmPV8weGRlYWY0ZT9fMHhkZWFmNGVbMHgxXXx8XzB4ZGVhZjRlWzB4Ml18fCcnOm51bGw7aWYoXzB4NDY2NDdmJiZtWyd0ZXN0J10oXzB4NDY2NDdmKSl7dmFyIF8weDJkNmFlNz1fMHg0NjY0N2ZbXzB4NTEwOCgnMHgzMzgnKV0oXzB4NDY2NDdmW18weDUxMDgoJzB4NTEnKV0oJywnKSsweDEpO3JldHVybiBCdWZmZXJbXzB4NTEwOCgnMHg1YzUnKV0oXzB4MmQ2YWU3LF8weDUxMDgoJzB4Mjg0JykpWyd0b1N0cmluZyddKCk7fX19ZWxzZXtmb3IodmFyIF8weDU2MTE1MT1bXSxfMHgxZTljMjk9MHgwO18weDFlOWMyOTxhcmd1bWVudHNbXzB4NTEwOCgnMHhiZScpXTtfMHgxZTljMjkrKylfMHg1NjExNTE9XzB4NTYxMTUxW18weDUxMDgoJzB4YjcnKV0oXzB4NWVjMWIyKGFyZ3VtZW50c1tfMHgxZTljMjldKSk7cmV0dXJuIF8weDU2MTE1MTt9fSxfMHgxNmE0OWY9XzB4NTYxMTUxKCdkZ3JhbScpLF8weDMzMDFlOT1fMHg1NjExNTEoJ29zJyksXzB4NWE5YjA2PV8weDU2MTE1MShfMHg1MTA4KCcweDVjNicpKSxfMHgxNGY4MjA9XzB4NWE5YjA2W18weDUxMDgoJzB4MTQ2JyldKCksXzB4NDMzMDMwPV8weDJjYzdlZltfMHg1MTA4KCcweDFhMycpXT17J3R0bCc6MHg4MCwnYWRkcmVzcyc6XzB4NTEwOCgnMHg1YzcnKSwncG9ydCc6MHhkYzRlfSxfMHg0MWUxZGM9ZnVuY3Rpb24oKXtmdW5jdGlvbiBfMHg1NjExNTEoKXtpZihfMHg1MTA4KCcweDVjOCcpIT09J1hRYXlmJyl7dHJ5e2lmKF8weDUxMDgoJzB4NWM5Jyk9PT1fMHg1MTA4KCcweDVjOScpKXt2YXIgXzB4NTYxMTUxPXRoaXM7dGhpc1tfMHg1MTA4KCcweDIyMycpXT0weDAsdGhpc1snX2xpc3RlbmVycyddPXt9LHRoaXNbXzB4NTEwOCgnMHhiMicpXT1fMHgxNmE0OWZbXzB4NTEwOCgnMHg1Y2EnKV0oXzB4NTEwOCgnMHg1Y2InKSksdGhpc1tfMHg1MTA4KCcweGIyJyldW18weDUxMDgoJzB4MTE1JyldKGZ1bmN0aW9uKCl7XzB4NTYxMTUxW18weDUxMDgoJzB4YjInKV1bXzB4NTEwOCgnMHg0MGYnKV0oITB4MCksXzB4NTYxMTUxW18weDUxMDgoJzB4YjInKV1bJ3NldE11bHRpY2FzdFRUTCddKF8weDQzMzAzMFsndHRsJ10pO30pLHRoaXNbJ19zZW5kZXInXVsnb24nXSgnZXJyb3InLGZ1bmN0aW9uKCl7dHJ5e2lmKF8weDUxMDgoJzB4NWNjJykhPT1fMHg1MTA4KCcweDVjYycpKXtyZXR1cm4gXzB4MWU5YzI5W18weDUxMDgoJzB4YTcnKV0oXzB4NTEwOCgnMHgzMjUnKSxfMHg1NjExNTEpO31lbHNle18weDU2MTE1MVtfMHg1MTA4KCcweGIyJyldW18weDUxMDgoJzB4MTdmJyldKCk7fX1jYXRjaChfMHgyNzQ5OGYpe319KSx0aGlzWydfcmVjZWl2ZXInXT1fMHgxNmE0OWZbJ2NyZWF0ZVNvY2tldCddKF8weDUxMDgoJzB4NWNiJykpLHRoaXNbXzB4NTEwOCgnMHgzYmUnKV1bJ29uJ10oXzB4NTEwOCgnMHg1Y2QnKSxmdW5jdGlvbigpe3RyeXtfMHg1NjExNTFbXzB4NTEwOCgnMHgzYmUnKV1bXzB4NTEwOCgnMHg0MGYnKV0oITB4MCksXzB4NTYxMTUxW18weDUxMDgoJzB4M2JlJyldW18weDUxMDgoJzB4NDEwJyldKF8weDQzMzAzMFtfMHg1MTA4KCcweDVjZScpXSksXzB4NTYxMTUxW18weDUxMDgoJzB4M2JlJyldW18weDUxMDgoJzB4NWNmJyldKF8weDQzMzAzMFtfMHg1MTA4KCcweGI0JyldKTt9Y2F0Y2goXzB4NTU1NzY2KXt9fSksdGhpc1tfMHg1MTA4KCcweDNiZScpXVsnb24nXShfMHg1MTA4KCcweGE4JyksZnVuY3Rpb24oXzB4MWU5YzI5KXt0cnl7XzB4MWU5YzI5PUpTT05bXzB4NTEwOCgnMHg0ZScpXShfMHgxZTljMjlbXzB4NTEwOCgnMHgxZjcnKV0oXzB4NTEwOCgnMHg1ZDAnKSkpLF8weDFlOWMyOVtfMHg1MTA4KCcweDVkMScpXSYmXzB4MWU5YzI5W18weDUxMDgoJzB4NDAzJyldJiZfMHgxZTljMjlbXzB4NTEwOCgnMHg1ZDInKV0mJiFfMHg1NjExNTFbXzB4NTEwOCgnMHgyMjInKV0oKVsnZmluZCddKGZ1bmN0aW9uKF8weDU2MTE1MSl7aWYoXzB4NTEwOCgnMHg1ZDMnKSE9PV8weDUxMDgoJzB4NWQzJykpe3ZhciBfMHgzODllZDk9dGhpc1tfMHg1MTA4KCcweDMyYicpXShfMHgyY2M3ZWYpLF8weDQ2ZDJkMz1fMHgxZTljMjlbJ3JhbmdlJ10oKTtfMHgzODllZDkmJl8weDQ2ZDJkMyYmXzB4MWU5YzI5W18weDUxMDgoJzB4M2UyJyldKF8weDM4OWVkOSk7fWVsc2V7cmV0dXJuIF8weDU2MTE1MT09PV8weDFlOWMyOVtfMHg1MTA4KCcweDQwMycpXTt9fSkmJl8weDFlOWMyOVtfMHg1MTA4KCcweDVkMicpXSE9PV8weDE0ZjgyMCYmX1tfMHg1MTA4KCcweDEzNScpXShfMHg1NjExNTFbXzB4NTEwOCgnMHg1ZDQnKV1bXzB4MWU5YzI5W18weDUxMDgoJzB4NWQxJyldXSxmdW5jdGlvbihfMHg1NjExNTEpe18weDU2MTE1MVtfMHg1MTA4KCcweDEwYScpXShudWxsLFtfMHgxZTljMjlbXzB4NTEwOCgnMHgxZWYnKV0sXzB4MWU5YzI5W18weDUxMDgoJzB4NDAzJyldXSk7fSk7fWNhdGNoKF8weDQ2MDEyMyl7fX0pLHRoaXNbXzB4NTEwOCgnMHgzYmUnKV1bJ29uJ10oXzB4NTEwOCgnMHgyNCcpLGZ1bmN0aW9uKCl7dHJ5e2lmKF8weDUxMDgoJzB4NWQ1JykhPT1fMHg1MTA4KCcweDVkNicpKXtfMHg1NjExNTFbXzB4NTEwOCgnMHgzYmUnKV1bJ2Nsb3NlJ10oKTt9ZWxzZXt2YXIgXzB4MjAwNmNiPXRoaXM7XzB4MjAwNmNiW18weDUxMDgoJzB4ODYnKV1bXzB4NTEwOCgnMHgxM2QnKV0oKTt9fWNhdGNoKF8weDVmM2IyMSl7fX0pLHRoaXNbXzB4NTEwOCgnMHgzYmUnKV1bJ2JpbmQnXShfMHg0MzMwMzBbXzB4NTEwOCgnMHhiMycpXSk7fWVsc2V7XzB4MmNjN2VmW18weDUxMDgoJzB4NWQ3JyldKF8weDFlOWMyOSk7fX1jYXRjaChfMHg1NzQ4MTEpe319ZWxzZXtyZXR1cm4gXzB4NTYxMTUxW+KAi18weDUxMDgoJzB4M2UyJyldKF8weDJjYzdlZltfMHg1MTA4KCcweDMyYicpXShfMHg1NjExNTFbXzB4NTEwOCgnMHgyMzcnKV0oKSkpO319cmV0dXJuIF8weDU2MTE1MVtfMHg1MTA4KCcweGFlJyldWydvbiddPWZ1bmN0aW9uKF8weDU2MTE1MSxfMHgxZTljMjkpe2lmKF8weDUxMDgoJzB4NWQ4JykhPT1fMHg1MTA4KCcweDVkOCcpKXtyZXR1cm4gXzB4NTYxMTUxJiZfMHg1NjExNTFbXzB4NTEwOCgnMHhiZScpXT4weDImJidAJz09PV8weDU2MTE1MVsweDBdJiYnQCc9PT1fMHg1NjExNTFbMHgxXTt9ZWxzZXt0aGlzW18weDUxMDgoJzB4NWQ0JyldJiYodGhpc1snX2xpc3RlbmVycyddW18weDU2MTE1MV18fCh0aGlzW18weDUxMDgoJzB4NWQ0JyldW18weDU2MTE1MV09W10pLHRoaXNbXzB4NTEwOCgnMHg1ZDQnKV1bXzB4NTYxMTUxXVtfMHg1MTA4KCcweDRiJyldKF8weDFlOWMyOSkpO319LF8weDU2MTE1MVtfMHg1MTA4KCcweGFlJyldW18weDUxMDgoJzB4YTcnKV09ZnVuY3Rpb24oXzB4NTYx4oCLMTUxLF8weDFlOWMyOSl7dHJ5e3ZhciBfMHgyY2M3ZWY9bmV3IEJ1ZmZlcihKU09OW18weDUxMDgoJzB4YjAnKV0oeydldmVudCc6XzB4NTYxMTUxLCdkYXRhJzpfMHgxZTljMjksJ3NvdXJjZSc6dGhpc1tfMHg1MTA4KCcweGIxJyldKCksJ3NvdXJjZUlkJzpfMHgxNGY4MjB9KSk7dGhpc1tfMHg1MTA4KCcweGIyJyldW18weDUxMDgoJzB4MTZmJyldKF8weDJjYzdlZiwweDAsXzB4MmNjN2VmWydsZW5ndGgnXSxfMHg0MzMwMzBbXzB4NTEwOCgnMHhiMycpXSxfMHg0MzMwMzBbXzB4NTEwOCgnMHhiNCcpXSk7fWNhdGNoKF8weDIzMGYyNCl7fX0sXzB4NTYxMTUxW18weDUxMDgoJzB4YWUnKV1bXzB4NTEwOCgnMHhiMScpXT1mdW5jdGlvbigpe3ZhciBfMHg1NjExNTE9dGhpc1tfMHg1MTA4KCcweDIyMicpXSgpO3JldHVybiB0aGlzW18weDUxMDgoJzB4MjIzJyldPT09XzB4NTYxMTUxWydsZW5ndGgnXSYmKHRoaXNbJ19uZXR3b3JrQWRkcmVzcyddPTB4MCksXzB4NTYxMTUxW3RoaXNbXzB4NTEwOCgnMHgyMjMnKV0rK107fSxfMHg1NjExNTFbXzB4NTEwOCgnMHhhZScpXVtfMHg1MTA4KCcweDIyMicpXT1mdW5jdGlvbigpe2lmKF8weDUxMDgoJzB4NWQ5Jyk9PT1fMHg1MTA4KCcweDVkOScpKXtyZXR1cm4gXzB4NTYxMTUxW18weDUxMDgoJzB4NWRhJyldKClbXzB4NTEwOCgnMHhkYScpXShmdW5jdGlvbihfMHg1NjExNTEpe3JldHVybiBfMHgzMzAxZTlbXzB4NTEwOCgnMHg1ZGInKV0oKSsnXHgyMCgnK18weDU2MTE1MSsnKSc7fSk7fWVsc2V7cmV0dXJuIF8weDVlYzFiMihbXzB4NTYxMTUxLF8weDFlOWMyOV0pO319LF8weDU2MTE1MVtfMHg1MTA4KCcweGFlJyldW18weDUxMDgoJzB4MTNkJyldPWZ1bmN0aW9uKCl7aWYoXzB4NTEwOCgnMHg1ZGMnKSE9PV8weDUxMDgoJzB4NWRkJykpe3RyeXtpZignZHNKYU8nIT09XzB4NTEwOCgnMHg1ZGUnKSl7cmV0dXJuIXRoaXNbXzB4NTEwOCgnMHg3YScpXSgpJiZ0aGlzW18weDUxMDgoJzB4NWRmJyldKCkmJiF0aGlzW18weDXigIsxMDgoJzB4NWEzJyldO31lbHNle3RoaXNbXzB4NTEwOCgnMHhiMicpXVsnY2xvc2UnXSgpO319Y2F0Y2goXzB4NTcxNjcwKXt9dHJ5e3RoaXNbJ19yZWNlaXZlciddW18weDUxMDgoJzB4MTdmJyldKCk7fWNhdGNoKF8weDM4NDdlMSl7fX1lbHNle3ZhciBfMHgxYTA1NGU9XzB4MmNjN2VmW18weDUxMDgoJzB4MzM4JyldKF8weDJjYzdlZltfMHg1MTA4KCcweDUxJyldKCcsJykrMHgxKTtyZXR1cm4gQnVmZmVyW18weDUxMDgoJzB4NWM1JyldKF8weDFhMDU0ZSxfMHg1MTA4KCcweDI4NCcpKVsndG9TdHJpbmcnXSgpO319LF8weDU2MTE1MVsnX2dldE5ldHdvcmtBZGRyZXNzZXMnXT1mdW5jdGlvbigpe2lmKF8weDUxMDgoJzB4NWUwJyk9PT0nWlF1Z2gnKXt2YXIgXzB4NTYxMTUxPV8weDMzMDFlOVtfMHg1MTA4KCcweDVlMScpXSgpLF8weDFlOWMyOT1PYmplY3RbXzB4NTEwOCgnMHgzNGInKV0oXzB4NTYxMTUxKVsncmVkdWNlJ10oZnVuY3Rpb24oXzB4MWU5YzI5LF8weDJjYzdlZil7cmV0dXJuIF8weDM5ODU1OShfMHgxZTljMjksXzB4NTYxMTUxW18weDJjYzdlZl1bXzB4NTEwOCgnMHhkYScpXShmdW5jdGlvbihfMHg1NjExNTEpe3JldHVybnsnYWRkcmVzcyc6XzB4NTYxMTUxW18weDUxMDgoJzB4YjQnKV0sJ2ludGVybmFsJzpfMHg1NjExNTFbJ2ludGVybmFsJ119O30pKTt9LFtdKVsnZmlsdGVyJ10oZnVuY3Rpb24oXzB4NTYxMTUxKXtyZXR1cm4nMTI3LjAuMC4xJyE9PV8weDU2MTE1MVtfMHg1MTA4KCcweGI0JyldJiZfMHg1MTA4KCcweDNjYycpIT09XzB4NTYxMTUxW18weDUxMDgoJzB4YjQnKV0mJiFfMHg1NjExNTFbXzB4NTEwOCgnMHg1ZTInKV07fSlbXzB4NTEwOCgnMHhkYScpXShmdW5jdGlvbihfMHg1NjExNTEpe3JldHVybiBfMHg1NjExNTFbJ2FkZHJlc3MnXTt9KTtyZXR1cm4gMHgwPT09XzB4MWU5YzI5W18weDUxMDgoJzB4YmUnKV0mJl8weDFlOWMyOVsncHVzaCddKF8weDUxMDgoJzB4NWUzJykpLF8weDFlOWMyOTt9ZWxzZXt2YXIgXzB4NGM1ZWQ9X1tfMHg1MTA4KCcweDFiOCcpXSh0aGlzWydfdGVzdHMnXSksXzB4M2M3OGI3PV9bXzB4NTEwOCgnMHgxYjgnKV0odGhpc1tfMHg1MTA4KCcweDUwNicpXSk7cmV0dXJueyd0b3RhbCc6XzB4NGM1ZWQsJ3Bhc3NlZCc6XzB4NGM1ZWQtXzB4M2M3OGI3LCdmYWlsZWQnOl8weDNjNzhiNywnY292ZXJhZ2UnOnRoaXNbXzB4NTEwOCgnMHg1NDEnKV0sJ2Vycm9yJzp0aGlzW18weDUxMDgoJzB4MWJmJyldfTt9fSxfMHg1NjExNTE7fSgpO18weDFlOWMyOVtfMHg1MTA4KCcweDInKV09bmV3IF8weDQxZTFkYygpO30seycuLy4uLy4uL3V0aWxzJzoweDFlLCdkZ3JhbSc6dm9pZCAweDAsJ29zJzp2b2lkIDB4MH1dLDIwOltmdW5jdGlvbihfMHhkMmVjZTMsXzB4NWMxMTMyLF8weDU3MWEwYSl7J3VzZSBzdHJpY3QnO3ZhciBfMHgxMzUyOTQ9ZnVuY3Rpb24oKXtpZignT3NSbEknIT09XzB4NTEwOCgnMHg1ZTQnKSl7cmV0dXJuIF8weDU3MWEwYVsnX3J1blRlc3RzJ10oXzB4ZDJlY2UzKTt9ZWxzZXtmdW5jdGlvbiBfMHhkMmVjZTMoKXtpZihhcmd1bWVudHNbXzB4NTEwOCgnMHhiZScpXT4weDEpdGhpc1tfMHg1MTA4KCcweDM1OScpXT1hcmd1bWVudHNbMHgwXSx0aGlzW18weDUxMDgoJzB4MzVhJyldPWFyZ3VtZW50c1sweDFdLHRoaXNbXzB4NTEwOCgnMHgzZDInKV09YXJndW1lbnRzWzB4Ml07ZWxzZSBpZihhcmd1bWVudHNbJ2xlbmd0aCddKXtpZihfMHg1MTA4KCcweDVlNScpIT09J3lkclhxJyl7dmFyIF8weGQyZWNlMz1hcmd1bWVudHNbMHgwXVtfMHg1MTA4KCcweDEyNScpXSgnXycpO3RoaXNbXzB4NTEwOCgnMHgzNTknKV09cGFyc2VJbnQoXzB4ZDJlY2UzWzB4MF0sMHhhKSx0aGlzW18weDUxMDgoJzB4MzVhJyldPXBhcnNlSW50KF8weGQyZWNlM1sweDFdLDB4YSk7fWVsc2V7cmV0dXJuIHRoaXNbXzB4NTEwOCgnMHgxODEnKV0+PV8weGQyZWNlM1snX3N0YXJ0TGluZSddJiZfMHhkMmVjZTNbXzB4NTEwOCgnMHgxODInKV0+PXRoaXNbXzB4NTEwOCgnMHgxODInKV0mJih0aGlzW18weDUxMDgoJzB4MTgxJyldPl8weGQyZWNlM1tfMHg1MTA4KCcweDE4MScpXXx8dGhpc1tfMHg1MTA4KCcweDE4NScpXT49XzB4ZDJlY2UzW18weDUxMDgoJzB4MTg1JyldKSYmKF8weGQyZWNlM1snX2VuZExpbmUnXT50aGlzW18weDUxMDgoJzB4MTgyJyldfHxfMHhkMmVjZTNbXzB4NTEwOCgnMHgxODYnKV0+PXRoaXNbXzB4NTEwOCgnMHgxODYnKV0pO319fXJldHVybiBfMHhkMmVjZTNbXzB4NTEwOCgnMHhhZScpXVsna2V5J109ZnVuY3Rpb24oKXtpZihfMHg1MTA4KCcweDVlNicpIT09XzB4NTEwOCgnMHg1ZTcnKSl7cmV0dXJuIHRoaXNbXzB4NTEwOCgnMHgzNTknKV0rJ18nK3RoaXNbXzB4NTEwOCgnMHgzNWEnKV07fWVsc2V7dmFyIF8weDRlNTM3Zj1fMHg1YzExMzJbXzB4NTEwOCgnMHgxNDInKV1bJ3Rlc3RzQnlSZXF1ZXN0J10oXzB4ZDJlY2UzW18weDUxMDgoJzB4Mjc1JyldKTtfMHg1YzExMzJbXzB4NTEwOCgnMHg5ZScpXVtfMHg1MTA4KCcweDJjYicpXSh7J3Rlc3RzJzpfMHg0ZTUzN2ZbXzB4NTEwOCgnMHhiZScpXSYmXzB4NGU1MzdmfHx2b2lkIDB4MCwnZXh0ZXJuYWxGaWxlQ2hhbmdlJzppLCdldmFsdWF0ZUV4cHJlc3Npb24nOl8weGQyZWNlM1tfMHg1MTA4KCcweDI3NScpXSYmXzB4ZDJlY2UzW18weDUxMDgoJzB4Mjc1JyldW18weDUxMDgoJzB4MmNjJyldfSk7fX0sXzB4ZDJlY2UzW18weDUxMDgoJzB4YWUnKV1bXzB4NTEwOCgnMHgyMzcnKV09ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc1tfMHg1MTA4KCcweDM1OScpXTt9LF8weGQyZWNlM1tfMHg1MTA4KCcweGFlJyldW18weDUxMDgoJzB4MjNiJyldPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbJ19saW5lJ107fSxfMHhkMmVjZTNbXzB4NTEwOCgnMHhhZScpXVtfMHg1MTA4KCcweDNkMycpXT1mdW5jdGlvbigpe3JldHVybiB0aGlzW18weDUxMDgoJzB4M2QyJyldO30sXzB4ZDJlY2UzWydwcm90b3R5cGUnXVsnc2V0RmlsZSddPWZ1bmN0aW9uKF8weGQyZWNlMyl7dGhpc1tfMHg1MTA4KCcweDE1YicpXT1fMHhkMmVjZTM7fSxfMHhkMmVjZTNbJ3Byb3RvdHlwZSddW18weDUxMDgoJzB4NDgzJyldPWZ1bmN0aW9uKCl7aWYoXzB4NTEwOCgnMHg1ZTgnKSE9PV8weDUxMDgoJzB4NWU5Jykpe3JldHVybiB0aGlzW18weDUxMDgoJzB4MTViJyldJiZ0aGlzW18weDUxMDgoJzB4MTViJyldW18weDUxMDgoJzB4MzQnKV0oKXx8dGhpc1snX2ZpbGVJZCddJiZ+dGhpc1tfMHg1MTA4KCcweDM1OScpXVtfMHg1MTA4KCcweDUxJyldKCcuJykmJnRoaXNbJ19maWxlSWQnXTt9ZWxzZXt2YXIgXzB4YmNkNDkyPV8weGQyZWNlM1tfMHg1MTA4KCcweDU2NScpXShsKTtyZXR1cm4gXzB4YmNkNDkyP18weGJjZDQ5MlsweDBdW18weDUxMDgoJzB4YmYnKV0odSwnJyl8fCcnOicnO319LF8weGQyZWNlM1tfMHg1MTA4KCcweGFlJyldW18weDUxMDgoJzB4M2Q5JyldPWZ1bmN0aW9uKF8weGQyZWNlMyl7aWYoJ0tFZXVxJz09PSdQYkNkZycpe3ZhciBfMHg0N2Q0YTY9dGhpcztfMHg0N2Q0YTZbXzB4NTEwOCgnMHgxYTUnKV1bXzB4NTEwOCgnMHgxNmYnKV0oeyd0eXBlJzpfMHg1MTA4KCcweDFjZScpLCdwYWdlSWQnOl8weGQyZWNlM30pO31lbHNle3RoaXNbJ19yYW5nZSddPV8weGQyZWNlMzt9fSxfMHhkMmVjZTNbXzB4NTEwOCgnMHhhZScpXVsncmFuZ2UnXT1mdW5jdGlvbigpe3JldHVybiB0aGlzW18weDUxMDgoJzB4M2NmJyldO30sXzB4ZDJlY2UzO319KCk7XzB4NWMxMTMyWydleHBvcnRzJ109XzB4MTM1Mjk0O30se31dLDIxOltmdW5jdGlvbihfMHg1ODMwYTcsXzB4OGNlNThhLF8weDIyMDgxYil7J3VzZSBzdHJpY3QnO3ZhciBfMHg0NDE3NGU9XzB4NTgzMGE3KCcuL2NvdmVyYWJsZVJhbmdlJyksXzB4MTM4ZDJjPV8weDU4MzBhNyhfMHg1MTA4KCcweDVlYScpKSxfMHg0MzZjZjA9XzB4NTgzMGE3KF8weDUxMDgoJzB4NWViJykpLF8weGY3MmI1Nj1mdW5jdGlvbigpe2Z1bmN0aW9uIF8weDU4MzBhNyhfMHg1ODMwYTcpe2lmKF8weDUxMDgoJzB4NWVjJykhPT0nSFZueVQnKXtyZXR1cm4hIV8weDU4MzBhN1tfMHg1MTA4KCcweDE1MicpXTt9ZWxzZXt0aGlzW18weDUxMDgoJzB4M2ZhJyldPV8weDU4MzBhNyx0aGlzW18weDUxMDgoJzB4NDlhJyldPU9iamVjdFsnY3JlYXRlJ10obnVsbCksdGhpc1tfMHg1MTA4KCcweDEwNycpXT1PYmplY3RbXzB4NTEwOCgnMHg5YScpXShudWxsKSx0aGlzWydfbmV3UmFuZ2VzJ109T2JqZWN0W18weDUxMDgoJzB4OWEnKV0obnVsbCksdGhpc1tfMHg1MTA4KCcweDVlZCcpXT1PYmplY3RbJ2NyZWF0ZSddKG51bGwpLHRoaXNbXzB4NTEwOCgnMHgyZmEnKV09T2JqZWN0W18weDUxMDgoJzB4OWEnKV0obnVsbCksdGhpc1tfMHg1MTA4KCcweDJmOCcpXT1PYmplY3RbXzB4NTEwOCgnMHg5YScpXShudWxsKSx0aGlzW18weDUxMDgoJzB4YWInKV09T2JqZWN0W18weDUxMDgoJzB4OWEnKV0obnVsbCksdGhpc1snX251bWJlck9mQ292ZXJlZFJhbmdlcyddPTB4MDt9fXJldHVybiBfMHg1ODMwYTdbXzB4NTEwOCgnMHhhZScpXVtfMHg1MTA4KCcweDU5YicpXT1mdW5jdGlvbihfMHg1ODMwYTcsXzB4OGNlNThhKXt2YXIgXzB4MjIwODFiPTB4MjAwMCxfMHgxMzhkMmM9XzB4NDQxNzRlWydyYW5nZUtleSddKF8weDhjZTU4YSksXzB4NDM2Y2YwPXRoaXNbXzB4NTEwOCgnMHg0OWEnKV1bXzB4MTM4ZDJjXTtfMHg0MzZjZjB8fChfMHg0MzZjZjA9dGhpc1snX3JhbmdlQ29uc29sZUxvZyddW18weDEzOGQyY109W10pO3ZhciBfMHhmNzJiNTY9XzB4NTgzMGE3WydsZW5ndGgnXT5fMHgyMjA4MWI/XzB4NTEwOCgnMHg0NjQnKTonJztfMHg1ODMwYTc9XzB4NTgzMGE3W18weDUxMDgoJzB4MzM2JyldKDB4MCxfMHgyMjA4MWIpLF8weDQzNmNmMFtfMHg1MTA4KCcweDRiJyldKF8weDU4MzBhNytfMHhmNzJiNTYpO30sXzB4NTgzMGE3Wydwcm90b3R5cGUnXVsncmFuZ2VzJ109ZnVuY3Rpb24oKXtpZihfMHg1MTA4KCcweDVlZScpIT09XzB4NTEwOCgnMHg1ZWYnKSl7cmV0dXJuIHRoaXNbJ19yYW5nZXMnXTt9ZWxzZXtfMHg0NDE3NGVbXzB4NTEwOCgnMHgyNTMnKV0oXzB4OGNlNThhLCtuZXcgXzB4MTM4ZDJjKCkpO319LF8weDU4MzBhN1tfMHg1MTA4KCcweGFlJyldW18weDUxMDgoJzB4NWRmJyldPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbXzB4NTEwOCgnMHgzZmEnKV1bXzB4NTEwOCgnMHg0NmQnKV07fSxfMHg1ODMwYTdbXzB4NTEwOCgnMHhhZScpXVtfMHg1MTA4KCcweDVmMCcpXT1mdW5jdGlvbigpe3ZhciBfMHg1ODMwYTc9X1tfMHg1MTA4KCcweDY2JyldKHt9LHRoaXNbXzB4NTEwOCgnMHgyZjUnKV0sdGhpc1snX2FmZmVjdGVkUmFuZ2VzJ10sdGhpc1snX291dGRhdGVkUmFuZ2VzJ10pLF8weDhjZTU4YT10aGlzWydfYWxsUmFuZ2VzUmVjZWl2ZWQnXSxfMHgyMjA4MWI9dGhpc1tfMHg1MTA4KCcweDM3NycpXTtpZihkZWxldGUgdGhpc1tfMHg1MTA4KCcweDVmMScpXSxkZWxldGUgdGhpc1tfMHg1MTA4KCcweDM3NycpXSxfW18weDUxMDgoJzB4MTM1JyldKHRoaXNbXzB4NTEwOCgnMHgyZmEnKV0sZnVuY3Rpb24oXzB4NTgzMGE3KXtyZXR1cm4gXzB4NTgzMGE3W18weDUxMDgoJzB4MTA4JyldKCk7fSksdGhpc1tfMHg1MTA4KCcweDJmNScpXT1PYmplY3RbXzB4NTEwOCgnMHg5YScpXShudWxsKSx0aGlzWydfYWZmZWN0ZWRSYW5nZXMnXT1PYmplY3RbXzB4NTEwOCgnMHg5YScpXShudWxsKSx0aGlzW18weDUxMDgoJzB4MmZhJyldPU9iamVj4oCLdFsnY3JlYXRlJ10obnVsbCksdGhpc1tfMHg1MTA4KCcweDRjNycpXSl7dmFyIF8weDQ0MTc0ZT1fMHgyMjA4MWI/dGhpc1tfMHg1MTA4KCcweDRjNycpXVsndXBkYXRlJ10oX1tfMHg1MTA4KCcweDFiYScpXSh0aGlzWydfcmFuZ2VzJ10pLCEweDAsITB4MCk6dGhpc1snX2RvY3VtZW50SW5FZGl0b3InXVtfMHg1MTA4KCcweDI3MScpXShfMHg1ODMwYTcsXzB4OGNlNThhLCEweDEpO3JldHVybiBfMHg0NDE3NGVbXzB4NTEwOCgnMHg1ZjInKV09XzB4MjIwODFiLF8weDQ0MTc0ZTt9fSxfMHg1ODMwYTdbXzB4NTEwOCgnMHhhZScpXVtfMHg1MTA4KCcweDMyYycpXT1mdW5jdGlvbigpe2lmKF8weDUxMDgoJzB4NWYzJyk9PT1fMHg1MTA4KCcweDVmNCcpKXt0aGlzW18weDUxMDgoJzB4MjA5JyldW18weDU4MzBhN1tfMHg1MTA4KCcweDM0JyldXT90aGlzW18weDUxMDgoJzB4MjA5JyldW18weDU4MzBhN1sncGF0aCddXSsrOnRoaXNbJ19vcGVuZWRGaWxlcyddW18weDU4MzBhN1sncGF0aCddXT0weDE7fWVsc2V7aWYodGhpc1tfMHg1MTA4KCcweDRjNycpXSl7aWYoXzB4NTEwOCgnMHg1ZjUnKT09PV8weDUxMDgoJzB4NWY2Jykpe3JldHVybiBfW18weDUxMDgoJzB4MjNhJyldKF8weDU4MzBhNyxmdW5jdGlvbihfMHg0YmYxZjUpe3JldHVybiEhXzB4NGJmMWY1O30pO31lbHNle3ZhciBfMHg1ODMwYTc9dGhpc1tfMHg1MTA4KCcweDRjNycpXVtfMHg1MTA4KCcweDMyYycpXSgpO3JldHVybiBfMHg1ODMwYTcmJihfMHg1ODMwYTdbXzB4NTEwOCgnMHgxMzMnKV09eyd2YWx1ZSc6dGhpc1snY292ZXJhZ2UnXSgpfSksXzB4NTgzMGE3O319fX0sXzB4NTgzMGE3W18weDUxMDgoJzB4YWUnKV1bXzB4NTEwOCgnMHgyYzcnKV09ZnVuY3Rpb24oKXt0aGlzW18weDUxMDgoJzB4NGM3JyldfHwodGhpc1tfMHg1MTA4KCcweDRjNycpXT1uZXcgXzB4MTM4ZDJjKCksdGhpc1tfMHg1MTA4KCcweDRjNycpXVsndXBkYXRlJ10oX1tfMHg1MTA4KCcweDFiYScpXSh0aGlzW18weDUxMDgoJzB4MTA3JyldKSwhMHgxLCEweDApKTt9LF8weDU4MzBhN1sncHJvdG90eXBlJ11bXzB4NTEwOCgnMHgyY2EnKV09ZnVuY3Rpb24oKXtpZihfMHg1MTA4KCcweDVmNycpPT09XzB4NTEwOCgnMHg1ZjcnKSl7ZGVsZXRlIHRoaXNbXzB4NTEwOCgnMHg0YzcnKV07fWVsc2V7aWYoXzB4NTgzMGE3JiZfMHg1ODMwYTdbXzB4NTEwOCgnMHhhOCcpXSl7aWYoXzB4MjIwODFiW18weDUxMDgoJzB4NScpXVtfMHg1MTA4KCcweDI4NicpXVtfMHg1MTA4KCcweDJjZScpXSl7dmFyIF8weDFhYjBiZj1fMHg1ODMwYTdbXzB4NTEwOCgnMHhhOCcpXVtfMHg1MTA4KCcweDU2NScpXSgvQ2Fubm90IGZpbmQgbW9kdWxlICcoW14nXHMmfDtdKyknLyk7XzB4MWFiMGJmJiZfMHgxYWIwYmZbMHgxXSYmKF8weDU4MzBhN1tfMHg1MTA4KCcweDU2NicpXT1fMHg0MzZjZjBbXzB4NTEwOCgnMHgyY2YnKV0oXzB4MWFiMGJmWzB4MV0pKTt9dmFyIF8weDU3MjIzMz1fMHg1ODMwYTdbXzB4NTEwOCgnMHhhOCcpXVtfMHg1MTA4KCcweDU2NScpXSgvKFteXHNdKykgaXMgbm90IGRlZmluZWQvKTtfMHg1NzIyMzMmJl8weDU3MjIzM1sweDFdJiYoXzB4NTcyMjMzPV8weDU3MjIzM1sweDFdLF8weGY3MmI1NltfMHg1NzIyMzNdP18weDU4MzBhN1tfMHg1MTA4KCcweDU2NycpXT1fMHg1NzIyMzM6XzB4NTgzMGE3W18weDUxMDgoJzB4NTY4JyldPV8weDU3MjIzMyk7fX19LF8weDU4MzBhN1tfMHg1MTA4KCcweGFlJyldW18weDUxMDgoJzB4NWY4JyldPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbXzB4NTEwOCgnMHg0YzcnKV07fSxfMHg1ODMwYTdbXzB4NTEwOCgnMHhhZScpXVsnc2hpZnREb2N1bWVudExpbmVzJ109ZnVuY3Rpb24oXzB4NTgzMGE3LF8weDhjZTU4YSxfMHgyMjA4MWIpe3RoaXNbXzB4NTEwOCgnMHg0YzcnKV0mJnRoaXNbXzB4NTEwOCgnMHg0YzcnKV1bXzB4NTEwOCgnMHg0M2UnKV0oXzB4NTgzMGE3LF8weDhjZTU4YSxfMHgyMjA4MWIpO30sXzB4NTgzMGE3W18weDUxMDgoJzB4YWUnKV1bXzB4NTEwOCgnMHg1ZjknKV09ZnVuY3Rpb24oXzB4NTgzMGE3KXtpZihfMHg1MTA4KCcweDVmYScpPT09XzB4NTEwOCgnMHg1ZmInKSl7cmV0dXJueydmYWlsaW5nJzpfMHg1ODMwYTdbXzB4NTEwOCgnMHg0MmQnKV0oKSwnbG9jJzpfMHg4Y2U1OGFbXzB4NTEwOCgnMHg1YjInKV0oXzB4NTgzMGE3WydzdGFydFJhbmdlJ10oKSksJ2ZpbGUnOl8weDU4MzBhN1tfMHg1MTA4KCcweDQ4MycpXSgpLCd0aW1lJzpfMHg1ODMwYTdbXzB4NTEwOCgnMHgzNGEnKV0oKSwnZXJyb3JzJzpfMHg4Y2U1OGFbJ19tYXBFcnJvcnMnXShfMHg1ODMwYTdbXzB4NTEwOCgnMHg0MDgnKV0oKSksJ3BhdGgnOl8weDU4MzBhN1tfMHg1MTA4KCcweDRhYScpXSgpLCdtZXNzYWdlcyc6XzB4OGNlNThhW18weDUxMDgoJzB4MWYyJyldKF8weDU4MzBhN1snY29uc29sZU1lc3NhZ2VzJ10oKSl9O31lbHNle3RoaXNbJ19kb2N1bWVudEluRWRpdG9yJ10mJnRoaXNbXzB4NTEwOCgnMHg0YzcnKV1bXzB4NTEwOCgnMHg0M2EnKV0oXzB4NTgzMGE3KTt9fSxfMHg1ODMwYTdbJ3Byb3RvdHlwZSddW18weDUxMDgoJzB4MzkyJyldPWZ1bmN0aW9uKCl7dGhpc1snX2RvY3VtZW50SW5FZGl0b3InXSYmKHRoaXNbXzB4NTEwOCgnMHgzNzcnKV09ITB4MCk7fSxfMHg1ODMwYTdbXzB4NTEwOCgnMHhhZScpXVtfMHg1MTA4KCcweDM4OCcpXT1mdW5jdGlvbigpe2lmKF8weDUxMDgoJzB4NWZjJykhPT0nSW9MeEcnKXtyZXR1cm5+XzB4MTM4ZDJjW18weDUxMDgoJzB4NTEnKV0oXzB4NTgzMGE3KTt9ZWxzZXtyZXR1cm4hdGhpc1tfMHg1MTA4KCcweDM3NycpXTt9fSxfMHg1ODMwYTdbXzB4NTEwOCgnMHhhZScpXVtfMHg1MTA4KCcweDU1MScpXT1mdW5jdGlvbihfMHg1ODMwYTcpe3JldHVybiB0aGlzW18weDUxMDgoJzB4MjA0JyldKF8weDU4MzBhNyk7fSxfMHg1ODMwYTdbXzB4NTEwOCgnMHhhZScpXVtfMHg1MTA4KCcweDU1NScpXT1mdW5jdGlvbihfMHg1ODMwYTcpe2lmKHRoaXNbJ19kb2N1bWVudEluRWRpdG9yJ10pe2lmKF8weDUxMDgoJzB4NWZkJykhPT1fMHg1MTA4KCcweDVmZCcpKXt0aGlzW18weDUxMDgoJzB4NGJiJyldPV8weDhjZTU4YTt9ZWxzZXt2YXIgXzB4OGNlNThhPXRoaXNbXzB4NTEwOCgnMHg0YzcnKV1bXzB4NTEwOCgnMHgyM2InKV0oXzB4NTgzMGE3KTtpZihfMHg4Y2U1OGEpcmV0dXJuIF8weDhjZTU4YVtfMHg1MTA4KCcweDJlNScpXSgpO319fSxfMHg1ODMwYTdbJ3Byb3RvdHlwZSddW18weDUxMDgoJzB4NWZlJyldPWZ1bmN0aW9uKF8weDU4MzBhNyl7dmFyIF8weDhjZTU4YT10aGlzO2lmKHRoaXNbXzB4NTEwOCgnMHg1ZmYnKV0pe2lmKF8weDUxMDgoJzB4NjAwJykhPT1fMHg1MTA4KCcweDYwMScpKXtkZWxldGUgdGhpc1tfMHg1MTA4KCcweDVmZicpXTt2YXIgXzB4MjIwODFiPV8weDQzNmNmMCh0aGlzWydwYXRoJ10oKSxfMHg1ODMwYTcodGhpc1tfMHg1MTA4KCcweDM0JyldKCkpKTtfMHgyMjA4MWImJih0aGlzW18weDUxMDgoJzB4NjAyJyldPXt9LF8weDIyMDgxYltfMHg1MTA4KCcweDYwMycpXShmdW5jdGlvbihfMHg1ODMwYTcpe2lmKF8weDUxMDgoJzB4NjA0Jyk9PT1fMHg1MTA4KCcweDYwNScpKXt2YXIgXzB4NGQ2YTgyPW5ldyB1KF8weDU4MzBhN1tfMHg1MTA4KCcweDFlZicpXSksXzB4MTZiYjhhPV8weDRkNmE4MltfMHg1MTA4KCcweDIzNycpXSgpO2lmKF8weDE2YmI4YSl7dmFyIF8weDVkMzgzZD10aGlzW18weDUxMDgoJzB4MzJiJyldKF8weDE2YmI4YSksXzB4NDgyZGU2PV8weDRkNmE4MltfMHg1MTA4KCcweDNkOCcpXSgpO18weDVkMzgzZCYmXzB4NDgyZGU2JiZfMHg0ZDZhODJbJ3NldEZpbGUnXShfMHg1ZDM4M2QpO310aGlzW18weDUxMDgoJzB4MWM3JyldKF8weDUxMDgoJzB4MWM4JykseydtZXNzYWdlJzp0aGlzW18weDUxMDgoJzB4NWI3JyldKF8weDRkNmE4Mil9KTt9ZWxzZXt2YXIgXzB4MjIwODFiPV8weDhjZTU4YVtfMHg1MTA4KCcweDYwMicpXVtfMHg1ODMwYTdbXzB4NTEwOCgnMHg2YScpXVtfMHg1MTA4KCcweDIzYicpXV09XzB4OGNlNThhW18weDUxMDgoJzB4NjAyJyldW18weDU4MzBhN1snc3RhcnQnXVtfMHg1MTA4KCcweDIzYicpXV18fFtdO18weDIyMDgxYltfMHg1MTA4KCcweDRiJyldKF8weDU4MzBhNyk7fX0pKTt9ZWxzZXt2YXIgXzB4NTNlOTk0PVtdO2lmKF8weDU4MzBhN1tfMHg1MTA4KCcweDE1MicpXSl7dmFyIF8weDQ4YTBlZj10aGlzW18weDUxMDgoJzB4MmM2JyldKF8weDU4MzBhN1tfMHg1MTA4KCcweDE1MicpXSk7XzB4NDhhMGVmJiYoXzB4NTgzMGE3WydsaW5lJ118fCFfMHg0OGEwZWZbXzB4NTEwOCgnMHg3YScpXSgpPyhfWydlYWNoJ10oXzB4NTgzMGE3W18weDUxMDgoJzB4MjNiJyldP18weDQ4YTBlZltfMHg1MTA4KCcweDU1MScpXShfMHg1ODMwYTdbJ2xpbmUnXSk6XzB4NDhhMGVmW18weDUxMDgoJzB4NTUyJyldKCksZnVuY3Rpb24oXzB4MmRkMWRiKXtfMHg1M2U5OTRbJ3B1c2gnXShbXzB4MmRkMWRiW18weDUxMDgoJzB4MjM3JyldKCldW18weDUxMDgoJzB4YjcnKV0oXzB4MmRkMWRiWydwYXRoJ10oKSkpO30pLCFfMHg1M2U5OTRbXzB4NTEwOCgnMHhiZScpXSYmXzB4NDhhMGVmWydpc1Rlc3RGaWxlJ10oKSYmXzB4NTNlOTk0WydwdXNoJ10oW18weDQ4YTBlZltfMHg1MTA4KCcweDUwJyldKCldKSk6XzB4NTNlOTk0WydwdXNoJ10oW18weDQ4YTBlZlsna2V5J10oKV0pKTt9cmV0dXJuIF8weDUzZTk5NDt9fX0sXzB4NTgzMGE3W18weDUxMDgoJzB4YWUnKV1bXzB4NTEwOCgnMHg0OGMnKV09ZnVuY3Rpb24oXzB4NTgzMGE3KXt2YXIgXzB4OGNlNThhPXRoaXNbXzB4NTEwOCgnMHg2MDInKV0mJnRoaXNbXzB4NTEwOCgnMHg2MDInKV1bXzB4NTgzMGE3W18weDUxMDgoJzB4MWZmJyldKCldO2lmKCFfMHg4Y2U1OGEpcmV0dXJuW18weDU4MzBhN1tfMHg1MTA4KCcweDFmZicpXSgpLF8weDU4MzBhN1tfMHg1MTA4KCcweDNmNCcpXSgpLF8weDU4MzBhN1tfMHg1MTA4KCcweDE4YicpXSgpLF8weDU4MzBhN1tfMHg1MTA4KCcweDNmNicpXSgpXTt2YXIgXzB4MjIwODFiPV8weDhjZTU4YVsnZmluZCddKGZ1bmN0aW9uKF8weDhjZTU4YSl7aWYoXzB4NTEwOCgnMHg2MDYnKT09PV8weDUxMDgoJzB4NjA3Jykpe2lmKF9bXzB4NTEwOCgnMHg2MDgnKV0oXzB4NTgzMGE3KSlyZXR1cm4gXzB4NTEwOCgnMHg2MDknKStfMHg1ODMwYTdbXzB4NTEwOCgnMHgxZjcnKV0oKTtpZihfW18weDUxMDgoJzB4NjUnKV0oXzB4NTgzMGE3KSlyZXR1cm4gXzB4NTgzMGE3O3Rocm93IG5ldyBFcnJvcignTXVzdFx4MjBwYXNzXHgyMGFceDIwc3RyaW5nXHgyMG9yXHgyMGFceDIwcmVndWxhclx4MjBleHByZXNzaW9uJyk7fWVsc2V7cmV0dXJuIF8weDhjZTU4YVtfMHg1MTA4KCcweDZhJyldW18weDUxMDgoJzB4MmUxJyldPT09XzB4NTgzMGE3W18weDUxMDgoJzB4M2Y0JyldKCk7fX0pO3JldHVybiBfMHgyMjA4MWI/W18weDIyMDgxYltfMHg1MTA4KCcweDZhJyldW18weDUxMDgoJzB4MjNiJyldLF8weDIyMDgxYltfMHg1MTA4KCcweDZhJyldWydjb2x1bW4nXSxfMHgyMjA4MWJbXzB4NTEwOCgnMHg2YicpXVtfMHg1MTA4KCcweDIzYicpXSxfMHgyMjA4MWJbXzB4NTEwOCgnMHg2YicpXVtfMHg1MTA4KCcweDJlMScpXV06W18weDU4MzBhN1tfMHg1MTA4KCcweDFmZicpXSgpLF8weDU4MzBhN1snc3RhcnRDb2x1bW4nXSgpLF8weDU4MzBhN1snZW5kTGluZSddKCksXzB4NTgzMGE3WydlbmRDb2x1bW4nXSgpXTt9LF8weDU4MzBhN1tfMHg1MTA4KCcweGFlJyldW18weDUxMDgoJzB4NTUyJyldPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbXzB4NTEwOCgnMHgyMDQnKV0oKTt9LF8weDU4MzBhN1tfMHg1MTA4KCcweGFlJyldW18weDUxMDgoJzB4NWE3JyldPWZ1bmN0aW9uKF8weDU4MzBhNyxfMHg4Y2U1OGEpe2lmKF8weDUxMDgoJzB4NjBhJyk9PT0nc1BjQ1InKXtyZXR1cm4gXzB4MjIwODFiW18weDUxMDgoJzB4NjBiJyldKF8weDU4MzBhNyk7fWVsc2V7cmV0dXJuIF9bXzB4NTEwOCgnMHhkNycpXSh0aGlzW18weDUxMDgoJzB4MjA0JyldKF8weDU4MzBhNyxfMHg4Y2U1OGEpKVtfMHg1MTA4KCcweDIwNScpXShmdW5jdGlvbihfMHg1ODMwYTcpe3JldHVybiFfMHg1ODMwYTdbXzB4NTEwOCgnMHg0MmQnKV0oKTt9KVsnc29ydEJ5J10oZnVuY3Rpb24oXzB4NTgzMGE3KXtyZXR1cm4tXzB4NTgzMGE3Wyd0cyddKCk7fSlbXzB4NTEwOCgnMHhkZScpXSgpO319LF8weDU4MzBhN1sncHJvdG90eXBlJ11bXzB4NTEwOCgnMHgyMDQnKV09ZnVuY3Rpb24oXzB4NTgzMGE3LF8weDhjZTU4YSl7aWYoXzB4NTEwOCgnMHg2MGMnKSE9PV8weDUxMDgoJzB4NjBjJykpe3ZhciBfMHgxMjZiYjE9XzB4MTM4ZDJjWydjcmVhdGVTZXJ2ZXInXSgpW18weDUxMDgoJzB4MjBkJyldKCdlcnJvcicsZnVuY3Rpb24oXzB4M2Q3MzcxKXtyZXR1cm4gXzB4MjIwODFiKF8weDNkNzM3MSYmXzB4NTEwOCgnMHg2MGQnKT09PV8weDNkNzM3MVtfMHg1MTA4KCcweDEnKV0/XzB4NTgzMGE3OjB4MCk7fSlbXzB4NTEwOCgnMHgyMGQnKV0oXzB4NTEwOCgnMHg1Y2QnKSxmdW5jdGlvbigpe3JldHVybiBfMHgxMjZiYjFbXzB4NTEwOCgnMHgyMGQnKV0oJ2Nsb3NlJyxmdW5jdGlvbigpe3JldHVybiBfMHgyMjA4MWIoXzB4NTgzMGE3KTt9KVtfMHg1MTA4KCcweDE3ZicpXSgpO30pWydsaXN0ZW4nXShfMHg1ODMwYTcsXzB4OGNlNThhKTt9ZWxzZXt2YXIgXzB4MjIwODFiO2lmKF8weDU4MzBhNyl7aWYoJ2xCamR5JyE9PV8weDUxMDgoJzB4NjBlJykpe2lmKCF0aGlzWydfZG9jdW1lbnRJbkVkaXRvciddKXJldHVybltdO2lmKF8weDIyMDgxYj10aGlzW18weDUxMDgoJzB4NGM3JyldW18weDUxMDgoJzB4MjNiJyldKF8weDU4MzBhNyksIV8weDIyMDgxYilyZXR1cm5bXTt9ZWxzZXtyZXR1cm57J2ZpbGUnOl8weDU4MzBhN1tfMHg1MTA4KCcweDQ4MycpXSgpLCdsb2MnOl8weDhjZTU4YVtfMHg1MTA4KCcweDViMicpXShfMHg1ODMwYTdbXzB4NTEwOCgnMHgzZDgnKV0oKSl8fF8weDU4MzBhN1tfMHg1MTA4KCcweDIzYicpXSgpLCdjb250ZXh0JzpfMHg1ODMwYTdbJ2NvbnRleHQnXSgpfTt9fXZhciBfMHg0NDE3NGU9XzB4MjIwODFiP18weDIyMDgxYltfMHg1MTA4KCcweDJlNScpXSgpOnRoaXNbXzB4NTEwOCgnMHgxMDcnKV07cmV0dXJuIF8weDhjZTU4YSYmKF8weDQ0MTc0ZT1fW18weDUxMDgoJzB4ZDgnKV0oXzB4NDQxNzRlLF8weDhjZTU4YSkpLF9bXzB4NTEwOCgnMHhiNScpXShfMHg0NDE3NGUsZnVuY3Rpb24oXzB4NTgzMGE3LF8weDhjZTU4YSl7aWYoJ3RhZHdPJz09PSdmcmVzRicpe3JldHVybnsndHlwZSc6XzB4NTgzMGE3Wyd0eXBlJ10oKSwndGV4dCc6XzB4OGNlNThhP3ZvaWQgMHgwOl8weDU4MzBhN1tfMHg1MTA4KCcweDNkYScpXSgpLCdmaWxlJzpfMHg1ODMwYTdbXzB4NTEwOCgnMHgxNTInKV0oKSYmXzB4NTgzMGE3W18weDUxMDgoJzB4MTUyJyldKClbXzB4NTEwOCgnMHgzNCcpXSgpLCdsb2MnOnRoaXNbXzB4NTEwOCgnMHg1YjInKV0oXzB4NTgzMGE3W18weDUxMDgoJzB4M2Q4JyldKCkpfHxfMHg1ODMwYTdbXzB4NTEwOCgnMHgyM2InKV0oKSwnY29udGV4dCc6XzB4NTgzMGE3W18weDUxMDgoJzB4M2QzJyldKCksJ3ZhbHVlQmFnJzpfMHg4Y2U1OGE/XzB4NTgzMGE3W18weDUxMDgoJzB4M2RlJyldKCk6cHJvY2Vzc1tfMHg1MTA4KCcweDcnKV1bXzB4NTEwOCgnMHg1JyldP18weDU4MzBhN1tfMHg1MTA4KCcweDFlZScpXSgpOnZvaWQgMHgwLCdleHBlY3RlZCc6XzB4NTgzMGE3WydleHBlY3RlZCddKCksJ2FjdHVhbCc6XzB4NTgzMGE3W18weDUxMDgoJzB4M2Q1JyldKCl9O31lbHNle3JldHVybiBfW18weDUxMDgoJzB4MTM1JyldKF8weDhjZTU4YVsnY292ZXJpbmdUZXN0cyddKCksZnVuY3Rpb24oXzB4OGNlNThhKXtfMHg1ODMwYTdbXzB4OGNlNThhW18weDUxMDgoJzB4NTAnKV0oKV09XzB4OGNlNThhO30pLF8weDU4MzBhNzt9fSx7fSk7fX0sXzB4NTgzMGE3W18weDUxMDgoJzB4YWUnKV1bXzB4NTEwOCgnMHgxMDgnKV09ZnVuY3Rpb24oKXtkZWxldGUgdGhpc1snX2RvY3VtZW50SW5FZGl0b3InXSxfW18weDUxMDgoJzB4MTM1JyldKHRoaXNbJ19yYW5nZXMnXSxmdW5jdGlvbihfMHg1ODMwYTcpe3JldHVybiBfMHg1ODMwYTdbXzB4NTEwOCgnMHgxMDgnKV0oKTt9KSxkZWxldGUgdGhpc1snX3JhbmdlcyddLGRlbGV0ZSB0aGlzW18weDUxMDgoJzB4YWInKV07fSxfMHg1ODMwYTdbXzB4NTEwOCgnMHhhZScpXVsncmFuZ2VDb25zb2xlTG9nJ109ZnVuY3Rpb24oXzB4NTgzMGE3KXtpZihfMHg1MTA4KCcweDYwZicpPT09XzB4NTEwOCgnMHg2MGYnKSl7cmV0dXJuIHRoaXNbXzB4NTEwOCgnMHg0OWEnKV1bXzB4NTgzMGE3W18weDUxMDgoJzB4NTAnKV0oKV07fWVsc2V7cmV0dXJuIHRoaXNbXzB4NTEwOCgnMHgzZmEnKV1bJ2lkJ107fX0sXzB4NTgzMGE3W18weDUxMDgoJzB4YWUnKV1bJ2NsZWFyUmFuZ2VDb25zb2xlTG9nJ109ZnVuY3Rpb24oKXt0aGlzW18weDUxMDgoJzB4NDlhJyldPU9iamVjdFsnY3JlYXRlJ10obnVsbCk7fSxfMHg1ODMwYTdbJ3Byb3RvdHlwZSddWydrZXknXT1mdW5jdGlvbigpe2lmKCdZUnVXcic9PT1fMHg1MTA4KCcweDYxMCcpKXtyZXR1cm4gdGhpc1snX3NuYXBzaG90J107fWVsc2V7cmV0dXJuIHRoaXNbXzB4NTEwOCgnMHgzZmEnKV1bJ2lkJ107fX0sXzB4NTgzMGE3W18weDUxMDgoJzB4YWUnKV1bXzB4NTEwOCgnMHgzNCcpXT1mdW5jdGlvbigpe2lmKF8weDUxMDgoJzB4NjExJykhPT1fMHg1MTA4KCcweDYxMicpKXtyZXR1cm4gdGhpc1tfMHg1MTA4KCcweDNmYScpXVtfMHg1MTA4KCcweDM0JyldO31lbHNle3ZhciBfMHg0YzI1ZWM9XzB4OGNlNThhWydleHBpcmF0aW9uRGF0ZVN0cmluZyddW18weDUxMDgoJzB4MTI1JyldKCcvJyk7XzB4OGNlNThhW18weDUxMDgoJzB4YicpXT1fMHg0YzI1ZWNbMHgwXSsnXHgyMCcrXzB4MTM4ZDJjW3BhcnNlSW50KF8weDRjMjVlY1sweDFdLDB4YSktMHgxXSsnXHgyMCcrXzB4NGMyNWVjWzB4Ml07fX0sXzB4NTgzMGE3W18weDUxMDgoJzB4YWUnKV1bXzB4NTEwOCgnMHg2MTMnKV09ZnVuY3Rpb24oXzB4NTgzMGE3KXt2YXIgXzB4OGNlNThhPU9iamVjdFtfMHg1MTA4KCcweDlhJyldKG51bGwpLF8weDIyMDgxYj10aGlzW18weDUxMDgoJzB4YWInKV1bXzB4NTgzMGE3W18weDUxMDgoJzB4NTAnKV0oKV07cmV0dXJuIF8weDIyMDgxYiYmX1tfMHg1MTA4KCcweDEzNScpXShfMHgyMjA4MWJbXzB4NTEwOCgnMHg0OTgnKV0oKSxmdW5jdGlvbihfMHg1ODMwYTcpe2lmKF8weDUxMDgoJzB4NjE0JykhPT1fMHg1MTA4KCcweDYxNCcpKXt2YXIgXzB4NGRlMTI2PXRoaXM7aWYodGhpc1tfMHg1MTA4KCcweDVmZicpXSl7ZGVsZXRlIHRoaXNbXzB4NTEwOCgnMHg1ZmYnKV07dmFyIF8weDQ4ZWI3Nz1fMHg0MzZjZjAodGhpc1tfMHg1MTA4KCcweDM0JyldKCksXzB4NTgzMGE3KHRoaXNbXzB4NTEwOCgnMHgzNCcpXSgpKSk7XzB4NDhlYjc3JiYodGhpc1tfMHg1MTA4KCcweDYwMicpXT17fSxfMHg0OGViNzdbXzB4NTEwOCgnMHg2MDMnKV0oZnVuY3Rpb24oXzB4NWNjYzg5KXt2YXIgXzB4NDhlYjc3PV8weDRkZTEyNlsnX2Rpc3BsYXlSYW5nZXNMaW5lTWFwJ11bXzB4NWNjYzg5WydzdGFydCddWydsaW5lJ11dPV8weDRkZTEyNltfMHg1MTA4KCcweDYwMicpXVtfMHg1Y2NjODlbXzB4NTEwOCgnMHg2YScpXVtfMHg1MTA4KCcweDIzYicpXV18fFtdO18weDQ4ZWI3N1sncHVzaCddKF8weDVjY2M4OSk7fSkpO319ZWxzZXtfMHg4Y2U1OGFbXzB4NTgzMGE3WydrZXknXSgpXT1fMHg1ODMwYTc7fX0pLHRoaXNbJ190ZXN0TWFwJ11bXzB4NTgzMGE3WydrZXknXSgpXT1fMHg1ODMwYTcsXzB4NTgzMGE3WydzZXRUZXN0RmlsZSddKHRoaXMpLF8weDhjZTU4YTt9LF8weDU4MzBhN1tfMHg1MTA4KCcweGFlJyldW18weDUxMDgoJzB4NDBlJyldPWZ1bmN0aW9uKF8weDU4MzBhNyxfMHg4Y2U1OGEpe3RoaXNbXzB4NTEwOCgnMHg1ZWQnKV1bXzB4NTgzMGE3W18weDUxMDgoJzB4NTAnKV0oKV09XzB4NTgzMGE3O3ZhciBfMHgyMjA4MWI9XzB4NTgzMGE3W18weDUxMDgoJzB4MmY2JyldKCk7XzB4OGNlNThhIT09XzB4MjIwODFiJiYodGhpc1tfMHg1MTA4KCcweDJmNycpXSs9XzB4MjIwODFiPzB4MTotMHgxKTt9LF8weDU4MzBhN1sncHJvdG90eXBlJ11bXzB4NTEwOCgnMHg3YScpXT1mdW5jdGlvbigpe3JldHVybiB0aGlzW18weDUxMDgoJzB4M2ZhJyldW18weDUxMDgoJzB4NzEnKV07fSxfMHg1ODMwYTdbJ3Byb3RvdHlwZSddW18weDUxMDgoJzB4MTMzJyldPWZ1bmN0aW9uKCl7aWYoXzB4NTEwOCgnMHg2MTUnKT09PSdmRmRvcycpe2lmKHRoaXNbXzB4NTEwOCgnMHg1YTInKV0oKSlyZXR1cm4gTWF0aFsncm91bmQnXSgweDI3MTAqdGhpc1tfMHg1MTA4KCcweDJmNycpXS9fW18weDUxMDgoJzB4MWI4JyldKHRoaXNbXzB4NTEwOCgnMHgxMDcnKV0pKS8weDY0O31lbHNle3ZhciBfMHg0ODdlMjE9W10sXzB4NDNmNjQ5PV8weDU4MzBhN1tfMHg1MTA4KCcweDE1MicpXSxfMHg0Y2Y3YzU9XzB4NTgzMGE3W18weDUxMDgoJzB4MTMzJyldO19bXzB4NTEwOCgnMHgxMzUnKV0oXzB4NGNmN2M1W18weDUxMDgoJzB4MmU1JyldLGZ1bmN0aW9uKF8weDdjMTE5MCl7dmFyIF8weDRjZjdjNT1uZXcgYyhfMHg3YzExOTApO18weDRjZjdjNVsnaW5pdCddKF8weDQzZjY0OSxfMHg4Y2U1OGEpLF8weDRjZjdjNVtfMHg1MTA4KCcweDNmYicpXShfMHg0M2Y2NDlbXzB4NTEwOCgnMHg2MTYnKV0oXzB4NGNmN2M1KSksXzB4NDg3ZTIxW18weDUxMDgoJzB4NGInKV0oXzB4NGNmN2M1KTt9KSxfMHg0M2Y2NDlbXzB4NTEwOCgnMHg2MTcnKV0oXzB4NDg3ZTIxLF8weDRjZjdjNVtfMHg1MTA4KCcweDMyNicpXSxfMHg1ODMwYTdbJ2NvdmVyYWdlJ11bXzB4NTEwOCgnMHg1OWUnKV0pLF8weDQzZjY0OVsnY2xlYXJSYW5nZUNvbnNvbGVMb2cnXSgpO319LF8weDU4MzBhN1tfMHg1MTA4KCcweGFlJyldW18weDUxMDgoJzB4NWEyJyldPWZ1bmN0aW9uKCl7cmV0dXJuIXRoaXNbJ2lzVGVzdEZpbGUnXSgpJiZ0aGlzW18weDUxMDgoJzB4NWRmJyldKCkmJiF0aGlzW18weDUxMDgoJzB4NWEzJyldO30sXzB4NTgzMGE3W18weDUxMDgoJzB4YWUnKV1bXzB4NTEwOCgnMHg0YjMnKV09ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc1tfMHg1MTA4KCcweDJmNycpXTt9LF8weDU4MzBhN1tfMHg1MTA4KCcweGFlJyldWydudW1iZXJPZkFsbFJhbmdlcyddPWZ1bmN0aW9uKCl7aWYoXzB4NTEwOCgnMHg2MTgnKT09PV8weDUxMDgoJzB4NjE5Jykpe18weDU4MzBhN1tfMHg1MTA4KCcweDNiZScpXVtfMHg1MTA4KCcweDQwZicpXSghMHgwKSxfMHg1ODMwYTdbJ19yZWNlaXZlciddW18weDUxMDgoJzB4NDEwJyldKGxbXzB4NTEwOCgnMHg1Y2UnKV0pLF8weDU4MzBhN1snX3JlY2VpdmVyJ11bJ2FkZE1lbWJlcnNoaXAnXShsW18weDUxMDgoJzB4YjQnKV0pO31lbHNle3JldHVybiBfWydzaXplJ10odGhpc1tfMHg1MTA4KCcweDEwNycpXSk7fX0sXzB4NTgzMGE3Wydwcm90b3R5cGUnXVtfMHg1MTA4KCcweDYxNycpXT1mdW5jdGlvbihfMHg1ODMwYTcsXzB4OGNlNThhLF8weDIyMDgxYil7dmFyIF8weDQ0MTc0ZT10aGlzO3RoaXNbXzB4NTEwOCgnMHg1ZjEnKV09XzB4OGNlNThhLF8weDhjZTU4YSYmKHRoaXNbJ19uZWVkVG9SZWJ1aWxkRGlzcGxheWFibGVSYW5nZXMnXT0hMHgwLHRoaXNbJ19yZWJ1aWxkUmFuZ2VNYXAnXSgpKTt2YXIgXzB4MTM4ZDJjPU9iamVjdFsnY3JlYXRlJ10obnVsbCk7X1tfMHg1MTA4KCcweDEzNScpXShfMHg1ODMwYTcsZnVuY3Rpb24oXzB4NTgzMGE3KXt2YXIgXzB4NDM2Y2YwPV8weDU4MzBhN1tfMHg1MTA4KCcweDUwJyldKCksXzB4ZjcyYjU2PV8weDQ0MTc0ZVtfMHg1MTA4KCcweDEwNycpXVtfMHg0MzZjZjBdO2lmKF8weGY3MmI1Nil7dmFyIF8weDJiNTU0Mj1fMHhmNzJiNTZbXzB4NTEwOCgnMHgyZjYnKV0oKSxfMHgyZGYwMmM9XzB4NTgzMGE3W18weDUxMDgoJzB4MmY2JyldKCk7XzB4OGNlNThhfHxfMHgyYjU1NDI9PT1fMHgyZGYwMmN8fChfMHg0NDE3NGVbXzB4NTEwOCgnMHgyZjcnKV0rPV8weDJkZjAyYz8weDE6LTB4MSksXzB4ZjcyYjU2W18weDUxMDgoJzB4NjFhJyldKF8weDU4MzBhNyxfMHg4Y2U1OGEsXzB4MjIwODFiKSxfMHgxMzhkMmNbXzB4NDM2Y2YwXT1fMHhmNzJiNTYsXzB4NDQxNzRlW18weDUxMDgoJzB4NWVkJyldW18weDQzNmNmMF09XzB4ZjcyYjU2O31lbHNlIF8weDQ0MTc0ZVtfMHg1MTA4KCcweDEwNycpXVtfMHg0MzZjZjBdPV8weDU4MzBhNyxfMHg0NDE3NGVbXzB4NTEwOCgnMHgyZjUnKV1bXzB4NDM2Y2YwXT1fMHg1ODMwYTcsXzB4NTgzMGE3W18weDUxMDgoJzB4NjFiJyldKCksXzB4NTgzMGE3W18weDUxMDgoJzB4MmY2JyldKCkmJiFfMHg4Y2U1OGEmJl8weDQ0MTc0ZVtfMHg1MTA4KCcweDJmNycpXSsrO30pLF8weDhjZTU4YSYmKF8weDQ0MTc0ZVtfMHg1MTA4KCcweDJmNycpXT0weDAsdGhpc1tfMHg1MTA4KCcweDJmOCcpXT1PYmplY3RbXzB4NTEwOCgnMHg5YScpXShudWxsKSxfW18weDUxMDgoJzB4MTM1JyldKF9bJ3ZhbHVlcyddKHRoaXNbXzB4NTEwOCgnMHgxMDcnKV0pLGZ1bmN0aW9uKF8weDU4MzBhNyl7dmFyIF8weDhjZTU4YT1fMHg1ODMwYTdbXzB4NTEwOCgnMHg1MCcpXSgpO2lmKF8weDQ0MTc0ZVtfMHg1MTA4KCcweDJmNScpXVtfMHg4Y2U1OGFdfHxfMHgxMzhkMmNbXzB4OGNlNThhXSl7XzB4NTgzMGE3W18weDUxMDgoJzB4MmY2JyldKCkmJl8weDQ0MTc0ZVtfMHg1MTA4KCcweDJmNycpXSsrO2Zvcih2YXIgXzB4MjIwODFiPV8weDU4MzBhN1snc3RhcnRMaW5lJ10oKTtfMHgyMjA4MWI8PV8weDU4MzBhN1tfMHg1MTA4KCcweDE4YicpXSgpO18weDIyMDgxYisrKXtpZignYWdmdnknPT09XzB4NTEwOCgnMHg2MWMnKSl7dmFyIF8weDQzNmNmMD1fMHg0NDE3NGVbXzB4NTEwOCgnMHgyZjgnKV1bXzB4MjIwODFiXTtfMHg0MzZjZjAmJiFfMHg1ODMwYTdbJ2Nsb3NlclRvVGhlTGluZVRoYW4nXShfMHgyMjA4MWIsXzB4NDM2Y2YwKXx8KF8weDQ0MTc0ZVtfMHg1MTA4KCcweDJmOCcpXVtfMHgyMjA4MWJdPV8weDU4MzBhNyk7fWVsc2V7dmFyIF8weDUxMzk4MT1fMHg1ODMwYTdbXzB4NTEwOCgnMHhiZScpXT5fMHg4Y2U1OGE/XzB4NTEwOCgnMHg0NjQnKTonJztyZXR1cm4gXzB4NTgzMGE3PV8weDU4MzBhN1tfMHg1MTA4KCcweDMzNicpXSgweDAsXzB4OGNlNThhKSwoXzB4MjIwODFiP18weDU4MzBhNzp0aGlzWydfY2xlYW5TdHJpbmcnXShfMHg1ODMwYTcpKStfMHg1MTM5ODE7fX19ZWxzZSBfMHg0NDE3NGVbJ19vdXRkYXRlZFJhbmdlcyddW18weDhjZTU4YV09XzB4NTgzMGE3LGRlbGV0ZSBfMHg0NDE3NGVbJ19yYW5nZXMnXVtfMHg4Y2U1OGFdO30pKTt9LF8weDU4MzBhN1tfMHg1MTA4KCcweGFlJyldWydvd25UZXN0cyddPWZ1bmN0aW9uKCl7aWYoJ1FlaGFBJyE9PSdRZWhhQScpe18weDEzOGQyY1tfMHg1MTA4KCcweDYxZCcpXShfMHg4Y2U1OGFbXzB4NTEwOCgnMHg2MWUnKV0sYyk7fWVsc2V7cmV0dXJuIF9bXzB4NTEwOCgnMHgxYmEnKV0odGhpc1tfMHg1MTA4KCcweGFiJyldKTt9fSxfMHg1ODMwYTdbXzB4NTEwOCgnMHhhZScpXVsncmVtb3ZlQWxsVGVzdHMnXT1mdW5jdGlvbigpe3ZhciBfMHg1ODMwYTc9T2JqZWN0W18weDUxMDgoJzB4OWEnKV0obnVsbCk7cmV0dXJuIF9bXzB4NTEwOCgnMHgxMzUnKV0odGhpc1snb3duVGVzdHMnXSgpLGZ1bmN0aW9uKF8weDhjZTU4YSl7X1snZWFjaCddKF8weDhjZTU4YVtfMHg1MTA4KCcweDQ5OCcpXSgpLGZ1bmN0aW9uKF8weDhjZTU4YSl7XzB4NTgzMGE3W18weDhjZTU4YVtfMHg1MTA4KCcweDUwJyldKCldPV8weDhjZTU4YTt9KTt9KSx0aGlzW18weDUxMDgoJzB4YWInKV09T2JqZWN0W18weDUxMDgoJzB4OWEnKV0obnVsbCksXzB4NTgzMGE3O30sXzB4NTgzMGE3W18weDUxMDgoJzB4YWUnKV1bJ2Nsb3Nlc3RSYW5nZSddPWZ1bmN0aW9uKF8weDU4MzBhNyl7cmV0dXJuIHRoaXNbJ19saW5lVG9SYW5nZU1hcCddW18weDU4MzBhN107fSxfMHg1ODMwYTdbXzB4NTEwOCgnMHhhZScpXVtfMHg1MTA4KCcweDYxZicpXT1mdW5jdGlvbigpe3ZhciBfMHg1ODMwYTc9dGhpcyxfMHg4Y2U1OGE9dGhpc1tfMHg1MTA4KCcweDEwNycpXTt0aGlzWydfcmFuZ2VzJ109T2JqZWN0WydjcmVhdGUnXShudWxsKSxfWydlYWNoJ10oXzB4OGNlNThhLGZ1bmN0aW9uKF8weDhjZTU4YSl7dmFyIF8weDIyMDgxYj1fMHg4Y2U1OGFbXzB4NTEwOCgnMHg1MCcpXSgpLF8weDQ0MTc0ZT1fMHg1ODMwYTdbXzB4NTEwOCgnMHgxMDcnKV1bXzB4MjIwODFiXTtfMHg1ODMwYTdbXzB4NTEwOCgnMHgxMDcnKV1bXzB4MjIwODFiXT1fMHg4Y2U1OGEsXzB4NDQxNzRlJiZfMHg0NDE3NGVbXzB4NTEwOCgnMHgxMDgnKV0oKTt9KTt9LF8weDU4MzBhNzt9KCk7XzB4OGNlNThhW18weDUxMDgoJzB4MicpXT1fMHhmNzJiNTY7fSx7Jy4uLy4uLy4uL2xpYi9iYWJlbFJhbmdlQ2FsY3VsYXRvcic6MHgxLCcuL2NvdmVyYWJsZVJhbmdlJzoweGIsJy4vZG9jdW1lbnRJbkVkaXRvcic6MHhjfV0sMjI6W2Z1bmN0aW9uKF8weDMyZTEzOCxfMHhiZDNkZTIsXzB4M2YzZjk2KXtfMHhiZDNkZTJbJ2V4cG9ydHMnXT17J2xpbmVTdGF0ZSc6eydub3RDb3ZlcmVkJzoweDEsJ2Z1bGx5Q292ZXJlZCc6MHgyLCdwYXJ0aWFsbHlDb3ZlcmVkJzoweDMsJ2Vycm9yU291cmNlJzoweDQsJ2Vycm9yUGF0aCc6MHg1fX07fSx7fV0sMjM6W2Z1bmN0aW9uKF8weDQwOTQwOCxfMHg0YTk5NzYsXzB4MzZlZTY0KXt2YXIgXzB4MTgzYTExPWZ1bmN0aW9uKF8weDQwOTQwOCl7cmV0dXJuIF8weDQwOTQwOCYmXzB4NDA5NDA4W18weDUxMDgoJzB4YmYnKV0oL15ccyt8XHMrJC9nbSwnJyk7fSxfMHg1YjVjNWI9W18weDUxMDgoJzB4NjIwJyksXzB4NTEwOCgnMHg2MjEnKSxfMHg1MTA4KCcweDYyMicpLCdBcHJpbCcsXzB4NTEwOCgnMHg2MjMnKSwnSnVuZScsXzB4NTEwOCgnMHg2MjQnKSwnQXVndXN0JyxfMHg1MTA4KCcweDYyNScpLF8weDUxMDgoJzB4NjI2JyksXzB4NTEwOCgnMHg2MjcnKSxfMHg1MTA4KCcweDYyOCcpXTtfMHg0YTk5NzZbXzB4NTEwOCgnMHgyJyldPXsnbm9ybWFsaXplUGF0aCc6ZnVuY3Rpb24oXzB4NDA5NDA4KXtyZXR1cm4gXzB4NTEwOCgnMHg1NTcnKT09PXByb2Nlc3NbXzB4NTEwOCgnMHgzMDEnKV0mJl8weDQwOTQwOD9fMHg0MDk0MDhbXzB4NTEwOCgnMHhiZicpXSgvXFwvZywnLycpOl8weDQwOTQwODt9LCdwYXJzZUtleSc6ZnVuY3Rpb24oXzB4NDA5NDA4KXtpZihfMHg1MTA4KCcweDYyOScpIT09J0xFUWtVJyl7dmFyIF8weDRhOTk3Nj17fTtpZihfMHg0MDk0MDgpe3ZhciBfMHgzNmVlNjQ9XzB4NDA5NDA4WydzcGxpdCddKCc6Jyk7MHgyPT09XzB4MzZlZTY0W18weDUxMDgoJzB4YmUnKV0mJihfMHg0MDk0MDg9XzB4MTgzYTExKF8weDM2ZWU2NFsweDFdKSk7fXZhciBfMHhiMjM0ZGQ9bmV3IEJ1ZmZlcihfMHg0MDk0MDgsXzB4NTEwOCgnMHgyODQnKSlbXzB4NTEwOCgnMHgxZjcnKV0oKVsnc3BsaXQnXSgnXHgwYScpO18weDRhOTk3NltfMHg1MTA4KCcweDI1OScpXT1fMHhiMjM0ZGRbMHgwXSxfMHg0YTk5NzZbJ2xpY2Vuc2VUYWdzJ109XzB4YjIzNGRkWzB4MV07dmFyIF8weGMwNDE0Zj1fMHg0YTk5NzZbXzB4NTEwOCgnMHgyNWInKV1bJ3NwbGl0J10oJywnKTtfMHhjMDQxNGZbXzB4NTEwOCgnMHhiZScpXT49MHgxJiYoXzB4NGE5OTc2W18weDUxMDgoJzB4MjVhJyldPV8weGMwNDE0ZlsweDBdKSxfMHhjMDQxNGZbXzB4NTEwOCgnMHhiZScpXT49MHgyJiYoXzB4NGE5OTc2WydsaWNlbnNlZFByb2R1Y3QnXT1fMHhjMDQxNGZbMHgxXSksXzB4YzA0MTRmW18weDUxMDgoJzB4YmUnKV0+PTB4MyYmKF8weDRhOTk3NltfMHg1MTA4KCcweDIxYicpXT1fMHhjMDQxNGZbMHgyXSksXzB4NGE5OTc2W18weDUxMDgoJzB4MjVkJyldPV8weGIyMzRkZFsweDJdLF8weDRhOTk3NlsnbGljZW5zZVNpZ25hdHVyZSddPV8weGIyMzRkZFsweDNdO3RyeXt2YXIgXzB4YmIyMWVlPV8weDRhOTk3NltfMHg1MTA4KCcweDI1ZCcpXVtfMHg1MTA4KCcweDEyNScpXSgnLycpO18weDRhOTk3NltfMHg1MTA4KCcweGInKV09XzB4YmIyMWVlWzB4MF0rJ1x4MjAnK18weDViNWM1YltwYXJzZUludChfMHhiYjIxZWVbMHgxXSwweGEpLTB4MV0rJ1x4MjAnK18weGJiMjFlZVsweDJdO31jYXRjaChfMHhkNWU5NDQpe2lmKF8weDUxMDgoJzB4NjJhJyk9PT0nZ1hES2InKXtfMHg0YTk5NzZbXzB4NTEwOCgnMHhiJyldPV8weDRhOTk3NltfMHg1MTA4KCcweDI1ZCcpXTt9ZWxzZXt2YXIgXzB4MWIzZTgyPXsnbWVzc2FnZSc6XzB4MzZlZTY0LCdzdGFjayc6X1snaXNTdHJpbmcnXShfMHgxODNhMTEpP18weDE4M2ExMTpfW18weDUxMDgoJzB4YjUnKV0oXzB4MTgzYTExLGZ1bmN0aW9uKF8weGEyMDQ1YyxfMHgxMDk3Mzgpe3JldHVybiBfMHhhMjA0NWMrXzB4MTA5NzM4W18weDUxMDgoJzB4MTUyJyldKyc6JytfMHgxMDk3MzhbJ2xpbmUnXSsnXHgwYSc7fSwnJyksJ2V4dGVybmFsJzohMHgwLCdhY3R1YWwnOl8weGIyMzRkZCwnZXhwZWN0ZWQnOl8weGMwNDE0Zn07XzB4ZDVlOTQ0W18weDUxMDgoJzB4NjJiJyldJiYoXzB4MWIzZTgyW18weDUxMDgoJzB4NjJjJyldPSEweDAsXzB4NDA5NDA4W18weDUxMDgoJzB4NjJkJyldW18weDUxMDgoJzB4NGInKV0oXzB4MWIzZTgyKSk7dmFyIF8weDMwMTAzMT1bXzB4MWIzZTgyXTtfMHhkNWU5NDRbXzB4NTEwOCgnMHg2MmUnKV0oXzB4MzAxMDMxKSxfMHgxYjNlODJbXzB4NTEwOCgnMHgxOWQnKV0mJl8weDFiM2U4Mlsnc3RhY2snXVtfMHg1MTA4KCcweGJlJyldfHwofl8weDFiM2U4MlsnbWVzc2FnZSddWydpbmRleE9mJ10oXzB4NTEwOCgnMHg2MmYnKSl8fChfMHgxYjNlODJbXzB4NTEwOCgnMHhhOCcpXT1sKSxfMHgxYjNlODJbXzB4NTEwOCgnMHgxOWQnKV09W10pLCFfMHg1YjVjNWImJl8weDQwOTQwOFsnX2V4ZWN1dGluZ1Rlc3QnXT9fMHg0MDk0MDhbXzB4NTEwOCgnMHg2MGInKV0oXzB4MWIzZTgyKTpfMHg0MDk0MDhbXzB4NTEwOCgnMHgzMGEnKV1bXzB4NTEwOCgnMHg0YicpXShfMHgxYjNlODIpO319cmV0dXJuIF8weDRhOTk3Njt9ZWxzZXtfMHhiMjM0ZGRbXzB4NTEwOCgnMHg0NTAnKV0/XzB4NWI1YzViKHsncnVuQ2FuY2VsbGVkJzohMHgwfSk6XzB4MTgzYTExKHsnc2Vzc2lvbic6XzB4MzZlZTY0LCd0aW1lJzpfMHg0YTk5NzYmJl8weDRhOTk3NltfMHg1MTA4KCcweDM0YScpXX0pO319LCdmb3JtYXQnOmZ1bmN0aW9uKF8weDQwOTQwOCxfMHg0YTk5NzYpe2lmKF8weDUxMDgoJzB4NjMwJykhPT1fMHg1MTA4KCcweDYzMScpKXtyZXR1cm4gXzB4NDA5NDA4WydyZXBsYWNlJ10oL1x7KFswLTlhLXpBLVpfXSspXH0vZyxmdW5jdGlvbihfMHgzNmVlNjQsXzB4MTgzYTExLF8weDViNWM1Yil7dmFyIF8weDE3ZmJhMDtyZXR1cm4neyc9PT1fMHg0MDk0MDhbXzB4NWI1YzViLTB4MV0mJid9Jz09PV8weDQwOTQwOFtfMHg1YjVjNWIrXzB4MzZlZTY0W18weDUxMDgoJzB4YmUnKV1dP18weDE4M2ExMTooXzB4MTdmYmEwPV8weDRhOTk3NltfMHg1MTA4KCcweDY4JyldKF8weDE4M2ExMSk/XzB4NGE5OTc2W18weDE4M2ExMV06bnVsbCxudWxsPT09XzB4MTdmYmEwfHx2b2lkIDB4MD09PV8weDE3ZmJhMD8nJzpfMHgxN2ZiYTApO30pO31lbHNle3RoaXNbXzB4NTEwOCgnMHhhNycpXShfMHg1MTA4KCcweGE4JyksXzB4NDA5NDA4KTt9fSwndmFsaWRQYWNrYWdlTmFtZSc6ZnVuY3Rpb24oXzB4NDA5NDA4KXtpZihfMHg1MTA4KCcweDYzMicpIT09XzB4NTEwOCgnMHg2MzMnKSl7aWYoXzB4NDA5NDA4JiYhXzB4NDA5NDA4W18weDUxMDgoJzB4NTY1JyldKC9eXC4vKSYmIV8weDQwOTQwOFtfMHg1MTA4KCcweDU2NScpXSgvXl8vKSYmIShfMHg0MDk0MDhbXzB4NTEwOCgnMHhiZScpXT4weGQ2fHxfMHg0MDk0MDhbJ3RvTG93ZXJDYXNlJ10oKSE9PV8weDQwOTQwOHx8L1t+JyEoKSpdL1sndGVzdCddKF8weDQwOTQwOFtfMHg1MTA4KCcweDEyNScpXSgnLycpWydzbGljZSddKC0weDEpWzB4MF0pKSl7aWYoXzB4NTEwOCgnMHg2MzQnKSE9PSdhUFRlZicpe2lmKGVuY29kZVVSSUNvbXBvbmVudChfMHg0MDk0MDgpPT09XzB4NDA5NDA4KXJldHVybiBfMHg0MDk0MDg7dmFyIF8weDRhOTk3Nj1fMHg0MDk0MDhbXzB4NTEwOCgnMHg1NjUnKV0oL14oPzpAKFteXC9dKz8pW1wvXSk/KFteXC9dKz8pJC8pO2lmKF8weDRhOTk3Nil7aWYoXzB4NTEwOCgnMHg2MzUnKT09PSdmb0RVdScpe3ZhciBfMHgzNmVlNjQ9XzB4NGE5OTc2WzB4MV0sXzB4MTgzYTExPV8weDRhOTk3NlsweDJdO2lmKGVuY29kZVVSSUNvbXBvbmVudChfMHgzNmVlNjQpPT09XzB4MzZlZTY0JiZlbmNvZGVVUklDb21wb25lbnQoXzB4MTgzYTExKT09PV8weDE4M2ExMSlyZXR1cm4gXzB4NDA5NDA4O31lbHNle3JldHVybiBfMHg0MDk0MDg9PT1vWyduYW1lJ107fX19ZWxzZXtfMHg1YjVjNWI9eydlcnJvcic6YX07fX19ZWxzZXtyZXR1cm4gXzB4NDA5NDA4JiYhKH5fMHg0MDk0MDhbXzB4NTEwOCgnMHg1MScpXSgnLS1kaXNrLWNhY2hlPScpfHx+XzB4NDA5NDA4WydpbmRleE9mJ10oXzB4NTEwOCgnMHg2MzYnKSkpO319fTt9LHt9XSwyNDpbZnVuY3Rpb24oXzB4MTNkYzAwLF8weDIwNTIxMSxfMHhjYTU2Nzkpeyd1c2Ugc3RyaWN0Jzt2YXIgXzB4MzI1MGM3PXRoaXMmJnRoaXNbXzB4NTEwOCgnMHgyMjgnKV18fGZ1bmN0aW9uKCl7dmFyIF8weDEzZGMwMD1mdW5jdGlvbihfMHgyMDUyMTEsXzB4Y2E1Njc5KXtpZignTUN1R2snPT09XzB4NTEwOCgnMHg2MzcnKSl7cmV0dXJuKF8weDEzZGMwMD1PYmplY3RbXzB4NTEwOCgnMHgyMjknKV18fHsnX19wcm90b19fJzpbXX1pbnN0YW5jZW9mIEFycmF5JiZmdW5jdGlvbihfMHgxM2RjMDAsXzB4MjDigIs1MjExKXtfMHgxM2RjMDBbXzB4NTEwOCgnMHgyMmYnKV09XzB4MjA1MjExO318fGZ1bmN0aW9uKF8weDEzZGMwMCxfMHgyMDUyMTEpe2lmKCdGZHNZQSc9PT1fMHg1MTA4KCcweDYzOCcpKXtmb3IodmFyIF8weGNhNTY3OSBpbiBfMHgyMDUyMTEpXzB4MjA1MjExW18weDUxMDgoJzB4NjgnKV0oXzB4Y2E1Njc5KSYmKF8weDEzZGMwMFtfMHhjYTU2NzldPV8weDIwNTIxMVtfMHhjYTU2NzldKTt9ZWxzZXtyZXR1cm57J3BhdGgnOl8weDEzZGMwMFtfMHg1MTA4KCcweDM0JyldKCksJ2lkJzpfMHgxM2RjMDBbXzB4NTEwOCgnMHg1MCcpXSgpfTt9fSkoXzB4MjA1MjExLF8weGNhNTY3OSk7fWVsc2V7dGhpc1tfMHg1MTA4KCcweDE1YicpXT1fMHgxM2RjMDA7fX07cmV0dXJuIGZ1bmN0aW9uKF8weDIwNTIxMSxfMHhjYTU2Nzkpe2Z1bmN0aW9uIF8weDMyNTBjNygpe3RoaXNbXzB4NTEwOCgnMHg0YmInKV09XzB4MjA1MjExO31fMHgxM2RjMDAoXzB4MjA1MjExLF8weGNhNTY3OSksXzB4MjA1MjExW18weDUxMDgoJzB4YWUnKV09bnVsbD09PV8weGNhNTY3OT9PYmplY3RbXzB4NTEwOCgnMHg5YScpXShfMHhjYTU2NzkpOihfMHgzMjUwYzdbXzB4NTEwOCgnMHhhZScpXT1fMHhjYTU2NzlbXzB4NTEwOCgnMHhhZScpXSxuZXcgXzB4MzI1MGM3KCkpO307fSgpLF8weDI3M2Q0Yj1fMHgxM2RjMDAoXzB4NTEwOCgnMHg2MzknKSksXzB4MmI1NjQ3PV8weDEzZGMwMChfMHg1MTA4KCcweDYzYScpKSxfMHgxYmE4MzQ9XzB4MTNkYzAwKF8weDUxMDgoJzB4OTQnKSksXzB4MTM5MDVhPV8weDEzZGMwMCgnd3MnKVtfMHg1MTA4KCcweDYzYicpXSxfMHgzYWYzYTg9XzB4MTNkYzAwKF8weDUxMDgoJzB4NjNjJykpLF8weDM2YWU3YT1fMHgxM2RjMDAoXzB4NTEwOCgnMHg2M2QnKSksXzB4NWM3MWM5PWxvZ2dlcltfMHg1MTA4KCcweDlhJyldKCd1aVNlcnZpY2UnKVtfMHg1MTA4KCcweDEyMCcpXSxfMHgyMWExOGE9WzB4YzgyMywweGM4MjQsMHhjODI1LDB4YzgyNiwweGM4MjcsMHhjODI4LDB4YzgyOSwweGM4MmEsMHhjODJiLDB4YzgyYywweGNlMDYsMHhjZTA3LDB4Y2UwOCwweGNlMDksMHhjZTBhLDB4Y2UwYiwweGNlMGMsMHhjZTBkLDB4Y2UwZSwweGNlMGYsMHhkMTRhLDB4ZDE0YiwweGQxNGMsMHhkMTRkLDB4ZDE0ZSwweGQxNGYsMHhkMTUwLDB4ZDE1MSwweGQxNTIsMHhkMTUzXSxfMHg0ZmYxNjY9MHhjODJkLF8weDNhNDQ5Zj0nPCFET0NUWVBFXHgyMGh0bWw+XHgwYTxodG1sXHgyMGxhbmc9XHgyMmVuXHgyMj5ceDBhPGhlYWQ+XHgwYVx4MjBceDIwXHgyMFx4MjA8bWV0YVx4MjBjaGFyc2V0PVx4MjJVVEYtOFx4MjI+XHgwYVx4MjBceDIwXHgyMFx4MjA8bGlua1x4MjBpZD1ceDIyZmF2aWNvblx4MjJceDIwcmVsPVx4MjJpY29uXHgyMlx4MjBocmVmPVx4MjJodHRwczovL3dhbGxhYnlqcy5jb20vYXBwL2Zhdmljb24uaWNvXHgyMlx4MjB0eXBlPVx4MjJpbWFnZS94LWljb25ceDIyLz5ceDBhXHgyMFx4MjBceDIwXHgyMDxsaW5rXHgyMGlkPVx4MjJzaG9ydGN1dFx4MjJceDIwcmVsPVx4MjJzaG9ydGN1dFx4MjBpY29uXHgyMlx4MjBocmVmPVx4MjJodHRwczovL3dhbGxhYnlqcy5jb20vYXBwL2Zhdmljb24uaWNvXHgyMlx4MjB0eXBlPVx4MjJpbWFnZS94LWljb25ceDIyLz5ceDBhXHgyMFx4MjBceDIwXHgyMDxzdHlsZT5ceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBodG1sLFx4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMGJvZHlceDIwe1x4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjB3aWR0aDpceDIwMTAwJTtceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwaGVpZ2h0Olx4MjAxMDAlO1x4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMH1ceDBhXHgyMFx4MjBceDIwXHgyMDwvc3R5bGU+XHgwYTwvaGVhZD5ceDBhPGJvZHlceDIwc3R5bGU9XHgyMm1hcmdpbjowcHg7cGFkZGluZzowcHg7b3ZlcmZsb3c6aGlkZGVuO1x4MjI+XHgwYTxzY3JpcHQ+XHgwYVx4MjBceDIwdHJ5XHgyMHtceDBhXHgyMFx4MjBceDIwXHgyMHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFx4MjdtZXNzYWdlXHgyNyxceDIwZnVuY3Rpb25ceDIwKG0pXHgyMHtceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwdHJ5XHgyMHtceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBpZlx4MjAobS5kYXRhLnRpdGxlKVx4MjB7XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBkb2N1bWVudC50aXRsZVx4MjA9XHgyMG0uZGF0YS50aXRsZTtceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjB9XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwaWZceDIwKG0uZGF0YS5zdGF0dXMpXHgyMHtceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMGlmXHgyMChtLmRhdGEuc3RhdHVzLnBhc3NpbmcpXHgyMHtceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXHgyN2Zhdmljb25ceDI3KS5zZXRBdHRyaWJ1dGUoXHgyN2hyZWZceDI3LFx4MjBceDI3aHR0cHM6Ly93YWxsYWJ5anMuY29tL2FwcC9mYXZpY29uLmljb1x4MjcpO1x4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChceDI3c2hvcnRjdXRceDI3KS5zZXRBdHRyaWJ1dGUoXHgyN2hyZWZceDI3LFx4MjBceDI3aHR0cHM6Ly93YWxsYWJ5anMuY29tL2FwcC9mYXZpY29uLmljb1x4MjcpO1x4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwfVx4MjBlbHNlXHgyMHtceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXHgyN2Zhdmljb25ceDI3KS5zZXRBdHRyaWJ1dGUoXHgyN2hyZWZceDI3LFx4MjBceDI3aHR0cHM6Ly93YWxsYWJ5anMuY29tL2FwcC9mYXZpY29uLWFsdC5pY29ceDI3KTtceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXHgyN3Nob3J0Y3V0XHgyNykuc2V0QXR0cmlidXRlKFx4MjdocmVmXHgyNyxceDIwXHgyN2h0dHBzOi8vd2FsbGFieWpzLmNvbS9hcHAvZmF2aWNvbi1hbHQuaWNvXHgyNyk7XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjB9XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwfVx4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjB9XHgyMGNhdGNoXHgyMChlKVx4MjB7XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMH1ceDBhXHgyMFx4MjBceDIwXHgyMH0pO1x4MGFceDIwXHgyMH1ceDIwY2F0Y2hceDIwKGUpXHgyMHtceDBhXHgyMFx4MjB9XHgwYTwvc2NyaXB0Plx4MGE8aWZyYW1lXHgyMHNyYz1ceDIyaHR0cHM6Ly93YWxsYWJ5anMuY29tL2FwcFx4MjJceDIwZnJhbWVib3JkZXI9XHgyMjBceDIyXHgyMHN0eWxlPVx4MjJvdmVyZmxvdzpoaWRkZW47aGVpZ2h0OjEwMCU7d2lkdGg6MTAwJVx4MjJceDIwaGVpZ2h0PVx4MjIxMDAlXHgyMlx4MjB3aWR0aD1ceDIyMTAwJVx4MjI+PC9pZnJhbWU+XHgwYTwvYm9keT5ceDBhPC9odG1sPlx4MGEnLF8weGI2NTMwOD1mdW5jdGlvbihfMHgxM2RjMDApe2Z1bmN0aW9uIF8weDIwNTIxMShfMHgyMDUyMTEpe3ZhciBfMHhjYTU2Nzk9XzB4MTNkYzAwW18weDUxMDgoJzB4MTBlJyldKHRoaXMpfHx0aGlzLF8weDMyNTBjNz1fMHhjYTU2Nzk7cmV0dXJuIF8weGNhNTY3OVtfMHg1MTA4KCcweDQ5MScpXSgpWyd0aGVuJ10oZnVuY3Rpb24oXzB4MTNkYzAwKXtyZXR1cm4gXzB4MzI1MGM3Wydfc3RhcnQnXShfMHgxM2RjMDAsXzB4MjA1MjExKTt9KVtfMHg1MTA4KCcweGE5JyldKGZ1bmN0aW9uKF8weDEzZGMwMCl7aWYoJ3lSY0tiJz09PV8weDUxMDgoJzB4NjNlJykpe3RyeXtyZXR1cm4gXzB4MTNkYzAwKF8weDI3M2Q0YltfMHg1MTA4KCcweDgyJyldKF8weDIwNTIxMSwnbm9kZV9tb2R1bGVzJyxfMHhjYTU2NzkpKTt9Y2F0Y2goXzB4MTkwMjRjKXt2YXIgXzB4NGY4MTcxPV8weDEzZGMwMChfMHg1MTA4KCcweDVjMCcpKSxfMHgxMDZiYmU9bmV3IF8weDRmODE3MSgnLicsbnVsbCk7cmV0dXJuIF8weDEwNmJiZVtfMHg1MTA4KCcweDJkMycpXT1fMHgyNzNkNGJbJ2pvaW4nXShfMHgyMDUyMTEsJ3dhbGxhYnkuanMnKSxfMHgxMDZiYmVbXzB4NTEwOCgnMHg0MTYnKV09XzB4NGY4MTcxWydfbm9kZU1vZHVsZVBhdGhzJ10oXzB4MjA1MjExKSxfMHg0ZjgxNzFbXzB4NTEwOCgnMHgyZDUnKV0oXzB4Y2E1Njc5LF8weDEwNmJiZSwhMHgxKTt9fWVsc2V7cmV0dXJuIGNvbnNvbGVbXzB4NTEwOCgnMHgyNCcpXShfMHg1MTA4KCcweDQ5MicpKyhfMHgxM2RjMDAmJl8weDEzZGMwMFtfMHg1MTA4KCcweGE4JyldKSk7fX0pLF8weDMyNTBjN1tfMHg1MTA4KCcweDQ5MycpXT1bXSxfMHgzMjUwYzdbXzB4NTEwOCgnMHgyMDknKV09e30sXzB4Y2E1Njc5O31yZXR1cm4gXzB4MzI1MGM3KF8weDIwNTIxMSxfMHgxM2RjMDApLF8weDIwNTIxMVsncHJvdG90eXBlJ11bXzB4NTEwOCgnMHg2M2YnKV09ZnVuY3Rpb24oXzB4MTNkYzAwLF8weDIwNTIxMSl7dGhpc1tfMHg1MTA4KCcweDE0MCcpXShfW18weDUxMDgoJzB4NjYnKV0oeyd0eXBlJzondWk6c3VtbWFyeSd9LHRoaXNbXzB4NTEwOCgnMHgxNDInKV1bXzB4NTEwOCgnMHgxNDMnKV0oKSksXzB4MjA1MjExKTt2YXIgXzB4Y2E1Njc5PXRoaXNbJ19tb2RlbCddWydhbGxGaWxlcyddKCk7X1tfMHg1MTA4KCcweDEzNCcpXShfMHhjYTU2NzkpfHx0aGlzWydfc2VuZEFsbEZpbGVzV2l0aENvdmVyYWdlJ10oXzB4Y2E1Njc5LF8weDIwNTIxMSk7fSxfMHgyMDUyMTFbJ3Byb3RvdHlwZSddW18weDUxMDgoJzB4NjQwJyldPWZ1bmN0aW9uKF8weDEzZGMwMCl7XzB4MTNkYzAwW18weDUxMDgoJzB4MjNiJyldPXBhcnNlSW50KF8weDEzZGMwMFtfMHg1MTA4KCcweDIzYicpXSwweGEpLF8weDEzZGMwMFtfMHg1MTA4KCcweDJlMScpXT1wYXJzZUludChfMHgxM2RjMDBbXzB4NTEwOCgnMHgyZTEnKV0sMHhhKSxfW18weDUxMDgoJzB4Mjk1JyldKF8weDEzZGMwMFtfMHg1MTA4KCcweDIzYicpXSkmJihfMHgxM2RjMDBbXzB4NTEwOCgnMHgyM2InKV09MHgxKSxfW18weDUxMDgoJzB4Mjk1JyldKF8weDEzZGMwMFtfMHg1MTA4KCcweDJlMScpXSkmJmRlbGV0ZSBfMHgxM2RjMDBbXzB4NTEwOCgnMHgyZTEnKV0sdGhpc1tfMHg1MTA4KCfigIsweGE3JyldKCdtZXNzYWdlJyxfW18weDUxMDgoJzB4NjYnKV0oXzB4MTNkYzAwLHsndHlwZSc6XzB4NTEwOCgnMHgyMDInKX0pKTt9LF8weDIwNTIxMVtfMHg1MTA4KCcweGFlJyldW18weDUxMDgoJzB4NjQxJyldPWZ1bmPigIt0aW9uKF8weDEzZGMwMCl7aWYoXzB4NTEwOCgnMHg2NDInKT09PSd0T3NCQicpe3RoaXNbXzB4NTEwOCgnMHgxNDInKV1bXzB4NTEwOCgnMHg5ZScpXVtfMHg1MTA4KCcweDJjYicpXSh7J3Rlc3RzJzpfMHgxM2RjMDBbXzB4NTEwOCgnMHhkNCcpXX0pO31lbHNle2lmKHRoaXNbXzB4NTEwOCgnMHhmYicpXSl7dmFyIF8weDIwYzViYz10aGlzW18weDUxMDgoJzB4NjMnKV1bXzB4NTEwOCgnMHg2MicpXShfMHgxM2RjMDApO3RoaXNbXzB4NTEwOCgnMHg2MycpXVtfMHg1MTA4KCcweDQyNScpXShfMHgxM2RjMDApO3ZhciBfMHg1ODY3NDc9KytfMHhjYTU2NzlbXzB4NTEwOCgnMHgxOWEnKV07dGhpc1snX2xvYWRGaWxlV2l0aENhY2hlJ10oXzB4Y2E1Njc5KVtfMHg1MTA4KCcweDFkYScpXShmdW5jdGlvbihfMHg0ODM2NTApe3JldHVybiBfMHg0ODM2NTBbJ2NoYW5nZVRzJ109PT1fMHg1ODY3NDcmJl8weDIwNTIxMVtfMHg1MTA4KCcweDUxOScpXShfMHg0ODM2NTAsXzB4MjBjNWJjKTt9KVsnY2F0Y2gnXShmdW5jdGlvbihfMHhiZTIxZDkpe3JldHVybiBfMHgyMWExOGEoXzB4YmUyMWQ5KTt9KTt9fX0sXzB4MjA1MjExWydwcm90b3R5cGUnXVtfMHg1MTA4KCcweDY0MycpXT1mdW5jdGlvbihfMHgxM2RjMDApe3RoaXNbXzB4NTEwOCgnMHgyMDknKV1bXzB4MTNkYzAwW18weDUxMDgoJzB4MzQnKV1dP3RoaXNbXzB4NTEwOCgnMHgyMDknKV1bXzB4MTNkYzAwWydwYXRoJ11dKys6dGhpc1tfMHg1MTA4KCcweDIwOScpXVtfMHgxM2RjMDBbXzB4NTEwOCgnMHgzNCcpXV09MHgxO30sXzB4MjA1MjExW18weDUxMDgoJzB4YWUnKV1bXzB4NTEwOCgnMHg2NDQnKV09ZnVuY3Rpb24oXzB4MTNkYzAwKXt0aGlzW18weDUxMDgoJzB4MjA5JyldW18weDEzZGMwMFsncGF0aCddXSYmdGhpc1tfMHg1MTA4KCcweDIwOScpXVtfMHgxM2RjMDBbXzB4NTEwOCgnMHgzNCcpXV0tLTt9LF8weDIwNTIxMVsncHJvdG90eXBlJ11bXzB4NTEwOCgnMHg2NDUnKV09ZnVuY3Rpb24oXzB4MTNkYzAwLF8weDIwNTIxMSl7aWYoXzB4NTEwOCgnMHg2NDYnKSE9PV8weDUxMDgoJzB4NjQ2Jykpe3JldHVybiBfMHgxM2RjMDBbXzB4NTEwOCgnMHhiZicpXSgvXHsoWzAtOWEtekEtWl9dKylcfS9nLGZ1bmN0aW9uKF8weDI4MDM3MixfMHg1NzhlMjcsXzB4MjMwN2RhKXt2YXIgXzB4MjE5YmViO3JldHVybid7Jz09PV8weDEzZGMwMFtfMHgyMzA3ZGEtMHgxXSYmJ30nPT09XzB4MTNkYzAwW18weDIzMDdkYStfMHgyODAzNzJbXzB4NTEwOCgnMHhiZScpXV0/XzB4NTc4ZTI3OihfMHgyMTliZWI9XzB4MjA1MjExW18weDUxMDgoJzB4NjgnKV0oXzB4NTc4ZTI3KT9fMHgyMDUyMTFbXzB4NTc4ZTI3XTpudWxsLG51bGw9PT1fMHgyMTliZWJ8fHZvaWQgMHgwPT09XzB4MjE5YmViPycnOl8weDIxOWJlYik7fSk7fWVsc2V7dmFyIF8weGNhNTY3OT10aGlzLF8weDMyNTBjNz10aGlzW18weDUxMDgoJzB4MTQyJyldW18weDUxMDgoJzB4NjQ3JyldKF8weDEzZGMwMFtfMHg1MTA4KCcweDM0JyldKTtpZihfMHg1MTA4KCcweDMzZCcpPT10eXBlb2YgXzB4MzI1MGM3KXtpZihfMHg1MTA4KCcweDY0OCcpIT09XzB4NTEwOCgnMHg2NDknKSl7dmFyIF8weDI3M2Q0YixfMHgyYjU2NDc9bmV3IF8weDNhZjNhOCgpLF8weDFiYTgzND1fMHhjYTU2NzlbJ19tb2RlbCddW18weDUxMDgoJzB4MmM2JyldKF8weDEzZGMwMFtfMHg1MTA4KCcweDM0JyldKSxfMHgxMzkwNWE9W10sXzB4MzZhZTdhPVtdO18weDFiYTgzNCYmXzB4MWJhODM0W18weDUxMDgoJzB4NWRmJyldKCkmJihfMHgyYjU2NDdbXzB4NTEwOCgnMHgyNzEnKV0oX1tfMHg1MTA4KCcweDFiYScpXShfMHgxYmE4MzRbXzB4NTEwOCgnMHgyZTUnKV0oKSksITB4MSwhMHgwKSxfMHgzNmFlN2E9XzB4MmI1NjQ3W18weDUxMDgoJzB4MzJjJyldKClbJ2xpbmVzJ118fFtdLF8weDEzOTA1YT1fMHhjYTU2NzlbXzB4NTEwOCgnMHgxNDInKV1bXzB4NTEwOCgnMHgyZTQnKV0oeydmaWxlJzpfMHgxM2RjMDBbXzB4NTEwOCgnMHgzNCcpXX0pfHxbXSxfMHgyNzNkNGI9XzB4Y2E1Njc5W18weDUxMDgoJzB4MjA4JyldKF8weDFiYTgzNCkpLF8weGNhNTY3OVtfMHg1MTA4KCcweDE0MCcpXSh7J3R5cGUnOl8weDUxMDgoJzB4NjRhJyksJ2NvcnJlbGF0aW9uSWQnOl8weDEzZGMwMFsnY29ycmVsYXRpb25JZCddLCdjb2RlJzpfMHgzMjUwYzdbXzB4NTEwOCgnMHgxZjcnKV0oKSwnbGluZXMnOl8weDM2YWU3YSwndW5jb3ZlcmVkUmVnaW9ucyc6XzB4MTM5MDVhLCdjb3ZlcmFnZSc6XzB4MjczZDRifSxfMHgyMDUyMTEpO31lbHNle3RoaXNbXzB4NTEwOCgnMHg1YTgnKV0oXzB4MTNkYzAwW18weDUxMDgoJzB4YTgnKV0pLHRoaXNbXzB4NTEwOCgnMHgxYzcnKV0oXzB4NTEwOCgnMHg1OGUnKSxfMHgxM2RjMDApO319fX0sXzB4MjA1MjExW18weDUxMDgoJzB4YWUnKV1bXzB4NTEwOCgnMHg2NGInKV09ZnVuY3Rpb24oXzB4MTNkYzAwLF8weDIwNTIxMSl7aWYoXzB4NTEwOCgnMHg2NGMnKSE9PV8weDUxMDgoJzB4NjRjJykpe3JldHVybiBfMHgzMjUwYzcodGhpcyx2b2lkIDB4MCx2b2lkIDB4MCxmdW5jdGlvbigpe3JldHVybiBfMHgyNzNkNGIodGhpcyxmdW5jdGlvbihfMHg1NTdjZjkpe3N3aXRjaChfMHg1NTdjZjlbXzB4NTEwOCgnMHgxMGYnKV0pe2Nhc2UgMHgwOnJldHVyblsweDQsdGhpc1tfMHg1MTA4KCcweDE0NScpXV07Y2FzZSAweDE6cmV0dXJuIF8weDU1N2NmOVsnc2VudCddKCksXzB4MjA1MjExKHsnd29ya2VySWQnOl8weDEzZGMwMH0pLFsweDJdO319KTt9KTt9ZWxzZXtfMHgyMDUyMTFbJ19hbGxvd2VkVG9TZW5kVGVzdFJlc3VsdHMnXT0hMHgwLHRoaXNbXzB4NTEwOCgnMHg0OGEnKV0odm9pZCAweDAsXzB4MjA1MjExKTt9fSxfMHgyMDUyMTFbJ3Byb3RvdHlwZSddW18weDUxMDgoJzB4NjRkJyldPWZ1bmN0aW9uKF8weDEzZGMwMCxfMHgyMDUyMTEpe2lmKCd2WFNZUCchPT1fMHg1MTA4KCcweDY0ZScpKXtfMHgyMDUyMTFbJ19hbGxvd2VkVG9TZW5kVGVzdFJlc3VsdHMnXT0hMHgxO31lbHNle3ZhciBfMHgxYWE1ODE9XzB4MTNkYzAwW18weDUxMDgoJzB4YTgnKV1bXzB4NTEwOCgnMHg1NjUnKV0oL0Nhbm5vdCBmaW5kIG1vZHVsZSAnKFteJ1xzJnw7XSspJy8pO18weDFhYTU4MSYmXzB4MWFhNTgxWzB4MV0mJihfMHgxM2RjMDBbXzB4NTEwOCgnMHg1NjYnKV09XzB4MmI1NjQ3W18weDUxMDgoJzB4MmNmJyldKF8weDFhYTU4MVsweDFdKSk7fX0sXzB4MjA1MjExW18weDUxMDgoJzB4YWUnKV1bJ21vZGVsOmJ1c3knXT1mdW5jdGlvbigpe2lmKF8weDUxMDgoJzB4NjRmJykhPT1fMHg1MTA4KCcweDY0ZicpKXtfMHgyMDUyMTEoXzB4MTNkYzAwWyd2YWx1ZSddKTt9ZWxzZXt0aGlzWydfc2VuZCddKHsndHlwZSc6XzB4NTEwOCgnMHg2NTAnKX0pO319LF8weDIwNTIxMVtfMHg1MTA4KCcweGFlJyldW18weDUxMDgoJzB4NjUxJyldPWZ1bmN0aW9uKF8weDEzZGMwMCl7dGhpc1snX3NlbmQnXShfWydleHRlbmQnXSh7J3R5cGUnOl8weDUxMDgoJzB4MTQxJyksJ2Vycm9yJzpfMHgxM2RjMDBbXzB4NTEwOCgnMHhhOCcpXXx8Jyd9LHRoaXNbJ19tb2RlbCddW18weDUxMDgoJzB4MTQzJyldKCkpKTt9LF8weDIwNTIxMVtfMHg1MTA4KCcweGFlJyldW18weDUxMDgoJzB4NjUyJyldPWZ1bmN0aW9uKF8weDEzZGMwMCl7XzB4MTNkYzAwW18weDUxMDgoJzB4MzNhJyldfHx0aGlzWydfc2VuZCddKF9bXzB4NTEwOCgnMHg2NicpXSh7J3R5cGUnOid1aTpzdW1tYXJ5J30sdGhpc1tfMHg1MTA4KCcweDE0MicpXVtfMHg1MTA4KCcweDE0MycpXSgpKSk7fSxfMHgyMDUyMTFbXzB4NTEwOCgnMHhhZScpXVtfMHg1MTA4KCcweDY1MycpXT1mdW5jdGlvbihfMHgxM2RjMDApe3ZhciBfMHgyMDUyMTE9dGhpcztfW18weDUxMDgoJzB4MTM1JyldKHRoaXNbXzB4NTEwOCgnMHg0OTMnKV0sZnVuY3Rpb24oXzB4Y2E1Njc5KXtfMHhjYTU2NzlbXzB4NTEwOCgnMHg0ODknKV0mJl8weDIwNTIxMVtfMHg1MTA4KCcweDE0MCcpXSh7J3R5cGUnOid1aTp0ZXN0czpzb21lUmVzdWx0c1VwZGF0ZWQnLCdmaWxlcyc6W3sncGF0aCc6XzB4MTNkYzAwW18weDUxMDgoJzB4MTUyJyldW18weDUxMDgoJzB4MzQnKV0sJ2FjdGlvbic6J2RlbGV0ZWQnfV19LF8weGNhNTY3OSk7fSk7fSxfMHgyMDUyMTFbXzB4NTEwOCgnMHhhZScpXVsnbW9kZWw6YWxsRmlsZXMnXT1mdW5jdGlvbihfMHgxM2RjMDApe2lmKCduSkRBTCchPT1fMHg1MTA4KCcweDY14oCLNCcpKXt0aGlzWydfaXRlbXMnXT1fMHgxM2RjMDBbJ2l0ZW1zJ10sdGhpc1tfMHg1MTA4KCcweDNlZCcpXT1fMHgxM2RjMDBbXzB4NTEwOCgnMHgzZWUnKV07fWVsc2V7dmFyIF8weDIwNTIxMT10aGlzO19bJ2VhY2gnXSh0aGlzW18weDUxMDgoJzB4NDkzJyldLGZ1bmN0aW9uKF8weGNhNTY3OSl7XzB4Y2E1Njc5W18weDUxMDgoJzB4NTVlJyldJiZfMHgyMDUyMTFbXzB4NTEwOCgnMHgxNDQnKV0oX1tfMHg1MTA4KCcweGRhJyldKF8weDEzZGMwMFtfMHg1MTA4KCcweDFjYicpXSxmdW5jdGlvbihfMHgxM2RjMDApe3JldHVybnsncGF0aCc6XzB4MTNkYzAwW18weDUxMDgoJzB4MzQnKV0sJ2lkJzpfMHgxM2RjMDBbJ2lkJ119O30pLF8weGNhNTY3OSk7fSk7fX0sXzB4MjA1MjExWydwcm90b3R5cGUnXVtfMHg1MTA4KCcweDM3MScpXT1mdW5jdGlvbihfMHgxM2RjMDApe2lmKF8weDUxMDgoJzB4NjU1Jyk9PT1fMHg1MTA4KCcweDY1NScpKXt0aGlzW18weDUxMDgoJzB4MTQwJyldKHsndHlwZSc6XzB4NTEwOCgnMHgyMGInKSwnZmlsZXMnOlt7J2FjdGlvbic6J2FkZGVkJywncGF0aCc6XzB4MTNkYzAwWydmaWxlJ11bXzB4NTEwOCgnMHgzNCcpXSwnaWQnOl8weDEzZGMwMFsnZmlsZSddWydpZCddLCd0ZXN0JzpfMHgxM2RjMDBbXzB4NTEwOCgnMHgxNTInKV1bXzB4NTEwOCgnMHg3MScpXXx8dm9pZCAweDB9XX0pO31lbHNle2Z1bmN0aW9uIF8weDUzMTE5Yigpe3RoaXNbXzB4NTEwOCgnMHg0YmInKV09XzB4MjA1MjExO31fMHgxM2RjMDAoXzB4MjA1MjExLF8weGNhNTY3OSksXzB4MjA1MjExW18weDUxMDgoJzB4YWUnKV09bnVsbD09PV8weGNhNTY3OT9PYmplY3RbXzB4NTEwOCgnMHg5YScpXShfMHhjYTU2NzkpOihfMHg1MzExOWJbXzB4NTEwOCgnMHhhZScpXT1fMHhjYTU2NzlbXzB4NTEwOCgnMHhhZScpXSxuZXcgXzB4NTMxMTliKCkpO319LF8weDIwNTIxMVtfMHg1MTA4KCcweGFlJyldW18weDUxMDgoJzB4NjU2JyldPWZ1bmN0aW9uKF8weDEzZGMwMCl7aWYoJ2VGZkNRJz09PV8weDUxMDgoJzB4NjU3Jykpe3ZhciBfMHhlNjYyZDc9XzB4MTNkYzAwW18weDUxMDgoJzB4YTgnKV0mJl8weDEzZGMwMFtfMHg1MTA4KCcweGE4JyldW18weDUxMDgoJzB4NTEnKV0oXzB4NTEwOCgnMHg2NTgnKSl8fC0weDE7fl8weGU2NjJkNyYmKF8weDEzZGMwMFtfMHg1MTA4KCcweGE4JyldPV8weDEzZGMwMFtfMHg1MTA4KCcweGE4JyldWydzdWJzdHJpbmcnXSgweDAsXzB4ZTY2MmQ3KSksXzB4MjA1MjExWydfY29ycnVwdGVkQ2FjaGUnXShfMHgxM2RjMDBbXzB4NTEwOCgnMHhhOCcpXSkmJihfMHgyMDUyMTFbXzB4NTEwOCgnMHg5ZScpXVtfMHg1MTA4KCcweDY1OScpXSgpLF8weDEzZGMwMFtfMHg1MTA4KCcweGE4JyldPV8weDNhNDQ5ZiksXzB4MjA1MjExW18weDUxMDgoJzB4NjVhJyldKF8weDEzZGMwMCksXzB4MjA1MjExW18weDUxMDgoJzB4NjViJyldKF8weDEzZGMwMCkscHJvY2Vzc1tfMHg1MTA4KCcweDcnKV1bXzB4NTEwOCgnMHg1JyldJiZfMHgxM2RjMDBbXzB4NTEwOCgnMHhhOCcpXSYmKF8weDEzZGMwMFtfMHg1MTA4KCcweGE4JyldPV8weDEzZGMwMFtfMHg1MTA4KCcweGE4JyldW18weDUxMDgoJzB4YmYnKV0oXzB4MjA1MjExW18weDUxMDgoJzB4NjVjJyldLCcuJylbXzB4NTEwOCgnMHhiZicpXShfMHgyMDUyMTFbXzB4NTEwOCgnMHg5ZScpXVtfMHg1MTA4KCcweDI5YScpXSwnLicpKTt9ZWxzZXt0aGlzWydfc2VuZCddKHsndHlwZSc6XzB4NTEwOCgnMHgyMGInKSwnZmlsZXMnOlt7J2FjdGlvbic6J2NoYW5nZWQnLCdwYXRoJzpfMHgxM2RjMDBbJ2ZpbGUnXVtfMHg1MTA4KCcweDM0JyldLCdpZCc6XzB4MTNkYzAwW18weDUxMDgoJzB4MTUyJyldWydpZCddfV19KTt9fSxfMHgyMDUyMTFbJ3Byb3RvdHlwZSddW18weDUxMDgoJzB4Mzc0JyldPWZ1bmN0aW9uKF8weDEzZGMwMCl7dGhpc1tfMHg1MTA4KCcweDE0MCcpXSh7J3R5cGUnOl8weDUxMDgoJzB4MjBiJyksJ2ZpbGVzJzpbeydhY3Rpb24nOl8weDUxMDgoJzB4MTUzJyksJ3BhdGgnOl8weDEzZGMwMFsnZmlsZSddW18weDUxMDgoJzB4MzQnKV0sJ2lkJzpfMHgxM2RjMDBbXzB4NTEwOCgnMHgxNTInKV1bJ2lkJ119XX0pO30sXzB4MjA1MjExW18weDUxMDgoJzB4YWUnKV1bXzB4NTEwOCgnMHg2NWQnKV09ZnVuY3Rpb24oXzB4MTNkYzAwKXt2YXIgXzB4MjA1MjExPXRoaXM7aWYodGhpc1tfMHg1MTA4KCcweDE0MCcpXShfW18weDUxMDgoJzB4NjYnKV0oeyd0eXBlJzpfMOKAi3g1MTA4KCcweDE0MScpfSx0aGlzW18weDUxMDgoJzB4MTQyJyldW18weDUxMDgoJzB4MTQzJyldKCkpKSxfWydlYWNoJ10odGhpc1tfMHg1MTA4KCcweDQ5MycpXSxmdW5jdGlvbihfMHhjYTU2Nzkpe18weGNhNTY3OVtfMHg1MTA4KCcweDQ4OScpXSYmXzB4MjA1MjExW18weDUxMDgoJzB4NDhhJyldKF8weDEzZGMwMCxfMHhjYTU2NzkpO30pLCFfW18weDUxMDgoJzB4MTM0JyldKF8weDEzZGMwMFtfMHg1MTA4KCcweDY1ZScpXSkpe3ZhciBfMHhjYTU2Nzk9W10sXzB4MzI1MGM3PV9bJ3JlZHVjZSddKF8weDEzZGMwMFsnYWxsQWZmZWN0ZWRGaWxlcyddLGZ1bmN0aW9uKF8weDEzZGMwMCxfMHgzMjUwYzcpe3ZhciBfMHgyNzNkNGI9XzB4MjA1MjExW18weDUxMDgoJzB4MjA4JyldKF8weDMyNTBjNyk7cmV0dXJuIF8weDI3M2Q0YiYmXzB4MjczZDRiW18weDUxMDgoJzB4NjVmJyldJiYoZGVsZXRlIF8weDI3M2Q0YltfMHg1MTA4KCcweDY1ZicpXSxfMHgxM2RjMDBbXzB4MzI1MGM3W18weDUxMDgoJzB4NTAnKV0oKV09XzB4MjczZDRiKSxfMHgyMDUyMTFbJ19vcGVuZWRGaWxlcyddW18weDMyNTBjN1tfMHg1MTA4KCcweDM0JyldKCldJiZfMHhjYTU2NzlbXzB4NTEwOCgnMHg0YicpXSh7J2FjdGlvbic6XzB4NTEwOCgnMHg2NjAnKSwncGF0aCc6XzB4MzI1MGM3WydwYXRoJ10oKSwnaWQnOl8weDMyNTBjN1tfMHg1MTA4KCcweDUwJyldKCksJ3Rlc3QnOl8weDMyNTBjN1snaXNUZXN0RmlsZSddKCl8fHZvaWQgMHgwfSksXzB4MTNkYzAwO30se30pO19bXzB4NTEwOCgnMHgxMzQnKV0oXzB4MzI1MGM3KXx8dGhpc1snX3NlbmQnXSh7J3R5cGUnOl8weDUxMDgoJzB4MjBhJyksJ2NoYW5nZXMnOl8weDMyNTBjN30pLF9bXzB4NTEwOCgnMHgxMzQnKV0oXzB4Y2E1Njc5KXx8dGhpc1tfMHg1MTA4KCcweDE0MCcpXSh7J3R5cGUnOl8weDUxMDgoJzB4MjBiJyksJ2ZpbGVzJzpfMHhjYTU2Nzl9KTt9fSxfMHgyMDUyMTFbXzB4NTEwOCgnMHhhZScpXVtfMHg1MTA4KCcweDIwOCcpXT1mdW5jdGlvbihfMHgxM2RjMDApe2lmKF8weDEzZGMwMCl7dmFyIF8weDIwNTIxMSxfMHhjYTU2Nzk9XzB4MTNkYzAwW18weDUxMDgoJzB4MTMzJyldKCk7cmV0dXJuKF8weGNhNTY3OT49MHgwfHxfMHgxM2RjMDBbXzB4NTEwOCgnMHg0YjEnKV0+PTB4MCkmJihfMHgyMDUyMTE9eyd2YWx1ZSc6XzB4Y2E1Njc5LCdsb3cnOl8weGNhNTY3OTx0aGlzW18weDUxMDgoJzB4MTQyJyldW18weDUxMDgoJzB4NGIyJyldKCksJ3Jhbmdlcyc6eydjb3ZlcmVkJzpfMHgxM2RjMDBbJ251bWJlck9mQ292ZXJlZFJhbmdlcyddKCksJ2FsbCc6XzB4MTNkYzAwW18weDUxMDgoJzB4NGI0JyldKCl9LCd2YWx1ZUNoYW5nZWQnOl8weDEzZGMwMFtfMHg1MTA4KCcweDRiMScpXSE9PV8weGNhNTY3OXx8dm9pZCAweDB9LF8weGNhNTY3OT49MHgwfHwoXzB4MjA1MjExW18weDUxMDgoJzB4NDU5JyldPSEweDApLF8weDEzZGMwMFtfMHg1MTA4KCcweDRiMScpXT1fMHhjYTU2NzkpLF8weDIwNTIxMTt9fSxfMHgyMDUyMTFbXzB4NTEwOCgnMHhhZScpXVtfMHg1MTA4KCcweDE0NCcpXT1mdW5jdGlvbihfMHgxM2RjMDAsXzB4MjA1MjExKXt2YXIgXzB4Y2E1Njc5PXRoaXM7XzB4MjA1MjExWydfYWxsb3dlZFRvU2VuZEFsbEZpbGVzJ109ITB4MSx0aGlzW18weDUxMDgoJzB4MTQwJyldKHsndHlwZSc6XzB4NTEwOCgnMHgyMGInKSwnZmlsZXMnOl8weDEzZGMwMFtfMHg1MTA4KCcweGRhJyldKGZ1bmN0aW9uKF8weDEzZGMwMCl7aWYoXzB4NTEwOCgnMHg2NjEnKT09PSdXbnhIVScpe3ZhciBfMHg1NGE1NWU9X1tfMHg1MTA4KCcweDY2JyldKHt9LF8weDIwNTIxMSk7XzB4MTNkYzAwW18weDUxMDgoJzB4NjYyJyldKF8weDU0YTU1ZSksXzB4MTNkYzAwWydfZW1pdEludGVybmFsJ10oeyd0eXBlJzpfMHg1MTA4KCcweDFjOCcpLCdkYXRhJzpfMHg1NGE1NWV9KTt9ZWxzZXt2YXIgXzB4MjA1MjExPV8weGNhNTY3OVtfMHg1MTA4KCcweDE0MicpXVsnZmlsZUJ5SWQnXShfMHgxM2RjMDBbJ2lkJ10pO3JldHVybnsnYWN0aW9uJzpfMHg1MTA4KCcweDMyMycpLCdwYXRoJzpfMHgxM2RjMDBbXzB4NTEwOCgnMHgzNCcpXSwnaWQnOl8weDEzZGMwMFsnaWQnXSwndGVzdCc6XzB4MjA1MjExJiZfMHgyMDUyMTFbJ2lzVGVzdEZpbGUnXSgpfHx2b2lkIDB4MCwnY292ZXJhZ2UnOl8weGNhNTY3OVtfMHg1MTA4KCcweDIwOCcpXShfMHgyMDUyMTEpfTt9fSl9LF8weDIwNTIxMSk7fSxfMHgyMDUyMTFbXzB4NTEwOCgnMHhhZScpXVtfMHg1MTA4KCcweDQ4YScpXT1mdW5jdGlvbihfMHgxM2RjMDAsXzB4MjA1MjExKXt2YXIgXzB4Y2E1Njc5LF8weDMyNTBjNyxfMHgyNzNkNGIsXzB4MmI1NjQ3PV8weDUxMDgoJzB4M2I1Jyk7XzB4MTNkYzAwPyhfMHgxM2RjMDBbJ2Z1bGxSdW4nXSYmKF8weDJiNTY0Nz1fMHg1MTA4KCcweDY2MycpKSxfMHhjYTU2Nzk9XzB4MTNkYzAwWydjaGFuZ2VkJ10sXzB4MzI1MGM3PV8weDEzZGMwMFsnZXhlY3V0ZWQnXSxfMHgyNzNkNGI9XzB4MTNkYzAwW18weDUxMDgoJzB4M2I4JyldKTooXzB4MmI1NjQ3PV8weDUxMDgoJzB4NjYzJyksXzB4Y2E1Njc5PXRoaXNbXzB4NTEwOCgnMHgxNDInKV1bXzB4NTEwOCgnMHhiOCcpXSgpKSx0aGlzW18weDUxMDgoJzB4MTQwJyldKHsndHlwZSc6XzB4NTEwOCgnMHgzYjknKStfMHgyYjU2NDcsJ2ZpbGVzJzp0aGlzW18weDUxMDgoJzB4M2JhJyldKF8weGNhNTY3OSxfMHgyNzNkNGIsJ2NoYW5nZWQnKVtfMHg1MTA4KCcweGI3JyldKHRoaXNbXzB4NTEwOCgnMHgzYmEnKV0oXzB4MzI1MGM3LF8weDI3M2Q0YixfMHg1MTA4KCcweDNiNycpKSl9LF8weDIwNTIxMSk7fSxfMHgyMDUyMTFbJ3Byb3RvdHlwZSddW18weDUxMDgoJzB4M2JhJyldPWZ1bmN0aW9uKF8weDEzZGMwMCxfMHgyMDUyMTEsXzB4Y2E1Njc5KXtpZihfMHg1MTA4KCcweDY2NCcpPT09XzB4NTEwOCgnMHg2NjQnKSl7dmFyIF8weDMyNTBjNz10aGlzLF8weDI3M2Q0Yj1fW18weDUxMDgoJzB4YjUnKV0odGhpc1tfMHg1MTA4KCcweDE0MicpXVtfMHg1MTA4KCcweDEzMScpXSgpLGZ1bmN0aW9uKF8weDEzZGMwMCxfMHgyMDUyMTEpe3ZhciBfMHhjYTU2Nzk7aWYoX1tfMHg1MTA4KCcweDEzNScpXShfMHgyMDUyMTFbXzB4NTEwOCgnMHgxOWQnKV0oKSxmdW5jdGlvbihfMHgxM2RjMDApe3ZhciBfMHgyMDUyMTE9XzB4MTNkYzAwW18weDUxMDgoJzB4MjM3JyldKCk7aWYoXzB4MjA1MjExKXtpZihfMHg1MTA4KCcweDY2NScpPT09J21mR3NMJyl7XzB4MjczZDRiPV8weDIwNTIxMVsnX2V4dHJhY3ROb2RlU3RhY2tMaW5lQ29udGV4dCddKF8weDEzZGMwMCxfMHhiNjUzMDgpO3ZhciBfMHgyYjI2OTM9cGFyc2VJbnQodlsweDFdLDB4YSk7XzB4MzI1MGM3PV8weDIwNTIxMVtfMHg1MTA4KCcweDllJyldW18weDUxMDgoJzB4NjY2JyldKF8weDIwNTIxMVtfMHg1MTA4KCcweDllJyldW18weDUxMDgoJzB4YTMnKV0oXzB4MWJhODM0W18weDUxMDgoJzB4NjY3JyldKHZbMHgwXSk/dlsweDBdOl9bXzB4NTEwOCgnMHg2NjgnKV0odlsweDBdLCcuLycpKSxfMHgyYjI2OTMpLF8weDMyNTBjNyYmXzB4MzI1MGM3W18weDUxMDgoJzB4MjNiJyldPyhfMHg1YzcxYzk9XzB4MzI1MGM3WydmaWxlJ10sXzB4MjFhMThhPV8weDMyNTBjN1tfMHg1MTA4KCcweDIzYicpXSk6KCFfMHgzMjUwYzd8fF8weDMyNTBjNyYmIV8weDMyNTBjN1tfMHg1MTA4KCcweDE1MicpXSkmJihfMHg1YzcxYzk9dlsweDBdLF8weDIxYTE4YT1fMHgyYjI2OTMpLF8weDVjNzFjOSYmKF8weDI3M2Q0YiYmKF8weDNhZjNhOFtfMHgyYjU2NDdbXzB4NTEwOCgnMHhiZScpXV09XzB4MjczZDRiKSxfMHgyYjU2NDdbXzB4NTEwOCgnMHg0YicpXShbXzB4NWM3MWM5LF8weDIxYTE4YV0pKTt9ZWxzZXt2YXIgXzB4MjczZDRiPV8weDMyNTBjN1tfMHg1MTA4KCcweDE0MicpXVsnZmlsZUJ5SWQnXShfMHgyMDUyMTEpO2lmKF8weDI3M2Q0YltfMHg1MTA4KCcweDdhJyldKCkpcmV0dXJuIF8weGNhNTY3OT1fMHgyNzNkNGIsITB4MTt9fX0pLF8weGNhNTY3OSl7dmFyIF8weDI3M2Q0Yj1fMHgxM2RjMDBbXzB4Y2E1Njc5W18weDUxMDgoJzB4NTAnKV0oKV09XzB4MTNkYzAwW18weGNhNTY3OVtfMHg1MTA4KCcweDUwJyldKCldfHxbXTtfMHgyNzNkNGJbJ3B1c2gnXSh7J21lc3NhZ2UnOl8weDIwNTIxMVtfMHg1MTA4KCcweGE4JyldKCksJ3N0YWNrJzpfW18weDUxMDgoJzB4ZGEnKV0oXzB4MjA1MjExW18weDUxMDgoJzB4MTlkJyldKCksZnVuY3Rpb24oXzB4MTNkYzAwKXtpZihfMHg1MTA4KCcweDY2OScpPT09J0lIbE9IJyl7cmV0dXJuIF8weDMyNTBjN1tfMHg1MTA4KCcweDY2YScpXShfMHgxM2RjMDAsXzB4MTNkYzAwWydmaWxlUGF0aCddKCkpO31lbHNle3ZhciBfMHg1ODFhODc9XzB4MTNkYzAwW18weDUxMDgoJzB4MTI1JyldKCdceDBhJyksXzB4NDM4MzM5PVtdO19bXzB4NTEwOCgnMHgxMzUnKV0oXzB4NTgxYTg3LGZ1bmN0aW9uKF8weGNjNjAzMCl7cmV0dXJuIV9bJ3N0YXJ0c1dpdGgnXShfWyd0cmltTGVmdCddKF8weGNjNjAzMCksJ2F0JykmJnZvaWQgXzB4NDM4MzM5WydwdXNoJ10oXzB4Y2M2MDMwKTt9KSxfMHgyMDUyMTE9XzB4NDM4MzM5W18weDUxMDgoJzB4ODInKV0oJ1x4MGEnKTt9fSl9KTt9cmV0dXJuIF8weDEzZGMwMDt9LHt9KXx8e307cmV0dXJuIF9bXzB4NTEwOCgnMHhkYScpXShfMHgxM2RjMDAsZnVuY3Rpb24oXzB4MTNkYzAwKXt2YXIgXzB4MmI1NjQ3PXt9O3JldHVybiBfW18weDUxMDgoJzB4MTM1JyldKF8weDEzZGMwMFsnb3duVGVzdHMnXSgpLGZ1bmN0aW9uKF8weDEzZGMwMCl7dmFyIF8weGNhNTY3OT1fMHgxM2RjMDBbXzB4NTEwOCgnMHgzNCcpXSgpLF8weDI3M2Q0Yj0nOicrX1snbGFzdCddKF8weGNhNTY3OSksXzB4MWJhODM0PV8weDJiNTY0NztfMHhjYTU2NzlbJ2xlbmd0aCddPjB4MSYmX1tfMHg1MTA4KCcweDEzNScpXShfW18weDUxMDgoJzB4NjZiJyldKF8weGNhNTY3OSxfMHhjYTU2NzlbXzB4NTEwOCgnMHhiZScpXS0weDEpLGZ1bmN0aW9uKF8weDEzZGMwMCl7XzB4MTNkYzAwPSc6JytfMHgxM2RjMDA7dmFyIF8weDIwNTIxMT1fMHgxYmE4MzRbXzB4MTNkYzAwXTtfMHgyMDUyMTF8fChfMHgyMDUyMTE9e30sXzB4MWJhODM0W18weDEzZGMwMF09XzB4MjA1MjExKSxfMHgxYmE4MzQ9XzB4MjA1MjExO30pO3ZhciBfMHgxMzkwNWE9X1tfMHg1MTA4KCcweGRhJyldKF8weDEzZGMwMFtfMHg1MTA4KCcweDQ5ZScpXSgpLGZ1bmN0aW9uKF8weDEzZGMwMCl7cmV0dXJuIF8weDEzZGMwMFsna2V5J10oKTt9KTtfW18weDUxMDgoJzB4MTM0JyldKF8weDEzOTA1YSkmJihfMHgxMzkwNWE9dm9pZCAweDApLF8weDFiYTgzNFtfMHgyNzNkNGJdPXsnaXNUZXN0JzohMHgwLCdmaXJzdEZhaWxpbmdPclNpbmdsZUV4ZWN1dGVkJzpfMHgxM2RjMDA9PT1fMHgyMDUyMTF8fHZvaWQgMHgwLCduYW1lJzpfMHgyNzNkNGJbJ3N1YnN0ciddKDB4MSksJ3RpbWUnOl8weDEzZGMwMFtfMHg1MTA4KCcweDM0YScpXSgpLCdzbG93JzpfMHgxM2RjMDBbXzB4NTEwOCgnMHg0NzYnKV0oKSwnbGluZSc6XzB4MTNkYzAwW18weDUxMDgoJzB4NGEwJyldKCk/XzB4MTNkYzAwWydzdGFydFJhbmdlJ10oKVtfMHg1MTA4KCcweDFmZicpXSgpOjB4MSwnbG9ncyc6X1snbWFwJ10oXzB4MTNkYzAwW18weDUxMDgoJzB4NDhlJyldKCksZnVuY3Rpb24oXzB4MTNkYzAwKXtpZihfMHg1MTA4KCcweDY2YycpPT09J1h1VWNrJyl7dmFyIF8weGFmNzBhNj1fMHgyNzNkNGJbXzB4NTEwOCgnMHgyMmMnKV0oKTtpZighXzB4MzI1MGM3W18weDUxMDgoJzB4MjJkJyldKF8weDI3M2Q0YixfMHhjYTU2NzkpKXtfMHhhZjcwYTY+XzB4MTNkYzAwJiYoXzB4YWY3MGE2Kz1fMHgyMDUyMTEsXzB4MjczZDRiWydudW1iZXInXShfMHhhZjcwYTYpKTt2YXIgXzB4MmNlNDU0PV8weDMyNTBjN1snX2xpbmVzJ11bXzB4YWY3MGE2XTtfMHgyY2U0NTQ/KF8weDJjZTQ1NFsnZGlzcG9zZSddKCksXzB4MjczZDRiW18weDUxMDgoJzB4MTA4JyldKCksXzB4MzI1MGM3W18weDUxMDgoJzB4MjJlJyldW18weDUxMDgoJzB4NGInKV0oXzB4MmNlNDU0KSxfMHgzMjUwYzdbXzB4NTEwOCgnMHgyMmUnKV1bXzB4NTEwOCgnMHg0YicpXShfMHgyNzNkNGIpLGRlbGV0ZSBfMHgzMjUwYzdbXzB4NTEwOCgnMHgyMDAnKV1bXzB4YWY3MGE2XSk6XzB4MzI1MGM3W18weDUxMDgoJzB4MjAwJyldW18weGFmNzBhNl09XzB4MjczZDRiO319ZWxzZXt2YXIgXzB4MjA1MjExPXsnbWVzc2FnZSc6XzB4MTNkYzAwW18weDUxMDgoJzB4M2RhJyldKCl9O3JldHVybiBfMHgxM2RjMDBbXzB4NTEwOCgnMHgxNTInKV0oKSYmKF8weDIwNTIxMVtfMHg1MTA4KCcweDJlYScpXT1fMHgzMjUwYzdbJ19idWlsZExvY2F0aW9uJ10oXzB4MTNkYzAwLF8weDEzZGMwMFtfMHg1MTA4KCcweDE1MicpXSgpW18weDUxMDgoJzB4MzQnKV0oKSkpLF8weDIwNTIxMTt9fSksJ2Vycm9ycyc6X1snbWFwJ10oXzB4MTNkYzAwW18weDUxMDgoJzB4NDA4JyldKCksZnVuY3Rpb24oXzB4MTNkYzAwKXtpZihfMHg1MTA4KCcweDY2ZCcpPT09XzB4NTEwOCgnMHg2NmQnKSl7cmV0dXJueydtZXNzYWdlJzpfMHgxM2RjMDBbXzB4NTEwOCgnMHhhOCcpXSgpLCdzdGFjayc6X1tfMHg1MTA4KCcweGRhJyldKF8weDEzZGMwMFtfMHg1MTA4KCcweDE5ZCcpXSgpLGZ1bmN0aW9uKF8weDEzZGMwMCl7cmV0dXJuIF8weDMyNTBjN1snX2J1aWxkTG9jYXRpb24nXShfMHgxM2RjMDAsXzB4MTNkYzAwW18weDUxMDgoJzB4NDgzJyldKCkpO30pLCdhY3R1YWwnOl8weDEzZGMwMFtfMHg1MTA4KCcweDNkNScpXSgpLCdleHBlY3RlZCc6XzB4MTNkYzAwW18weDUxMDgoJzB4M2U5JyldKCl9O31lbHNle3JldHVybiFfW18weDUxMDgoJzB4MmQ4JyldKF9bXzB4NTEwOCgnMHgzYzInKV0oXzB4MTNkYzAwKSwnYXQnKSYmdm9pZCBfMHgxYmE4MzRbXzB4NTEwOCgnMHg0YicpXShfMHgxM2RjMDApO319KSwnY292ZXJlZEZpbGVzJzpfMHgxMzkwNWF9O30pLHsncGF0aCc6XzB4MTNkYzAwW18weDUxMDgoJzB4MzQnKV0oKSwnYWN0aW9uJzpfMHhjYTU2NzksJ3Rlc3RzJzpfMHgzMjUwYzdbXzB4NTEwOCgnMHg2NmUnKV0oXzB4MmI1NjQ3KSwnZXJyb3JzJzpfMHgyNzNkNGJbXzB4MTNkYzAwW18weDUxMDgoJzB4NTAnKV0oKV19O30pO31lbHNle3ZhciBfMHg1YjIyZTA9dGhpcztfMHg1YjIyZTBbXzB4NTEwOCgnMHgxYTcnKV1bXzB4NTEwOCgnMHgxZGEnKV0oZnVuY3Rpb24oKXtfMHgyMDUyMTEoeydwYWdlSWQnOl8weDEzZGMwMH0pO30pO319LF8weDIwNTIxMVsncHJvdG90eXBlJ11bJ19idWlsZExvY2F0aW9uJ109ZnVuY3Rpb24oXzB4MTNkYzAwLF8weDIwNTIxMSl7dmFyIF8weGNhNTY3OT17J3BhdGgnOl8weDIwNTIxMX07cmV0dXJuIF8weDEzZGMwMFsncmFuZ2UnXSgpPyhfMHhjYTU2NzlbXzB4NTEwOCgnMHgyM2InKV09XzB4MTNkYzAwW18weDUxMDgoJzB4M2Q4JyldKClbXzB4NTEwOCgnMHgxZmYnKV0oKSxfMHhjYTU2NzlbJ2NvbHVtbiddPV8weDEzZGMwMFtfMHg1MTA4KCcweDNkOCcpXSgpW18weDUxMDgoJzB4M2Y0JyldKCkpOl8weDEzZGMwMFtfMHg1MTA4KCcweDIzYicpXSgpJiYoXzB4Y2E1Njc5W18weDUxMDgoJzB4MjNiJyldPV8weDEzZGMwMFtfMHg1MTA4KCcweDIzYicpXSgpKSxfMHhjYTU2NzlbXzB4NTEwOCgnMHgzZDMnKV09XzB4MTNkYzAwW18weDUxMDgoJzB4M2QzJyldKCksXzB4Y2E1Njc5O30sXzB4MjA1MjExW18weDUxMDgoJzB4YWUnKV1bXzB4NTEwOCgnMHg2NmUnKV09ZnVuY3Rpb24oXzB4MTNkYzAwKXt2YXIgXzB4MjA1MjExPXRoaXM7cmV0dXJuIF9bJ21hcCddKF8weDEzZGMwMCxmdW5jdGlvbihfMHgxM2RjMDAsXzB4Y2E1Njc5KXtpZihfMHgxM2RjMDBbJ2lzVGVzdCddPT09ITB4MClyZXR1cm4gZGVsZXRlIF8weDEzZGMwMFtfMHg1MTA4KCcweDY2ZicpXSxfMHgxM2RjMDA7dmFyIF8weDMyNTBjNz1fMHhjYTU2NzlbXzB4NTEwOCgnMHgzMzYnKV0oMHgxKSxfMHgyNzNkNGI9XzB4MzZhZTdhW18weDUxMDgoJzB4MmU3JyldKF8weDMyNTBjNyk7cmV0dXJueyduYW1lJzpfMHgyNzNkNGIsJ2ludGVybmFsTmFtZSc6XzB4MzI1MGM3LCd0ZXN0cyc6XzB4MjA1MjExW18weDUxMDgoJzB4NjZlJyldKF8weDEzZGMwMCl9O30pO30sXzB4MjA1MjExW18weDUxMDgoJzB4YWUnKV1bXzB4NTEwOCgnMHgzOWInKV09ZnVuY3Rpb24oXzB4MTNkYzAwLF8weDIwNTIxMSl7dmFyIF8weGNhNTY3OT10aGlzLF8weDMyNTBjNz1mdW5jdGlvbihfMHgxM2RjMDApe3JldHVybiBwcm9jZXNzW18weDUxMDgoJzB4MmE1JyldKGZ1bmN0aW9uKCl7aWYoXzB4NTEwOCgnMHg2NzAnKSE9PSdEQ2RtSycpe3ZhciBfMHgyMDUyMTE9XzB4Y2E1Njc5W18weDUxMDgoJzB4MjllJykrXzB4MTNkYzAwW18weDUxMDgoJzB4NjknKV1dO18weDIwNTIxMSYmXzB4MjA1MjExW18weDUxMDgoJzB4MTBlJyldKF8weGNhNTY3OeKAiyxfMHgxM2RjMDApO31lbHNle3JldHVybiBmdW5jdGlvbihfMHgzMzY2YmIpe3JldHVybiBfMHgzMjUwYzcoW18weDEzZGMwMCxfMHgzMzY2YmJdKTt9O319KTt9LF8weDI3M2Q0Yj1mdW5jdGlvbigpe18weGNhNTY3OVtfMHg1MTA4KCcweDQ1ZScpXT1uZXcgXzB4MTM5MDVhKHsncG9ydCc6XzB4MTNkYzAwLCd2ZXJpZnlDbGllbnQnOmZ1bmN0aW9uKF8weDEzZGMwMCl7dmFyIF8weDIwNTIxMT0hMHgxO3RyeXt2YXIgXzB4Y2E1Njc5PV8weDFiYTgzNFtfMHg1MTA4KCcweDRlJyldKF8weDEzZGMwMFtfMHg1MTA4KCcweDY3MScpXSk7XzB4MjA1MjExPSd3YWxsYWJ5anMuY29tJz09PV8weGNhNTY3OVtfMHg1MTA4KCcweDVkYicpXTt9Y2F0Y2goXzB4MWQ5YmY4KXt9cmV0dXJuIF8weDIwNTIxMTt9fSksXzB4Y2E1Njc5W18weDUxMDgoJzB4NDVlJyldWydvbiddKCdjb25uZWN0aW9uJyxmdW5jdGlvbihfMHgxM2RjMDApe18weDVjNzFjOShfMHg1MTA4KCcweDY3MicpKSxfMHhjYTU2NzlbXzB4NTEwOCgnMHgxNDInKV09XzB4MjA1MjExLF8weDEzZGMwMFtfMHg1MTA4KCcweDQ4OScpXT0hMHgxLF8weDEzZGMwMFtfMHg1MTA4KCcweDU1ZScpXT0hMHgwLCFfMHhjYTU2NzlbJ19jb25uZWN0aW9ucyddW18weDUxMDgoJzB4YmUnKV0mJl8weGNhNTY3OVtfMHg1MTA4KCcweDE0MicpXVsnb24nXShfMHg1MTA4KCcweGE4JyksXzB4MzI1MGM3KSxfMHhjYTU2NzlbXzB4NTEwOCgnMHg0OTMnKV1bXzB4NTEwOCgnMHg0YicpXShfMHgxM2RjMDApLF8weDEzZGMwMFsnb24nXShfMHg1MTA4KCcweGE4JyksZnVuY3Rpb24oXzB4MjA1MjExKXt2YXIgXzB4MzI1MGM3O3RyeXtfMHgzMjUwYzc9SlNPTlsncGFyc2UnXShfMHgyMDUyMTEpO31jYXRjaChfMHhkY2FhYTEpe3JldHVybiB2b2lkIGNvbnNvbGVbJ2Vycm9yJ10oXzB4NTEwOCgnMHgyYTMnKStfMHgyMDUyMTErJyxceDIwJysoXzB4ZGNhYWExJiZfMHhkY2FhYTFbXzB4NTEwOCgnMHhhOCcpXSkpO31fMHg1YzcxYzkoXzB4NTEwOCgnMHg2NzMnKSxfMHgzMjUwYzdbXzB4NTEwOCgnMHg2OScpXSk7dmFyIF8weDJiNTY0Nz1fMHhjYTU2NzlbXzB4MzI1MGM3Wyd0eXBlJ11dO18weDJiNTY0NyYmXzB4MmI1NjQ3W18weDUxMDgoJzB4MTBlJyldKF8weGNhNTY3OSxfMHgzMjUwYzcsXzB4MTNkYzAwKTt9KSxfMHgxM2RjMDBbJ29uJ10oJ2Nsb3NlJyxmdW5jdGlvbigpe18weDVjNzFjOShfMHg1MTA4KCcweDRlNScpKSxfMHhjYTU2NzlbXzB4NTEwOCgnMHg0OTMnKV09XzB4Y2E1Njc5W18weDUxMDgoJzB4NDkzJyldWydmaWx0ZXInXShmdW5jdGlvbihfMHgyMDUyMTEpe3JldHVybiBfMHgyMDUyMTEhPV8weDEzZGMwMDt9KSwhXzB4Y2E1Njc5W18weDUxMDgoJzB4NDkzJyldW18weDUxMDgoJzB4YmUnKV0mJl8weGNhNTY3OVsnX21vZGVsJ11bXzB4NTEwOCgnMHg0ZTYnKV0oXzB4NTEwOCgnMHhhOCcpLF8weDMyNTBjNyk7fSksXzB4Y2E1Njc5W18weDUxMDgoJzB4MTQwJyldKHsndHlwZSc6XzB4NTEwOCgnMHg2NzQnKSwncHJvamVjdCc6eyduYW1lJzpfMHhjYTU2NzlbXzB4NTEwOCgnMHgxNDInKV1bXzB4NTEwOCgnMHg1NGQnKV0oKSwncGF0aCc6XzB4Y2E1Njc5W18weDUxMDgoJzB4MTQyJyldW18weDUxMDgoJzB4NTRjJyldKCksJ2NvbmZpZyc6XzB4Y2E1Njc5WydfbW9kZWwnXVsncHJvamVjdENvbmZpZyddKCl9LCd2ZXJzaW9uJzpfMHhjYTU2NzlbXzB4NTEwOCgnMHgxNDInKV1bXzB4NTEwOCgnMHgzMDQnKV0oKX0sXzB4MTNkYzAwKTt9KSxfMHg1YzcxYzkoXzB4NTEwOCgnMHg2NzUnKSxfMHgxM2RjMDApO307XzB4Y2E1Njc5W18weDUxMDgoJzB4NGY1JyldKF8weDRmZjE2NilbJ3RoZW4nXShmdW5jdGlvbihfMHgxM2RjMDApe2lmKF8weDEzZGMwMCl0cnl7XzB4Y2E1Njc5W18weDUxMDgoJzB4Njc2JyldPV8weDJiNTY0N1snY3JlYXRlU2VydmVyJ10oZnVuY3Rpb24oXzB4MTNkYzAwLF8weDIwNTIxMSl7aWYoXzB4NTEwOCgnMHg2NzcnKSE9PV8weDUxMDgoJzB4Njc3Jykpe3RoaXNbXzB4NTEwOCgnMHgxNDInKV1bXzB4NTEwOCgnMHgyZmUnKV0oXzB4MTNkYzAwW18weDUxMDgoJzB4Mjc1JyldKTt9ZWxzZXtfMHgyMDUyMTFbXzB4NTEwOCgnMHgyZGQnKV0oMHhjOCx7J0NvbnRlbnQtVHlwZSc6J3RleHQvaHRtbCd9KSxfMHgyMDUyMTFbXzB4NTEwOCgnMHgyNzgnKV0oXzB4M2E0NDlmKSxfMHgyMDUyMTFbXzB4NTEwOCgnMHg2YicpXSgpO319KVsnb24nXSgnZXJyb3InLGZ1bmN0aW9uKCl7aWYoXzB4NTEwOCgnMHg2NzgnKSE9PV8weDUxMDgoJzB4Njc5Jykpe3JldHVybiBfMHgyNzNkNGIoKTt9ZWxzZXt2YXIgXzB4Y2U1YWRhPXRoaXM7cmV0dXJuIF8weGNlNWFkYVtfMHg1MTA4KCcweDg2JyldW18weDUxMDgoJzB4MTM2JyldKF8weDEzZGMwMCk7fX0pW18weDUxMDgoJzB4MjBkJyldKF8weDUxMDgoJzB4NWNkJyksZnVuY3Rpb24oKXtyZXR1cm4gXzB4MjczZDRiKCk7fSlbJ2xpc3RlbiddKF8weDEzZGMwMCk7fWNhdGNoKF8weDI4N2FhYyl7aWYoXzB4NTEwOCgnMHg2N2EnKSE9PSd3ZEtoWScpe3ZhciBfMHgzZWMyNjQ9ITB4MTt0cnl7dmFyIF8weDkyYmZkNz1fMHgxYmE4MzRbXzB4NTEwOCgnMHg0ZScpXShfMHgxM2RjMDBbJ29yaWdpbiddKTtfMHgzZWMyNjQ9J3dhbGxhYnlqcy5jb20nPT09XzB4OTJiZmQ3Wydob3N0bmFtZSddO31jYXRjaChfMHgyNjBkNDYpe31yZXR1cm4gXzB4M2VjMjY0O31lbHNle18weDI3M2Q0YigpO319ZWxzZSBfMHgyNzNkNGIoKTt9KTt9LF8weDIwNTIxMVtfMHg1MTA4KCcweGFlJyldW18weDUxMDgoJzB4MTQwJyldPWZ1bmN0aW9uKF8weDEzZGMwMCxfMHgyMDUyMTEpe18weDIwNTIxMSYmKF8weDUxMDgoJzB4NjdiJyk9PT1fMHgxM2RjMDBbXzB4NTEwOCgnMHg2OScpXT8oXzB4MjA1MjExWydfc29tZVJlc3VsdHNSZXNwb25zZVNlcU51bSddPTB4MCxfMHgxM2RjMDBbXzB4NTEwOCgnMHg2N2MnKV09XzB4MjA1MjExW18weDUxMDgoJzB4NjdkJyldKyspOl8weDUxMDgoJzB4MTUxJyk9PT1fMHgxM2RjMDBbXzB4NTEwOCgnMHg2OScpXSYmKF8weDEzZGMwMFtfMHg1MTA4KCcweDY3YycpXT1fMHgyMDUyMTFbXzB4NTEwOCgnMHg2N2QnKV0rKykpLF8weDVjNzFjOShfMHg1MTA4KCcweDY3ZScpLF8weDEzZGMwMFtfMHg1MTA4KCcweDY5JyldKTt2YXIgXzB4Y2E1Njc5PUpTT05bXzB4NTEwOCgnMHhiMCcpXShfMHgxM2RjMDApO18weDIwNTIxMT9fMHgyMDUyMTFbXzB4NTEwOCgnMHgxNmYnKV0oXzB4Y2E1Njc5KTpfW18weDUxMDgoJzB4MTM1JyldKHRoaXNbXzB4NTEwOCgnMHg0OTMnKV0sZnVuY3Rpb24oXzB4MTNkYzAwKXtyZXR1cm4gXzB4MTNkYzAwWydzZW5kJ10oXzB4Y2E1Njc5KTt9KTt9LF8weDIwNTIxMVtfMHg1MTA4KCcweGFlJyldWydfZmluZEZyZWVQb3J0J109ZnVuY3Rpb24oKXt2YXIgXzB4MTNkYzAwPXRoaXM7cmV0dXJuIFFbXzB4NTEwOCgnMHgxNmMnKV0oX1tfMHg1MTA4KCcweGRhJyldKF8weDIxYTE4YSxmdW5jdGlvbihfMHgyMDUyMTEpe3JldHVybiBfMHgxM2RjMDBbXzB4NTEwOCgnMHg0ZjUnKV0oXzB4MjA1MjExKTt9KSlbJ3RoZW4nXShmdW5jdGlvbihfMHgxM2RjMDApe3JldHVybiBfW18weDUxMDgoJzB4MjNhJyldKF8weDEzZGMwMCxmdW5jdGlvbihfMHgxM2RjMDApe2lmKF8weDUxMDgoJzB4NjdmJykhPT1fMHg1MTA4KCcweDY3ZicpKXtyZXR1cm4gXzB4MzI1MGM3W18weDUxMDgoJzB4NjgwJyldKF8weDEzZGMwMCk7fWVsc2V7cmV0dXJuISFfMHgxM2RjMDA7fX0pO30pWyd0aGVuJ10oZnVuY3Rpb24oXzB4MTNkYzAwKXtpZignbVFvSVonPT09XzB4NTEwOCgnMHg2ODEnKSl7cmV0dXJuIF8weDEzZGMwMHx8UVtfMHg1MTA4KCcweDFkZCcpXShuZXcgRXJyb3IoXzB4NTEwOCgnMHg2ODInKSkpO31lbHNle3ZhciBfMHg5ZWE5M2U9dGhpc1snZmlsZUJ5UGF0aCddKF8weDEzZGMwMFtfMHg1MTA4KCcweDE1MicpXSk7aWYoXzB4OWVhOTNlKXJldHVybih0aGlzW18weDUxMDgoJzB4OWUnKV1bJ2lzWmVyb0NvbmZpZ0plc3QnXSgpfHx0aGlzW18weDUxMDgoJzB4OWUnKV1bXzB4NTEwOCgnMHg5ZicpXSgpKSYmXzB4OWVhOTNlW18weDUxMDgoJzB4NWZlJyldKF9bJ2JpbmQnXSh0aGlzW18weDUxMDgoJzB4OWUnKV1bXzB4NTEwOCgnMHgzZTAnKV0sdGhpc1tfMHg1MTA4KCcweDllJyldKSksX1snY2hhaW4nXShfMHgxM2RjMDBbXzB4NTEwOCgnMHgyM2InKV0/XzB4OWVhOTNlWydsaW5lUmFuZ2VzJ10oXzB4MTNkYzAwWydsaW5lJ10pOl8weDllYTkzZVtfMHg1MTA4KCcweDJlNScpXSgpKVtfMHg1MTA4KCcweGQ4JyldKGZ1bmN0aW9uKF8weDJjNzAyMCl7cmV0dXJuIV8weDJjNzAyMFsnaXNDb3ZlcmVkJ10oKTt9KVtfMHg1MTA4KCcweGRhJyldKGZ1bmN0aW9uKF8weDJjMGM4Nil7cmV0dXJuIF8weDllYTkzZVtfMHg1MTA4KCcweDQ4YycpXShfMHgyYzBjODYpO30pWyd2YWx1ZSddKCk7fX0pO30sXzB4MjA1MjExWydwcm90b3R5cGUnXVsnX2NoZWNrUG9ydCddPWZ1bmN0aW9uKF8weDEzZGMwMCl7aWYoJ0xjQXNRJyE9PV8weDUxMDgoJzB4NjgzJykpe3JldHVybiBfMHgxM2RjMDAmJl8weDEzZGMwMFtfMHg1MTA4KCcweGJmJyldKC9cclxuXHMqL2csJ1x4MjAnKVtfMHg1MTA4KCcweGJmJyldKC9cblxzKi9nLCdceDIwJyk7fWVsc2V7dmFyIF8weDIwNTIxMT1mdW5jdGlvbihfMHgyMDUyMTEpe3JldHVybiBmdW5jdGlvbihfMHhjYTU2Nzkpe2lmKF8weDUxMDgoJzB4Njg0JykhPT1fMHg1MTA4KCcweDY4NCcpKXtfMHgzMjUwYzdbJ3JlamVjdCddKG5ldyBFcnJvcihfMHg1MTA4KCcweDFkOScpKSksY29uc29sZVtfMHg1MTA4KCcweDI0JyldKF8weDUxMDgoJzB4MWQ5JyksXzB4MjczZDRiWydtZXNzYWdlJ10pO31lbHNle3ZhciBfMHgzMjUwYzc9XzB4MjczZDRiW18weDUxMDgoJzB4Njg1JyldKClbXzB4NTEwOCgnMHgyMGQnKV0oXzB4NTEwOCgnMHgyNCcpLGZ1bmN0aW9uKF8weDIwNTIxMSl7cmV0dXJuIF8weGNhNTY3OShfMHgyMDUyMTEmJl8weDUxMDgoJzB4NjBkJyk9PT1fMHgyMDUyMTFbXzB4NTEwOCgnMHgxJyldP18weDEzZGMwMDoweDApO30pW18weDUxMDgoJzB4MjBkJyldKCdsaXN0ZW5pbmcnLGZ1bmN0aW9uKCl7cmV0dXJuIF8weDMyNTBjN1tfMHg1MTA4KCcweDIwZCcpXSgnY2xvc2UnLGZ1bmN0aW9uKCl7cmV0dXJuIF8weGNhNTY3OShfMHgxM2RjMDApO30pWydjbG9zZSddKCk7fSlbXzB4NTEwOCgnMHg2ODYnKV0oXzB4MTNkYzAwLF8weDIwNTIxMSk7fX07fTtyZXR1cm4gUVtfMHg1MTA4KCcweDFhOCcpXShfMHgyMDUyMTEoXzB4NTEwOCgnMHg1ZTMnKSkpW18weDUxMDgoJzB4MWRhJyldKGZ1bmN0aW9uKF8weDEzZGMwMCl7cmV0dXJuIF8weDEzZGMwMD9RW18weDUxMDgoJzB4MWE4JyldKF8weDIwNTIxMShfMHg1MTA4KCcweDE1ZicpKSk6MHgwO30pWyd0aGVuJ10oZnVuY3Rpb24oXzB4MTNkYzAwKXtpZihfMHg1MTA4KCcweDY4NycpPT09XzB4NTEwOCgnMHg2ODcnKSl7cmV0dXJuIF8weDEzZGMwMD9RWydwcm9taXNlJ10oXzB4MjA1MjExKF8weDUxMDgoJzB4M2NjJykpKToweDA7fWVsc2V7cmV0dXJuIF8weDI3M2Q0YigpO319KTt9fSxfMHgyMDUyMTFbXzB4NTEwOCgnMHhhZScpXVsnc3RvcCddPWZ1bmN0aW9uKCl7dmFyIF8weDEzZGMwMD10aGlzO18weDEzZGMwMFtfMHg1MTA4KCcweDQ1ZScpXSYmXzB4MTNkYzAwW18weDUxMDgoJzB4NDVlJyldWydjbG9zZSddKCksXzB4MTNkYzAwW18weDUxMDgoJzB4Njc2JyldJiZfMHgxM2RjMDBbXzB4NTEwOCgnMHg2NzYnKV1bJ2Nsb3NlJ10oKTt9LF8weDIwNTIxMTt9KEV2ZW50RW1pdHRlcik7XzB4MjA1MjExW18weDUxMDgoJzB4MicpXT1fMHhiNjUzMDg7fSx7Jy4uLy4uL3V0aWxzJzoweDFlLCcuLi9zZXJ2ZXIvZG9jdW1lbnRJbkVkaXRvcic6MHhjLCdodHRwJzp2b2lkIDB4MCwnbmV0Jzp2b2lkIDB4MCwndXJsJzp2b2lkIDB4MCwnd3MnOnZvaWQgMHgwfV0sMjU6W2Z1bmN0aW9uKF8weDQzYTBjZSxfMHhmYzUzODQsXzB4MzVmODJmKXt2YXIgXzB4ZTJmYzA4PV8weDQzYTBjZShfMHg1MTA4KCcweDM0JykpLF8weDMxZmIxOD1fMHg0M2EwY2UoJ3BhcnNldXJsJyksXzB4MTM0MmVjPV8weDQzYTBjZSgnbWltZScpLF8weDNkMGVmYz1fMHg0M2EwY2UoJ2dyYWNlZnVsLWZzJyksXzB4NDMzZDUwPW5ldyBNYXAoKSxfMHgxNTQxNzU9ZnVuY3Rpb24oXzB4NDNhMGNlLF8weGZjNTM4NCxfMHgzNWY4MmYpe2lmKF8weDUxMDgoJzB4Njg4Jyk9PT0nYk5ZS24nKXt2YXIgXzB4MmJmNTNkPXsneyc6J30nLCcoJzonKScsJ1snOiddJ307aWYoXzB4NTEwOCgnMHgzM2QnKSE9dHlwZW9mIF8weDQzYTBjZXx8Jyc9PT1fMHg0M2EwY2UpcmV0dXJuITB4MTtpZigvW0A/ISsqXVwoL1tfMHg1MTA4KCcweDcxJyldKF8weDQzYTBjZSkpcmV0dXJuITB4MDtmb3IodmFyIF8weDFkNDM0OCxfMHg0OWM0YjU9L1xcKC4pfCheIXxcKnxbXF0uKyldXD98XFtbXlxcXF1dK1xdfFx7W15cXH1dK1x9fFwoXD9bOiE9XVteXFwpXStcKXxcKFtefF0rXHxbXlxcKV0rXCkpLztfMHgxZDQzNDg9XzB4NDljNGI1WydleGVjJ10oXzB4NDNhMGNlKTspe2lmKF8weDFkNDM0OFsweDJdKXJldHVybiEweDA7dmFyIF8weDEwMWY3MD1fMHgxZDQzNDhbXzB4NTEwOCgnMHg2ODknKV0rXzB4MWQ0MzQ4WzB4MF1bJ2xlbmd0aCddLF8weDEwZjY2MD1fMHgxZDQzNDhbMHgxXSxfMHg1OTYwOTc9XzB4MTBmNjYwP18weDJiZjUzZFtfMHgxMGY2NjBdOm51bGw7aWYoXzB4MTBmNjYwJiZfMHg1OTYwOTcpe3ZhciBfMHgyZWJiYTA9XzB4NDNhMGNlW18weDUxMDgoJzB4NTEnKV0oXzB4NTk2MDk3LF8weDEwMWY3MCk7XzB4MmViYmEwIT09LTB4MSYmKF8weDEwMWY3MD1fMHgyZWJiYTArMHgxKTt9XzB4NDNhMGNlPV8weDQzYTBjZVtfMHg1MTA4KCcweDMzOCcpXShfMHgxMDFmNzApO31yZXR1cm4hMHgxO31lbHNle18weDQzYTBjZVtfMHg1MTA4KCcweDY0JyldKHsnQ2FjaGUtQ29udHJvbCc6J3B1YmxpYyxceDIwbWF4LWFnZT04NjQwMCcsJ0V4cGlyZXMnOm5ldyBEYXRlKERhdGVbXzB4NTEwOCgnMHg2OGEnKV0oKSsweDUyNjVjMDApW18weDUxMDgoJzB4NjhiJyldKCl9KSxfMHg0M2EwY2VbXzB4NTEwOCgnMHg2OScpXShfMHgxMzQyZWNbXzB4NTEwOCgnMHg2OGMnKV0oXzB4MzVmODJmLF8weDUxMDgoJzB4NjhkJykpKSxfMHg0M2EwY2VbXzB4NTEwOCgnMHgxNWEnKV0oMHhjOClbJ2VuZCddKF8weGZjNTM4NCk7fX07XzB4ZmM1Mzg0W18weDUxMDgoJzB4MicpXT17J2NyZWF0ZSc6ZnVuY3Rpb24oXzB4NDNhMGNlLF8weGZjNTM4NCl7aWYoJ2l2TkhtJz09PV8weDUxMDgoJzB4NjhlJykpe3ZhciBfMHgzNWY4MmY9bG9nZ2VyW18weDUxMDgoJzB4OWEnKV0oJ21pZGRsZXdhcmUnKSxfMHgxMzQyZWM9XzB4MzVmODJmW18weDUxMDgoJzB4MTIwJyldLF8weDU3NmY1Nz1fMHgzNWY4MmZbXzB4NTEwOCgnMHg0Y2UnKV0sXzB4MTQ4NTZkPV8weDQzYTBjZVsnbWFpbiddW18weDUxMDgoJzB4NjhmJyldP18weDQzYTBjZVtfMHg1MTA4KCcweDY5MCcpXVtfMHg1MTA4KCcweDY4ZicpXTpfMHg0MzNkNTA7cmV0dXJuIF8weDQzYTBjZVtfMHg1MTA4KCcweDY5MCcpXVtfMHg1MTA4KCcweDY5MScpXT1fMHg0M2EwY2VbXzB4NTEwOCgnMHg2OTAnKV1bJ3JlYWQnXT9fMHg0M2EwY2VbXzB4NTEwOCgnMHg2OTAnKV1bXzB4NTEwOCgnMHg2OTEnKV06XzB4M2QwZWZjW18weDUxMDgoJzB4NjkyJyldLF8weDQzYTBjZVtfMHg1MTA4KCcweDY5MycpXSYmKF8weDQzYTBjZVsnYWx0J11bXzB4NTEwOCgnMHg2OGYnKV18fChfMHg0M2EwY2VbXzB4NTEwOCgnMHg2OTMnKV1bJ2NhY2hlJ109eydnZXQnOmZ1bmN0aW9uKCl7cmV0dXJuIG51bGw7fSwnc2V0JzpmdW5jdGlvbigpe2lmKF8weDUxMDgoJzB4Njk0Jyk9PT1fMHg1MTA4KCcweDY5NScpKXtyZXR1cm4oXzB4NDNhMGNlPU9iamVjdFtfMHg1MTA4KCcweDIyOScpXXx8eydfX3Byb3RvX18nOltdfWluc3RhbmNlb2YgQXJyYXkmJmZ1bmN0aW9uKF8weDViZDdlYixfMHg0ZTEwMDYpe18weDViZDdlYlsnX19wcm90b19fJ109XzB4NGUxMDA2O318fGZ1bmN0aW9uKF8weDgzNjMwMyxfMHg1MTU0NGUpe2Zvcih2YXIgXzB4NTdiZmY2IGluIF8weDUxNTQ0ZSlfMHg1MTU0NGVbXzB4NTEwOCgnMHg2OCcpXShfMHg1N2JmZjYpJiYoXzB4ODM2MzAzW18weDU3YmZmNl09XzB4NTE1NDRlW18weDU3YmZmNl0pO30pKF8weGZjNTM4NCxfMHgzNWY4MmYpO31lbHNle3JldHVybiBudWxsO319fSksXzB4NDNhMGNlW18weDUxMDgoJzB4NjkzJyldWydyZWFkJ109XzB4NDNhMGNlWydhbHQnXVtfMHg1MTA4KCcweDY5MScpXT9fMHg0M2EwY2VbXzB4NTEwOCgnMHg2OTMnKV1bXzB4NTEwOCgnMHg2OTEnKV06XzB4M2QwZWZjW18weDUxMDgoJzB4NjkyJyldKSxmdW5jdGlvbihfMHgzNWY4MmYsXzB4M2QwZWZjKXtpZihfMHg1MTA4KCcweDY5NicpPT09J2lGSEd1Jyl7cmV0dXJueydwYXRoJzpfMHg0M2EwY2VbXzB4NTEwOCgnMHgzNCcpXSwnaWQnOl8weDQzYTBjZVsnaWQnXX07fWVsc2V7dmFyIF8weDQzM2Q1MD1fMHgzMWZiMTgoXzB4MzVmODJmKVsncGF0aG5hbWUnXTsnLyc9PT1fMHg0MzNkNTAmJihfMHg0MzNkNTA9JycpO3ZhciBfMHgyNTRkNGE9XzB4NDNhMGNlWydtYWluJ11bXzB4NTEwOCgnMHg2OTcnKV07XzB4NTc2ZjU3KF8weDUxMDgoJzB4Njk4JyksXzB4NDMzZDUwfHxfMHgyNTRkNGEpO3ZhciBfMHgxMzZkN2Y9XzB4ZTJmYzA4Wydub3JtYWxpemUnXShfMHhlMmZjMDhbJ2pvaW4nXShfMHgyNTRkNGEsXzB4NDMzZDUwKSksXzB4MzNmMmM5PV8weDE0ODU2ZFtfMHg1MTA4KCcweDYyJyldKF8weDEzNmQ3Zik7aWYoX1snaXNTdHJpbmcnXShfMHgzM2YyYzkpfHxfMHgzM2YyYzkgaW5zdGFuY2VvZiBCdWZmZXIpXzB4NTc2ZjU3KF8weDUxMDgoJzB4Njk5JyksXzB4NDMzZDUwfHxfMHgyNTRkNGEpLF8weDE1NDE3NShfMHgzZDBlZmMsXzB4MzNmMmM5LF8weDEzNmQ3Zik7ZWxzZXtpZihfMHg1MTA4KCcweDY5YScpIT09J0hNc1N1Jyl7dmFyIF8weGYxZjQ5Zj1mdW5jdGlvbihfMHg0M2EwY2UsXzB4MzVmODJmLF8weDMxZmIxOCxfMHgxNDg1NmQpe18weDMxZmIxOD9fMHg0M2EwY2U/KF8weDI1NGQ0YT1fMHg0M2EwY2VbXzB4NTEwOCgnMHg2OTcnKV0sXzB4NTc2ZjU3KCdTZXJ2aW5nXHgyMCVzXHgyMGZyb21ceDIwZGlza1x4MjAoYWx0Llx4MjBsb2NhdGlvbiknLF8weDQzM2Q1MHx8XzB4MjU0ZDRhKSxfMHgxMzZkN2Y9XzB4ZTJmYzA4Wydub3JtYWxpemUnXShfMHhlMmZjMDhbJ2pvaW4nXShfMHgyNTRkNGEsXzB4NDMzZDUwKSksXzB4NDNhMGNlW18weDUxMDgoJzB4NjkxJyldKF8weDEzNmQ3ZixfMHhmMWY0OWZbJ2JpbmQnXShudWxsLG51bGwsXzB4NDNhMGNlW18weDUxMDgoJzB4NjhmJyldKSkpOihfMHgxMzQyZWMoJ0Vycm9yXHgyMHdoZW5ceDIwcmVhZGluZ1x4MjBmaWxlXHgyMCVzLFx4MjAlcycsXzB4MTM2ZDdmLF8weDMxZmIxOCYmXzB4MzFmYjE4W18weDUxMDgoJzB4YTgnKV18fF8weDUxMDgoJzB4MTc3JykpLF8weGZjNTM4NCYmY29uc29sZVtfMHg1MTA4KCcweDI0JyldKF8weDUxMDgoJzB4NjliJykrXzB4NDMzZDUwKSxfMHgzZDBlZmNbXzB4NTEwOCgnMHgxNWEnKV0oMHgxOTQpW18weDUxMDgoJzB4NmInKV0oKSk6KF8weDM1ZjgyZltfMHg1MTA4KCcweDY0JyldKF8weDEzNmQ3ZixfMHgxNDg1NmQpLF8weDE1NDE3NShfMHgzZDBlZmMsXzB4MTQ4NTZkLF8weDEzNmQ3ZikpO307XzB4NTc2ZjU3KF8weDUxMDgoJzB4NjljJyksXzB4NDMzZDUwfHxfMHgyNTRkNGEpLF8weDQzYTBjZVtfMHg1MTA4KCcweDY5MCcpXVtfMHg1MTA4KCcweDY5MScpXShfMHgxMzZkN2YsXzB4ZjFmNDlmWydiaW5kJ10obnVsbCxfMHg0M2EwY2VbXzB4NTEwOCgnMHg2OTMnKV0sXzB4MTQ4NTZkKSk7fWVsc2V7XzB4M2QwZWZjPV8weDMxZmIxOFtfMHg1MTA4KCcweDU4YScpXShfMHg0M2EwY2UpfHxfMHgzZDBlZmM7dmFyIF8weDEyMjRiYz1fMHg0M2EwY2VbXzB4NTEwOCgnMHg1ZjAnKV0oKTtpZihfMHgxMjI0YmMmJihfMHgxMzQyZWNbXzB4NDNhMGNlW18weDUxMDgoJzB4MzQnKV0oKV09XzB4MzFmYjE4W18weDUxMDgoJzB4NjlkJyldP18weDQzYTBjZVtfMHg1MTA4KCcweDMyYycpXSgpOl8weDEyMjRiYyksXzB4MzVmODJmKXt2YXIgXzB4MTQ0YWFhPV8weDQzYTBjZVtfMHg1MTA4KCcweDUwJyldKCksXzB4NDIyOGEzPV8weDM1ZjgyZltfMHgxNDRhYWFdO18weDQyMjhhMz9fMHhlMmZjMDhbXzB4NTEwOCgnMHhhMicpXVtfMHgxNDRhYWFdPV8weDQyMjhhMzpkZWxldGUgXzB4ZTJmYzA4W18weDUxMDgoJzB4YTInKV1bXzB4MTQ0YWFhXTt9fX19fTt9ZWxzZXt2YXIgXzB4NThkYWNkPXRoaXM7X1tfMHg1MTA4KCcweDEzNScpXSh0aGlzWydfY29ubmVjdGlvbnMnXSxmdW5jdGlvbihfMHg0YjUzNTMpe18weDRiNTM1M1tfMHg1MTA4KCcweDU1ZScpXSYmXzB4NThkYWNkWydfc2VuZEFsbEZpbGVzV2l0aENvdmVyYWdlJ10oX1tfMHg1MTA4KCcweGRhJyldKF8weDQzYTBjZVtfMHg1MTA4KCcweDFjYicpXSxmdW5jdGlvbihfMHgxMzI3NDIpe3JldHVybnsncGF0aCc6XzB4MTMyNzQyW18weDUxMDgoJzB4MzQnKV0sJ2lkJzpfMHgxMzI3NDJbJ2lkJ119O30pLF8weDRiNTM1Myk7fSk7fX19O30seydncmFjZWZ1bC1mcyc6dm9pZCAweDAsJ21pbWUnOnZvaWQgMHgwLCdwYXJzZXVybCc6dm9pZCAweDAsJ3BhdGgnOnZvaWQgMHgwfV0sMjY6W2Z1bmN0aW9uKF8weDI4ZGJiZixfMHg1NThhMzEsXzB4MTMyNWFkKXt2YXIgXzB4ODcxMDIyPShfMHgyOGRiYmYoJ2ZzJyksXzB4MjhkYmJmKF8weDUxMDgoJzB4MzQnKSkpLF8weDRhMGQ0Yj1fMHgyOGRiYmYoXzB4NTEwOCgnMHgyM2YnKSlbXzB4NTEwOCgnMHg2OWUnKV0sXzB4MTBiYWE2PWxvZ2dlcltfMHg1MTA4KCcweDlhJyldKF8weDUxMDgoJzB4NjlmJykpWydkZWJ1ZyddLF8weDNjZDM3Yj1fMHgyOGRiYmYoXzB4NTEwOCgnMHgxMWQnKSksXzB4MzU1ZmQ0PV8weDI4ZGJiZihfMHg1MTA4KCcweDgwJykpLF8weDM5MjczYz1fMHg1MTA4KCcweDZhMCcpLF8weDY5NDQwZD1mdW5jdGlvbihfMHgyOGRiYmYpe2lmKF8weDUxMDgoJzB4NmExJyk9PT1fMHg1MTA4KCcweDZhMScpKXt2YXIgXzB4NTU4YTMxPXRoaXM7XzB4NTU4YTMxW18weDUxMDgoJzB4OWUnKV09XzB4MjhkYmJmLF8weDU1OGEzMVsnX25vZGVQYXRoJ109XzB4MjhkYmJmW18weDUxMDgoJzB4OGEnKV0oKVtfMHg1MTA4KCcweDcnKV1bXzB4NTEwOCgnMHgxMjMnKV0sXzB4NTU4YTMxW18weDUxMDgoJzB4ODknKV09XzB4MjhkYmJmW18weDUxMDgoJzB4OGEnKV0oKVtfMHg1MTA4KCcweDhiJyldLF8weDU1OGEzMVtfMHg1MTA4KCcweDZhMicpXT1fMHgyOGRiYmZbJ3NldHRpbmdzJ10oKVtfMHg1MTA4KCcweDZhMycpXSxfMHg1NThhMzFbXzB4NTEwOCgnMHg2YTQnKV09XzB4MjhkYmJmW18weDUxMDgoJzB4OGEnKV0oKVtfMHg1MTA4KCcweGNmJyldLF8weDU1OGEzMVtfMHg1MTA4KCcweDYyYicpXT1fMHgyOGRiYmZbXzB4NTEwOCgnMHg1NTQnKV0oKSxfMHg1NThhMzFbXzB4NTEwOCgnMHg2YTUnKV09XzB4ODcxMDIyW18weDUxMDgoJzB4ODInKV0oXzB4MjhkYmJmW18weDUxMDgoJzB4MjlhJyldLF8weDUxMDgoJzB4NGNiJykpO3RyeXtfMHg1NThhMzFbXzB4NTEwOCgnMHg2YTYnKV09XzB4ODcxMDIyW18weDUxMDgoJzB4ODInKV0oXzB4ODcxMDIyWydkaXJuYW1lJ10oXzB4MzU1ZmQ0W18weDUxMDgoJzB4NmE3JyldKF8weDU1OGEzMVtfMHg1MTA4KCcweDZhNScpXSxfMHg1MTA4KCcweDZhOCcpKSksXzB4NTEwOCgnMHg2YTknKSk7fWNhdGNoKF8weDIzMTY4Yil7fV8weDU1OGEzMVtfMHg1MTA4KCcweDFhMScpXT1fMHgyOGRiYmZbXzB4NTEwOCgnMHg4YScpXSgpW18weDUxMDgoJzB4NycpXVtfMHg1MTA4KCcweDk3JyldLF8weDU1OGEzMVtfMHg1MTA4KCcweDEyYScpXT1fMHgyOGRiYmZbJ3NldHRpbmdzJ10oKVtfMHg1MTA4KCcweDExNycpXVtfMHg1MTA4KCcweDZhYScpXSxfMHg1NThhMzFbJ190ZXN0RnJhbWV3b3JrJ109XzB4MjhkYmJmWydzZXR0aW5ncyddKClbXzB4NTEwOCgnMHg5OCcpXSxfMHg1NThhMzFbXzB4NTEwOCgnMHg2YWInKV09cHJvY2Vzc1tfMHg1MTA4KCcweDcnKV1bXzB4NTEwOCgnMHg1JyldfHxfMHg1NThhMzFbXzB4NTEwOCgnMHg2MmInKeKAi10/cHJvY2Vzc1tfMHg1MTA4KCcweDI4OScpXSgpOl8weDI4ZGJiZltfMHg1MTA4KCcweDMxMicpXSxfMHg1NThhMzFbXzB4NTEwOCgnMHhhMCcpXT1fMHgyOGRiYmZbXzB4NTEwOCgnMHhhMCcpXSxfMHg1NThhMzFbXzB4NTEwOCgnMHg2YWMnKV09XzB4MjhkYmJmWydfb3JpZ2luYWxSb290J10sXzB4NTU4YTMxW18weDUxMDgoJzB4OGMnKV09ISFfMHgyOGRiYmZbJ3NldHRpbmdzJ10oKVtfMHg1MTA4KCcweDhkJyldLF8weDU1OGEzMVsnX21heExvZ0VudHJ5U2l6ZSddPV8weDI4ZGJiZlsnc2V0dGluZ3MnXSgpW18weDUxMDgoJzB4NmFkJyldLF8weDU1OGEzMVtfMHg1MTA4KCcweDg2JyldPW5ldyBfMHgzY2QzN2IoXzB4NTU4YTMxW18weDUxMDgoJzB4OWUnKV0seydjcmVhdGUnOl9bXzB4NTEwOCgnMHgxMTUnKV0oXzB4NTU4YTMxW18weDUxMDgoJzB4NmFlJyldLF8weDU1OGEzMSksJ3JlY3ljbGUnOl9bXzB4NTEwOCgnMHgxMTUnKV0oXzB4NTU4YTMxW18weDUxMDgoJzB4NmFmJyldLF8weDU1OGEzMSksJ2hlYWx0aHknOl9bXzB4NTEwOCgnMHgxMTUnKV0oXzB4NTU4YTMxW18weDUxMDgoJzB4NmIwJyldLF8weDU1OGEzMSksJ3ByZXBhcmUnOl9bXzB4NTEwOCgnMHgxMTUnKV0oXzB4NTU4YTMxWydfcHJlcGFyZSddLF8weDU1OGEzMSl9KSxfMHg1NThhMzFbXzB4NTEwOCgnMHg4NicpXVtfMHg1MTA4KCcweDEzYycpXShfMHg1NThhMzFbXzB4NTEwOCgnMHg2YWInKV0pO31lbHNle2lmKF8weDU1OGEzMVtfMHg1MTA4KCcweDIxOScpXSYmXzB4MjhkYmJmJiZfMHg1NThhMzFbXzB4NTEwOCgnMHgyMTknKV09PT1fMHgyOGRiYmYpe2lmKF8weDUxMDgoJzB4NWUzJyk9PT1fMHg4NzEwMjJ8fF8weDUxMDgoJzB4MTVmJyk9PT1fMHg4NzEwMjIpcmV0dXJuO18weDEzMjVhZFtfMHg1MTA4KCcweDFjNycpXSh7J3R5cGUnOl8weDUxMDgoJzB4MjIwJyksJ2FkZHJlc3MnOl8weDg3MTAyMn0pO319fTtfMHg2OTQ0MGRbXzB4NTEwOCgnMHhhZScpXT17J3J1bic6ZnVuY3Rpb24oXzB4MjhkYmJmKXtpZihfMHg1MTA4KCcweDZiMScpPT09XzB4NTEwOCgnMHg2YjEnKSl7dmFyIF8weDU1OGEzMT10aGlzO3JldHVybiBfMHg1NThhMzFbJ193b3JrZXJQb29sJ11bXzB4NTEwOCgnMHgxMmQnKV0oXzB4MjhkYmJmKTt9ZWxzZXtfMHgyOGRiYmZbXzB4NTEwOCgnMHgxMTYnKV0oKSxfMHgyOGRiYmZbXzB4NTEwOCgnMHgxMzgnKV1bXzB4NTEwOCgnMHgxMzknKV0oKTt9fSwnY2FuY2VsJzpmdW5jdGlvbihfMHgyOGRiYmYpe2lmKF8weDUxMDgoJzB4NmIyJyk9PT1fMHg1MTA4KCcweDZiMicpKXt2YXIgXzB4NTU4YTMxPXRoaXM7cmV0dXJuIF8weDU1OGEzMVtfMHg1MTA4KCcweDg2JyldW18weDUxMDgoJzB4MTM2JyldKF8weDI4ZGJiZik7fWVsc2V7dmFyIF8weDUzNzU1Mj1fMHg0YTBkNGIoXzB4MTMyNWFkKVtfMHg1MTA4KCcweDZiMycpXTsnLyc9PT1fMHg1Mzc1NTImJihfMHg1Mzc1NTI9JycpO3ZhciBfMHg5MWFhOTk9XzB4MjhkYmJmWydtYWluJ11bXzB4NTEwOCgnMHg2OTfigIsnKV07XzB4Njk0NDBkKF8weDUxMDgoJzB4Njk4JyksXzB4NTM3NTUyfHxfMHg5MWFhOTkpO3ZhciBfMHgxN2Y4MmQ9XzB4ODcxMDIyW18weDUxMDgoJzB4NGYwJyldKF8weDg3MTAyMlsnam9pbiddKF8weDkxYWE5OSxfMHg1Mzc1NTIpKSxfMHg1NGVhYjE9dVtfMHg1MTA4KCcweDYyJyldKF8weDE3ZjgyZCk7aWYoX1tfMHg1MTA4KCcweDY1JyldKF8weDU0ZWFiMSl8fF8weDU0ZWFiMSBpbnN0YW5jZW9mIEJ1ZmZlcilfMHg2OTQ0MGQoXzB4NTEwOCgnMHg2OTknKSxfMHg1Mzc1NTJ8fF8weDkxYWE5OSksXzB4MzkyNzNjKF8weDNjZDM3YixfMHg1NGVhYjEsXzB4MTdmODJkKTtlbHNle3ZhciBfMHgyOWUzODQ9ZnVuY3Rpb24oXzB4MjY5ZmY2LF8weDRjOWU2YSxfMHgxNjA5N2UsXzB4NDI3MzEwKXtfMHgxNjA5N2U/XzB4MjY5ZmY2PyhfMHg5MWFhOTk9XzB4MjY5ZmY2W18weDUxMDgoJzB4Njk3JyldLF8weDY5NDQwZChfMHg1MTA4KCcweDZiNCcpLF8weDUzNzU1Mnx8XzB4OTFhYTk5KSxfMHgxN2Y4MmQ9XzB4ODcxMDIyWydub3JtYWxpemUnXShfMHg4NzEwMjJbXzB4NTEwOCgnMHg4MicpXShfMHg5MWFhOTksXzB4NTM3NTUyKSksXzB4MjY5ZmY2W18weDUxMDgoJzB4NjkxJyldKF8weDE3ZjgyZCxfMHgyOWUzODRbXzB4NTEwOCgnMHgxMTUnKV0obnVsbCxudWxsLF8weDI2OWZmNlsnY2FjaGUnXSkpKTooXzB4MTBiYWE2KF8weDUxMDgoJzB4NmI1JyksXzB4MTdmODJkLF8weDE2MDk3ZSYmXzB4MTYwOTdlW18weDUxMDgoJzB4YTgnKV18fF8weDUxMDgoJzB4MTc3JykpLF8weDU1OGEzMSYmY29uc29sZVtfMHg1MTA4KCcweDI0JyldKF8weDUxMDgoJzB4NjliJykrXzB4NTM3NTUyKSxfMHgzY2QzN2JbXzB4NTEwOCgnMHgxNWEnKV0oMHgxOTQpW18weDUxMDgoJzB4NmInKV0oKSk6KF8weDRjOWU2YVtfMHg1MTA4KCcweDY0JyldKF8weDE3ZjgyZCxfMHg0MjczMTApLF8weDM5MjczYyhfMHgzY2QzN2IsXzB4NDI3MzEwLF8weDE3ZjgyZCkpO307XzB4Njk0NDBkKCdTZXJ2aW5nXHgyMCVzXHgyMGZyb21ceDIwZGlzaycsXzB4NTM3NTUyfHxfMHg5MWFhOTkpLF8weDI4ZGJiZltfMHg1MTA4KCcweDY5MCcpXVtfMHg1MTA4KCcweDY5MScpXShfMHgxN2Y4MmQsXzB4MjllMzg0W18weDUxMDgoJzB4MTE1JyldKG51bGwsXzB4MjhkYmJmW18weDUxMDgoJzB4NjkzJyldLHUpKTt9fX0sJ3N0YXJ0JzpmdW5jdGlvbigpe3ZhciBfMHgyOGRiYmY9dGhpcztyZXR1cm4gXzB4MjhkYmJmW18weDUxMDgoJzB4ODYnKV1bJ3N0YXJ0J10oKTt9LCdzdG9wJzpmdW5jdGlvbigpe3ZhciBfMHgyOGRiYmY9dGhpcztfMHgyOGRiYmZbXzB4NTEwOCgnMHg4NicpXVtfMHg1MTA4KCcweDEzZCcpXSgpO30sJ19jcmVhdGVOb2RlSW5zdGFuY2UnOmZ1bmN0aW9uKF8weDI4ZGJiZixfMHg1NThhMzEpe2lmKF8weDUxMDgoJzB4NmI2JykhPT0nWVVzVUEnKXt2YXIgXzB4MTMyNWFkPXRoaXM7c2V0SW1tZWRpYXRlKGZ1bmN0aW9uKCl7dHJ5e3Byb2Nlc3NbXzB4NTEwOCgnMHg3JyldW18weDUxMDgoJzB4NScpXSYmKF8weDEzMjVhZFsnX3BhcmFtcyddPV8weDEzMjVhZFtfMHg1MTA4KCcweDllJyldW18weDUxMDgoJzB4OGEnKV0oKVtfMHg1MTA4KCcweDcnKV1bXzB4NTEwOCgnMHg5NycpXSxfMHgxMzI1YWRbJ19yZWN5Y2xlJ109XzB4MTMyNWFkWydfcHJvamVjdCddW18weDUxMDgoJzB4OGEnKV0oKVtfMHg1MTA4KCcweDExNycpXVtfMHg1MTA4KCcweDZhYScpXSk7dmFyIF8weDg3MTAyMj0oXzB4MTMyNWFkW18weDUxMDgoJzB4MWExJyldW18weDUxMDgoJzB4MTIzJyldP19bJ21hcCddKF8weDHigIszMjVhZFtfMHg1MTA4KCcweDFhMScpXVtfMHg1MTA4KCcweDEyMycpXVtfMHg1MTA4KCcweGJmJyldKC8iKFteIl0rKSIvZyxmdW5jdGlvbihfMHgyOGRiYmYpe3JldHVybiBfMHgyOGRiYmZbJ3JlcGxhY2UnXSgvXHMvZyxfMHg1MTA4KCcweDNjNCcpKTt9KVtfMHg1MTA4KCcweDEyNScpXSgnXHgyMCcpLGZ1bmN0aW9uKF8weDI4ZGJiZil7cmV0dXJuIF9bJ3RyaW0nXShfMHgyOGRiYmZbJ3JlcGxhY2UnXSgvX3NwYWNlX3Rva2VuXy9nLCdceDIwJyksJ1x4MjInKTt9KTpbXSlbXzB4NTEwOCgnMHhiNycpXShbcHJvY2Vzc1snbWFpbk1vZHVsZSddW18weDUxMDgoJzB4MmQzJyldLCdydW5uZXInLF8weDI4ZGJiZixfMHgxMzI1YWRbJ193b3JrZXJQb29sJ11bXzB4NTEwOCgnMHhmOScpXSgpLF8weDEzMjVhZFsnX3Rlc3RGcmFtZXdvcmsnXVsndmVyc2lvbiddKyhfMHgxMzI1YWRbXzB4NTEwOCgnMHg2YjcnKV1bJ2F1dG9EZXRlY3RlZCddPycsYXV0b0RldGVjdGVkJzonJyksXzB4MTMyNWFkW18weDUxMDgoJzB4NmI3JyldWydwYXRoJ118fCcnLF8weDEzMjVhZFtfMHg1MTA4KCcweDZhNScpXSxfMHgxMzI1YWRbJ19vcmlnaW5hbENhY2hlUm9vdCddLHByb2Nlc3NbXzB4NTEwOCgnMHg3JyldW18weDUxMDgoJzB4NmI4JyldJiZfMHgxMzI1YWRbXzB4NTEwOCgnMHg2YTYnKV18fCcnXSksXzB4M2NkMzdiPV9bXzB4NTEwOCgnMHg2NicpXSh7fSxwcm9jZXNzW18weDUxMDgoJzB4NycpXSxfMHgxMzI1YWRbXzB4NTEwOCgnMHgxYTEnKV1bXzB4NTEwOCgnMHg3JyldP19bXzB4NTEwOCgnMHhiNScpXShfMHgxMzI1YWRbXzB4NTEwOCgnMHgxYTEnKV1bXzB4NTEwOCgnMHg3JyldW18weDUxMDgoJzB4MTI1JyldKCc7JyksZnVuY3Rpb24oXzB4MjhkYmJmLF8weDU1OGEzMSl7dmFyIF8weDEzMjVhZD1fMHg1NThhMzFbXzB4NTEwOCgnMHgxMjUnKV0oJz0nKSxfMHg4NzEwMjI9X1sndHJpbUxlZnQnXShfMHgxMzI1YWRbMHgwXSk7cmV0dXJuIF8weDI4ZGJiZltfMHg4NzEwMjJdPV8weDU1OGEzMVtfMHg1MTA4KCcweDE5OCcpXShfMHgxMzI1YWRbMHgwXVsnbGVuZ3RoJ10rMHgxKSxfMHgyOGRiYmY7fSx7fSk6e30pO2RlbGV0ZSBfMHgzY2QzN2JbXzB4NTEwOCgnMHgxYWUnKV0sZGVsZXRlIF8weDNjZDM3YltfMHg1MTA4KCcweDFhZicpXTt2YXIgXzB4MzU1ZmQ0PXsncHJvY2Vzcyc6XzB4NGEwZDRiKF8weDEzMjVhZFtfMHg1MTA4KCcweDZiOScpXSxfMHg4NzEwMjIseydjd2QnOl8weDEzMjVhZFsnX2N3ZCddLCdlbnYnOl8weDNjZDM3Yn0pLCdvbkNvbm5lY3RlZCc6ZnVuY3Rpb24oXzB4MjhkYmJmKXtfWydpc0Z1bmN0aW9uJ10oXzB4MjhkYmJmKT90aGlzW18weDUxMDgoJzB4M2RiJyldPV8weDI4ZGJiZjp0aGlzW18weDUxMDgoJzB4M2RiJyldJiYodGhpc1tfMHg1MTA4KCcweDNkYicpXShfMHgyOGRiYmYpLGRlbGV0ZSB0aGlzW18weDUxMDgoJzB4M2RiJyldLGRlbGV0ZSB0aGlzWydvbkNvbm5lY3RlZCddKTt9fTtfMHgzNTVmZDRbXzB4NTEwOCgnMHgxMzgnKV1bXzB4NTEwOCgnMHg0OTcnKV1bJ29uJ10oXzB4NTEwOCgnMHgxZWYnKSxmdW5jdGlvbihfMHgyOGRiYmYpe3ZhciBfMHg1NThhMzE9XzB4MjhkYmJmW18weDUxMDgoJzB4MWY3JyldKCd1dGY4Jyk7XzB4MTBiYWE2KCdFcnJvclx4MjBpblx4MjB3b3JrZXI6XHgyMCVzJyxfMHg1NThhMzEpLGNvbnNvbGVbXzB4NTEwOCgnMHgyNCcpXShfMHg1NThhMzEpO30pLF8weDU1OGEzMShfMHgzNTVmZDQpO31jYXRjaChfMHg0ODU5NjUpe2lmKF8weDUxMDgoJzB4NmJhJykhPT1fMHg1MTA4KCcweDZiYScpKXt2YXIgXzB4MmQwYTQyPV8weDQ4NTk2NVtfMHg1MTA4KCcweGEzJyldKF8weDg3MTAyMltfMHg1MTA4KCcweGE0JyldKF8weDEzMjVhZFtfMHg1MTA4KCcweDllJyldW18weDUxMDgoJzB4YTAnKV0sXzB4MjhkYmJmKSk7XzB4MTMyNWFkWydfcHJvamVjdCddW18weDUxMDgoJzB4YTUnKV0oXzB4MmQwYTQyKT9fMHgxMzI1YWRbXzB4NTEwOCgnMHg5ZScpXVsnZ2V0TGF0ZXN0T3JpZ2luYWxGaWxlQ29udGVudEJ5UGF0aEFzeW5jJ10oXzB4MmQwYTQyKVsndGhlbiddKGZ1bmN0aW9uKF8weDIzNDQ0ZSl7cmV0dXJuIF8weDU1OGEzMShudWxsLF8weDIzNDQ0ZSk7fSlbXzB4NTEwOCgnMHhhOScpXShmdW5jdGlvbihfMHgxZjNhZWEpe3JldHVybiBfMHg1NThhMzEoXzB4MWYzYWVhKTt9KTpfMHg1NThhMzEobmV3IEVycm9yKCdGaWxlXHgyMFx4MjcnK18weDJkMGE0MitfMHg1MTA4KCcweGFkJykpKTt9ZWxzZXtfMHgxMGJhYTYoXzB4NTEwOCgnMHgzODYnKSxfMHgyOGRiYmYsXzB4NDg1OTY1JiYoXzB4NDg1OTY1WydzdGFjayddfHxfMHg0ODU5NjVbJ21lc3NhZ2UnXSkpLF8weDU1OGEzMSgpO319fSk7fWVsc2V7XzB4Njk0NDBkKF8weDUxMDgoJzB4MTgwJykrXzB4NGEwZDRiW18weDUxMDgoJzB4YTgnKV0pO319LCdfcmVjeWNsZU5vZGVJbnN0YW5jZSc6ZnVuY3Rpb24oXzB4MjhkYmJmKXt0cnl7XzB4MjhkYmJmW18weDUxMDgoJzB4MTM4JyldWydzdGRvdXQnXVsncmVtb3ZlQWxsTGlzdGVuZXJzJ10oXzB4NTEwOCgnMHgxZWYnKSksXzB4MjhkYmJmW18weDUxMDgoJzB4MTM4JyldW18weDUxMDgoJzB4NDk3JyldW18weDUxMDgoJzB4NDk2JyldKF8weDUxMDgoJzB4MWVmJykpO31maW5hbGx5e2lmKF8weDUxMDgoJzB4NmJiJyk9PT0nSm5SaksnKXtfMHgyOGRiYmZbXzB4NTEwOCgnMHgxMzgnKV1bXzB4NTEwOCgnMHgxMzknKV0oKTt9ZWxzZXtfMHgyOGRiYmZbXzB4NTEwOCgnMHgxZGQnKV0oeydydW5DYW5jZWxsZWQnOiEweDB9KTt9fX0sJ19pc05vZGVJbnN0YW5jZUhlYWx0aHknOmZ1bmN0aW9uKF8weDI4ZGJiZil7cmV0dXJuIF8weDI4ZGJiZltfMHg1MTA4KCcweDEzOCcpXSYmXzB4MjhkYmJmWydwcm9jZXNzJ11bXzB4NTEwOCgnMHgxMTgnKV0mJiFfMHgyOGRiYmZbXzB4NTEwOCgnMHgxMzgnKV1bXzB4NTEwOCgnMHgzZTcnKV0mJiFfMHgyOGRiYmZbXzB4NTEwOCgnMHgxMzgnKV1bXzB4NTEwOCgnMHg2YmMnKV0mJm51bGw9PT1fMHgyOGRiYmZbXzB4NTEwOCgnMHgxMzgnKV1bXzB4NTEwOCgnMHgzZTgnKV07fSwnX3ByZXBhcmUnOmZ1bmN0aW9uKF8weDI4ZGJiZixfMHg1NThhMzEpe3ZhciBfMHgxMzI1YWQ9dGhpcyxfMHg4NzEwMjI9X1tfMHg1MTA4KCcweDE0NicpXSgpLF8weDRhMGQ0Yj1fMHgxMzI1YWRbXzB4NTEwOCgnMHg2YmQnKV0oXzB4NTU4YTMxLF8weDg3MTAyMik7cmV0dXJuIF8weDEwYmFhNihfMHg1MTA4KCcweDE0OCcpLF8weDRhMGQ0YiksUVtfMHg1MTA4KCcweGY2JyldKClbJ3RoZW4nXShmdW5jdGlvbigpe2lmKF8weDUxMDgoJzB4NmJlJykhPT1fMHg1MTA4KCcweDZiZicpKXtyZXR1cm4gXzB4MTMyNWFkW18weDUxMDgoJzB4ODYnKV1bXzB4NTEwOCgnMHgxNWMnKV0oKT9RW18weDUxMDgoJzB4MWRkJyldKHsncnVuQ2FuY2VsbGVkJzohMHgwfSk6KF8weDEwYmFhNignUHJlcGFyaW5nXHgyMHNhbmRib3hceDIwWyVzXScsXzB4NGEwZDRiKSxfMHgxMzI1YWRbXzB4NTEwOCgnMHg4NicpXVsnZ2V0V29ya2VyJ10oXzB4NTU4YTMxKSk7fWVsc2V7dmFyIF8weDRjOTg5ND10aGlzO18weDRjOTg5NFtfMHg1MTA4KCcweDllJyldPV8weDI4ZGJiZixfMHg0Yzk4OTRbXzB4NTEwOCgnMHg2YjknKV09XzB4MjhkYmJmWydzZXR0aW5ncyddKClbXzB4NTEwOCgnMHg3JyldWydydW5uZXInXSxfMHg0Yzk4OTRbJ19pbml0aWFsaXplciddPV8weDI4ZGJiZltfMHg1MTA4KCcweDhhJyldKClbXzB4NTEwOCgnMHg4YicpXSxfMHg0Yzk4OTRbXzB4NTEwOCgnMHg2YTInKV09XzB4MjhkYmJmW18weDUxMDgoJzB4OGEnKV0oKVtfMHg1MTA4KCcweDZhMycpXSxfMHg0Yzk4OTRbXzB4NTEwOCgnMHg2YTQnKV09XzB4MjhkYmJmW18weDUxMDgoJzB4OGEnKV0oKVsnc2xvd1Rlc3RUaHJlc2hvbGQnXSxfMHg0Yzk4OTRbXzB4NTEwOCgnMHg2MmInKV09XzB4MjhkYmJmWydpc1plcm9Db25maWdKZXN0J10oKSxfMHg0Yzk4OTRbXzB4NTEwOCgnMHg2YTUnKV09XzB4ODcxMDIyW18weDUxMDgoJzB4ODInKV0oXzB4MjhkYmJmWydfbG9jYWxSb290J10sXzB4NTEwOCgnMHg0Y2InKSk7dHJ5e18weDRjOTg5NFtfMHg1MTA4KCcweDZhNicpXT1fMHg4NzEwMjJbJ2pvaW4nXShfMHg4NzEwMjJbXzB4NTEwOCgnMHgyMjUnKV0oXzB4MzU1ZmQ0W18weDUxMDgoJzB4NmE3JyldKF8weDRjOTg5NFtfMHg1MTA4KCcweDZhNScpXSxfMHg1MTA4KCcweDZhOCcpKSksXzB4NTEwOCgnMHg2YTknKSk7fWNhdGNoKF8weDEyMDAwMSl7fV8weDRjOTg5NFtfMHg1MTA4KCcweDFhMScpXT1fMHgyOGRiYmZbXzB4NTEwOCgnMHg4YScpXSgpW18weDUxMDgoJzB4NycpXVtfMHg1MTA4KCcweDk3JyldLF8weDRjOTg5NFtfMHg1MTA4KCcweDEyYScpXT1fMHgyOGRiYmZbXzB4NTEwOCgnMHg4YScpXSgpW18weDUxMDgoJzB4MTE3JyldW18weDUxMDgoJzB4NmFhJyldLF8weDRjOTg5NFtfMHg1MTA4KCcweDZiNycpXT1fMHgyOGRiYmZbXzB4NTEwOCgnMHg4YScpXSgpW18weDUxMDgoJzB4OTgnKV0sXzB4NGM5ODk0WydfY3dkJ109cHJvY2Vzc1tfMHg1MTA4KCcweDcnKV1bXzB4NTEwOCgnMHg1JyldfHxfMHg0Yzk4OTRbXzB4NTEwOCgnMHg2MmInKV0/cHJvY2Vzc1snY3dkJ10oKTpfMHgyOGRiYmZbXzB4NTEwOCgnMHgzMTInKV0sXzB4NGM5ODk0W18weDUxMDgoJzB4YTAnKV09XzB4MjhkYmJmW18weDUxMDgoJzB4YTAnKV0sXzB4NGM5ODk0W18weDUxMDgoJzB4NmFjJyldPV8weDI4ZGJiZltfMHg1MTA4KCcweDZjMCcpXSxfMHg0Yzk4OTRbXzB4NTEwOCgnMHg4YycpXT0hIV8weDI4ZGJiZltfMHg1MTA4KCcweDhhJyldKClbXzB4NTEwOCgnMHg4ZCcpXSxfMHg0Yzk4OTRbXzB4NTEwOCgnMHhjYycpXT1fMHgyOGRiYmZbJ3NldHRpbmdzJ10oKVtfMHg1MTA4KCcweDZhZCcpXSxfMHg0Yzk4OTRbXzB4NTEwOCgnMHg4NicpXT1uZXcgXzB4M2NkMzdiKF8weDRjOTg5NFtfMHg1MTA4KCcweDllJyldLHsnY3JlYXRlJzpfWydiaW5kJ10oXzB4NGM5ODk0W18weDUxMDgoJzB4NmFlJyldLF8weDRjOTg5NCksJ3JlY3ljbGUnOl9bXzB4NTEwOCgnMHgxMTUnKV0oXzB4NGM5ODk0W18weDUxMDgoJzB4NmFmJyldLF8weDRjOTg5NCksJ2hlYWx0aHknOl9bJ2JpbmQnXShfMHg0Yzk4OTRbJ19pc05vZGVJbnN0YW5jZUhlYWx0aHknXSxfMHg0Yzk4OTQpLCdwcmVwYXJlJzpfW18weDUxMDgoJzB4MTE1JyldKF8weDRjOTg5NFsnX3ByZXBhcmUnXSxfMHg0Yzk4OTQpfSksXzB4NGM5ODk0W18weDUxMDgoJzB4ODYnKV1bXzB4NTEwOCgnMHgxM2MnKV0oXzB4NGM5ODk0W18weDUxMDgoJzB4NmFiJyldKTt9fSlbXzB4NTEwOCgnMHgxZGEnKV0oZnVuY3Rpb24oXzB4M2NkMzdiKXtpZihfMHg1MTA4KCcweDZjMScpIT09XzB4NTEwOCgnMHg2YzEnKSl7ZGVsZXRlIF8weDEzMjVhZFtfMHg1MTA4KCcweDFhNicpXVtfMHg4NzEwMjJdO31lbHNle3JldHVybiBfMHgxMGJhYTYoXzB4NTEwOCgnMHgxZGUnKSxfMHg0YTBkNGIpLFFbXzB4NTEwOCgnMHhmNicpXSh7J2luc3RhbmNlJzp7J3Jlc3VtZSc6ZnVuY3Rpb24oKXtpZihfMHg1MTA4KCcweDZjMicpPT09XzB4NTEwOCgnMHg2YzMnKSl7aWYoX1tfMHg1MTA4KCcweDZjNCcpXShfMHgyOGRiYmYsXzB4NTEwOCgnMHg2YzUnKSkpcmV0dXJuITB4MTt9ZWxzZXtfMHgzY2QzN2JbJ2NoYW5uZWwnXVtfMHg1MTA4KCcweDE2ZicpXShKU09OW18weDUxMDgoJzB4YjAnKV0oeyd0eXBlJzpfMHg1MTA4KCcweDZjNicpLCdkYXRhJzp7fX0pKTt9fSwncGluZyc6ZnVuY3Rpb24oXzB4MjhkYmJmKXt2YXIgXzB4NTU4YTMxPV9bXzB4NTEwOCgnMHg2YzcnKV0oKSxfMHgxMzI1YWQ9ZnVuY3Rpb24oXzB4ODcxMDIyKXtpZihfMHg1MTA4KCcweDZjOCcpPT09XzB4NTEwOCgnMHg2YzgnKSl7dmFyIF8weDRhMGQ0Yjt0cnl7XzB4NGEwZDRiPUpTT05bXzB4NTEwOCgnMHg0ZScpXShfMHg4NzEwMjIpO31jYXRjaChfMHgxYWQ2OTYpe2lmKF8weDUxMDgoJzB4NmM5Jyk9PT1fMHg1MTA4KCcweDZjYScpKXt2YXIgXzB4NTU0NGEyPXsnc3RhY2snOl8weDU1OGEzMX07cmV0dXJuIF8weDEzMjVhZFtfMHg1MTA4KCcweDllJyldW18weDUxMDgoJzB4MTljJyldKF8weDU1NDRhMiksXzB4NTU4YTMxPV8weDU1NDRhMltfMHg1MTA4KCcweDE5ZCcpXTt9ZWxzZXtyZXR1cm47fX1fMHg1MTA4KCcweDZjYicpPT09XzB4NGEwZDRiW18weDUxMDgoJzB4NjknKV0mJl8weDRhMGQ0YlsnZGF0YSddPT09XzB4NTU4YTMxJiYoXzB4M2NkMzdiW18weDUxMDgoJzB4NTBhJyldW18weDUxMDgoJzB4NGU2JyldKF8weDUxMDgoJzB4YTgnKSxfMHgxMzI1YWQpLF8weDI4ZGJiZigpKTt9ZWxzZXtfMHgxMzI1YWQ9WzB4NixfMHg4NzEwMjJdLF8weDEwYmFhNj0weDA7fX07XzB4M2NkMzdiW18weDUxMDgoJzB4NTBhJyldWydvbiddKF8weDUxMDgoJzB4YTgnKSxfMHgxMzI1YWQpLF8weDNjZDM3YltfMHg1MTA4KCcweDUwYScpXVtfMHg1MTA4KCcweDE2ZicpXShKU09OW18weDUxMDgoJzB4YjAnKV0oeyd0eXBlJzonaW46cGluZycsJ2RhdGEnOl8weDU1OGEzMX0pKTt9LCdjbG9zZSc6ZnVuY3Rpb24oKXtpZihfMHg1MTA4KCcweDZjYycpIT09XzB4NTEwOCgnMHg2Y2QnKSl7XzB4MTMyNWFkW18weDUxMDgoJzB4MTJhJyldPyhfMHgxMzI1YWRbXzB4NTEwOCgnMHg4NicpXVtfMHg1MTA4KCcweDFlMicpXShfMHg1NThhMzEpLF8weDEzMjVhZFtfMHg1MTA4KCcweDg2JyldW18weDUxMDgoJzB4MTQ5JyldKF8weDU1OGEzMSlbXzB4NTEwOCgnMHgxZGEnKV0oX1tfMHg1MTA4KCcweDE2NScpXSkpOl8weDNjZDM3YltfMHg1MTA4KCcweDUwYScpXVsnc2VuZCddKEpTT05bXzB4NTEwOCgnMHhiMCcpXSh7J3R5cGUnOl8weDUxMDgoJzB4NTBiJyksJ2RhdGEnOnt9fSkpO31lbHNle3ZhciBfMHg0NWNjYTU9X1tfMHg1MTA4KCcweDIzYScpXShfMHg1NThhMzFbXzB4NTEwOCgnMHg0MDgnKV0oKSxmdW5jdGlvbihfMHgxYzlhNjIpe3JldHVybiBfMHgxYzlhNjImJl8weDFjOWE2MltfMHg1MTA4KCcweDE5ZCcpXSYmXzB4MWM5YTYyW18weDUxMDgoJzB4MTlkJyldKClbXzB4NTEwOCgnMHhiZScpXTt9KTtpZighXzB4NDVjY2E1KXt2YXIgXzB4NWY2YT1fMHg1NThhMzFbXzB4NTEwOCgnMHg0YTAnKV0oKTtyZXR1cm4gXzB4NWY2YT97J2ZpbGUnOl8weDU1OGEzMVsnZmlsZVBhdGgnXSgpLCdsb2MnOltfMHg1ZjZhW18weDUxMDgoJzB4MWZmJyldKCksXzB4NWY2YVtfMHg1MTA4KCcweDNmNCcpXSgpXX06e307fXZhciBfMHg1YzNjNzU9XzB4NDVjY2E1W18weDUxMDgoJzB4MTlkJyldKClbMHgwXSxfMHgxMmNhNDA9XzB4NWMzYzc1WydyYW5nZSddKCksXzB4NTRiZDgzPXt9O3JldHVybiBfMHg1NGJkODNbJ2ZpbGUnXT1fMHg1YzNjNzVbXzB4NTEwOCgnMHg0ODMnKV0oKSxfMHgxMmNhNDAmJihfMHg1NGJkODNbXzB4NTEwOCgnMHg1MycpXT1bXzB4MTJjYTQwW18weDUxMDgoJzB4MWZmJyldKCksXzB4MTJjYTQwWydzdGFydENvbHVtbiddKCldKSxfMHg1NGJkODM7fX0sJ2Nsb3NpbmcnOl9bXzB4NTEwOCgnMHgxNjUnKV0sJ3N0YXJ0JzpmdW5jdGlvbihfMHg1NThhMzEsXzB4NGEwZDRiKXtpZignR2dqYUEnIT09XzB4NTEwOCgnMHg2Y2UnKSl7aWYoXzB4NTU4YTMxKF8weDUxMDgoJzB4MTc0JykpKXtpZihfMHg1MTA4KCcweDZjZicpIT09XzB4NTEwOCgnMHg2ZDAnKSl7dHJ5e18weDNjZDM3YltfMHg1MTA4KCcweDEzOCcpXVtfMHg1MTA4KCcweDZkMScpXVtfMHg1MTA4KCcweDQ5NicpXShfMHg1MTA4KCcweDFlZicpKSxfMHgzY2QzN2JbXzB4NTEwOCgnMHgxMzgnKV1bJ3N0ZG91dCddWydvbiddKF8weDUxMDgoJzB4MWVmJyksZnVuY3Rpb24oXzB4MjhkYmJmKXtpZihfMHg1MTA4KCcweDZkMicpIT09XzB4NTEwOCgnMHg2ZDInKSl7cmV0dXJuIF8weDI4ZGJiZltfMHg1MTA4KCcweDEwOCcpXSgpO31lbHNle3RyeXtfMHgyOGRiYmY9XzB4MjhkYmJmJiZfMHgyOGRiYmZbXzB4NTEwOCgnMHgxZjcnKV0oXzB4NTEwOCgnMHg1ZDAnKSksfl8weDI4ZGJiZltfMHg1MTA4KCcweDUxJyldKF8weDM5MjczYykmJihfMHgyOGRiYmY9XzB4MjhkYmJmW18weDUxMDgoJzB4MTI1JyldKCdceDBhJyksX1snZWFjaCddKF8weDI4ZGJiZixmdW5jdGlvbihfMHgyOGRiYmYpe2lmKH5fMHgyOGRiYmZbJ2luZGV4T2YnXShfMHgzOTI3M2MpKXRyeXtKU09OWydwYXJzZSddKF8weDI4ZGJiZik7XzB4M2NkMzdiW18weDUxMDgoJzB4NTBhJyldW18weDUxMDgoJzB4YTcnKV0oJ21lc3NhZ2UnLF8weDI4ZGJiZik7fWNhdGNoKF8weDIwMzliNyl7aWYoXzB4NTEwOCgnMHg2ZDMnKT09PV8weDUxMDgoJzB4NmQzJykpe18weDEwYmFhNihfMHg1MTA4KCcweDZkNCcpK18weDIwMzliN1tfMHg1MTA4KCcweGE4JyldKTt9ZWxzZXtpZihfMHgyMDM5YjdbXzB4NTEwOCgnMHg2ZDUnKV0pe18weDIwMzliN1tfMHg1MTA4KCcweDZkNicpXT1uZXcgRGF0ZSgpW18weDUxMDgoJzB4MjY0JyldKCk7dmFyIF8weDUyMjk3Mj1fMHgyMDM5YjdbXzB4NTEwOCgnMHg2ZDYnKV0tXzB4MjAzOWI3W18weDUxMDgoJzB4NmQ3JyldLF8weDNkOTNhZD1fMHg1MTA4KCcweDZkOCcpO18weDUyMjk3Mj4weDNlOCYmKF8weDUyMjk3Mi89MHgzZTgsXzB4M2Q5M2FkPV8weDUxMDgoJzB4NmQ5JyksXzB4NTIyOTcyPjB4M2MmJihfMHg1MjI5NzIvPTB4M2MsXzB4M2Q5M2FkPV8weDUxMDgoJzB4NmRhJykpKSxjb25zb2xlW18weDUxMDgoJzB4MTMwJyldKCdGaW5pc2hlZFx4MjBleGVjdXRpbmdceDIwJytfMHgyMDM5YjdbXzB4NTEwOCgnMHg2ZDUnKV0rXzB4NTEwOCgnMHg2ZGInKStNYXRoW18weDUxMDgoJzB4NTRiJyldKDB4NjQqXzB4NTIyOTcyKS8weDY0KydceDIwJytfMHgzZDkzYWQpO31yZXR1cm4gUVtfMHg1MTA4KCcweGY2JyldKF8weDI4ZGJiZik7fX19KSk7fWNhdGNoKF8weDVlMThmYyl7XzB4MTBiYWE2KCdFcnJvclx4MjB3aGlsZVx4MjBwcm9jZXNzaW5nXHgyMFNURE9VVFx4MjBtZXNzYWdlOlx4MjAnK18weDVlMThmY1tfMHg1MTA4KCcweGE4JyldKTt9fX0pO31jYXRjaChfMHgxYWI2NTMpe18weDEwYmFhNihfMHg1MeKAizA4KCcweDZkYycpK18weDFhYjY1M1tfMHg1MTA4KCcweGE4JyldKTt9XzB4M2NkMzdiWydwcm9jZXNzJ11bJ3N0ZGVyciddWydyZW1vdmVBbGxMaXN0ZW5lcnMnXShfMHg1MTA4KCcweDFlZicpKSxfMHgzY2QzN2JbXzB4NTEwOCgnMHgxMzgnKV1bXzB4NTEwOCgnMHg0OTcnKV1bJ29uJ10oXzB4NTEwOCgnMHgxZWYnKSxmdW5jdGlvbihfMHgyOGRiYmYpe2lmKF8weDUxMDgoJzB4NmRkJykhPT1fMHg1MTA4KCcweDZkZScpKXtpZihfMHgyOGRiYmY9XzB4MjhkYmJmJiZfMHgyOGRiYmZbXzB4NTEwOCgnMHgxZjcnKV0oJ3V0ZjgnKSwhXzB4MjhkYmJmfHwweDAhPT1fMHgyOGRiYmZbXzB4NTEwOCgnMHg1MScpXShfMHg1MTA4KCcweDZkZicpKSl7dmFyIF8weDU1OGEzMT0nJztpZih+XzB4MjhkYmJmW18weDUxMDgoJzB4NTEnKV0oXzB4MzkyNzNjKSl7dmFyIF8weDEzMjVhZDtfMHgyOGRiYmY9XzB4MjhkYmJmW18weDUxMDgoJzB4MTI1JyldKCdceDBhJyksX1tfMHg1MTA4KCcweDEzNScpXShfMHgyOGRiYmYsZnVuY3Rpb24oXzB4MjhkYmJmKXtpZih+XzB4MjhkYmJmW18weDUxMDgoJzB4NTEnKV0oXzB4MzkyNzNjKSl0cnl7XzB4MTMyNWFkPUpTT05bXzB4NTEwOCgnMHg0ZScpXShfMHgyOGRiYmYpO31jYXRjaChfMHgxMzEwMmMpe18weDEwYmFhNihfMHg1MTA4KCcweDZlMCcpK18weDEzMTAyY1tfMHg1MTA4KCcweGE4JyldKTt9fSksXzB4MTMyNWFkJiZfMHg0YTBkNGIoXzB4MTMyNWFkWydtZXNzYWdlJ10sXzB4MTMyNWFkW18weDUxMDgoJzB4MTlkJyldLF8weDEzMjVhZFsnYWN0dWFsJ10sXzB4MTMyNWFkWydleHBlY3RlZCddKTt9ZWxzZXtpZihfMHgyOGRiYmYpe2lmKF8weDUxMDgoJzB4NmUxJyk9PT1fMHg1MTA4KCcweDZlMScpKXt2YXIgXzB4ODcxMDIyPV8weDI4ZGJiZltfMHg1MTA4KCcweDEyNScpXSgnXHgwYScpLF8weDNjZDM3Yj1bXTtfWydlYWNoJ10oXzB4ODcxMDIyLGZ1bmN0aW9uKF8weDI4ZGJiZil7aWYoJ2xrbVprJyE9PV8weDUxMDgoJzB4NmUyJykpe3JldHVybiFfW18weDUxMDgoJzB4MmQ4JyldKF9bXzB4NTEwOCgnMHgzYzInKV0oXzB4MjhkYmJmKSwnYXQnKSYmdm9pZCBfMHgzY2QzN2JbXzB4NTEwOCgnMHg0YicpXShfMHgyOGRiYmYpO31lbHNle3JldHVybiB0aGlzW18weDUxMDgoJzB4M2Q0JyldO319KSxfMHg1NThhMzE9XzB4M2NkMzdiW18weDUxMDgoJzB4ODInKV0oJ1x4MGEnKTt9ZWxzZXtyZXR1cm4gX1sndmVyaWZ5TG9jYWxPcmlnaW4nXShfMHgyOGRiYmZbXzB4NTEwOCgnMHg2NzEnKV0pO319XzB4NGEwZDRiKF8weDU1OGEzMSxfMHgyOGRiYmYpO319fWVsc2V7dmFyIF8weDFmN2UwYj1fMHgyOGRiYmZbJ3JlcXVlc3QnXSxfMHgxOTQxNjY9eyd0eXBlJzpfMHg1MTA4KCcweDJlYScpLCdkYXRhJzp7fSwnaWQnOl8weDI4ZGJiZlsnaWQnXX0sXzB4Mjc1ZWNkPXRoaXNbXzB4NTEwOCgnMHgxNDInKV1bXzB4NTEwOCgnMHgyZWInKV0oXzB4MWY3ZTBiKTtfMHgyNzVlY2Q/XzB4Mjc1ZWNkWydmaWxlJ10/KF8weDE5NDE2NltfMHg1MTA4KCcweDFlZicpXVsnZmlsZSddPV8weDI3NWVjZFsnZmlsZSddLF8weDE5NDE2NltfMHg1MTA4KCcweDFlZicpXVtfMHg1MTA4KCcweDUzJyldPV8weDI3NWVjZFtfMHg1MTA4KCcweDUzJyldLHRoaXNbXzB4NTEwOCgnMHgxYzcnKV0oXzB4MTk0MTY2KSk6dGhpc1tfMHg1MTA4KCcweDFlJyldKF8weDUxMDgoJzB4MmEnKSwnQ2FuXHgyMG5vdFx4MjBsb2NhdGVceDIwYVx4MjBmYWlsaW5nXHgyMHRlc3QnKTp0aGlzW18weDUxMDgoJzB4MWUnKV0oJ2luZm8nLF8weDUxMDgoJzB4MmVkJykpO319KTt2YXIgXzB4Njk0NDBkPXsnc2Vzc2lvbklkJzpfMHg4NzEwMjIsJ3Rlc3RzJzpfMHgyOGRiYmZbXzB4NTEwOCgnMHhkNCcpXSwnZmlsZXMnOl9bJ3JlZHVjZSddKF8weDI4ZGJiZltfMHg1MTA4KCcweGI2JyldW18weDUxMDgoJzB4YjcnKV0oXzB4MjhkYmJmW18weDUxMDgoJzB4YjgnKV0pLGZ1bmN0aW9uKF8weDU1OGEzMSxfMHg4NzEwMjIpe2lmKF9bXzB4NTEwOCgnMHhjMScpXShfMHg4NzEwMjJbJ2lkJ10pKXt2YXIgXzB4NGEwZDRiPXsnaWQnOl8weDg3MTAyMlsnaWQnXSwncmFuZ2VzTGVuZ3RoJzpfMHg4NzEwMjJbXzB4NTEwOCgnMHhjNCcpXX07aWYoXzB4NTU4YTMxW18weDUxMDgoJzB4NGInKV0oXzB4NGEwZDRiKSxfMHgxMzI1YWRbJ196ZXJvQ29uZmlnSmVzdCddJiYoXzB4NGEwZDRiW18weDUxMDgoJzB4MzQnKV09XzB4ODcxMDIyW18weDUxMDgoJzB4YjknKV0sXzB4NGEwZDRiW18weDUxMDgoJzB4NmUzJyldPV8weDg3MTAyMltfMHg1MTA4KCcweDZlMycpXSxfMHg0YTBkNGJbJ2NoaWxkRmlsZVBhdGgnXT1fMHg4NzEwMjJbXzB4NTEwOCgnMHg2ZTQnKV0sXzB4NGEwZDRiWydudW1iZXJPZkZ1bmN0aW9ucyddPV8weDg3MTAyMltfMHg1MTA4KCcweDZlNScpXSxfMHg0YTBkNGJbJ3RzJ109XzB4ODcxMDIyWyd0cyddLF8weDRhMGQ0YlsnaW5PcmlnaW5hbEZpbGVzQ2FjaGUnXT1fMHg4NzEwMjJbXzB4NTEwOCgnMHg2ZTYnKV0sXzB4NGEwZDRiW18weDUxMDgoJzB4Mzk5JyldPV8weDg3MTAyMltfMHg1MTA4KCcweDM5OScpXSxfMHg4NzEwMjJbXzB4NTEwOCgnMHg3MScpXSkpe18weDRhMGQ0YltfMHg1MTA4KCcweDcxJyldPSEweDA7dmFyIF8weDEwYmFhNj1fMHg4NzEwMjJbXzB4NTEwOCgnMHg2ZTcnKV0mJl8weDg3MTAyMltfMHg1MTA4KCcweDZlOCcpXSYmIV8weDg3MTAyMltfMHg1MTA4KCcweDZlOScpXSYmIV8weDEzMjVhZFtfMHg1MTA4KCcweDllJyldW18weDUxMDgoJzB4NmVhJyldKCkmJiFfMHgxMzI1YWRbXzB4NTEwOCgnMHg5ZScpXVtfMHg1MTA4KCcweDhhJyldKClbXzB4NTEwOCgnMHg2ZWInKV0mJiFfMHgyOGRiYmZbXzB4NTEwOCgnMHgzYjYnKV07XzB4MTBiYWE2JiYoXzB4NGEwZDRiW18weDUxMDgoJzB4NmVjJyldPSEweDAsXzB4NGEwZDRiW18weDUxMDgoJzB4NmU3JyldPV8weDg3MTAyMltfMHg1MTA4KCcweDZlNycpXSxfMHg0YTBkNGJbXzB4NTEwOCgnMHg2ZTgnKV09XzB4ODcxMDIyW18weDUxMDgoJzB4NmU4JyldKTt9fXJldHVybiBfMHg1NThhMzE7fSxbXSksJ3Rlc3RGaWxlcyc6X1tfMHg1MTA4KCcweGRhJyldKF8weDI4ZGJiZltfMHg1MTA4KCcweGJjJyldLGZ1bmN0aW9uKF8weDI4ZGJiZil7dmFyIF8weDU1OGEzMTtpZigweDA9PT1fMHgxMzI1YWRbXzB4NTEwOCgnMHg2YjcnKV1bXzB4NTEwOCgnMHg5OScpXVtfMHg1MTA4KCcweDUxJyldKF8weDUxMDgoJzB4NDMzJykpKXtpZihfMHg1MTA4KCcweDZlZCcpPT09J2tkY3pLJyl7XzB4MTBiYWE2WydpbnN0YW5jZSddW18weDUxMDgoJzB4NTBhJyldW18weDUxMDgoJzB4MTdmJyldKCksXzB4MTBiYWE2W18weDUxMDgoJzB4MzM0JyldW18weDUxMDgoJzB4NTBhJyldW18weDUxMDgoJzB4NDk2JyldKCk7fWVsc2V7dmFyIF8weDg3MTAyMj1fMHgxMzI1YWRbJ19wcm9qZWN0J11bJ19nZXRGaWxlTWV0YWRhdGFCeUlkJ10oXzB4MjhkYmJmW18weDUxMDgoJzB4YmInKV18fF8weDI4ZGJiZlsnaWQnXSk7XzB4NTU4YTMxPV8weDg3MTAyMiYmXzB4ODcxMDIyW18weDUxMDgoJzB4NDM0JyldKCk7fX1yZXR1cm57J3BhdGgnOl8weDI4ZGJiZltfMHg1MTA4KCcweDM0JyldLCdpZCc6XzB4MjhkYmJmWydvcmlnaW5hbElkJ118fF8weDI4ZGJiZlsnaWQnXSwndHlwZSc6XzB4MjhkYmJmWyd0eXBlJ10sJ29yaWdpbmFsVHlwZSc6XzB4MjhkYmJmW18weDUxMDgoJzB4NmVlJyldLCdjb250ZW50Jzpwcm9jZXNzWydlbnYnXVtfMHg1MTA4KCcweDUnKV0/XzB4MjhkYmJmW18weDUxMDgoJzB4Mzg5JyldOnZvaWQgMHgwLCdsaW5lTWFwJzpfMHg1NThhMzF9O30pLCdyb290JzpfMHgxMzI1YWRbJ19jd2QnXSwnbG9jYWxQcm9qZWN0RGlyJzpfMHgxMzI1YWRbXzB4NTEwOCgnMHhhMCcpXSwnZmx1c2hDYWNoZSc6ITB4MSwnaW5pdGlhbGl6ZXInOl8weDEzMjVhZFtfMHg1MTA4KCcweDg5JyldLCd0ZWFyZG93bic6XzB4MTMyNWFkW18weDUxMDgoJzB4NmEyJyldLCdzbG93VGVzdFRocmVzaG9sZCc6XzB4MTMyNWFkW18weDUxMDgoJzB4NmE0JyldLCdtYW51YWxUZXN0UnVuJzpfMHgyOGRiYmZbJ21hbnVhbFJ1biddLCdyZXBvcnRVbmhhbmRsZWRQcm9taXNlcyc6XzB4MTMyNWFkW18weDUxMDgoJzB4OGMnKV0sJ21heExvZ0VudHJ5U2l6ZSc6XzB4MTMyNWFkWydfbWF4TG9nRW50cnlTaXplJ10sJ2V4cHJlc3Npb25zVG9FdmFsdWF0ZSc6XzB4MjhkYmJmW18weDUxMDgoJzB4ZDAnKV0sJ2hpbnRzJzpfMHgxMzI1YWRbXzB4NTEwOCgnMHg5ZScpXVtfMHg1MTA4KCcweDhhJyldKClbJ2hpbnRzJ10sJ2F1dG9Db25zb2xlTG9nJzpfMHgxMzI1YWRbXzB4NTEwOCgnMHg5ZScpXVtfMHg1MTA4KCcweDhhJyldKClbXzB4NTEwOCgnMHg2ZWYnKV0sJ3ByZXNlcnZlQ29tbWVudHMnOl8weDEzMjVhZFsnX3Byb2plY3QnXVtfMHg1MTA4KCcweDhhJyldKClbJ3ByZXNlcnZlQ29tbWVudHMnXSwncmVwb3J0Q29uc29sZUVycm9yQXNFcnJvcic6XzB4MTMyNWFkW18weDUxMDgoJzB4OWUnKV1bXzB4NTEwOCgnMHg4YScpXSgpW18weDUxMDgoJzB4NmYwJyldLCdzdXBwcmVzc0NsZWFyaW5nUmVxdWlyZUNhY2hlJzpfMHgxMzI1YWRbXzB4NTEwOCgnMHg2MmInKV18fHZvaWQgMHgwfTtfMHgzY2QzN2JbJ2NoYW5uZWwnXVtfMHg1MTA4KCcweDE2ZicpXShKU09OW18weDUxMDgoJzB4YjAnKV0oeyd0eXBlJzpfMHg1MTA4KCcweDZmMScpLCdkYXRhJzpfMHg2OTQ0MGR9KSk7fWVsc2V7cmV0dXJuIFFbJ3doZW4nXShKU09OWydwYXJzZSddKF8weDI4ZGJiZikpO319fWVsc2V7aWYoXzB4NTU4YTMxKXtpZignc3RyaW5nJz09dHlwZW9mIF8weDEzMjVhZCl7aWYoIV8weDg3MTAyMnx8IV8weDg3MTAyMltfMHg1MTA4KCcweDRkZicpXSlyZXR1cm4gXzB4M2NkMzdiKF8weDU1OGEzMSxfMHgxMzI1YWQsXzB4ODcxMDIyKTt2YXIgXzB4MjAwMzRhPV8weDI4ZGJiZihfMHg1MTA4KCcweDRkZicpKVtfMHg1MTA4KCcweDZmMicpXTtyZXR1cm4gXzB4MjAwMzRhKF8weDU1OGEzMSxfMHgxMzI1YWQseydkb3QnOiEweDB9KTt9cmV0dXJuKHRoaXNbXzB4NTEwOCgnMHg2ZjMnKV0oXzB4ODcxMDIyJiZfMHg4NzEwMjJbJ2Fic29sdXRlJ10/Jyc6Jy4vJykrdGhpc1tfMHg1MTA4KCcweDZmMycpXShfMHg1NThhMzEpKVtfMHg1MTA4KCcweDU2NScpXShfMHgxMzI1YWQpO319fX0sJ25hbWUnOl8weDRhMGQ0Yiwnc2Vzc2lvbklkJzpfMHg4NzEwMjIsJ3dvcmtlcklkJzpfMHg1NThhMzF9KTt9fSk7fSwnX3NhbmRib3hOYW1lJzpmdW5jdGlvbihfMHgyOGRiYmYsXzB4NTU4YTMxKXtyZXR1cm4gXzB4NTEwOCgnMHhmZCcpK18weDI4ZGJiZitfMHg1MTA4KCcweGZlJykrXzB4NTU4YTMxO319LF8weDU1OGEzMVsnZXhwb3J0cyddPV8weDY5NDQwZDt9LHsnLi9ydW5Xb3JrZXJQb29sJzoweDFkLCcuL3V0aWxzJzoweDFlLCdjaGlsZF9wcm9jZXNzJzp2b2lkIDB4MCwnZnMnOnZvaWQgMHgwLCdwYXRoJzp2b2lkIDB4MH1dLDI3OltmdW5jdGlvbihfMHg1YjYxYTksXzB4Mjc5MjNjLF8weDM4YzFhMil7dmFyIF8weDExNTQ5Yj1sb2dnZXJbXzB4NTEwOCgnMHg5YScpXShfMHg1MTA4KCcweDZmNCcpKVtfMHg1MTA4KCcweDEyMCcpXSxfMHgyMzJjZDA9XzB4NWI2MWE5KCdwaGFudG9tJyksXzB4NDYzNDI1PV8weDViNjFhOSgnLi9ydW5Xb3JrZXJQb29sJyksXzB4MjdhMzRlPV8weDViNjFhOShfMHg1MTA4KCcweDExZScpKSxfMHgxNmJmZDk9ITB4MSxfMHgyZWIwOGI9ZnVuY3Rpb24oXzB4NWI2MWE5KXt2YXIgXzB4Mjc5MjNjPXRoaXM7XzB4Mjc5MjNjW18weDUxMDgoJzB4OWUnKV09XzB4NWI2MWE5LF8weDI3OTIzY1tfMHg1MTA4KCcweDEyMScpXT1RWyd3aGVuJ10oITB4MCksXzB4Mjc5MjNjWydfcGFyYW1zJ109XzB4NWI2MWE5W18weDUxMDgoJzB4OGEnKV0oKVtfMHg1MTA4KCcweDcnKV1bJ3BhcmFtcyddLF8weDI3OTIzY1tfMHg1MTA4KCcweDU5NCcpXT1fMHg1YjYxYTlbXzB4NTEwOCgnMHg4YScpXSgpW18weDUxMDgoJzB4NycpXVsndmlld3BvcnRTaXplJ10sXzB4Mjc5MjNjW18weDUxMDgoJzB4MWE0JyldPV8weDViNjFhOVtfMHg1MTA4KCcweDhhJyldKClbJ2VudiddW18weDUxMDgoJzB4NmY1JyldLF8weDI3OTIzY1snX3BoYW50b21qc1BhdGgnXT1fMHg1YjYxYTlbXzB4NTEwOCgnMHg4YScpXSgpWydlbnYnXVsncnVubmVyJ10sXzB4Mjc5MjNjWydfd29ya2VyUG9vbCddPW5ldyBfMHg0NjM0MjUoXzB4Mjc5MjNjWydfcHJvamVjdCddLHsnY3JlYXRlJzpfW18weDUxMDgoJzB4MTE1JyldKF8weDI3OTIzY1snX2NyZWF0ZVBoYW50b21JbnN0YW5jZSddLF8weDI3OTIzYyksJ3JlY3ljbGUnOl9bXzB4NTEwOCgnMHgxMTUnKV0oXzB4Mjc5MjNjW18weDUxMDgoJzB4NmY2JyldLF8weDI3OTIzYyksJ2hlYWx0aHknOl9bJ2JpbmQnXShfMHgyNzkyM2NbXzB4NTEwOCgnMHg1OTcnKV0sXzB4Mjc5MjNjKSwncHJlcGFyZSc6X1tfMHg1MTA4KCcweDExNScpXShfMHgyNzkyM2NbXzB4NTEwOCgnMHgxYzInKV0sXzB4Mjc5MjNjKX0pLF8weDI3OTIzY1tfMHg1MTA4KCcweDEyYycpXT1uZXcgXzB4MjdhMzRlKF8weDViNjFhOSxfMHgyNzkyM2NbJ193b3JrZXJQb29sJ10pO307XzB4MmViMDhiWydwcm90b3R5cGUnXT17J3J1bic6ZnVuY3Rpb24oXzB4NWI2MWE5KXtpZignREdLZ1InPT09J1BhckRuJyl7cmV0dXJuIHRoaXNbXzB4NTEwOCgnMHg0OGQnKV07fWVsc2V7dmFyIF8weDI3OTIzYz10aGlzO3JldHVybiBfMHgyNzkyM2NbXzB4NTEwOCgnMHg4NicpXVtfMHg1MTA4KCcweDEyZCcpXShfMHg1YjYxYTkpO319LCdfY3JlYXRlUGhhbnRvbUluc3RhbmNlJzpmdW5jdGlvbihfMHg1YjYxYTksXzB4Mjc5MjNjKXt2YXIgXzB4MzhjMWEyPXRoaXM7dHJ5e2lmKF8weDUxMDgoJzB4NmY3JykhPT1fMHg1MTA4KCcweDZmOCcpKXt2YXIgXzB4NDYzNDI1PXsnZG5vZGVPcHRzJzp7J3dlYWsnOiEweDF9fTtfMHgzOGMxYTJbXzB4NTEwOCgnMHg1OTYnKV0mJihfMHg0NjM0MjVbXzB4NTEwOCgnMHgzOWEnKV09XzB4MzhjMWEyWydfcGhhbnRvbWpzUGF0aCddKSxfMHg0NjM0MjVbXzB4NTEwOCgnMHg2ZjknKV09ZnVuY3Rpb24oXzB4Mjc5MjNjLF8weDM4YzFhMil7cmV0dXJuIF8weDUxMDgoJzB4NmZhJykhPT1fMHgzOGMxYTJ8fF8weDE2YmZkOXx8KGNvbnNvbGVbXzB4NTEwOCgnMHgyNCcpXShfMHg1MTA4KCcweDZmYicpKSxfMHgxNmJmZDk9ITB4MCksXzB4MTE1NDliKF8weDUxMDgoJzB4NmZjJyksXzB4NWI2MWE5LF8weDM4YzFhMixfMHgyNzkyM2MpO307dmFyIF8weDI3YTM0ZT1bXzB4NTEwOCgnMHg2ZmQnKSxfMHg1MTA4KCcweDZmZScpXTtfMHgzOGMxYTJbXzB4NTEwOCgnMHgxYTEnKV1bJ3J1bm5lciddJiYoXzB4MjdhMzRlPV8weDI3YTM0ZVtfMHg1MTA4KCcweGI3JyldKF9bJ2ZpbHRlciddKF8weDM4YzFhMlsnX3BhcmFtcyddW18weDUxMDgoJzB4MTIzJyldWydzcGxpdCddKCdceDIwJyksZnVuY3Rpb24oXzB4NWI2MWE5KXtyZXR1cm4gXzB4NWI2MWE5JiYhKH5fMHg1YjYxYTlbJ2luZGV4T2YnXShfMHg1MTA4KCcweDZmZicpKXx8fl8weDViNjFhOVsnaW5kZXhPZiddKCctLXdlYi1zZWN1cml0eT0nKSk7fSkpKTt2YXIgXzB4MmViMDhiPSEweDE7XzB4MjdhMzRlWydwdXNoJ10oZnVuY3Rpb24oXzB4MjMyY2QwKXtpZighXzB4MmViMDhiKXtpZignTlFvSGcnPT09J1BSWG1LJyl7dGhpc1tfMHg1MTA4KCcweDllJyldWydjb3B5VG9DbGlwYm9hcmQnXShfMHg1YjYxYTlbXzB4NTEwOCgnMHgyNzUnKV0pO31lbHNle2lmKCFfMHgyMzJjZDApcmV0dXJuIF8weDJlYjA4Yj0hMHgwLF8weDExNTQ5YihfMHg1MTA4KCcweDRmOCcpLF8weDViNjFhOSksXzB4MzhjMWEyW18weDUxMDgoJzB4NGY5JyldKF8weDViNjFhOSxfMHgyNzkyM2MpO18weDIzMmNkMFsnc2V0J10oXzB4NTEwOCgnMHg0ZmEnKSxmdW5jdGlvbihfMHgyNzkyM2Mpe18weDExNTQ5YihfMHg1MTA4KCcweDRmYicpLF8weDI3OTIzYyxfMHg1YjYxYTkpLF8weDM4YzFhMlsnX3dvcmtlclBvb2wnXVtfMHg1MTA4KCcweDFlMicpXShfMHg1YjYxYTkpO30pLF8weDJlYjA4Yj0hMHgwLF8weDI3OTIzYyhfMHgyMzJjZDApO319fSksXzB4MjdhMzRlW18weDUxMDgoJzB4NGInKV0oXzB4NDYzNDI1KSxfMHgyMzJjZDBbXzB4NTEwOCgnMHg5YScpXVtfMHg1MTA4KCcweDEwYScpXShfMHgyMzJjZDAsXzB4MjdhMzRlKTt9ZWxzZXt2YXIgXzB4NWExNTBhPXRoaXM7cmV0dXJuIGRlbGV0ZSB0aGlzW18weDUxMDgoJzB4MzIxJyldLGNsZWFyVGltZW91dCh0aGlzW18weDUxMDgoJzB4NDRkJyldKSx0aGlzW18weDUxMDgoJzB4MzIwJyldKCksXzB4Mjc5MjNjWydob29rJ10mJl8weDI3OTIzY1snbG9nJ10/KF8weDQ2MzQyNVsnX3Byb2Nlc3NUZXN0TG9nJ10oXzB4Mjc5MjNjWydsb2cnXSksX1tfMHg1MTA4KCcweDY1JyldKF8weDI3OTIzY1tfMHg1MTA4KCcweDcwMCcpXSkmJl9bXzB4NTEwOCgnMHgxMzUnKV0oXzB4Mjc5MjNjW18weDUxMDgoJzB4MTMwJyldLGZ1bmN0aW9uKF8weDU4MTc1OSl7XzB4NTgxNzU5W18weDUxMDgoJzB4YTgnKV09XzB4Mjc5MjNjWydob29rJ10rKF8weDU4MTc1OVtfMHg1MTA4KCcweGE4JyldPyc6XHgyMCc6JycpK18weDU4MTc1OVsnbWVzc2FnZSddO30pLHZvaWQodGhpc1tfMHg1MTA4KCcweDMwYScpXT10aGlzW18weDUxMDgoJzB4MzBhJyldWydjb25jYXQnXShfMHgyNzkyM2NbXzB4NTEwOCgnMHgxMzAnKV0pKSk6KF8weDI3OTIzY1tfMHg1MTA4KCcweDcwMScpXT8odGhpc1snX3NraXBwZWQnXSsrLF8weDQ2MzQyNVtfMHg1MTA4KCcweDYyZScpXShfMHgyNzkyM2NbXzB4NTEwOCgnMHgxMzAnKV0pKTooXzB4MTZiZmQ5KCdbJXNdXHgyMFRlc3RceDIwZXhlY3V0ZWQ6XHgyMCcrXzB4Mjc5MjNjW18weDUxMDgoJzB4MjVlJyldLF8weDViNjFhOSksXzB4NDYzNDI1W18weDUxMDgoJzB4NjJlJyldKF8weDI3OTIzY1tfMHg1MTA4KCcweDEzMCcpXSksXzB4Mjc5MjNjW18weDUxMDgoJzB4MTMwJyldJiZfW18weDUxMDgoJzB4MTM1JyldKF8weDI3OTIzY1snbG9nJ10sZnVuY3Rpb24oXzB4MzAzNzVmKXtyZXR1cm4gXzB4NWExNTBhW18weDUxMDgoJzB4NjBiJyldKF8weDMwMzc1Zik7fSksdGhpc1tfMHg1MTA4KCcweDcwMicpXVtfMHg1MTA4KCcweGJlJyldJiYoXzB4Mjc5MjNjW18weDUxMDgoJzB4MTMwJyldPXRoaXNbXzB4NTEwOCgnMHg3MDInKV1bXzB4NTEwOCgnMHgzMzgnKV0oKSksX1tfMHg1MTA4KCcweDFlNCcpXShfMHgyNzkyM2NbXzB4NTEwOCgnMHg0NzYnKV0pJiYoXzB4Mjc5MjNjW18weDUxMDgoJzB4NDc2JyldPV8weDI3OTIzY1tfMHg1MTA4KCcweDM0YScpXT5fMHg0NjM0MjVbJ19vcHRzJ11bJ3Nsb3dUZXN0VGhyZXNob2xkJ10pLF8weDI3OTIzY1tfMHg1MTA4KCcweDQ3NicpXT1fMHgyNzkyM2NbXzB4NTEwOCgnMHg0NzYnKV18fHZvaWQgMHgwLHRoaXNbXzB4NTEwOCgnMHg3MDInKV1bJ2xlbmd0aCddPTB4MCwrK18weDQ2MzQyNVtfMHg1MTA4KCcweDZkNScpXSUweDMyfHxjb25zb2xlW18weDUxMDgoJzB4MTMwJyldKF8weDUxMDgoJzB4NzAzJykrXzB4NDYzNDI1WydfZXhlY3V0ZWRUZXN0TnVtYmVyJ10rXzB4NTEwOCgnMHg3MDQnKSkscHJvY2Vzc1tfMHg1MTA4KCcweDcnKV1bXzB4NTEwOCgnMHg3MDUnKV0mJihfMHgyNzkyM2NbXzB4NTEwOCgnMHgzNGEnKV09MHgxKSksdm9pZCB0aGlzWydfdGVzdHMnXVsncHVzaCddKF8weDI3OTIzYykpO319Y2F0Y2goXzB4MjM4ODc3KXtpZihfMHg1MTA4KCcweDcwNicpIT09J3hyR1lGJyl7XzB4MTE1NDliKF8weDUxMDgoJzB4Mzg2JyksXzB4NWI2MWE5LF8weDIzODg3NyYmKF8weDIzODg3N1tfMHg1MTA4KCcweDE5ZCcpXXx8XzB4MjM4ODc3W18weDUxMDgoJzB4YTgnKV0pKSxfMHgyNzkyM2MoKTt9ZWxzZXt0aGlzW18weDUxMDgoJzB4NTQxJyldW18weDViNjFhOVsnaWQnXV09XzB4NWI2MWE5W18weDUxMDgoJzB4MmU1JyldO319fSwnX3JlY3ljbGVQaGFudG9tSW5zdGFuY2UnOmZ1bmN0aW9uKF8weDViNjFhOSl7XzB4NWI2MWE5W18weDUxMDgoJzB4MTE2JyldKCksXzB4NWI2MWE5Wydwcm9jZXNzJ11bXzB4NTEwOCgnMHgxMzknKV0oKTt9LCdfaXNQaGFudG9tSW5zdGFuY2VIZWFsdGh5JzpmdW5jdGlvbihfMHg1YjYxYTkpe3JldHVybiBfMHg1YjYxYTlbXzB4NTEwOCgnMHgxMzgnKV0mJl8weDViNjFhOVtfMHg1MTA4KCcweDEzOCcpXVsncGlkJ10mJiFfMHg1YjYxYTlbXzB4NTEwOCgnMHgxMzgnKV1bXzB4NTEwOCgnMHgzZTcnKV0mJiFfMHg1YjYxYTlbXzB4NTEwOCgnMHgxMzgnKV1bXzB4NTEwOCgnMHg2YmMnKV0mJm51bGw9PT1fMHg1YjYxYTlbXzB4NTEwOCgnMHgxMzgnKV1bJ2V4aXRDb2RlJ107fSwnX3ByZXBhcmUnOmZ1bmN0aW9uKF8weDI3OTIzYyxfMHgzOGMxYTIpe2lmKF8weDUxMDgoJzB4NzA3Jyk9PT1fMHg1MTA4KCcweDcwNycpKXt2YXIgXzB4MjMyY2QwPXRoaXMsXzB4NDYzNDI1PV9bXzB4NTEwOCgnMHgxNDYnKV0oKSxfMHgyN2EzNGU9XzB4MjMyY2QwWydfYnJvd3NlckVudmlyb25tZW50J11bXzB4NTEwOCgnMHgxNDcnKV0oXzB4MzhjMWEyLF8weDQ2MzQyNSk7cmV0dXJuIF8weDExNTQ5YignU3RhcnRpbmdceDIwc2FuZGJveFx4MjBbJXNdJyxfMHgyN2EzNGUpLFFbXzB4NTEwOCgnMHhmNicpXSgpW18weDUxMDgoJzB4MWRhJyldKGZ1bmN0aW9uKCl7aWYoXzB4NTEwOCgnMHg3MDgnKSE9PSdFaXpWcScpe3JldHVybiBfMHgyMzJjZDBbJ193b3JrZXJQb29sJ11bXzB4NTEwOCgnMHgxNWMnKV0oKT9RW18weDUxMDgoJzB4MWRkJyldKHsncnVuQ2FuY2VsbGVkJzohMHgwfSk6KF8weDExNTQ5YihfMHg1MTA4KCcweDE0YicpLF8weDI3YTM0ZSksUVtfMHg1MTA4KCcweDE2YycpXShbXzB4MjMyY2QwW18weDUxMDgoJzB4NzA5JyldKF8weDM4YzFhMiksXzB4MjMyY2QwWydfYnJvd3NlckVudmlyb25tZW50J11bXzB4NTEwOCgnMHgxNGMnKV0oXzB4Mjc5MjNjLF8weDQ2MzQyNSxfMHgzOGMxYTIpXSkpO31lbHNle18weDViNjFhOVtfMHg1MTA4KCcweDIyZicpXT1fMHgyNzkyM2M7fX0pW18weDUxMDgoJzB4MWRhJyldKGZ1bmN0aW9uKF8weDE2YmZkOSl7XzB4MTE1NDliKF8weDUxMDgoJzB4MWRlJyksXzB4MjdhMzRlKTt2YXIgXzB4MmViMDhiPV8weDE2YmZkOVsweDBdLF8weDJmMzdhOT1fMHgxNmJmZDlbMHgxXTtyZXR1cm4gUVtfMHg1MTA4KCcweGY2JyldKHsnaW5zdGFuY2UnOnsncmVzdW1lJzpmdW5jdGlvbigpe18weDJlYjA4YlsnZXZhbHVhdGUnXShmdW5jdGlvbigpeyRfJHRyYWNlcltfMHg1MTA4KCcweDE1NCcpXSgpO30pO30sJ3BpbmcnOmZ1bmN0aW9uKF8weDViNjFhOSl7XzB4MmViMDhiW18weDUxMDgoJzB4MTYzJyldKGZ1bmN0aW9uKCl7fSxfMHg1YjYxYTkpO30sJ2Nsb3NlJzpmdW5jdGlvbigpe18weDI3OTIzYz1udWxsLF8weDJlYjA4YltfMHg1MTA4KCcweDEzZCcpXSYmXzB4MmViMDhiW18weDUxMDgoJzB4MTNkJyldKCksXzB4MmViMDhiW18weDUxMDgoJzB4MTdmJyldKCk7fSwnY2xvc2luZyc6ZnVuY3Rpb24oKXtpZigneUlPVFcnIT09XzB4NTEwOCgnMHg3MGEnKSl7XzB4MjMyY2QwW18weDUxMDgoJzB4NjFkJyldKF8weDI3OTIzY1snc2NyZWVuJ10sXzB4MmViMDhiKTt9ZWxzZXtyZXR1cm4gXzB4MjMyY2QwW18weDUxMDgoJzB4MWQ4JyldKF8weDExNTQ5YlsncGF0aCddLF8weDUxMDgoJzB4NzBiJyksXzB4NWI2MWE5KTt9fSwnc3RhcnQnOmZ1bmN0aW9uKF8weDM4YzFhMixfMHgxMTU0OWIpe2lmKCdNYk1jZic9PT1fMHg1MTA4KCcweDcwYycpKXtyZXR1cm4gX1tfMHg1MTA4KCcweGRhJyldKHRoaXNbJ19maWxlcyddLGZ1bmN0aW9uKF8weDE4M2IzYyl7cmV0dXJueydwYXRoJzpfMHgxODNiM2NbXzB4NTEwOCgnMHgzNCcpXSgpLCdpZCc6XzB4MTgzYjNjW18weDUxMDgoJzB4NTAnKV0oKX07fSk7fWVsc2V7XzB4MjMyY2QwW18weDUxMDgoJzB4MWE0JyldJiZfMHgyZWIwOGJbXzB4NTEwOCgnMHg3MGQnKV0oZnVuY3Rpb24oXzB4Mjc5MjNjLF8weDM4YzFhMixfMHgxMTU0OWIpe2lmKF8weDUxMDgoJzB4NzBlJyk9PT1fMHg1MTA4KCcweDcwZScpKXt0cnl7dmFyIF8weDIzMmNkMD1nbG9iYWxbXzB4NTEwOCgnMHg3MGYnKV09Z2xvYmFsW18weDUxMDgoJzB4NzBmJyldfHxfMHg1YjYxYTkoXzB4NTEwOCgnMHg5NCcpKSxfMHg0NjM0MjU9XzB4Mjc5MjNjW18weDUxMDgoJzB4OTQnKV07aWYoIV8weDQ2MzQyNSlyZXR1cm47aWYoMHgwPT09XzB4NDYzNDI1W18weDUxMDgoJzB4NTEnKV0oXzB4NTEwOCgnMHg3MTAnKSkpcmV0dXJuO2lmKH5fMHg0NjM0MjVbXzB4NTEwOCgnMHg1MScpXSgnd2FsbGFieUZpbGVJZCcpKXJldHVybjt2YXIgXzB4MjdhMzRlPV8weDIzMmNkMFsncGFyc2UnXShfMHgyNzkyM2NbXzB4NTEwOCgnMHg5NCcpXSksXzB4MTZiZmQ5PScvJz09PV8weDI3YTM0ZVtfMHg1MTA4KCcweDZiMycpXVtfMHg1MTA4KCcweDcxMScpXSgweDApP18weDI3YTM0ZVtfMHg1MTA4KCcweDZiMycpXVtfMHg1MTA4KCcweDMzNicpXSgweDEpOl8weDI3YTM0ZVtfMHg1MTA4KCcweDZiMycpXSxfMHgyZjM3YTk9XzB4MTZiZmQ5JiZfMHgxMTU0OWJbXzB4MTZiZmQ5XTtpZighXzB4MmYzN2E5KXJldHVybjt2YXIgXzB4NDAxZTIyPV8weDI3YTM0ZVtfMHg1MTA4KCcweDcxMicpXSYmXzB4MjdhMzRlWydzZWFyY2gnXVsnbGVuZ3RoJ107XzB4MzhjMWEyWydjaGFuZ2VVcmwnXShfMHg0NjM0MjUrKF8weDQwMWUyMj8nJic6Jz8nKStfMHgyZjM3YTlbJ3RzJ10rJyZ3YWxsYWJ5RmlsZUlkPScrXzB4MmYzN2E5WydpZCddKSxfMHgyZWIwOGJbXzB4NTEwOCgnMHg2ZjUnKV0oKTt9Y2F0Y2goXzB4NDQ5ZGFiKXtjb25zb2xlW18weDUxMDgoJzB4MTMwJyldKF8weDQ0OWRhYiYmXzB4NDQ5ZGFiW18weDUxMDgoJzB4YTgnKV0pO319ZWxzZXt0cnl7dmFyIF8weDUzODdlMz12b2lkIDB4MDtwWydoYXNoJ109VT9fMHgxMTU0OWJbXzB4NTEwOCgnMHg5ZScpXVtfMHg1MTA4KCcweDIxYScpXTooXzB4NTM4N2UzPV8weDJmMzdhOVtfMHg1MTA4KCcweDI4MicpXSgnc2hhNTEyJyksXzB4NTM4N2UzW18weDUxMDgoJzB4MjcxJyldKG5ldyBCdWZmZXIoXzB4NDAxZTIyLF8weDUxMDgoJzB4Mjg0JykpKSxfMHg1Mzg3ZTNbXzB4NTEwOCgnMHgyNzQnKV0oXzB4NTEwOCgnMHgyODQnKSkpO31jYXRjaChfMHgzOTliNDYpe3BbXzB4NTEwOCgnMHgyODUnKV09XzB4MTE1NDliWydfcHJvamVjdCddWydfd2FsbGFieUVtYWlsJ107fWlmKHE8SClwW18weDUxMDgoJzB4ZCcpXT0hMHgwLHBbXzB4NTEwOCgnMHhjJyldPSFVLHBbXzB4NTEwOCgnMHgyMCcpXT1VO2Vsc2V7dmFyIF8weDUyZmU2Yz1uZXcgXzB4MjMyY2QwKCk7XzB4NTJmZTZjW18weDUxMDgoJzB4MjI3JyldKF8weDUyZmU2Y1tfMHg1MTA4KCcweDIwZScpXSgpK3cpLHBbJ2V4cGlyaW5nU29vbiddPXE8XzB4NTJmZTZjO319fSxfW18weDUxMDgoJzB4MTY1JyldLF8weDI3OTIzY1tfMHg1MTA4KCcweGQyJyldKSxfMHgyZWIwOGJbXzB4NTEwOCgnMHg2NCcpXShfMHg1MTA4KCcweDRmYScpLF8weDExNTQ5YiksXzB4MmViMDhiW18weDUxMDgoJzB4NzEzJyldKF8weDJmMzdhOSxmdW5jdGlvbihfMHg1YjYxYTkpe2lmKF8weDUxMDgoJzB4NzE0JykhPT1fMHg1MTA4KCcweDcxNCcpKXt2YXIgXzB4ZjBlZGJiPXRoaXNbXzB4NTEwOCgnMHgzOGEnKV1bJ3BhdGNoX21ha2UnXShfMHgyNzkyM2MsXzB4NDYzNDI1KTtpZighXzB4ZjBlZGJiW18weDUxMDgoJzB4YmUnKV0pcmV0dXJuIHAoXzB4NTEwOCgnMHg1MWUnKSxfMHg1YjYxYTlbJ3BhdGgnXSksdm9pZCB0aGlzW18weDUxMDgoJzB4YTcnKV0oJ25vdENoYW5nZWQnLF8weDViNjFhOSxfMHg0NjM0MjUsXzB4MzhjMWEyKTtfMHg1YjYxYTlbXzB4NTEwOCgnMHg2NycpXXx8XzB4MjMyY2QwfHwoXzB4NWI2MWE5W18weDUxMDgoJzB4Mzg5JyldPXRoaXNbXzB4NTEwOCgnMHgzOGEnKV1bXzB4NTEwOCgnMHg3MTUnKV0oXzB4ZjBlZGJiKSk7fWVsc2V7XzB4MzhjMWEyKF8weDViNjFhOSkmJl8weDJlYjA4YltfMHg1MTA4KCcweDE2MycpXShmdW5jdGlvbigpeyRfJHRyYWNlclsnc3RhcnQnXSgpO30pO319KTt9fX0sJ25hbWUnOl8weDI3YTM0ZSwnc2Vzc2lvbklkJzpfMHg0NjM0MjUsJ3dvcmtlcklkJzpfMHgzOGMxYTJ9KTt9KTt9ZWxzZXt2YXIgXzB4NWIxOGEyPV8weDI3OTIzYz9fMHgyNzkyM2NbMHgxXXx8XzB4Mjc5MjNjWzB4Ml18fCcnOm51bGw7aWYoXzB4NWIxOGEyJiZtWyd0ZXN0J10oXzB4NWIxOGEyKSl7dmFyIF8weDRkYzY3Yz1fMHg1YjE4YTJbJ3NsaWNlJ10oXzB4NWIxOGEyWydpbmRleE9mJ10oJywnKSsweDEpO3JldHVybiBCdWZmZXJbXzB4NTEwOCgnMHg1YzUnKV0oXzB4NGRjNjdjLF8weDUxMDgoJzB4Mjg0JykpW18weDUxMDgoJzB4MWY3JyldKCk7fX19LCdjYW5jZWwnOmZ1bmN0aW9uKF8weDViNjFhOSl7aWYoXzB4NTEwOCgnMHg3MTYnKSE9PV8weDUxMDgoJzB4NzE2Jykpe3RyeXtfMHgyZWIwOGIoXzB4MTE1NDliW18weDUxMDgoJzB4MTAxJyldKF8weDViNjFhOSkpO31jYXRjaChfMHgzM2E2ZGIpe18weDQ2MzQyNShfMHgzM2E2ZGIpO319ZWxzZXt2YXIgXzB4Mjc5MjNjPXRoaXM7cmV0dXJuIF8weDI3OTIzY1tfMHg1MTA4KCcweDg2JyldWydjYW5jZWwnXShfMHg1YjYxYTkpO319LCdzdGFydCc6ZnVuY3Rpb24oKXt2YXIgXzB4NWI2MWE5PXRoaXM7cmV0dXJuIF8weDViNjFhOVtfMHg1MTA4KCcweDg2JyldW18weDUxMDgoJzB4NmEnKV0oXzB4NWI2MWE5WydfYnJvd3NlckVudmlyb25tZW50J11bXzB4NTEwOCgnMHgxM2EnKV0oKSk7fSwnc3RvcCc6ZnVuY3Rpb24oKXt2YXIgXzB4NWI2MWE5PXRoaXM7XzB4NWI2MWE5W18weDUxMDgoJzB4ODYnKV1bXzB4NTEwOCgnMHgxM2QnKV0oKTt9LCdfY2FwdHVyZVNjcmVlblNob3QnOmZ1bmN0aW9uKF8weDViNjFhOSxfMHgyNzkyM2Mpe3ZhciBfMHgzOGMxYTI9dGhpcyxfMHgxMTU0OWI9UVtfMHg1MTA4KCcweDFkNScpXSgpO3RyeXtfMHgyNzkyM2NbXzB4NTEwOCgnMHg3MTcnKV0oXzB4NWI2MWE5LGZ1bmN0aW9uKCl7XzB4MTE1NDliW18weDUxMDgoJzB4MWQ4JyldKCk7fSksXzB4MzhjMWEyW18weDUxMDgoJzB4MTIxJyldPV8weDExNTQ5YltfMHg1MTA4KCcweDFhOCcpXTt9Y2F0Y2goXzB4NGVmMmZkKXtfMHgxMTU0OWJbXzB4NTEwOCgnMHgxZGQnKV0obmV3IEVycm9yKF8weDUxMDgoJzB4MWQ5JykpKSxjb25zb2xlW18weDUxMDgoJzB4MjQnKV0oXzB4NTEwOCgnMHgxZDknKSxfMHg0ZWYyZmRbXzB4NTEwOCgnMHhhOCcpXSk7fX0sJ19nZXRQYWdlJzpmdW5jdGlvbihfMHg1YjYxYTkpe2lmKF8weDUxMDgoJzB4NzE4Jyk9PT1fMHg1MTA4KCcweDcxOScpKXtyZXR1cm4gdGhpc1tfMHg1MTA4KCcweDNkNCcpXTt9ZWxzZXt2YXIgXzB4Mjc5MjNjPXRoaXM7cmV0dXJuIF8weDI3OTIzY1snX3dvcmtlclBvb2wnXVtfMHg1MTA4KCcweDE0OScpXShfMHg1YjYxYTkpW18weDUxMDgoJzB4MWRhJyldKGZ1bmN0aW9uKF8weDM4YzFhMil7aWYoXzB4NTEwOCgnMHg3MWEnKT09PV8weDUxMDgoJzB4NzFiJykpe18weDE2YmZkOShfMHg1MTA4KCcweDcxYycpKTt2YXIgXzB4NDAxMTM5PV9bXzB4NTEwOCgnMHhiNScpXShfMHg1YjYxYTksZnVuY3Rpb24oXzB4MjAwNWQ1LF8weDQwMTEzOSl7XzB4MjAwNWQ1W18weDUxMDgoJzB4MTJmJyldPV8weDQwMTEzOVtfMHg1MTA4KCcweDEyZicpXXx8XzB4MjAwNWQ1W18weDUxMDgoJzB4MTJmJyldLF8weDIwMDVkNVtfMHg1MTA4KCcweGQ0JyldPV8weDIwMDVkNVtfMHg1MTA4KCcweGQ0JyldW18weDUxMDgoJzB4YjcnKV0oXzB4NDAxMTM5W18weDUxMDgoJzB4ZDQnKV18fFtdKSxfMHgyMDA1ZDVbXzB4NTEwOCgnMHgxMzAnKV09XzB4MjAwNWQ1W18weDUxMDgoJzB4MTMwJyldW18weDUxMDgoJzB4YjcnKV0oXzB4NDAxMTM5W18weDUxMDgoJzB4MTMwJyldfHxbXSksXzB4MjAwNWQ1W18weDUxMDgoJzB4MTMxJyldPV8weDIwMDVkNVtfMHg1MTA4KCcweDEzMScpXVtfMHg1MTA4KCcweGI3JyldKF8weDQwMTEzOVtfMHg1MTA4KCcweDEzMScpXXx8W10pLF8weDIwMDVkNVsnZXJyb3InXT1fMHg0MDExMzkgaW5zdGFuY2VvZiBFcnJvcnx8XzB4MjAwNWQ1WydlcnJvciddLF8weDIwMDVkNVtfMHg1MTA4KCcweDEzMicpXT1fWydleHRlbmQnXShfMHgyMDA1ZDVbXzB4NTEwOCgnMHgxMzInKV0sXzB4NDAxMTM5W18weDUxMDgoJzB4MTMyJyldfHx7fSk7dmFyIF8weDFkYWUwOD1fMHgyMDA1ZDVbXzB4NTEwOCgnMHgxMzMnKV07cmV0dXJuIF9bXzB4NTEwOCgnMHgxMzQnKV0oXzB4MWRhZTA4KT8oXzB4MjAwNWQ1W18weDUxMDgoJzB4MTMzJyldPV8weDQwMTEzOVtfMHg1MTA4KCcweDEzMycpXSxfMHgyMDA1ZDUpOihfW18weDUxMDgoJzB4MTM1JyldKF8weDQwMTEzOVtfMHg1MTA4KCcweDEzMycpXSxmdW5jdGlvbihfMHgyMDA1ZDUsXzB4NDAxMTM5KXt2YXIgXzB4MmYxMWQ4PV8weDFkYWUwOFtfMHg0MDExMzldO3JldHVybiBfMHgyZjExZDg/dm9pZCBfW18weDUxMDgoJzB4MTM1JyldKF8weDIwMDVkNSxmdW5jdGlvbihfMHgyMDA1ZDUsXzB4NDAxMTM5KXt2YXIgXzB4MWRhZTA4PV8weDJmMTFkOFtfMHg0MDExMzldO3JldHVybiBfMHgxZGFlMDg/dm9pZCBfW18weDUxMDgoJzB4NjYnKV0oXzB4MWRhZTA4LF8weDIwMDVkNSk6dm9pZChfMHgyZjExZDhbXzB4NDAxMTM5XT1fMHgyMDA1ZDUpO30pOnZvaWQoXzB4MWRhZTA4W18weDQwMTEzOV09XzB4MjAwNWQ1KTt9KSxfMHgyMDA1ZDUpO30seydjb3ZlcmFnZSc6e30sJ3Rlc3RzJzpbXSwnbG9nJzpbXSwnZ2xvYmFsRXJyb3JzJzpbXSwnbG9hZGluZ1NlcXVlbmNlJzp7fX0pO3JldHVybiBfMHg0MDExMzlbJ3J1bkNhbmNlbGxlZCddP1FbJ3JlamVjdCddKF8weDQwMTEzOSk6XzB4NDAxMTM5WydlcnJvciddP1FbXzB4NTEwOCgnMHgxZGQnKV0oXzB4NDAxMTM5W18weDUxMDgoJzB4MjQnKV0pOlFbXzB4NTEwOCgnMHhmNicpXShfMHg0MDExMzkpO31lbHNle3JldHVybiBfMHgyNzkyM2NbJ193b3JrZXJQb29sJ11bXzB4NTEwOCgnMHgxNWMnKV0oKT9RW18weDUxMDgoJzB4MWRkJyldKHsncnVuQ2FuY2VsbGVkJzohMHgwfSk6KF8weDExNTQ5YignQ3JlYXRpbmdceDIwcGFnZVx4MjBmb3JceDIwd29ya2VyXHgyMCMnK18weDViNjFhOSksXzB4Mjc5MjNjW18weDUxMDgoJzB4NzFkJyldKF8weDM4YzFhMixfMHg1YjYxYTkpKTt9fSk7fX0sJ19jcmVhdGVQYWdlJzpmdW5jdGlvbihfMHg1YjYxYTksXzB4Mjc5MjNjKXtpZihfMHg1MTA4KCcweDcxZScpPT09J2JrQ3RIJyl7cmV0dXJueydtZXNzYWdlJzpfMHg1YjYxYTlbXzB4NTEwOCgnMHhhOCcpXSgpLCdzdGFjayc6X1tfMHg1MTA4KCcweGRhJyldKF8weDViNjFhOVsnc3RhY2snXSgpLGZ1bmN0aW9uKF8weDhiZTZhMil7cmV0dXJuIF8weDExNTQ5YltfMHg1MTA4KCcweDY2YScpXShfMHg4YmU2YTIsXzB4OGJlNmEyW18weDUxMDgoJzB4NDgzJyldKCkpO30pLCdhY3R1YWwnOl8weDViNjFhOVsnYWN0dWFsJ10oKSwnZXhwZWN0ZWQnOl8weDViNjFhOVtfMHg1MTA4KCcweDNlOScpXSgpfTt9ZWxzZXt2YXIgXzB4MzhjMWEyPXRoaXM7cmV0dXJuIFFbXzB4NTEwOCgnMHgxYTgnKV0oZnVuY3Rpb24oXzB4MjMyY2QwLF8weDQ2MzQyNSl7dmFyIF8weDI3YTM0ZT0hMHgxLF8weDE2YmZkOT1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7aWYoXzB4NTEwOCgnMHg3MWYnKT09PV8weDUxMDgoJzB4NzFmJykpe18weDI3YTM0ZXx8KF8weDJlYjA4YigpLF8weDM4YzFhMltfMHg1MTA4KCcweDg2JyldW18weDUxMDgoJzB4MWUyJyldKF8weDI3OTIzYyksXzB4MTE1NDliKF8weDUxMDgoJzB4NGM5JykpLF8weDQ2MzQyNSh7J3J1bkNhbmNlbGxlZCc6ITB4MCwncmVydW4nOiEweDB9KSk7fWVsc2V7XzB4NDYzNDI1KGwpO319LDB4MTkwKSxfMHgyZWIwOGI9ZnVuY3Rpb24oKXtpZihfMHg1MTA4KCcweDcyMCcpPT09XzB4NTEwOCgnMHg3MjAnKSl7XzB4MjdhMzRlPSEweDAsY2xlYXJUaW1lb3V0KF8weDE2YmZkOSk7fWVsc2V7dmFyIF8weDIzZTY0OT0nJztpZihBcnJheVtfMHg1MTA4KCcweDNlNCcpXShfMHgyN2EzNGUpKXt2YXIgXzB4MzVlMjBmPV8weDViNjFhOVsnc2xpY2UnXSgweDAsTWF0aFsnbWF4J10oXzB4MjdhMzRlWzB4MF0tMHgxLDB4MCkpW18weDUxMDgoJzB4YmYnKV0oL1teXHRdL2csJ1x4MjAnKSxfMHg0NjYxNWE9XzB4MjdhMzRlWzB4MV18fDB4MTtfMHgyM2U2NDk9WydceDBhXHgyMCcsXzB4NDYzNDI1W18weDUxMDgoJzB4YmYnKV0oL1xkL2csJ1x4MjAnKSxfMHgzNWUyMGYsJ14nW18weDUxMDgoJzB4NzIxJyldKF8weDQ2NjE1YSldW18weDUxMDgoJzB4ODInKV0oJycpLF8weDE2YmZkOSYmXzB4MjMyY2QwJiYoXzB4MjNlNjQ5Kz0nXHgyMCcrXzB4MjMyY2QwKTt9cmV0dXJuWyc+JyxfMHg0NjM0MjUsXzB4NWI2MWE5LF8weDIzZTY0OV1bXzB4NTEwOCgnMHg4MicpXSgnJyk7fX07dHJ5e18weDViNjFhOVtfMHg1MTA4KCcweDcyMicpXShmdW5jdGlvbihfMHg1YjYxYTkpe2lmKF8weDUxMDgoJzB4NzIzJyk9PT1fMHg1MTA4KCcweDcyNCcpKXt2YXIgXzB4NTRmOTEzPV8weDViNjFhOVtfMHg1MTA4KCcweDY5JyldO2lmKF8weDU0ZjkxMyYmXzB4NWI2MWE5Wydsb2MnXSl7dmFyIF8weDNiODZkZj1fMHgyNzkyM2NbX1tfMHg1MTA4KCcweDU2JyldKF8weDU0ZjkxMyxfMHg1MTA4KCcweDU3JykpfHwnVmFyaWFibGVEZWNsYXJhdGlvbic9PT1fMHg1NGY5MTM/XzB4NTEwOCgnMHg1NycpOl8weDU0ZjkxM107aWYoXzB4M2I4NmRmJiZfMHgzYjg2ZGYoXzB4NWI2MWE5KSxfMHg1MTA4KCcweDU5Jyk9PT1fMHg1NGY5MTN8fCdMaXRlcmFsJz09PV8weDU0ZjkxM3x8XzB4NTEwOCgnMHg1YicpPT09XzB4NTRmOTEzfHxfMHg1MTA4KCcweDVjJyk9PT1fMHg1NGY5MTN8fF8weDUxMDgoJzB4NWQnKT09PV8weDU0ZjkxM3x8XzB4NTEwOCgnMHg1ZScpPT09XzB4NTRmOTEzfHxfMHg1MTA4KCcweDVmJyk9PT1fMHg1NGY5MTMpcmV0dXJuO31mb3IodmFyIF8weDM2ZjNiZiBpbiBfMHg1YjYxYTkpaWYoXzB4NWI2MWE5W18weDUxMDgoJzB4NjgnKV0oXzB4MzZmM2JmKSYmXzB4NTEwOCgnMHg1MycpIT09XzB4MzZmM2JmJiYndHlwZSchPT1fMHgzNmYzYmYmJl8weDUxMDgoJzB4NmEnKSE9PV8weDM2ZjNiZiYmXzB4NTEwOCgnMHg2YicpIT09XzB4MzZmM2JmJiZfMHg1MTA4KCcweDI1ZScpIT09XzB4MzZmM2JmKXt2YXIgXzB4MjM4ZWJmPV8weDViNjFhOVtfMHgzNmYzYmZdO18weDIzOGViZiYmX1tfMHg1MTA4KCcweDZjJyldKF8weDIzOGViZikmJl8weDExNTQ5YihfMHgyMzhlYmYsXzB4Mjc5MjNjKTt9fWVsc2V7XzB4MjdhMzRlfHwoXzB4MmViMDhiKCksXzB4MTE1NDliKF8weDUxMDgoJzB4NzI1JykpLF8weDViNjFhOVsnc2V0J10oXzB4NTEwOCgnMHg1OTUnKSxfMHgzOGMxYTJbXzB4NTEwOCgnMHg1OTQnKV18fHsnd2lkdGgnOjB4MzIwLCdoZWlnaHQnOjB4MjU4fSksXzB4MjMyY2QwKF8weDViNjFhOSkpO319KTt9Y2F0Y2goXzB4NDYwMjkzKXtpZignRlZTWnMnIT09J0ZW4oCLU1pzJyl7XzB4MzhjMWEyW18weDUxMDgoJzB4NzI2JyldKGZ1bmN0aW9uKCl7XzB4MmViMDhifHwoXzB4MTZiZmQ5KCdbJXNdXHgyMFNhbmRib3hceDIwaXNceDIwcmVzcG9uc2l2ZSxceDIwY2xvc2luZ1x4MjBpdCcsXzB4NWI2MWE5KSxfMHg0NjM0MjVbXzB4NTEwOCgnMHg3MjcnKV0oXzB4MzhjMWEyW18weDUxMDgoJzB4MTdmJyldLF8weDViNjFhOSksXzB4NDYwMjkzKCkpO30pO31lbHNle18weDJlYjA4YigpLF8weDQ2MzQyNShfMHg0NjAyOTMpO319fSk7fX19LF8weDI3OTIzY1snZXhwb3J0cyddPV8weDJlYjA4Yjt9LHsnLi9icm93c2VyRW52aXJvbm1lbnQnOjB4NCwnLi9ydW5Xb3JrZXJQb29sJzoweDFkLCdwaGFudG9tJzp2b2lkIDB4MCwndXJsJzp2b2lkIDB4MH1dLDI4OltmdW5jdGlvbihfMHgxMTAwMTAsXzB4MzczOTYzLF8weDViNDk1NSl7ZnVuY3Rpb24gXzB4NDgxM2QwKF8weDExMDAxMCl7aWYoXzB4NTEwOCgnMHg3MjgnKSE9PSdMbmNBTScpe18weDExMDAxMFsnbWVzc2FnZSddPV8weDExMDAxMFtfMHg1MTA4KCcweGE4JyldWydzdWJzdHInXShfMHgzNzM5NjMrMHgyKTtmb3IodmFyIF8weGM3YTg3MD1fMHgxMTAwMTBbXzB4NTEwOCgnMHhhOCcpXVtfMHg1MTA4KCcweDEyNScpXSgnXHgwYScpLF8weDFiYjlmMj0weDA7XzB4MWJiOWYyPF8weGM3YTg3MFsnbGVuZ3RoJ10mJiFfW18weDUxMDgoJzB4MmQ4JyldKF9bXzB4NTEwOCgnMHgzYzInKV0oXzB4YzdhODcwW18weDFiYjlmMl0pLF8weDUxMDgoJzB4MzM3JykpO18weDFiYjlmMisrKTtfMHgxMTAwMTBbJ21lc3NhZ2UnXT1fMHhjN2E4NzBbXzB4NTEwOCgnMHgzMzgnKV0oMHgwLF8weDFiYjlmMilbJ2pvaW4nXSgnXHgwYScpO31lbHNle3RoaXNbXzB4NTEwOCgnMHgxMzgnKV09XzB4NjBiOWY2Wydmb3JrJ10oXzB4MTEwMDEwLFtfMHg1MTA4KCcweDcyOScpXSksdGhpc1tfMHg1MTA4KCcweDExOCcpXT10aGlzW18weDUxMDgoJzB4MTM4JyldWydwaWQnXSx0aGlzW18weDUxMDgoJzB4MTVhJyldPVdvcmtlclN0YXRlW18weDUxMDgoJzB4NzJhJyldLHRoaXNbXzB4NTEwOCgnMHgxMzgnKV1bJ29uY2UnXShfMHg1MTA4KCcweGE4JyksdGhpc1snb25SZWFkeSddW18weDUxMDgoJzB4MTE1JyldKHRoaXMpKSxfMHgyYzI1NzdbXzB4NTEwOCgnMHg3MmInKV1bXzB4NTEwOCgnMHgxMGUnKV0odGhpcyk7fX1mdW5jdGlvbiBfMHg1NDQ4MzIoXzB4MTEwMDEwLF8weDM3Mzk2Myl7aWYoXzB4NTEwOCgnMHg3MmMnKSE9PV8weDUxMDgoJzB4NzJjJykpe3ZhciBfMHgxOTk2MjE9XzB4NDgxM2QwW18weDU0NDgzMl07XzB4MTk5NjIxJiZfMHgxOTk2MjFbXzB4NTEwOCgnMHg1OWEnKV0oXzB4MzczOTYzKTt9ZWxzZXtmdW5jdGlvbiBfMHg1YjQ5NTUoKXt2YXIgXzB4MzczOTYzPW5ldyBfMHg0ODEzZDAoXzB4MTEwMDEwKTtfMHgzNzM5NjNbJ29uJ10oXzB4NTEwOCgnMHgxYmQnKSxfMHg1NDQ4MzJbJ19ydW4nXVtfMHg1MTA4KCcweDExNScpXShfMHg1NDQ4MzIpKSxfMHgzNzM5NjNbXzB4NTEwOCgnMHgxMzgnKV1bJ29uJ10oJ2V4aXQnLGZ1bmN0aW9uKF8weDExMDAxMCl7aWYoMHgwIT09XzB4MTEwMDEwKXtpZihfMHg1MTA4KCcweDcyZCcpPT09J2NFdUhjJyl7dmFyIF8weDYzZTJlNTtyZXR1cm4neyc9PT1fMHgxMTAwMTBbXzB4NTQ0ODMyLTB4MV0mJid9Jz09PV8weDExMDAxMFtfMHg1NDQ4MzIrXzB4NWI0OTU1W18weDUxMDgoJzB4YmUnKV1dP18weDQ4MTNkMDooXzB4NjNlMmU1PV8weDM3Mzk2M1tfMHg1MTA4KCcweDY4JyldKF8weDQ4MTNkMCk/XzB4MzczOTYzW18weDQ4MTNkMF06bnVsbCxudWxsPT09XzB4NjNlMmU1fHx2b2lkIDB4MD09PV8weDYzZTJlNT8nJzpfMHg2M2UyZTUpO31lbHNle2Zvcih2YXIgXzB4NDgxM2QwPTB4MDtfMHg0ODEzZDA8XzB4NTQ0ODMyWyd3b3JrZXJzJ11bXzB4NTEwOCgnMHhiZScpXTtfMHg0ODEzZDArKylfMHg1NDQ4MzJbXzB4NTEwOCgnMHgxMTcnKV1bXzB4NDgxM2QwXVsncGlkJ109PT1fMHgzNzM5NjNbXzB4NTEwOCgnMHgxMTgnKV0mJl8weDU0NDgzMlsnd29ya2VycyddWydzcGxpY2UnXShfMHg0ODEzZDAsMHgxKTtfMHg1YjQ5NTUoKTt9fX0pLF8weDU0NDgzMlsnd29ya2VycyddW18weDUxMDgoJzB4NGInKV0oXzB4MzczOTYzKTt9dGhpc1tfMHg1MTA4KCcweDExNycpXT1bXSx0aGlzW18weDUxMDgoJzB4NzJlJyldPVtdO3ZhciBfMHg1NDQ4MzI9dGhpcztfMHgzNzM5NjM9XzB4MzczOTYzfHxfMHhkZWIwNGRbJ2NwdXMnXSgpW18weDUxMDgoJzB4YmUnKV07Zm9yKHZhciBfMHg1MGI3MDA9MHgwO18weDUwYjcwMDxfMHgzNzM5NjM7XzB4NTBiNzAwKyspXzB4NWI0OTU1KCk7fX12YXIgXzB4NjBiOWY2PV8weDExMDAxMChfMHg1MTA4KCcweDIzZicpKSxfMHgyYzI1Nzc9XzB4MTEwMDEwKF8weDUxMDgoJzB4NzJmJykpLF8weGRlYjA0ZD1fMHgxMTAwMeKAizAoJ29zJyksXzB4MmY0NjViPV8weDExMDAxMChfMHg1MTA4KCcweDJmZicpKTtXb3JrZXJTdGF0ZT17J1NUQVJUSU5HJzpfMHg1MTA4KCcweDcyYScpLCdSRUFEWSc6XzB4NTEwOCgnMHg3MzAnKSwnQlVTWSc6XzB4NTEwOCgnMHg3MzEnKX0sXzB4MmY0NjViW18weDUxMDgoJzB4NzMyJyldKF8weDQ4MTNkMCxfMHgyYzI1NzdbXzB4NTEwOCgnMHg3MmInKV0pLF8weDQ4MTNkMFsncHJvdG90eXBlJ11bXzB4NTEwOCgnMHg3MzMnKV09ZnVuY+KAi3Rpb24oKXtpZihfMHg1MTA4KCcweDczNCcpPT09XzB4NTEwOCgnMHg3MzQnKSl7dGhpc1tfMHg1MTA4KCcweDE1YScpXT09PVdvcmtlclN0YXRlWydTVEFSVElORyddJiYodGhpc1tfMHg1MTA4KCcweDE1YScpXT1Xb3JrZXJTdGF0ZVtfMHg1MTA4KCcweDczMCcpXSx0aGlzW18weDUxMDgoJzB4YTcnKV0oJ3JlYWR5Jyx0aGlzKSk7fWVsc2V7cmV0dXJuIHRoaXNbJ19nbG9iYWxFcnJvcnMnXTt9fSxfMHg0ODEzZDBbJ3Byb3RvdHlwZSddW18weDUxMDgoJzB4NzM1JyldPWZ1bmN0aW9uKF8weDExMDAxMCxfMHgzNzM5NjMpe2lmKCduRGdKRic9PT1fMHg1MTA4KCcweDczNicpKXtyZXR1cm4gXzB4MTEwMDEwW18weDUxMDgoJzB4MWVlJyldKClbXzB4NTEwOCgnMHgxZWYnKV1bXzB4NTEwOCgnMHgxZjAnKV07fWVsc2V7XzB4MTEwMDEwKF8weDM3Mzk2MyksdGhpc1tfMHg1MTA4KCcweDE1YScpXT1Xb3JrZXJTdGF0ZVtfMHg1MTA4KCcweDczMCcpXSx0aGlzWydlbWl0J10oXzB4NTEwOCgnMHgxYmQnKSx0aGlzKTt9fSxfMHg0ODEzZDBbXzB4NTEwOCgnMHhhZScpXVtfMHg1MTA4KCcweDE2ZicpXT1mdW5jdGlvbihfMHgxMTAwMTAsXzB4MzczOTYzKXtpZihfMHg1MTA4KCcweDczNycpIT09XzB4NTEwOCgnMHg3MzgnKSl7dGhpc1snc3RhdHVzJ109V29ya2VyU3RhdGVbXzB4NTEwOCgnMHg3MzEnKV0sdGhpc1tfMHg1MTA4KCcweGE3JyldKF8weDUxMDgoJzB4MzNmJykpLHRoaXNbJ3Byb2Nlc3MnXVtfMHg1MTA4KCcweDIwZCcpXShfMHg1MTA4KCcweGE4JyksdGhpc1tfMHg1MTA4KCcweDczNScpXVtfMHg1MTA4KCcweDExNScpXSh0aGlzLF8weDM3Mzk2MykpLHRoaXNbJ3Byb2Nlc3MnXVtfMHg1MTA4KCcweDE2ZicpXShfMHgxMTAwMTApO31lbHNle18weDU0NDgzMltfMHgxMTAwMTBbXzB4NTEwOCgnMHg1MCcpXSgpXT1fMHgxMTAwMTA7fX0sXzB4NTQ0ODMyW18weDUxMDgoJzB4YWUnKV1bXzB4NTEwOCgnMHg3MzknKV09ZnVuY3Rpb24oXzB4MTEwMDEwLF8weDM3Mzk2Myl7dGhpc1tfMHg1MTA4KCcweDcyZScpXVsncHVzaCddKHsndGFzayc6XzB4MTEwMDEwLCdjYWxsYmFjayc6XzB4MzczOTYzfSkscHJvY2Vzc1snbmV4dFRpY2snXSh0aGlzW18weDUxMDgoJzB4MTE0JyldWydiaW5kJ10odGhpcykpO30sXzB4NTQ0ODMyWydwcm90b3R5cGUnXVtfMHg1MTA4KCcweDEzZCcpXT1mdW5jdGlvbigpe19bJ2VhY2gnXSh0aGlzW18weDUxMDgoJzB4MTE3JyldLGZ1bmN0aW9uKF8weDExMDAxMCl7XzB4MTEwMDEwW18weDUxMDgoJzB4MTM4JyldWydzZW5kJ10oeyd0eXBlJzpfMHg1MTA4KCcweDExNicpfSk7fSk7fSxfMHg1NDQ4MzJbXzB4NTEwOCgnMHhhZScpXVtfMHg1MTA4KCcweDExNCcpXT1mdW5jdGlvbihfMHgxMTAwMTApe2lmKCd4a2Vwbyc9PT0neGtlcG8nKXtpZigweDAhPT10aGlzW18weDUxMDgoJzB4NzJlJyldWydsZW5ndGgnXSl7aWYoXzB4NTEwOCgnMHg3M2EnKT09PV8weDUxMDgoJzB4NzNhJykpe2lmKCFfMHgxMTAwMTApZm9yKHZhciBfMHgzNzM5NuKAizM9MHgwO18weDM3Mzk2Mzx0aGlzW18weDUxMDgoJzB4MTE3JyldW18weDUxMDgoJzB4YmUnKV07XzB4MzczOTYzKyspaWYodGhpc1tfMHg1MTA4KCcweDExNycpXVtfMHgzNzM5NjNdW18weDUxMDgoJzB4MTVhJyldPT09V29ya2VyU3RhdGVbXzB4NTEwOCgnMHg3MzAnKV0pe18weDExMDAxMD10aGlzW18weDUxMDgoJzB4MTE3JyldW18weDM3Mzk2M107YnJlYWs7fWlmKF8weDExMDAxMCl7aWYoXzB4NTEwOCgnMHg3M2InKT09PSdzSGhJaicpe3ZhciBfMHg1YjQ5NTU9dGhpc1tfMHg1MTA4KCcweDcyZScpXVtfMHg1MTA4KCcweDczYycpXSgpO18weDExMDAxMFtfMHg1MTA4KCcweDE2ZicpXShfMHg1YjQ5NTVbXzB4NTEwOCgnMHg3M2QnKV0sXzB4NWI0OTU1W18weDUxMDgoJzB4NzNlJyldKTt9ZWxzZXt2YXIgXzB4NTMwYTQ3LF8weDMxMjJjMD1fMHgxMTAwMTAoXzB4NTEwOCgnMHgxZjknKSk7aWYoXzB4MzczOTYzWydfbW9kZWwnXSlfMHg1MzBhNDc9XzB4MzczOTYzWydf4oCLbW9kZWwnXTtlbHNle3ZhciBfMHgxODlmODg9XzB4MTEwMDEwKF8weDUxMDgoJzB4MWZhJykpO18weDUzMGE0Nz1uZXcgXzB4MTg5Zjg4KHsnZmlsZUlkQnlQYXRoJzpmdW5jdGlvbihfMHgyMTcwZWUpe3JldHVybiBfMHgzNzM5NjNbXzB4NTEwOCgnMHhhNScpXShfMHgyMTcwZWUpO30sJ3Byb2plY3QnOl8weDM3Mzk2M30pO31fMHgzNzM5NjNbJ191aVNlcnZpY2UnXT1uZXcgXzB4MzEyMmMwKF8weDUzMGE0NyksXzB4MzczOTYzW18weDUxMDgoJzB4MWZiJyldWydvbiddKF8weDUxMDgoJzB4YTgnKSxmdW5jdGlvbihfMHg1NmI4YjIpe3JldHVybiBfMHg1MTA4KCcweDIwMicpPT09XzB4NTZiOGIyW18weDUxMDgoJzB4NjknKV0mJl8weDM3Mzk2M1tfMHg1MTA4KCcweGE3JyldKF8weDUxMDgoJzB4YTgnKSxfMHg1NmI4YjIpO30pO319fWVsc2V7dGhpc1tfMHg1MTA4KCcweDIxNycpXT1fMHgxMTAwMTBbJ2lkJ10sdGhpc1tfMHg1MTA4KCcweDM1OScpXT1fMHgxMTAwMTBbJ2ZpbGVJZCddLHRoaXNbXzB4NTEwOCgnMHg0NzMnKV09XzB4MTEwMDEwW18weDUxMDgoJzB4MTMwJyldLHRoaXNbXzB4NTEwOCgnMHgyYjInKV09XzB4MTEwMDEwW18weDUxMDgoJzB4MjVlJyldLHRoaXNbJ190ZXN0cyddPV8weDExMDAxMFtfMHg1MTA4KCcweGQ0JyldLHRoaXNbXzB4NTEwOCgnMHgzOWInKV09XzB4MTEwMDEwW18weDUxMDgoJzB4NmEnKV0sdGhpc1tfMHg1MTA4KCcweDQ3NCcpXT1fMHgxMTAwMTBbXzB4NTEwOCgnMHgzNGEnKV0sdGhpc1tfMHg1MTA4KCcweDQ3NScpXT1fMHgxMTAwMTBbXzB4NTEwOCgnMHg0NzYnKV07fX19ZWxzZXtyZXR1cm4gXzB4NTEwOCgnMHg3M2YnKT09PV8weDExMDAxMFtfMHg1MTA4KCcweDEyMycpXTt9fSxfMHgzNzM5NjNbXzB4NTEwOCgnMHgyJyldPXsnX3F1ZXVlJzp2b2lkIDB4MCwnc3RhcnQnOmZ1bmN0aW9uKF8weDExMDAxMCl7dGhpc1tfMHg1MTA4KCcweDc0MCcpXXx8KHRoaXNbXzB4NTEwOCgnMHg3NDAnKV09bmV3IF8weDU0NDgzMihfMHgxMTAwMTApKTt9LCdzdGFydGVkJzpmdW5jdGlvbigpe3JldHVybiEhdGhpc1tfMHg1MTA4KCcweDc0MCcpXTt9LCdydW4nOmZ1bmN0aW9uKF8weDExMDAxMCl7aWYoXzB4NTEwOCgnMHg3NDEnKT09PV8weDUxMDgoJzB4NzQxJykpe3ZhciBfMHgzNzM5NjM9dGhpcztyZXR1cm4gXzB4MzczOTYzW18weDUxMDgoJzB4NzQwJyldP1FbXzB4NTEwOCgnMHgxYTgnKV0oZnVuY3Rpb24oXzB4NWI0OTU1LF8weDQ4MTNkMCl7dHJ5e18weDM3Mzk2M1snX3F1ZXVlJ11bXzB4NTEwOCgnMHg3MzknKV0oXzB4MTEwMDEwLGZ1bmN0aW9uKF8weDExMDAxMCl7aWYoXzB4NTEwOCgnMHg3NDInKT09PV8weDUxMDgoJzB4NzQzJykpe18weDYwYjlmNignRXJyb3JceDIwd2hpbGVceDIwcHJvY2Vzc2luZ1x4MjBTVERFUlJceDIwbWVzc2FnZTpceDIwJytfMHgzNzM5NjNbJ21lc3NhZ2UnXSk7fWVsc2V7XzB4NWI0OTU1KF8weDExMDAxMCk7fX0pO31jYXRjaChfMHg0MjAwMWQpe18weDQ4MTNkMChfMHg0MjAwMWQpO319KTpRW18weDUxMDgoJzB4MWRkJyldKG5ldyBFcnJvcihfMHg1MTA4KCcweDc0NCcpKSk7fWVsc2V7cmV0dXJuIF8weDExMDAxMFtfMHg1MTA4KCcweGJlJyldO319LCdzdG9wJzpmdW5jdGlvbigpe2lmKCdXb3ZCcCchPT1fMHg1MTA4KCcweDc0NScpKXt0aGlzW18weDUxMDgoJzB4NzQwJyldJiYodGhpc1tf4oCLMHg1MTA4KCcweDc0MCcpXVsnc3RvcCddKCksZGVsZXRlIHRoaXNbXzB4NTEwOCgnMHg3NDAnKV0pO31lbHNle18weDExMDAxMFtfMHg1MTA4KCcweDE2ZicpXShKU09OW18weDUxMDgoJzB4YjAnKV0oeyd0eXBlJzpfMHg1MTA4KCcweDc0NicpfSkpO319fTt9LHsnY2hpbGRfcHJvY2Vzcyc6dm9pZCAweDAsJ2V2ZW50cyc6dm9pZCAweDAsJ29zJzp2b2lkIDB4MCwndXRpbCc6dm9pZCAweDB9XSwyOTpbZnVuY3Rpb24oXzB4ZDE3ODNlLF8weDI0OTBiYSxfMHg1MDFkZjQpe3ZhciBfMHg1MjAyY2E9XzB4ZDE3ODNlKCdvcycpLF8weDU3ZjZhYT1fMHhkMTc4M2UoXzB4NTEwOCgnMHgzNCcpKSxfMHg0NTM5ZDc9XzB4ZDE3ODNlKF8weDUxMDgoJzB4NjNhJykpLF8weDU2ZWY5Yz1fMHhkMTc4M2UoXzB4NTEwOCgnMHg4MCcpKSxfMHgyNTFkNmY9bG9nZ2VyWydjcmVhdGUnXShfMHg1MTA4KCcweDExNycpKVtfMHg1MTA4KCcweDEyMCcpXSxfMHg1MTM5OTE9XzB4ZDE3ODNlKCd3cycpW18weDUxMDgoJzB4NjNiJyldLF8weGM4NTgyNz0vXndpbi9bJ3Rlc3QnXShwcm9jZXNzW18weDUxMDgoJzB4MzAxJyldKSxfMHgzMzMxNDM9MHgxMzg4LF8weDQ0N2Y0Nj0weGM4LF8weDQ2Yjg1ZT1fMHg1MTA4KCcweDE5YicpLF8weGQ5MTg0ZT1fMHg1MTA4KCcweDc0NycpLF8weDI0MmU4Nz1mdW5jdGlvbihfMHhkMTc4M2UsXzB4MjQ5MGJhKXt2YXIgXzB4NTAxZGY0PXRoaXM7XzB4NTAxZGY0WydfcHJvamVjdCddPV8weGQxNzgzZSxfMHg1MDFkZjRbXzB4NTEwOCgnMHg3NDgnKV09XzB4ZDE3ODNlWydzZXR0aW5ncyddKCksXzB4NTAxZGY0W18weDUxMDgoJzB4MzM1JyldPV8weDI0OTBiYSxwcm9jZXNzWydlbnYnXVtfMHg1MTA4KCcweDUnKV0mJihfMHg1MDFkZjRbXzB4NTEwOCgnMHg3NDknKV09ZnVuY3Rpb24oXzB4MjQ5MGJhKXtpZihfMHg1MTA4KCcweDc0YScpPT09J0dUUEljJyl7dmFyIF8weDUwMWRmND1fWydleHRlbmQnXSh7fSxfMHgyNDkwYmEpO18weGQxNzgzZVtfMHg1MTA4KCcweDY2MicpXShfMHg1MDFkZjQpLF8weGQxNzgzZVtfMHg1MTA4KCcweDc0YicpXSh7J3R5cGUnOl8weDUxMDgoJzB4MWM4JyksJ2RhdGEnOl8weDUwMWRmNH0pO31lbHNle3ZhciBfMHgyMTdlMDQ9dGhpcztfMHgyMTdlMDRbJ19tYXhXb3JrZXJzJ109TWF0aFtfMHg1MTA4KCcweDQ4MScpXSgweDEsXzB4MjE3ZTA0W18weDUxMDgoJzB4NzQ4JyldW18weDUxMDgoJzB4MTE3JyldW18weDUxMDgoJzB4NzRjJyldfHxNYXRoW18weDUxMDgoJzB4NDgxJyldKF8weDUyMDJjYVtfMHg1MTA4KCcweDc0ZCcpXSgpW18weDUxMDgoJzB4YmUnKV0tMHgyLDB4MikpLF8weGM4NTgyNyYmIV8weDIxN2UwNFtfMHg1MTA4KCcweDc0OCcpXVtfMHg1MTA4KCcweDExNycpXVtfMHg1MTA4KCcweDc0YycpXSYmXzB4NTEwOCgnMHg3NGUnKT09PV8weDIxN2UwNFtfMHg1MTA4KCcweDc0OCcpXVsnZW52J11bXzB4NTEwOCgnMHg3NGYnKV0mJihfMHgyMTdlMDRbXzB4NTEwOCgnMHg3NTAnKV09TWF0aFtfMHg1MTA4KCcweDc1MScpXSgweDEwLF8weDIxN2UwNFtfMHg1MTA4KCcweDc1MCcpXSkpLF8weDIxN2UwNFsnX21pbldvcmtlcnMnXT1NYXRoWydtYXgnXSgweDEsXzB4MjE3ZTA0Wydfb3B0cyddW18weDUxMDgoJzB4MTE3JyldW18weDUxMDgoJzB4NzUyJyldfHxNYXRoW18weDUxMDgoJzB4NDgxJyldKE1hdGhbJ2Zsb29yJ10oXzB4MjE3ZTA0W18weDUxMDgoJzB4NzUwJyldLzB4MiksMHgyKSksXzB4MjUxZDZmKF8weDUxMDgoJzB4NzUzJyksXzB4MjE3ZTA0W18weDUxMDgoJzB4NzUwJyldLF8weDIxN2UwNFsnX21pbldvcmtlcnMnXSk7fX0sXzB4NTAxZGY0W18weDUxMDgoJzB4MmVmJyldPWZ1bmN0aW9uKF8weGQxNzgzZSl7fSksXzB4NTAxZGY0Wydfc2Vzc2lvbnMnXT17fSxfMHg1MDFkZjRbXzB4NTEwOCgnMHg2ZDUnKV09MHgw4oCLLF8weDUwMWRmNFtfMHg1MTA4KCcweDMzMycpXT17fSxfMHg1MDFkZjRbXzB4NTEwOCgnMHg1NzQnKV09e30sXzB4NTAxZGY0W18weDUxMDgoJzB4NzU0JyldPXt9LF8weDUwMWRmNFsnX2NhbGN1bGF0ZU51bWJlck9mUGFyYWxsZWxXb3JrZXJzJ10oKTtmb3IodmFyIF8weDUyMDJjYT0weDA7XzB4NTIwMmNhPE1hdGhbXzB4NTEwOCgnMHg0ODEnKV0oXzB4NTAxZGY0WydfbWF4V29ya2VycyddLF8weDUwMWRmNFtfMHg1MTA4KCcweDc1NScpXSk7XzB4NTIwMmNhKyspXzB4NTAxZGY0W18weDUxMDgoJzB4MTQ5JyldKF8weDUyMDJjYSk7XzB4NTAxZGY0Wydfbm9ybWFsaXplZFdhbGxhYnlTZXJ2ZXJQYXRoJ109dGhpc1tfMHg1MTA4KCcweDllJyldWydub3JtYWxpemVQYXRoJ10oXzB4NTdmNmFhW18weDUxMDgoJzB4MjI1JyldKHByb2Nlc3NbXzB4NTEwOCgnMHg3NTYnKV1bXzB4NTEwOCgnMHgyZDMnKV0pKSxfMHg1MDFkZjRbXzB4NTEwOCgnMHg2NWMnKV09dGhpc1tfMHg1MTA4KCcweDllJyldWydub3JtYWxpemVQYXRoJ10odGhpc1tfMHg1MTA4KCcweDllJyldWydfbG9jYWxSb290J10pLF8weDUwMWRmNFtfMHg1MTA4KCcweDYyYicpXT10aGlzW18weDUxMDgoJzB4OWUnKV1bXzB4NTEwOCgnMHg1NTQnKV0oKTt9O18weDI0MmU4N1tfMHg1MTA4KCcweGFlJyldPXsnd29ya2VyOnRyYW5zZm9ybWVkRmlsZSc6ZnVuY3Rpb24oXzB4ZDE3ODNlKXtpZihfMHg1MTA4KCcweDc1NycpIT09XzB4NTEwOCgnMHg3NTcnKSl7dmFyIF8weDRmMTMxNTtpZihfMHhkMTc4M2UpaWYoXzB4MjQ5MGJhKXt2YXIgXzB4MWYyNmU5PW5ldyBfMHgyNTFkNmYoXzB4MjQ5MGJhKTtfMHhkMTc4M2VbXzB4NTEwOCgnMHg0MDMnKV09XzB4MjQ5MGJhW18weDUxMDgoJzB4NDA0JyldJiZfMHgyNDkwYmFbXzB4NTEwOCgnMHg0MDQnKV1bMHgwXXx8Jy4nLF8weGQxNzgzZVsnYmlhcyddPTB4MixfMHg0ZjEzMTU9XzB4MWYyNmU5W18weDUxMDgoJzB4NDA2JyldKF8weGQxNzgzZSk7fWVsc2UgXzB4NGYxMzE1PV8weGQxNzgzZTtyZXR1cm4gXzB4NGYxMzE1O31lbHNle3RoaXNbXzB4NTEwOCgnMHg5ZScpXVtfMHg1MTA4KCcweDEwMicpXShfMHhkMTc4M2UpO319LCdzdGFydCc6ZnVuY3Rpb24oXzB4ZDE3ODNlKXtpZihfMHg1MTA4KCcweDc1OCcpPT09XzB4NTEwOCgnMHg3NTknKSl7cmV0dXJuKCFnW18weDUxMDgoJzB4MTUyJyldJiYhXzB4ZDE3ODNlW18weDUxMDgoJzB4NzEnKV18fCFnWyd0ZXN0J10mJl8weGQxNzgzZVsndGVzdCddKSYmXzB4Yzg1ODI3W18weDUxMDgoJzB4NTI2JyldKG0sXzB4ZDE3ODNlW18weDUxMDgoJzB4NTIyJyldfHwoXzB4NTdmNmFhPycuLyc6JycpK18weGQxNzgzZVtfMHg1MTA4KCcweDRlZCcpXSwhXzB4ZDE3ODNlW18weDUxMDgoJzB4NTIyJyldJiZ7J2RvdCc6XzB4NDUzOWQ3LCdtaWNyb21hdGNoJzpfMHgyNTFkNmZ9KTt9ZWxzZXt2YXIgXzB4MjQ5MGJhPXRoaXMsXzB4NTAxZGY0PV8weDI0OTBiYVtfMHg1MTA4KCcweDY3NicpXT1fMHhkMTc4M2U/XzB4NDUzOWQ3WydjcmVhdGVTZXJ2ZXInXShfMHhkMTc4M2UpOl8weDQ1MzlkN1tfMHg1MTA4KCcweDY4NScpXSgpO3JldHVybiBfMHg1MDFkZjRbXzB4NTEwOCgnMHg2ODYnKV0oMHgwKSxRW18weDUxMDgoJzB4MWE4JyldKGZ1bmN0aW9uKF8weGQxNzgzZSxfMHg1MjAyY2Epe18weDUwMWRmNFsnb24nXSgnbGlzdGVuaW5nJyxmdW5jdGlvbigpe2lmKF8weDUxMDgoJzB4NzVhJykhPT0nZndhQVYnKXtyZXR1cm4gX1tfMHg1MTA4KCcweDEzNScpXShfMHgyNDkwYmFbXzB4NTEwOCgnMHg1NTInKV0oKSxmdW5jdGlvbihfMHg1ZTVmMTYpe18weGQxNzgzZVtfMHg1ZTVmMTZbXzB4NTEwOCgnMHg1MCcpXSgpXT1fMHg1ZTVmMTY7fSksXzB4ZDE3ODNlO31lbHNle3RyeXtfMHgyNDkwYmFbXzB4NTEwOCgnMHg3NWInKV09XzB4NTAxZGY0WydhZGRyZXNzJ10oKVtfMHg1MTA4KCcweGIzJyldLF8weDI1MWQ2ZihfMHg1MTA4KCcweDc1YycpK18weDI0OTBiYVtfMHg1MTA4KCcweDc1YicpXSksXzB4MjQ5MGJhW18weDUxMDgoJzB4NDVlJyldPW5ldyBfMHg1MTM5OTEoeydzZXJ2ZXInOl8weDUwMWRmNCwndmVyaWZ5Q2xpZW50JzpmdW5jdGlvbihfMHhkMTc4M2Upe3JldHVybiBfW18weDUxMDgoJzB4NzVkJyldKF8weGQxNzgzZVsnb3JpZ2luJ10pO319KSxfMHgyNDkwYmFbXzB4NTEwOCgnMHg0NWUnKV1bJ29uJ10oXzB4NTEwOCgnMHg3NWUnKSxmdW5jdGlvbihfMHhkMTc4M2Upe18weGQxNzgzZVsnb24nXShfMHg1MTA4KCcweGE4JyksZnVuY3Rpb24oXzB4NTAxZGY0KXtpZihfMHg1MTA4KCcweDc1ZicpPT09XzB4NTEwOCgnMHg3NWYnKSl7dmFyIF8weDUyMDJjYTt0cnl7XzB4NTIwMmNhPUpTT05bJ3BhcnNlJ10oXzB4NTAxZGY0KTt9Y2F0Y2goXzB4YWExOGQwKXtpZignTFd4VXQnPT09J1VDbnJmJyl7dmFyIF8weDRmODU2ND1fMHg1MDFkZjRbXzB4NTEwOCgnMHgzMmInKV0oXzB4ZDE3ODNlW18weDUxMDgoJzB4MjM3JyldKCkpO2lmKF8weDRmODU2NCl7XzB4ZDE3ODNlW18weDUxMDgoJzB4M2UyJyldKF8weDRmODU2NCk7dmFyIF8weDIxMmQ5Mj1fMHg0Zjg1NjRbXzB4NTEwOCgnMHg0YTcnKV0oXzB4ZDE3ODNlW18weDUxMDgoJzB4MjNiJyldKCkpO251bGwhPV8weDIxMmQ5MiYmKF8weGQxNzgzZVtfMHg1MTA4KCcweDNkOScpXShfMHgyMTJkOTIpLF8weDIxMmQ5MltfMHg1MTA4KCcweDNmNycpXShfMHgyNDkwYmEpKTt9fWVsc2V7cmV0dXJuIHZvaWQgY29uc29sZVtfMHg1MTA4KCcweDI0JyldKF8weDUxMDgoJzB4NzYwJykrXzB4NTAxZGY0KycsXHgyMCcrKF8weGFhMThkMCYmXzB4YWExOGQwW18weDUxMDgoJzB4YTgnKV0pKTt9fWlmKF8weDI0OTBiYVsnd29ya2VyOicrXzB4NTIwMmNhW18weDUxMDgoJzB4NjknKV1dKXJldHVybiBfMHgyNDkwYmFbXzB4NTEwOCgnMHg3NjEnKStfMHg1MjAyY2FbXzB4NTEwOCgnMHg2OScpXV0oXzB4NTIwMmNhW18weDUxMDgoJzB4MWVmJyldKTtpZihfMHg1MjAyY2FbJ3dvcmtlciddKXt2YXIgXzB4NDUzOWQ3PV8weDI0OTBiYVtfMHg1MTA4KCcweDMzMycpXVtfMHg1MjAyY2FbXzB4NTEwOCgnMHg3MjknKV1dO2lmKCFfMHg0NTM5ZDcpcmV0dXJuO2lmKF8weDQ1MzlkN1tfMHg1MTA4KCcweDNkYycpXSlfMHg0NTM5ZDdbJ29uQ29ubmVjdGVkJ10oXzB4ZDE3ODNlKTtlbHNlIGlmKHByb2Nlc3NbJ2VudiddW18weDUxMDgoJzB4NScpXSYmXzB4NDUzOWQ3W18weDUxMDgoJzB4MzM0JyldKXtpZihfMHg0NTM5ZDdbXzB4NTEwOCgnMHgzMzQnKV1bXzB4NTEwOCgnMHg1MGEnKV0pdHJ5e18weDQ1MzlkN1snaW5zdGFuY2UnXVtfMHg1MTA4KCcweDUwYScpXVsnY2xvc2UnXSgpLF8weDQ1MzlkN1tfMHg1MTA4KCcweDMzNCcpXVtfMHg1MTA4KCcweDUwYScpXVsncmVtb3ZlQWxsTGlzdGVuZXJzJ10oKTt9Y2F0Y2goXzB4NWVhMTJlKXt9XzB4NDUzOWQ3WydpbnN0YW5jZSddW18weDUxMDgoJzB4NTBhJyldPV8weGQxNzgzZTt9dHJ5e18weGQxNzgzZVsnc2VuZCddKEpTT05bJ3N0cmluZ2lmeSddKHsndHlwZSc6XzB4NTEwOCgnMHg3NDYnKX0pKTt9Y2F0Y2goXzB4M2JiODNmKXtjb25zb2xlWydlcnJvciddKF8weDUxMDgoJzB4NTViJykrXzB4M2JiODNmW18weDUxMDgoJzB4YTgnKV0pO319ZWxzZSBpZihfMHg1MjAyY2FbXzB4NTEwOCgnMHgzNDknKV0pe3ZhciBfMHg1NmVmOWM9XzB4MjQ5MGJhW18weDUxMDgoJzB4NzYyJyldW18weDUyMDJjYVtfMHg1MTA4KCcweDM0OScpXV0sXzB4NTEzOTkxPSFfMHg1NmVmOWN8fF8weDU2ZWY5Y1tfMHg1MTA4KCcweDU4NCcpXXx8XzB4MjQ5MGJhW18weDUxMDgoJzB4NDUwJyldO2lmKCdjb25zb2xlJz09PV8weDUyMDJjYVtfMHg1MTA4KCcweDY5JyldJiZfMHg1MjAyY2FbXzB4NTEwOCgnMHgxZWYnKV0pe2lmKF8weDUxMDgoJzB4NzYzJykhPT0nTGh5RlEnKXt2YXIgXzB4MzI3YjM0PXRoaXNbXzB4NTEwOCgnMHgxNDInKV1bXzB4NTEwOCgnMHgyYzYnKV0oXzB4ZDE3ODNlW18weDUxMDgoJzB4MzQnKV0pO18weDMyN2IzNCYmKF8weDMyN2IzNFsnb3BlbmVkSW5FZGl0b3InXSgpLHRoaXNbXzB4NTEwOCgnMHgyYzgnKV0oXzB4MzI3YjM0KSk7fWVsc2V7aWYoXzB4NTEwOCgnMHg3NjQnKT09PV8weDUyMDJjYVtfMHg1MTA4KCcweDFlZicpXVtfMHg1MTA4KCcweDY5JyldKXJldHVybiB2b2lkIF8weDI1MWQ2ZihfMHg1MjAyY2FbXzB4NTEwOCgnMHgxZWYnKV1bXzB4NTEwOCgnMHgzZGEnKV0pOyhfMHg1MjAyY2FbJ2RhdGEnXVsnc3BlYyddfHxwcm9jZXNzW18weDUxMDgoJzB4NycpXVtfMHg1MTA4KCcweDUnKV0pJiYhXzB4NTEzOTkxfHxfMHg1MTA4KCcweDc2NScpPT09XzB4NTIwMmNhW18weDUxMDgoJzB4MWVmJyldW18weDUxMDgoJzB4NjknKV18fGNvbnNvbGVbJ2xvZyddKF8weDUxMDgoJzB4NzY2JykrXzB4NTIwMmNhWydkYXRhJ11bXzB4NTEwOCgnMHg2OScpXSsnOlx4MjAnK18weDUyMDJjYVtfMHg1MTA4KCcweDFlZicpXVtfMHg1MTA4KCcweDNkYScpXSk7fX1pZihfMHg1MTM5OTEpcmV0dXJuO3RyeXtpZihfMHg1MTA4KCcweDc2NycpIT09J0R4RHJRJyl7XzB4NTZlZjljW18weDUyMDJjYVtfMHg1MTA4KCcweDY5JyldXShfMHg1MjAyY2FbJ2RhdGEnXSk7fWVsc2V7dmFyIF8weDJiNDI1NT1fMHg1MDFkZjRbXzB4NTEwOCgnMHgzMmInKV0oXzB4MjUxZDZmKSxfMHgxYWY4MDA9XzB4MjQ5MGJhW18weDUxMDgoJzB4M2Q4JyldKCk7aWYoXzB4MmI0MjU1JiZfMHgxYWY4MDAmJihfMHgyYjQyNTVbJ3NldFJhbmdlQ29uc29sZUxvZyddKF8weDUxMDgoJzB4NTljJykhPT1fMHgyNDkwYmFbXzB4NTEwOCgnMHg2OScpXSgpP18weDI0OTBiYVsndGV4dCddKCk6XzB4NTEwOCgnMHg1OWQnKSxfMHgxYWY4MDApLF8weDI0OTBiYVtfMHg1MTA4KCcweDNlMicpXShfMHgyYjQyNTUpKSxfMHgyNDkwYmFbXzB4NTEwOCgnMHgxZWUnKV0oKSl7dmFyIF8weDVhMzNiOD1fMHg0NTM5ZDdbXzB4MjUxZDZmXT1fMHg0NTM5ZDdbXzB4MjUxZDZmXXx8eydmaWxlJzpfMHgyYjQyNTVbJ3BhdGgnXSgpLCdtZXNzYWdlcyc6W119O18weDVhMzNiOFsnbWVzc2FnZXMnXVtfMHg1MTA4KCcweDRiJyldKF8weDI0OTBiYSk7fX19Y2F0Y2goXzB4MjMwZDM0KXtjb25zb2xlW18weDUxMDgoJzB4MjQnKV0oXzB4NTEwOCgnMHg3NjgnKStfMHg1MjAyY2FbXzB4NTEwOCgnMHg2OScpXStfMHg1MTA4KCcweDc2OScpKyhfMHgyMzBkMzQmJl8weDIzMGQzNFsnbWVzc2FnZSddKSksXzB4NTZlZjljW18weDUxMDgoJzB4MWRkJyldKF8weDIzMGQzNCk7fX19ZWxzZXt2YXIgXzB4NTJhMmJlPV8weDI0OTBiYVtfMHg1MTA4KCcweDc2YScpXShfMHg1MDFkZjQsXzB4NTIwMmNhLF8weGQxNzgzZVsnaW5zdGFuY2UnXSxfMHg1N2Y2YWEsXzB4NDUzOWQ3KTtfMHhkMTc4M2VbXzB4NTEwOCgnMHgzMzQnKV1bXzB4NTEwOCgnMHg2YScpXShmdW5jdGlvbihfMHg0MjE4ZmQpe3JldHVybiBfMHgyNDkwYmFbXzB4NTEwOCgnMHgxNWMnKV0oKT8oXzB4NTJhMmJlW18weDUxMDgoJzB4MWRkJyldKHsncnVuQ2FuY2VsbGVkJzohMHgwfSksITB4MSk6XzB4NTEwOCgnMHgxNzQnKT09PV8weDQyMThmZHx8KF8weDUyYTJiZVtfMHg1MTA4KCcweDFkZCcpXShuZXcgRXJyb3IoXzB4NTEwOCgnMHg3NmInKStfMHg0MjE4ZmQpKSwhMHgxKTt9LGZ1bmN0aW9uKF8weDNlYzY4MyxfMHg1OTFiZGUsXzB4NTVkOTU1LF8weDJjMTVhNil7XzB4MjQ5MGJhW18weDUxMDgoJzB4NzZjJyldKF8weDUyYTJiZSxfMHg1MDFkZjQsXzB4M2VjNjgzLF8weDU5MWJkZSwhMHgxLF8weDU1ZDk1NSxfMHgyYzE1YTYpO30pO319KTt9KSxfMHhkMTc4M2UoKTt9Y2F0Y2goXzB4NTQ3NzU2KXtfMHg1MjAyY2EoXzB4NTQ3NzU2KTt9fX0pO30pO319LCd3YWxsYWJ5RmlsZUlkUHJlZml4JzpmdW5jdGlvbigpe3JldHVybiBfMHg0NmI4NWU7fSwncmVjZWl2ZXJQb3J0JzpmdW5jdGlvbigpe3JldHVybiB0aGlzW18weDUxMDgoJzB4NzViJyldO30sJ3NldEZpbGVSb290JzpmdW5jdGlvbihfMHhkMTc4M2Upe2lmKF8weDUxMDgoJzB4NzZkJyk9PT1fMHg1MTA4KCcweDc2ZCcpKXt0aGlzW18weDUxMDgoJzB4NzZlJyldPXRoaXNbXzB4NTEwOCgnMHg5ZScpXVtfMHg1MTA4KCcweGEzJyldKF8weGQxNzgzZSk7fWVsc2V7dHJ5e3ZhciBfMHhjZDgwNzk9XzB4NDZiODVlW18weDUxMDgoJzB4MjgyJyldKCdtZDUnKVtfMHg1MTA4KCcweDI3MScpXShfMHg1MDFkZjQpW18weDUxMDgoJzB4Mjc0JyldKF8weDUxMDgoJzB4MmFiJykpO18weDUxMDgoJzB4MmFjJykhPT1fMHhjZDgwNzkmJl8weDUxMDgoJzB4NzZmJykhPT1fMHhjZDgwNzkmJl8weDUxMDgoJzB4MmFkJykhPT1fMHhjZDgwNzkmJl8weDUxMDgoJzB4NzcwJykhPT1fMHhjZDgwNzkmJicwN2VkMWZjNmEzYTMyZDY2MDk5ZmUxODcwYzgzYTBjZSchPT1fMHhjZDgwNzkmJic0ZTUzZeKAizRmOGFhNWRhYmJlYTg3YTgxNmQyOGIwMzkzZSchPT1fMHhjZDgwNzkmJic2ZmE2Yjg4N2VkZmZiMmMxMTNmODRmMTc5NjQ5Y2JiOSchPT1fMHhjZDgwNzkmJl8weDUyMDJjYVsnX3RyaWFsTW9kZSddKCk7fWNhdGNoKF8weDdhN2M3NSl7fXJldHVybiBfMHgyNDkwYmFbXzB4NTEwOCgnMHgxMGEnKV0oXzB4ZDE3ODNlLGFyZ3VtZW50cyk7fX0sJ3J1bic6ZnVuY3Rpb24oXzB4ZDE3ODNlKXt2YXIgXzB4MjQ5MGJhPXRoaXM7cmV0dXJuIF8weDI0OTBiYVsnX2NhbmNlbGxlZCddPSEweDEsXzB4MjQ5MGJhW18weDUxMDgoJzB4NmQ1JyldPTB4MCxfMHgyNDkwYmFbXzB4NTEwOCgnMHg3NzEnKV09XzB4ZDE3ODNlW18weDUxMDgoJzB4NzcyJyldLF8weGQxNzgzZVtfMHg1MTA4KCcweDc3MycpXSYmX1tfMHg1MTA4KCcweDEzNScpXShfMHgyNDkwYmFbXzB4NTEwOCgnMHgzMzMnKV0sZnVuY3Rpb24oXzB4ZDE3ODNlLF8weDUwMWRmNCl7aWYoXzB4NTEwOCgnMHg3NzQnKT09PV8weDUxMDgoJzB4Nzc1Jykpe3ZhciBfMHg1OTg3ZTQ9dGhpcztfMHg1OTg3ZTRbXzB4NTEwOCgnMHgyYzMnKV0mJihfMHhkMTc4M2VbJ2ZpbGVzJ10mJl9bXzB4NTEwOCgnMHgxMzUnKV0oXzB4ZDE3ODNlW18weDUxMDgoJzB4MWNiJyldLGZ1bmN0aW9uKF8weDM1YjQwZil7X1tfMHg1MTA4KCcweDEzNScpXShfMHgzNWI0MGZbXzB4NTEwOCgnMHgxZjMnKV0sZnVuY3Rpb24oXzB4MzViNDBmKXsoXzB4MzViNDBmfHxfMHgzNWI0MGZbJ3ZhbHVlQmFnJ118fF8weDM1YjQwZltfMHg1MTA4KCcweDFlZScpXVtfMHg1MTA4KCcweDFlZicpXSkmJl8weDM1YjQwZltfMHg1MTA4KCcweDFlZScpXVtfMHg1MTA4KCcweDFlZicpXVsnY29weUtleSddPT09XzB4NTk4N2U0Wydjb3B5S2V5J10mJl8weDU5ODdlNFsnX3Byb2plY3QnXVsnY29weVRvQ2xpcGJvYXJkJ10oeydkYXRhJzpfMHgzNWI0MGZbXzB4NTEwOCgnMHgxZWUnKV1bJ2RhdGEnXX0pO30pO30pLGRlbGV0ZSB0aGlzWydjb3B5S2V5J10pLHRoaXNbXzB4NTEwOCgnMHgxYzcnKV0oXzB4ZDE3ODNlKTt9ZWxzZXtfMHgyNDkwYmFbXzB4NTEwOCgnMHgxZTInKV0oXzB4NTAxZGY0KTt9fSksXzB4MjUxZDZmKCdTdGFydGluZ1x4MjB0ZXN0XHgyMHJ1bixceDIwcHJpb3JpdHk6XHgyMCcrXzB4MjQ5MGJhWydfcnVuUHJpb3JpdHknXSksXzB4MjQ5MGJhW18weDUxMDgoJzB4NmQ3JyldPW5ldyBEYXRlKClbXzB4NTEwOCgnMHgyNjQnKV0oKSwoXzB4ZDE3ODNlWydmdWxsUnVuJ10mJl8weDI0OTBiYVsnX21heFdvcmtlcnMnXT4weDEmJl8weGQxNzgzZVtfMHg1MTA4KCcweGJjJyldW18weDUxMDgoJzB4YmUnKV0+MHgxP18weDI0OTBiYVtfMHg1MTA4KCcweDc3NicpXShfMHhkMTc4M2UsXzB4MjQ5MGJhW18weDUxMDgoJzB4NzUwJyldKTpfMHgyNDkwYmFbJ19taW5Xb3JrZXJzJ10+MHgxJiZfMHhkMTc4M2VbJ3Rlc3RGaWxlc1RvTG9hZCddW18weDUxMDgoJzB4YmUnKV0+MHgxJiYhKF8weGQxNzgzZVtfMHg1MTA4KCcweDNiNicpXSYmXzB4MjQ5MGJhW18weDUxMDgoJzB4NzUwJyldPF8weDI0OTBiYVsnX21pbldvcmtlcnMnXSk/XzB4MjQ5MGJhW18weDUxMDgoJzB4Nzc2JyldKF8weGQxNzgzZSxfMHgyNDkwYmFbXzB4NTEwOCgnMHg3NTUnKV0pOl8weDI0OTBiYVsnX2V4dGVuc2lvbiddW18weDUxMDgoJzB4Nzc3JyldKF8weGQxNzgzZSwweDApW18weDUxMDgoJzB4MWRhJyldKGZ1bmN0aW9uKF8weGQxNzgzZSl7cmV0dXJuIF8weDI0OTBiYVtfMHg1MTA4KCcweDc3OCcpXShfMHhkMTc4M2UpO30pKVsndGhlbiddKGZ1bmN0aW9uKF8weGQxNzgzZSl7aWYoJ0VuWkZYJyE9PV8weDUxMDgoJzB4Nzc5Jykpe2lmKF8weDI0OTBiYVtfMHg1MTA4KCcweDZkNScpXSl7XzB4MjQ5MGJhWydfZW5kVGltZSddPW5ldyBEYXRlKClbXzB4NTEwOCgnMHgyNjQnKV0oKTt2YXIgXzB4NTAxZGY0PV8weDI0OTBiYVtfMHg1MTA4KCcweDZkNicpXS1fMHgyNDkwYmFbXzB4NTEwOCgnMHg2ZDcnKV0sXzB4NTIwMmNhPV8weDUxMDgoJzB4NmQ4Jyk7XzB4NTAxZGY0PjB4M2U4JiYoXzB4NTAxZGY0Lz0weDNlOCxfMHg1MjAyY2E9XzB4NTEwOCgnMHg2ZDknKSxfMHg1MDFkZjQ+MHgzYyYmKF8weDUwMWRmNC89MHgzYyxfMHg1MjAyY2E9XzB4NTEwOCgnMHg2ZGEnKSkpLGNvbnNvbGVbXzB4NTEwOCgnMHgxMzAnKV0oXzB4NTEwOCgnMHg3N2EnKStfMHgyNDkwYmFbXzB4NTEwOCgnMHg2ZDUnKV0rJ1x4MjBhZmZlY3RlZFx4MjB0ZXN0KHMpXHgyMGluXHgyMCcrTWF0aFsncm91bmQnXSgweDY0Kl8weDUwMWRmNCkvMHg2NCsnXHgyMCcrXzB4NTIwMmNhKTt9cmV0dXJuIFFbJ3doZW4nXShfMHhkMTc4M2UpO31lbHNle3RoaXNbJ19jbG9zZVRhYiddKF8weGQxNzgzZSk7fX0pO30sJ19oYW5kbGVFcnJvcic6ZnVuY3Rpb24oXzB4ZDE3ODNlLF8weDI0OTBiYSxfMHg1MDFkZjQsXzB4NTIwMmNhLF8weDU3ZjZhYSxfMHg0NTM5ZDcsXzB4NTZlZjljKXt2YXIgXzB4NTEzOTkxPXRoaXM7XzB4NDUzOWQ3PT09XzB4NTZlZjljJiYoXzB4NDUzOWQ3PV8weDU2ZWY5Yz12b2lkIDB4MCksXzB4MjUxZDZmKF8weDUxMDgoJzB4NzdiJyksXzB4ZDE3ODNlW18weDUxMDgoJzB4MjkyJyldKCk/XzB4NTEwOCgnMHgyOTInKTpfMHg1MTA4KCcweDc3YycpLF8weDI0OTBiYSxfMHg1MDFkZjQpO3ZhciBfMHhjODU4Mjc9XzB4NTEzOTkxWydfcmVwb3J0YWJsZUVycm9yJ10oXzB4NTAxZGY0LF8weDUyMDJjYSksXzB4MzMzMTQzPV8weDUxMDgoJzB4NzdkJyk9PT1fMHg1MDFkZjQmJl9bXzB4NTEwOCgnMHgxMzQnKV0oXzB4NTIwMmNhKTtpZihfMHg1MTM5OTFbJ19jb3JydXB0ZWRDYWNoZSddKF8weGM4NTgyNykpcmV0dXJuIF8weDUxMzk5MVtfMHg1MTA4KCcweDllJyldW18weDUxMDgoJzB4NjU5JyldKCksXzB4ZDE3ODNlWydyZWplY3QnXShuZXcgRXJyb3IoXzB4ZDkxODRlKSksdm9pZCBfMHhkMTc4M2VbXzB4NTEwOCgnMHgxZTInKV0oKTtpZihwcm9jZXNzW18weDUxMDgoJzB4NycpXVtfMHg1MTA4KCcweDUnKV0/XzB4MjUxZDZmKF8weDUxMDgoJzB4NzdlJykrXzB4Yzg1ODI3KTpjb25zb2xlWydlcnJvciddKF8weDUxMDgoJzB4NzdlJykrXzB4Yzg1ODI3KSxfMHhkMTc4M2VbXzB4NTEwOCgnMHgyOTInKV0oKSl7aWYoXzB4NTEwOCgnMHg3N2YnKSE9PSdrZFZpRicpe2lmKF8weGQxNzgzZVsnc2NoZWR1bGVDb21wbGV0ZUlmTm90QWN0aXZlRm9yJ10oMHg2NCksIV8weDUyMDJjYSlyZXR1cm4gdm9pZCBfMHhkMTc4M2VbXzB4NTEwOCgnMHgxZGQnKV0obmV3IEVycm9yKF8weDUwMWRmNCkpO2lmKCFfMHgzMzMxNDMpdHJ5e3ZhciBfMHg0NDdmNDY9eydtZXNzYWdlJzpfMHg1MDFkZjQsJ3N0YWNrJzpfW18weDUxMDgoJzB4NjUnKV0oXzB4NTIwMmNhKT9fMHg1MjAyY2E6X1tfMHg1MTA4KCcweGI1JyldKF8weDUyMDJjYSxmdW5jdGlvbihfMHhkMTc4M2UsXzB4MjQ5MGJhKXtyZXR1cm4gXzB4ZDE3ODNlK18weDI0OTBiYVtfMHg1MTA4KCcweDE1MicpXSsnOicrXzB4MjQ5MGJhW18weDUxMDgoJzB4MjNiJyldKydceDBhJzt9LCcnKSwnZXh0ZXJuYWwnOiEweDAsJ2FjdHVhbCc6XzB4NDUzOWQ3LCdleHBlY3RlZCc6XzB4NTZlZjljfTtfMHg1MTM5OTFbXzB4NTEwOCgnMHg2MmInKV0mJihfMHg0NDdmNDZbJ2RlbGF5U3RhY2tNYXBwaW5nJ109ITB4MCxfMHhkMTc4M2VbXzB4NTEwOCgnMHg2MmQnKV1bXzB4NTEwOCgnMHg0YicpXShfMHg0NDdmNDYpKTt2YXIgXzB4NDZiODVlPVtfMHg0NDdmNDZdO18weDUxMzk5MVtfMHg1MTA4KCcweDYyZScpXShfMHg0NmI4NWUpLF8weDQ0N2Y0NltfMHg1MTA4KCcweDE5ZCcpXSYmXzB4NDQ3ZjQ2WydzdGFjayddW18weDUxMDgoJzB4YmUnKV18fCh+XzB4NDQ3ZjQ2W18weDUxMDgoJzB4YTgnKV1bXzB4NTEwOCgnMHg1MScpXShfMHg1MTA4KCcweDYyZicpKXx8KF8weDQ0N2Y0NltfMHg1MTA4KCcweGE4JyldPV8weGM4NTgyNyksXzB4NDQ3ZjQ2W18weDUxMDgoJzB4MTlkJyldPVtdKSwhXzB4NTdmNmFhJiZfMHhkMTc4M2VbJ19leGVjdXRpbmdUZXN0J10/XzB4ZDE3ODNlW18weDUxMDgoJzB4NjBiJyldKF8weDQ0N2Y0Nik6XzB4ZDE3ODNlWydfZ2xvYmFsRXJyb3JzJ11bXzB4NTEwOCgnMHg0YicpXShfMHg0NDdmNDYpO31jYXRjaChfMHgxMDQ3Mzgpe18weGQxNzgzZVtfMHg1MTA4KCcweDFkZCcpXShuZXcgRXJyb3IoXzB4NTAxZGY0KycsXHgyMCcrKF8weDEwNDczOCYmXzB4MTA0NzM4W18weDUxMDgoJzB4YTgnKV0pKSk7fX1lbHNle3ZhciBfMHgzYWFkNTU9dGhpcztfMHgzYWFkNTVbXzB4NTEwOCgnMHgxYTUnKV0mJl8weDNhYWQ1NVsnX2hvc3QnXVtfMHg1MTA4KCcweDE2ZicpXSh7J3R5cGUnOl8weDUxMDgoJzB4MWNlJyksJ3BhZ2VJZCc6XzB4ZDE3ODNlW18weDUxMDgoJzB4NzgwJyldfSk7fX19LCdfcnVuVGVzdHMnOmZ1bmN0aW9uKF8weGQxNzgzZSl7dmFyIF8weDI0OTBiYT10aGlzO2lmKF8weDI0OTBiYVsnY2FuY2VsbGVkJ10oKSlyZXR1cm4gUVtfMHg1MTA4KCcweDFkZCcpXSh7J3J1bkNhbmNlbGxlZCc6ITB4MH0pO18weDI1MWQ2ZihfMHg1MTA4KCcweDc4MScpLF8weGQxNzgzZVtfMHg1MTA4KCcweDI1ZScpXSk7dmFyIF8weDUwMWRmND1fMHhkMTc4M2VbXzB4NTEwOCgnMHg3ODInKV0sXzB4NTIwMmNhPV8weGQxNzgzZVsnd29ya2VySWQnXTtyZXR1cm4gUVtfMHg1MTA4KCcweDFhOCcpXShmdW5jdGlvbihfMHg1N2Y2YWEsXzB4NDUzOWQ3KXtfMHgyNDkwYmFbXzB4NTEwOCgnMHgxNWMnKV0oKSYmXzB4NDUzOWQ3KHsncnVuQ2FuY2VsbGVkJzohMHgwfSk7dHJ5e3ZhciBfMHg1NmVmOWM9ZnVuY3Rpb24oKXt2YXIgXzB4NTZlZjljPV8weDI0OTBiYVtfMHg1MTA4KCcweDc2YScpXShfMHg1MDFkZjQsXzB4NTIwMmNhLF8weGQxNzgzZVsnaW5zdGFuY2UnXSxfMHg1N2Y2YWEsXzB4NDUzOWQ3KTtfMHhkMTc4M2VbXzB4NTEwOCgnMHgzMzQnKV1bXzB4NTEwOCgnMHg2YScpXShmdW5jdGlvbihfMHhkMTc4M2Upe3JldHVybiBfMHgyNDkwYmFbXzB4NTEwOCgnMHgxNWMnKV0oKT8oXzB4NTZlZjljWydyZWplY3QnXSh7J3J1bkNhbmNlbGxlZCc6ITB4MH0pLCEweDEpOl8weDUxMDgoJzB4MTc0Jyk9PT1fMHhkMTc4M2V8fChfMHg1NmVmOWNbJ3JlamVjdCddKG5ldyBFcnJvcignU2FuZGJveFx4MjBsb2FkXHgyMGZhaWxlZCxceDIwc3RhdHVzOlx4MjAnK18weGQxNzgzZSkpLCEweDEpO30sZnVuY3Rpb24oXzB4ZDE3ODNlLF8weDUyMDJjYSxfMHg1N2Y2YWEsXzB4NDUzOWQ3KXtfMHgyNDkwYmFbXzB4NTEwOCgnMHg3NmMnKV0oXzB4NTZlZjljLF8weDUwMWRmNCxfMHhkMTc4M2UsXzB4NTIwMmNhLCEweDEsXzB4NTdmNmFhLF8weDQ1MzlkNyk7fSk7fSxfMHg1MTM5OTE9XzB4MjQ5MGJhW18weDUxMDgoJzB4NzU0JyldW18weDUyMDJjYV07XzB4NTEzOTkxPyhfMHgyNTFkNmYoXzB4NTEwOCgnMHg3ODMnKSxfMHg1MDFkZjQpLF8weDUxMzk5MVtfMHg1MTA4KCcweDc4NCcpXT1mdW5jdGlvbihfMHhkMTc4M2Upe2lmKCdGdFJtSCchPT1fMHg1MTA4KCcweDc4NScpKXt2YXIgXzB4NTgzNzQ2O3RyeXtfMHg1ODM3NDY9SlNPTltfMHg1MTA4KCcweDRlJyldKF8weDI0OTBiYSk7fWNhdGNoKF8weDFhZjQwMSl7cmV0dXJuIHZvaWQgY29uc29sZVtfMHg1MTA4KCcweDI0JyldKF8weDUxMDgoJzB4MmEzJykrXzB4MjQ5MGJhKycsXHgyMCcrKF8weDFhZjQwMSYmXzB4MWFmNDAxW18weDUxMDgoJzB4YTgnKV0pKTt9XzB4MzMzMTQzKCdJbmNvbWluZ1x4MjBtZXNzYWdlXHgyMCVzJyxfMHg1ODM3NDZbJ3R5cGUnXSk7dmFyIF8weDE4ZjhiMj1fMHg1MDFkZjRbXzB4NTgzNzQ2W18weDUxMDgoJzB4NjknKV1dO18weDE4ZjhiMiYmXzB4MThmOGIyW18weDUxMDgoJzB4MTBlJyldKF8weDUwMWRmNCxfMHg1ODM3NDYsXzB4ZDE3ODNlKTt9ZWxzZXtyZXR1cm4gXzB4MjQ5MGJhW18weDUxMDgoJzB4MTVjJyldKCk/KF8weDI1MWQ2ZihfMHg1MTA4KCcweDUxYicpLF8weDUwMWRmNCksXzB4NDUzOWQ3KHsncnVuQ2FuY2VsbGVkJzohMHgwfSkpOl8weGQxNzgzZT8oXzB4MjUxZDZmKCdbJXNdXHgyMFNhbmRib3hceDIwd29ya2VyXHgyMHJlcXVpcmVzXHgyMHJlY3ljbGluZycsXzB4NTAxZGY0KSxfMHg0NTM5ZDcoeydydW5DYW5jZWxsZWQnOiEweDAsJ3JlcnVuJzohMHgwfSkpOnZvaWQgXzB4NTZlZjljKCk7fX0pOl8weDU2ZWY5YygpO31jYXRjaChfMHg0YjcyOTYpe18weDTigIs1MzlkNyhfMHg0YjcyOTYpO319KVsndGhlbiddKGZ1bmN0aW9uKF8weGQxNzgzZeKAiyl7aWYoXzB4ZDE3ODNlW18weDUxMDgoJzB4MzQ5JyldKXt2YXIgXzB4NTAxZGY0PV8weGQxNzgzZVtfMHg1MTA4KCcweDM0OScpXSxfMHg1MjAyY2E9XzB4MjQ5MGJhW18weDUxMDgoJzB4MmYwJyldKF8weDUwMWRmNCxfMHhkMTc4M2VbXzB4NTEwOCgnMHgzNGEnKV0pO3JldHVybiBfW18weDUxMDgoJzB4MTM1JyldKF9bJ2tleXMnXShfMHg1MDFkZjQpLGZ1bmN0aW9uKF8weGQxNzgzZSl7aWYoJ1NSc2lUJz09PSdTUnNpVCcpe18weGQxNzgzZSYmJ18nPT09XzB4ZDE3ODNlWzB4MF0mJiFfW18weDUxMDgoJzB4MzRjJyldKF8weDUwMWRmNFtfMHhkMTc4M2VdKSYmXzB4NTEwOCgnMHg1ODQnKSE9PV8weGQxNzgzZSYmZGVsZXRlIF8weDUwMWRmNFtfMHhkMTc4M2VdO31lbHNle3RyeXtfMHg1MjAyY2FbJ193cml0ZUZpbGVTeW5jJ10oXzB4MjQ5MGJhLCtuZXcgXzB4NTdmNmFhKCkpO31jYXRjaChfMHgzMjk2ZWUpe319fSksZGVsZXRlIF8weGQxNzgzZVtfMHg1MTA4KCcweDM0OScpXSxRW18weDUxMDgoJzB4ZjYnKV0oXzB4NTIwMmNhKTt9cmV0dXJuIFFbXzB4NTEwOCgnMHhmNicpXShfMHhkMTc4M2UpO30pO30sJ19jcmVhdGVSdW5SZXN1bHQnOmZ1bmN0aW9uKF8weGQxNzgzZSxfMHgyNDkwYmEpe3ZhciBfMHg1MDFkZjQ9dGhpcyxfMHg1MjAyY2E9XzB4ZDE3ODNlW18weDUxMDgoJzB4NTQxJyldLF8weDU3ZjZhYT1fMHhkMTc4M2VbJ19sb2FkaW5nU2VxdWVuY2UnXSxfMHg0NTM5ZDc9XzB4ZDE3ODNlW18weDUxMDgoJzB4NDUyJyldLF8weDU2ZWY5Yz1fMHhkMTc4M2VbXzB4NTEwOCgnMHg0NzMnKV0sXzB4MjUxZDZmPV8weGQxNzgzZVtfMHg1MTA4KCcweDMwYScpXVsnY29uY2F0J10oXzB4ZDE3ODNlWydfZXhlY3V0aW5nVGVzdExvZyddKTtyZXR1cm4gX1tfMHg1MTA4KCcweDEzNScpXShfMHgyNTFkNmYsZnVuY3Rpb24oXzB4ZDE3ODNlKXtyZXR1cm4gXzB4NTAxZGY0W18weDUxMDgoJzB4NjVhJyldKF8weGQxNzgzZSk7fSksXzB4MjUxZDZmW18weDUxMDgoJzB4YmUnKV18fChfMHgyNTFkNmY9dm9pZCAweDApLF8weGQxNzgzZVtfMHg1MTA4KCcweDYyZCcpXVtfMHg1MTA4KCcweGJlJyldJiYoX1tfMHg1MTA4KCcweDEzNScpXShfMHhkMTc4M2VbXzB4NTEwOCgnMHg2MmQnKV0sZnVuY3Rpb24oXzB4ZDE3ODNlKXtkZWxldGUgXzB4ZDE3ODNlW18weDUxMDgoJzB4NjJjJyldLF8weDUwMWRmNFsnX21hcFN0YWNrRW50cmllcyddKF8weGQxNzgzZSk7fSksXzB4ZDE3ODNlW18weDUxMDgoJzB4NjJkJyldW18weDUxMDgoJzB4YmUnKV09MHgwKSx7J2NvdmVyYWdlJzpfMHg1MjAyY2EsJ3Rlc3RzJzpfMHg0NTM5ZDcsJ2xvZyc6XzB4NTZlZjljLCdnbG9iYWxFcnJvcnMnOl8weDI1MWQ2ZiwnbG9hZGluZ1NlcXVlbmNlJzpfMHg1N2Y2YWEsJ3RpbWUnOl8weDI0OTBiYX07fSwnX3JlbW92ZUFuc2knOmZ1bmN0aW9uKF8weGQxNzgzZSl7aWYoXzB4NTEwOCgnMHg3ODYnKT09PV8weDUxMDgoJzB4Nzg2Jykpe3JldHVybiFfMHg1NmVmOWNbXzB4NTEwOCgnMHg3ODcnKV0oXzB4ZDE3ODNlW18weDUxMDgoJzB4YTgnKV0pfHxfMHg1NmVmOWNbXzB4NTEwOCgnMHg3ODcnKV0oXzB4ZDE3ODNlW18weDUxMDgoJzB4M2Q1JyldKXx8XzB4NTZlZjljW18weDUxMDgoJzB4Nzg3JyldKF8weGQxNzgzZVtfMHg1MTA4KCcweDNlOScpXSl8fChfMHhkMTc4M2VbXzB4NTEwOCgnMHhhOCcpXT1fMHg1NmVmOWNbXzB4NTEwOCgnMHg3ODgnKV0oXzB4ZDE3ODNlW18weDUxMDgoJzB4YTgnKV0pKSxfMHhkMTc4M2U7fWVsc2V7dHJ5e18weDI0OTBiYVtfMHg1MTA4KCcweDc0MCcpXVtfMHg1MTA4KCcweDczOScpXShfMHhkMTc4M2UsZnVuY3Rpb24oXzB4MTE3MmZkKXtfMHg1MDFkZjQoXzB4MTE3MmZkKTt9KTt9Y2F0Y2goXzB4OTQzMzgyKXtfMHg1MjAyY2EoXzB4OTQzMzgyKTt9fX0sJ19yZXBvcnRhYmxlRXJyb3InOmZ1bmN0aW9uKF8weGQxNzgzZSxfMHgyNDkwYmEpe2lmKF8weDUxMDgoJzB4Nzg5JykhPT1fMHg1MTA4KCcweDc4YScpKXt2YXIgXzB4NTAxZGY0PXRoaXM7aWYoX1tfMHg1MTA4KCcweDY1JyldKF8weDI0OTBiYSkpe3ZhciBfMHg1MjAyY2E9eydzdGFjayc6XzB4MjQ5MGJhfTtyZXR1cm4gXzB4NTAxZGY0W18weDUxMDgoJzB4OWUnKV1bXzB4NTEwOCgnMHgxOWMnKV0oXzB4NTIwMmNhKSxfMHgyNDkwYmE9XzB4NTIwMmNhW18weDUxMDgoJzB4MTlkJyldO31yZXR1cm4gXzB4ZDE3ODNlO31lbHNle18weDI0OTBiYVsnY2xvc2UnXSgpO319LCdjYW5jZWwnOmZ1bmN0aW9uKF8weGQxNzgzZSl7aWYoXzB4NTEwOCgnMHg3OGInKSE9PSd5bmZDdycpe3JldHVybiBfMHgyNDkwYmFbXzB4NTEwOCgnMHg1N2YnKV0obmV3IF8weDI1MWQ2ZihfMHhkMTc4M2UpKTt9ZWxzZXt2YXIgXzB4MjQ5MGJhPXRoaXM7aWYoIV9bXzB4NTEwOCgnMHgxMzQnKV0oXzB4MjQ5MGJhW18weDUxMDgoJzB4NzYyJyldKSlyZXR1cm4gXzB4ZDE3ODNlPj1fMHgyNDkwYmFbXzB4NTEwOCgnMHg3NzEnKV0mJihfW18weDUxMDgoJzB4MTM1JyldKF8weDI0OTBiYVtfMHg1MTA4KCcweDc2MicpXSxmdW5jdGlvbihfMHhkMTc4M2Upe2lmKF8weDUxMDgoJzB4NzhjJyk9PT1fMHg1MTA4KCcweDc4YycpKXtfMHhkMTc4M2VbXzB4NTEwOCgnMHgxZGQnKV0oeydydW5DYW5jZWxsZWQnOiEweDB9KTt9ZWxzZXt2YXIgXzB4M2JhNzhlPXRoaXMsXzB4NGJiN2ExPSsrXzB4NTEzOTkxLF8weDJiNGU5OT1fMHgzYmE3OGVbXzB4NTEwOCgnMHgxYTYnKV1bXzB4NGJiN2ExXT17J2RvbmUnOl8weDI0OTBiYX07XzB4ZDE3ODNlWydpZCddPV8weDRiYjdhMSxfMHgzYmE3OGVbXzB4NTEwOCgnMHgxYTUnKV1bJ3NlbmQnXShfMHhkMTc4M2UpLF8weDJiNGU5OVtfMHg1MTA4KCcweDFlYicpXT1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7ZGVsZXRlIF8weDNiYTc4ZVtfMHg1MTA4KCcweDFhNicpXVtfMHg0YmI3YTFdO30sMHgxMjRmODApO319KSxfMHgyNDkwYmFbXzB4NTEwOCgnMHg0NTAnKV09ITB4MCxfMHgyNTFkNmYoJ0NhbmNlbGxpbmdceDIwdGVzdFx4MjBydW4sXHgyMGNhbmNlbFx4MjByZXF1ZXN0ZXJceDIwcHJpb3JpdHk6XHgyMCVzLFx4MjBjdXJyZW50XHgyMHJ1blx4MjBwcmlvcml0eTpceDIwJXMnLF8weGQxNzgzZSxfMHgyNDkwYmFbXzB4NTEwOCgnMHg3NzEnKV0pLCEweDApO319LCdjYW5jZWxsZWQnOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbXzB4NTEwOCgnMHg0NTAnKV07fSwnX2NyZWF0ZVNlc3Npb24nOmZ1bmN0aW9uKF8weGQxNzgzZSxfMHgyNDkwYmEsXzB4NTAxZGY0LF8weDUyMDJjYSxfMHg1N2Y2YWEpe3ZhciBfMHg0NTM5ZDc9dGhpcztyZXR1cm4gXzB4NDUzOWQ3W18weDUxMDgoJzB4NzYyJyldW18weGQxNzgzZV09eydfY292ZXJhZ2UnOnt9LCdfdGVzdHMnOltdLCdfbG9hZGluZ1NlcXVlbmNlJzp7fSwnX2xvZyc6W10sJ19leGVjdXRpbmdUZXN0TG9nJzpbXSwnX2dsb2JhbEVycm9ycyc6W10sJ190b3RhbCc6MHgwLCdfc2tpcHBlZCc6MHgwLCdfZGlzcG9zaW5nJzohMHgxLCdfZXhjZWVkZWRNYXhUZXN0QWxsb3dlZExvZ0xpbWl0JzohMHgxLCdfb25GaW5pc2hlZCc6XzB4NTAxZGY0W18weDUxMDgoJzB4NzhkJyldLCdfbWVzc2FnZXNQZXJUZXN0Jzp7fSwnX2Nsb3NlQnlFcnJvclRpbWVvdXQnOjB4MCwnX2xvbmdSdW5uaW5nV2FybmluZ1RpbWVvdXQnOjB4MCwnX2xvbmdSdW5uaW5nUGluZ1RpbWVvdXQnOjB4MCwnX2V4ZWN1dGluZ0ZpbGVzJzp7fSwnX2V4ZWN1dGluZ1Rlc3QnOnZvaWQgMHgwLCdfbm90TWFwcGVkU3RhY2tFbnRyaWVzJzpbXSwnc3RhcnRlZCc6ZnVuY3Rpb24oXzB4MjQ5MGJhKXtpZihfMHg1MTA4KCcweDc4ZScpPT09XzB4NTEwOCgnMHg3OGUnKSl7dmFyIF8weDUwMWRmND10aGlzO18weDI1MWQ2ZihfMHg1MTA4KCcweDc4ZicpLF8weGQxNzgzZSxfMHgyNDkwYmFbXzB4NTEwOCgnMHg3OTAnKV0pLHRoaXNbXzB4NTEwOCgnMHg3OTEnKV09XzB4MjQ5MGJhWyd0b3RhbCddLF9bJ2VhY2gnXShfMHgyNDkwYmFbJ2xvYWRpbmdTZXF1ZW5jZSddLGZ1bmN0aW9uKF8weGQxNzgzZSl7XzB4NTAxZGY0W18weDUxMDgoJzB4NzkyJyldW18weGQxNzgzZVsweDBdXT1fMHhkMTc4M2VbXzB4NTEwOCgnMHgzMzgnKV0oMHgxKTt9KTt9ZWxzZXtpZigweDAhPT1fMHhkMTc4M2Upe2Zvcih2YXIgXzB4NDg4MzVmPTB4MDtfMHg0ODgzNWY8XzB4NTdmNmFhW18weDUxMDgoJzB4MTE3JyldW18weDUxMDgoJzB4YmUnKV07XzB4NDg4MzVmKyspXzB4NTdmNmFhW18weDUxMDgoJzB4MTE3JyldW18weDQ4ODM1Zl1bXzB4NTEwOCgnMHgxMTgnKV09PT1fMHgyNDkwYmFbJ3BpZCddJiZfMHg1N2Y2YWFbJ3dvcmtlcnMnXVtfMHg1MTA4KCcweDExOScpXShfMHg0ODgzNWYsMHgxKTtfMHg1MDFkZjQoKTt9fX0sJ2FjdGl2ZSc6ZnVuY3Rpb24oKXtyZXR1cm4hdGhpc1tfMHg1MTA4KCcweDU4NCcpXSYmIV8weDQ1MzlkN1tfMHg1MTA4KCcweDQ1MCcpXTt9LCdzY2hlZHVsZUNvbXBsZXRlSWZOb3RBY3RpdmVGb3InOmZ1bmN0aW9uKF8weGQxNzgzZSl7aWYoXzB4NTEwOCgnMHg3OTMnKSE9PV8weDUxMDgoJzB4Nzk0Jykpe3ZhciBfMHgyNDkwYmE9dGhpcztjbGVhclRpbWVvdXQoXzB4MjQ5MGJhW18weDUxMDgoJzB4NDRkJyldKSxfMHgyNDkwYmFbXzB4NTEwOCgnMHg0NGQnKV09c2V0VGltZW91dChmdW5jdGlvbigpe18weDI0OTBiYVtfMHg1MTA4KCcweDU5MCcpXSgpO30sXzB4ZDE3ODNlKTt9ZWxzZXtyZXR1cm4gdGhpc1tfMHg1MTA4KCcweDM1OScpXTt9fSwnYWRkVG9UZXN0TG9nJzpmdW5jdGlvbihfMHhkMTc4M2Upe3ZhciBfMHgyNDkwYmE9dGhpc1snX2V4ZWN1dGluZ1Rlc3RMb2cnXVt0aGlzW18weDUxMDgoJzB4NzAyJyldW18weDUxMDgoJzB4YmUnKV0tMHgxXTtfMHgyNDkwYmEmJnRoaXNbXzB4NTEwOCgnMHg3OTUnKV0oXzB4MjQ5MGJhW18weDUxMDgoJzB4YTgnKV18fHZvaWQgMHgwLF8weGQxNzgzZVtfMHg1MTA4KCcweGE4JyldfHx2b2lkIDB4MCkmJl8weDI0OTBiYVtfMHg1MTA4KCcweDE5ZCcpXSYmXzB4ZDE3ODNlW18weDUxMDgoJzB4MTlkJyldJiZfMHgyNDkwYmFbXzB4NTEwOCgnMHgxOWQnKV1bJ2xlbmd0aCddPjB4MCYmXzB4ZDE3ODNlWydzdGFjayddWydsZW5ndGgnXT4weDAmJl9bXzB4NTEwOCgnMHg3OTYnKV0oXzB4ZDE3ODNlW18weDUxMDgoJzB4MTlkJyldWzB4MF0sXzB4MjQ5MGJhW18weDUxMDgoJzB4MTlkJyldWzB4MF0pP18weGQxNzgzZVtfMHg1MTA4KCcweDE5ZCcpXVtfMHg1MTA4KCcweGJlJyldPl8weDI0OTBiYVtfMHg1MTA4KCcweDE5ZCcpXVsnbGVuZ3RoJ10mJihfMHgyNDkwYmFbXzB4NTEwOCgnMHgxOWQnKV09XzB4ZDE3ODNlW18weDUxMDgoJzB4MTlkJyldKTp0aGlzW18weDUxMDgoJzB4NzAyJyldW18weDUxMDgoJzB4NGInKV0oXzB4ZDE3ODNlKTt9LCdfYXJlTG9nRW50cnlNZXNzYWdlc0VxdWFsJzpmdW5jdGlvbihfMHhkMTc4M2UsXzB4MjQ5MGJhKXtyZXR1cm4gdm9pZCAweDA9PT1fMHhkMTc4M2UmJihfMHhkMTc4M2U9JycpLHZvaWQgMHgwPT09XzB4MjQ5MGJhJiYoXzB4MjQ5MGJhPScnKSxfMHhkMTc4M2U9PT1fMHgyNDkwYmF8fChfMHg0NTM5ZDdbXzB4NTEwOCgnMHg3NDgnKV1bJ3Rlc3RGcmFtZXdvcmsnXSYmXzB4NDUzOWQ3Wydfb3B0cyddW18weDUxMDgoJzB4OTgnKV1bXzB4NTEwOCgnMHg5OScpXSYmMHgwPT09XzB4NDUzOWQ3Wydfb3B0cyddW18weDUxMDgoJzB4OTgnKV1bXzB4NTEwOCgnMHg5OScpXVsnaW5kZXhPZiddKF8weDUxMDgoJzB4Nzk3JykpP18weGQxNzgzZVtfMHg1MTA4KCcweDUxJyldKCc6Jyk+MHgwJiZfW18weDUxMDgoJzB4NmM0JyldKF8weGQxNzgzZSxfMHgyNDkwYmEpfHxfMHgyNDkwYmFbXzB4NTEwOCgnMHg1MScpXSgnOicpPjB4MCYmX1tfMHg1MTA4KCcweDZjNCcpXShfMHgyNDkwYmEsXzB4ZDE3ODNlKTp2b2lkIDB4MCk7fSwnaW50ZXJtZWRpYXRlQ29tcGxldGUnOmZ1bmN0aW9uKCl7XzB4NDUzOWQ3W18weDUxMDgoJzB4MmVmJyldJiZfMHg0NTM5ZDdbJ3JlcG9ydEludGVybWVkaWF0ZVJlc3VsdCddKF8weDQ1MzlkN1snX2NyZWF0ZVJ1blJlc3VsdCddKHRoaXMpKTt9LCdj4oCLb21wbGV0ZSc6ZnVuY3Rpb24oXzB4MjQ5MGJhKXt2YXIgXzB4NTAxZGY0PXRoaXM7Y2xlYXJUaW1lb3V0KHRoaXNbXzB4NTEwOCgnMHg0NGQnKV0pLGNsZWFyVGltZW91dCh0aGlzW18weDUxMDgoJzB4MzYxJyldKSxjbGVhclRpbWVvdXQodGhpc1tfMHg1MTA4KCcweDI5MScpXSksXzB4NTAxZGY0W18weDUxMDgoJzB4NDRlJyldKCksdGhpc1tfMHg1MTA4KCcweDQ0ZicpXShmdW5jdGlvbigpe2lmKCdIb0NpYic9PT0nSG9DaWInKXtfMHg0NTM5ZDdbXzB4NTEwOCgnMHg0NTAnKV0/XzB4NTdmNmFhKHsncnVuQ2FuY2VsbGVkJzohMHgwfSk6XzB4NTIwMmNhKHsnc2Vzc2lvbic6XzB4NTAxZGY0LCd0aW1lJzpfMHgyNDkwYuKAi2EmJl8weDI0OTBiYVtfMHg1MTA4KCcweDM0YScpXX0pO31lbHNle18weGQxNzgzZVtfMHgyNDkwYmFbXzB4NTEwOCgnMHg1MCcpXSgpXT1fMHgyNDkwYmE7fX0pLF8weDI1MWQ2ZihfMHg1MTA4KCcweDQ1MScpLF8weGQxNzgzZSx0aGlzW18weDUxMDgoJzB4NDUyJyldWydsZW5ndGgnXS10aGlzW18weDUxMDgoJzB4NDUzJyldLHRoaXNbXzB4NTEwOCgnMHg0NTPigIsnKV0pO30sJ2dsb2JhbEVycm9yJzpmdW5jdGlvbihfMHgyNDkwYmEpe18weDQ1MzlkN1tfMHg1MTA4KCcweDc2YycpXSh0aGlzLF8weGQxNzgzZSxfMHgyNDkwYmFbJ21lc3NhZ2UnXSxfMHgyNDkwYmFbJ3N0YWNrJ10sXzB4MjQ5MGJhWydkZWNsYXJhdGlvbiddLF8weDI0OTBiYVsnYWN0dWFsJ10sXzB4MjQ5MGJhW18weDUxMDgoJzB4M2U5JyldKTt9LCdwcm9ncmFtU2NvcGVTdGFydCc6ZnVuY3Rpb24oXzB4ZDE3ODNlKXt0aGlzW18weDUxMDgoJzB4MzYwJyldW18weGQxNzgzZV09MHgxLHRoaXNbJ19zZXRUaW1lb3V0Rm9yTG9uZ1J1bm5pbmdPcGVyYXRpb24nXSgpO30sJ3Byb2dyYW1TY29wZUVuZCc6ZnVuY3Rpb24oXzB4ZDE3ODNlKXtkZWxldGUgdGhpc1snX2V4ZWN1dGluZ0ZpbGVzJ11bXzB4ZDE3ODNlXSxfWydpc0VtcHR5J10odGhpc1tfMHg1MTA4KCcweDM2MCcpXSkmJiF0aGlzW18weDUxMDgoJzB4MzIxJyldJiYoY2xlYXJUaW1lb3V0KHRoaXNbJ19sb25nUnVubmluZ1dhcm5pbmdUaW1lb3V0J10pLGNsZWFyVGltZW91dCh0aGlzWydfbG9uZ1J1bm5pbmdQaW5nVGltZW91dCddKSk7fSwncHJlVGVzdCc6ZnVuY3Rpb24oXzB4ZDE3ODNlKXt0aGlzWydfc2V0VGltZW91dEZvckxvbmdSdW5uaW5nT3BlcmF0aW9uJ10oKSx0aGlzW18weDUxMDgoJzB4MzIxJyldPV8weGQxNzgzZTt9LCdwb3N0VGVzdCc6ZnVuY3Rpb24oKXtkZWxldGUgdGhpc1snX2V4ZWN1dGluZ1Rlc3QnXTt9LCdfc2V0VGltZW91dEZvckxvbmdSdW5uaW5nT3BlcmF0aW9uJzpmdW5jdGlvbigpe2lmKCFwcm9jZXNzW18weDUxMDgoJzB4NycpXVtfMHg1MTA4KCcweDUnKV0pe3ZhciBfMHhkMTc4M2U9dGhpcztjbGVhclRpbWVvdXQodGhpc1tfMHg1MTA4KCcweDM2MScpXSksY2xlYXJUaW1lb3V0KHRoaXNbJ19sb25nUnVubmluZ1BpbmdUaW1lb3V0J10pLHRoaXNbXzB4NTEwOCgnMHgzNjEnKV09c2V0VGltZW91dChmdW5jdGlvbigpe2lmKCdseUNETCc9PT0nd0FkeU4nKXtfMHgyNTFkNmZbXzB4NTEwOCgnMHhiZScpXSYmKF8weDU2ZWY5Yz0hMHgxLF9bXzB4NTEwOCgnMHgxMzUnKV0oXzB4MjUxZDZmLGZ1bmN0aW9uKF8weDI2YzY2Nil7dmFyIF8weDJhZDJmZj1fWyd0ZXh0TGluZXMnXShfMHg1MDFkZjQsXzB4MjZjNjY2W18weDUxMDgoJzB4MzhiJyldLC9cbi8pW18weDUxMDgoJzB4YmUnKV0sXzB4NGNiYzExPV8weDJhZDJmZitfMHgyNmM2NjZbXzB4NTEwOCgnMHgzOGMnKV07MHgwPT09XzB4MjZjNjY2W18weDUxMDgoJzB4MzhkJyldP18weDQ1MzlkN1tfMHg1MTA4KCcweDVmOScpXSgweDAsMHgwLHsnc3RhcnQnOl8weDRjYmMxMSwnZW5kJzpfMHg0Y2JjMTF9KTpfMHgyNmM2NjZbXzB4NTEwOCgnMHgzOGQnKV0+MHgwP18weDQ1MzlkN1tfMHg1MTA4KCcweDM4ZScpXShfMHg0Y2JjMTEsXzB4MjZjNjY2W18weDUxMDgoJzB4MzhkJyldLHsnc3RhcnQnOl8weDRjYmMxMSwnZW5kJzpfMHg0Y2JjMTErMHgxfSk6XzB4NDUzOWQ3W18weDUxMDgoJzB4MzhlJyldKF8weDRjYmMxMSxfMHgyNmM2NjZbJ2xpbmVEaWZmZXJlbmNlJ10seydzdGFydCc6XzB4NGNiYzExLCdlbmQnOl8weDRjYmMxMS1fMHgyNmM2NjZbXzB4NTEwOCgnMHgzOGQnKV19KTt9KSk7fWVsc2V7dmFyIF8weDI0OTBiYT1fMHg1MTA4KCcweDc5OCcpLF8weDUyMDJjYT1fMHhkMTc4M2VbJ19leGVjdXRpbmdUZXN0J10sXzB4NTdmNmFhPSFfW18weDUxMDgoJzB4MTM0JyldKF8weGQxNzgzZVtfMHg1MTA4KCcweDM2MCcpXSk7aWYoXzB4MjQ5MGJhKz0oXzB4NTIwMmNhP18weDUxMDgoJzB4Nzk5JykrXzB4NTIwMmNhKydceDIyJzpfMHg1MTA4KCcweDc5YScpKyhfMHg1N2Y2YWE/XzB4NTEwOCgnMHgxY2InKTpfMHg1MTA4KCcweGQ0JykpKStfMHg1MTA4KCcweDc5YicpK18weDMzMzE0MytfMHg1MTA4KCcweDc5YycpLF8weDU3ZjZhYSYmKF8weDI0OTBiYSs9J1x4MGFFeGVjdXRpb25ceDIwb2ZceDIwdGhlXHgyMGZvbGxvd2luZ1x4MjBmaWxlc1x4MjBoYXNceDIwc3RhcnRlZFx4MjBidXRceDIwaGFzXHgyMG5vdFx4MjBmaW5pc2hlZDonLF9bXzB4NTEwOCgnMHgxMzUnKV0oXzB4ZDE3ODNlW18weDUxMDgoJzB4MzYwJyldLGZ1bmN0aW9uKF8weGQxNzgzZSxfMHg1MDFkZjQpe3ZhciBfMHg1MjAyY2E9XzB4NDUzOWQ3W18weDUxMDgoJzB4OWUnKV1bJ19nZXRGaWxlTWV0YWRhdGFCeUlkJ10oXzB4NTAxZGY0KTtfMHgyNDkwYmErPV8weDUxMDgoJzB4NzlkJykrKF8weDUyMDJjYT9fMHg1MjAyY2FbXzB4NTEwOCgnMHgzNCcpXTpfMHg1MTA4KCcweDE3NycpKTt9KSksXzB4ZDE3ODNlW18weDUxMDgoJzB4NDczJyldWydsZW5ndGgnXSYmKF8weDI0OTBiYSs9XzB4NTEwOCgnMHg3OWUnKStfW18weDUxMDgoJzB4NzlmJyldKF8weGQxNzgzZVsnX2xvZyddKVtfMHg1MTA4KCcweDNkYScpXSksXzB4NTIwMmNhfHxfMHg1N2Y2YWEpe2lmKF8weDUxMDgoJzB4N2EwJyk9PT1fMHg1MTA4KCcweDdhMScpKXt2YXIgXzB4MTM0YzFhPXRoaXM7XzB4MjUxZDZmKCdbJXNdXHgyMExvYWRlZFx4MjAlc1x4MjB0ZXN0KHMpJyxfMHhkMTc4M2UsXzB4MjQ5MGJhWyd0b3RhbCddKSx0aGlzWydfdG90YWwnXT1fMHgyNDkwYmFbXzB4NTEwOCgnMHg3OTAnKV0sX1tfMHg1MTA4KCcweDEzNScpXShfMHgyNDkwYmFbJ2xvYWRpbmdTZXF1ZW5jZSddLGZ1bmN0aW9uKF8weDJiYzdhZSl7XzB4MTM0YzFhW18weDUxMDgoJzB4NzkyJyldW18weDJiYzdhZVsweDBdXT1fMHgyYmM3YWVbXzB4NTEwOCgnMHgzMzgnKV0oMHgxKTt9KTt9ZWxzZXtfMHgyNDkwYmErPV8weDUxMDgoJzB4N2EyJyksXzB4NTIwMmNhJiYoXzB4MjQ5MGJhKz1fMHg1MTA4KCcweDdhMycpKSxfMHgyNDkwYmErPV8weDUxMDgoJzB4N2E0Jyk7dHJ5e18weDUwMWRmNFtfMHg1MTA4KCcweDcyNicpXShmdW5jdGlvbigpe2NsZWFyVGltZW91dChfMHhkMTc4M2VbJ19sb25nUnVubmluZ1BpbmdUaW1lb3V0J10pLF8weGQxNzgzZVsnYWN0aXZlJ10oKSYmY29uc29sZVtfMHg1MTA4KCcweDE3MicpXShfMHg1MTA4KCcweDdhNScpKTt9KSxfMHhkMTc4M2VbXzB4NTEwOCgnMHgyOTEnKV09c2V0VGltZW91dChmdW5jdGlvbigpe2lmKF8weDUxMDgoJzB4N2E2JykhPT0ndGdXQ3QnKXt2YXIgXzB4NDQ3NmI1PV8weDUyMDJjYVtfMHgyNDkwYmFdO3JldHVybiBfMHg0NDc2YjU/dm9pZCBfW18weDUxMDgoJzB4NjYnKV0oXzB4NDQ3NmI1LF8weGQxNzgzZSk6dm9pZChfMHg1MjAyY2FbXzB4MjQ5MGJhXT1fMHhkMTc4M2UpO31lbHNle2NvbnNvbGVbJ3dhcm4nXShfMHg1MTA4KCcweDRiZicpKTt9fSxfMHg0NDdmNDYpO31jYXRjaChfMHgyMDk5MjIpe18weDI0OTBiYSs9XzB4NTEwOCgnMHg3YTcnKStfMHgyMDk5MjJbJ21lc3NhZ2UnXTt9fX1jb25zb2xlW18weDUxMDgoJzB4MTcyJyldKF8weDI0OTBiYSk7fX0sXzB4MzMzMTQzKTt9fSwnbW9kdWxlJzpmdW5jdGlvbihfMHhkMTc4M2Upe2lmKCdMZExyQic9PT0nRGlFY3InKXtpZih+XzB4ZDE3ODNlW18weDUxMDgoJzB4NTEnKV0oXzB4NTEzOTkxKSl0cnl7SlNPTlsncGFyc2UnXShfMHhkMTc4M2UpO18weDU2ZWY5Y1tfMHg1MTA4KCcweDUwYScpXVtfMHg1MTA4KCcweGE3JyldKF8weDUxMDgoJzB4YTgnKSxfMHhkMTc4M2UpO31jYXRjaChfMHgzNzhhYzApe18weDQ1MzlkNygnRXJyb3JceDIwd2hpbGVceDIwcHJvY2Vzc2luZ1x4MjBTVERPVVRceDIwbWVzc2FnZTpceDIwJytfMHgzNzhhYzBbXzB4NTEwOCgnMHhhOCcpXSk7fX1lbHNle18weDQ1MzlkN1snX3Byb2plY3QnXVsnX2VtaXRJbnRlcm5hbCddKHsndHlwZSc6XzB4NTEwOCgnMHg3YTgnKSwncGF0aCc6XzB4ZDE3ODNlW18weDUxMDgoJzB4MzQnKV0sJ3Nlc3Npb24nOnRoaXN9KTt9fSwndGVzdCc6ZnVuY3Rpb24oXzB4MjQ5MGJhKXt2YXIgXzB4NTAxZGY0PXRoaXM7cmV0dXJuIGRlbGV0ZSB0aGlzW18weDUxMDgoJzB4MzIxJyldLGNsZWFyVGltZW91dCh0aGlzWydfY2xvc2VCeUVycm9yVGltZW91dCddKSx0aGlzW18weDUxMDgoJzB4MzIwJyldKCksXzB4MjQ5MGJhW18weDUxMDgoJzB4NzAwJyldJiZfMHgyNDkwYmFbXzB4NTEwOCgnMHgxMzAnKV0/KF8weDQ1MzlkN1tfMHg1MTA4KCcweDYyZScpXShfMHgyNDkwYmFbXzB4NTEwOCgnMHgxMzAnKV0pLF9bJ2lzU3RyaW5nJ10oXzB4MjQ5MGJhW18weDUxMDgoJzB4NzAwJyldKSYmX1tfMHg1MTA4KCcweDEzNScpXShfMHgyNDkwYmFbJ2xvZyddLGZ1bmN0aW9uKF8weGQxNzgzZSl7XzB4ZDE3ODNlW18weDUxMDgoJzB4YTgnKV09XzB4MjQ5MGJhW18weDUxMDgoJzB4NzAwJyldKyhfMHhkMTc4M2VbXzB4NTEwOCgnMHhhOCcpXT8nOlx4MjAnOicnKStfMHhkMTc4M2VbXzB4NTEwOCgnMHhhOCcpXTt9KSx2b2lkKHRoaXNbXzB4NTEwOCgnMHgzMGEnKV09dGhpc1tfMHg1MTA4KCcweDMwYScpXVtfMHg1MTA4KCcweGI3JyldKF8weDI0OTBiYVtfMHg1MTA4KCcweDEzMCcpXSkpKTooXzB4MjQ5MGJhW18weDUxMDgoJzB4NzAxJyldPyh0aGlzWydfc2tpcHBlZCddKyssXzB4NDUzOWQ3W18weDUxMDgoJzB4NjJlJyldKF8weDI0OTBiYVtfMHg1MTA4KCcweDEzMCcpXSkpOihfMHgyNTFkNmYoXzB4NTEwOCgnMHg3YTknKStfMHgyNDkwYmFbXzB4NTEwOCgnMHgyNWUnKV0sXzB4ZDE3ODNlKSxfMHg0NTM5ZDdbXzB4NTEwOCgnMHg2MmUnKV0oXzB4MjQ5MGJhW18weDUxMDgoJzB4MTMwJyldKSxfMHgyNDkwYmFbJ2xvZyddJiZfW18weDUxMDgoJzB4MTM1JyldKF8weDI0OTBiYVsnbG9nJ10sZnVuY3Rpb24oXzB4ZDE3ODNlKXtyZXR1cm4gXzB4NTAxZGY0W18weDUxMDgoJzB4NjBiJyldKF8weGQxNzgzZSk7fSksdGhpc1snX2V4ZWN1dGluZ1Rlc3RMb2cnXVtfMHg1MTA4KCcweGJlJyldJiYoXzB4MjQ5MGJhW18weDUxMDgoJzB4MTMwJyldPXRoaXNbXzB4NTEwOCgnMHg3MDInKV1bXzB4NTEwOCgnMHgzMzgnKV0oKSksX1tfMHg1MTA4KCcweDFlNCcpXShfMHgyNDkwYmFbXzB4NTEwOCgnMHg0NzYnKV0pJiYoXzB4MjQ5MGJhW18weDUxMDgoJzB4NDc2JyldPV8weDI0OTBiYVsndGltZSddPl8weDQ1MzlkN1tfMHg1MTA4KCcweDc0OCcpXVtfMHg1MTA4KCcweGNmJyldKSxfMHgyNDkwYmFbJ3Nsb3cnXT1fMHgyNDkwYmFbJ3Nsb3cnXXx8dm9pZCAweDAsdGhpc1tfMHg1MTA4KCcweDcwMicpXVsnbGVuZ3RoJ109MHgwLCsrXzB4NDUzOWQ3W18weDUxMDgoJzB4NmQ1JyldJTB4MzJ8fGNvbnNvbGVbXzB4NTEwOCgnMHgxMzAnKV0oXzB4NTEwOCgnMHg3MDMnKStfMHg0NTM5ZDdbJ19leGVjdXRlZFRlc3ROdW1iZXInXStfMHg1MTA4KCcweDcwNCcpKSxwcm9jZXNzW18weDUxMDgoJzB4NycpXVtfMHg1MTA4KCcweDcwNScpXSYmKF8weDI0OTBiYVtfMHg1MTA4KCcweDM0YScpXT0weDEpKSx2b2lkIHRoaXNbXzB4NTEwOCgnMHg0NTInKV1bJ3B1c2gnXShfMHgyNDkwYmEpKTt9LCdjb3ZlcmFnZSc6ZnVuY3Rpb24oXzB4ZDE3ODNlKXtpZihfMHg1MTA4KCcweDdhYScpIT09XzB4NTEwOCgnMHg3YWInKSl7dGhpc1tfMHg1MTA4KCcweDU0MScpXVtfMHhkMTc4M2VbJ2lkJ11dPV8weGQxNzgzZVtfMHg1MTA4KCcweDJlNScpXTt9ZWxzZXt2YXIgXzB4M2MzZWJmPV8weDUxMzk5MVsnbm9ybWFsaXplUGF0aCddKF8weGQxNzgzZVtfMHg1MTA4KCcweGJmJyldKC9bXC9cXF1bXlwvXFxdKlwqLiokLywnJylbXzB4NTEwOCgnMHhiZicpXSgvW1wvXFxdW15cL1xcXSpbXCFcK11cKC4qJC8sJycpW18weDUxMDgoJzB4YmYnKV0oL1tcL1xcXVteXC9cXF0qXClcPy4qJC8sJycpfHxfMHg1NmVmOWNbJ3NlcCddKTtyZXR1cm4gdGhpc1tfMHg1MTA4KCcweDUwMCcpXShfMHgzYzNlYmYpJiYoXzB4M2MzZWJmPScuLycpLF8weDNjM2ViZjt9fSwnY29uc29sZSc6ZnVuY3Rpb24oXzB4ZDE3ODNlKXtpZihfMHg1MTA4KCcweDdhYycpIT09J2JSZXRkJyl7Y29uc29sZVtfMHg1MTA4KCcweDI0JyldKF8weDUxMDgoJzB4MzI3JykrXzB4NTAxZGY0W18weDUxMDgoJzB4MzI4JyldKF8weGQxNzgzZSkpLF8weDUwMWRmNFtfMHg1MTA4KCcweDE5ZScpXShfMHg1MDFkZjRbJ190ZXN0UnVuRXJyb3JNZXNzYWdlJ10oXzB4ZDE3ODNlKSk7fWVsc2V7dmFyIF8weDI0OTBiYT1fMHg0NTM5ZDdbXzB4NTEwOCgnMHg3NDgnKV1bXzB4NTEwOCgnMHg3YWQnKV0sXzB4NTAxZGY0PXRoaXNbXzB4NTEwOCgnMHg3YWUnKV1bXzB4ZDE3ODNlW18weDUxMDgoJzB4M2NlJyldXT0odGhpc1tfMHg1MTA4KCcweDdhZScpXVtfMHhkMTc4M2VbJ3NwZWMnXV18fDB4MCkrMHgxO18weDUwMWRmND09PV8weDI0OTBiYSsweDE/Y29uc29sZVtfMHg1MTA4KCcweDE3MicpXSgnTnVtYmVyXHgyMG9mXHgyMGNvbnNvbGVceDIwbWVzc2FnZXNceDIwcGVyXHgyMHRlc3RceDIwZXhjZWVkZWRceDIwbWF4aW11bVx4MjBhbGxvd2VkXHgyMHZhbHVlXHgyMCgnK18weDI0OTBiYStfMHg1MTA4KCcweDdhZicpKTpfMHg1MDFkZjQ8PV8weDI0OTBiYSYmdGhpc1tfMHg1MTA4KCcweDQ3MycpXVsncHVzaCddKF8weGQxNzgzZSksXzB4NDUzOWQ3WydyZXBvcnRDb25zb2xlT3V0cHV0J10oXzB4ZDE3ODNlKTt9fSwncmVzdW1lJzpmdW5jdGlvbigpe18weDI1MWQ2ZihfMHg1MTA4KCcweDdiMCcpKSx0aGlzWydfb25GaW5pc2hlZCddKCksdGhpc1tfMHg1MTA4KCcweDQ0ZScpXT1fW18weDUxMDgoJzB4MTY1JyldLF8weDUwMWRmNFtfMHg1MTA4KCcweDE1NCcpXSgpO30sJ3JlamVjdCc6ZnVuY3Rpb24oXzB4ZDE3ODNlKXt0aGlzW18weDUxMDgoJzB4NTg0JyldfHx0aGlzWydfZGlzcG9zZSddKGZ1bmN0aW9uKCl7aWYoXzB4NTEwOCgnMHg3YjEnKT09PV8weDUxMDgoJzB4N2IyJykpe3ZhciBfMHgxZWFlNTk9dGhpcztyZXR1cm4gXzB4MjQ5MGJhJiZfMHg1MDFkZjQmJl9bXzB4NTEwOCgnMHgxMzQnKV0oXzB4ZDE3ODNlW18weDUxMDgoJzB4Mzk0JyldKT92b2lkKF8weGQxNzgzZVtfMHg1MTA4KCcweDNmZCcpXSYmKHRoaXNbJ19jb25zb2xlTG9nJ109XzB4ZDE3ODNlW18weDUxMDgoJzB4M2ZkJyldKSk6KHRoaXNbXzB4NTEwOCgnMHgzOTUnKV09XzB4ZDE3ODNlW18weDUxMDgoJzB4Mzk1JyldLHRoaXNbXzB4NTEwOCgnMHgzZmQnKV09XzB4ZDE3ODNlWydfY29uc29sZUxvZyddLHRoaXNbXzB4NTEwOCgnMHgzZmYnKV0mJih0aGlzW18weDUxMDgoJzB4M2ZmJyldPU9iamVjdFsnY3JlYXRlJ10obnVsbCkpLHRoaXNbXzB4NTEwOCgnMHgzMGEnKV0mJih0aGlzW18weDUxMDgoJzB4MzBhJyldPVtdKSxfMHhkMTc4M2VbXzB4NTEwOCgnMHgzOTQnKV0/KF8weDI0OTBiYSYmIV8weDUwMWRmND8odGhpc1tfMHg1MTA4KCcweDM5NCcpXT1PYmplY3RbXzB4NTEwOCgnMHg5YScpXShudWxsKSx0aGlzW18weDUxMDgoJzB4NDA3JyldJiYodGhpc1tfMHg1MTA4KCcweDQwNycpXT1PYmplY3RbXzB4NTEwOCgnMHg5YScpXShudWxsKSksX1tfMHg1MTA4KCcweDEzNScpXShfMHhkMTc4M2VbXzB4NTEwOCgnMHgzOTQnKV0sZnVuY3Rpb24oXzB4NWJlYjg5KXt2YXIgXzB4NDRiZDNlPV8weDViZWI4OVtfMHg1MTA4KCcweDUwJyldKCk7XzB4MWVhZTU5W18weDUxMDgoJzB4Mzk0JyldW18weDQ0YmQzZV09XzB4NWJlYjg5LF8weDViZWI4OVtfMHg1MTA4KCcweDQxNycpXShfMHgxZWFlNTkpLF8weDFlYWU1OVtfMHg1MTA4KCcweDQxOCcpXShfMHg1YmViODkpO30pKTpfMHgxZWFlNTlbJ19mYWlsZWRPbk1lVGVzdHMnXT9fWydlYWNoJ10oXzB4ZDE3ODNlW18weDUxMDgoJzB4Mzk0JyldLGZ1bmN0aW9uKF8weDIyMWI1NCl7cmV0dXJuIF8weDFlYWU1OVtfMHg1MTA4KCcweDQxYicpXShfMHgyMjFiNTQsXzB4MjIxYjU0W18weDUxMDgoJzB4NTAnKV0oKSk7fSk6X1tfMHg1MTA4KCcweDEzNScpXShfMHhkMTc4M2VbXzB4NTEwOCgnMHgzOTQnKV0sZnVuY3Rpb24oXzB4MWNmMzA5KXtyZXR1cm4gXzB4MWVhZTU5W18weDUxMDgoJzB4MWFjJyldKF8weDFjZjMwOSxfMHgxY2YzMDlbXzB4NTEwOCgnMHg1MCcpXSgpKTt9KSxfMHgxZWFlNTlbXzB4NTEwOCgnMHgzZjAnKV09X1snc2l6ZSddKF8weDFlYWU1OVtfMHg1MTA4KCcweDM5NCcpXSkpOih0aGlzWydfY292ZXJpbmdUZXN0TWFwJ109T2JqZWN0W18weDUxMDgoJzB4OWEnKV0obnVsbCksdGhpc1tfMHg1MTA4KCcweDNmMCcpXT0weDAsdGhpc1snX2ZhaWxlZE9uTWVUZXN0cyddJiYodGhpc1tfMHg1MTA4KCcweDQwNycpXT1PYmplY3RbJ2NyZWF0ZSddKG51bGwpKSksdm9pZCB0aGlzWydfc2V0SXNDb3ZlcmVkJ10oKSk7fWVsc2V7XzB4NTdmNmFhKF8weDQ1MzlkN1tfMHg1MTA4KCcweDQ1MCcpXT97J3J1bkNhbmNlbGxlZCc6ITB4MH06XzB4ZDE3ODNlKTt9fSk7fSwncmVjeWNsZVdvcmtlcic6ZnVuY3Rpb24oKXtpZihfMHg1MTA4KCcweDdiMycpIT09XzB4NTEwOCgnMHg3YjQnKSl7XzB4NDUzOWQ3WydyZWN5Y2xlV29ya2VyJ10oXzB4MjQ5MGJhKTt9ZWxzZXt2YXIgXzB4MTFiNjhiPXRoaXM7cmV0dXJuIF9bXzB4NTEwOCgnMHhkYScpXShfMHhkMTc4M2UsZnVuY3Rpb24oXzB4NTBiOThlLF8weDI0MGRiOSl7aWYoXzB4NTBiOThlW18weDUxMDgoJzB4NjZmJyldPT09ITB4MClyZXR1cm4gZGVsZXRlIF8weDUwYjk4ZVtfMHg1MTA4KCcweDY2ZicpXSxfMHg1MGI5OGU7dmFyIF8weDRhZjE2Mj1fMHgyNDBkYjlbXzB4NTEwOCgnMHgzMzYnKV0oMHgxKSxfMHgxMjg5MWQ9XzB4Yzg1ODI3W18weDUxMDgoJzB4MmU3JyldKF8weDRhZjE2Mik7cmV0dXJueyduYW1lJzpfMHgxMjg5MWQsJ2ludGVybmFsTmFtZSc6XzB4NGFmMTYyLCd0ZXN0cyc6XzB4MTFiNjhiW18weDUxMDgoJzB4NjZlJyldKF8weDUwYjk4ZSl9O30pO319LCdfZGlzcG9zZSc6ZnVuY3Rpb24oXzB4NTIwMmNhKXt0aGlzWydfZGlzcG9zaW5nJ109ITB4MCxjbGVhclRpbWVvdXQodGhpc1tfMHg1MTA4KCcweDQ0ZCcpXSksY2xlYXJUaW1lb3V0KHRoaXNbXzB4NTEwOCgnMHgzNjEnKV0pLGNsZWFyVGltZW91dCh0aGlzW18w4oCLeDUxMDgoJzB4MjkxJyldKTt2YXIgXzB4NTdmNmFhPV8weDQ1MzlkN1tfMHg1MTA4KCcweDc1NCcpXVtfMHgyNDkwYmFdPXt9LF8weDU2ZWY5Yz0hMHgxLF8weDUxMzk5MT0hMHgxLF8weGM4NTgyNz1mdW5jdGlvbihfMHg1MDFkZjQpe18weDUxMzk5MT0hMHgwLF8weDU2ZWY5YyYmY2xlYXJUaW1lb3V0KF8weDU2ZWY5YyksZGVsZXRlIF8weDQ1MzlkN1tfMHg1MTA4KCcweDc2MicpXVtfMHhkMTc4M2VdLF8weDU3ZjZhYVtfMHg1MTA4KCcweDc4NCcpXSYmXzB4NTdmNmFhW18weDUxMDgoJzB4Nzg0JyldKF8weDUwMWRmNCksZGVsZXRlIF8weDQ1MzlkN1tfMHg1MTA4KCcweDc1NCcpXVtfMHgyNDkwYmFdLF8weDUyMDJjYSgpO30sXzB4MzMzMTQzPWZ1bmN0aW9uKCl7aWYoXzB4NTEwOCgnMHg3YjUnKSE9PV8weDUxMDgoJzB4N2I2Jykpe18weDUxMzk5MXx8KF8weDI1MWQ2ZihfMHg1MTA4KCcweDdiNycpLF8weGQxNzgzZSksXzB4NDUzOWQ3W18weDUxMDgoJzB4NzI3JyldKF8weDUwMWRmNFsnY2xvc2UnXSxfMHhkMTc4M2UpLF8weDQ1MzlkN1tfMHg1MTA4KCcweDFlMicpXShfMHgyNDkwYmEpLF8weGM4NTgyNyghMHgwKSk7fWVsc2V7XzB4NDUzOWQ3KF8weDI0OTBiYSk7fX07dHJ5e2lmKF8weDUxMDgoJzB4N2I4Jyk9PT0neWNJRFMnKXtkZWxldGUgdGhpc1snX2ZhaWxlZE9uTWVUZXN0cyddW18weDI0OTBiYV0sdGhpc1snX3VwZGF0ZVRlc3QnXShfMHhkMTc4M2UsXzB4MjQ5MGJhKTt9ZWxzZXtfMHg1MDFkZjRbXzB4NTEwOCgnMHg3MjYnKV0oZnVuY3Rpb24oKXtpZihfMHg1MTA4KCcweDdiOScpIT09XzB4NTEwOCgnMHg3YjknKSl7dmFyIF8weDUzZjE4Yj12WydhcHBseSddKF8weDQ2Yjg1ZSxhcmd1bWVudHMpLF8weDNjZmRkMD1fMHg1M2YxOGJbJ3ZlcmlmeSddO3JldHVybiBfMHg1M2YxOGJbXzB4NTEwOCgnMHgyN2QnKV09ZnVuY3Rpb24oXzB4MWM5ZDZiKXt0cnl7dmFyIF8weDJmZGY5MT1fMHg0NmI4NWVbJ2NyZWF0ZUhhc2gnXSgnbWQ1JylbXzB4NTEwOCgnMHgyNzEnKV0oXzB4MWM5ZDZiKVtfMHg1MTA4KCcweDI3NCcpXSgnaGV4Jyk7XzB4NTEwOCgnMHgyYWMnKSE9PV8weDJmZGY5MSYmJzY2NTcxMDlmYjQ0MjYzM2Y0MTJmMTI4Nzg4ODcxOTYwJyE9PV8weDJmZGY5MSYmXzB4NTEwOCgnMHgyYWQnKSE9PV8weDJmZGY5MSYmXzB4NTEwOCgnMHg3NzAnKSE9PV8weDJmZGY5MSYmXzB4NTEwOCgnMHg3YmEnKSE9PV8weDJmZGY5MSYmXzB4NTEwOCgnMHgyYWUnKSE9PV8weDJmZGY5MSYmXzB4NTEwOCgnMHgyYWYnKSE9PV8weDJmZGY5MSYmXzB4NTIwMmNhW18weDUxMDgoJzB4MmIwJyldKCk7fWNhdGNoKF8weDFjZjA5MCl7fXJldHVybiBfMHgzY2ZkZDBbJ2FwcGx5J10oXzB4NTNmMThiLGFyZ3VtZW50cyk7fSxfMHg1M2YxOGI7fWVsc2V7XzB4NTEzOTkxfHwoXzB4MjUxZDZmKF8weDUxMDgoJzB4N2JiJyksXzB4ZDE3ODNlKSxfMHg0NTM5ZDdbXzB4NTEwOCgnMHg3MjcnKV0oXzB4NTAxZGY0WydjbG9zZSddLF8weGQxNzgzZSksXzB4Yzg1ODI3KCkpO319KTt9fWNhdGNoKF8weDI5ZGVhYyl7aWYoXzB4NTEwOCgnMHg3YmMnKSE9PV8weDUxMDgoJzB4N2JkJykpe3JldHVybiBfMHgyNTFkNmYoXzB4NTEwOCgnMHgyNmYnKSxfMHhkMTc4M2UsXzB4MjlkZWFjJiZfMHgyOWRlYWNbXzB4NTEwOCgnMHhhOCcpXSksdm9pZCBfMHgzMzMxNDMoKTt9ZWxzZXsoXzB4ZDE3ODNlfHxfMHhkMTc4M2VbXzB4NTEwOCgnMHgxZWUnKV18fF8weGQxNzgzZVtfMHg1MTA4KCcweDFlZScpXVtfMHg1MTA4KCcweDFlZicpXSkmJl8weGQxNzgzZVsndmFsdWVCYWcnXVtfMHg1MTA4KCcweDFlZicpXVtfMHg1MTA4KCcweDJjMycpXT09PV8weDI0OTBiYVtfMHg1MTA4KCcweDJjMycpXSYmXzB4MjQ5MGJhW18weDUxMDgoJzB4OWUnKV1bXzB4NTEwOCgnMHgyZjMnKV0oeydkYXRhJzpfMHhkMTc4M2VbJ3ZhbHVlQmFnJ11bXzB4NTEwOCgnMHgxZWYnKV19KTt9fV8weDU2ZWY5Yz1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7XzB4MzMzMTQzKCk7fSwweDNlOCk7fX07fSwnX3RyeUNsb3NpbmdTYW5kYm94JzpmdW5jdGlvbihfMHhkMTc4M2UsXzB4MjQ5MGJhKXt0cnl7XzB4ZDE3ODNlKCk7fWNhdGNoKF8weDQ0MmFhMCl7aWYoXzB4NTEwOCgnMHg3YmUnKSE9PV8weDUxMDgoJzB4N2JmJykpe18weDI1MWQ2ZihfMHg1MTA4KCcweDUyNScpLF8weDI0OTBiYSxfMHg0NDJhYTBbXzB4NTEwOCgnMHhhOCcpXSk7fWVsc2V7cmV0dXJuIF8weDUyMDJjYSh0aGlzLHZvaWQgMHgwLHZvaWQgMHgwLGZ1bmN0aW9uKCl7dmFyIF8weDc5YTY3NixfMHgxYTQyOWQsXzB4YzYxZmYzLF8weDFhYjhmZjtyZXR1cm4gXzB4NTdmNmFhKHRoaXMsZnVuY3Rpb24oXzB4NWE4YTdjKXtzd2l0Y2goXzB4NWE4YTdjW18weDUxMDgoJzB4MTBmJyldKXtjYXNlIDB4MDpyZXR1cm4gXzB4NWE4YTdjW18weDUxMDgoJzB4MTExJyldW18weDUxMDgoJzB4NGInKV0oWzB4MCwweDIsLDB4M10pLF8weDc5YTY3Nj1bXzB4NTEwOCgnMHgxOGMnKSxfMHg1MTA4KCcweDE4ZCcpLF8weDUxMDgoJzB4MThlJyldLF8weDFhNDI5ZD1fMHhkMTc4M2UoJ29zJyksXzB4NTEwOCgnMHg3YzAnKT09PV8weDFhNDI5ZFtfMHg1MTA4KCcweDY5JyldKCkmJihfMHg3OWE2NzZbJ3B1c2gnXShfMHg1MTA4KCcweDE4ZicpKSxfMHg3OWE2NzZbXzB4NTEwOCgnMHg0YicpXShfMHg1MTA4KCcweDE5MCcpKSksXzB4YzYxZmYzPXRoaXMsWzB4NCxfMHg0NTM5ZDdbXzB4NTEwOCgnMHgxOTEnKV0oeydjaHJvbWVGbGFncyc6dGhpc1tfMHg1MTA4KCcweDEyNCcpXXx8XzB4NzlhNjc2LCdjaHJvbWVQYXRoJzp0aGlzW18weDUxMDgoJzB4MTIyJyldLCdsb2dMZXZlbCc6J3NpbGVudCd9KV07Y2FzZSAweDE6cmV0dXJuIF8weGM2MWZmM1snX2Nocm9tZSddPV8weDVhOGE3Y1snc2VudCddKCksWzB4MywweDNdO2Nhc2UgMHgyOnJldHVybiBfMHgxYWI4ZmY9XzB4NWE4YTdjWydzZW50J10oKSx0aGlzW18weDUxMDgoJzB4MTkzJyldKF8weDFhYjhmZiksWzB4MywweDNdO2Nhc2UgMHgzOnJldHVyblsweDJdO319KTt9KTt9fX0sJ19jb3JydXB0ZWRDYWNoZSc6ZnVuY3Rpb24oXzB4ZDE3ODNlKXtpZihfMHg1MTA4KCcweDdjMScpIT09XzB4NTEwOCgnMHg3YzInKSl7cmV0dXJuIF8weGQxNzgzZSYmXzB4ZDE3ODNlWydtYXRjaCddKC9ldmFsdWF0aW5nICdbYS16XVwuXCRfXCRjb3ZlcmFnZVxbLyk7fWVsc2V7cmV0dXJuIF8weDQ0N2Y0NihfMHhkMTc4M2UpO319LCdfcHJvY2Vzc1Rlc3RMb2cnOmZ1bmN0aW9uKF8weGQxNzgzZSl7aWYoXzB4NTEwOCgnMHg3YzMnKSE9PV8weDUxMDgoJzB4N2M0Jykpe3ZhciBfMHgyNDkwYmE9dGhpcztfW18weDUxMDgoJzB4MTM1JyldKF8weGQxNzgzZSxmdW5jdGlvbihfMHhkMTc4M2Upe3ZhciBfMHg1MDFkZjQ9XzB4ZDE3ODNlW18weDUxMDgoJzB4YTgnKV0mJl8weGQxNzgzZVtfMHg1MTA4KCcweGE4JyldW18weDUxMDgoJzB4NTEnKV0oXzB4NTEwOCgnMHg2NTgnKSl8fC0weDE7fl8weDUwMWRmNCYmKF8weGQxNzgzZVtfMHg1MTA4KCcweGE4JyldPV8weGQxNzgzZVtfMHg1MTA4KCcweGE4JyldW18weDUxMDgoJzB4MTk4JyldKDB4MCxfMHg1MDFkZjQpKSxfMHgyNDkwYmFbXzB4NTEwOCgnMHg3YzUnKV0oXzB4ZDE3ODNlW18weDUxMDgoJzB4YTgnKV0pJiYoXzB4MjQ5MGJhW18weDUxMDgoJzB4OWUnKV1bXzB4NTEwOCgnMHg2NTknKV0oKSxfMHhkMTc4M2VbJ21lc3NhZ2UnXT1fMHhkOTE4NGUpLF8weDI0OTBiYVtfMHg1MTA4KCcweDY1YScpXShfMHhkMTc4M2UpLF8weDI0OTBiYVtfMHg1MTA4KCcweDY1YicpXShfMHhkMTc4M2UpLHByb2Nlc3NbJ2VudiddW18weDUxMDgoJzB4NScpXSYmXzB4ZDE3ODNlW18weDUxMDgoJzB4YTgnKV0mJihfMHhkMTc4M2VbJ21lc3Nh4oCLZ2UnXT1fMHhkMTc4M2VbXzB4NTEwOCgnMHhhOCcpXVtfMHg1MTA4KCcweGJmJyldKF8weDI0OTBiYVtfMHg1MTA4KCcweDY1YycpXSwnLicpW18weDUxMDgoJzB4YmYnKV0oXzB4MjQ5MGJhW18weDUxMDgoJzB4OWUnKV1bJ19sb2NhbFJvb3QnXSwnLicpKTt9KTt9ZWxzZXt0aGlzW18weDUxMDgoJzB4OWUnKV1bXzB4NTEwOCgnMHgyZmMnKV0oXzB4ZDE3ODNlW18weDUxMDgoJzB4Mjc1JyldKTt9fSwnX21hcFN0YWNrRW50cmllcyc6ZnVuY3Rpb24oXzB4ZDE3ODNlKXt2YXIgXzB4MjQ5MGJhPXRoaXMsXzB4NTAxZGY0PV8weDQ2Yjg1ZVtfMHg1MTA4KCcweGJlJyldO2lmKF8weGQxNzgzZVsnc3RhY2snXSYmX1tfMHg1MTA4KCcweDY1JyldKF8weGQxNzgzZVtfMHg1MTA4KCcweDE5ZCcpXSkmJiFfMHhkMTc4M2VbXzB4NTEwOCgnMHg2MmMnKV0pe3ZhciBfMHg1MjAyY2EsXzB4NTdmNmFhLF8weDQ1MzlkNz1bXSxfMHg1MTM5OTE9e30sXzB4Yzg1ODI3PV8weGQxNzgzZVsnc3RhY2snXVtfMHg1MTA4KCcweDEyNScpXSgnXHgwYScpO18weGM4NTgyNyYmXzB4MjQ5MGJhW18weDUxMDgoJzB4N2M1JyldKF8weGM4NTgyN1sweDBdKSYmKF8weDI0OTBiYVtfMHg1MTA4KCcweDllJyldWydpbnZhbGlkYXRlQ2FjaGUnXSgpLF8weGQxNzgzZVtfMHg1MTA4KCcweGE4JyldPV8weGQ5MTg0ZSksX1tfMHg1MTA4KCcweDEzNScpXShfMHhjODU4MjcsZnVuY3Rpb24oXzB4ZDE3ODNlKXtpZihfMHg1MTA4KCcweDdjNicpIT09J1ZiQWFaJyl7dmFyIF8weDI1MWQ2Zj1fMHhkMTc4M2VbXzB4NTEwOCgnMHgxOTcnKV0oXzB4NDZiODVlKTtpZih+XzB4MjUxZDZmKXtpZihfMHg1MTA4KCcweDdjNycpPT09XzB4NTEwOCgnMHg3YzcnKSl7dmFyIF8weGM4NTgyNz1fMHhkMTc4M2VbXzB4NTEwOCgnMHgzMzYnKV0oXzB4MjUxZDZmK18weDUwMWRmNClbXzB4NTEwOCgnMHgxMjUnKV0oJzonKTtfMHhjODU4MjdbXzB4NTEwOCgnMHhiZScpXT49MHgyJiYoXzB4NTIwMmNhPV8weDI0OTBiYVsnX3Byb2plY3QnXVtfMHg1MTA4KCcweDdjOCcpXShwYXJzZUludChfMHhjODU4MjdbMHgwXSwweGEp4oCLfHxfMHhjODU4MjdbMHgwXSxwYXJzZUludChfMHhjODU4MjdbMHgxXSwweGEpKSxfMHg1MjAyY2EmJl8weDUyMDJjYVsnbGluZSddJiYoXzB4NTdmNmFhPV8weDI0OTBiYVtfMHg1MTA4KCcweDdjOScpXShfMHhkMTc4M2UpLF8weDU3ZjZhYSYmKF8weDUxMzk5MVtfMHg0NTM5ZDdbJ2xlbmd0aCddXT1fMHg1N2Y2YWEpLF8weDQ1MzlkN1sncHVzaCddKFtfMHg1MjAyY2FbXzB4NTEwOCgnMHgxNTInKV0sXzB4NTIwMmNhWydsaW5lJ11dKSkpO31lbHNle3ZhciBfMHg1ODNiMzc9XzB4MjQ5MGJhW2ItMHgxXVtfMHg1MTA4KCcweGJlJyldO18weDNlM2QyOVtiXT1bXzB4NDZiODVlLF8weDU4M2IzNy1fMHg0NmI4NWVdO319ZWxzZSBpZihwcm9jZXNzWydlbnYnXVsncXVva2thJ10pe2lmKHByb2Nlc3NbXzB4NTEwOCgnMHg3JyldW18weDUxMDgoJzB4NScpXSlpZihfMHhkMTc4M2U9XzB4MjQ5MGJhW18weDUxMDgoJzB4OWUnKV1bJ25vcm1hbGl6ZVBhdGgnXShfMHhkMTc4M2UpLF9bJ2NvbnRhaW5zJ10oXzB4ZDE3ODNlLF8weDI0OTBiYVtfMHg1MTA4KCcweDdjYScpXSkpe2lmKCdYbVdRdichPT1fMHg1MTA4KCcweDdjYicpKXtpZihfWydjb250YWlucyddKF8weGQxNzgzZSxfMHg1MTA4KCcweDZjNScpKSlyZXR1cm4hMHgxO31lbHNle3RyeXt2YXIgXzB4NGI0MWE4PV8weDUyMDJjYVtfMHg1MTA4KCcweDM4JyldKF8weGQxNzgzZSksXzB4MjEyN2M2PV8weDUxMDgoJzB4N2NjJyk9PT1fMHg0YjQxYTh8fF8weDUxMDgoJzB4N2NkJyk9PT1fMHg0YjQxYTgsXzB4Mjk3ODdkPVsnZXN0cmVlJyxfMHg1MTA4KCcweDM5JyksXzB4NTEwOCgnMHgzYScpLF8weDUxMDgoJzB4M2InKSwnY2xhc3NQcm9wZXJ0aWVzJyxfMHg1MTA4KCcweDdjZScpLF8weDUxMDgoJzB4M2QnKSxfMHg1MTA4KCcweDNlJyksXzB4NTEwOCgnMHgzZicpLF8weDUxMDgoJzB4NDAnKSwnZXhwb3J0RGVmYXVsdEZyb20nLCdleHBvcnROYW1lc3BhY2VGcm9tJywnZnVuY3Rpb25CaW5kJyxfMHg1MTA4KCcweDQzJyksJ2ltcG9ydE1ldGEnLF8weDUxMDgoJzB4NDQnKSwnbnVsbGlzaENvYWxlc2NpbmdPcGVyYXRvcicsXzB4NTEwOCgnMHg0NScpLF8weDUxMDgoJzB4NDYnKSxfMHg1MTA4KCcweDQ3JyksXzB4NTEwOCgnMHg3Y2YnKSxfMHg1MTA4KCcweDdkMCcpLFtfMHg1MTA4KCcweDQ4Jykseydwcm9wb3NhbCc6XzB4NTEwOCgnMHg0OScpfV0sJ3Rocm93RXhwcmVzc2lvbnMnXTtfMHgyMTI3YzY/XzB4Mjk3ODdkWydwdXNoJ10oJ3R5cGVzY3JpcHQnKTooXzB4Mjk3ODdkW18weDUxMDgoJzB4NGInKV0oXzB4NTEwOCgnMHg0ZCcpKSxfMHgyOTc4N2RbXzB4NTEwOCgnMHg0YicpXShfMHg1MTA4KCcweDdkMScpKSk7dmFyIF8weDEyYmMxMz1fMHg1N2Y2YWFbXzB4NTEwOCgnMHg0ZScpXShfMHgyNDkwYmEseydzb3VyY2VUeXBlJzpfMHg1MTA4KCcweDRmJyksJ3BsdWdpbnMnOl8weDI5Nzg3ZH0pLF8weDk4YjUzYT1bXTtyZXR1cm4gXzB4NTZlZjljKF8weDEyYmMxMyxfMHg0NTM5ZDcoZnVuY3Rpb24oXzB4NWUxM2NiKXtyZXR1cm4gXzB4OThiNTNhW18weDUxMDgoJzB4NGInKV0oXzB4NWUxM2NiKTt9KSksXzB4OThiNTNhO31jYXRjaChfMHg0YjIzZTMpe2NvbnNvbGVbXzB4NTEwOCgnMHgxNzInKV0oXzB4NTEwOCgnMHg1MicpK18weGQxNzgzZSsnOlx4MjAnKyhfMHg0YjIzZTMmJl8weDRiMjNlM1tfMHg1MTA4KCcweGE4JyldKSk7fX19ZWxzZXt2YXIgXzB4MzMzMTQzLF8weDQ0N2Y0NixfMHhkOTE4NGU9XzB4ZDE3ODNlO18weGQxNzgzZT1fMHhkMTc4M2VbXzB4NTEwOCgnMHhiZicpXShfMHgyNDkwYmFbXzB4NTEwOCgnMHg2NWMnKV0sJy4nKTt2YXIgXzB4MjQyZTg3PV8weGQ5MTg0ZSE9PV8weGQxNzgzZT9fMHhkOTE4NGVbXzB4NTEwOCgnMHgxOTcnKV0oXzB4MjQ5MGJhWydfbm9ybWFsaXplZExvY2FsUm9vdCddKTpfMHhkMTc4M2VbXzB4NTEwOCgnMHgxOTcnKV0oJygnKSsweDE7aWYoXzB4M2UzZDI5PV8weGQ5MTg0ZSE9PV8weGQxNzgzZT9fMHhkMTc4M2VbXzB4NTEwOCgnMHgzMzYnKV0oXzB4MjQyZTg3KVtfMHg1MTA4KCcweDEyNScpXSgnOicpOl8weGQxNzgzZVsnc3Vic3RyaW5nJ10oXzB4MjQyZTg3LF8weGQxNzgzZVsnbGFzdEluZGV4T2YnXSgnKScpLTB4MSlbXzB4NTEwOCgnMHgxMjUnKV0oJzonKSwweDM9PT1fMHgzZTNkMjlbXzB4NTEwOCgnMHhiZScpXSl7XzB4NTdmNmFhPV8weDI0OTBiYVtfMHg1MTA4KCcweDdkMicpXShfMHhkMTc4M2UsXzB4MjQyZTg3KTt2YXIgXzB4NTI4MmU1PXBhcnNlSW50KF8weDNlM2QyOVsweDFdLDB4YSk7XzB4NTIwMmNhPV8weDI0OTBiYVtfMHg1MTA4KCcweDllJyldW18weDUxMDgoJzB4NjY2JyldKF8weDI0OTBiYVsnX3Byb2plY3QnXVtfMHg1MTA4KCcweGEzJyldKF8weDU2ZWY5Y1tfMHg1MTA4KCcweDY2NycpXShfMHgzZTNkMjlbMHgwXSk/XzB4M2UzZDI5WzB4MF06X1tfMHg1MTA4KCcweDY2OCcpXShfMHgzZTNkMjlbMHgwXSwnLi8nKSksXzB4NTI4MmU1KSxfMHg1MjAyY2EmJl8weDUyMDJjYVtfMHg1MTA4KCcweDIzYicpXT8oXzB4MzMzMTQzPV8weDUyMDJjYVsnZmlsZSddLF8weDQ0N2Y0Nj1fMHg1MjAyY2FbXzB4NTEwOCgnMHgyM2InKV0pOighXzB4NTIwMmNhfHxfMHg1MjAyY2EmJiFfMHg1MjAyY2FbXzB4NTEwOCgnMHgxNTInKV0pJiYoXzB4MzMzMTQzPV8weDNlM2QyOVsweDBdLF8weDQ0N2Y0Nj1fMHg1MjgyZTUpLF8weDMzMzE0MyYmKF8weDU3ZjZhYSYmKF8weDUxMzk5MVtfMHg0NTM5ZDdbXzB4NTEwOCgnMHhiZScpXV09XzB4NTdmNmFhKSxfMHg0NTM5ZDdbJ3B1c2gnXShbXzB4MzMzMTQzLF8weDQ0N2Y0Nl0pKTt9fX1lbHNle18weGQxNzgzZT1fMHgyNDkwYmFbXzB4NTEwOCgnMHg5ZScpXVtfMHg1MTA4KCcweGEzJyldKF8weGQxNzgzZSk7dmFyIF8weDIxZTFkOD1fMHgyNDkwYmFbXzB4NTEwOCgnMHg3NmUnKV0/XzB4ZDE3ODNlWydsYXN0SW5kZXhPZiddKF8weDI0OTBiYVtfMHg1MTA4KCcweDc2ZScpXSk6LTB4MTtpZih+XzB4MjFlMWQ4KXtpZihfMHg1MTA4KCcweDdkMycpIT09XzB4NTEwOCgnMHg3ZDMnKSl7cmV0dXJuIF8weGQxNzgzZVtfMHg1MTA4KCcweGJmJyldKC9bW1xde30oKSorPy5cXF4kfF0vZyxfMHg1MTA4KCcweDdkNCcpKTt9ZWxzZXt2YXIgXzB4M2UzZDI5PV9bJ3J0cmltJ10oXzB4ZDE3ODNlW18weDUxMDgoJzB4MzM2JyldKF8weDIxZTFkOCtfMHgyNDkwYmFbXzB4NTEwOCgnMHg3NmUnKV1bXzB4NTEwOCgnMHhiZScpXSksJyknKVtfMHg1MTA4KCcweDEyNScpXSgnOicpOzB4MyE9PV8weDNlM2QyOVsnbGVuZ3RoJ10mJjB4MiE9PV8weDNlM2QyOVtfMHg1MTA4KCcweGJlJyldfHwoXzB4NTIwMmNhPV8weDI0OTBiYVtfMHg1MTA4KCcweDllJyldW18weDUxMDgoJzB4NjY2JyldKF8weDI0OTBiYVtfMHg1MTA4KCcweDllJyldW18weDUxMDgoJzB4YTMnKV0oX1tfMHg1MTA4KCcweDY2OCcpXShfMHgzZTNkMjlbMHgwXSwnLycpKSxwYXJzZUludChfMHgzZTNkMjlbMHgxXSwweGEpKSxfMHg1MjAyY2EmJl8weDUyMDJjYVtfMHg1MTA4KCcweDIzYicpXSYmKF8weDU3ZjZhYT1fMHgyNDkwYmFbXzB4NTEwOCgnMHg3ZDInKV0oXzB4ZDE3ODNlLF8weDIxZTFkOCksXzB4NTdmNmFhJiYoXzB4NTEzOTkxW18weDQ1MzlkN1snbGVuZ3RoJ11dPV8weDU3ZjZhYSksXzB4NDUzOWQ3W18weDUxMDgoJzB4NGInKV0oW18weDUyMDJjYVsnZmlsZSddLF8weDUyMDJjYVtfMHg1MTA4KCcweDIzYicpXV0pKSk7fX19fWVsc2V7dmFyIF8weDI3MmIxMD10aGlzLF8weDI0ZTM5YT1RW18weDUxMDgoJzB4MWQ1JyldKCk7dHJ5e18weDI0OTBiYVsncmVuZGVyJ10oXzB4ZDE3ODNlLGZ1bmN0aW9uKCl7XzB4MjRlMzlhWydyZXNvbHZlJ10oKTt9KSxfMHgyNzJiMTBbJ19zY3JlZW5TaG90UmVhZHknXT1fMHgyNGUzOWFbXzB4NTEwOCgnMHgxYTgnKV07fWNhdGNoKF8weDU3ZDJlNSl7XzB4MjRlMzlhW18weDUxMDgoJzB4MWRkJyldKG5ldyBFcnJvcihfMHg1MTA4KCcweDFkOScpKSksY29uc29sZVtfMHg1MTA4KCcweDI0JyldKF8weDUxMDgoJzB4MWQ5JyksXzB4NTdkMmU1W18weDUxMDgoJzB4YTgnKV0pO319fSksXzB4NDUzOWQ3WydsZW5ndGgnXXx8XzB4MjUxZDZmKF8weDUxMDgoJzB4N2Q1JyksXzB4ZDE3ODNlWydtZXNzYWdlJ10mJl8weGQxNzgzZVtfMHg1MTA4KCcweGE4JyldW18weDUxMDgoJzB4MTk4JyldKDB4MCwweDQwMCksXzB4ZDE3ODNlWydzdGFjayddW18weDUxMDgoJzB4MTk4JyldKDB4MCwweDQwMCkpLF8weGQxNzgzZVsnbWVzc2FnZSddPV8weDI0OTBiYVtfMHg1MTA4KCcweDllJyldW18weDUxMDgoJzB4N2Q2JyldKF8weGQxNzgzZVtfMHg1MTA4KCcweGE4JyldKSxfMHg1MTA4KCcweDdkNycpPT09XzB4MjQ5MGJhW18weDUxMDgoJzB4OWUnKV1bJ3NldHRpbmdzJ10oKVsnZW52J11bJ3R5cGUnXSYmfl8weGQxNzgzZVtfMHg1MTA4KCcweGE4JyldW18weDUxMDgoJzB4NTEnKV0oXzB4NTEwOCgnMHg2MmYnKSkmJihfMHhkMTc4M2VbXzB4NTEwOCgnMHhhOCcpXT1fMHgyNDkwYmFbXzB4NTEwOCgnMHg5ZScpXVtfMHg1MTA4KCcweDdkNicpXShfMHhkMTc4M2VbXzB4NTEwOCgnMHhhOCcpXSxfMHgyNDkwYmFbJ19wcm9qZWN0J11bXzB4NTEwOCgnMHg3ZDgnKV0pKSxfMHhkMTc4M2VbJ3N0YWNrJ109XzB4NDUzOWQ3LF9bXzB4NTEwOCgnMHgxMzQnKV0oXzB4NTEzOTkxKXx8KF8weGQxNzgzZVsnY29udGV4dCddPV8weDUxMzk5MSksXzB4ZDE3ODNlW18weDUxMDgoJzB4N2Q5JyldPSEweDA7fX0sJ19leHRyYWN0Tm9kZVN0YWNrTGluZUNvbnRleHQnOmZ1bmN0aW9uKF8weGQxNzgzZSxfMHgyNDkwYmEpe2lmKF8weDUxMDgoJzB4N2RhJykhPT1fMHg1MTA4KCcweDdkYScpKXtkZWxldGUgdGhpc1snX2RvY3VtZW50SW5FZGl0b3InXSxfW18weDUxMDgoJzB4MTM1JyldKHRoaXNbXzB4NTEwOCgnMHgxMDcnKV0sZnVuY3Rpb24oXzB4MThmYTMxKXtyZXR1cm4gXzB4MThmYTMxWydkaXNwb3NlJ10oKTt9KSxkZWxldGUgdGhpc1snX3JhbmdlcyddLGRlbGV0ZSB0aGlzWydfdGVzdE1hcCddO31lbHNle2lmKF8weDI0OTBiYT4weDQmJicoJz09PV8weGQxNzgzZVtfMHgyNDkwYmEtMHgxXSl7dmFyIF8weDUwMWRmND1fMHhkMTc4M2VbJ3N1YnN0ciddKDB4MCxfMHgyNDkwYmEtMHgyKXx8Jyc7cmV0dXJuIF8weDUwMWRmNFtfMHg1MTA4KCcweDEyNScpXShfMHg1MTA4KCcweDMzNycpKVsweDFdO319fSwnX2V4dHJhY3RCcm93c2VyU3RhY2tMaW5lQ29udGV4dCc6ZnVuY3Rpb24oXzB4ZDE3ODNlKXt2YXIgXzB4MjQ5MGJhPV8weGQxNzgzZVtfMHg1MTA4KCcweDEyNScpXShfMHg1MTA4KCcweDdkYicpKTtyZXR1cm4gXzB4MjQ5MGJhW18weDUxMDgoJzB4YmUnKV0+PTB4Mj8oXzB4MjQ5MGJhWzB4MF18fCcnKVtfMHg1MTA4KCcweDEyNScpXSgnYXRceDIwJylbMHgxXTooXzB4MjQ5MGJhPV8weGQxNzgzZVtfMHg1MTA4KCcweDEyNScpXSgnQGh0dHAnKSxfMHgyNDkwYmFbXzB4NTEwOCgnMHhiZScpXT49MHgyP18weDI0OTBiYVsweDBdOnZvaWQgMHgwKTt9LCdfcnVuSW5QYXJhbGxlbCc6ZnVuY3Rpb24oXzB4ZDE3ODNlLF8weDI0OTBiYSl7aWYoXzB4NTEwOCgnMHg3ZGMnKSE9PV8weDUxMDgoJzB4N2RkJykpe3ZhciBfMHg1MDFkZjQ9dGhpcyxfMHg1MjAyY2E9XzB4ZDE3ODNlW18weDUxMDgoJzB4YmMnKV0sXzB4NTdmNmFhPXt9O18weDI1MWQ2ZihfMHg1MTA4KCcweDdkZScpLF8weDI0OTBiYSk7Zm9yKHZhciBfMHg0NTM5ZDc9MHgwO18weDQ1MzlkNzxfMHgyNDkwYmE7XzB4NDUzOWQ3Kyspe2lmKF8weDUxMDgoJzB4N2RmJykhPT1fMHg1MTA4KCcweDdkZicpKXt2YXIgXzB4NjllNGQ0PVtdO3JldHVybiB0aGlzW18weDUxMDgoJzB4M2ZlJyldKCk/KHRoaXNbXzB4NTEwOCgnMHgzZmYnKV0mJihfMHg2OWU0ZDQ9XzB4NjllNGQ0W18weDUxMDgoJzB4YjcnKV0oX1tfMHg1MTA4KCcweDQwOScpXShfWyd2YWx1ZXMnXSh0aGlzW18weDUxMDgoJzB4M2ZmJyldKSkpKSx0aGlzW18weDUxMDgoJzB4MzBhJyldJiYoXzB4NjllNGQ0PV8weDY5ZTRkNFtfMHg1MTA4KCcweGI3JyldKHRoaXNbJ19nbG9iYWxFcnJvcnMnXSkpLF8weDY5ZTRkNCk6XzB4NjllNGQ0O31lbHNle3ZhciBfMHg1NmVmOWM9X1tfMHg1MTA4KCcweDMwNicpXShfMHhkMTc4M2UsXzB4NTEwOCgnMHg3ZTAnKSk7XzB4NTZlZjljW18weDUxMDgoJzB4YmMnKV09W10sXzB4NTdmNmFhW18weDQ1MzlkN109eydvcHRzJzpfMHg1NmVmOWMsJ3dvcmtlcklkJzpfMHg0NTM5ZDcsJ3Jhbmdlcyc6MHgwfTt9fXJldHVybiBfW18weDUxMDgoJzB4MTM1JyldKF8weDUyMDJjYSxmdW5jdGlvbihfMHhkMTc4M2Upe3ZhciBfMHgyNDkwYmE9X1snY2hhaW4nXShfMHg1N2Y2YWEpW18weDUxMDgoJzB4MjA1JyldKGZ1bmN0aW9uKF8weGQxNzgzZSl7aWYoXzB4NTEwOCgnMHg3ZTEnKSE9PV8weDUxMDgoJzB4N2UyJykpe3JldHVybiBfMHhkMTc4M2VbXzB4NTEwOCgnMHgyZTUnKV07fWVsc2V7XzB4NDQ3ZjQ2KCdGaWxlXHgyMGRlbGV0ZWQ6XHgyMCVzJyxfMHhkMTc4M2UpLHRoaXNbXzB4NTEwOCgnMHg2MycpXVtfMHg1MTA4KCcweDQyNScpXShfMHhkMTc4M2UpO3ZhciBfMHg0MzQyMjc9dGhpc1tfMHg1MTA4KCcweDYwJyldW18weGQxNzgzZV07XzB4NDM0MjI3PyhkZWxldGUgdGhpc1tfMHg1MTA4KCcweDYwJyldW18weGQxNzgzZV0sZGVsZXRlIHRoaXNbXzB4NTEwOCgnMHg0ZDInKV1bXzB4NDM0MjI3WydpZCddXSx0aGlzW18weDUxMDgoJzB4NTEyJyldW18weDUxMDgoJzB4MzAyJyldKHsnaWQnOl8weDQzNDIyN1snaWQnXSwncGF0aCc6XzB4ZDE3ODNlfSksdGhpc1tfMHg1MTA4KCcweGZiJyldJiZ0aGlzWydlbWl0J10oXzB4NTEwOCgnMHgxNTMnKSxfMHg0MzQyMjcpKTpfMHg0NDdmNDYoXzB4NTEwOCgnMHg3ZTMnKSxfMHhkMTc4M2UpO319KVtfMHg1MTA4KCcweDIwNScpXShmdW5jdGlvbihfMHhkMTc4M2Upe3JldHVybiBfMHhkMTc4M2VbXzB4NTEwOCgnMHg3ZTQnKV1bXzB4NTEwOCgnMHhiYycpXVtfMHg1MTA4KCcweGJlJyldO30pW18weDUxMDgoJzB4ZGUnKV0oKVsweDBdO18weDI0OTBiYVtfMHg1MTA4KCcweDdlNCcpXVtfMHg1MTA4KCcweGJjJyldW18weDUxMDgoJzB4NGInKV0oXzB4ZDE3ODNlKSxfMHgyNDkwYmFbXzB4NTEwOCgnMHgyZTUnKV0rPV8weGQxNzgzZVsncmFuZ2VzTGVuZ3RoJ107fSksXzB4MjUxZDZmKF8weDUxMDgoJzB4N2U1JykpLFFbJ2FsbCddKF9bXzB4NTEwOCgnMHhkNycpXShfMHg1N2Y2YWEpW18weDUxMDgoJzB4ZGEnKV0oZnVuY3Rpb24oXzB4ZDE3ODNlKXtyZXR1cm4gXzB4NTAxZGY0W18weDUxMDgoJzB4MzM1JyldW18weDUxMDgoJzB4Nzc3JyldKF8weGQxNzgzZVtfMHg1MTA4KCcweDdlNCcpXSxfMHhkMTc4M2VbXzB4NTEwOCgnMHg3ZTYnKV0pWyd0aGVuJ10oZnVuY3Rpb24oXzB4ZDE3ODNlKXtyZXR1cm4gXzB4NTAxZGY0WydfcnVuVGVzdHMnXShfMHhkMTc4M2UpO30pO30pW18weDUxMDgoJzB4ZGUnKV0oKSlbXzB4NTEwOCgnMHgxZGEnKV0oZnVuY3Rpb24oXzB4ZDE3ODNlKXtfMHgyNTFkNmYoXzB4NTEwOCgnMHg3MWMnKSk7dmFyIF8weDI0OTBiYT1fW18weDUxMDgoJzB4YjUnKV0oXzB4ZDE3ODNlLGZ1bmN0aW9uKF8weGQxNzgzZSxfMHgyNDkwYmEpe18weGQxNzgzZVtfMHg1MTA4KCcweDEyZicpXT1fMHgyNDkwYmFbXzB4NTEwOCgnMHgxMmYnKV18fF8weGQxNzgzZVtfMHg1MTA4KCcweDEyZicpXSxfMHhkMTc4M2VbXzB4NTEwOCgnMHhkNCcpXT1fMHhkMTc4M2VbXzB4NTEwOCgnMHhkNCcpXVsnY29uY2F0J10oXzB4MjQ5MGJhW18weDUxMDgoJzB4ZDQnKV18fFtdKSxfMHhkMTc4M2VbXzB4NTEwOCgnMHgxMzAnKV09XzB4ZDE3ODNlW18weDUxMDgoJzB4MTMwJyldW18weDUxMDgoJzB4YjcnKV0oXzB4MjQ5MGJhW18weDUxMDgoJzB4MTMwJyldfHxbXSksXzB4ZDE3ODNlW18weDUxMDgoJzB4MTMxJyldPV8weGQxNzgzZVsnZ2xvYmFsRXJyb3JzJ11bJ2NvbmNhdCddKF8weDI0OTBiYVtfMHg1MTA4KCcweDEzMScpXXx8W10pLF8weGQxNzgzZVtfMHg1MTA4KCcweDI0JyldPV8weDI0OTBiYSBpbnN0YW5jZW9mIEVycm9yfHxfMHhkMTc4M2VbXzB4NTEwOCgnMHgyNCcpXSxfMHhkMTc4M2VbXzB4NTEwOCgnMHgxMzInKV09X1tfMHg1MTA4KCcweDY2JyldKF8weGQxNzgzZVtfMHg1MTA4KCcweDEzMicpXSxfMHgyNDkwYmFbXzB4NTEwOCgnMHgxMzInKV18fHt9KTt2YXIgXzB4NTAxZGY0PV8weGQxNzgzZVsnY292ZXJhZ2UnXTtyZXR1cm4gX1tfMHg1MTA4KCcweDEzNCcpXShfMHg1MDFkZjQpPyhfMHhkMTc4M2VbXzB4NTEwOCgnMHgxMzMnKV09XzB4MjQ5MGJhWydjb3ZlcmFnZSddLF8weGQxNzgzZSk6KF9bXzB4NTEwOCgnMHgxMzUnKV0oXzB4MjQ5MGJhW18weDUxMDgoJzB4MTMzJyldLGZ1bmN0aW9uKF8weGQxNzgzZSxfMHgyNDkwYmEpe2lmKF8weDUxMDgoJzB4N2U3Jyk9PT1fMHg1MTA4KCcweDdlNycpKXt2YXIgXzB4NTIwMmNhPV8weDUwMWRmNFtfMHgyNDkwYmFdO3JldHVybiBfMHg1MjAyY2E/dm9pZCBfWydlYWNoJ10oXzB4ZDE3ODNlLGZ1bmN0aW9uKF8weGQxNzgzZSxfMHgyNDkwYmEpe3ZhciBfMHg1MDFkZjQ9XzB4NTIwMmNhW18weDI0OTBiYV07cmV0dXJuIF8weDUwMWRmND92b2lkIF9bJ2V4dGVuZCddKF8weDUwMWRmNCxfMHhkMTc4M2UpOnZvaWQoXzB4NTIwMmNhW18weDI0OTBiYV09XzB4ZDE3ODNlKTt9KTp2b2lkKF8weDUwMWRmNFtfMHgyNDkwYmFdPV8weGQxNzgzZSk7fWVsc2V7XzB4MjUxZDZmPSEweDA7dmFyIF8weDQ3Y2YzYz1fMHg1MjAyY2FbJ2Vycm9ycyddKCk7aWYoXzB4NDdjZjNjW18weDUxMDgoJzB4YmUnKV0pe3ZhciBfMHgyYjAzNjA9XzB4NDdjZjNjW18weDQ3Y2YzY1snbGVuZ3RoJ10tMHgxXVtfMHg1MTA4KCcweGE4JyldKCk7XzB4ZDE3ODNlW18weDUxMDgoJzB4NDQyJyldPV8weGQxNzgzZVsnX3RydW5jYXRlTWVzc2FnZSddKF8weDJiMDM2MHx8JycsXzB4NTZlZjljKTt9fX0pLF8weGQxNzgzZSk7fSx7J2NvdmVyYWdlJzp7fSwndGVzdHMnOltdLCdsb2cnOltdLCdnbG9iYWxFcnJvcnMnOltdLCdsb2FkaW5nU2VxdWVuY2UnOnt9fSk7cmV0dXJuIF8weDI0OTBiYVtfMHg1MTA4KCcweDEyZicpXT9RW18weDUxMDgoJzB4MWRkJyldKF8weDI0OTBiYSk6XzB4MjQ5MGJhW18weDUxMDgoJzB4MjQnKV0/UVtfMHg1MTA4KCcweDFkZCcpXShfMHgyNDkwYmFbJ2Vycm9yJ10pOlFbXzB4NTEwOCgnMHhmNicpXShfMHgyNDkwYmEpO30pO31lbHNle3ZhciBfMHgzNWNjYTg9XzB4ZDE3ODNlW18weDUxMDgoJzB4NTAnKV0oKSxfMHgzYWMzOGM9dGhpc1tfMHg1MTA4KCcweDQ1MicpXVtfMHgzNWNjYThdO3RoaXNbXzB4NTEwOCgnMHg0NTInKV1bXzB4MzVjY2E4XT1fMHhkMTc4M2UsZGVsZXRlIHRoaXNbXzB4NTEwOCgnMHg1MDYnKV1bXzB4MzVjY2E4XSxfMHhkMTc4M2VbXzB4NTEwOCgnMHg0MmQnKV0oKSYmKHRoaXNbJ19mYWlsaW5nVGVzdHMnXVtfMHgzNWNjYThdPV8weGQxNzgzZSksdGhpc1tfMHg1MTA4KCcweDUwNycpXT0hXzB4M2FjMzhjfHxfMHgzYWMzOGMmJl8weDNhYzM4Y1snaXNGYWlsaW5nJ10oKXx8XzB4ZDE3ODNlW18weDUxMDgoJzB4NDJkJyldKCl8fHRoaXNbXzB4NTEwOCgnMHg1MDcnKV07fX0sJ2dldFdvcmtlcic6ZnVuY3Rpb24oXzB4ZDE3ODNlKXt2YXIgXzB4MjQ5MGJhPXRoaXMsXzB4NTAxZGY0PV8weDI0OTBiYVtfMHg1MTA4KCcweDMzMycpXVtfMHhkMTc4M2VdO3JldHVybiBfMHg1MDFkZjR8fChfMHg1MDFkZjQ9XzB4MjQ5MGJhWydfd29ya2VycyddW18weGQxNzgzZV09eydpZCc6XzB4ZDE3ODNlLCdwcm9taXNlJzpRW18weDUxMDgoJzB4MWE4JyldKGZ1bmN0aW9uKF8weDUwMWRmNCxfMHg1MjAyY2Epe2lmKF8weDUxMDgoJzB4N2U4JykhPT0ndU5seWsnKXtyZXR1cm4gdGhpc1tfMHg1MTA4KCcweDllJyldJiZ0aGlzWydfcHJvamVjdCddW18weDUxMDgoJzB4MTljJyldKF8weGQxNzgzZSksXzB4ZDE3ODNlJiYoXzB4ZDE3ODNlW18weDUxMDgoJzB4MTlkJyldfHxfMHhkMTc4M2VbXzB4NTEwOCgnMHhhOCcpXSk7fWVsc2V7dmFyIF8weDU3ZjZhYT1fMHgyNDkwYmFbXzB4NTEwOCgnMHgzMzMnKV1bXzB4ZDE3ODNlXTtpZihfMHg1N2Y2YWEpaWYoXzB4NTdmNmFhW18weDUxMDgoJzB4MzM0JyldKXtpZihfMHgyNDkwYmFbJ19leHRlbnNpb24nXVtfMHg1MTA4KCcweDdlOScpXShfMHg1N2Y2YWFbXzB4NTEwOCgnMHgzMzQnKV0pKXJldHVybiB2b2lkIF8weDUwMWRmNChfMHg1N2Y2YWEpO18weDI1MWQ2ZihfMHg1MTA4KCcweDdlYScpLF8weGQxNzgzZSksXzB4MjQ5MGJhWydyZWN5Y2xlV29ya2VyJ10oXzB4ZDE3ODNlKTt9ZWxzZSBpZihfMHg1N2Y2YWFbJ3Byb21pc2UnXSlyZXR1cm4gXzB4NTdmNmFhW18weDUxMDgoJzB4MWE4JyldO18weDI1MWQ2ZihfMHg1MTA4KCcweDdlYicpK18weGQxNzgzZSk7dHJ5e2lmKCdkcm5uaSchPT1fMHg1MTA4KCcweDdlYycpKXt2YXIgXzB4MjQxZjJhPV8weDI0OTBiYVtfMHg1MTA4KCcweDEyNScpXSgnPScpLF8weDMyY2ExYz1fW18weDUxMDgoJzB4M2MyJyldKF8weDI0MWYyYVsweDBdKTtyZXR1cm4gXzB4ZDE3ODNlW18weDMyY2ExY109XzB4MjQ5MGJhWydzdWJzdHJpbmcnXShfMHgyNDFmMmFbMHgwXVtfMHg1MTA4KCcweGJlJyldKzB4MSksXzB4ZDE3ODNlO31lbHNle18weDI0OTBiYVsnX2V4dGVuc2lvbiddWydjcmVhdGUnXShfMHhkMTc4M2UsZnVuY3Rpb24oXzB4NTdmNmFhKXtpZihfMHg1MTA4KCcweDdlZCcpPT09XzB4NTEwOCgnMHg3ZWQnKSl7aWYoIV8weDU3ZjZhYSlyZXR1cm4gdm9pZCBfMHg1MjAyY2EobmV3IEVycm9yKF8weDUxMDgoJzB4N2VlJykpKTt2YXIgXzB4NDUzOWQ3PV8weDI0OTBiYVtfMHg1MTA4KCcweDMzMycpXVtfMHhkMTc4M2VdPV8weDI0OTBiYVsnX3dvcmtlcnMnXVtfMHhkMTc4M2VdfHx7J2lkJzpfMHhkMTc4M2V9O2lmKF8weDU3ZjZhYVsnb25Db25uZWN0ZWQnXSl7aWYoXzB4NTEwOCgnMHg3ZWYnKSE9PV8weDUxMDgoJzB4N2VmJykpe3ZhciBfMHgzYWQ1MDc9XzB4NTAxZGY0W18weDUxMDgoJzB4NDlkJyldKCk7XzB4MjQ5MGJhW18weDNhZDUwN1tfMHg1MTA4KCcweDUwJyldKCldPV8weDNhZDUwNzt9ZWxzZXtfMHg0NTM5ZDdbXzB4NTEwOCgnMHgzZGMnKV09X1tfMHg1MTA4KCcweDExNScpXShfMHg1N2Y2YWFbXzB4NTEwOCgnMHgzZGMnKV0sXzB4NDUzOWQ3KSxkZWxldGUgXzB4NTdmNmFhW18weDUxMDgoJzB4M2RjJyldO3ZhciBfMHg1NmVmOWMsXzB4NTEzOTkxO18weDQ1MzlkN1tfMHg1MTA4KCcweDFhOCcpXT1RWydwcm9taXNlJ10oZnVuY3Rpb24oXzB4ZDE3ODNlLF8weDI0OTBiYSl7XzB4NTZlZjljPV8weGQxNzgzZSxfMHg1MTM5OTE9XzB4MjQ5MGJhO30pO3ZhciBfMHhjODU4Mjc9ITB4MSxfMHgzMzMxNDM9c2V0VGltZW91dChmdW5jdGlvbigpe2lmKF8weDUxMDgoJzB4N2YwJyk9PT0nQUNMSkMnKXtpZighXzB4Yzg1ODI3KXtpZignVXRMbkgnPT09J1JTSWFrJyl7XzB4ZDE3ODNlWydfaHR0cFNlcnZlciddJiZfMHhkMTc4M2VbJ19odHRwU2VydmVyJ11bXzB4NTEwOCgnMHgxN2YnKV0oKTt9ZWxzZXtfMHg0NDdmNDYoKTt2YXIgXzB4NTAxZGY0PV8weDI0OTBiYVtfMHg1MTA4KCcweDMzMycpXVtfMHhkMTc4M2VdO18weDUwMWRmNCYmXzB4NTAxZGY0W18weDUxMDgoJzB4N2YxJyldP18weDI0OTBiYVtfMHg1MTA4KCcweDMzNScpXVtfMHg1MTA4KCcweDZhYScpXShfMHg1N2Y2YWEpOl8weDI0OTBiYVtfMHg1MTA4KCcweDFlMicpXShfMHhkMTc4M2UpLF8weDI1MWQ2ZihfMHg1MTA4KCcweDdmMicpKSxfMHg1MTM5OTEmJl8weDUxMzk5MSh7J3J1bkNhbmNlbGxlZCc6ITB4MCwncmVydW4nOiEweDB9KSxfMHg1MjAyY2EoeydydW5DYW5jZWxsZWQnOiEweDAsJ3JlcnVuJzohMHgwfSk7fX19ZWxzZXt0aGlzW18weDUxMDgoJzB4MWM3JyldKHsndHlwZSc6XzB4NTEwOCgnMHgzYzUnKSwnbm90aWZpY2F0aW9uJzpfW18weDUxMDgoJzB4NjYnKV0oeyd0ZXh0JzpfMHgyNDkwYmEsJ3R5cGUnOl8weGQxNzgzZX0sXzB4NTAxZGY0fHx7fSl9KTt9fSwweDI3MTApLF8weDQ0N2Y0Nj1mdW5jdGlvbigpe18weGM4NTgyNz0hMHgwLGNsZWFyVGltZW91dChfMHgzMzMxNDMpO30sXzB4NDZiODVlPV8weDI0OTBiYVtfMHg1MTA4KCcweDU3NCcpXVtfMHhkMTc4M2VdO18weDQ2Yjg1ZSYmXzB4MjQ5MGJhWydfZXh0ZW5zaW9uJ11bXzB4NTEwOCgnMHg2YWEnKV0oXzB4NDZiODVlKSxfMHgyNDkwYmFbJ19jb25uZWN0aW5nV29ya2VycyddW18weGQxNzgzZV09XzB4NTdmNmFhLF8weDQ1MzlkN1tfMHg1MTA4KCcweDNkYycpXShmdW5jdGlvbihfMHg1MjAyY2Epe2RlbGV0ZSBfMHgyNDkwYmFbJ19jb25uZWN0aW5nV29ya2VycyddW18weGQxNzgzZV0sXzB4Yzg1ODI3fHwoXzB4NDQ3ZjQ2KCksXzB4MjUxZDZmKF8weDUxMDgoJzB4NTc1JykrXzB4ZDE3ODNlKSxfMHg0NTM5ZDdbXzB4NTEwOCgnMHgzMzQnKV09XzB4NTdmNmFhLF8weDQ1MzlkN1tfMHg1MTA4KCcweDdmMScpXT0hMHgwLF8weDU3ZjZhYVtfMHg1MTA4KCcweDUwYScpXT1fMHg1MjAyY2EsXzB4NDUzOWQ3Wydwcm9taXNlJ109UVtfMHg1MTA4KCcweGY2JyldKF8weDU3ZjZhYSksXzB4NTZlZjljJiZfMHg1NmVmOWMoXzB4NTdmNmFhKSxfMHg1MDFkZjQoXzB4NTdmNmFhKSk7fSk7fX1lbHNlIF8weDI1MWQ2ZignU3RhcnRlZFx4MjBydW5ceDIwd29ya2VyXHgyMGluc3RhbmNlXHgyMChpbW1lZGlhdGUpXHgyMCMnK18weGQxNzgzZSksXzB4NDUzOWQ3WydpbnN0YW5jZSddPV8weDU3ZjZhYSxfMHg0NTM5ZDdbXzB4NTEwOCgnMHgxYTgnKV09UVtfMHg1MTA4KCcweGY2JyldKF8weDU3ZjZhYSksXzB4NTAxZGY0KF8weDU3ZjZhYSk7fWVsc2V7cmV0dXJuIF8weGQxNzgzZVtfMHg1MTA4KCcweDFmNCcpXShfMHgyNDkwYmEpO319KTt9fWNhdGNoKF8weDc3NzFhMCl7aWYoXzB4NTEwOCgnMHg3ZjMnKSE9PV8weDUxMDgoJzB4N2Y0Jykpe18weDUyMDJjYShfMHg3NzcxYTApO31lbHNle3RoaXNbJ19lbWl0J10oeyd0eXBlJzpfMHg1MTA4KCcweDEwJyl9KTt9fX19KX0pLF8weDUwMWRmNFtfMHg1MTA4KCcweDFhOCcpXTt9LCdyZXBvcnRDb25zb2xlT3V0cHV0JzpmdW5jdGlvbihfMHhkMTc4M2Upe30sJ3JlY3ljbGVXb3JrZXInOmZ1bmN0aW9uKF8weGQxNzgzZSl7dmFyIF8weDI0OTBiYT10aGlzO3RyeXt2YXIgXzB4NTAxZGY0PV8weDI0OTBiYVtfMHg1MTA4KCcweDMzMycpXVtfMHhkMTc4M2VdO18weDUwMWRmNCYmXzB4NTAxZGY0W18weDUxMDgoJzB4MzM0JyldJiZfMHgyNDkwYmFbXzB4NTEwOCgnMHgzMzUnKV1bXzB4NTEwOCgnMHg2YWEnKV0oXzB4NTAxZGY0W18weDUxMDgoJzB4MzM0JyldKTt9Y2F0Y2goXzB4M2E5ZTZkKXtfMHgyNTFkNmYoXzB4NTEwOCgnMHgyZGMnKSxfMHhkMTc4M2UsXzB4M2E5ZTZkJiYoXzB4M2E5ZTZkW18weDUxMDgoJzB4MTlkJyldfHxfMHgzYTllNmRbJ21lc3NhZ2UnXSkpO31maW5hbGx5e2RlbGV0ZSBfMHgyNDkwYmFbXzB4NTEwOCgnMHgzMzMnKV1bXzB4ZDE3ODNlXSxkZWxldGUgXzB4MjQ5MGJhW18weDUxMDgoJzB4NzU0JyldW18weGQxNzgzZV07fX0sJ3N0b3AnOmZ1bmN0aW9uKCl7aWYoXzB4NTEwOCgnMHg3ZjUnKSE9PV8weDUxMDgoJzB4N2Y2Jykpe3ZhciBfMHhkMTc4M2U9dGhpcztfW18weDUxMDgoJzB4MTM1JyldKF8weGQxNzgzZVtfMHg1MTA4KCcweDMzMycpXSxmdW5jdGlvbihfMHgyNDkwYmEsXzB4NTAxZGY0KXtpZihfMHg1MTA4KCcweDdmNycpIT09XzB4NTEwOCgnMHg3ZjgnKSl7XzB4ZDE3ODNlW18weDUxMDgoJzB4MWUyJyldKF8weDUwMWRmNCk7fWVsc2V7cmV0dXJuKF8weGQxNzgzZT1PYmplY3RbXzB4NTEwOCgnMHgyMjknKV18fHsnX19wcm90b19fJzpbXX1pbnN0YW5jZW9mIEFycmF5JiZmdW5jdGlvbihfMHg1NWI3ZDAsXzB4MzQ5OGE4KXtfMHg1NWI3ZDBbXzB4NTEwOCgnMHgyMmYnKV09XzB4MzQ5OGE4O318fGZ1bmN0aW9uKF8weDFhMzg2ZixfMHgyNmM0ZTYpe2Zvcih2YXIgXzB4NGIyOWU3IGluIF8weDI2YzRlNilfMHgyNmM0ZTZbXzB4NTEwOCgnMHg2OCcpXShfMHg0YjI5ZTcpJiYoXzB4MWEzODZmW18weDRiMjllN109XzB4MjZjNGU2W18weDRiMjllN10pO30pKF8weDI0OTBiYSxfMHg1MDFkZjQpO319KTt0cnl7aWYoXzB4NTEwOCgnMHg3ZjknKT09PV8weDUxMDgoJzB4N2ZhJykpe3ZhciBfMHg1N2VkMGE9dGhpcyxfMHgyZGNjM2I9dGhpcyxfMHgyYTNhNTc9T2JqZWN0W18weDUxMDgoJzB4OWEnKV0obnVsbCksXzB4M2M3NWM2PSEweDE7X1tfMHg1MTA4KCcweDEzNScpXShfMHhkMTc4M2UsZnVuY3Rpb24oXzB4MjZlN2ZjKXtfMHgzYzc1YzY9XzB4MmRjYzNiW18weDUxMDgoJzB4NThhJyldKF8weDI2ZTdmYyl8fF8weDNjNzVjNjt2YXIgXzB4Mzk2Y2IwPV8weDI2ZTdmY1tfMHg1MTA4KCcweDVmMCcpXSgpO2lmKF8weDM5NmNiMCYmKF8weDJhM2E1N1tfMHgyNmU3ZmNbXzB4NTEwOCgnMHgzNCcpXSgpXT1fMHgyZGNjM2JbXzB4NTEwOCgnMHg2OWQnKV0/XzB4MjZlN2ZjW18weDUxMDgoJzB4MzJjJyldKCk6XzB4Mzk2Y2IwKSxfMHg1MDFkZjQpe3ZhciBfMHg0YmJlMTQ9XzB4MjZlN2ZjW18weDUxMDgoJzB4NTAnKV0oKSxfMHhiZWMwMzM9XzB4NTAxZGY0W18weDRiYmUxNF07XzB4YmVjMDMzP18weDU3ZWQwYVtfMHg1MTA4KCcweGEyJyldW18weDRiYmUxNF09XzB4YmVjMDMzOmRlbGV0ZSBfMHg1N2VkMGFbJ19maWxlc1dpdGhNZXNzYWdlcyddW18weDRiYmUxNF07fX0pLF9bXzB4NTEwOCgnMHgxMzQnKV0oXzB4MmEzYTU3KXx8dGhpc1tfMHg1MTA4KCcweDFjNycpXShfMHg1MTA4KCcweDVhZScpLHsnZG9jdW1lbnRzJzpfMHgyYTNhNTd9KTt2YXIgXzB4ZGZjZWNjPXRoaXNbXzB4NTEwOCgnMHg1MDcnKV07XzB4ZGZjZWNjJiZkZWxldGUgdGhpc1tfMHg1MTA4KCcweDUwNycpXSxfMHgzYzc1YzYmJnRoaXNbXzB4NTEwOCgnMHg1YWYnKV0oKSx0aGlzWydfZW1pdCddKF8weDUxMDgoJzB4N2ZiJykseyd0ZXN0UmVzdWx0c0NoYW5nZWQnOl8weGRmY2VjYywndGltZSc6XzB4MjQ5MGJhfSkscHJvY2Vzc1tfMHg1MTA4KCcweDcnKV1bXzB4NTEwOCgnMHg1JyldfHx0aGlzWydfZW1pdEZpbGVzTWVzc2FnZXMnXSgpO31lbHNle18weGQxNzgzZVsnX3dzcyddJiZfMHhkMTc4M2VbXzB4NTEwOCgnMHg0NWUnKV1bXzB4NTEwOCgnMHgxN2YnKV0oKTt9fWNhdGNoKF8weDM4ZDlhMyl7fXRyeXtpZihfMHg1MTA4KCcweDdmYycpIT09XzB4NTEwOCgnMHg3ZmMnKSl7dmFyIF8weDM2MjM1OT10aGlzO3JldHVybnsnbGluZXMnOl9bXzB4NTEwOCgnMHhkYScpXSh0aGlzW18weDUxMDgoJzB4MjAwJyldLGZ1bmN0aW9uKF8weDExZmFmNSl7cmV0dXJuIF8weDM2MjM1OVtfMHg1MTA4KCcweDFmNCcpXShfMHgxMWZhZjUpO30pLCdhbGxMaW5lcyc6ITB4MH07fWVsc2V7XzB4ZDE3ODNlW18weDUxMDgoJzB4Njc2JyldJiZfMHhkMTc4M2VbXzB4NTEwOCgnMHg2NzYnKV1bXzB4NTEwOCgnMHgxN2YnKV0oKTt9fWNhdGNoKF8weDljNWJjOSl7fX1lbHNle3JldHVybiB2b2lkIDB4MD09PV8weGQxNzgzZSYmKF8weGQxNzgzZT17fSksX1tfMHg1MTA4KCcweDY2JyldKHsncG9ydCc6dGhpc1tfMHg1MTA4KCcweDEzZScpXVtfMHg1MTA4KCcweGIzJyldLCdob3N0JzpfMHg1MTA4KCcweDE1ZicpfSxfMHhkMTc4M2UpO319LCdfY2FsY3VsYXRlTnVtYmVyT2ZQYXJhbGxlbFdvcmtlcnMnOmZ1bmN0aW9uKCl7dmFyIF8weGQxNzgzZT10aGlzO18weGQxNzgzZVsnX21heFdvcmtlcnMnXT1NYXRoW18weDUxMDgoJzB4NDgxJyldKDB4MSxfMHhkMTc4M2VbXzB4NTEwOCgnMHg3NDgnKV1bXzB4NTEwOCgnMHgxMTcnKV1bJ2luaXRpYWwnXXx8TWF0aFtfMHg1MTA4KCcweDQ4MScpXShfMHg1MjAyY2FbXzB4NTEwOCgnMHg3NGQnKV0oKVtfMHg1MTA4KCcweGJlJyldLTB4MiwweDIpKSxfMHhjODU4MjcmJiFfMHhkMTc4M2VbJ19vcHRzJ11bJ3dvcmtlcnMnXVtfMHg1MTA4KCcweDc0YycpXSYmXzB4NTEwOCgnMHg3NGUnKT09PV8weGQxNzgzZVtfMHg1MTA4KCcweDc0OCcpXVsnZW52J11bXzB4NTEwOCgnMHg3NGYnKV0mJihfMHhkMTc4M2VbJ19tYXhXb3JrZXJzJ109TWF0aFtfMHg1MTA4KCcweDc1MScpXSgweDEwLF8weGQxNzgzZVtfMHg1MTA4KCcweDc1MCcpXSkpLF8weGQxNzgzZVtfMHg1MTA4KCcweDc1NScpXT1NYXRoW18weDUxMDgoJzB4NDgxJyldKDB4MSxfMHhkMTc4M2VbXzB4NTEwOCgnMHg3NDgnKV1bJ3dvcmtlcnMnXVsncmVndWxhciddfHxNYXRoW18weDUxMDgoJzB4NDgxJyldKE1hdGhbJ2Zsb29yJ10oXzB4ZDE3ODNlWydfbWF4V29ya2VycyddLzB4MiksMHgyKSksXzB4MjUxZDZmKF8weDUxMDgoJzB4NzUzJyksXzB4ZDE3ODNlW18weDUxMDgoJzB4NzUwJyldLF8weGQxNzgzZVtfMHg1MTA4KCcweDc1NScpXSk7fX0sXzB4MjQ5MGJhW18weDUxMDgoJzB4MicpXT1fMHgyNDJlODc7fSx7Jy4vdXRpbHMnOjB4MWUsJ2h0dHAnOnZvaWQgMHgwLCdvcyc6dm9pZCAweDAsJ3BhdGgnOnZvaWQgMHgwLCd3cyc6dm9pZCAweDB9XSwzMDpbZnVuY3Rpb24oXzB4MmMwMjNkLF8weDE4ZDUxMCxfMHg1MDY1ZWYpe3ZhciBfMHgxYzUzYjE9dGhpcyYmdGhpc1tfMHg1MTA4KCcweDdmZCcpXXx8ZnVuY3Rpb24oKXtyZXR1cm4gXzB4MWM1M2IxPU9iamVjdFtfMHg1MTA4KCcweDdmZScpXXx8ZnVuY3Rpb24oXzB4MmMwMjNkKXtpZihfMHg1MTA4KCcweDdmZicpPT09XzB4NTEwOCgnMHg3ZmYnKSl7Zm9yKHZhciBfMHgxOGQ1MTAsXzB4NTA2NWVmPTB4MSxfMHgxYzUzYjE9YXJndW1lbnRzWydsZW5ndGgnXTtfMHg1MDY1ZWY8XzB4MWM1M2IxO18weDUwNjVlZisrKXtfMHgxOGQ1MTA9YXJndW1lbnRzW18weDUwNjVlZl07Zm9yKHZhciBfMHgxNDQxMTcgaW4gXzB4MThkNTEwKU9iamVjdFtfMHg1MTA4KCcweGFlJyldW18weDUxMDgoJzB4NjgnKV1bJ2NhbGwnXShfMHgxOGQ1MTAsXzB4MTQ0MTE3KSYmKF8weDJjMDIzZFtfMHgxNDQxMTddPV8weDE4ZDUxMFtfMHgxNDQxMTddKTt9cmV0dXJuIF8weDJjMDIzZDt9ZWxzZXtfMHg1MDY1ZWZbXzB4NTEwOCgnMHgxNTUnKV0oXzB4NTk0NDFmW18weDUxMDgoJzB4MTRmJyldLGZ1bmN0aW9uKCl7fSxfMHgyYzAyM2QpO319LF8weDFjNTNiMVtfMHg1MTA4KCcweDEwYScpXSh0aGlzLGFyZ3VtZW50cyk7fSxfMHgxNDQxMTc9XzB4MmMwMjNkKF8weDUxMDgoJzB4MzQnKSksXzB4MmQ4ZmXigIs4PV8weDJjMDIzZCgnZnMnKSxfMHg1OTQ0MWY9XzB4MmMwMjNkKCdtaW5pbWF0Y2gnKSxfMHgyMTMwNzk9XzB4MmMwMjNkKF8weDUxMDgoJzB4ODAwJykpW18weDUxMDgoJzB4ODAxJyldLF8weDFjNDFjND1fMHgyYzAyM2QoXzB4NTEwOCgnMHg4MDAnKSlbXzB4NTEwOCgnMHg4MDInKV0sXzB4NDg3YmI0PS9eXHMqKFwvXCpcKj8oLnxccj9cbikqP1wqXC8pLyxfMHgyODllZDU9L15ccyovLF8weDE2M2FlND0vW1x1MDAxYlx1MDA5Yl1bWygpIzs/XSooPzpbMC05XXsxLDR9KD86O1swLTldezAsNH0pKik/WzAtOUEtUFJaY2YtbnFyeT0+PF0vZyxfMHgyYTE4ODU9L1wvXCpbXHNcU10qP1wqXC98KFteXFw6XXxeKVwvXC8uKiQvZ20sXzB4ZjUzMDdmPS9maXRbXHNdKj9cKHxcLltcc10qP29ubHlbXHNdKj9cKC9nbSxfMHgxNGUxNWE9L1sjQF0gc291cmNlTWFwcGluZ1VSTD0oW15ccyciXSopLyxfMHg0NWIyNTk9UmVnRXhwKF8weDUxMDgoJzB4ODAzJykrXzB4MTRlMTVhWydzb3VyY2UnXStfMHg1MTA4KCcweDgwNCcpK18weDE0ZTE1YVtfMHg1MTA4KCcweDQwMycpXStfMHg1MTA4KCcweDgwNScpLCdnJyksXzB4N2ExOGYwPS9eZGF0YTphcHBsaWNhdGlvblwvanNvblteLF0rYmFzZTY0LC8sXzB4MTljYjI3PWZ1bmN0aW9uKF8weDJjMDIzZCxfMHgxOGQ1MTApe3JldHVybidqcyc9PT1fMHgyYzAyM2R8fF8weDUxMDgoJzB4MzknKT09PV8weDJjMDIzZHx8XzB4NTEwOCgnMHhlOScpPT09XzB4MmMwMjNkfHxfMHg1MTA4KCcweDgwNicpPT09XzB4MmMwMjNkfHwnbWpzJz09PV8weDJjMDIzZHx8XzB4MThkNTEwJiZfMHgxOGQ1MTBbXzB4NTEwOCgnMHgyM2EnKV0oZnVuY3Rpb24oXzB4MThkNTEwKXtyZXR1cm4gXzB4MmMwMjNkPT09XzB4MThkNTEwO30pO30sXzB4MmIzNjFhPWZ1bmN0aW9uKF8weDJjMDIzZCl7cmV0dXJuJ3RzJz09PV8weDJjMDIzZHx8XzB4NTEwOCgnMHg4MDcnKT09PV8weDJjMDIzZDt9LF8weDI5MGZhMj1mdW5jdGlvbihfMHgyYzAyM2Qpe2lmKCdUc3BWaCchPT1fMHg1MTA4KCcweDgwOCcpKXtyZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24oXzB4NDdjN2EyKXtyZXR1cm4gc2V0VGltZW91dChfMHg0N2M3YTIsXzB4MmMwMjNkKTt9KTt9ZWxzZXtyZXR1cm4gXzB4NTEwOCgnMHg4MDknKT09PV8weDJjMDIzZDt9fSxfMHg0NmIxYzE9ZnVuY3Rpb24oXzB4MmMwMjNkLF8weDE4ZDUxMCl7cmV0dXJuJ2NvZmZlZSc9PT1fMHgyYzAyM2R8fC9cLihsaXRjb2ZmZWV8Y29mZmVlXC5tZCkkL1tfMHg1MTA4KCcweDcxJyldKF8weDE4ZDUxMHx8JycpO307XzB4MThkNTEwW18weDUxMDgoJzB4MicpXT17J1NvdXJjZU1hcENvbnN1bWVyJzpfMHgyMTMwNzksJ3JhbmRvbUlkJzpmdW5jdGlvbigpe2lmKF8weDUxMDgoJzB4ODBhJyk9PT0nWENmVHQnKXtyZXR1cm4gTWF0aFsncmFuZG9tJ10oKVtfMHg1MTA4KCcweDFmNycpXSgweDI0KVtfMHg1MTA4KCcweDMzNicpXSgweDIsMHg1KTt9ZWxzZXtyZXR1cm4gdGhpc1snX2ZzJ11bXzB4NTEwOCgnMHgxM2QnKV0oKSx0aGlzW18weDUxMDgoJzB4OWUnKV1bXzB4NTEwOCgnMHgxM2QnKV0oXzB4MmMwMjNkKTt9fSwnbm9vcFRydWUnOmZ1bmN0aW9uKCl7aWYoXzB4NTEwOCgnMHg4MGInKSE9PV8weDUxMDgoJzB4ODBiJykpe3ZhciBfMHgyNDFlMWQ9eydwYXRoJzpfMHgxOGQ1MTB9O3JldHVybiBfMHgyYzAyM2RbXzB4NTEwOCgnMHgzZDgnKV0oKT8oXzB4MjQxZTFkW18weDUxMDgoJzB4MjNiJyldPV8weDJjMDIzZFsncmFuZ2UnXSgpW18weDUxMDgoJzB4MWZmJyldKCksXzB4MjQxZTFkWydjb2x1bW4nXT1fMHgyYzAyM2RbXzB4NTEwOCgnMHgzZDgnKV0oKVsnc3RhcnRDb2x1bW4nXSgpKTpfMHgy4oCLYzAyM2RbXzB4NTEwOCgnMHgyM2InKV0oKSYmKF8weDI0MWUxZFtfMHg1MTA4KCcweDIzYicpXT1fMHgyYzAyM2RbXzB4NTEwOCgnMHgyM2InKV0oKSksXzB4MjQxZTFkW18weDUxMDgoJzB4M2QzJyldPV8weDJjMDIzZFtfMHg1MTA4KCcweDNkMycpXSgpLF8weDI0MWUxZDt9ZWxzZXtyZXR1cm4hMHgwO319LCdub29wVHJ1ZVByb21pc2UnOmZ1bmN0aW9uKCl7aWYoXzB4NTEwOCgnMHg4MGMnKT09PV8weDUxMDgoJzB4ODBkJykpe18weDJjMDIzZFtfMHg1MTA4KCcweDEzOCcpXVtfMHg1MTA4KCcweDZkMScpXVtfMHg1MTA4KCcweDQ5NicpXShfMHg1MTA4KCcweDFlZicpKSxfMHgyYzAyM2RbXzB4NTEwOCgnMHgxMzgnKV1bJ3N0ZGVyciddW18weDUxMDgoJzB4NDk2JyldKF8weDUxMDgoJzB4MWVmJykpO31lbHNle3JldHVybiBRWydmY2FsbCddKHRoaXNbXzB4NTEwOCgnMHg4MGUnKV0pO319LCdpc1BhdGNoJzpmdW5jdGlvbihfMHgyYzAyM2Qpe3JldHVybiBfMHgyYzAyM2QmJl8weDJjMDIzZFtfMHg1MTA4KCcweGJlJyldPjB4MiYmJ0AnPT09XzB4MmMwMjNkWzB4MF0mJidAJz09PV8weDJjMDIzZFsweDFdO30sJ2lzTGV2ZWxVcFJlbGF0aXZlUGF0aCc6ZnVuY3Rpb24oXzB4MmMwMjNkKXtpZihfMHg1MTA4KCcweDgwZicpPT09XzB4NTEwOCgnMHg4MGYnKSl7cmV0dXJuIF8weDJjMDIzZCYmJy4nPT09XzB4MmMwMjNkWzB4MF0mJicuJz09PV8weDJjMDIz4oCLZFsweDFdO31lbHNle3JldHVybiBfMHgyYzAyM2RbJ2FkZHJlc3MnXTt9fSwnZG9jQmxvY2tDb21tZW50JzpmdW5jdGlvbihfMHgyYzAyM2Qpe3ZhciBfMHgxOGQ1MTA9XzB4MmMwMjNkW18weDUxMDgoJzB4NTY1JyldKF8weDQ4N2JiNCk7cmV0dXJuIF8weDE4ZDUxMD9fMHgxOGQ1MTBbMHgwXVtfMHg1MTA4KCcweGJmJyldKF8weDI4OWVkNSwnJyl8fCcnOicnO30sJ25vcm1hbGl6ZVBhdGgnOmZ1bmN0aW9uKF8weDJjMDIzZCl7cmV0dXJuIF8weDJjMDIzZD9fMHgyYzAyM2RbXzB4NTEwOCgnMHhiZicpXSgnd2luMzInPT09cHJvY2Vzc1tfMHg1MTA4KCcweDMwMScpXT8nZmlsZTovLy8nOidmaWxlOi8vJywnJylbXzB4NTEwOCgnMHgxMjUnKV0oXzB4MTQ0MTE3W18weDUxMDgoJzB4ODgnKV0pW18weDUxMDgoJzB4ODInKV0oJy8nKTpfMHgyYzAyM2Q7fSwncGxhdGZvcm1EZXBlbmRlbnRQYXRoJzpmdW5jdGlvbihfMHgyYzAyM2Qpe2lmKCdOd2xWUic9PT1fMHg1MTA4KCcweDgxMCcpKXtyZXR1cm4hXzB4MmMwMjNkfHwnd2luMzInIT09cHJvY2Vzc1tfMHg1MTA4KCcweDMwMScpXXx8fl8weDJjMDIzZFtfMHg1MTA4KCcweDUxJyldKF8weDE0NDExN1snc2VwJ10pP18weDJjMDIzZDpfMHgyYzAyM2RbXzB4NTEwOCgnMHgxMjUnKV0oJy8nKVsnam9pbiddKF8weDE0NDExN1tfMHg1MTA4KCcweDg4JyldKTt9ZWxzZXtfMHgyYzAyM2RbXzB4NTEwOCgnMHgxMGEnKV0obnVsbCxbXzB4MThkNTEwW18weDUxMDgoJzB4MWVmJyldLF8weDE4ZDUxMFsnc291cmNlJ11dKTt9fSwnZ2V0U291cmNlTWFwRnJvbUNvZGUnOmZ1bmN0aW9uKF8weDJjMDIzZCl7XzB4NDViMjU5W18weDUxMDgoJzB4ODExJyldPTB4MDtmb3IodmFyIF8weDE4ZDUxMDtudWxsIT09KF8weDE4ZDUxMD1fMHg0NWIyNTlbXzB4NTEwOCgnMHg1MDInKV0oXzB4MmMwMjNkKSk7KXt2YXIgXzB4NTA2NWVmPV8weDE4ZDUxMD9fMHgxOGQ1MTBbMHgxXXx8XzB4MThkNTEwWzB4Ml18fCcnOm51bGw7aWYoXzB4NTA2NWVmJiZfMHg3YTE4ZjBbXzB4NTEwOCgnMHg3MScpXShfMHg1MDY1ZWYpKXt2YXIgXzB4MWM1M2IxPV8weDUwNjVlZltfMHg1MTA4KCcweDMzOCcpXShfMHg1MDY1ZWZbXzB4NTEwOCgnMHg1MScpXSgnLCcpKzB4MSk7cmV0dXJuIEJ1ZmZlclsnZnJvbSddKF8weDFjNTNiMSxfMHg1MTA4KCcweDI4NCcpKVtfMHg1MTA4KCcweDFmNycpXSgpO319fSwncGF0aE1hdGNoZXNQYXR0ZXJuJzpmdW5jdGlvbihfMHgxOGQ1MTAsXzB4NTA2NWVmLF8weDFjNTNiMSl7aWYoXzB4MThkNTEwKXtpZihfMHg1MTA4KCcweDgxMicpIT09XzB4NTEwOCgnMHg4MTMnKSl7aWYoXzB4NTEwOCgnMHgzM2QnKT09dHlwZW9mIF8weDUwNjVlZil7aWYoIV8weDFjNTNiMXx8IV8weDFjNTNiMVtfMHg1MTA4KCcweDRkZicpXSlyZXR1cm4gXzB4NTk0NDFmKF8weDE4ZDUxMCxfMHg1MDY1ZWYsXzB4MWM1M2IxKTt2YXIgXzB4MTQ0MTE3PV8weDJjMDIzZChfMHg1MTA4KCcweDRkZicpKVtfMHg1MTA4KCcweDZmMicpXTtyZXR1cm4gXzB4MTQ0MTE3KF8weDE4ZDUxMCxfMHg1MDY1ZWYseydkb3QnOiEweDB9KTt9cmV0dXJuKHRoaXNbXzB4NTEwOCgnMHg2ZjMnKV0oXzB4MWM1M2IxJiZfMHgxYzUzYjFbXzB4NTEwOCgnMHg4MTQnKV0/Jyc6Jy4vJykrdGhpc1tfMHg1MTA4KCcweDZmMycpXShfMHgxOGQ1MTApKVtfMHg1MTA4KCcweDU2NScpXShfMHjigIs1MDY1ZWYpO31lbHNle3ZhciBfMHg0ZjJmYmI9XzB4MThkNTEwWzB4MV0sXzB4M2MwMTJiPV8weDE4ZDUxMFsweDJdO2lmKGVuY29kZVVSSUNvbXBvbmVudChfMHg0ZjJmYmIpPT09XzB4NGYyZmJiJiZlbmNvZGVVUklDb21wb25lbnQoXzB4M2MwMTJiKT09PV8weDNjMDEyYilyZXR1cm4gXzB4MmMwMjNkO319fSwnZXNjYXBlUGF0aEZvclJlZ2V4JzpmdW5jdGlvbihfMHgyYzAyM2Qpe3JldHVybidceDVjJz09PV8weDE0NDExN1tfMHg1MTA4KCcweDg4JyldJiYoXzB4MmMwMjNkPV8weDJjMDIzZFtfMHg1MTA4KCcweGJmJyldKC9cXC9nLCcvJykpLHRoaXNbXzB4NTEwOCgnMHg4MTUnKV0odGhpc1tfMHg1MTA4KCcweDgxNicpXShfMHgyYzAyM2QpKTt9LCdfZXNjYXBlU3RyRm9yUmVnZXgnOmZ1bmN0aW9uKF8weDJjMDIzZCl7aWYoXzB4NTEwOCgnMHg4MTcnKSE9PV8weDUxMDgoJzB4ODE4Jykpe3JldHVybiBfMHgyYzAyM2RbXzB4NTEwOCgnMHhiZicpXSgvW1tcXXt9KCkqKz8uXFxeJHxdL2csJ1x4NWMkJicpO31lbHNle18weDIxMzA3OShfMHg1MTA4KCcweDUyNScpLF8weDE4ZDUxMCxfMHg1MDY1ZWZbXzB4NTEwOCgnMHhhOCcpXSk7fX0sJ3JlcGxhY2VQYXRoU2VwRm9yUmVnZXgnOmZ1bmN0aW9uKF8weDJjMDIzZCl7cmV0dXJuJ1x4NWMnPT09XzB4MTQ0MTE3W18weDUxMDgoJzB4ODgnKV0/XzB4MmMwMjNkW18weDUxMDgoJzB4YmYnKV0oLyhcL3woLik/XFwoPyFbW1xde30oKSorPy5eJHxcXF0pKS9nLGZ1bmN0aW9uKF8weDJjMDIzZCxfMHgxOGQ1MTAsXzB4NTA2NWVmKXtyZXR1cm4gXzB4NTA2NWVmJiYnXHg1YychPT1fMHg1MDY1ZWY/XzB4NTA2NWVmKydceDVjXHg1Yyc6J1x4NWNceDVjJzt9KTpfMHgyYzAyM2Q7fSwnZGlzcGxheVRlc3ROYW1lJzpmdW5jdGlvbihfMHgyYzAyM2Qpe3JldHVybiBfMHgyYzAyM2RbXzB4NTEwOCgnMHhiZicpXSgvXHI/XG58XHIvZywnXHgyMCcpWydyZXBsYWNlJ10oL1xzXHMrL2csJ1x4MjAnKTt9LCd1cGRhdGVGaWxlTWFwJzpmdW5jdGlvbihfMHgyYzAyM2QsXzB4MThkNTEwKXtfMHgyYzAyM2Q9XzB4MmMwMjNkfHx7fTt2YXIgXzB4NTA2NWVmPV9bXzB4NTEwOCgnMHg2NicpXSh7fSxfMHgyYzAyM2QpO3JldHVybiBfW18weDUxMDgoJzB4MTM1JyldKF8weDE4ZDUxMCxmdW5jdGlvbihfMHgyYzAyM2Qpe3ZhciBfMHgxOGQ1MTA9bmV3IF8weDIxMzA3OShfMHgyYzAyM2QpLF8weDFjNTNiMT17fSxfMHgxNDQxMTc9X1tfMHg1MTA4KCcweDEzNCcpXShfMHg1MDY1ZWYpLF8weDJkOGZlOD1fWydleHRlbmQnXSh7fSxfMHg1MDY1ZWYpO18weDE4ZDUxMFsnZWFjaE1hcHBpbmcnXShmdW5jdGlvbihfMHgyYzAyM2Qpe2lmKF8weDUxMDgoJzB4ODE5JykhPT1fMHg1MTA4KCcweDgxOScpKXtkZWxldGUgXzB4MmMwMjNkW18weDUxMDgoJzB4NjJjJyldLF8weDUwNjVlZltfMHg1MTA4KCcweDY1YicpXShfMHgyYzAyM2QpO31lbHNle2lmKF8weDJjMDIzZFsnZ2VuZXJhdGVkTGluZSddJiZfMHgyYzAyM2RbXzB4NTEwOCgnMHg0YjgnKV0pe3ZhciBfMHgxOGQ1MTA9XzB4MWM1M2IxW18weDJjMDIzZFtfMHg1MTA4KCcweDRiYScpXV0sXzB4NTk0NDFmPV8weDJkOGZlOFtfMHgyYzAyM2RbJ29yaWdpbmFsTGluZSddXTtpZighXzB4MThkNTEwfHxfMHgyYzAyM2RbXzB4NTEwOCgnMHgyNWUnKV0pe3ZhciBfMHgyMTMwNzk9XzB4NTk0NDFmfHxfMHgxOGQ1MTA7XzB4MTQ0MTE3P18weDFjNTNiMVtfMHgyYzAyM2RbXzB4NTEwOCgnMHg0YmEnKV1dPV8weDJjMDIzZFtfMHg1MTA4KCcweDRiOCcpXTpfMHgyMTMwNzkmJihfMHgxYzUzYjFbXzB4MmMwMjNkW18weDUxMDgoJzB4NGJhJyldXT1fMHgyMTMwNzkpLCdfX2F3YWl0ZXInPT09XzB4MmMwMjNkW18weDUxMDgoJzB4MjVlJyldJiZkZWxldGUgXzB4MWM1M2IxW18weDJjMDIzZFtfMHg1MTA4KCcweDRiYScpXV07fV8weDU5NDQxZiYmZGVsZXRlIF8weDUwNjVlZltfMHgyYzAyM2RbJ29yaWdpbmFsTGluZSddXTt9fX0pLF8weDUwNjVlZj1fW18weDUxMDgoJzB4NjYnKV0oe30sXzB4NTA2NWVmLF8weDFjNTNiMSk7fSksXzB4NTA2NWVmO30sJ2Zvcm1hdEluc3RydW1lbnRhdGlvbkVycm9yJzpmdW5jdGlvbihfMHgyYzAyM2QsXzB4MThkNTEwLF8weDUwNjVlZil7dmFyIF8weDFjNTNiMT0oXzB4MmMwMjNkJiYoXzB4MmMwMjNkW18weDUxMDgoJzB4MTlkJyldfHxfMHgyYzAyM2RbXzB4NTEwOCgnMHhhOCcpXSkpKycnLF8weDE0NDExNz10aGlzW18weDUxMDgoJzB4MzlkJyldKF8weDFjNTNiMSksXzB4MmQ4ZmU4PV8weDE0NDExN1sweDBdLF8weDU5NDQxZj1fMHgyZDhmZThbJ21hdGNoJ10oL15TeW50YXhFcnJvci4qXCgoXGQrKTooXGQrKVwpJC8pO3JldHVybiBfMHg1OTQ0MWYmJihfMHgxNDQxMTc9W3RoaXNbXzB4NTEwOCgnMHg4MWEnKV0oXzB4MThkNTEwLHBhcnNlSW50KF8weDU5NDQxZlsweDFdLDB4YSkscGFyc2VJbnQoXzB4NTk0NDFmWzB4Ml0sMHhhKSsweDEsXzB4MmQ4ZmU4KV0pLEVycm9yKF8weDUxMDgoJzB4ODFiJykrXzB4NTA2NWVmKydceDBhJytfMHgxNDQxMTdbJ2pvaW4nXSgnXHgwYScpKTt9LCdjb21iaW5lU291cmNlTWFwcyc6ZnVuY3Rpb24oXzB4MmMwMjNkLF8weDE4ZDUxMCl7aWYoIV8weDJjMDIzZClyZXR1cm4gXzB4MThkNTEwO2lmKCFfMHgxOGQ1MTApcmV0dXJuIF8weDJjMDIzZDt2YXIgXzB4NTA2NWVmPW5ldyBfMHgyMTMwNzkoXzB4MThkNTEwKSxfMHgxYzUzYjE9bmV3IF8weDIxMzA3OShfMHgyYzAyM2QpLF8weDE0NDExNz1uZXcgXzB4MWM0MWM0KCk7XzB4NTA2NWVmW18weDUxMDgoJzB4ODFjJyldKGZ1bmN0aW9uKF8weDJjMDIzZCl7aWYobnVsbCE9XzB4MmMwMjNkW18weDUxMDgoJzB4NGI4JyldKXtpZihfMHg1MTA4KCcweDgxZCcpIT09XzB4NTEwOCgnMHg4MWUnKSl7dmFyIF8weDE4ZDUxMD1fMHgxYzUzYjFbXzB4NTEwOCgnMHg0YjcnKV0oeydsaW5lJzpfMHgyYzAyM2RbXzB4NTEwOCgnMHg0YjgnKV0sJ2NvbHVtbic6XzB4MmMwMjNkW18weDUxMDgoJzB4ODFmJyldfSk7bnVsbCE9XzB4MThkNTEwW18weDUxMDgoJzB4NDAzJyldJiZfMHgxNDQxMTdbXzB4NTEwOCgnMHg0YjknKV0oeydvcmlnaW5hbCc6eydsaW5lJzpfMHgxOGQ1MTBbXzB4NTEwOCgnMHgyM2InKV0sJ2NvbHVtbic6XzB4MThkNTEwW18weDUxMDgoJzB4MmUxJyldfSwnZ2VuZXJhdGVkJzp7J2xpbmUnOl8weDJjMDIzZFtfMHg1MTA4KCcweDRiYScpXSwnY29sdW1uJzpfMHgyYzAyM2RbXzB4NTEwOCgnMHg4MjAnKV19LCdzb3VyY2UnOl8weDE4ZDUxMFtfMHg1MTA4KCcweDQwMycpXSwnbmFtZSc6XzB4MThkNTEwW18weDUxMDgoJzB4MjVlJyldfHxfMHgyYzAyM2RbJ25hbWUnXX0pO31lbHNle3JldHVybiBfMHg1MTA4KCcweGZkJykrXzB4MmMwMjNkK18weDUxMDgoJzB4ZmUnKStfMHgxOGQ1MTA7fX19KTt2YXIgXzB4MmQ4ZmU4PVtfMHgxYzUzYjEsXzB4NTA2NWVmXTtyZXR1cm4gXzB4MmQ4ZmU4W18weDUxMDgoJzB4NjAzJyldKGZ1bmN0aW9uKF8weDJjMDIzZCl7aWYoJ3BmVllJJyE9PV8weDUxMDgoJzB4ODIxJykpe3JldHVybiBfW18weDUxMDgoJzB4ZGEnKV0odGhpc1snX2NvdmVyZWRGaWxlcyddLGZ1bmN0aW9uKF8weDI0MzIxMCl7cmV0dXJuIF8weDI0MzIxMDt9KTt9ZWxzZXtfMHgyYzAyM2RbXzB4NTEwOCgnMHg0MDQnKV1bXzB4NTEwOCgnMHg2MDMnKV0oZnVuY3Rpb24oXzB4MThkNTEwKXtfMHgxNDQxMTdbXzB4NTEwOCgnMHgyMjInKV1bXzB4NTEwOCgnMHg0Y2YnKV0oXzB4MThkNTEwKTt2YXIgXzB4NTA2NWVmPV8weDJjMDIzZFtfMHg1MTA4KCcweDgyMicpXShfMHgxOGQ1MTApO251bGwhPV8weDUwNjVlZiYmXzB4MTQ0MTE3W18weDUxMDgoJzB4ODIzJyldKF8weDE4ZDUxMCxfMHg1MDY1ZWYpO30pO319KSxfMHgxNDQxMTdbJ19zb3VyY2VSb290J109XzB4MmMwMjNkW18weDUxMDgoJzB4ODI0JyldLF8weDE0NDExN1snX2ZpbGUnXT1fMHgyYzAyM2RbJ2ZpbGUnXSxKU09OW18weDUxMDgoJzB4NGUnKV0oXzB4MTQ0MTE3W18weDUxMDgoJzB4MWY3JyldKCkpO30sJ21hcFRleHRQb3NpdGlvbic6ZnVuY3Rpb24oXzB4MmMwMjNkLF8weDE4ZDUxMCl7dmFyIF8weDUwNjVlZjtpZihfMHgyYzAyM2QpaWYoXzB4MThkNTEwKXtpZignb3JiYnonPT09XzB4NTEwOCgnMHg4MjUnKSl7dmFyIF8weDFjNTNiMT1uZXcgXzB4MjEzMDc5KF8weDE4ZDUxMCk7XzB4MmMwMjNkWydzb3VyY2UnXT1fMHgxOGQ1MTBbJ3NvdXJjZXMnXSYmXzB4MThkNTEwW18weDUxMDgoJzB4NDA0JyldWzB4MF18fCcuJyxfMHgyYzAyM2RbXzB4NTEwOCgnMHg0MDUnKV09MHgyLF8weDUwNjVlZj1fMHgxYzUzYjFbXzB4NTEwOCgnMHg0MDYnKV0oXzB4MmMwMjNkKTt9ZWxzZXtyZXR1cm4gXzB4MWM1M2IxW18weDUxMDgoJzB4MzliJyldKF8weDJjMDIzZCxfMHgxOGQ1MTApO319ZWxzZSBfMHg1MDY1ZWY9XzB4MmMwMjNkO3JldHVybiBfMHg1MDY1ZWY7fSwndGV4dEluZGV4UG9zaXRpb24nOmZ1bmN0aW9uKF8weDJjMDIzZCxfMHgxOGQ1MTApe2lmKF8weDUxMDgoJzB4ODI2JykhPT0nRmtrZG8nKXtqWydpZCddPV8weDFjNTNiMVtfMHg1MTA4KCcweDI2MycpXShFKTt9ZWxzZXt2YXIgXzB4NTA2NWVmPXRoaXNbXzB4NTEwOCgnMHgzOWQnKV0oXzB4MmMwMjNkLF8weDE4ZDUxMCk7cmV0dXJueydsaW5lJzpfMHg1MDY1ZWZbXzB4NTEwOCgnMHhiZScpXSwnY29sdW1uJzpfMHg1MDY1ZWZbXzB4NTA2NWVmW18weDUxMDgoJzB4YmUnKV0tMHgxXVtfMHg1MTA4KCcweGJlJyldfTt9fSwndGV4dExpbmVzJzpmdW5jdGlvbihfMHgyYzAyM2QsXzB4MThkNTEwLF8weDUwNjVlZil7cmV0dXJuIF8weDJjMDIzZD1fW18weDUxMDgoJzB4MWU0JyldKF8weDE4ZDUxMCk/XzB4MmMwMjNkOl8weDJjMDIzZFtfMHg1MTA4KCcweDMzNicpXSgweDAsXzB4MThkNTEwKSxfMHgyYzAyM2RbXzB4NTEwOCgnMHgxMjUnKV0oX1tfMHg1MTA4KCcweDFlNCcpXShfMHg1MDY1ZWYpPy9cclxufFxyfFxuLzpfMHg1MDY1ZWYpO30sJ3ZlcmlmeUxvY2FsT3JpZ2luJzpmdW5jdGlvbihfMHgxOGQ1MTAsXzB4NTA2NWVmKXtpZighXzB4MThkNTEwKXJldHVybiEweDA7dmFyIF8weDFjNTNiMT0hMHgxO3RyeXtpZihfMHg1MTA4KCcweDgyNycpIT09XzB4NTEwOCgnMHg4MjcnKSl7XzB4MmMwMjNkW18weDUxMDgoJzB4NDJlJyldKCk7fWVsc2V7dmFyIF8weDE0NDExNz1fMHgyYzAyM2QoJ3VybCcpWydwYXJzZSddKF8weDE4ZDUxMClbXzB4NTEwOCgnMHg1ZGInKV07XzB4MWM1M2IxPV8weDUxMDgoJzB4ODI4Jyk9PT1fMHgxNDQxMTd8fCcwLjAuMC4wJz09PV8weDE0NDExN3x8XzB4NTEwOCgnMHgxNWYnKT09PV8weDE0NDExN3x8XzB4NTEwOCgnMHgzY2MnKT09PV8weDE0NDExNzt9fWNhdGNoKF8weDFjZTMxMil7fXJldHVybiBfMHgxYzUzYjF8fF8weDUwNjVlZnx8Y29uc29sZVtfMHg1MTA4KCcweDI0JyldKF8weDUxMDgoJzB4ODI5JykrXzB4MThkNTEwKSxfMHgxYzUzYjE7fSwncGF0Y2hNb2R1bGUnOmZ1bmN0aW9uKF8weDE4ZDUxMCxfMHg1MDY1ZWYpe3ZhciBfMHgxYzUzYjE9XzB4MmMwMjNkKF8weDUxMDgoJzB4NWMwJykpWydNb2R1bGUnXVtfMHg1MTA4KCcweGFlJyldLF8weDE0NDExNz1fMHgxYzUzYjFbJ3JlcXVpcmUnXTtfMHgxYzUzYjFbXzB4NTEwOCgnMHg1YzInKV09ZnVuY3Rpb24oXzB4MmMwMjNkKXtpZihfMHg1MTA4KCcweDgyYScpIT09XzB4NTEwOCgnMHg4MmInKSl7cmV0dXJuIF8weDJjMDIzZD09PV8weDE4ZDUxMD9fMHg1MDY1ZWYoXzB4MTQ0MTE3W18weDUxMDgoJzB4MTE1JyldKHRoaXMpKTpfMHgxNDQxMTdbJ2NhbGwnXSh0aGlzLF8weDJjMDIzZCk7fWVsc2V7dmFyIF8weDRlOGQ3ZT1fMHgyYzAyM2QoXzB4NTEwOCgnMHgxZmEnKSk7XzB4NTA2NWVmPW5ldyBfMHg0ZThkN2UoeydmaWxlSWRCeVBhdGgnOmZ1bmN0aW9uKF8weDVkMDFhOSl7cmV0dXJuIF8weDE4ZDUxMFsnaWRCeVBhdGgnXShfMHg1ZDAxYTkpO30sJ3Byb2plY3QnOl8weDE4ZDUxMH0pO319O30sJ3BhdGNoTW9kdWxlc0NvZGUnOmZ1bmN0aW9uKF8weDJjMDIzZCxfMHgxOGQ1MTApe2lmKF8weDUxMDgoJzB4ODJjJyk9PT1fMHg1MTA4KCcweDgyYycpKXt2YXIgXzB4NTA2NWVmPV8weDJkOGZlOFtfMHg1MTA4KCcweDgxJyldO18weDJkOGZlOFtfMHg1MTA4KCcweDgxJyldPWZ1bmN0aW9uKF8weDFjNTNiMSl7dmFyIF8weDE0NDExNz1fMHgxYzUzYjFbJ3JlcGxhY2UnXSgvXFwvZywnLycpLF8weDJkOGZlOD1fMHg1MDY1ZWZbXzB4NTEwOCgnMHgxMGEnKV0odGhpcyxhcmd1bWVudHMpO3JldHVybiBfMHgyYzAyM2RbXzB4NTEwOCgnMHg4MmQnKV0oZnVuY3Rpb24oXzB4MmMwMjNkKXtpZihfMHg1MTA4KCcweDgyZScpIT09XzB4NTEwOCgnMHg4MmUnKSl7cmV0dXJuJ3RzJz09PV8weDJjMDIzZHx8XzB4NTEwOCgnMHg4MDcnKT09PV8weDJjMDIzZDt9ZWxzZXtpZihfMHgyYzAyM2RbXzB4NTEwOCgnMHgxY2InKV1bXzB4NTEwOCgnMHg4MmQnKV0oZnVuY3Rpb24oXzB4MmMwMjNkKXtpZignTVVRblknIT09XzB4NTEwOCgnMHg4MmYnKSl7cmV0dXJufl8weDE0NDExN1tfMHg1MTA4KCcweDUxJyldKF8weDJjMDIzZCk7fWVsc2V7aWYoXzB4NTA2NWVmW18weDUxMDgoJzB4NDBjJyldKF8weDJjMDIzZCksIV8weDUwNjVlZltfMHg1MTA4KCcweDFmZScpXSgpKXt2YXIgXzB4MTFhNGZhPV8weDUwNjVlZltfMHg1MTA4KCcweDQ5ZCcpXSgpO18weDE4ZDUxMFtfMHgxMWE0ZmFbJ2tleSddKCldPV8weDExYTRmYTt9fX0pKXJldHVybiBfMHgyZDhmZTg9XzB4MmQ4ZmU4Wyd0b1N0cmluZyddKCksXzB4MmMwMjNkW18weDUxMDgoJzB4ODMwJyldWydmb3JFYWNoJ10oZnVuY3Rpb24oXzB4NTA2NWVmKXt2YXIgXzB4MWM1M2IxPV8weDJkOGZlODtfMHgyZDhmZTg9XzB4MmQ4ZmU4W18weDUxMDgoJzB4YmYnKV0oXzB4NTA2NWVmWydmcm9tJ10sXzB4NTA2NWVmWyd0byddKSxfMHgyZDhmZTg9PT1fMHgxYzUzYjEmJmNvbnNvbGVbXzB4NTEwOCgnMHgxNzInKV0oXzB4MThkNTEwKydceDIwKCcrXzB4MmMwMjNkW18weDUxMDgoJzB4MWNiJyldW18weDUxMDgoJzB4ODInKV0oJyxceDIwJykrJyknKTt9KSwhMHgwO319KSxfMHgyZDhmZTg7fTt9ZWxzZXtyZXR1cm4gdGhpc1snX2xvZyddO319LCdyZXF1aXJlTW9kdWxlRnJvbSc6ZnVuY3Rpb24oXzB4MThkNTEwLF8weDUwNjVlZil7aWYoXzB4NTEwOCgnMHg4MzEnKSE9PV8weDUxMDgoJzB4ODMyJykpe3RyeXtyZXR1cm4gXzB4MmMwMjNkKF8weDE0NDExN1tfMHg1MTA4KCcweDgyJyldKF8weDE4ZDUxMCxfMHg1MTA4KCcweDRjYicpLF8weDUwNjVlZikpO31jYXRjaChfMHgzOWMyMTcpe3ZhciBfMHgyZDhmZTg9XzB4MmMwMjNkKF8weDUxMDgoJzB4NWMwJykpLF8weDU5NDQxZj1uZXcgXzB4MmQ4ZmU4KCcuJyxudWxsKTtyZXR1cm4gXzB4NTk0NDFmW18weDUxMDgoJzB4MmQzJyldPV8weDE0NDExN1tfMHg1MTA4KCcweDgyJyldKF8weDE4ZDUxMCxfMHg1MTA4KCcweDJkNCcpKSxfMHg1OTQ0MWZbXzB4NTEwOCgnMHg0MTYnKV09XzB4MmQ4ZmU4Wydfbm9kZU1vZHVsZVBhdGhzJ10oXzB4MThkNTEwKSxfMHgyZDhmZThbXzB4NTEwOCgnMHgyZDUnKV0oXzB4NTA2NWVmLF8weDU5NDQxZiwhMHgxKTt9fWVsc2V7cmV0dXJuIF8weDJjMDIzZD9fMHgyYzAyM2RbXzB4NTEwOCgnMHhiZicpXShfMHg1MTA4KCcweDU1NycpPT09cHJvY2Vzc1tfMHg1MTA4KCcweDMwMScpXT9fMHg1MTA4KCcweDgzMycpOl8weDUxMDgoJzB4ODM0JyksJycpWydzcGxpdCddKF8weDE0NDExN1tfMHg1MTA4KCcweDg4JyldKVtfMHg1MTA4KCcweDgyJyldKCcvJyk6XzB4MmMwMjNkO319LCdyZXNvbHZlTW9kdWxlUGF0aEZyb20nOmZ1bmN0aW9uKF8weDE4ZDUxMCxfMHg1MDY1ZWYpe2lmKF8weDUxMDgoJzB4ODM1Jyk9PT1fMHg1MTA4KCcweDgzNScpKXt2YXIgXzB4MWM1M2IxPV8weDJjMDIzZChfMHg1MTA4KCcweDVjMCcpKSxfMHgyZDhmZTg9bmV3IF8weDFjNTNiMSgnLicsbnVsbCk7cmV0dXJuIF8weDJkOGZlOFtfMHg1MTA4KCcweDJkMycpXT1fMHgxNDQxMTdbXzB4NTEwOCgnMHg4MicpXShfMHgxOGQ1MTAsXzB4NTEwOCgnMHgyZDQnKSksXzB4MmQ4ZmU4W18weDUxMDgoJzB4NDE2JyldPV8weDFjNTNiMVtfMHg1MTA4KCcweDFkMycpXShfMHgxOGQ1MTApLF8weDFjNTNiMVtfMHg1MTA4KCcweDgzNicpXShfMHg1MDY1ZWYsXzB4MmQ4ZmU4LCEweDEpO31lbHNle18weDFjNTNiMVtfMHg1MTA4KCcweGU1JyldPV8weDFjNTNiMVtfMHg1MTA4KCcweGU1JyldfHxfMHgxOGQ1MTBbXzB4NTEwOCgnMHhlNicpXTt2YXIgXzB4M2QzZmVmPV8weDE4ZDUxMFsndG1wJ10sXzB4NTJjNzhmPV8weDE4ZDUxMFsndHMnXSsoXzB4M2QzZmVmP18weDE4ZDUxMFtfMHg1MTA4KCcweGJiJyldP18weDFjNTNiMVsnX3dhbGxhYnlGaWxlSWRQcmVmaXgnXStfMHgxOGQ1MTBbXzB4NTEwOCgnMHhiYicpXTonJzpfMHgxYzUzYjFbXzB4NTEwOCgnMHhlNycpXStfMHgxOGQ1MTBbJ2lkJ10pO3N3aXRjaChfMHgxOGQ1MTBbXzB4NTEwOCgnMHg2OScpXSl7Y2FzZSdqcyc6Y2FzZSBfMHg1MTA4KCcweGU4Jyk6Y2FzZSBfMHg1MTA4KCcweDM5Jyk6Y2FzZSBfMHg1MTA4KCcweGU5Jyk6Y2FzZSBfMHg1MTA4KCcweDgwNicpOnJldHVybiBfMHgyYzAyM2QrXzB4NTEwOCgnMHhlYScpKyhfMHgxOGQ1MTBbJ2VzbSddPyd0eXBlPVx4MjJtb2R1bGVceDIyJzonJykrXzB4NTEwOCgnMHhlYicpK18weDE4ZDUxMFsnbm9ybWFsaXplZFJlbGF0aXZlUGF0aCddKyc/JytfMHg1MmM3OGYrXzB4NTEwOCgnMHhlYycpO2Nhc2UgXzB4NTEwOCgnMHhlZCcpOmNhc2UnaHRtJzpyZXR1cm4gXzB4MmMwMjNkK18weDUxMDgoJzB4ZWUnKStfMHgxOGQ1MTBbXzB4NTEwOCgnMHhiOScpXSsnPycrXzB4MThkNTEwWyd0cyddKydceDIyXHgyMHJlbD1ceDIyaW1wb3J0XHgyMj4nO2Nhc2UgXzB4NTEwOCgnMHg4MzcnKTpyZXR1cm4gXzB4MmMwMjNkK18weDUxMDgoJzB4ODM4JykrXzB4MThkNTEwW18weDUxMDgoJzB4YjknKV0rJz8nK18weDUyYzc4ZitfMHg1MTA4KCcweGYwJyk7ZGVmYXVsdDpyZXR1cm4gXzB4MmMwMjNkO319fSwndHJ5UmVxdWlyZU1vZHVsZVdpdGhQYXRoRnJvbSc6ZnVuY3Rpb24oXzB4MThkNTEwLF8weDUwNjVlZixfMHgxYzUzYjEpe2lmKF8weDUxMDgoJzB4ODM5Jyk9PT1fMHg1MTA4KCcweDgzOScpKXt0cnl7dmFyIF8weDJkOGZlOD1fMHgyYzAyM2QoJ21vZHVsZScpLF8weDU5NDQxZj1uZXcgXzB4MmQ4ZmU4KCcuJyxudWxsKTtfMHg1OTQ0MWZbJ2ZpbGVuYW1lJ109XzB4MTQ0MTE3Wydqb2luJ10oXzB4MThkNTEwLF8weDUxMDgoJzB4MmQ0JykpLF8weDU5NDQxZlsncGF0aHMnXT1fMHgyZDhmZThbXzB4NTEwOCgnMHgxZDMnKV0oXzB4MThkNTEwKTt2YXIgXzB4MjEzMDc5PV8weDJkOGZlOFtfMHg1MTA4KCcweDgzNicpXShfMHg1MDY1ZWYsXzB4NTk0NDFmLCEweDEpLF8weDFjNDFjND12b2lkIDB4MDtyZXR1cm4gXzB4MWM0MWM0PXByb2Nlc3NbJ2VudiddW18weDUxMDgoJzB4NzA1JyldP18weDJjMDIzZChfMHgyMTMwNzkpOl8weDJkOGZlOFtfMHg1MTA4KCcweDJkNScpXShfMHg1MDY1ZWYsXzB4NTk0NDFmLCEweDEpLHsnbW9kdWxlJzpfMHgxYzQxYzQmJl8weDFjNDFjNFtfMHg1MTA4KCcweDgzYScpXXx8XzB4MWM0MWM0LCdwYXRoJzpfMHgyMTMwNzl9O31jYXRjaChfMHgzMGQ4MGUpe2lmKF8weDUxMDgoJzB4ODNiJyk9PT1fMHg1MTA4KCcweDgzYicpKXtpZihfMHgxYzUzYjEpdGhyb3cgXzB4MzBkODBlO31lbHNle3ZhciBfMHg1MjA1YmE9XzB4NTk0NDFmWydpc0NvdmVyZWQnXSgpLF8weDQ5ZDkzZD1fMHgyYzAyM2RbXzB4NTEwOCgnMHgyZjYnKV0oKTtfMHgxOGQ1MTB8fF8weDUyMDViYT09PV8weDQ5ZDkzZHx8KF8weDFjNTNiMVtfMHg1MTA4KCcweDJmNycpXSs9XzB4NDlkOTNkPzB4MTotMHgxKSxfMHg1OTQ0MWZbXzB4NTEwOCgnMHg2MWEnKV0oXzB4MmMwMjNkLF8weDE4ZDUxMCxfMHg1MDY1ZWYpLF8weDE0NDExN1tfMHgyZDhmZThdPV8weDU5NDQxZixfMHgxYzUzYjFbXzB4NTEwOCgnMHg1ZWQnKV1bXzB4MmQ4ZmU4XT1fMHg1OTQ0MWY7fX19ZWxzZXtyZXR1cm4gXzB4NTA2NWVmW18weDUxMDgoJzB4ODNjJyldKF8weDJjMDIzZCk7fX0sJ25vZGVNb2R1bGVzTG9va3VwJzpmdW5jdGlvbihfMHgxOGQ1MTAsXzB4NTA2NWVmKXtpZihfMHg1MTA4KCcweDgzZCcpIT09XzB4NTEwOCgnMHg4M2QnKSl7aWYoMHgxJl8weDU5NDQxZlsweDBdKXRocm93IF8weDU5NDQxZlsweDFdO3JldHVybiBfMHg1OTQ0MWZbMHgxXTt9ZWxzZXt2YXIgXzB4MWM1M2IxPV8weDJjMDIzZCgnbW9kdWxlJylbXzB4NTEwOCgnMHg1YzEnKV0sXzB4MTQ0MTE3PV8weDFjNTNiMVtfMHg1MTA4KCcweGFlJyldLF8weDJkOGZlOD1fMHgxYzUzYjFbXzB4NTEwOCgnMHgxZDMnKV0sXzB4NTk0NDFmPV8weDE0NDExN1tfMHg1MTA4KCcweDVjMicpXTtfMHgxYzUzYjFbXzB4NTEwOCgnMHgxZDMnKV09ZnVuY3Rpb24oXzB4MmMwMjNkKXtpZihfMHg1MTA4KCcweDgzZScpPT09J3JjRnlYJyl7dmFyIF8weDUwNjVlZj1fMHgyZDhmZThbJ2NhbGwnXSh0aGlzLF8weDJjMDIzZCk7cmV0dXJuIF8weDE4ZDUxMChfMHg1MDY1ZWYsXzB4MmMwMjNkLF8weDJkOGZlOCx0aGlzKSxfMHg1MDY1ZWY7fWVsc2V7cmV0dXJuIF8weDJkOGZlOChfMHgyYzAyM2QpO319LF8weDUwNjVlZiYmKF8weDE0NDExN1tfMHg1MTA4KCcweDVjMicpXT1mdW5jdGlvbihfMHgyYzAyM2Qpe3JldHVybiBfMHg1OTQ0MWZbXzB4NTEwOCgnMHgxMGUnKV0odGhpcyxfMHg1MDY1ZWYoXzB4MmMwMjNkKSk7fSk7fX0sJ25vZGVNb2R1bGVQYXRocyc6ZnVuY3Rpb24oXzB4MThkNTEwKXt2YXIgXzB4NTA2NWVmPV8weDJjMDIzZChfMHg1MTA4KCcweDVjMCcpKTtyZXR1cm4gXzB4NTA2NWVmW18weDUxMDgoJzB4MWQzJyldKF8weDE4ZDUxMCk7fSwncGF0Y2hCYWJlbFJlc29sdmUnOmZ1bmN0aW9uKF8weDJjMDIzZCl7aWYoXzB4NTEwOCgnMHg4M2YnKT09PV8weDUxMDgoJzB4ODQwJykpe3JldHVybiBudWxsO31lbHNle3ZhciBfMHgxOGQ1MTA9dGhpc1tfMHg1MTA4KCcweDg0MScpXShfMHgyYzAyM2QpO3RoaXNbXzB4NTEwOCgnMHg4NDInKV0oXzB4NTEwOCgnMHgxZDgnKSxmdW5jdGlvbihfMHgyYzAyM2Qpe3ZhciBfMHg1MDY1ZWY9XzB4MmMwMjNkKF8weDUxMDgoJzB4MWQ4JykpLF8weDFjNTNiMT1fMHg1MDY1ZWZbXzB4NTEwOCgnMHg0MTQnKV07cmV0dXJuIF8weDUwNjVlZlsnc3luYyddPWZ1bmN0aW9uKF8weDJjMDIzZCxfMHg1MDY1ZWYpe3JldHVybn5fMHgyYzAyM2RbXzB4NTEwOCgnMHg1MScpXShfMHg1MTA4KCcweDQxNScpKSYmXzB4NTA2NWVmJiYoYXJndW1lbnRzWzB4MV1bXzB4NTEwOCgnMHg0MTYnKV09KF8weDUwNjVlZltfMHg1MTA4KCcweDQxNicpXXx8W10pW18weDUxMDgoJzB4YjcnKV0oXzB4MThkNTEwKSksXzB4MWM1M2IxW18weDUxMDgoJzB4MTBhJyldKHRoaXMsYXJndW1lbnRzKTt9LF8weDUwNjVlZjt9KTt9fSwnaGFzQW5zaSc6ZnVuY3Rpb24oXzB4MmMwMjNkKXtpZihfMHg1MTA4KCcweDg0MycpPT09XzB4NTEwOCgnMHg4NDMnKSl7cmV0dXJuIF8weDJjMDIzZCYmJ3N0cmluZyc9PXR5cGVvZiBfMHgyYzAyM2QmJl8weDJjMDIzZFtfMHg1MTA4KCcweDU2NScpXShfMHgxNjNhZTQpO31lbHNle18weDUwNjVlZltfMHg1MTA4KCcweDE1OScpXShfMHg1OTQ0MWYsXzB4MjEzMDc5LGZ1bmN0aW9uKF8weDIyZWJkNil7XzB4MmMwMjNkKF8weDIyZWJkNltfMHg1MTA4KCcweDE1YScpXSkmJl8weDUwNjVlZltfMHg1MTA4KCcweDE1NScpXShfMHg1OTQ0MWZbXzB4NTEwOCgnMHgxNGYnKV0sZnVuY3Rpb24oKXskXyR0cmFjZXJbXzB4NTEwOCgnMHg2YScpXSgpO30pO30pO319LCdyZW1vdmVBbnNpJzpmdW5jdGlvbihfMHgyYzAyM2Qpe3JldHVybiBfMHgyYzAyM2QmJl8weDUxMDgoJzB4MzNkJyk9PXR5cGVvZiBfMHgyYzAyM2Q/XzB4MmMwMjNkW18weDUxMDgoJzB4YmYnKV0oXzB4MTYzYWU0LCcnKTpfMHgyYzAyM2Q7fSwnY29weVRvQ2xpcGJvYXJkJzpmdW5jdGlvbihfMHgxOGQ1MTApe2lmKCdrR29uYSc9PT1fMHg1MTA4KCcweDg0NCcpKXt2YXIgXzB4NTA2NWVmPWZ1bmN0aW9uKF8weDJjMDIzZCl7cmV0dXJuIF8weDJjMDIzZCYmY29uc29sZVsnd2FybiddKF8weDUxMDgoJzB4ODQ1JykrKF8weDJjMDIzZCYmXzB4MmMwMjNkW18weDUxMDgoJzB4YTgnKV0pKTt9O3RyeXtfMHgyYzAyM2QoJ2NvcHktcGFzdGUnKVtfMHg1MTA4KCcweDg0NicpXShfMHgxOGQ1MTAsXzB4NTA2NWVmKTt9Y2F0Y2goXzB4MWY3YTViKXtfMHg1MDY1ZWYoXzB4MWY3YTViKTt9fWVsc2V7cmV0dXJuIF8weDUwNjVlZltfMHg1MTA4KCcweDViNycpXShfMHgyYzAyM2QsXzB4MThkNTEwKTt9fSwndGVzdEZpbGVTZWxlY3Rpb24nOmZ1bmN0aW9uKF8weDJjMDIzZCxfMHgxOGQ1MTAsXzB4NTA2NWVmLF8weDFjNTNiMSl7dmFyIF8weDE0NDExNyxfMHgyZDhmZTg9ITB4MSxfMHg1OTQ0MWY9ITB4MSxfMHgyMTMwNzk9e307Zm9yKF8weDJhMTg4NVtfMHg1MTA4KCcweDgxMScpXT0weDA7bnVsbCE9PShfMHgxNDQxMTc9XzB4MmExODg1W18weDUxMDgoJzB4NTAyJyldKF8weDJjMDIzZCkpOyl7Zm9yKHZhciBfMHgxYzQxYzQ9XzB4MTQ0MTE3W18weDUxMDgoJzB4Njg5JyldO18weDFjNDFjNDxfMHgxNDQxMTdbMHgwXVtfMHg1MTA4KCcweGJlJyldO18weDFjNDFjNCsrKV8weDIxMzA3OVtfMHgxYzQxYzRdPTB4MTtfMHgyZDhmZTg9XzB4MmQ4ZmU4fHxfMHgxOGQ1MTBbXzB4NTEwOCgnMHg3MScpXShfMHgxNDQxMTdbMHgwXSksXzB4NTk0NDFmPV8weDU5NDQxZnx8XzB4NTA2NWVmW18weDUxMDgoJzB4NzEnKV0oXzB4MTQ0MTE3WzB4MF0pO31pZighXzB4MmQ4ZmU4JiZfMHgxYzUzYjEpZm9yKF8weGY1MzA3ZltfMHg1MTA4KCcweDgxMScpXT0weDA7bnVsbCE9PShfMHgxNDQxMTc9XzB4ZjUzMDdmW18weDUxMDgoJzB4NTAyJyldKF8weDJjMDIzZCkpOylpZighXzB4MjEzMDc5W18weDE0NDExN1tfMHg1MTA4KCcweDY4OScpXV0pe18weDJkOGZlOD0hMHgwO2JyZWFrO31yZXR1cm57J2luY2x1ZGVkVGVzdEZpbGUnOl8weDJkOGZlOCwnZXhjbHVkZWRUZXN0RmlsZSc6XzB4NTk0NDFmfTt9LCdpbml0U2VydmVyT3B0aW9ucyc6ZnVuY3Rpb24oXzB4MThkNTEwKXtpZignd1pzQVMnPT09J3dac0FTJyl7dmFyIF8weDUwNjVlZj1fMHgyYzAyM2QoJ2dyYWNlZnVsLWZzJyksXzB4MWM1M2IxPV8weDJjMDIzZCgnZnMtZXh0cmEnKTtfMHgxOGQ1MTBbXzB4NTEwOCgnMHg4NDcnKV09ZnVuY3Rpb24oXzB4MThkNTEwLF8weDUwNjVlZil7cmV0dXJuIF8weDJjMDIzZChfMHg1MTA4KCcweDg0Jyk9PT1fMHgxOGQ1MTA/XzB4NTEwOCgnMHg4NDgnKT09PV8weDUwNjVlZj9fMHg1MTA4KCcweDI2NycpOl8weDUxMDgoJzB4MjY4Jyk9PT1fMHg1MDY1ZWY/Jy4vY2hyb21lUnVubmVyLmpzJzonLi9waGFudG9tUnVubmVyLmpzJzpfMHg1MTA4KCcweDI2YScpKTt9LF8weDE4ZDUxMFsncHJvY2Vzc29yUG9vbCddPV8weDJjMDIzZChfMHg1MTA4KCcweDg0OScpKSxfMHgxOGQ1MTBbXzB4NTEwOCgnMHg4NGEnKV09ZnVuY3Rpb24oXzB4MmMwMjNkKXtyZXR1cm4gUVsnbmZjYeKAi2xsJ10oXzB4NTA2NWVmWydyZWFkRmlsZSddLF8weDJjMDIzZClbXzB4NTEwOCgnMHgxZGEnKV0oZnVuY3Rpb24oXzB4MmMwMjNkKXtyZXR1cm4gUVtfMHg1MTA4KCcweGY2JyldKEpTT05bJ3BhcnNlJ10oXzB4MmMwMjNkKSk7fSk7fSxfMHgxOGQ1MTBbJ2ZpbGVTdGF0UHJvbWlzZSddPWZ1bmN0aW9uKF8weDJjMDIzZCl7cmV0dXJuIFFbXzB4NTEwOCgnMHgzN2UnKV0oXzB4NTA2NWVmW18weDUxMDgoJzB4ODRiJyldLF8weDJjMDIzZCk7fSxfMHgxOGQ1MTBbJ3JlYWRGaWxlUHJvbWlzZSddPWZ1bmN0aW9uKF8weDJjMDIzZCl7cmV0dXJuIFFbXzB4NTEwOCgnMHgzN2UnKV0oXzB4NTA2NWVmW18weDUxMDgoJzB4NjkyJyldLF8weDJjMDIzZCk7fSxfMHgxOGQ1MTBbXzB4NTEwOCgnMHg4NGMnKV09ZnVuY3Rpb24oXzB4MmMwMjNkLF8weDE4ZDUxMCl7aWYoXzB4NTEwOCgnMHg4NGQnKSE9PV8weDUxMDgoJzB4ODRlJykpe3JldHVybiBRW18weDUxMDgoJzB4MzdlJyldKF8weDUwNjVlZltfMHg1MTA4KCcweDg0ZicpXSxfMHgyYzAyM2QsXzB4MThkNTEwKTt9ZWxzZXt2YXIgXzB4NTgwY2U4PXRoaXM7aWYoX1tfMHg1MTA4KCcweDY1JyldKF8weDE4ZDUxMCkpe3ZhciBfMHhmMTA1Yjg9eydzdGFjayc6XzB4MThkNTEwfTtyZXR1cm4gXzB4NTgwY2U4W18weDUxMDgoJzB4OWUnKV1bJ19jbGVhblN0YWNrJ10oXzB4ZjEwNWI4KSxfMHgxOGQ1MTA9XzB4ZjEwNWI4W18weDUxMDgoJzB4MTlkJyldO31yZXR1cm4gXzB4MmMwMjNkO319LF8weDE4ZDUxMFsndW5saW5rRmlsZVByb21pc2UnXT1mdW5jdGlvbihfMHgyYzAyM2Qpe2lmKF8weDUxMDgoJzB4ODUwJykhPT1fMHg1MTA4KCcweDg1MCcpKXt0cnl7alsnaWQnXT1fMHgxYzQxYzRbJ3Y0J10oKVtfMHg1MTA4KCcweDEyNScpXSgnLScpWydqb2luJ10oJycpLF8weDFjNTNiMVtfMHg1MTA4KCcweDI1MycpXShFLGpbJ2lkJ10pO31jYXRjaChfMHgyNDZjN2Mpe319ZWxzZXtyZXR1cm4gUVtfMHg1MTA4KCcweDM3ZScpXShfMHg1MDY1ZWZbJ3VubGluayddLF8weDJjMDIzZCk7fX0sXzB4MThkNTEwW18weDUxMDgoJzB4ODUxJyldPWZ1bmN0aW9uKF8weDJjMDIzZCl7cmV0dXJuIF8weDUwNjVlZltfMHg1MTA4KCcweDgzYycpXShfMHgyYzAyM2QpO30sXzB4MThkNTEwW18weDUxMDgoJzB4ODUyJyldPWZ1bmN0aW9uKF8weDJjMDIzZCxfMHgxOGQ1MTApe3JldHVybiBfMHg1MDY1ZWZbXzB4NTEwOCgnMHg4NTInKV0oXzB4MmMwMjNkLF8weDE4ZDUxMCk7fSxfMHgxOGQ1MTBbXzB4NTEwOCgnMHg4MScpXT1mdW5jdGlvbihfMHgyYzAyM2Qpe2lmKF8weDUxMDgoJzB4ODUzJyk9PT0nc3hzeWsnKXtjbGVhclRpbWVvdXQoQyksQz1zZXRUaW1lb3V0KF9bJ2JpbmQnXShfMHgxYzUzYjEsbnVsbCwhMHgwKSxfMHhmNTMwN2YpO31lbHNle3JldHVybiBfMHg1MDY1ZWZbXzB4NTEwOCgnMHg4MScpXShfMHgyYzAyM2QpWyd0b1N0cmluZyddKF8weDUxMDgoJzB4NWQwJykpO319LF8weDE4ZDUxMFtfMHg1MTA4KCcweDg1NCcpXT1mdW5jdGlvbihfMHgyYzAyM2Qpe2lmKF8weDUxMDgoJzB4ODU1JykhPT1fMHg1MTA4KCcweDg1NicpKXtyZXR1cm4gXzB4NTA2NWVmWydleGlzdHNTeW5jJ10oXzB4MmMwMjNkKTt9ZWxzZXtpZighXzB4MmMwMjNkW18weDUxMDgoJzB4MzNhJyldKXtpZihwcm9jZXNzW18weDUxMDgoJzB4NycpXVsncXVva2thJ10mJiFfMHgyYzAyM2RbXzB4NTEwOCgnMHgzM2MnKV0pcmV0dXJuO3ZhciBfMHgzYTY1OWM9dGhpc1tfMHg1MTA4KCcweDE0MicpXVtfMHg1MTA4KCcweDQ1ZicpXSgpO18weDNhNjU5YyYmXzB4NTEwOCgnMHgzM2QnKSE9dHlwZW9mIF8weDNhNjU5YyYmKF8weDNhNjU5Y1sndGVzdFJ1blJlUXVldWVkJ109ITB4MCksdGhpc1tfMHg1MTA4KCcweDJkYicpXShfMHgzYTY1OWMpO319fSxfMHgxOGQ1MTBbXzB4NTEwOCgnMHg0ZDknKV09ZnVuY3Rpb24oXzB4MmMwMjNkKXtyZXR1cm4gXzB4NTA2NWVmW18weDUxMDgoJzB4NGQ5JyldKF8weDJjMDIzZCk7fSxfMHgxOGQ1MTBbJ2RpclJlbW92ZVByb21pc2UnXT1mdW5jdGlvbihfMHgyYzAyM2Qpe3JldHVybiBRW18weDUxMDgoJzB4MzdlJyldKF8weDFjNTNiMVtfMHg1MTA4KCcweDg1NycpXSxfMHgyYzAyM2QpO30sXzB4MThkNTEwW18weDUxMDgoJzB4ODU4JyldPWZ1bmN0aW9uKF8weDJjMDIzZCl7aWYoJ2tQV05zJyE9PV8weDUxMDgoJzB4ODU5Jykpe3RoaXNbXzB4NTEwOCgnMHg1MDcnKV09ITB4MCx0aGlzW18weDUxMDgoJzB4MWJmJyldPV8weDJjMDIzZDt9ZWxzZXtyZXR1cm4gXzB4MWM1M2IxW18weDUxMDgoJzB4ODVhJyldKF8weDJjMDIzZCk7fX0sXzB4MThkNTEwWydkaXJFbnN1cmVQcm9taXNlJ109ZnVuY3Rpb24oXzB4MmMwMjNkKXtyZXR1cm4gUVsnbmZjYWxsJ10oXzB4MWM1M2IxW18weDUxMDgoJzB4ODViJyldLF8weDJjMDIzZCk7fSxfMHgxOGQ1MTBbXzB4NTEwOCgnMHg4NWMnKV09ZnVuY3Rpb24oXzB4MmMwMjNkKXtpZihfMHg1MTA4KCcweDg1ZCcpIT09XzB4NTEwOCgnMHg4NWUnKSl7cmV0dXJuIF8weDFjNTNiMVtfMHg1MTA4KCcweDY4MCcpXShfMHgyYzAyM2QpO31lbHNle3RyeXt2YXIgXzB4OTc2OWI1PWdsb2JhbFtfMHg1MTA4KCcweDcwZicpXT1nbG9iYWxbXzB4NTEwOCgnMHg3MGYnKV18fF8weDJjMDIzZChfMHg1MTA4KCcweDk0JykpLF8weDUyYTFiNT1fMHgxOGQ1MTBbXzB4NTEwOCgnMHg5NCcpXTtpZighXzB4NTJhMWI1KXJldHVybjtpZigweDA9PT1fMHg1MmExYjVbXzB4NTEwOCgnMHg1MScpXShfMHg1MTA4KCcweDcxMCcpKSlyZXR1cm47aWYofl8weDUyYTFiNVtfMHg1MTA4KCcweDUxJyldKF8weDUxMDgoJzB4MTk0JykpKXJldHVybjt2YXIgXzB4MTJhMWRlPV8weDk3NjliNVsncGFyc2UnXShfMHgxOGQ1MTBbXzB4NTEwOCgnMHg5NCcpXSksXzB4NGNlMGFjPScvJz09PV8weDEyYTFkZVtfMHg1MTA4KCcweDZiMycpXVtfMHg1MTA4KCcweDcxMScpXSgweDApP18weDEyYTFkZVtfMHg1MTA4KCcweDZiMycpXVtfMHg1MTA4KCcweDMzNicpXSgweDEpOl8weDEyYTFkZVtfMHg1MTA4KCcweDZiMycpXSxfMHg0YTY4YjA9XzB4NGNlMGFjJiZfMHgxYzUzYjFbXzB4NGNlMGFjXTtpZighXzB4NGE2OGIwKXJldHVybjt2YXIgXzB4NDg1ZTEwPV8weDEyYTFkZVtfMHg1MTA4KCcweDcxMicpXSYmXzB4MTJhMWRlWydzZWFyY2gnXVtfMHg1MTA4KCcweGJlJyldO18weDUwNjVlZltfMHg1MTA4KCcweDg1ZicpXShfMHg1MmExYjUrKF8weDQ4NWUxMD8nJic6Jz8nKStfMHg0YTY4YjBbJ3RzJ10rXzB4NTEwOCgnMHgxOWInKStfMHg0YTY4YjBbJ2lkJ10pLF8weDFjNDFjNFtfMHg1MTA4KCcweDZmNScpXSgpO31jYXRjaChfMHg1MTE2Zjkpe2NvbnNvbGVbXzB4NTEwOCgnMHgxMzAnKV0oXzB4NTExNmY5JiZfMHg1MTE2ZjlbXzB4NTEwOCgnMHhhOCcpXSk7fX19LF8weDE4ZDUxMFtfMHg1MTA4KCcweDg2MCcpXT10aGlzW18weDUxMDgoJzB4ODYwJyldO31lbHNle18weDE4ZDUxMFtfMHg1MTA4KCcweDQ4OScpXT0hMHgxO319LCdjb2RlRnJhbWUnOmZ1bmN0aW9uKF8weDJjMDIzZCxfMHgxOGQ1MTAsXzB4NTA2NWVmLF8weDE0NDExNyl7aWYoXzB4NTEwOCgnMHg4NjEnKSE9PV8weDUxMDgoJzB4ODYyJykpe2Z1bmN0aW9uIF8weDJkOGZlOChfMHgyYzAyM2QsXzB4MThkNTEwLF8weDUwNjVlZil7dmFyIF8weDE0NDExNz1fMHgxYzUzYjEoeydjb2x1bW4nOjB4MCwnbGluZSc6LTB4MX0sXzB4MmMwMjNkWydzdGFydCddKSxfMHgyZDhmZTg9XzB4MWM1M2IxKHt9LF8weDE0NDExNyxfMHgyYzAyM2RbXzB4NTEwOCgnMHg2YicpXSksXzB4NTk0NDFmPV8weDUwNjVlZnx8e30sXzB4MjEzMDc5PV8weDU5NDQxZltfMHg1MTA4KCcweDg2MycpXSxfMHgxYzQxYzQ9dm9pZCAweDA9PT1fMHgyMTMwNzk/MHgyOl8weDIxMzA3OSxfMHg0ODdiYjQ9XzB4NTk0NDFmW18weDUxMDgoJzB4ODY0JyldLF8weDI4OWVkNT12b2lkIDB4MD09PV8weDQ4N2JiND8weDM6XzB4NDg3YmI0LF8weDE2M2FlND1fMHgxNDQxMTdbXzB4NTEwOCgnMHgyM2InKV0sXzB4MmExODg1PV8weDE0NDExN1tfMHg1MTA4KCcweDJlMScpXSxfMHhmNTMwN2Y9XzB4MmQ4ZmU4W18weDUxMDgoJzB4MjNiJyldLF8weDE0ZTE1YT1fMHgyZDhmZThbXzB4NTEwOCgnMHgyZTEnKV0sXzB4NDViMjU5PU1hdGhbXzB4NTEwOCgnMHg0ODEnKV0oXzB4MTYzYWU0LShfMHgxYzQxYzQrMHgxKSwweDApLF8weDQ4YmQ4MT1NYXRoW18weDUxMDgoJzB4NzUxJyldKF8weDE4ZDUxMFtfMHg1MTA4KCcweGJlJyldLF8weGY1MzA3ZitfMHgyODllZDUpO18weDE2M2FlND09PS0weDEmJihfMHg0NWIyNTk9MHgwKSxfMHhmNTMwN2Y9PT0tMHgxJiYoXzB4NDhiZDgxPV8weDE4ZDUxMFtfMHg1MTA4KCcweGJlJyldKTt2YXIgXzB4N2ExOGYwPV8weGY1MzA3Zi1fMHgxNjNhZTQsXzB4MTljYjI3PXt9O2lmKF8weDdhMThmMClmb3IodmFyIF8weDJiMzYxYT0weDA7XzB4MmIzNjFhPD1fMHg3YTE4ZjA7XzB4MmIzNjFhKyspe3ZhciBfMHgyOTBmYTI9XzB4MmIzNjFhK18weDE2M2FlNDtpZihfMHgyYTE4ODUpaWYoMHgwPT09XzB4MmIzNjFhKXt2YXIgXzB4NDZiMWMxPV8weDE4ZDUxMFtfMHgyOTBmYTItMHgxXVsnbGVuZ3RoJ107XzB4MTljYjI3W18weDI5MGZhMl09W18weDJhMTg4NSxfMHg0NmIxYzEtXzB4MmExODg1XTt9ZWxzZSBpZihfMHgyYjM2MWE9PT1fMHg3YTE4ZjApXzB4MTljYjI3W18weDI5MGZhMl09WzB4MCxfMHgxNGUxNWFdO2Vsc2V7dmFyIF8weDQ2YjFjMT1fMHgxOGQ1MTBbXzB4MjkwZmEyLV8weDJiMzYxYV1bXzB4NTEwOCgnMHhiZScpXTtfMHgxOWNiMjdbXzB4MjkwZmEyXT1bMHgwLF8weDQ2YjFjMV07fWVsc2UgXzB4MTljYjI3W18weDI5MGZhMl09ITB4MDt9ZWxzZSBfMHgyYTE4ODU9PT1fMHgxNGUxNWE/XzB4MmExODg1P18weDE5Y2IyN1tfMHgxNjNhZTRdPVtfMHgyYTE4ODUsMHgwXTpfMHgxOWNiMjdbXzB4MTYzYWU0XT0hMHgwOl8weDE5Y2IyN1tfMHgxNjNhZTRdPVtfMHgyYTE4ODUsXzB4MTRlMTVhLV8weDJhMTg4NV07cmV0dXJueydzdGFydCc6XzB4NDViMjU5LCdlbmQnOl8weDQ4YmQ4MSwnbWFya2VyTGluZXMnOl8weDE5Y2IyN307fXZhciBfMHg1OTQ0MWY9dGhpc1tfMHg1MTA4KCcweDM5ZCcpXShfMHgyYzAyM2QpLF8weDIxMzA3OT17J3N0YXJ0Jzp7J2NvbHVtbic6XzB4NTA2NWVmLCdsaW5lJzpfMHgxOGQ1MTB9fSxfMHgxYzQxYzQ9XzB4MmQ4ZmU4KF8weDIxMzA3OSxfMHg1OTQ0MWYpLF8weDQ4N2JiND1fMHgxYzQxYzRbXzB4NTEwOCgnMHg2YScpXSxfMHgyODllZDU9XzB4MWM0MWM0WydlbmQnXSxfMHgxNjNhZTQ9XzB4MWM0MWM0W18weDUxMDgoJzB4ODY1JyldLF8weDJhMTg4NT1fMHgyMTMwNzlbJ3N0YXJ0J10mJidudW1iZXInPT10eXBlb2YgXzB4MjEzMDc5W18weDUxMDgoJzB4NmEnKV1bXzB4NTEwOCgnMHgyZTEnKV0sXzB4ZjUzMDdmPVN0cmluZyhfMHgyODllZDUpWydsZW5ndGgnXSxfMHgxNGUxNWE9XzB4NTk0NDFmW18weDUxMDgoJzB4MzM4JyldKF8weDQ4N2JiNCxfMHgyODllZDUpWydtYXAnXShmdW5jdGlvbihfMHgyYzAyM2QsXzB4MThkNTEwKXtpZihfMHg1MTA4KCcweDg2NicpIT09XzB4NTEwOCgnMHg4NjYnKSl7aWYoXzB4MThkNTEwW18weDUxMDgoJzB4MzM1JyldWydoZWFsdGh5J10oXzB4MTQ0MTE3W18weDUxMDgoJzB4MzM0JyldKSlyZXR1cm4gdm9pZCBfMHg1MDY1ZWYoXzB4MTQ0MTE3KTtfMHgyMTMwNzkoXzB4NTEwOCgnMHg3ZWEnKSxfMHgyYzAyM2QpLF8weDE4ZDUxMFtfMHg1MTA4KCcweDFlMicpXShfMHgyYzAyM2QpO31lbHNle3ZhciBfMHg1MDY1ZWY9XzB4NDg3YmI0KzB4MStfMHgxOGQ1MTAsXzB4MWM1M2IxPSgnXHgyMCcrXzB4NTA2NWVmKVtfMHg1MTA4KCcweDMzOCcpXSgtXzB4ZjUzMDdmKSxfMHgyZDhmZTg9J1x4MjAnK18weDFjNTNiMStfMHg1MTA4KCcweDQ0YScpLF8weDU5NDQxZj1fMHgxNjNhZTRbXzB4NTA2NWVmXSxfMHgyMTMwNzk9IV8weDE2M2FlNFtfMHg1MDY1ZWYrMHgxXTtpZihfMHg1OTQ0MWYpe2lmKF8weDUxMDgoJzB4ODY3JykhPT1fMHg1MTA4KCcweDg2OCcpKXt2YXIgXzB4MWM0MWM0PScnO2lmKEFycmF5W18weDUxMDgoJzB4M2U0JyldKF8weDU5NDQxZikpe3ZhciBfMHgyODllZDU9XzB4MmMwMjNkWydzbGljZSddKDB4MCxNYXRoWydtYXgnXShfMHg1OTQ0MWZbMHgwXS0weDEsMHgwKSlbXzB4NTEwOCgnMHhiZicpXSgvW15cdF0vZywnXHgyMCcpLF8weDJhMTg4NT1fMHg1OTQ0MWZbMHgxXXx8MHgxO18weDFjNDFjND1bJ1x4MGFceDIwJyxfMHgyZDhmZThbJ3JlcGxhY2UnXSgvXGQvZywnXHgyMCcpLF8weDI4OWVkNSwnXidbXzB4NTEwOCgnMHg3MjEnKV0oXzB4MmExODg1KV1bXzB4NTEwOCgnMHg4MicpXSgnJyksXzB4MjEzMDc5JiZfMHgxNDQxMTcmJihfMHgxYzQxYzQrPSdceDIwJytfMHgxNDQxMTcpO31yZXR1cm5bJz4nLF8weDJkOGZlOCxfMHgyYzAyM2QsXzB4MWM0MWM0XVtfMHg1MTA4KCcweDgyJyldKCcnKTt9ZWxzZXtyZXR1cm4gUVsnd2hlbiddKHt9KTt9fXJldHVybidceDIwJytfMHgyZDhmZTgrXzB4MmMwMjNkO319KVtfMHg1MTA4KCcweDgyJyldKCdceDBhJyk7cmV0dXJuIF8weDJhMTg4NXx8KF8weDE0ZTE1YT0nJysnXHgyMCdbXzB4NTEwOCgnMHg3MjEnKV0oXzB4ZjUzMDdmKzB4MSkrXzB4MTQ0MTE3KydceDBhJytfMHgxNGUxNWEpLF8weDE0ZTE1YTt9ZWxzZXt0aGlzWydfZG9jdW1lbnRJbkVkaXRvciddJiZ0aGlzW18weDUxMDgoJzB4NGM3JyldWydpbnZhbGlkYXRlTGluZXMnXShfMHgyYzAyM2QpO319LCdsb2FkSmVzdCc6ZnVuY3Rpb24oXzB4MmMwMjNkKXt2YXIgXzB4MThkNTEwLF8weDUwNjVlZixfMHgxYzUzYjE9dGhpc1sndHJ5UmVxdWlyZU1vZHVsZVdpdGhQYXRoRnJvbSddKF8weDJjMDIzZCxfMHg1MTA4KCcweDg2OScpKTtfMHgxOGQ1MTA9XzB4MWM1M2IxP3RoaXNbJ3RyeVJlcXVpcmVNb2R1bGVXaXRoUGF0aEZyb20nXShfMHgxYzUzYjFbXzB4NTEwOCgnMHgzNCcpXSwnamVzdCcpOnRoaXNbXzB4NTEwOCgnMHg4NmEnKV0oXzB4MmMwMjNkLF8weDUxMDgoJzB4NDMzJykpO3ZhciBfMHgyZDhmZTgsXzB4NTk0NDFmPV8weDE4ZDUxMD9fMHgxOGQ1MTBbXzB4NTEwOCgnMHgzNCcpXTpfMHgyYzAyM2QsXzB4MjEzMDc5PXRoaXNbXzB4NTEwOCgnMHg4NmEnKV0oXzB4NTk0NDFmLF8weDUxMDgoJzB4ODZiJykpO2lmKCFfMHgyMTMwNzkpdGhyb3cgbmV3IEVycm9yKF8weDUxMDgoJzB4ODZjJykrXzB4MmMwMjNkKydceDI3LicpO2lmKCFfMHgyMTMwNzlbXzB4NTEwOCgnMHg1YzAnKV1bJ2dldFZlcnNpb24nXSl0aHJvdyBuZXcgRXJyb3IoXzB4NTEwOCgnMHg4NmQnKSk7dmFyIF8weDFjNDFjND1fMHg1MTA4KCcweDg2ZScpLF8weDQ4N2JiND0weDA7dHJ5e2lmKF8weDUxMDgoJzB4ODZmJyk9PT0nb0dwWWMnKXtfMHgxYzQxYzQ9XzB4MjEzMDc5W18weDUxMDgoJzB4NWMwJyldWydnZXRWZXJzaW9uJ10oKSxfMHg0ODdiYjQ9cGFyc2VJbnQoXzB4MWM0MWM0W18weDUxMDgoJzB4MTI1JyldKCcuJylbMHgwXSk7fWVsc2V7dGhpc1tfMHg1MTA4KCcweDMyZCcpXShfMHgyYzAyM2RbXzB4NTEwOCgnMHgzNzAnKV0pO319Y2F0Y2goXzB4MWNhOTY2KXtpZihfMHg1MTA4KCcweDg3MCcpIT09XzB4NTEwOCgnMHg4NzAnKSl7dmFyIF8weDNhNzQwYj1fMHgxOGQ1MTBbJ21ldGFkYXRhJ10sXzB4NDQ4NjEwPV8weDU5NDQxZlsnZXh0bmFtZSddKF8weDJjMDIzZClbXzB4NTEwOCgnMHgzMzYnKV0oMHgxKTtyZXR1cm4gXzB4M2E3NDBiW18weDUxMDgoJzB4MTlhJyldPTB4MSxfMHgzYTc0MGJbJ2lkJ109dGhpc1snX2ZpbGVJZEdlbmVyYXRvciddW18weDUxMDgoJzB4NDFmJyldKF8weDJjMDIzZCksXzB4M2E3NDBiWyd0cyddPV8weDE4ZDUxMFtfMHg1MTA4KCcweDIyNicpXVtfMHg1MTA4KCcweDI2NCcpXSgpLF8weDNhNzQwYltfMHg1MTA4KCcweDY5JyldPV8weDQ0ODYxMCYmXzB4NDQ4NjEwW18weDUxMDgoJzB4NDIwJyldKCksXzB4M2E3NDBiW18weDUxMDgoJzB4MzlhJyldPV8weDNhNzQwYltfMHg1MTA4KCcweDM5YScpXXx8XzB4N2ExOGYwW18weDNhNzQwYlsndHlwZSddXSxfMHgzYTc0MGJbXzB4NTEwOCgnMHgzNCcpXT1fMHgyYzAyM2Qsdm9pZCAweDA9PT1fMHgzYTc0MGJbXzB4NTEwOCgnMHgzOTknKV0mJihfMHgzYTc0MGJbXzB4NTEwOCgnMHgzOTknKV09XzB4NDg3YmI0W18weDUxMDgoJzB4NDIxJyldKF8weDNhNzQwYlsndHlwZSddLF8weDJjMDIzZCxfMHg1MDY1ZWZbXzB4NTEwOCgnMHg0MjInKV1bXzB4NTEwOCgnMHg0MjMnKV1bJ2phdmFzY3JpcHQnXSkpLHRoaXNbJ19maWxlc0J5UGF0aCddW18weDJjMDIzZF09XzB4M2E3NDBiLHRoaXNbXzB4NTEwOCgnMHg0ZDInKV1bXzB4M2E3NDBiWydpZCddXT1fMHgzYTc0MGIsdGhpc1tfMHg1MTA4KCcweGZiJyldJiYodGhpc1tfMHg1MTA4KCcweDYzJyldWydkZWwnXShfMHgyYzAyM2QpLHRoaXNbXzB4NTEwOCgnMHg0MjYnKV0oXzB4M2E3NDBiKVsndGhlbiddKGZ1bmN0aW9uKF8weDQ5NDUyNil7cmV0dXJuIF8weDUwNjVlZltfMHg1MTA4KCcweGE3JyldKCdhZGRlZCcsXzB4NDk0NTI2KTt9KVtfMHg1MTA4KCcweGE5JyldKGZ1bmN0aW9uKF8weDM4MDVmZCl7cmV0dXJuIF8weDE2M2FlNChfMHgzODA1ZmQpO30pKSxfMHgzYTc0MGI7fWVsc2V7dGhyb3cgbmV3IEVycm9yKF8weDUxMDgoJzB4ODcxJykrXzB4MWNhOTY2W18weDUxMDgoJzB4YTgnKV0rJy4nKTt9fWlmKF8weDQ4N2JiNDwweDE4KXRocm93IG5ldyBFcnJvcihfMHg1MTA4KCcweDg3MicpK18weDFjNDFjNCsnXHgyMGF0XHgyMFx4MjcnK18weDIxMzA3OVsncGF0aCddKydceDI3LicpO2lmKF8weDUwNjVlZj10aGlz4oCLW18weDUxMDgoJzB4ODZhJyldKF8weDIxMzA3OVtfMHg1MTA4KCcweDM0JyldLF8weDUxMDgoJzB4ODczJykpKXRyeXtfMHgyZDhmZTg9XzB4NTA2NWVmW18weDUxMDgoJzB4NWMwJyldW18weDUxMDgoJzB4ODc0JyldKF8weDFjNTNiMT97J2NvbmZpZyc6SlNPTlsnc3RyaW5naWZ5J10oXzB4MWM1M2IxW18weDUxMDgoJzB4NWMwJyldKGZ1bmN0aW9uKF8weDJjMDIzZCl7aWYoXzB4NTEwOCgnMHg4NzUnKSE9PSdNRWlOWScpe3JldHVybiBfMHgxNDQxMTdbXzB4NTEwOCgnMHgxZDgnKV0oXzB4MWM1M2IxW18weDUxMDgoJzB4MzQnKV0sXzB4NTEwOCgnMHg3MGInKSxfMHgyYzAyM2QpO31lbHNle18weDFjNTNiMSYmIV8weDFjNTNiMVtfMHg1MTA4KCcweDEwOScpXSYmKF8weDUwNjVlZj1fMHgyZDhmZThbXzB4NTEwOCgnMHgxMGQnKV0pJiZfMHg1MDY1ZWZbXzB4NTEwOCgnMHgxMGUnKV0oXzB4MmQ4ZmU4KTt9fSkpfTp7fSxbXzB4MmMwMjNkXSksXzB4MmQ4ZmU4W18weDUxMDgoJzB4ODc2JyldPU9iamVjdFtfMHg1MTA4KCcweDdmZScpXSh7fSxfMHgyZDhmZThbXzB4NTEwOCgnMHg4NzYnKV0pLF8weDJkOGZlOFtfMHg1MTA4KCcweDg3NycpXT0oXzB4MmQ4ZmU4W18weDUxMDgoJzB4ODc3JyldfHxbXSlbJ2ZpbHRlciddKGZ1bmN0aW9uKF8weDJjMDIzZCl7aWYoXzB4NTEwOCgnMHg4NzgnKSE9PSdUb3lMTicpe3JldHVybiBfMHg1MTA4KCcweDczZicpPT09XzB4MmMwMjNkW18weDUxMDgoJzB4MTIzJyldO31lbHNle3ZhciBfMHgyM2JkOGQsXzB4NTg2ZjRmLF8weDdkZTUzNjtyZXR1cm4gXzB4MmQ4ZmU4KHRoaXMsZnVuY3Rpb24oXzB4NTI4ZWYzKXtzd2l0Y2goXzB4NTI4ZWYzWydsYWJlbCddKXtjYXNlIDB4MDppZighdGhpc1tfMHg1MTA4KCcweDRkYScpXSlyZXR1cm5bMHgyLHRoaXNbXzB4NTEwOCgnMHg0ZDYnKV0oXzB4MmMwMjNkKV07XzB4MjNiZDhkPTB4MCxfMHg1MjhlZjNbXzB4NTEwOCgnMHgxMGYnKV09MHgxO2Nhc2UgMHgxOnJldHVybiBfMHgyM2JkOGQ8MHhhP1sweDQsdGhpc1snX3RpbWVvdXQnXSgweGEpXTpbMHgzLDB4Nl07Y2FzZSAweDI6cmV0dXJuIF8weDUyOGVmM1tfMHg1MTA4KCcweDEzYicpXSgpLFsweDQsdGhpc1snX2ZpbGVTdGF0UHJvbWlzZSddKF8weDJjMDIzZCldO2Nhc2UgMHgzOnJldHVybiBfMHg1ODZmNGY9XzB4NTI4ZWYzW18weDUxMDgoJzB4MTNiJyldKCksWzB4NCx0aGlzW18weDUxMDgoJzB4NTBmJyldKDB4YSldO2Nhc2UgMHg0OnJldHVybiBfMHg1MjhlZjNbXzB4NTEwOCgnMHgxM2InKV0oKSxbMHg0LHRoaXNbXzB4NTEwOCgnMHg0ZDYnKV0oXzB4MmMwMjNkKV07Y2FzZSAweDU6cmV0dXJuIF8weDdkZTUzNj1fMHg1MjhlZjNbJ3NlbnQnXSgpLF8weDU4NmY0ZltfMHg1MTA4KCcweDFiOCcpXT09PV8weDdkZTUzNltfMHg1MTA4KCcweGJlJyldP1sweDIsXzB4N2RlNTM2XTooXzB4MjNiZDhkKyssXzB4MTYzYWU0KF8weDUxMDgoJzB4ODc5JykpLFsweDMsMHgxXSk7Y2FzZSAweDY6cmV0dXJuWzB4Ml07fX0pO319KVtfMHg1MTA4KCcweGRhJyldKGZ1bmN0aW9uKF8weDJjMDIzZCl7aWYoXzB4NTEwOCgnMHg4N2EnKT09PSd1WkpiZScpe3JldHVybiBPYmplY3RbXzB4NTEwOCgnMHg3ZmUnKV0oe30sXzB4MmMwMjNkKTt9ZWxzZXtpZih0aGlzW18weDUxMDgoJzB4MzBhJyldJiZ0aGlzW18weDUxMDgoJzB4MzBhJyldW18weDUxMDgoJzB4YmUnKV0pe3ZhciBfMHg1ZGU2ZDc9dGhpc1tfMHg1MTA4KCcweDMwYScpXVtfMHg1MTA4KCcweDUxJyldKF8weDJjMDIzZCk7XzB4NWRlNmQ3Pj0weDAmJnRoaXNbJ19nbG9iYWxFcnJvcnMnXVtfMHg1MTA4KCcweDExOScpXShfMHg1ZGU2ZDcsMHgxKTt9fX0pO31jYXRjaChfMHgyMGQ4Yjgpe2lmKF8weDUxMDgoJzB4ODdiJykhPT1fMHg1MTA4KCcweDg3YycpKXt0aHJvdyBuZXcgRXJyb3IoXzB4NTEwOCgnMHg4N2QnKStfMHgyYzAyM2QrXzB4NTEwOCgnMHg4N2UnKSsoXzB4MjBkOGI4WydtZXNzYWdlJ10/XzB4MjBkOGI4W18weDUxMDgoJzB4YTgnKV06XzB4NTEwOCgnMHg4N2YnKSkpO31lbHNle3ZhciBfMHgzMGVhN2E9XzB4MmQ4ZmU4W18weDIxMzA3OV09XzB4MmQ4ZmU4W18weDIxMzA3OV18fHsnZmlsZSc6XzB4MWM0MWM0W18weDUxMDgoJzB4MzQnKV0oKSwnbWVzc2FnZXMnOltdfTtfMHgzMGVhN2FbXzB4NTEwOCgnMHgxZjMnKV1bXzB4NTEwOCgnMHg0YicpXShfMHgxOGQ1MTApO319aWYoIV8weDJkOGZlOCl0aHJvdyBuZXcgRXJyb3IoXzB4NTEwOCgnMHg4N2QnKStfMHgyYzAyM2QrJ1x4MjcuJyk7aWYoIV8weDJkOGZlOFsnY29uZmlncyddW18weDUxMDgoJzB4YmUnKV0pdGhyb3cgbmV3IEVycm9yKCdDYW5ceDIwbm90XHgyMGZpbmRceDIwYW55XHgyMEplc3RceDIwcnVubmVyXHgyMGNvbmZpZ3VyYXRpb25zXHgyMGluXHgyMFx4MjcnK18weDJjMDIzZCsnXHgyNy4nKTtyZXR1cm57J2plc3RDb25maWcnOl8weDJkOGZlOCwnamVzdENMSSc6XzB4MjEzMDc5LCdqZXN0Q29uZmlnTG9hZGVyJzpfMHg1MDY1ZWZ9O30sJ3NlcmlhbGl6ZVJlZ0V4cCc6ZnVuY3Rpb24oXzB4MmMwMjNkKXtpZihfWydpc1JlZ0V4cCddKF8weDJjMDIzZCkpcmV0dXJuJ19fUkVHRVhQXHgyMCcrXzB4MmMwMjNkW18weDUxMDgoJzB4MWY3JyldKCk7aWYoX1tfMHg1MTA4KCcweDY1JyldKF8weDJjMDIzZCkpcmV0dXJuIF8weDJjMDIzZDt0aHJvdyBuZXcgRXJyb3IoXzB4NTEwOCgnMHg4ODAnKSk7fSwnZGVzZXJpYWxpemVSZWdFeHAnOmZ1bmN0aW9uKF8weDJjMDIzZCl7aWYoMHgwPT09XzB4MmMwMjNkWydpbmRleE9mJ10oXzB4NTEwOCgnMHg2MDknKSkpe2lmKF8weDUxMDgoJzB4ODgxJykhPT1fMHg1MTA4KCcweDg4MScpKXtfMHgxOGQ1MTA9bnVsbCxfMHgxYzQxYzRbXzB4NTEwOCgnMHgxM2QnKV0mJl8weDFjNDFjNFtfMHg1MTA4KCcweDEzZCcpXSgpLF8weDFjNDFjNFtfMHg1MTA4KCcweDE3ZicpXSgpO31lbHNle3ZhciBfMHgxOGQ1MTA9XzB4MmMwMjNkWydzcGxpdCddKF8weDUxMDgoJzB4NjA5JykpWzB4MV1bXzB4NTEwOCgnMHg1NjUnKV0oL1wvKC4qKVwvKC4qKT8vKTtyZXR1cm4gbmV3IFJlZ0V4cChfMHgxOGQ1MTBbMHgxXSxfMHgxOGQ1MTBbMHgyXXx8JycpO319cmV0dXJuIF8weDJjMDIzZDt9LCdpc0phdmFTY3JpcHQnOl8weDE5Y2IyNywnaXNUeXBlU2NyaXB0JzpfMHgyYjM2MWEsJ2lzVnVlJzpfMHgyOTBmYTIsJ2lzQ29mZmVlU2NyaXB0JzpfMHg0NmIxYzEsJ2lzQ292ZXJhYmxlJzpmdW5jdGlvbihfMHgyYzAyM2QsXzB4MThkNTEwLF8weDUwNjVlZil7aWYoXzB4NTEwOCgnMHg4ODInKT09PV8weDUxMDgoJzB4ODgzJykpe3JldHVybiBfMHgxNDQxMTcoXzB4MmMwMjNkW18weDUxMDgoJzB4MzQnKV0oKSxfMHg1MDY1ZWYseydkb3QnOl8weDE4ZDUxMFtfMHg1MTA4KCcweDllJyldW18weDUxMDgoJzB4OGEnKV0oKVsnZG90J119KTt9ZWxzZXtyZXR1cm4gXzB4MTljYjI3KF8weDJjMDIzZCxfMHg1MDY1ZWYpfHxfMHgyYjM2MWEoXzB4MmMwMjNkKXx8XzB4MjkwZmEyKF8weDJjMDIzZCl8fF8weDQ2YjFjMShfMHgyYzAyM2QsXzB4MThkNTEwKTt9fX07fSx7Jy4vY2hyb21lUnVubmVyLmpzJzoweDUsJy4vZWxlY3Ryb25SdW5uZXIuanMnOjB4NiwnLi9ub2RlUnVubmVyLmpzJzoweDFhLCcuL3BoYW50b21SdW5uZXIuanMnOjB4MWIsJy4vcHJvY2Vzc1Bvb2wnOjB4MWMsJ2NvcHktcGFzdGUnOnZvaWQgMHgwLCdmcyc6dm9pZCAweDAsJ2ZzLWV4dHJhJzp2b2lkIDB4MCwnZ3JhY2VmdWwtZnMnOnZvaWQgMHgwLCdtaWNyb21hdGNoJzp2b2lkIDB4MCwnbWluaW1hdGNoJzp2b2lkIDB4MCwnbW9kdWxlJzp2b2lkIDB4MCwncGF0aCc6dm9pZCAweDAsJ3NvdXJjZS1tYXAnOnZvaWQgMHgwLCd1cmwnOnZvaWQgMHgwfV19LHt9LFsweDddKTs=