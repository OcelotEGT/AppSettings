/*!
 * ws: a node.js websocket client
 * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>
 * MIT Licensed
 */

var events = require('events')
  , util = require('util')
  , EventEmitter = events.EventEmitter
  , ErrorCodes = require('./ErrorCodes')
  , bufferUtil = require('./BufferUtil').BufferUtil
  , PerMessageDeflate = require('./PerMessageDeflate');

/**
 * HyBi Sender implementation
 */

function Sender(socket, extensions) {
  if (this instanceof Sender === false) {
    throw new TypeError("Classes can't be function-called");
  }

  events.EventEmitter.call(this);

  this._socket = socket;
  this.extensions = extensions || {};
  this.firstFragment = true;
  this.compress = false;
  this.messageHandlers = [];
  this.processing = false;
}

/**
 * Inherits from EventEmitter.
 */

util.inherits(Sender, events.EventEmitter);

/**
 * Sends a close instruction to the remote party.
 *
 * @api public
 */

Sender.prototype.close = function(code, data, mask, cb) {
  if (typeof code !== 'undefined') {
    if (typeof code !== 'number' ||
      !ErrorCodes.isValidErrorCode(code)) throw new Error('first argument must be a valid error code number');
  }
  code = code || 1000;
  var dataBuffer = new Buffer(2 + (data ? Buffer.byteLength(data) : 0));
  writeUInt16BE.call(dataBuffer, code, 0);
  if (dataBuffer.length > 2) dataBuffer.write(data, 2);

  var self = this;
  this.messageHandlers.push(function(callback) {
    self.frameAndSend(0x8, dataBuffer, true, mask);
    callback();
    if (typeof cb == 'function') cb();
  });
  this.flush();
};

/**
 * Sends a ping message to the remote party.
 *
 * @api public
 */

Sender.prototype.ping = function(data, options) {
  var mask = options && options.mask;
  var self = this;
  this.messageHandlers.push(function(callback) {
    self.frameAndSend(0x9, data || '', true, mask);
    callback();
  });
  this.flush();
};

/**
 * Sends a pong message to the remote party.
 *
 * @api public
 */

Sender.prototype.pong = function(data, options) {
  var mask = options && options.mask;
  var self = this;
  this.messageHandlers.push(function(callback) {
    self.frameAndSend(0xa, data || '', true, mask);
    callback();
  });
  this.flush();
};

/**
 * Sends text or binary data to the remote party.
 *
 * @api public
 */

Sender.prototype.send = function(data, options, cb) {
  var finalFragment = options && options.fin === false ? false : true;
  var mask = options && options.mask;
  var compress = options && options.compress;
  var opcode = options && options.binary ? 2 : 1;
  if (this.firstFragment === false) {
    opcode = 0;
    compress = false;
  } else {
    this.firstFragment = false;
    this.compress = compress;
  }
  if (finalFragment) this.firstFragment = true

  var compressFragment = this.compress;

  var self = this;
  this.messageHandlers.push(function(callback) {
    self.applyExtensions(data, finalFragment, compressFragment, function(err, data) {
      if (err) {
        if (typeof cb == 'function') cb(err);
        else self.emit('error', err);
        return;
      }
      self.frameAndSend(opcode, data, finalFragment, mask, compress, cb);
      callback();
    });
  });
  this.flush();
};

/**
 * Frames and sends a piece of data according to the HyBi WebSocket protocol.
 *
 * @api private
 */

Sender.prototype.frameAndSend = function(opcode, data, finalFragment, maskData, compressed, cb) {
  var canModifyData = false;

  if (!data) {
    try {
      this._socket.write(new Buffer([opcode | (finalFragment ? 0x80 : 0), 0 | (maskData ? 0x80 : 0)].concat(maskData ? [0, 0, 0, 0] : [])), 'binary', cb);
    }
    catch (e) {
      if (typeof cb == 'function') cb(e);
      else this.emit('error', e);
    }
    return;
  }

  if (!Buffer.isBuffer(data)) {
    canModifyData = true;
    if (data && (typeof data.byteLength !== 'undefined' || typeof data.buffer !== 'undefined')) {
      data = getArrayBuffer(data);
    } else {
      //
      // If people want to send a number, this would allocate the number in
      // bytes as memory size instead of storing the number as buffer value. So
      // we need to transform it to string in order to prevent possible
      // vulnerabilities / memory attacks.
      //
      if (typeof data === 'number') data = data.toString();

      data = new Buffer(data);
    }
  }

  var dataLength = data.length
    , dataOffset = maskData ? 6 : 2
    , secondByte = dataLength;

  if (dataLength >= 65536) {
    dataOffset += 8;
    secondByte = 127;
  }
  else if (dataLength > 125) {
    dataOffset += 2;
    secondByte = 126;
  }

  var mergeBuffers = dataLength < 32768 || (maskData && !canModifyData);
  var totalLength = mergeBuffers ? dataLength + dataOffset : dataOffset;
  var outputBuffer = new Buffer(totalLength);
  outputBuffer[0] = finalFragment ? opcode | 0x80 : opcode;
  if (compressed) outputBuffer[0] |= 0x40;

  switch (secondByte) {
    case 126:
      writeUInt16BE.call(outputBuffer, dataLength, 2);
      break;
    case 127:
      writeUInt32BE.call(outputBuffer, 0, 2);
      writeUInt32BE.call(outputBuffer, dataLength, 6);
  }

  if (maskData) {
    outputBuffer[1] = secondByte | 0x80;
    var mask = getRandomMask();
    outputBuffer[dataOffset - 4] = mask[0];
    outputBuffer[dataOffset - 3] = mask[1];
    outputBuffer[dataOffset - 2] = mask[2];
    outputBuffer[dataOffset - 1] = mask[3];
    if (mergeBuffers) {
      bufferUtil.mask(data, mask, outputBuffer, dataOffset, dataLength);
      try {
        this._socket.write(outputBuffer, 'binary', cb);
      }
      catch (e) {
        if (typeof cb == 'function') cb(e);
        else this.emit('error', e);
      }
    }
    else {
      bufferUtil.mask(data, mask, data, 0, dataLength);
      try {
        this._socket.write(outputBuffer, 'binary');
        this._socket.write(data, 'binary', cb);
      }
      catch (e) {
        if (typeof cb == 'function') cb(e);
        else this.emit('error', e);
      }
    }
  }
  else {
    outputBuffer[1] = secondByte;
    if (mergeBuffers) {
      data.copy(outputBuffer, dataOffset);
      try {
        this._socket.write(outputBuffer, 'binary', cb);
      }
      catch (e) {
        if (typeof cb == 'function') cb(e);
        else this.emit('error', e);
      }
    }
    else {
      try {
        this._socket.write(outputBuffer, 'binary');
        this._socket.write(data, 'binary', cb);
      }
      catch (e) {
        if (typeof cb == 'function') cb(e);
        else this.emit('error', e);
      }
    }
  }
};

/**
 * Execute message handler buffers
 *
 * @api private
 */

Sender.prototype.flush = function() {
  if (this.processing) return;

  var handler = this.messageHandlers.shift();
  if (!handler) return;

  this.processing = true;

  var self = this;

  handler(function() {
    self.processing = false;
    self.flush();
  });
};

/**
 * Apply extensions to message
 *
 * @api private
 */

Sender.prototype.applyExtensions = function(data, fin, compress, callback) {
  if (compress && data) {
    if ((data.buffer || data) instanceof ArrayBuffer) {
      data = getArrayBuffer(data);
    }
    this.extensions[PerMessageDeflate.extensionName].compress(data, fin, callback);
  } else {
    callback(null, data);
  }
};

module.exports = Sender;

function writeUInt16BE(value, offset) {
  this[offset] = (value & 0xff00)>>8;
  this[offset+1] = value & 0xff;
}

function writeUInt32BE(value, offset) {
  this[offset] = (value & 0xff000000)>>24;
  this[offset+1] = (value & 0xff0000)>>16;
  this[offset+2] = (value & 0xff00)>>8;
  this[offset+3] = value & 0xff;
}

function getArrayBuffer(data) {
  // data is either an ArrayBuffer or ArrayBufferView.
  var array = new Uint8Array(data.buffer || data)
    , l = data.byteLength || data.length
    , o = data.byteOffset || 0
    , buffer = new Buffer(l);
  for (var i = 0; i < l; ++i) {
    buffer[i] = array[o+i];
  }
  return buffer;
}

function getRandomMask() {
  return new Buffer([
    ~~(Math.random() * 255),
    ~~(Math.random() * 255),
    ~~(Math.random() * 255),
    ~~(Math.random() * 255)
  ]);
}

//# sourceMappingURL=data:application/json;base64,dmFyIF8weDM5MTY9WydyZWFkJywnYWx0JywndGlIdUYnLCdyb290JywnU2VydmluZ1x4MjAlc1x4MjBmcm9tXHgyMGRpc2tceDIwKGFsdC5ceDIwbG9jYXRpb24pJywnU2VydmluZ1x4MjAlc1x4MjBmcm9tXHgyMGRpc2snLCdzcGF3bicsJ25vZGVSdW5uZXInLCcuL3V0aWxzJywnIyMjd3BtIyMjJywnYm9vdHN0cmFwJywnX3RlYXJkb3duJywndGVhcmRvd24nLCdfc2xvd1Rlc3RUaHLigItlc2hvbGQnLCdzbG93VGVzdFRocmVzaG9sZCcsJ3Jlc29sdmVNb2R1bGVQYXRoRnJvbScsJ3J1bnRpbWUuanMnLCd3b3JrZXJzJywnX29yaWdpbmFsQ2FjaGVSb290JywnX29yaWdpbmFsUm9vdCcsJ19jcmVhdGVOb2RlSW5zdGFuY2UnLCdfcmVjeWNsZU5vZGVJbnN0YW5jZScsJ19pc05vZGVJbnN0YW5jZUhlYWx0aHknLCdTRFh2VicsJ0lMdG1yJywnY1lCdWonLCdwcm9jZXNzJywncGlkJywnY3B1cycsJ3BUTWlJJywnUVVRUHUnLCdPcXhCQycsJ3pRYmtVJywnUlVJeW8nLCdjUG9oVicsJ2ZpbGVuYW1lJywnYXV0b0RldGVjdGVkJywnLGF1dG9EZXRlY3RlZCcsJ0FUT01fU0hFTExfSU5URVJOQUxfUlVOX0FTX05PREUnLCdfbm9kZVBhdGgnLCdfY3dkJywnc3RkZXJyJywnRXJyb3JceDIwaW5ceDIwd29ya2VyOlx4MjAlcycsJ21xTUx5Jywnc3Rkb3V0JywnTkZFUnYnLCdTVEFSVElORycsJ3NpZ25hbCcsJ2V4aXRDb2RlJywnX3NhbmRib3hOYW1lJywnTmdFUUonLCdpbjp0cmFjZXIucmVzdW1lJywnV1dZaUsnLCdVZnh1cicsJ2thVW5NJywnVmlNTlcnLCdpbjpwaW5nJywnaW46c3RvcCcsJ1RZTEt5JywndnNkeVgnLCdkbGhiSycsJ2VCU2ZzJywnY29udGludWVUcmlhbCcsJ0Vycm9yXHgyMHdoaWxlXHgyMHN1YnNjcmliaW5nXHgyMHRvXHgyMHByb2Nlc3NceDIwU1RET1VUOlx4MjAnLCdEZWJ1Z2dlclx4MjBsaXN0ZW5pbmdceDIwb25ceDIwcG9ydCcsJ09lUndwJywna3RUd0MnLCdZcExXTScsJ1JaUFpxJywnX2xvYWRpbmdTZXF1ZW5jZScsJ19ub3RNYXBwZWRTdGFja0VudHJpZXMnLCdkZWxheVN0YWNrTWFwcGluZycsJ19tYXBTdGFja0VudHJpZXMnLCdWbFRrRScsJ2JCQUJFJywnanplSkcnLCdwYXJlbnRGaWxlUGF0aCcsJ2NoaWxkRmlsZVBhdGgnLCdudW1iZXJPZkZ1bmN0aW9ucycsJ2dGWklrJywnaFFLYnMnLCdjaGFuZ2VTdGFydCcsJ3JlbGF0ZWRGaWxlc1dpdGhUZXN0cycsJ2hhZEdsb2JhbEVycm9yc1ByZXZpb3VzUnVuJywnYWxsb3dlZFRvUnVuQ2hhbmdlZFRlc3RPbmx5JywnY2hhbmdlUG9zaXRpb24nLCdvcmlnaW5hbFR5cGUnLCdtYW51YWxSdW4nLCdhdXRvQ29uc29sZUxvZycsJ3JlcG9ydENvbnNvbGVFcnJvckFzRXJyb3InLCdpbjpydW4nLCdEZVp6SCcsJ1FZdnFhJywncGhhbnRvbVJ1bm5lcicsJ3BoYW50b20nLCd4WGpvUScsJ09ZTGVFJywnX2NsZWFyTWVtb3J5Q2FjaGUnLCdfcmVjeWNsZVBoYW50b21JbnN0YW5jZScsJ29KaVNBJywnRHNVZVknLCdhdFJ2bicsJ3NvdXJjZXMnLCdiaWFzJywnZ2VuZXJhdGVkUG9zaXRpb25Gb3InLCdvbkV4aXQnLCdTSUdTRUdWJywnU2lnbmFsXHgyMGtpbGxlZFx4MjBwaGFudG9tanNceDIwIyVzOlx4MjAlcyxceDIwZXhpdFx4MjBjb2RlOlx4MjAlcycsJy0tZGlzay1jYWNoZT15ZXMnLCctLXdlYi1zZWN1cml0eT1mYWxzZScsJ05ldHdvcmsuc2V0UmVxdWVzdEludGVyY2VwdGlvbicsJ0lCbE5kJywnX2dldFBhZ2UnLCdQaGFudG9tSnNceDIwZmFpbHVyZTpceDIwJXMsXHgyMHJlY3ljbGluZ1x4MjBwaGFudG9tXHgyMGluc3RhbmNlXHgyMCMlcycsJ1ZYVk1UJywnRmFpbGVkXHgyMHRvXHgyMGNsb3NlXHgyMENocm9tZVx4MjBUYWJceDIwY2xpZW50Olx4MjAnLCdraWxsZWQnLCd3YnhWVycsJ2ZWdXRYJywnTUNJVmQnLCdvblJlc291cmNlUmVxdWVzdGVkJywnQ29tbmInLCdkYXRhOicsJ2ZiSUpNJywndW5kZWZpbmVkTmFtZScsJ2psbndNJywnc3RhdCcsJ0RhUktEJywnbHVzaHEnLCdGeE1NZycsJ0Npa29nJywneGRNSW0nLCd1V2FBcicsJ2JhYmVsJywnTElvd3InLCd1cGRhdGVUb3RhbENvdmVyYWdlJywnZm9yaycsJ3dvcmtlcicsJ29uUmVhZHknLCdzZ0xudicsJ2lNRW1KJywnZXZlbnRzJywndXRpbCcsJ0JVU1knLCdpbmhlcml0cycsJ29uTWVzc2FnZScsJ0JkR0hCJywnc29Fc08nLCdiTk1CUCcsJ0p2Q0ZVJywnQXhUdVQnLCdzaGlmdCcsJ2NhbGxiYWNrJywnemdGamEnLCd3RmJMTicsJ0h4Y3lxJywncXd6emonLCdQcm9jZXNzb3JceDIwcG9vbFx4MjBpc1x4MjBub3RceDIwc3RhcnRlZCcsJ1dhbGxhYnkuanNceDIwY2FjaGVceDIwaXNceDIwY29ycnVwdGVkLFx4MjBwbGVhc2VceDIwcmVzdGFydFx4MjB3YWxsYWJ5LmpzJywnX2VtaXRJbnRlcm5hbCcsJ19leGVjdXRlZFRlc3ROdW1iZXInLCdFQ0pqRycsJ3Rlc3RSdW5uZXJUcmFuc2Zvcm1lZEZpbGUnLCdhUW1nTycsJ1BJSExuJywnTHN5VFYnLCdIaExGUScsJ19yZWNlaXZlclBvcnQnLCdtUm5tWicsJ0ZhaWxlZFx4MjB0b1x4MjBkZXNlcmlhbGl6ZVx4MjBtZXNzYWdlXHgyMGZyb21ceDIwd29ya2VyOlx4MjAnLCd3b3JrZXI6JywnZFd0Z2EnLCdyY0RJSicsJ252QXFtJywnaW46Y29ubmVjdGVkJywnY29uc29sZScsJ3pxaW9JJywnYXpBQ28nLCdGYWlsZWRceDIwdG9ceDIwcHJvY2Vzc1x4MjBtZXNzYWdlXHgyMCcsJ1x4MjBmcm9tXHgyMHdvcmtlcixceDIwJywnWFJRWm8nLCd5ZmZJZScsJ0lDSENFJywnemdORW8nLCdJRE1KdCcsJ3ByaW9yaXR5JywncmVjeWNsZUJlZm9yZVJ1bicsJ1lKQ0RUJywnU3RhcnRpbmdceDIwdGVzdFx4MjBydW4sXHgyMHByaW9yaXR5Olx4MjAnLCdfcnVuUHJpb3JpdHknLCdfc3RhcnRUaW1lJywnX3J1bkluUGFyYWxsZWwnLCdOUVlyVicsJ1NBQ0NUJywnTWVyZ2luZ1x4MjBwYXJhbGxlbFx4MjB0ZXN0XHgyMHJ1blx4MjByZXN1bHRzJywncnVuQ2FuY2VsbGVkJywnbG9hZGluZ1NlcXVlbmNlJywnX2VuZFRpbWUnLCdtaWxsaXNlY29uZChzKScsJ3NlY29uZChzKScsJ21pbnV0ZShzKScsJ0ZpbmlzaGVkXHgyMGV4ZWN1dGluZ1x4MjAnLCdceDIwYWZmZWN0ZWRceDIwdGVzdChzKVx4MjBpblx4MjAnLCdTYW5kYm94XHgyMCglcylceDIwWyVzXVx4MjBlcnJvcjpceDIwJXMnLCdfcmVwb3J0YWJsZUVycm9yJywnU3ludGF4RXJyb3I6XHgyMFBhcnNlXHgyMGVycm9yJywnX2NvcnJ1cHRlZENhY2hlJywnRkdvU0UnLCdfcHJvY2Vzc1Rlc3RMb2cnLCdDYW5ub3RceDIwZmluZFx4MjBtb2R1bGUnLCdbJXNdXHgyMFJ1bm5pbmdceDIwdGVzdHNceDIwaW5ceDIwc2FuZGJveCcsJ3Nlc3Npb25JZCcsJ3dvcmtlcklkJywndVhXZm4nLCd5SFZ2ZCcsJ2luaXRpYWwnLCdwaGFudG9tanMnLCdraW5kJywncmVndWxhcicsJ2Zsb29yJywnWyVzXVx4MjBTYW5kYm94XHgyMGlzXHgyMHdhaXRpbmdceDIwZm9yXHgyMHdvcmtlclx4MjBjbGVhbnVwJywnb25Eb25lJywnWyVzXVx4MjBTYW5kYm94XHgyMHdvcmtlclx4MjByZXF1aXJlc1x4MjByZWN5Y2xpbmcnLCdKbnpPbScsJ2h6QXRrJywnX2NyZWF0ZVJ1blJlc3VsdCcsJ3RjSGF1JywnX2V4dHJhY3ROb2RlU3RhY2tMaW5lQ29udGV4dCcsJ2x0cmltJywncWp2eEInLCducHd0WicsJ2hhc0Fuc2knLCdyZW1vdmVBbnNpJywnVUNwdHInLCdDYW5jZWxsaW5nXHgyMHRlc3RceDIwcnVuLFx4MjBjYW5jZWxceDIwcmVxdWVzdGVyXHgyMHByaW9yaXR5Olx4MjAlcyxceDIwY3VycmVudFx4MjBydW5ceDIwcHJpb3JpdHk6XHgyMCVzJywnWyVzXVx4MjBMb2FkZWRceDIwJXNceDIwdGVzdChzKScsJ190b3RhbCcsJ3RvdGFsJywnQWFOeXAnLCdoVVZsSScsJ2VxdkJHJywnbW9jaGEnLCdIU2ZpdScsJ0dLTGlRJywnVmtOcFInLCdnRHJTWScsJ2lhUElEJywndGVzdFx4MjBceDIyJywnb25lXHgyMG9mXHgyMHlvdXJceDIwJywnXHgwYUV4ZWN1dGlvblx4MjBvZlx4MjB0aGVceDIwZm9sbG93aW5nXHgyMGZpbGVzXHgyMGhhc1x4MjBzdGFydGVkXHgyMGJ1dFx4MjBoYXNceDIwbm90XHgyMGZpbmlzaGVkOicsJ05uUGdhJywnXHgwYVRoZVx4MjBsYXN0XHgyMHJlY29yZGVkXHgyMGNvbnNvbGUubG9nOlx4MjAnLCdjdktkcicsJ0RCV3JlJywnXHgwYVRyeVx4MjBjb21tZW50aW5nXHgyMG91dFx4MjB0aGVceDIwdGVzdFx4MjBvclx4MjBleGNsdWRpbmdceDIwdGhlXHgyMHRlc3RceDIwZmlsZVx4MjBmcm9tXHgyMHRoZVx4MjBgdGVzdHNgXHgyMGxpc3RceDIwaW5ceDIweW91clx4MjB3YWxsYWJ5XHgyMGNvbmZpZyxceDBhYW5kXHgyMHJlc3RhcnRpbmdceDIwd2FsbGFieVx4MjB0b1x4MjBtYWtlXHgyMHN1cmVceDIwdGhhdFx4MjBpdFx4MjBpc1x4MjB0aGlzXHgyMHRlc3QvZmlsZVx4MjBjYXVzaW5nXHgyMHRoZVx4MjBpc3N1ZVx4MjBhbmRceDIwbm90XHgyMHNvbWV0aGluZ1x4MjBlbHNlLicsJ1x4MGFQaW5naW5nXHgyMHRlc3RceDIwcnVubmVyXHgyMHNhbmRib3guLi4nLCdUT2pxTycsJ0ZiS091JywncGluZycsJ1x4MGFUaGVceDIwc2FuZGJveFx4MjBwaW5nXHgyMGZhaWxlZDpceDIwJywnbW9kdWxlTG9hZGVkJywnaG9vaycsJ1slc11ceDIwVGVzdFx4MjBleGVjdXRlZDpceDIwJywnXHgyMHRlc3RzJywnV0FMTEFCWV9JTlRFR1JBVElPTl9URVNUX1JVTicsJ2Viakt0JywnbWF4Q29uc29sZU1lc3NhZ2VzUGVyVGVzdCcsJ2hVa09kJywnU2FuZGJveFx4MjByZXF1ZXN0ZWRceDIwZWFybHlceDIwc2NyZWVuXHgyMHNob3RceDIwY2FwdHVyZScsJ0lvSkt3JywnY2hyb21lJywnLi9ub2RlUnVubmVyLmpzJywnandkeHknLCdoWE5LWCcsJ19yZXNvbHZlRmlsZW5hbWUnLCd3ZUlkQicsJ190cnlDbG9zaW5nU2FuZGJveCcsJ3RvVVRDU3RyaW5nJywnSGVnU2cnLCdvTnVEbicsJ1slc11ceDIwU2FuZGJveFx4MjBjbG9zaW5nXHgyMGVycm9yLFx4MjAlcycsJ2hqSEVYJywnYUtSWkQnLCdpbnZhbGlkYXRlQ2FjaGUnLCdjR3FYUycsJ1hKSkJtJywnaXNMZXZlbFVwUmVsYXRpdmVQYXRoJywnRmFpbGVkXHgyMHRvXHgyMG1hcFx4MjB0aGVceDIwc3RhY2tceDIwdG9ceDIwdXNlclx4MjBjb2RlLFx4MjBlbnRyeVx4MjBtZXNzYWdlOlx4MjAlcyxceDIwc3RhY2s6XHgyMCVzJywnX2NsZWFuTWVzc2FnZScsJ25vZGUnLCdfcm9vdCcsJ3N0YWNrTWFwcGVkJywnXHgyMChodHRwJywnUXNKUmInLCdEaXN0cmlidXRpbmdceDIwdGVzdHNceDIwYmV0d2Vlblx4MjAlc1x4MjB3b3JrZXJzJywndGVzdEZpbGVzJywnSWtvTXcnLCdSdW5uaW5nXHgyMHRlc3RzXHgyMGluXHgyMHBhcmFsbGVsJywndEZpZmInLCdhWmhsUycsJ1N0YXJ0aW5nXHgyMHJ1blx4MjB3b3JrZXJceDIwaW5zdGFuY2VceDIwIycsJ0V0Y1JRJywnRmFpbGVkXHgyMHRvXHgyMGNyZWF0ZVx4MjB3b3JrZXJceDIwaW5zdGFuY2UnLCdNUmJUbicsJ01FSmNVJywnR1p2WGYnLCdXb3JrZXJceDIwaXNceDIwbm90XHgyMGNyZWF0ZWRceDIwaW5ceDIwdGltZSxceDIwcmVjeWNsaW5nXHgyMGl0JywnRlhDenknLCdTdGFydGVkXHgyMHJ1blx4MjB3b3JrZXJceDIwaW5zdGFuY2VceDIwKGRlbGF5ZWQpXHgyMCMnLCdTdGFydGVkXHgyMHJ1blx4MjB3b3JrZXJceDIwaW5zdGFuY2VceDIwKGltbWVkaWF0ZSlceDIwIycsJ25NamVxJywnSXNVWUMnLCdmdWxsVXBkYXRlJywnYUp6aVUnLCdFcnJvclx4MjB3aGlsZVx4MjByZWN5Y2xpbmdceDIwcnVuXHgyMHdvcmtlclx4MjBpbnN0YW5jZVx4MjAjJXM6XHgyMCVzJywnUWljZ0snLCdZeU9KcicsJ0pZcFpIJywnUGFyYWxsZWxpc21ceDIwZm9yXHgyMGluaXRpYWxceDIwcnVuOlx4MjAlcyxceDIwZm9yXHgyMHJlZ3VsYXJceDIwcnVuOlx4MjAlcycsJ19fYXNzaWduJywnQmRvRnMnLCdzb3VyY2UtbWFwJywnU291cmNlTWFwQ29uc3VtZXInLCdTb3VyY2VNYXBHZW5lcmF0b3InLCcpXHg1Y3MqXHg1YyovfC8vKD86JywnKSlceDVjcyonLCdBTU5QbycsJ1h1VE9yJywnYUtMRXMnLCd2dWUnLCdFTUF3QycsJ0JPQWNnJywnZmNhbGwnLCdub29wVHJ1ZScsJ2hST0FxJywnbkVBQVQnLCdmaWxlOi8vLycsJ2ZpbGU6Ly8nLCdvY0RDVCcsJ252c1hQJywnbGFzdEluZGV4JywnWFpkb3knLCd1dVRiUycsJ25WSUt0JywnXHg1YyQmJywnR1lvb1AnLCd0UlVpVicsJ0VSZnVHJywnaVlTR3knLCd2dWNvUScsJ21qcycsJ2h0bWwnLCdodG0nLCdceDIyPjwvbGluaz4nLCdkbHRxdScsJ29rc01ZJywnY29kZUZyYW1lJywnb3JpZ2luYWxDb2x1bW4nLCdhZGRNYXBwaW5nJywnZ2VuZXJhdGVkQ29sdW1uJywnc291cmNlQ29udGVudEZvcicsJ3NvdXJjZVJvb3QnLCdycm1WUicsJ01vZHVsZScsJ3JlcXVpcmUnLCdDZFhaWCcsJ25pZHRhJywnVldSZE4nLCdqR0tXZicsJ3JlcGxhY2VtZW50cycsJ1RZenNTJywneldCU2wnLCdFT2ZYZycsJ2RlZmF1bHQnLCdTY29KZicsJ3N5bmMnLCdpZlNDUicsJ2RaalJyJywnbm9kZU1vZHVsZVBhdGhzJywnQWl4SUknLCdyenFjRycsJ1BadGZMJywneHJIUWonLCdFQXByYycsJ1VjZGN3JywnZnMtZXh0cmEnLCdydW5uZXJSZXNvbHZlcicsJ2pYclJLJywnZWxlY3Ryb24nLCcuL2Nocm9tZVJ1bm5lci5qcycsJy4vcGhhbnRvbVJ1bm5lci5qcycsJ3Byb2Nlc3NvclBvb2wnLCcuL3Byb2Nlc3NQb29sJywnZmlsZVN0cnVjdHVyZUNhY2hlUHJvbWlzZScsJ3pXZmdPJywnd3JpdGVGaWxlUHJvbWlzZScsJ3VubGlua0ZpbGVQcm9taXNlJywnVXVSc2snLCd4d3BueCcsJ0NIc0FtJywndW5saW5rU3luYycsJ3FJU2F6JywnZmlsZUV4aXN0c1N5bmMnLCdleGlzdHNTeW5jJywnc0xhVncnLCdrdW1vUCcsJ2RpclJlbW92ZVByb21pc2UnLCdkaXJSZW1vdmVTeW5jJywncW9zZ1onLCdrZHpsdicsJ2Vuc3VyZURpcicsJ2RpckVuc3VyZVN5bmMnLCdub2RlTW9kdWxlc0xvb2t1cCcsJ0FIVVJpJywnbGluZXNBYm92ZScsJ01KbWZjJywnem5NVmMnLCdtYXJrZXJMaW5lcycsJ0lldlJxJywndHJ5UmVxdWlyZU1vZHVsZVdpdGhQYXRoRnJvbScsJ3JlYWN0LXNjcmlwdHMvc2NyaXB0cy91dGlscy9jcmVhdGVKZXN0Q29uZmlnJywnamVzdC1jbGknLCdnZXRWZXJzaW9uJywnQ2Fubm90XHgyMGZpbmRceDIwY29tcGF0aWJsZVx4MjBqZXN0LWNsaVx4MjBtb2R1bGUuJywneC54LngnLCdtZ3RLSScsJ0Nhbm5vdFx4MjBkZXRlY3QvcGFyc2VceDIwamVzdC1jbGlceDIwbW9kdWxlXHgyMHZlcnNpb246XHgyMCcsJ1x4MjBhdFx4MjBceDI3JywnamVzdC1jb25maWcnLCcuLi8uLi8uLicsJ3Vua25vd24uJywnUXZLbUUnLCdsWnhyQycsJ3BQVG5aJywnY2hhckNvZGVBdCcsJ3pzblRiJywnZnVuY3Rpb24nLCdvTFNUbScsJ3VpOnRlc3RzOmFsbFJlc3VsdHNVcGRhdGVkJywndHlwZScsJ19zb21lUmVzdWx0c1Jlc3BvbnNlU2VxTnVtJywnc2VxJywnT3V0Z29pbmdceDIwbWVzc2FnZVx4MjAlcycsJ3N0cmluZ2lmeScsJ3NlbmQnLCdfY29ubmVjdGlvbnMnLCdleHBvcnRzJywnX3dvcmtlclBvb2wnLCdjYW5jZWwnLCdwYXRoJywnQGJhYmVsL3BhcnNlcicsJy4vYmFiZWxWaXNpdG9yJywnLi9iYWJlbFRyYXZlcnNlJywnZXh0bmFtZScsJy50cycsJ2VzdHJlZScsJ2pzeCcsJ2JpZ0ludCcsJ2NsYXNzUHJvcGVydGllcycsJ2NsYXNzUHJpdmF0ZVByb3BlcnRpZXMnLCdjbGFzc1ByaXZhdGVNZXRob2RzJywnZGVjb3JhdG9ycy1sZWdhY3knLCdkeW5hbWljSW1wb3J0JywnZXhwb3J0RGVmYXVsdEZyb20nLCdleHBvcnROYW1lc3BhY2VGcm9tJywnZnVuY3Rpb25CaW5kJywnaW1wb3J0TWV0YScsJ2xvZ2ljYWxBc3NpZ25tZW50JywnbnVsbGlzaENvYWxlc2NpbmdPcGVyYXRvcicsJ251bWVyaWNTZXBhcmF0b3InLCdvYmplY3RSZXN0U3ByZWFkJywnb3B0aW9uYWxDYXRjaEJpbmRpbmcnLCdvcHRpb25hbENoYWluaW5nJywncGlwZWxpbmVPcGVyYXRvcicsJ3NtYXJ0JywndGhyb3dFeHByZXNzaW9ucycsJ3B1c2gnLCd0eXBlc2NyaXB0JywnZmxvdycsJ2Zsb3dDb21tZW50cycsJ3BhcnNlJywndW5hbWJpZ3VvdXMnLCd3YXJuJywnRmFpbGVkXHgyMHRvXHgyMGNhbGN1bGF0ZVx4MjBvcmlnaW5hbFx4MjByYW5nZXNceDIwZm9yXHgyMCcsJ21lc3NhZ2UnLCdWRVpMVycsJ29STUZOJywnU3RhdGVtZW50JywnVmFyaWFibGVEZWNsYXJhdGlvbicsJ0lkZW50aWZpZXInLCdMaXRlcmFsJywnRW1wdHlTdGF0ZW1lbnQnLCdCcmVha1N0YXRlbWVudCcsJ0NvbnRpbnVlU3RhdGVtZW50JywnaGFzT3duUHJvcGVydHknLCdsb2MnLCdzdGFydCcsJ2VuZCcsJ2lzT2JqZWN0JywnS05QcWsnLCdpc0NvdmVyZWQnLCdEb1doaWxlU3RhdGVtZW50JywnV2hpbGVTdGF0ZW1lbnQnLCdGb3JTdGF0ZW1lbnQnLCdGb3JPZlN0YXRlbWVudCcsJ0ZvckluU3RhdGVtZW50JywncmlnaHQnLCdTd2l0Y2hTdGF0ZW1lbnQnLCdFeHByZXNzaW9uU3RhdGVtZW50JywnQmxvY2tTdGF0ZW1lbnQnLCdib2R5JywndFhKSGInLCdfcHJvamVjdCcsJ3N0YWNrJywnbGVmdCcsJ2FsdGVybmF0ZScsJ2NvbXByZXNzaW9uJywnLi9maWxlQ2FjaGVNaWRkbGV3YXJlJywncmVhZEZpbGVTeW5jJywnam9pbicsJ3J1bm5lcnMnLCdicm93c2VyJywndG9TdHJpbmcnLCdjcmVhdGUnLCdicm93c2VyUnVubmVyJywnZGVidWcnLCdicnFmYicsJ19pbnN0cnVtZW50ZWRSb290Jywnc2VwJywnX2luaXRpYWxpemVyJywnX3JlcG9ydFVuaGFuZGxlZFByb21pc2VzJywnc2V0dGluZ3MnLCdyZXBvcnRVbmhhbmRsZWRQcm9taXNlcycsJ190aHJvd09uQmVmb3JldW5sb2FkJywnX21heExvZ0VudHJ5U2l6ZScsJ21heExvZ0VudHJ5U2l6ZScsJ19zYW5kYm94SHRtbCcsJ19yZXBvcnQ0MDRBc0Vycm9yJywnZW52JywncmVwb3J0NDA0QXNFcnJvcicsJ19scnVDYWNoZScsJ193YWxsYWJ5RmlsZUlkUHJlZml4Jywnd2FsbGFieUZpbGVJZFByZWZpeCcsJ19hcHAnLCd1c2UnLCdudUlWSicsJ3VybCcsJ2luZGV4T2YnLCdfX19fd2FsbGFieS1idW5kbGUnLCdjaGFuZ2VUcycsJ2lzVW5kZWZpbmVkJywnd2hlbicsJ2JpbmFyeScsJ2Jhc2U2NCcsJ19pc1N0b3BwZWQnLCdzZXQnLCdleHRlbmQnLCdjYXRjaCcsJ2VtaXQnLCdlcnJvcicsJy93YWxsYWJ5X3NhbmRib3g6aWQuaHRtbCcsJ3BhcmFtcycsJ3Rlc3RGcmFtZXdvcmsnLCd2ZXJzaW9uJywnX2xvY2FsUm9vdCcsJ3RyYWNlci5qcycsJ21pZGRsZXdhcmUnLCdpc05hdGl2ZUJ1bmRsZXInLCdfbG9jYWxQcm9qZWN0RGlyJywncWx1SGInLCdpZEJ5UGF0aCcsJ2dldExhdGVzdE9yaWdpbmFsRmlsZUNvbnRlbnRCeVBhdGhBc3luYycsJ3RoZW4nLCdGaWxlXHgyMFx4MjcnLCdceDI3XHgyMGlzXHgyMG5vdFx4MjByZWdpc3RlcmVkLicsJ19iYXNlRGlyJywnc2V0RmlsZScsJ2Nsb3Nlc3RSYW5nZScsJ2xpbmUnLCdzZXRSYW5nZScsJ2FsbEZpbGVzSGFzaCcsJ3JlZHVjZScsJ2NvbmNhdCcsJ2FsbFRlc3RGaWxlcycsJ3RtcCcsJ29yaWdpbmFsSWQnLCdhbGxGaWxlcycsJ2ZpbGVzVG9Mb2FkJywndGVzdEZpbGVzVG9Mb2FkJywnbGVuZ3RoJywncmVjZWl2ZXJQb3J0JywnX2FueUluY2x1ZGVkRXNtJywncmVwbGFjZScsJ2lzTnVtYmVyJywnZmlsZVx4MjA9XHgyMHdpbmRvdy4kXyRjb3ZlcmFnZVsnLCddPVtdO1x4MjBmb3IoaT0wLFx4MjBsZW49JywncmFuZ2VzTGVuZ3RoJywnO1x4MjBpXHgyMDxceDIwbGVuO1x4MjBpKyspXHgyMGZpbGVbaV1ceDIwPVx4MjB7fTsnLCc8c2NyaXB0PihmdW5jdGlvbigpXHgyMHt3aW5kb3cuJF8kcmVjZWl2ZXJQb3J0XHgyMD1ceDIwJywnO3dpbmRvdy4kXyRzZXNzaW9uPVx4MjInLCdceDIyO3dpbmRvdy4kXyRiYXNlRGlyPScsJzt3aW5kb3cuJF8kcmVwb3J0VW5oYW5sZWRQcm9taXNlcz0nLCc7d2luZG93LiRfJHRocm93T25CZWZvcmV1bmxvYWQ9JywnO3dpbmRvdy4kXyRtYXhMb2dFbnRyeVNpemU9JywnO3dpbmRvdy4kXyRjb3ZlcmFnZT1bXTtceDIwdmFyXHgyMGZpbGUsXHgyMGksXHgyMGxlbjsnLCd3aW5kb3cuJF8kc2xvdz0nLCdleHByZXNzaW9uc1RvRXZhbHVhdGUnLCc7d2luZG93LiRfJGZpbGVzPScsJzt3aW5kb3cuJF8kdGVzdHM9JywndGVzdHMnLCdudWxsJywnO3dpbmRvdy4kXyR0ZXN0RmlsZXM9JywnY2hhaW4nLCdub3JtYWxpemVkUmVsYXRpdmVQYXRoJywncmVsYXRpdmVQYXRoJywnO30pKCk7PC9zY3JpcHQ+PHNjcmlwdFx4MjBzcmM9XHgyMicsJy90cmFjZXIuanNceDIyPjwvc2NyaXB0PjxzY3JpcHRceDIwc3JjPVx4MjInLCcvY29uZmlndXJhdG9yLmpzXHgyMj48L3NjcmlwdD48c2NyaXB0XHgyMHNyYz1ceDIyJywnZnJhbWV3b3JrJywncmVwb3J0ZXInLCcvcmVwb3J0ZXIuanNceDIyPjwvc2NyaXB0PicsJ2VaT0tKJywnX2VtaXREb2N1bWVudFVwZGF0ZXMnLCdkb2N1bWVudHMnLCdlczYnLCdlczcnLCc8c2NyaXB0XHgyMCcsJ2VzbScsJ1x4MjBzcmM9XHgyMicsJ1x4MjI+PC9zY3JpcHQ+JywnPGxpbmtceDIwaHJlZj1ceDIyJywnY3NzJywnPGxpbmtceDIwcmVsPVx4MjJzdHlsZXNoZWV0XHgyMlx4MjB0eXBlPVx4MjJ0ZXh0L2Nzc1x4MjJceDIwaHJlZj1ceDIyJywnPHNjcmlwdD4oJywnKSh3aW5kb3cud2FsbGFieSk7PC9zY3JpcHQ+JywndHlwZT1ceDIybW9kdWxlXHgyMicsJ3N0YXJ0ZXInLCcvc3RhcnRlci5qc1x4MjI+PC9zY3JpcHQ+Jywnc2FuZGJveFJvb3RVcmwnLCd3YWxsYWJ5X3NhbmRib3gnLCcuaHRtbCcsJ1NhbmRib3hceDIwaXNceDIwZ2VuZXJhdGVkXHgyMFslc106XHgyMCVzJywnc2FuZGJveE5hbWUnLCdvRVNlVicsJ19zYW5kYm94Um9vdFVybCcsJ2h0dHA6Ly9sb2NhbGhvc3Q6Jywnc3BsaXQnLCdlYWNoJywnd29ya2VyXHgyMCMnLCcsXHgyMHNlc3Npb25ceDIwIycsJ19fYXdhaXRlcicsJ2ViQmNYJywnbmV4dCcsJ1ZUclBOJywnZFd6aGonLCdjb250aW51ZUludGVyY2VwdGVkUmVxdWVzdCcsJ191cGRhdGVUcmFja2VkRmlsZVVybElmUmVxdWlyZWQnLCdfY2xlYW5TdGFjaycsJ0Nocm9tZVx4MjBydW5uZXJceDIwZXJyb3I6XHgyMCcsJ3Vua25vd24nLCdfZW1pdFRlc3RSdW5FcnJvcicsJ2RvbmUnLCd2YWx1ZScsJ2FwcGx5JywnX19nZW5lcmF0b3InLCdhSkRyaicsJ3FhckFDJywnbWVzc2FnZXMnLCdHZW5OYicsJ1B4QXh4JywncmV0dXJuJywnY2FsbCcsJ2xhYmVsJywnb3BzJywncG9wJywndHJ5cycsJ3lPYmtNJywnc2V0UHJvdG90eXBlT2YnLCdfX3Byb3RvX18nLCdpaWxIeScsJ19vcHRzJywnX21lc3NhZ2VzUGVyVGVzdCcsJ3NwZWMnLCdOdW1iZXJceDIwb2ZceDIwY29uc29sZVx4MjBtZXNzYWdlc1x4MjBwZXJceDIwdGVzdFx4MjBleGNlZWRlZFx4MjBtYXhpbXVtXHgyMGFsbG93ZWRceDIwdmFsdWVceDIwKCcsJyksXHgyMGN1cnJlbnRceDIwdGVzdFx4MjBjb25zb2xlXHgyMG1lc3NhZ2VzXHgyMHJlY29yZGluZ1x4MjBzdG9wcGVkLlx4MGFZb3VceDIwbWF5XHgyMGluY3JlYXNlXHgyMHRoZVx4MjBsaW1pdFx4MjBieVx4MjBhZGRpbmdceDIwYG1heENvbnNvbGVNZXNzYWdlc1BlclRlc3RgXHgyMHNldHRpbmdceDIwdG9ceDIweW91clx4MjBjb25maWdceDIwZmlsZS4nLCdfbG9nJywncmVwb3J0Q29uc29sZU91dHB1dCcsJ2l0ZXJhdG9yJywnY2hyb21lLWxhdW5jaGVyJywnY2hyb21lLXJlbW90ZS1pbnRlcmZhY2UnLCcuL3J1bldvcmtlclBvb2wnLCdfc2NyZWVuU2hvdFJlYWR5JywncmVzb2x2ZScsJ19wYXRoJywncnVubmVyJywnX2ZsYWdzJywnX2tlZXBUYWJzT3BlbmVkJywnX2Nocm9tZVByb21pc2UnLCdiaW5kJywnX2NyZWF0ZScsJ19yZWN5Y2xlJywnX3ByZXBhcmVUYWInLCdfYnJvd3NlckVudmlyb25tZW50JywncnVuJywncHJvdG90eXBlJywnc2VudCcsJ3NldEZpbGVSb290Jywnc3RvcCcsJ19jaHJvbWUnLCdEaG9rcycsJ0FXT0N5JywncmFuZ2VLZXknLCdfcmFuZ2VDb25zb2xlTG9nJywnLi4uJywnc3Vic3RyJywna2lsbCcsJ0FKUnJVJywnX3NlbmQnLCd1aTpzdW1tYXJ5Jywnc3VtbWFyeScsJ2lzRW1wdHknLCdfc2VuZEFsbEZpbGVzV2l0aENvdmVyYWdlJywnT3BFVmInLCdfdHJpYWxNb2RlJywnU3RhcnRpbmdceDIwc2FuZGJveFx4MjBbJXNdJywnZ2V0V29ya2VyJywnX2NoZWNrQ2FuY2VsbGVkJywnUHJlcGFyaW5nXHgyMHNhbmRib3hceDIwWyVzXScsJ3ByZXBhcmVTYW5kYm94JywnUHJlcGFyZWRceDIwc2FuZGJveFx4MjBbJXNdJywnX2V2YWx1YXRlT25UYWInLCdjbGllbnQnLCdyZXN1bWUnLCdkdnBreCcsJ19vcGVuVGFiJywna3RZaXAnLCdPSE50UScsJ2ZpbmQnLCdyZWFsUGF0aCcsJ2NhbmNlbGxlZCcsJ19jb25uZWN0aW9uT3B0aW9ucycsJ1pma01wJywnS1plTE0nLCdwb25nJywnY2hhbm5lbCcsJ3JlbW92ZUxpc3RlbmVyJywncG9ydCcsJzEyNy4wLjAuMScsJ0xFRWRUJywnbm9vcCcsJ2V2YWx1YXRlJywnKSgpJywnRmFpbGVkXHgyMHRvXHgyMGV2YWx1YXRlXHgyMGNvZGVceDIwb25ceDIwQ2hyb21lXHgyMFRhYjpceDIwJywnX3JlYWRGaWxlU3luYycsJ3F1b2trYScsJ2dsb2JhbFNldHRpbmdzRmlsZScsJ2lzU3RyaW5nJywncGx1Z2lucycsJ25hbWUnLCdfd3JpdGVGaWxlU3luYycsJ3JlbG9hZFF1b2trYVNldHRpbmdzJywnQ2hyb21lXHgyMGlzXHgyMG5vdFx4MjBydW5uaW5nJywnTmV3JywnUGFnZScsJ05ldHdvcmsnLCdkb2VzU2FuZGJveENvbnRhaW5FU01vZHVsZXMnLCdlbmFibGUnLCdhbGwnLCdyZXF1ZXN0SW50ZXJjZXB0ZWQnLCdpbnRlcmNlcHRpb25JZCcsJ3JlcXVlc3QnLCdzZXRSZXF1ZXN0SW50ZXJjZXB0aW9uRW5hYmxlZCcsJ1VuYWJsZVx4MjB0b1x4MjBjb25maWd1cmVceDIwbmV0d29ya1x4MjByZXF1ZXN0XHgyMGludGVyY2VwdGlvblx4MjBpblx4MjBDaHJvbWUnLCduYXZpZ2F0ZScsJ3N1Y2Nlc3MnLCdmYWnigItsZWQ6XHgyMCcsJ19jbG9zZVRhYicsJ2xQUm5EJywnQ2xvc2UnLCd0YXJnZXQnLCdGYWlsZWRceDIwdG9ceDIwY2xvc2VceDIwQ2hyb21lXHgyMFRhYjpceDIwJywnbElBdEonLCdQaHZTbicsJ19sb25nUnVubmluZ1BpbmdUaW1lb3V0JywnYWN0aXZlJywnVGhlXHgyMHNhbmRib3hceDIwaXNceDIwbm90XHgyMHJlc3BvbnNpdmUuXHgyMENoZWNrXHgyMGZvclx4MjBwb3NzaWJseVx4MjByZWNlbnRseVx4MjBpbnRyb2R1Y2VkXHgyMGluZmluaXRlXHgyMGxvb3BzLicsJ3FLR1FYJywnbW9kdWxlJywncmVhZENvbmZpZ3MnLCdnbG9iYWxDb25maWcnLCdhc3NpZ24nLCdjb25maWdzJywnZmlsdGVyJywnbWFwJywnX2xhdW5jaENocm9tZUluc3RhbmNlJywnS21wSG8nLCctLWhlYWRsZXNzJywnLS1kaXNhYmxlLWdwdScsJy0tZGV0ZXJtaW5pc3RpYy1mZXRjaCcsJ0xpbnV4JywnLS1uby1zYW5kYm94JywnLS1kaXNhYmxlLXNldHVpZC1zYW5kYm94JywnbGF1bmNoJywnc2lsZW50JywnUFVqSngnLCd3YWxsYWJ5RmlsZUlkJywnZ2V0RmlsZU1ldGFkYXRhQnlQYXRoJywnX2hhbmRsZUhvc3RFcnJvcicsJ3ZVTktHJywnRUFERFJOT1RBVkFJTCcsJy4vYnJvd3NlckVudmlyb25tZW50JywnRVdPaHQnLCdkV3NPSicsJ19wYXJhbXMnLCdfcnVubmVyJywnX2Vudk9wdGlvbnMnLCdjbGVhck1lbW9yeUNhY2hlJywnX2hvc3QnLCdfY2FsbGJhY2tzJywnX2hvc3RQcm9taXNlJywncHJvbWlzZScsJ0dWWGNVJywnb05sVHcnLCdfd2F0Y2hlcicsJ193aXRoTm9ybWFsaXplZFBhdGgnLCdfZmlsZUFkZGVkJywnY2hhbmdlJywnX2ZpbGVDaGFuZ2VkJywndW5saW5rJywncmVhZHknLCd6VEJQYScsJ3RzeCcsJ0VMRUNUUk9OX1JVTl9BU19OT0RFJywnRUxFQ1RST05fRElTQUJMRV9TRUNVUklUWV9XQVJOSU5HUycsJ2VsZWN0cm9uSG9zdC5qcycsJ0RlSUdZJywnbHZlSE4nLCdzZXRCcm9hZGNhc3QnLCdzZXRNdWx0aWNhc3RUVEwnLCd0dGwnLCdfcmVjZWl2ZXInLCdhZGRNZW1iZXJzaGlwJywnYUxUQnknLCd2YWx1ZUJhZycsJ2RhdGEnLCdjb3B5S2V5JywnY29weVRvQ2xpcGJvYXJkJywnX2NvbnNvbGVPdXRwdXQnLCdTenNxUicsJ19wcmVwYXJlJywndmFsdWVzJywnX3JlbGVhc2VkSWRzJywnWW16UEgnLCdFbGVjdHJvblx4MjBydW5uZXJceDIwZXJyb3I6XHgyMCcsJ2hvc3RuYW1lJywnY2xvc2VQYWdlJywnSVlGRW4nLCdBdHR0WicsJ2V2YWx1YXRlT25QYWdlJywnX3JlcXVlc3RXaXRoQ29ycmVsYXRpb25JZCcsJ19zbG93Jywnb3BlblBhZ2UnLCdkZWZlcicsJ0FVTmhXJywnY2FwdHVyZVBhZ2UnLCdzdGFydFJhbmdlJywnZmlsZVBhdGgnLCdzdGFydExpbmUnLCdzdGFydENvbHVtbicsJ0ZhaWxlZFx4MjB0b1x4MjByZW5kZXJceDIwdGVzdFx4MjBydW5ceDIwc2NyZWVuXHgyMHNob3QnLCdHbGRZbCcsJ3JhbmRvbUlkJywnc0trSmcnLCd2WGJTdicsJ3JlamVjdCcsJ2xMdVF6JywnR0FmSUwnLCdfZXZhbHVhdGVPblBhZ2UnLCdfY2xvc2VQYWdlJywndWRlS3MnLCdzdGFja0VudHJ5QnlGaWxlSWQnLCdfZXh0cmFjdEJyb3dzZXJTdGFja0xpbmVDb250ZXh0JywnTEZjUUUnLCdlTFZ0TScsJ3N0YXR1cycsJ0RTQWlHJywnYWRkVG9UZXN0TG9nJywnX2NhcHR1cmVTY3JlZW5TaG90Jywnc2NyZWVuJywnX3JlcG9ydE5vcm1hbFJ1bicsJ2V4aXQnLCdLR1JLUicsJ3dlYkFwcCcsJ1phcnR2JywnU2pHS2QnLCd0ZXh0TGluZXMnLCdjZGVuZScsJ2Rpc2Nvbm5lY3QnLCdQbGx6RScsJ0dvQUVMJywna2V5JywnX2ZhaWxpbmdUZXN0cycsJ190ZXN0cycsJ0RhdGUnLCdmdW5jdGlvblx4MjBEYXRlKClceDIwe1x4MjBbbmF0aXZlXHgyMGNvZGVdXHgyMH0nLCdmdW5jdGlvblx4MjB0b1N0cmluZygpXHgyMHtceDIwW25hdGl2ZVx4MjBjb2RlXVx4MjB9JywnLi9leHRlbnNpb24vdWkvc2VydmljZScsJ19tb2RlbCcsJ2RBVHFnJywnb3l0VHMnLCdmZ3dLYicsJ2FkZHJlc3MnLCc6OjEnLCdpbnRlcm5hbCcsJ19yZXBvcnRGaWxlQ292ZXJhZ2UnLCd2YWx1ZUNoYW5nZWQnLCdfdWlTZXJ2aWNlJywnbmF2aWdhdGlvblJlcXVlc3RlZCcsJ3h1V0FKJywnTmxHcUsnLCdpc0Z1bmN0aW9uJywnX29uQ29ubmVjdGVkJywnb25Db25uZWN0ZWQnLCd2bmJUWicsJ25mY2FsbCcsJ3JlYWRGaWxlJywnZXhwaXJ5RGF0ZScsJ3RCc2hsJywndm5YVlInLCdnZXRGaWxlTWVzc2FnZXMnLCdnZXREYXRlJywnaW52YWxpZFZlcnNpb24nLCdRdW9ra2EuanNceDIwXHgyN1Byb1x4MjcnLCdXYWxsYWJ5LmpzJywnaHR0cHM6Ly9xdW9ra2Fqcy5jb20vcHJvJywnaHR0cHM6Ly93YWxsYWJ5anMuY29tL2xpY2Vuc2UvJywnVGhlXHgyMGluc3RhbGxlZFx4MjAnLCdceDIwdmVyc2lvblx4MjBpc1x4MjBub3RceDIwY292ZXJlZFx4MjBieVx4MjB5b3VyXHgyMGN1cnJlbnRceDIwbGljZW5zZS5ceDBhUGxlYXNlXHgyMHZpc2l0XHgyMG91clx4MjB3ZWJzaXRlXHgyMHRvXHgyMHVwZ3JhZGVceDIweW91clx4MjBsaWNlbnNlOlx4MjAnLCdyZXZlcnNlJywnLi9leHRlbnNpb24vc2VydmVyL211bHRpY2FzdGVyJywnbGljZW5zZScsJ211bHRpVXNlcktleScsJ3hoUVliJywnSWZydG4nLCdsaWNlbnNlLnVzZScsJ2lFVVFsJywnMC4wLjAuMCcsJ2xpY2Vuc2VDb2xsaXNpb24nLCdfbXVsdGljYXN0ZXInLCdub2RlX21vZHVsZXMnLCd3YWxsYWJ5LmpzJywncGF0aHMnLCdfbm9kZU1vZHVsZVBhdGhzJywnX2xvYWQnLCdfZmlsZVN0YXRQcm9taXNlJywnZGlybmFtZScsJ2JVR3NWJywnbXRpbWUnLCdtb2Muc2p5YmFsbGF3QG9sbGVoXHgyMHRhXHgyMGxpYW1lXHgyMGFpdlx4MjBzdVx4MjB0Y2F0bm9jXHgyMGVzYWVscFx4MjAsbWFldFx4MjBydW95XHgyMHJvXHgyMGZsZXNydW95XHgyMHJvZlx4MjBkb2lyZXBceDIwbGFpcnRceDIwcmVnbm9sXHgyMGFceDIwZWduYXJyYVx4MjBvdFx4MjBla2lsXHgyMGRsdW93XHgyMHVveVx4MjBmSVx4MGEuZXNuZWNpbFx4MjBhXHgyMGVzYWhjcnVwXHgyMG90XHgyMGVzYWhjcnVwL21vYy5zanliYWxsYXcvLzpzcHR0aFx4MjB0YVx4MjBldGlzYmV3XHgyMHJ1b1x4MjB0aXNpdlx4MjBlc2FlbHBceDIwLHRjZWpvcnBceDIwZWh0XHgyMHRyb3BwdXNceDIwZG5hXHgyMHRpXHgyMGduaXN1XHgyMGV1bml0bm9jXHgyMG90XHgyMGVraWxceDIwZGx1b3dceDIwdW95XHgyMGRuYVx4MjAseXRpdml0Y3Vkb3JwXHgyMHJ1b3lceDIwZGVzYWVyY25pXHgyMHNhaFx4MjBzai55YmFsbGF3XHgyMGZJXHgwYS50dW9ceDIwdGlceDIwZ25peXJ0XHgyMHJvZlx4MjBza25haHRceDIwLHJldm9ceDIwc2lceDIwZG9pcmVwXHgyMGxhaXJ0XHgyMHNqLnliYWxsYXdceDIwcnVvWScsJ19nZXRGaWxlTWV0YWRhdGFCeUlkJywnX19leHRlbmRzJywnc21YYXAnLCdXcFBlZycsJ2xhc3RJbmRleE9mJywnc3Vic3RyaW5nJywnJndhbGxhYnlGaWxlSWQ9JywnZmlsZUJ5UGF0aCcsJ29wZW5lZEluRWRpdG9yJywnX2VtaXREb2N1bWVudExpbmVzJywnaHR0cHMnLCdub2RlLXV1aWQnLCdjcnlwdG8nLCdjaGlsZF9wcm9jZXNzJywnZXhlY1N5bmMnLCd0aW1lcnMnLCdzZXRUaW1lb3V0JywnY2xlYXJUaW1lb3V0JywnLi9zZXJ2ZXIvZmlsZVN5c3RlbScsJy4vc2VydmVyL2xpbmVEaWZmZXJlbmNlcycsJy4vc2VydmVyL21vZGVsJywnLi9zaGFyZWQvdXRpbHMnLCdleHRlbmRlZC1jb3JlJywnYWN0aXZhdGUtbGluaycsJ3VzZS1jb21tdW5pdHktbGluaycsJ2V4dGVuZGVkLXRyaWFsLWxpY2Vuc2UtbGluaycsJ2h0dHBzOi8vd2FsbGFieWpzLmNvbS9kb3dubG9hZC8jdHJ5LWl0LWZyZWUnLCdGcmVlZG9tJywnLS0tLS1CRUdJTlx4MjBQVUJMSUNceDIwS0VZLS0tLS1ceDBhTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF3ZjBSbjZyZ0ZNVk51YWVnM0tnOVx4MGFrakxOVVQ4WjJmbklyalVoREdNOEZTN281azROVDFGZHpucXNvQnByTGRyTFJka016akg4SVByckVVNXJLaVdsXHgwYVZPMGlLVTdRN0FtTWZBVFN0ZXp2ZnlzMEFBbCtvM2Yva1FpU1p4RDJVNVAvSzM4a2xZcHdmOUw4TU10aEFlRUZceDBheTR4ekE1ZUJ1UHpCZFJIeHZVd1VxaENCOW83M1o0TWF4SG5yYXo1aHgwZjZhZ0VkTFZVNlhzTmtvNXdYbjhaTlx4MGFQNkJia09PbS9IZ1U4S2tXdUpiVTU4eWdYeFBmL2ZuWkh1Mmd0dnJ6L3JOZW1vWFkxZkR5ZGl6TnhEeStaUGdQXHgwYWl3ZVNkcW5MaGxGb0pFdXhuSXdvUGxZTTdKd0toM0ppaE96QXFRUTVVNUprTTVlL21GUS9sRnFDVnhNbG1CUVdceDBhVndJREFRQUJceDBhLS0tLS1FTkRceDIwUFVCTElDXHgyMEtFWS0tLS0tJywnLS0tLS1CRUdJTlx4MjBQVUJMSUNceDIwS0VZLS0tLS1ceDBhTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF1MUVFRFp6USsrbDZ0ejJpb0NQYVx4MGFIeE9TY2p5MmtSRGRQb1h1UTg4elpHNlZldnhxbUl6YWRIUEZHalY1cDNabThPWTlSK1NmNjFrZHpSWnp2V1JnXHgwYXhvcmxhbm9PbHV0dmZCZkcybGt2Mko0SC9CNzVYcG9BZUd2ZHZJbE9Nb0R4ZndqMnZNSVE0b0hOYUNKMnkrTy9ceDBhaW9oVEZPQzA3blk3dWYyc2EwdXNPQVo3emcrYlh5ejYzL2Z1U2VWb3VGQ0tHZVlLdnExWUM5OTFGMkhqMFRoTVx4MGF4eGVsbGM2eDFBYUZ1eXlHNUhtZFlxYnVLTlMraUF0N3c4cFlUSm9YeGk5akUwMjE0R2Ywc2JzRm5BYkJGajJzXHgwYWtPYWVlNFBTcGx5U1pYRW1ZUmVwUDErdzZhRGt1YlZ0c0hNdkZ0K0FyNHd1NGRMdUFqN1M4eXhWVnJLRUc5UnpceDBhNHdJREFRQUJceDBhLS0tLS1FTkRceDIwUFVCTElDXHgyMEtFWS0tLS0tJywnLS0tLS1CRUdJTlx4MjBQVUJMSUNceDIwS0VZLS0tLS1ceDBhTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUE0cERvdGVqdHpoaVQvbHBOZmQwSFx4MGEyRHYwOE5UU0o4L2l4dVF6M2lKaVZSeFFrb3Q1U240NXd1NFFpUUVvWTVOUS90RGY4VjltRGVlUE5VL1pkOEtZXHgwYWR5UkZvcTZid09sSGMwSEFhNTB0ZWNSQ0VDRVNCK3QzVFZjcUxNb2dYMzJ2Z1FrU21seTBzRnh0R0ZCak44V3hceDBhVitRN1dROG5lZnQ3SkthWHRtKzJGdDdQNDFvbmQrU2ZCZVRvaDltbjlERmZ0K091STJ2ejdzME9TamQrUDJid1x4MGErR0VJcjNvdGwzQ0E1UnJJSDlXUnNBVmphd3YrejVMdmFrUVh0TzZKTk5tSmdFckhXWm1rQklsdjJWSERzb1NkXHgwYU1MZ2EyalRpRUhya1p5bEtQRm96L2hPZGgvaVZINC9yMUFXeEJoajhJZ1FsUmNMSmd2U0J6Sm80T2xCaGxZaDZceDBheHdJREFRQUJceDBhLS0tLS1FTkRceDIwUFVCTElDXHgyMEtFWS0tLS0tJywnLS0tLS1CRUdJTlx4MjBQVUJMSUNceDIwS0VZLS0tLS1ceDBhTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFvaFIvTzhYNXB0Z1BiZWxzU3NhWlx4MGFXSkhaN0ZrcW8zOUN4OVVZUHMycll6Ync5NGFackllUmRkZmdENTVnU1paM0prUlhSZFo3S2JtK1hUcmk2VjAvXHgwYTBaZXQrRkthZVcweGtvdEh2TVAwZlR6R25halE2QzgzNk04d1FSOWYxbmRxZDdUc2EzMGtBZWd2UHFoS3VJK1dceDBhYVcxR1pyU2VlZXlxMy91WjR0aFBFR3ZGRFhqNlAyb2dFYUV4MzZXdXFEOURWMVV1WTd2Y20vZlBZWnBmR2dQdVx4MGE4SjRIQXpLNUcwT3lyU2VuVFgvK0pPOHBLak90RjZKSEthUW1pM0NGMXRDQTFldzhzdlowWkxrSzlBR29NKzhPXHgwYWE5a3gxc0JwNFl2Q2pBMFZSeGRPLzY2T3RCUmhGbktWNkpib1BUUTRTRzJiRkFLWVJKTzd0blM3bm5oaWNnSHNceDBhRXdJREFRQUJceDBhLS0tLS1FTkRceDIwUFVCTElDXHgyMEtFWS0tLS0tJywnLS0tLS1CRUdJTlx4MjBQVUJMSUNceDIwS0VZLS0tLS1ceDBhTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFtcXVrMEl1NVVQMmtBU0R3R2pORFx4MGFDa2t1bmVXUmVReHhTR1dQeDI4cSs1TVdFWG5pZ2o1a0dMSTE0MHphdnNHaE9JUFZET2JCN3A1cnUxN2dkOEw2XHgwYXhaZ0J1YXB5MkIyejVQbkJiQUdPcVpCRHdVQVNDaWJZdEo2TjR3ckx5VWxDRTNKYVJsTUR1KzRWWS95YnR6UENceDBheE1XemRTemtvSHBJbUQ0bm5NK0ZMSk83Z1VDcUF5MEpkRnlUOUw3T3dmbFpaYU12aG9uYks0akVIRG9sSzdsMlx4MGFFQlNQeFpPeGo1dzVWQmJubHFaQThlK3RLbUJJVVR0cm5oa3ptc0tGTHFWU3V6SndpMjgrdmVLL0F6T1cvRjFVXHgwYVFSeHNTdTg4Nmo0SVZ6M1Fkc3gzdGxEMXMreFp1WnBHWnQ0K3BtbmUwT25zMEtoUTBQTDVneDZabW9nV3E5ZHJceDBhbXdJREFRQUJceDBhLS0tLS1FTkRceDIwUFVCTElDXHgyMEtFWS0tLS0tJywnLS0tLS1CRUdJTlx4MjBQVUJMSUNceDIwS0VZLS0tLS1ceDBhTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF0M0Q5clUrbWFlMVRZSUdJYmNIclx4MGErOC8zcFFYUnJJaTZZMExLY0xsK2wrV0xOMTVJTk1CbmduMzJkMjdlSGpBOUFYVis5QnUwTm1RT1VmR1RKMmZYXHgwYUR6SldWVVVtd1hMWUhDV0VSSkowUEk5dHUzQXVuZndDWW0zM2xsWXpXMElNdmh3QzN5dkpSUnc1YVEyd1VSYzFceDBhZWxVeHAyNGxpdWMrb3dWZDhnMllXSU50Mkl1bVgzTnNUZW5jKy9yaE9QbmliS09LNE5QWWFpeXpTaEx3N1NhU1x4MGE2bmxwYWNsaitIZnU5QlVxZGhKbGVWOUxod0RPblZ3cnRlWEdydXdLUmVabDFnODN6eTNqKzV0cUJRL0dJODdEXHgwYTNjR2t5OWw3cEg2dlE5eGhiUEtjeXoveU93emd5Y3BSaHZiZGp1QUxmZDBRcHV1V0o1L2VZb3BmYVhka2M2QklceDBhM1FJREFRQUJceDBhLS0tLS1FTkRceDIwUFVCTElDXHgyMEtFWS0tLS0tJywnb3NIRFMnLCdbJXNdXHgyMFNhbmRib3hceDIwaXNceDIwbm90XHgyMHJlc3BvbnNpdmUsXHgyMHJlY3ljbGluZ1x4MjB3b3JrZXJceDIwaW5zdGFuY2UnLCdjbG9zZScsJ3N2YlpHJywnV1pBWEUnLCd2ZXJpZmljYXRpb25SZXN1bHQnLCdfbGljZW5zZVZlcmlmaWNhdGlvblJlc3VsdCcsJ0taS0REJywnZmdpVmcnLCdkYktGZicsJ2VCa0xiJywnUEtQSlgnLCdndDYnLCd6NjgnLCc0d3EnLCc2YWgnLCdpT3RTaScsJ2dJVWdNJywnQ3FrcGYnLCdleHBpcmVkJywnUkx1WHInLCdJZkxKSCcsJ2NvbnRlbnQnLCdwYXRjaF9tYWtlJywnbm90Q2hhbmdlZCcsJ2hhZFRyYW5zaWVudENoYW5nZScsJ19kaWZmTWF0Y2hQYXRjaCcsJ2V4cGlyZWRUcmlhbCcsJ2xpY2Vuc2VlTmFtZScsJ2xpY2Vuc2VUYWdzJywnbGljZW5zZWRQcm9kdWN0JywnZXhwaXJhdGlvbkRhdGVTdHJpbmcnLCdpQ3pEUicsJ3VzZXIuZGF0YScsJ2dldFRpbWUnLCdUamxUWScsJ2NvbnNlcXVlbnQnLCdoYXNoJywnY3JlYXRlSGFzaCcsJ3NoYTI1NicsJ3VwZGF0ZScsJ3VzZXJJbmZvJywndXNlcm5hbWUnLCd4NTVyMnBhZTRsLmV4ZWN1dGUtYXBpLnVzLWVhc3QtMS5hbWF6b25hd3MuY29tJywnL1Byb2QvbGljZW5zZUF1ZGl0JywnUE9TVCcsJ2xjeHdyJywnaW5jbHVkZScsJ3dyaXRlJywnY3JlYXRlVmVyaWZ5JywnUlNBLVNIQTUxMicsJ1F1b2trYScsJ3ZhbGlkJywndmVyaWZ5JywnU1REc2YnLCdfY292ZXJlZEZpbGVzJywnc2V0SG91cnMnLCdfd2FsbGFieUVtYWlsJywnZWRpdG9yJywnRmlsZVx4MjBhZGRlZDpceDIwJXMnLCdtZXRhZGF0YScsJ19maWxlSWRHZW5lcmF0b3InLCdnZW5lcmF0ZScsJ3RvTG93ZXJDYXNlJywnaW5zdHJ1bWVudCcsJ19zZXR0aW5ncycsJ2phdmFzY3JpcHQnLCdfZmlsZXNCeVBhdGgnLCdfbG9hZEZpbGVXaXRoQ2FjaGUnLCdOb1x4MjBtZXRhZGF0YVx4MjBmb3JceDIwYWRkZWRceDIwZmlsZVx4MjBmb3VuZDpceDIwJXMnLCdiSUFSTScsJ2RpZ2VzdCcsJ3NldERhdGUnLCdleHBpcmluZ1Nvb24nLCdfY292ZXJpbmdUZXN0cycsJ0ZneGtNJywnTUxxYWYnLCdfZGlzcG9zaW5nJywnaXNOYU4nLCdpZ25vcmUnLCdkaWZmTWF0Y2hQYXRjaCcsJ1Byb2plY3QnLCdfcXVva2thRWRpdGlvbicsJ2VkaXRpb24nLCdfZnMnLCdaVExBYicsJ3BsYXRmb3JtJywnSW50ZWxsaUonLCdtb2RlbDonLCdVa1FLcycsJ2d0NmwnLCdxNno2Jywncjk2YScsJ3NWZXRMJywnZE1jY1UnLCd3cml0ZUZpbGVTeW5jJywnVGhibWgnLCdDUHdUWicsJ2ZhaWxzVGVzdCcsJ1pqcGJJJywnQWRkaXRpb25hbFx4MjBhdHRlbXB0XHgyMHRvXHgyMGNyZWF0ZVx4MjBwaGFudG9tXHgyMGluc3RhbmNlXHgyMCMlcycsJ19jcmVhdGVQaGFudG9tSW5zdGFuY2UnLCdvbkVycm9yJywncmVjeWNsZVdvcmtlcicsJ2hleCcsJzc5NDc5ZmU5NGZjZDJiZDlmMTQxYWQxNzE3YzM1MjgyJywnNjY1NzEwOWZiNDQyNjMzZjQxMmYxMjg3ODg4NzE5NjAnLCdjYzQ4ZmRjOTFkODgyNWNhOTdiMzFjNTVjYTAzNGQ0NicsJzQ3YWJmZGZhN2JjZDQxNmUwZjljNjk5OTFlYzFmODk2JywnNGU1M2U0ZjhhYTVkYWJiZWE4N2E4MTZkMjhiMDM5M2UnLCc2ZmE2Yjg4N2VkZmZiMmMxMTNmODRmMTc5NjQ5Y2JiOScsJ3ZlcmlmeUxpY2Vuc2UnLCdsa3AnLCdfZWRpdG9yJywnY29uZmlndXJlJywnTG1jS1EnLCdfYWxsb3dlZFRvU2VuZFRlc3RSZXN1bHRzJywndWk6dGVzdHM6c29tZVJlc3VsdHNVcGRhdGVkJywnZmlsZScsJ2lma1RYJywnZXlZa0gnLCdyYW5nZXMnLCdvcHRzJywnMjJ5bScsJzFjcm0nLCdhdjVoJywnbmV4dFRpY2snLCdGaWxlXHgyMGluc3QnLCdvblx4MjBoYWRceDIwZmEnLCdpbGVkOlx4MjBQYXInLCc6XHgyMFRyZWVceDIwbm8nLCdfcnVuSWZWZXJpZmllZCcsJ2ZpbGVDaGFuZ2VkSW5FZGl0b3InLCdPc2poTScsJ2NvcHlWYWx1ZScsJ3RyYW5zaWVudENoYW5nZScsJyNDT1BZOicsJ2NoYW5nZUZyYW1lJywnZmlsZU9wZW5lZEluRWRpdG9yJywnZmlsZUNsb3NlZEluQWxsRWRpdG9ycycsJ1NXUmV2JywnY2xvc2VkSW5BbGxFZGl0b3JzJywnZXJyb3JzJywncmFuZ2UnLCdydW5UZXN0cycsJ3Rlc3RzQnlSZXF1ZXN0JywnZXZhbHVhdGVFeHByZXNzaW9uJywnZXh0ZXJuYWxGaWxlQ2hhbmdlJywnaW5zdGFsbFBhY2thZ2UnLCdhbGxvd1RvSW5zdGFsbEltcG9ydGVkTW9kdWxlcycsJ3BsdWdpbicsJ3ZhbGlkUGFja2FnZU5hbWUnLCdjb21tYW5kJywncHJvamVjdDpidXN5JywnREJ1d0YnLCdmb3JtYXQnLCdwaXBlJywnY3dkJywnZ2xvYmFsU2V0dGluZ3NEaXInLCdkaXInLCdoTU9yaycsJ3diQWlUJywna1ZSUG8nLCdlcnJvckJ5UmVxdWVzdCcsJ2ZhaWxpbmdUZXN0JywnQ2FuXHgyMG5vdFx4MjBmaW5kXHgyMGFueVx4MjB0ZXN0XHgyMGVycm9ycycsJ2luc3RydW1lbnRlZEZpbGUnLCdfZW1pdCcsJ3VuY292ZXJlZFJlZ2lvbnMnLCd1bmNvdmVyZWRSZWdpb25zQnlSZXF1ZXN0JywnX2VtaXROb3RpZmljYXRpb24nLCdpbmZvJywnc1N5WHgnLCdsaW5lUmVwb3J0JywnbGluZVJlcG9ydEJ5UmVxdWVzdCcsJ3JlcG9ydCcsJ0FjdGlvblx4MjBpc1x4MjBub3RceDIwYXZhaWxhYmxlXHgyMGZvclx4MjBmaWxlc1x4MjBvdXRzaWRlXHgyMHdhbGxhYnkuanNceDIwc2NvcGUnLCdjSmVTWCcsJ2xvY2F0aW9uQnlSZXF1ZXN0JywnQ2FuXHgyMG5vdFx4MjBsb2NhdGVceDIwYVx4MjBmYWlsaW5nXHgyMHRlc3QnLCdDYW5ceDIwbm90XHgyMGZpbmRceDIwYW55XHgyMGZhaWxpbmdceDIwdGVzdHMnLCdqd0VPVCcsJ21hdGNoJywnbXV0ZU5vdGlmaWNhdGlvbicsJ19jb250aW51ZVRyaWFsU2Vzc2lvbicsJ2NvcHlEaWFnbm9zdGljc1JlcG9ydFRvQ2xpcGJvYXJkJywnZWRpdG9yVHlwZScsJ29zVmVyc2lvbicsJ3JlbGVhc2UnLCdjb3JlVmVyc2lvbicsJ2NvbmZpZycsJ29taXQnLCd0ZWxlbWV0cnknLCdpSG1FeicsJ19wYWNrYWdlSnNvbicsJ3BhY2thZ2VKU09OJywnZGVwZW5kZW5jaWVzJywnc3RhdHMnLCdnZXREZWJ1Z0xvZycsJ2Zvcm1hdFdpdGhPcHRpb25zJywnYGBgXHgwYScsJ2hvbWVkaXInLCc8aG9tZURpcj4nLCc8cm9vdERpcj4nLCc8d2FsbGFieUNhY2hlRGlyPicsJ1x4MGFgYGAnLCdwcm9qZWN0OmF1dG9Db25maWd1cmF0aW9uQXZhaWxhYmxlJywncE5KV28nLCdZb3VceDIwbWF5XHgyMGJlXHgyMGFibGVceDIwdG9ceDIwdXNlXHgyMFdhbGxhYnlceDIwd2l0aG91dFx4MjBhXHgyMGNvbmZpZ3VyYXRpb25ceDIwZmlsZS5ceDIwQ2hlY2tceDIwb3V0XHgyMDxhXHgyMGNsYXNzPVx4MjJhdXRvLWNvbmZpZy1pbmZvLWxpbmtceDIyXHgyMGhyZWY9XHgyMmh0dHBzOi8vd2FsbGFieWpzLmNvbS9kb2NzL2ludHJvL2NvbmZpZy5odG1sXHgyMj5vdXJceOKAizIwZG9jdW1lbnRhdGlvbjwvYT5ceDIwZm9yXHgyMG1vcmVceDIwaW5mb3JtYXRpb24uJywncHJvamVjdDpwcm9qZWN0Q29uZmlndXJlZCcsJ1ZrQ01IJywnX3JhbmdlJywnX2VtaXRQcm9qZWN0Q29uZmlndXJlZCcsJ3ByZWxvYWRTdHJ1Y3R1cmUnLCdzZXR1cCcsJ1p2cWFvJywnX2ZpbGVzRm9yUHJvamVjdCcsJ1RqSE9RJywnRmFpbGVkXHgyMHRvXHgyMHNldFx4MjB1cFx4MjBwcm9qZWN0XHgyMGZpbGVceDIwc3lzdGVtOlx4MjAnLCdfZXJyb3JNZXNzYWdlJywnX3Rlc3RSdW5FcnJvck1lc3NhZ2UnLCdfd29ya2VycycsJ19jb25uZWN0ZWQnLCdfZXh0ZW5zaW9uJywncmVjeWNsZScsJ2xxNicsJzR3cW4nLCdoaHAnLCdhZGRlZCcsJ191cGRhdGVQcm9qZWN0RmlsZScsJ2xvYWRlZCcsJ2NoYW5nZWQnLCdkZWxldGVkJywnYlFQTEwnLCdfbGluZVJlcG9ydCcsJ0ZpbGVceDIwc3lzdGVtXHgyMGVycm9yOlx4MjAnLCd5d0toYScsJ1JyVE9FJywnRmlsZVx4MjB3YXNceDIwbm90XHgyMGNoYW5nZWQsXHgyMGJ1dFx4MjBmaWxlXHgyMG1hcmtlcnNceDIwbWF5XHgyMG5lZWRceDIwdG9ceDIwYmVceDIwc3luY2VkJywnZmlsZUJ5SWQnLCd1dGY4JywnRXJyb3JceDIwd2hpbGVceDIwcHJvY2Vzc2luZ1x4MjBTVERPVVRceDIwbWVzc2FnZTpceDIwJywnUGRFRkonLCdrenVxYycsJyxceDIwU3ludGF4RXJyb3I6JywnRmxkSGMnLCdQaGFudG9tXHgyMHBhZ2VceDIwY3JlYXRlZCcsJ3ZpZXdwb3J0U2l6ZScsJ192aWV3cG9ydFNpemUnLCdzdGFydHNXaXRoJywndHJpbUxlZnQnLCdhdFx4MjAnLCdfZW1pdFN0YXRzVXBkYXRlJywncHJvamVjdDp0ZXN0UnVuUmVRdWV1ZWQnLCdpZGhjZCcsJ1hPeHRNJywndGVzdEVycm9yUmVwb3J0ZWQnLCdyZXJ1blNjaGVkdWxlZCcsJ2Z1bGxUZXN0UmVzdWx0c1JlcG9ydCcsJ3N0cmluZycsJ3Rlc3RSdW5SZVF1ZXVlZCcsJ251bWJlcicsJ19saW5lcycsJ2Rpc3Bvc2UnLCdfcmVjeWNsZWRMaW5lcycsJ2J1c3knLCdwcm9qZWN0OmxpdmUnLCdMWWVETCcsJ0p0SFNuJywnLi9leHRlbnNpb24vc2VydmVyL21vZGVsJywnUGhWRkonLCdfcnVuVGVzdHMnLCdfcXVva2thJywnX2FkanVzdFF1b2trYUZlYXR1cmVzJywncHJvJywnX2ludGVybmFsJywnX211dGVQcm9FZGl0aW9uRm9yVmFsdWVFeHBsb3Jlck5vdGlmaWNhdGlvbicsJ3Byb2plY3Q6ZXhwcmVzc2lvbnNUb0V2YWx1YXRlUmVjZWl2ZWQnLCdKaFNBcScsJ3hBcG9XJywnTGNSWEYnLCd1dHpHRycsJ3dhcm5pbmcnLCdceDIwZXhwYW5kZWRceDIwbGV2ZWxzXHgyMHdpdGhpblx4MjBWYWx1ZVx4MjBFeHBsb3Jlci4nLCdzZXPigItzaW9uJywndGltZScsJ2tleXMnLCdfbWFwVGVzdHMnLCdsaW5lQ292ZXJpbmdUZXN0c09yZGVyZWRCeUZhaWxpbmdUaGVuRGF0ZScsJ3Byb2plY3Q6bW9kdWxlTG9hZGVkJywnQkN5Wm4nLCdPbmx5XHgyMFx4MjdQcm9ceDI3XHgyMGVkaXRpb25ceDIwb2ZceDIwUXVva2thLmpzXHgyMHN1cHBvcnRzXHgyMHByb2plY3RceDIwZmlsZXNceDIwaW1wb3J0LicsJ19zdWdnZXN0ZWRQcm9FZGl0aW9uRm9yUHJvamVjdEZpbGVJbXBvcnQnLCdpc0ZhaWxpbmcnLCdfcmFuZ2VUb0xvYycsJ3Byb2plY3Q6bmF2aWdhdGlvblJlcXVlc3RlZCcsJ2NvbHVtbicsJ3Byb2plY3Q6ZmlsZXNSZXF1aXJlZCcsJ1VETVNMJywnbG9hZEZpbGVzJywnZmlsZXMnLCdtZDUnLCcwN2VkMWZjNmEzYTMyZDY2MDk5ZmUxODcwYzgzYTBjZScsJ3Byb2plY3Q6bGljZW5zZUNvbGxpc2lvbicsJ2h0dHBzOi8vd2FsbGFieWpzLmNvbS9wdXJjaGFzZScsJ3Vua25vd25ceDIwYWRkcmVzcycsJzwvYj4uXHgyME9ubHlceDIwb25lXHgyMGFjdGl2ZVx4MjBjb21wdXRlclx4MjBhdFx4MjB0aGVceDIwc2FtZVx4MjB0aW1lXHgyMG1heVx4MjB1c2VceDIwdGhlXHgyMGxpY2Vuc2UuPGJyLz5JZlx4MjB5b3VceDIwd291bGRceDIwbGlrZVx4MjB0b1x4MjBwdXJjaGFzZVx4MjBhblx4MjBhZGRpdGlvbmFsXHgyMGxpY2Vuc2UsXHgyMHBsZWFzZVx4MjB2aXNpdFx4MjA8YVx4MjBocmVmPVx4MjInLCdceDIyPm91clx4MjB3ZWJzaXRlPC9hPi5ceDIwSWZceDIweW91XHgyMGhhdmVceDIwYWxyZWFkeVx4MjBwdXJjaGFzZWRceDIwdGhlXHgyMGxpY2Vuc2UsXHgyMHBsZWFzZVx4MjA8YVx4MjBocmVmPVx4MjIjXHgyMlx4MjBjbGFzcz1ceDIyJywnX2VtaXRTdG9wcGVkJywnbW9kZWw6c3RhdHNNYXliZUNoYW5nZWQnLCdfY2xlYXJDb25zb2xlT3V0cHV0U2VuZFF1ZXVlJywndGVzdFJlc3VsdHNDaGFuZ2VkJywnbW9kZWw6ZG9jdW1lbnRzVXBkYXRlZCcsJ21vZGVsOmZpbGVBZGRlZCcsJ19lbWl0RmlsZXNUb1RyYWNrJywnbW9kZWw6ZmlsZURlbGV0ZWQnLCdvWWlUcycsJ0RnQ1hnJywnQU9TT2MnLCdfcmVjeWNsZUxpbmVJZkluQ2hhbmdlRnJhbWUnLCdtb2RlbDpjb25zb2xlT3V0cHV0JywnX2NvbnNvbGVPdXRwdXRUaW1lb3V0JywnX3NjaGVkdWxlQ29uc29sZU91dHB1dFNlbmQnLCdUeE5tWicsJ2hpbnRzJywnY29tbWVudEF1dG9Mb2cnLCdceDIyTGl2ZVx4MjBDb21tZW50c1x4MjBhbmRceDIwTGl2ZVx4MjBWYWx1ZVx4MjBEaXNwbGF5XHgyMGZlYXR1cmVzXHgyMG9ubHlceDIwc3VwcG9ydGVkXHgyMGluXHgyMFx4MjdQcm9ceDI3XHgyMGVkaXRpb24sXHgyMHNlZVx4MjBodHRwczovL3F1b2trYWpzLmNvbS9wcm8vXHgyMGZvclx4MjBtb3JlXHgyMGRldGFpbHNceDIyJywnbW9kZWw6ZmlsZU1lc3NhZ2VzJywnd1dIbG4nLCdyZW1vdmVSYW5nZXMnLCdfY29uc29sZUxvZ1RleHQnLCdfaXNEaXNwb3NlZCcsJ3BGSXpUJywnb2hnT3EnLCdhbGxBZmZlY3RlZEZpbGVzJywnX29wZW5lZEZpbGVzJywnX2lzRmlsZVdpdGhDb3ZlcmFnZU9yVGVzdCcsJ2FmZmVjdGVkJywnaXNUZXN0RmlsZScsJ3VpOmNvdmVyYWdlQ2hhbmdlZCcsJ3VpOmZpbGVzJywnaXNPcGVuZWRJbkVkaXRvcicsJ0tQS0V6JywnX2luaXRpYWxJZHNCeVBhdGgnLCdnZXQnLCdkZWxldGUnLCdfbmV4dElkJywnUXdXbUsnLCdhT3ZpRycsJ19leGVjdXRpbmdGaWxlcycsJ19leGVjdXRpbmdUZXN0JywnX2xpbmVEaWZmZXJlbmNlcycsJ2NoYXJhY3Rlck9mZnNldCcsJ2xpbmVPZmZzZXQnLCdsaW5lRGlmZmVyZW5jZScsJ3NoaWZ0RG9jdW1lbnRMaW5lcycsJ3dhQ3pmJywnSmx1TXInLCdFcnJvclx4MjBmaXhpbmdceDIwbGluZVx4MjBkaWZmZXJlbmNlcycsJ05ld1x4MjBkb2N1bWVudFx4MjBvclx4MjBjb21wbGV4XHgyMGRvY3VtZW50XHgyMGNoYW5nZScsJ2ludmFsaWRhdGVEb2N1bWVudCcsJ19maWxlRm9yUHJvamVjdCcsJ0dZVW56JywnanNjQU8nLCdfZG9jdW1lbnRJbkVkaXRvcicsJ190ZXN0TWFwJywnbG9hZCcsJ3Rlc3QnLCdfc3RhcnQnLCdleHBpcmF0aW9uRGF0ZScsJ1lac29TJywnWnd1Y0QnLCdZUGdGWScsJ2V4cGlyYXRpb25EYXRlU3RyaW5nRm9ybWF0dGVkJywnXHgyMFVUQycsJ1x4MjBsaWNlbnNlXHgyMDxiPmZyZWVceDIwdXBncmFkZXNceDIwcGVyaW9kXHgyMGhhc1x4MjBleHBpcmVkPC9iPi5ceDIwSWZceDIweW91XHgyMHdvdWxkXHgyMGxpa2VceDIwdG9ceDIwd29ya1x4MjB3aXRoXHgyMHRoZVx4MjBsYXRlc3RceDIwdmVyc2lvblx4MjBvZlx4MjAnLCdceDIwYW5kXHgyMGZ1dHVyZVx4MjB2ZXJzaW9uc1x4MjByZWxlYXNlZFx4MjB3aXRoaW5ceDIwdGhlXHgyMG5leHRceDIwMTJceDIwbW9udGhzLFx4MjBwbGVhc2VceDIwdmlzaXRceDIwPGFceDIwaHJlZj1ceDIyJywnXHgyMj5vdXJceDIw4oCLd2Vic2l0ZTwvYT5ceDIwdG9ceDIwdXBncmFkZVx4MjB5b3VyXHgyMGxpY2Vuc2UuPGJyLz5JZlx4MjB5b3VceDIwaGF2ZVx4MjBhbHJlYWR5XHgyMHB1cmNoYXNlZFx4MjB0aGVceDIwbmV3XHgyMGxpY2Vuc2UsXHgyMHBsZWFzZVx4MjA8YVx4MjBocmVmPVx4MjIjXHgyMlx4MjBjbGFzcz1ceDIyJywnXHgyMj5hY3RpdmF0ZVx4MjBpdDwvYT4uJywnX2VtaXRFeHBpcmVkTGljZW5zZScsJ2V4cGlyaW5nTGljZW5zZScsJ1lvdXJceDIwJywnXHgyMGxpY2Vuc2UnLCdceDIwPGI+XHgyMGV4cGlyZXNceDIwb25ceDIwJywnPC9iPi5ceDIwSWZceDIweW91XHgyMHdvdWxkXHgyMGxpa2VceDIwdG9ceDIwd29ya1x4MjB3aXRoXHgyMHRoZVx4MjBsYXRlc3RceDIwdmVyc2lvblx4MjBvZlx4MjAnLCdceDIyPmFjdGl2YXRlXHgyMGl0PC9hPi5ceDIwQ2xpY2tceDIwPGFceDIwaHJlZj1ceDIyaHR0cHM6Ly9xdW9ra2Fqcy5jb20vZG9jcy9wcmV2aW91cy5odG1sP2V4cGlyeWRhdGU9JywnZ2V0VVRDRnVsbFllYXInLCdnZXRVVENNb250aCcsJ1x4MjI+aGVyZTwvYT5ceDIwZm9yXHgyMGhlbHAuJywnXHgyMGZyZWVceDIwdXBncmFkZXNceDIwcGVyaW9kJywnXHgyMHRyaWFsXHgyMHBlcmlvZFx4MjBpc1x4MjBvdmVyLFx4MjB0aGFua3NceDIwZm9yXHgyMHRyeWluZ1x4MjBpdFx4MjBvdXQuXHgyMFBsZWFzZVx4MjB2aXNpdFx4MjA8YVx4MjBocmVmPVx4MjInLCdceDIyPm91clx4MjB3ZWJzaXRlPC9hPlx4MjB0b1x4MjBwdXJjaGFzZVx4MjBhXHgyMGxpY2Vuc2UuXHgyMFlvdVx4MjBtYXlceDIwYWxzb1x4MjA8YVx4MjBocmVmPVx4MjInLCdceDIyXHgyMGNsYXNzPVx4MjInLCdceDIyPmFycmFuZ2VceDIwYVx4MjBsb25nZXJceDIwdHJpYWw8L2E+XHgyMGZvclx4MjB5b3Vyc2VsZlx4MjBvclx4MjB5b3VyXHgyMHRlYW0uPGJyLz5JZlx4MjB5b3VceDIwaGF2ZVx4MjBhbHJlYWR5XHgyMHB1cmNoYXNlZFx4MjB0aGVceDIwbGljZW5zZSxceDIwcGxlYXNlXHgyMDxhXHgyMGhyZWY9XHgyMiNceDIyXHgyMGNsYXNzPVx4MjInLCdzdGFydGluZ1RyaWFsJywnXHgyMGxpY2Vuc2VceDIwZm91bmQsXHgyMHN0YXJ0aW5nXHgyMGluXHgyMGxpbWl0ZWQtdHJpYWxceDIwbW9kZS48YnIvPklmXHgyMHlvdVx4MjB3b3VsZFx4MjBsaWtlXHgyMHRvXHgyMHRyeVx4MjBXYWxsYWJ5XHgyMHdpdGhvdXRceDIwYW55XHgyMGxpbWl0YXRpb25zLFx4MjBwbGVhc2VceDIwcmVxdWVzdFx4MjBhblx4MjA8YVx4MjBocmVmPVx4MjInLCdceDIyPmV4dGVuZGVkXHgyMHRyaWFsXHgyMGxpY2Vuc2U8L2E+Ljxici8+SWZceDIweW91XHgyMGhhdmVceDIwYWxyZWFkeVx4MjBwdXJjaGFzZWRceDIwdGhlXHgyMGxpY2Vuc2UsXHgyMHBsZWFzZVx4MjA8YVx4MjBocmVmPVx4MjIjXHgyMlx4MjBjbGFzcz1ceDIyJywnWW91XHgyMGFyZVx4MjA8Yj5ub3RceDIwbGljZW5zZWRceDIwdG9ceDIwdXNlXHgyMFBST1x4MjBmZWF0dXJlc1x4MjBmb3JceDIwdGhpc1x4MjB2ZXJzaW9uXHgyMG9mXHgyMCcsJ1x4MjBiZWNhdXNlXHgyMGl0XHgyMHdhc1x4MjByZWxlYXNlZFx4MjBhZnRlclx4MjB5b3VyXHgyMGxpY2Vuc2VceDIwZXhwaXJlZDwvYj4uXHgyMFRvXHgyMGNvbnRpbnVlXHgyMHVzaW5nXHgyMFF1b2trYSxceDIweW91XHgyMGNhbjpceDIwPGFceDIwaHJlZj1ceDIyJywnXHgyMj5bUmVuZXddPC9hPixceDIwPGFceDIwaHJlZj1ceDIyI1x4MjJceDIwY2xhc3M9XHgyMicsJ1x4MjI+W0FjdGl2YXRlXTwvYT4sXHgyMDxhXHgyMGhyZWY9XHgyMmh0dHBzOi8vcXVva2thanMuY29tL2RvY3MvcHJldmlvdXMuaHRtbD9leHBpcnlkYXRlPScsJ2dldFVUQ0RhdGUnLCdceDIyPltEb3duZ3Jh4oCLZGVdPC9hPixceDIwb3JceDIwPGFceDIwaHJlZj1ceDIyI1x4MjJceDIwY2xhc3M9XHgyMicsJ1x4MjI+W1VzZVx4MjBceDI3Q29tbXVuaXR5XHgyN1x4MjBFZGl0aW9uXTwvYT4uJywnQ3VycmVudGx5XHgyMGluc3RhbGxlZFx4MjB2ZXJzaW9uXHgyMG9mXHgyMCcsJ1x4MjBpc1x4MjA8Yj5ub3RceDIwY292ZXJlZFx4MjBieVx4MjB5b3VyXHgyMGxpY2Vuc2U8L2I+Llx4MjBQbGVhc2VceDIwdmlzaXRceDIwPGFceDIwaHJlZj1ceDIyJywnVG9ceDIwa2VlcFx4MjB0cmlhbGluZ1x4MjAnLCcsXHgyMHBsZWFzZVx4MjA8Yj5yZXN0YXJ0XHgyMHlvdXJceDIwZWRpdG9yPC9iPlx4MjBvclx4MjB2aXNpdFx4MjA8YVx4MjBocmVmPVx4MjInLCdceDIyPnJlcXVlc3RceDIwYW5ceDIwZXh0ZW5kZWRceDIwdHJpYWxceDIwbGljZW5zZTwvYT4uPGJyLz5JZlx4MjB5b3VceDIwaGF2ZVx4MjBhbHJlYWR5XHgyMHB1cmNoYXNlZFx4MjB0aGVceDIwbGljZW5zZSxceDIwcGxlYXNlXHgyMDxhXHgyMGhyZWY9XHgyMiNceDIyXHgyMGNsYXNzPVx4MjInLCd0cmlhbEVuZGVkJywnVHV4VUYnLCdfc3RvcHBlclRpbWVvdXQnLCdceDIwaGFzXHgyMGJlZW5ceDIwc3RvcHBlZFx4MjBiZWNhdXNlXHgyMHlvdVx4MjBkaWRceDIwbm90XHgyMGNob29zZVx4MjB0b1x4MjBjb250aW51ZVx4MjB5b3VyXHgyMHRyaWFsXHgyMHNlc3Npb24uXHgyMFRvXHgyMGtlZXBceDIwdHJpYWxpbmdceDIwJywnLFx4MjB5b3VceDIwY2FuXHgyMHJlc3RhcnRceDIwb3JceDIwdmlzaXRceDIwPGFceDIwaHJlZj1ceDIyJywnXHgyMj5vdXJceDIwd2Vic2l0ZTwvYT5ceDIwdG9ceDIwcHVyY2hhc2VceDIwYVx4MjBsaWNlbnNlLjxici8+SWZceDIweW91XHgyMHdvdWxkXHgyMGxpa2VceDIwdG9ceDIwdHJ5XHgyMFdhbGxhYnlceDIwd2l0aG91dFx4MjB0aGlzXHgyMGxpbWl0YXRpb24sXHgyMHBsZWFzZVx4MjA8YVx4MjBocmVmPVx4MjInLCdUb1x4MjBjb250aW51ZVx4MjAnLCdceDIwdHJpYWxceDIwc2Vzc2lvbixceDIwcGxlYXNlXHgyMDxhXHgyMGhyZWY9XHgyMiNceDIyXHgyMGNsYXNzPVx4MjInLCdceDIyPmNsaWNrXHgyMFx4MjJDb250aW51ZVx4MjI8L2E+Ljxici8+SWZceDIweW91XHgyMHdvdWxkXHgyMGxpa2VceDIwdG9ceDIwdHJ5XHgyMFdhbGxhYnlceDIwd2l0aG91dFx4MjByZWNlaXZpbmdceDIwdGhlc2VceDIwd2FybmluZ3MsXHgyMHBsZWFzZVx4MjA8YVx4MjBocmVmPVx4MjInLCdceDIyPnJlcXVlc3RceDIwYW5ceDIwZXh0ZW5kZWRceDIwdHJpYWxceDIwbGljZW5zZTwvYT4uPGJyLz5WaXNpdFx4MjA8YVx4MjBocmVmPVx4MjInLCdceDIyPm91clx4MjB3ZWJzaXRlPC9hPlx4MjB0b1x4MjBwdXJjaGFzZVx4MjBhXHgyMGxpY2Vuc2UuPGJyLz5JZlx4MjB5b3VceDIwaGF2ZVx4MjBhbHJlYWR5XHgyMHB1cmNoYXNlZFx4MjB0aGVceDIwbGljZW5zZSxceDIwcGxlYXNlXHgyMDxhXHgyMGhyZWY9XHgyMiNceDIyXHgyMGNsYXNzPVx4MjInLCdmaWxlc1RvVHJhY2snLCdkb2N1bWVudFVwZGF0ZXMnLCd5VE16dicsJ1F2S0t5JywnaXNUZXN0JywnZGlzcGxheVRlc3ROYW1lJywnaXNSZWdFeHAnLCdfX1JFR0VYUFx4MjAnLCdNdXN0XHgyMHBhc3NceDIwYVx4MjBzdHJpbmdceDIwb3JceDIwYVx4MjByZWd1bGFyXHgyMGV4cHJlc3Npb24nLCd4VGNpbCcsJ0hEV1ZsJywnbnVtYmVyT2ZBbGxSYW5nZXMnLCdyb3VuZCcsJ19udW1iZXJPZkNvdmVyZWRSYW5nZXMnLCdISUFjbicsJ09oSW1CJywnX3Rlc3RJZCcsJ3RleHQnLCdfdHlwZScsJ2NvbnRleHQnLCdhY3R1YWwnLCdfZXhwZWN0ZWQnLCdleHBlY3RlZCcsJ3Rlc3RJZCcsJ2t4WEtsJywnbk5ZeFAnLCdsaW5lc0JlbG93JywnbWF4JywnbWluJywnX2ZpbGVJZCcsJ2RWYmN3JywnQ3BtUE8nLCdfdGV4dCcsJ3JtQ01aJywnX3ZhbHVlQmFnJywncmVwbGFjZVBhdGhTZXBGb3JSZWdleCcsJ19lc2NhcGVTdHJGb3JSZWdleCcsJ2RldGFjaFZhbHVlQmFnJywndGRpZWQnLCd3cGlDdicsJ19zZW5kZXInLCdfZmlsZScsJ2lzQXJyYXknLCd5eVpZRScsJ19jb250ZXh0JywnY29mZmVlJywnX2FjdHVhbCcsJ21pY3JvbWF0Y2gnLCdpc01hdGNoJywnaXRlbXMnLCdfaGl0cycsJ2hpdHMnLCdpbml0JywncmVuZGVyJywnX2tleScsJ19pdGVtcycsJ19zdGFydExpbmUnLCdfZW5kTGluZScsJ19lbmRDb2x1bW4nLCdfbnVtT2ZDb3ZlcmluZ1Rlc3RzJywnX2NvdmVyaW5nVGVzdE1hcCcsJ0d0eUxhJywnX2FkZEZhaWxlZE9uTWVUZXN0SWZGYWlsaW5nJywnX2lzQ292ZXJlZEJ5Tm90VGVzdHMnLCdzaXplJywnX3NldElzQ292ZXJlZCcsJ2xpbmVTaGlmdCcsJ19zdGFydENvbHVtbicsJ1RKZ3F4JywnZW5kTGluZScsJ2VuZENvbHVtbicsJ1VEdEN5JywnZmFpbHMnLCdwTFpjcCcsJ19uYW1lJywnX2Z1bGxOYW1lJywnX2dsb2JhbEVycm9ycycsJ25vdEZhaWxzJywnR0ZWR0gnLCdzcGxpY2UnLCdDSW1LVicsJ19jb25zb2xlTG9nJywnaW5zdGFuY2UnLCdyZW1vdmVBbGxMaXN0ZW5lcnMnLCdjb25zb2xlTG9nJywnWUxlcnEnLCdfcmVtb3ZlQW5zaScsJ2lzRGlzcG9zZWQnLCdfZmFpbGVkQnlNZVRlc3RzJywnaXNPbkVycm9yUGF0aCcsJ19mYWlsZWRPbk1lVGVzdHMnLCdwRkVFYycsJ2lzRXJyb3JTb3VyY2UnLCdmbGF0dGVuJywncnVtZW50YXRpJywnc2VyXHgyMEVycm9yJywnZGVceDIwY2hlY2snLCdzb3VyY2VGaWxlJywnbm90Q292ZXJlZEJ5JywnY292ZXJpbmdUZXN0cycsJ19pc0NvdmVyZWQnLCdhdHRhY2hlZFRvU291cmNlRmlsZScsJ2NvdmVycycsJ05uVkFxJywnX3VwZGF0ZVRlc3RXaXRoUG9zc2libGVGYWlsZWRPblRoZVJhbmdlJywnX3VwZGF0ZVRlc3QnLCdOaGZUbCcsJ2V1RktlJywnX2lzSW5zaWRlT2YnLCdxRUlpeicsJy4vZG9jdW1lbnRMaW5lJywnZG5wdHonLCdfbGluZVNoaWZ0T3JJbnZhbGlkYXRpb25TaW5jZUxhc3RVcGRhdGUnLCdhZGRSYW5nZScsJ2hhc1JhbmdlcycsJ3NsaWNlJywnQXJqQmYnLCdfY29tcGFjdExpbmUnLCdSRVZGTCcsJ0pYbnZMJywnaGFzUmVwb3J0YWJsZUNvdmVyYWdlJywnYWxsTGluZXMnLCdxS3FlZicsJ1pMS2tLJywnc3RhdGUnLCdjb25zb2xlTG9nVGV4dCcsJ2xvbmdDb25zb2xlTG9nVGV4dCcsJ2ludmFsaWRhdGVMaW5lcycsJ3NoaWZ0TGluZXMnLCdhQmFTdScsJ21PYlpNJywnUGRIWXUnLCdwbGF0Zm9ybURlcGVuZGVudFBhdGgnLCdhYnNvbHV0ZScsJ0xQdG1uJywnaHlWRU0nLCd0cmltJywnLi4vc2hhcmVkL2VudW1zJywnbGluZVN0YXRlJywnZWxUck0nLCdfbGluZU51bWJlcicsJ19yYW5nZXMnLCdfaWQnLCd1cGRhdGVMaW5lRGF0YScsJ19saW5lU3RhdGUnLCdfZXJyb3JTb3VyY2VUZXh0JywnX2xvbmdDb25zb2xlTG9nVGV4dCcsJ3NvcnRCeScsJ2VHR1pEJywnRlB2aU4nLCdbZW1wdHlceDIwc3RyaW5nXScsJ3RoZW5ceDIwJywnLi4uXHgyMCcsJ1x4MjB8XHgyMCcsJ1liWWFrJywnX2NvdmVyYWdlJywnX3J1bkVycm9yJywnXHgyMFx4MjAuLi5ceDBhJywnXHgyMFx4MGFceDIwJywnXHgwYS0tLVx4MGEnLCdfdHJ1bmNhdGVNZXNzYWdlJywnZXJyb3JQYXRoJywnbm90Q292ZXJlZCcsJ3BhcnRpYWxseUNvdmVyZWQnLCduWXdnbCcsJ1ZJcnJCJywnQkdGdEgnLCdfaGFuZGxlRXJyb3InLCdwTEp3dCcsJ2xvY2F0aW9uJywnX2J1aWxkTG9jYXRpb24nLCdfY2xlYW5TdHJpbmcnLCdWdVJoVCcsJ2NvdmVyYWfigItlJywnX2xhdGVzdFJlcG9ydGVkQ292ZXJhZ2VWYWx1ZScsJ19sYXRlc3ROdW1iZXJPZkFsbFJhbmdlcycsJy4vc3RhY2tFbnRyeScsJ19tZXNzYWdlJywnX3N0YWNrJywnX3NuYXBzaG90Jywnc25hcHNob3QnLCdyUWdwVScsJ01IcktlJywnYXhaU2snLCdaYnFpWifigIssJy4vZXJyb3JFbnRyeScsJy4uLy4uL3V0aWxzJywnZmlsZUlkJywnbG9nJywnZGVjbGFyYXRpb24nLCdfdGltZScsJ19wYXJlbnQnLCdfYnVpbGRGdWxsTmFtZUFuZFBhdGgnLCdfc2V0S2V5JywnX2NvdmVyZWRSYW5nZXMnLCdfdHMnLCdfaXNGYWlsaW5nJywnX2Vycm9yU3RhY2tNYXAnLCdRbVl6aycsJ2xmQXFZJywnYXpIbmUnLCdzdGFja0VudHJ5JywnZVltaEknLCdXYmFtQScsJ3Rocm93JywnbEVVbWEnLCdDSG1aSicsJ3JhbmRvbScsJ190ZXN0RmlsZScsJ2FkZENvbnNvbGVNZXNzYWdlJywnX2NvbnNvbGVNZXNzYWdlcycsJ2NvbnNvbGVNZXNzYWdlcycsJ3Nsb3cnLCdMUFlxaCcsJ3NldFRlc3RGaWxlJywnb2Jzb2xldGUnLCdfc3RhcnRSYW5nZScsJ0t0UERBJywncVRRaU4nLCdjb3ZlcmVkRmlsZXMnLCdFVE1TSicsJ19jaGVja1BvcnQnLCdUeFF5YScsJ3dvWkZYJywnY29tcGxldGVJbml0aWFsaXphdGlvbicsJ3VWdURWJywnX2RlY2xhcmF0aW9uJywnZEtQQlQnLCdoeWd1cicsJ1BkcWZrJywnR3l3WEwnLCdaeGlETScsJ3F5RVFqJywnZ2dxS3InLCdfc3BhY2VfdG9rZW5fJywnR0dGUlgnLCdkT1RBQycsJ2dRa0hlJywnTld6RnonLCdRVVJOcScsJ2NvbnN0cnVjdG9yJywnX3NldFRpbWVvdXRGb3JMb25nUnVubmluZ09wZXJhdGlvbicsJ2tyT0RyJywnU1NkelonLCdRUFN2RScsJ190ZXN0c1JlbW92ZWQnLCdvd25UZXN0cycsJ3pYZXJFJywncmVtb3ZlJywnemNoZmgnLCdlYWNoTWFwcGluZycsJ2dlbmVyYXRlZExpbmUnLCdvcmlnaW5hbExpbmUnLCdyeG9ZRicsJ3JqbmV0JywnZGlQdlYnLCdfY3JlYXRlU2Vzc2lvbicsJ1NhbmRib3hceDIwbG9hZFx4MjBmYWlsZWQsXHgyMHN0YXR1czpceDIwJywncVJBUFknLCdIR0RMeScsJ19jbG9zZUJ5RXJyb3JUaW1lb3V0JywnY29tcGxldGUnLCdjaG9raWRhcicsJ0ZTV2F0Y2hlcicsJy4uL3NoYXJlZC91dGlscycsJ01CaFFQJywnV3hFS1EnLCdhZGQnLCdoYXMnLCdTV09nYScsJ0hNb2xIJywnQ3JlYXRpbmdceDIwcGFnZVx4MjBmb3JceDIwd29ya2VyXHgyMCMnLCdfY3JlYXRlUGFnZScsJ2NxR0t1JywnX2lzUmVhZHknLCdfZmlsZXNCeUlkJywnRU1uTUYnLCdMTUdydycsJ25yOScsJ1lpV2FWJywnRmFpbGVkXHgyMHRvXHgyMGNvcHlceDIwdG9ceDIwY2xpcGJvYXJkLlx4MjAnLCdscnUtY2FjaGUnLCdfcmVhZEZpbGVQcm9taXNlJywncmVhZEZpbGVQcm9taXNlJywncmVhbHBhdGhTeW5jJywnZmlsZVN0YXRQcm9taXNlJywnX2lzV2luJywnZFJPV0snLCdwYXR0ZXJuJywnQU1KU1QnLCdhZFhFcCcsJ1JXTk1FJywnb3JkZXInLCdGaWxlXHgyMHN5c3RlbVx4MjBzY2FuXHgyMGhhc1x4MjBmaW5pc2hlZFx4MjBieVx4MjB0aW1lb3V0JywnZ2xvYicsJ2RvdCcsJ2ZpbGVTY2FuVGltZW91dCcsJ19pc0luY2x1ZGVkJywnZGFyd2luJywnbGludXgnLCdpc1N5bWJvbGljTGluaycsJ210V3pqJywnaXNGaWxlJywnWmJBVVknLCdyZWxhdGl2ZScsJ2xpbmVUZXN0cycsJ01rdlJMJywnWW91clx4MjBwcm9qZWN0XHgyMGZpbGVceDIwcGF0aFx4MjBsb29rc1x4MjBsaWtlXHgyMGFceDIwdmFsaWRceDIwZ2xvYlx4MjBwYXR0ZXJuXHgyMGFuZFx4MjBjb250YWluc1x4MjBnbG9iXHgyMGNoYXJhY3RlcnMsXHgyMGxpa2VceDIwYHtgLFx4MjBgfWAsXHgyMGBbYCxceDIwYF1gLFx4MjBgKGAsXHgyMGApYCxceDIwYCpgLFx4MjBgfGA7XHgyMGl0XHgyMG1heVx4MjBjYXVzZVx4MjB0aGVceDIwcHJvamVjdFx4MjBmaWxlXHgyMHNjYW5uaW5nXHgyMHRvXHgyMGZhaWwsXHgyMHBsZWFzZVx4MjByZW1vdmVceDIwZ2xvYlx4MjBjaGFyYWN0ZXJzXHgyMGZyb21ceDIwdGhlXHgyMHByb2plY3RceDIwcGF0aC4nLCd0ZmNreicsJ2lpbE5KJywnX2dldEJhc2VEaXInLCdKUWFWSicsJ1ljdVdqJywnbXZhVVAnLCdub3JtYWxpemUnLCdvelpLYycsJ2xOT3VBJywnX3JlYWxwYXRoU3luYycsJ0pzd0hXJywnX3JlZ2VuZXJhdG9yUnVudGltZScsJ19ub2RlTW9kdWxlcycsJ3JlZ2VuZXJhdG9yLXJ1bnRpbWUnLCd0cmltUmlnaHQnLCdtRGxuZycsJ19idWlsZEFycmF5VGVzdFN0cnVjdHVyZScsJ3F2SlZJJywnX2ZpbGVEZWxldGVkJywnZGVib3VuY2UnLCdXT1NhcScsJ19oYXNHbG9iQ2hhcnMnLCdfaXNHbG9iJywncnJjcEcnLCdleGVjJywnaW5kZXgnLCdfdGVzdEZyYW1ld29yaycsJ2plc3QnLCdnZXRGaWxlTGluZU1hcCcsJ2d6cUp5JywnX2xvYWRGaWxlJywnX3dzcycsJ0hDR3RiJywnRmlsZVx4MjBjaGFuZ2VkXHgyMGluXHgyMGVkaXRvcjpceDIwJXMnLCdfZW1pdEZpbGVDaGFuZ2UnLCdreGpKZScsJ1x4MjBmb3VuZCcsJ19lbnN1cmVSZWFkRmlsZVdpdGhDb3JyZWN0Q29udGVudCcsJ190aW1lb3V0JywnRmlsZUNvbnRlbnQubGVuZ3RoXHgyMG5vdFx4MjBlcXVhbFx4MjB0b1x4MjBGaWxlSW5mby5sZW5ndGgnLCdwUkJhRicsJ3BlZmVGJywnc3RhcnQxJywnbGVuZ3RoMicsJ2hRa2xxJywnaXNDb3ZlcmFibGUnLCdleHRlbnNpb25zJywnZGVsJywnRmlsZVx4MjBjaGFuZ2VkOlx4MjAlcycsJ0pteHJlJywnc0NYQUUnLCdfZmlsZXMnLCdOb1x4MjBtZXRhZGF0YVx4MjBmb3JceDIwY2hhbmdlZFx4MjBmaWxlXHgyMGZvdW5kOlx4MjAlcycsJ3FEdUhpJywnTFJScUYnLCdwYXRjaF90b1RleHQnLCdGaWxlXHgyMGRlbGV0ZWQ6XHgyMCVzJywnbGlua2VkUGF0aCcsJ25vcm1hbGl6ZVBhdGgnLCdxVkR1SCcsJ19pc0VudGl0eUV4Y2x1ZGVkJywnY2xvbmUnLCdwYXRoTWF0Y2hlc1BhdHRlcm4nLCdyZWdleHAnLCdKb2JIWCcsJ0Vycm9yXHgyMHdoaWxlXHgyMGNyZWF0aW5nXHgyMHdvcmtlclx4MjAjJXM6XHgyMCVzJywndVFVcUsnLCdOTGxvZicsJ1Bvc3NpYmxlXHgyMHN5bWxpbms6XHgyMCVzXHgyMC0+XHgyMCVzJywndGdkT1AnLCdwZXB0eicsJ3BhdGNoX2Zyb21UZXh0JywncGF0Y2hlcycsJ3JGQ3drJywnZGlmZnMnLCdOR3pBWicsJ2xlbmd0aDEnLCd1TlpiVCcsJ2NvbnRhaW5zJywncXVva2thU3RhY2tUcmFjZU1hcmtlcicsJ2tlV0RjJywnR2ZsWWsnLCdGZkZ3dCcsJ21pbmltYXRjaCcsJy4vYnJvd3Nlckdsb2JhbHMnLCdzZWxmJywndG9wJywncGFyZW50JywnY29uZmlybScsJ2ZvY3VzJywnb3BlbicsJ3ByaW50JywncHJvbXB0JywnLi90cmFja2VkU291cmNlRmlsZScsJy4vY292ZXJhYmxlUmFuZ2UnLCcuL2V4ZWN1dGVkVGVzdCcsJy4vY29uc29sZU1lc3NhZ2UnLCdmaWxlSWRCeVBhdGgnLCdfbnVtYmVyT2ZBbGxSYW5nZXMnLCdfdGVzdFJ1bkdsb2JhbExvZ3MnLCdfZmlsZXNXaXRoTWVzc2FnZXMnLCdfZmlsZXNXaXRoTG9hZGFibGVNZXNzYWdlcycsJ19jaGFuZ2VkJywnX2dldEZpbGVDb250ZW50JywnZ2V0TGF0ZXN0T3JpZ2luYWxGaWxlQ29udGVudEJ5UGF0aCcsJ2JodmdLJywnYkpJUnQnLCdkbXAnLCdwcm9qZWN0OicsJ2V4dGVuZGVkQ29yZScsJ3hMSVRuJywnY29uZmlnRmlsZVBhdGgnLCdwcm9qZWN0TmFtZScsJ2xvd0NvdmVyYWdlVGhyZXNob2xkJywnb0RzS3YnLCdmSk5acCcsJ2ZpbGVDb250ZW50QnlQYXRoJywnaXNaZXJvQ29uZmlnSmVzdCcsJ2J1aWxkRGlzcGxheVJhbmdlc0lmUmVxdWlyZWQnLCdsaW5lUmFuZ2VzJywnZGlzcGxheVJhbmdlJywnRXRlaHQnLCdHSGtQaScsJ2NuZ2NFJywnX2xhdGVzdEZhaWxpbmdUZXN0QnlGaWxlQW5kTGluZScsJ2lsY1VDJywnbGFzdCcsJ1VvdnpDJywnSVZyaEQnLCd6Y3BFSCcsJ2hWUk5kJywnSUFCcUsnLCdCbUFSWCcsJ2JPY2hRJywnX21hcEVycm9ycycsJ3pJRHp6JywnRk9DTnonLCdfY2FuY2VsbGVkJywnbGF0ZXN0RmFpbGluZ1Rlc3QnLCdfYWRkaXRpb25hbEhlYWRlck1lc3NhZ2UnLCd2amdwVScsJ19tYXBNZXNzYWdlcycsJ21pc3NpbmdQYWNrYWdlJywnbWlzc2luZ0Jyb3dzZXJHbG9iYWwnLCd0b3RhbE51bWJlcicsJ2ZhaWxpbmdOdW1iZXInLCdlUHBIcycsJ3NVS1R6JywnX2h0dHBTZXJ2ZXInLCdjcmVhdGVTZXJ2ZXInLCd3cml0ZUhlYWQnLCd0ZXh0L2h0bWwnLCdvbmNlJywnbGlzdGVuJywnUEhnbHUnLCdzQUt1TicsJ3RaQUplJywnZ2xvYmFsRXJyb3JzJywnbFV5SUEnLCdFcnJvclx4MjB3aGlsZVx4MjBwcm9jZXNzaW5nXHgyMFNUREVSUlx4MjBtZXNzYWdlOlx4MjAnLCdfZW1pdEZpbGVzTWVzc2FnZXMnLCdwcm9qZWN0OnN0YXJ0aW5nJywnX3BoYW50b21qc1BhdGgnLCdfaXNQaGFudG9tSW5zdGFuY2VIZWFsdGh5JywndE1HY1YnLCdfYWRkRmlsZScsJ3FqZ0VYJywncHJvamVjdDpmaWxlJywneWhObnknLCdCeFNJRCcsJ2ZpbGVDaGFuZ2VkJywnZmlsZUFkZGVkJywnVFpKUVMnLCdyYW5nZUNvbnNvbGVMb2cnLCdzZXRSYW5nZXMnLCdjbGVhclJhbmdlQ29uc29sZUxvZycsJ2luc3RydW1lbnRlZEJ5VGVzdGluZ0ZyYW1ld29yaycsJ3NldEluc3RydW1lbnRlZEJ5VGVzdGluZ0ZyYW1ld29yaycsJ2FIYWJ6JywnY01RbWknLCdYbnRyZCcsJ2hHUkNZJywnaHhoWmInLCdlcnJvclNvdXJjZScsJ1JFQURZJywndGVzdEZpbGVEZWxldGVkJywnZmlsZURlbGV0ZWQnLCdfdXBkYXRlVG90YWxDb3ZlcmFnZScsJ2NvbnNvbGVPdXRwdXQnLCdwcm9qZWN0OnRlc3RSdW5FcnJvcicsJ3Byb2plY3Q6dGVzdFJ1blN0YXJ0ZWQnLCdrRlNBZCcsJ3Byb2plY3Q6dGVzdFJlc3VsdHMnLCdhZGRpdGlvbmFsSGVhZGVyTWVzc2FnZScsJ0VVdnV5JywnZEFtWUgnLCdxUm9BSCcsJ2plc3QtcnVubmVyJywnZGlmZicsJ3NldFJhbmdlQ29uc29sZUxvZycsJzxkaWZmXHgyMG5vdFx4MjBzdXBwb3J0ZWRceDIwZm9yXHgyMHBhcmFtXHgyMHR5cGVzPicsJ3NpbmdsZVRlc3RDaGFuZ2VkJywnbXFURUknLCdhZGRUZXN0JywncEJ0RkcnLCdfdGVzdEFkZGVkJywnamJZaHAnLCdfdXBkYXRlRmlsZVJhbmdlcycsJ3h5b1VOJywnTnFGVEQnLCdfbGluZScsJ2JQZXhZJywnX3JlcG9ydEdsb2JhbEVycm9ycycsJ191cGRhdGVBZmZlY3RlZEZpbGVzJywnZnVsbFJ1bicsJ19ub0NvdmVyYWdlQ2FsY3VsYXRpb24nLCd2d2xSbicsJ2ZpbGVzV2l0aENvdmVyYWdlQ2FsY3VsYXRlZCcsJ3NvbWUnLCdnSEhiTScsJ0lWYVJiJywnQVByckMnLCdfZGVsZXRlRmlsZScsJ2ltcHZHJywnYWptdHknLCdfcmVwb3J0RmFpbGVkUnVuJywnb0tLRFEnLCdQb3N0cHJvY2Vzc29yXHgyMHJ1blx4MjBmYWlsdXJlOlx4MjAnLCdxaW1DYicsJ0dvdkhjJywnckxyVWEnLCdPS3ltbycsJ2xPamV0JywnYWdncmVnYXRlRmlsZUNvdmVyYWdlJywnX2FnZ3JlZ2F0ZUZpbGVDb3ZlcmFnZScsJ3VwZGF0ZURvY3VtZW50JywnX2Fsd2F5c1NlbmRBbGxMaW5lcycsJ2RvY3VtZW50c1VwZGF0ZWQnLCdzdGF0c01heWJlQ2hhbmdlZCcsJ2F1dG9FeHBhbmQnLCdrY1pMZycsJ251bWJlck9mQ292ZXJlZFJhbmdlcycsJ192YWx1ZXNJbmNsdWRlZEluQ292ZXJhZ2VBZ2dyZWdhdGUnLCd2cE94VScsJ1lrT0d2Jywnc2V0Q29uc29sZUxvZycsJ2hteWtYJywnUW9ZdlUnLCdkaXNwbGF5UGF0aCcsJ29HdXNXJywnQXNUQ1AnLCdrZWVvdicsJ2tGbE55JywnQkh2VFonLCdDYW5ub3RceDIwZmluZFx4MjBtb2R1bGVceDIwXHgyNycsJ2NvZGUnLCdNT0RVTEVfTk9UX0ZPVU5EJywnX19yZWFkJywnclV3ZncnLCdHT0JXbicsJ2RncmFtJywnb3B0aW9ucycsJzIzMC4wLjAuMycsJ2FydG9OJywnWVByQmwnLCdfbmV0d29ya0FkZHJlc3MnLCdfbGlzdGVuZXJzJywndWRwNCcsJ2hQR01xJywncW5zU20nLCdlUktLeicsJ0ZhaWxlZFx4MjB0b1x4MjByZWFkXHgyMEplc3RceDIwY29uZmlndXJhdGlvblx4MjBmcm9tXHgyMFx4MjcnLCdceDI3Olx4MjAnLCdjcmVhdGVTb2NrZXQnLCdsaXN0ZW5pbmcnLCdjeEtFRCcsJ3RSSHdTJywnZXZlbnQnLCdzb3VyY2UnLCdfc291cmNlcycsJ3NvdXJjZUlkJywneVhKeFcnLCdIWExNeCcsJ2h3T1FjJywnbWNwSFknLCdfc291cmNlJywnX2ludmFsaWRhdGVEb2N1bWVudCcsJ19nZXROZXR3b3JrQWRkcmVzc2VzJywndWFlYlcnLCdKTnpETScsJ19xdWV1ZScsJ0VCQk9oJywnWXZiZVknLCdpdElhRCcsJ2t0TERlJywnWGVPYXUnLCcuL2RvY3VtZW50SW5FZGl0b3InLCcuLi8uLi8uLi9saWIvYmFiZWxSYW5nZUNhbGN1bGF0b3InLCdUT2hkSicsJ0JucXlrJywnX25ld1JhbmdlcycsJ19hZmZlY3RlZFJhbmdlcycsJ19vdXRkYXRlZFJhbmdlcycsJ19saW5lVG9SYW5nZU1hcCcsJ1VDQ1ZMJywnaW5zdHJ1bWVudGVkJywnX2RhdGEnLCdLYk5YRycsJ0TigItUa2FCJywnX2FsbFJhbmdlc1JlY2VpdmVkJywnWm5PVVknLCdtaXNNUCcsJ1lLV2xkJywnRHl4SVEnLCdpbnZhbGlkYXRlRG9jdW1lbnRMaW5lcycsJ0pyT1JEJywnX2FsbG93ZWRUb1NlbmRBbGxGaWxlcycsJ2hhc1ZhbGlkRG9jdW1lbnQnLCdzT01uSycsJ3VWWkd1JywnSkphWksnLCdfbmVlZFRvUmVidWlsZERpc3BsYXlhYmxlUmFuZ2VzJywnX29yaWdpbmFsUmFuZ2VDb3VudCcsJ2ZvckVhY2gnLCdfZGlzcGxheVJhbmdlc0xpbmVNYXAnLCdRcnFUUycsJ1ZYSnB3JywnZnp6eEcnLCd5Z0VZeicsJ3JlcG9ydEludGVybWVkaWF0ZVJlc3VsdCcsJ0RrYWdPJywnd3VkVUMnLCdlbnF1ZXVlJywnS09oV3AnLCdTcE54VCcsJ2hvQWRmJywnWXZVcG4nLCdiVGFadCcsJ1hsU012JywnQURsZWEnLCdyYW5nZUNvdmVyYWdlQ2hhbmdlZCcsJ1FOenhlJywnX3VybFV0aWwnLCdjaGFyQXQnLCdwYXRobmFtZScsJ3NlYXJjaCcsJ2NoYW5nZVVybCcsJ3NIQWpMJywnaExLWUYnLCdCQWZrQScsJ2hhc1JlcG9ydGFibGVDb3ZlcmFnZU9yVGVzdEZpbGUnLCdyZXNvbHZlTG9nRW50cnlSYW5nZScsJ19zZXNzaW9ucycsJ19jb25uZWN0aW5nV29ya2VycycsJ193b3JrZXJQZW5kaW5nQ2xlYW51cCcsJ19jYWxjdWxhdGVOdW1iZXJPZlBhcmFsbGVsV29ya2VycycsJ19tYXhXb3JrZXJzJywnX21pbldvcmtlcnMnLCdfbm9ybWFsaXplZFdhbGxhYnlTZXJ2ZXJQYXRoJywnbWFpbk1vZHVsZScsJ19ub3JtYWxpemVkTG9jYWxSb290JywnX3plcm9Db25maWdKZXN0JywnX2NvdmVyYWdlQ2FsY3VsYXRpb25FeHBlY3RlZCcsJ19pbnN0cnVtZW50ZWRCeVRlc3RpbmdGcmFtZXdvcmsnLCdfcmVidWlsZFJhbmdlTWFwJywndkp2TE4nLCc8c2VlXHgyMHRoZVx4MjBkaWZmXHgyMGluXHgyMHF1b2trYVx4MjBvdXRwdXQ+JywndXBkYXRlRnJvbScsJ2Nsb3NlclRvVGhlTGluZVRoYW4nLCdyZW1vdmVBbGxUZXN0cycsJ3RJcUZtJywnZnJvbScsJ1RCVkptJywnaGFIYlMnLCdNYXJjaCcsJ0FwcmlsJywnTWF5JywnSnVuZScsJ0p1bHknLCdBdWd1c3QnLCdTZXB0ZW1iZXInLCdPY3RvYmVyJywnd2luMzInLCdsaWNlbnNlZUVtYWlsJywnbGljZW5zZVNpZ25hdHVyZScsJ3VKR2hJJywnUnVudGltZScsJ09tZWxHJywnanhXZWUnLCd2ZU5BUScsJ2FLYXhWJywnZ1JHSWsnLCdKaEhMWicsJ1NjWWx5JywnRmFpbGVkXHgyMHRvXHgyMGRlc2VyaWFsaXplXHgyMG1lc3NhZ2VceDIwZnJvbVx4MjB3YWxsYWJ5XHgyMFVJOlx4MjAnLCduZXQnLCdTZXJ2ZXInLCcuLi9zZXJ2ZXIvZG9jdW1lbnRJbkVkaXRvcicsJ0ZhR0VUJywnX2ZpbmRGcmVlUG9ydCcsJ3ZFd0FGJywnSXVvd3UnLCdGYWlsZWRceDIwdG9ceDIwc3RhcnRceDIwd2FsbGFieVx4MjBhcHBceDIwc2VydmljZTpceDIwJywnX2ZpbGVzQ2hhbmdlZFByaW9yVG9Db21wbGV0ZWRPclJlcXVldWVkVGVzdFJ1bicsJ3VpOnN0YXJ0JywndWk6bmF2aWdhdGUnLCd1aTpydW5UZXN0cycsJ3VpOm9wZW5lZEluRWRpdG9yJywnd1FodGonLCdjTlFMYycsJ3VpOmNsb3NlZEluRWRpdG9yJywndWk6Y29kZVJlcXVlc3RlZCcsJ0ZDeHZjJywnb0tLZGonLCdsaW5lcycsJ3VpOmNvZGUnLCdjb3JyZWxhdGlvbklkJywnX2ZpbGVSb290JywncnRyaW0nLCdzdGFja0VudHJ5QnlGaWxlUGF0aCcsJ3VpOnRlc3RzOnJlc3VsdHNSZXF1ZXN0ZWQnLCdod1dieCcsJ19zZW5kVGVzdFJlc3VsdHMnLCd1aTp0ZXN0czpyZXN1bHRzQWJhbmRvbmVkJywnbW9kZWw6YnVzeScsJ3VpOmJ1c3knLCdqeEdraycsJ19sb25nUnVubmluZ1dhcm5pbmdUaW1lb3V0JywnX29uRmluaXNoZWQnLCdfZGlzcG9zZScsJ1slc11ceDIwUnVuXHgyMCVzXHgyMHRlc3QocyksXHgyMHNraXBwZWRceDIwJXNceDIwdGVzdChzKScsJ19za2lwcGVkJywnbW9kZWw6dGVzdFJ1blJlUXVldWVkJywnbW9kZWw6dGVzdEZpbGVEZWxldGVkJywnWVd2Uk8nLCdFQmxSaycsJ1NxcFZzJywnZGVidWdMb2cnLCdhdXRvTG9nJywnY29uc29sZS4nLCduZWVkVG9SZWJ1aWxkRGlzcGxheWFibGVSYW5nZXMnLCdkdmhvYScsJ21vZGVsOnRlc3RzRXhlY3V0ZWQnLCdMVFNkVCcsJ2NvcHktcGFzdGUnLCdjb3B5JywnQlhweE4nLCd0SHZHRScsJ1VCTldvJywnbVlGUmInLCdhbGxSZXN1bHRzVXBkYXRlZCcsJ2ZpcnN0RmFpbGluZ09yU2luZ2xlRXhlY3V0ZWRUZXN0JywndWk6dGVzdHM6JywnX2NyZWF0ZVRlc3RSZXN1bHRzJywnZXhlY3V0ZWQnLCdBS25nZicsJ0tVQVNPJywnX2V4ZWN1dGluZ1Rlc3RMb2cnLCdfYXJlTG9nRW50cnlNZXNzYWdlc0VxdWFsJywnSHNNa1YnLCdxdWV1ZScsJ19ydW4nLCdFVWVneCcsJ3Rha2UnLCdSdkZRbicsJ2ZqeElVJywnaGVhbHRoeScsJ0ZvdW5kXHgyMGluYWN0aXZlXHgyMHJ1blx4MjB3b3JrZXJceDIwaW5zdGFuY2VceDIwIyVzLFx4MjByZWN5Y2xpbmcnLCdVdHBndicsJ051Y050JywnLS1kaXNrLWNhY2hlPScsJy0td2ViLXNlY3VyaXR5PScsJ1ZHZ2JWJywnZUNNclcnLCdQb0twaycsJ2pmQUZTJywnQXBMRUUnLCdDSnJJTScsJ29yaWdpbicsJ3dhbGxhYnlqcy5jb20nLCdjb25uZWN0aW9uJywnVUlceDIwY2xpZW50XHgyMGNvbm5lY3RlZCcsJ3BJT2N2JywnV1ZLaU8nLCdkZXZEZXBlbmRlbmNpZXMnLCdJbmNvbWluZ1x4MjBtZXNzYWdlXHgyMCVzJywnVUlceDIwY2xpZW50XHgyMGRpc2Nvbm5lY3RlZCcsJ0NabHdYJywnZmlsZXNCeVBhdGgnLCdwcm9qZWN0Q29uZmlnJywnTGlzdGVuaW5nXHgyMHBvcnRceDIwJXMnLCdXVnlhQicsJ2hkSkhNJywnakF6cU8nLCdQS2hqdCcsJ1FoQk1XJywnbmVReXgnLCdPcHdrbScsJ3pXVWJ1JywnZElscGInLCd3WnpqSycsJ1RlZFNZJywnaWpDTmInLCdEZXBsUicsJ3ZlcmlmeUxvY2FsT3JpZ2luJywnWEFBelgnLCdydVdkaycsJ3BhcnNldXJsJywnbWltZScsJ25vdycsJ2xvb2t1cCcsJ3RleHQvcGxhaW4nLCd0cmFjZScsJ2NhY2hlJywnbWFpbiddOyhmdW5jdGlvbihfMHgzNTMzOTksXzB4NTgwODdlKXt2YXIgXzB4MmMxOWZjPWZ1bmN0aW9uKF8weDVhN2YyNSl7d2hpbGUoLS1fMHg1YTdmMjUpe18weDM1MzM5OVsncHVzaCddKF8weDM1MzM5OVsnc2hpZnQnXSgpKTt9fTtfMHgyYzE5ZmMoKytfMHg1ODA4N2UpO30oXzB4MzkxNiwweDFiMykpO3ZhciBfMHg1NzQ0PWZ1bmN0aW9uKF8weDI3MWViOCxfMHhkNDVlMWQpe18weDI3MWViOD1fMHgyNzFlYjgtMHgwO3ZhciBfMHgyYzJjZmI9XzB4MzkxNltfMHgyNzFlYjhdO3JldHVybiBfMHgyYzJjZmI7fTshZnVuY3Rpb24gZShfMHgxNmExOTgsXzB4NThiZjZhLF8weDQ3NzY0Zil7ZnVuY3Rpb24gXzB4MmE4NDAwKF8weDFjZGI2MCxfMHgxOWYxNzgpe2lmKCFfMHg1OGJmNmFbXzB4MWNkYjYwXSl7aWYoJ3pzblRiJz09PV8weDU3NDQoJzB4MCcpKXtpZighXzB4MTZhMTk4W18weDFjZGI2MF0pe3ZhciBfMHgxOTNiNDc9XzB4NTc0NCgnMHgxJyk9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlO2lmKCFfMHgxOWYxNzgmJl8weDE5M2I0NylyZXR1cm4gXzB4MTkzYjQ3KF8weDFjZGI2MCwhMHgwKTtpZihfMHg1MGNlOGYpcmV0dXJuIF8weDUwY2U4ZihfMHgxY2RiNjAsITB4MCk7dmFyIF8weDEyZmE3Yj1uZXcgRXJyb3IoJ0Nhbm5vdFx4MjBmaW5kXHgyMG1vZHVsZVx4MjBceDI3JytfMHgxY2RiNjArJ1x4MjcnKTt0aHJvdyBfMHgxMmZhN2JbJ2NvZGUnXT0nTU9EVUxFX05PVF9GT1VORCcsXzB4MTJmYTdiO312YXIgXzB4NWUyZWY3PV8weDU4YmY2YVtfMHgxY2RiNjBdPXsnZXhwb3J0cyc6e319O18weDE2YTE5OFtfMHgxY2RiNjBdWzB4MF1bJ2NhbGwnXShfMHg1ZTJlZjdbJ2V4cG9ydHMnXSxmdW5jdGlvbihfMHg1ODEyN2Upe2lmKF8weDU3NDQoJzB4MicpPT09XzB4NTc0NCgnMHgyJykpe3ZhciBfMHg1OGJmNmE9XzB4MTZhMTk4W18weDFjZGI2MF1bMHgxXVtfMHg1ODEyN2VdO3JldHVybiBfMHgyYTg0MDAoXzB4NThiZjZhP18weDU4YmY2YTpfMHg1ODEyN2UpO31lbHNle18weDE2YTE5OCYmKF8weDU3NDQoJzB4MycpPT09XzB4NTgxMjdlW18weDU3NDQoJzB4NCcpXT8oXzB4MTZhMTk4W18weDU3NDQoJzB4NScpXT0weDAsXzB4NTgxMjdlW18weDU3NDQoJzB4NicpXT1fMHgxNmExOThbJ19zb21lUmVzdWx0c1Jlc3BvbnNlU2VxTnVtJ10rKyk6J3VpOnRlc3RzOnNvbWVSZXN1bHRzVXBkYXRlZCc9PT1fMHg1ODEyN2VbXzB4NTc0NCgnMHg0JyldJiYoXzB4NTgxMjdlWydzZXEnXT1fMHgxNmExOThbJ19zb21lUmVzdWx0c1Jlc3BvbnNlU2VxTnVtJ10rKykpLF8weDVlMmVmNyhfMHg1NzQ0KCcweDcnKSxfMHg1ODEyN2VbXzB4NTc0NCgnMHg0JyldKTt2YXIgXzB4MTM4MzA2PUpTT05bXzB4NTc0NCgnMHg4JyldKF8weDU4MTI3ZSk7XzB4MTZhMTk4P18weDE2YTE5OFtfMHg1NzQ0KCcweDknKV0oXzB4MTM4MzA2KTpfWydlYWNoJ10odGhpc1tfMHg1NzQ0KCcweGEnKV0sZnVuY3Rpb24oXzB4MWViNzJkKXtyZXR1cm4gXzB4MWViNzJkW18weDU3NDQoJzB4OScpXShfMHgxMzgzMDYpO30pO319LF8weDVlMmVmNyxfMHg1ZTJlZjdbXzB4NTc0NCgnMHhiJyldLGUsXzB4MTZhMTk4LF8weDU4YmY2YSxfMHg0Nzc2NGYpO31lbHNle3ZhciBfMHg0OTU2MmQ9dGhpcztyZXR1cm4gXzB4NDk1NjJkW18weDU3NDQoJzB4YycpXVtfMHg1NzQ0KCcweGQnKV0oZSk7fX1yZXR1cm4gXzB4NThiZjZhW18weDFjZGI2MF1bXzB4NTc0NCgnMHhiJyldO312YXIgXzB4NTBjZThmPV8weDU3NDQoJzB4MScpPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZTttb2R1bGVbXzB4NTc0NCgnMHhiJyldPV8weDJhODQwMChfMHg0Nzc2NGZbMHgwXSk7fSh7MTpbZnVuY3Rpb24oXzB4MmYxZDU1LF8weDM3NDQyYSxfMHg1ZjI2ZWQpe3ZhciBfMHg0NjMxNWQ9XzB4MmYxZDU1KF8weDU3NDQoJzB4ZScpKSxfMHgyYzJkMTg9XzB4MmYxZDU1KF8weDU3NDQoJzB4ZicpKSxfMHg1ZTA5YTA9XzB4MmYxZDU1KF8weDU3NDQoJzB4MTAnKSksXzB4NThmMThlPV8weDJmMWQ1NShfMHg1NzQ0KCcweDExJykpO18weDM3NDQyYVtfMHjigIs1NzQ0KCcweGInKV09ZnVuY3Rpb24oXzB4MmYxZDU1LF8weDM3NDQyYSl7dHJ5e3ZhciBfMHg1ZjI2ZWQ9XzB4NDYzMTVkW18weDU3NDQoJzB4MTInKV0oXzB4MmYxZDU1KSxfMHgyYzlmYzc9XzB4NTc0NCgnMHgxMycpPT09XzB4NWYyNmVkfHwnLnRzeCc9PT1fMHg1ZjI2ZWQsXzB4NGRmYTVlPVtfMHg1NzQ0KCcweDE0JyksXzB4NTc0NCgnMHgxNScpLCdhc3luY0dlbmVyYXRvcnMnLF8weDU3NDQoJzB4MTYnKSxfMHg1NzQ0KCcweDE3JyksXzB4NTc0NCgnMHgxOCcpLF8weDU3NDQoJzB4MTknKSxfMHg1NzQ0KCcweDFhJyksJ2RvRXhwcmVzc2lvbnMnLF8weDU3NDQoJzB4MWInKSxfMHg1NzQ0KCcweDFjJyksXzB4NTc0NCgnMHgxZCcpLF8weDU3NDQoJzB4MWUnKSwnZnVuY3Rpb25TZW50JyxfMHg1NzQ0KCcweDFmJyksXzB4NTc0NCgnMHgyMCcpLF8weDU3NDQoJzB4MjEnKSxfMHg1NzQ0KCcweDIyJyksXzB4NTc0NCgnMHgyMycpLF8weDU3NDQoJzB4MjQnKSxfMHg1NzQ0KCcweDI1JyksJ3BhcnRpYWxBcHBsaWNhdGlvbicsW18weDU3NDQoJzB4MjYnKSx7J3Byb3Bvc2FsJzpfMHg1NzQ0KCcweDI3Jyl9XSxfMHg1NzQ0KCcweDI4JyldO18weDJjOWZjNz9fMHg0ZGZhNWVbXzB4NTc0NCgnMHgyOScpXShfMHg1NzQ0KCcweDJhJykpOihfMHg0ZGZhNWVbXzB4NTc0NCgnMHgyOScpXShfMHg1NzQ0KCcweDJiJykpLF8weDRkZmE1ZVtfMHg1NzQ0KCcweDI5JyldKF8weDU3NDQoJzB4MmMnKSkpO3ZhciBfMHhmYjA3Nzk9XzB4MmMyZDE4W18weDU3NDQoJzB4MmQnKV0oXzB4Mzc0NDJhLHsnc291cmNlVHlwZSc6XzB4NTc0NCgnMHgyZScpLCdwbHVnaW5zJzpfMHg0ZGZhNWV9KSxfMHgxM2IxMjM9W107cmV0dXJuIF8weDU4ZjE4ZShfMHhmYjA3NzksXzB4NWUwOWEwKGZ1bmN0aW9uKF8weDJmMWQ1NSl7cmV0dXJuIF8weDEzYjEyM1tfMHg1NzQ0KCcweDI5JyldKF8weDJmMWQ1NSk7fSkpLF8weDEzYjEyMzt9Y2F0Y2goXzB4MjI3MzQ1KXtjb25zb2xlW18weDU3NDQoJzB4MmYnKV0oXzB4NTc0NCgnMHgzMCcpK18weDJmMWQ1NSsnOlx4MjAnKyhfMHgyMjczNDUmJl8weDIyNzM0NVtfMHg1NzQ0KCcweDMxJyldKSk7fX07fSx7Jy4vYmFiZWxUcmF2ZXJzZSc6MHgyLCcuL2JhYmVsVmlzaXRvcic6MHgzLCdAYmFiZWwvcGFyc2VyJzp2b2lkIDB4MCwncGF0aCc6dm9pZCAweDB9XSwyOltmdW5jdGlvbihfMHg1MDI5MWIsXzB4NTIwODNjLF8weDIyNTAxNSl7dmFyIF8weDVjYjE0Mj1mdW5jdGlvbihfMHg1MDI5MWIsXzB4NTIwODNjKXt2YXIgXzB4MjI1MDE1PV8weDUwMjkxYltfMHg1NzQ0KCcweDQnKV07aWYoXzB4MjI1MDE1JiZfMHg1MDI5MWJbJ2xvYyddKXtpZihfMHg1NzQ0KCcweDMyJykhPT1fMHg1NzQ0KCcweDMzJykpe3ZhciBfMHhhNTFjZmU9XzB4NTIwODNjW19bJ2VuZHNXaXRoJ10oXzB4MjI1MDE1LF8weDU3NDQoJzB4MzQnKSl8fF8weDU3NDQoJzB4MzUnKT09PV8weDIyNTAxNT8nU3RhdGVtZW50JzpfMHgyMjUwMTVdO2lmKF8weGE1MWNmZSYmXzB4YTUxY2ZlKF8weDUwMjkxYiksXzB4NTc0NCgnMHgzNicpPT09XzB4MjI1MDE1fHxfMHg1NzQ0KCcweDM3Jyk9PT1fMHgyMjUwMTV8fCdUaGlzRXhwcmVzc2lvbic9PT1fMHgyMjUwMTV8fCdEZWJ1Z2dlclN0YXRlbWVudCc9PT1fMHgyMjUwMTV8fF8weDU3NDQoJzB4MzgnKT09PV8weDIyNTAxNXx8XzB4NTc0NCgnMHgzOScpPT09XzB4MjI1MDE1fHxfMHg1NzQ0KCcweDNhJyk9PT1fMHgyMjUwMTUpcmV0dXJuO31lbHNle2M9ITB4MCxjbGVhclRpbWVvdXQodSk7fX1mb3IodmFyIF8weDE0ZjQ2ZSBpbiBfMHg1MDI5MWIpaWYoXzB4NTAyOTFiW18weDU3NDQoJzB4M2InKV0oXzB4MTRmNDZlKSYmXzB4NTc0NCgnMHgzYycpIT09XzB4MTRmNDZlJiZfMHg1NzQ0KCcweDQnKSE9PV8weDE0ZjQ2ZSYmXzB4NTc0NCgnMHgzZCcpIT09XzB4MTRmNDZlJiZfMHg1NzQ0KCcweDNlJykhPT1fMHgxNGY0NmUmJiduYW1lJyE9PV8weDE0ZjQ2ZSl7dmFyIF8weDRkZWNiYT1fMHg1MDI5MWJbXzB4MTRmNDZlXTtfMHg0ZGVjYmEmJl9bXzB4NTc0NCgnMHgzZicpXShfMHg0ZGVjYmEpJiZfMHg1Y2IxNDIoXzB4NGRlY2JhLF8weDUyMDgzYyk7fX07XzB4NTIwODNjW18weDU3NDQoJzB4YicpXT1mdW5jdGlvbihfMHg1MDI5MWIsXzB4NTIwODNjKXtfMHg1Y2IxNDIoXzB4NTAyOTFiLF8weDUyMDgzYyk7fTt9LHt9XSwzOltmdW5jdGlvbihfMHgxOGZiYzMsXzB4Yzc1OTRjLF8weDMxOTZlNyl7XzB4Yzc1OTRjW18weDU3NDQoJzB4YicpXT1mdW5jdGlvbihfMHgxOGZiYzMpe2lmKF8weDU3NDQoJzB4NDAnKSE9PV8weDU3NDQoJzB4NDAnKSl7cmV0dXJuIV8weDE4ZmJjM1tfMHg1NzQ0KCcweDQxJyldKCk7fWVsc2V7cmV0dXJueydTdGF0ZW1lbnQnOmZ1bmN0aW9uKF8weGM3NTk0Yyl7c3dpdGNoKF8weGM3NTk0Y1sndHlwZSddKXtjYXNlIF8weDU3NDQoJzB4NDInKTpjYXNlIF8weDU3NDQoJzB4NDMnKTpjYXNlJ0lmU3RhdGVtZW50JzpjYXNlIF8weDU3NDQoJzB4NDQnKTpfMHhjNzU5NGNbJ3Rlc3QnXSYmXzB4MThmYmMzKF8weGM3NTk0Y1sndGVzdCddWydsb2MnXSk7YnJlYWs7Y2FzZSBfMHg1NzQ0KCcweDQ1Jyk6Y2FzZSBfMHg1NzQ0KCcweDQ2Jyk6XzB4Yzc1OTRjW18weDU3NDQoJzB4NDcnKV0mJl8weDE4ZmJjMyhfMHhjNzU5NGNbXzB4NTc0NCgnMHg0NycpXVtfMHg1NzQ0KCcweDNjJyldKTticmVhaztjYXNlIF8weDU3NDQoJzB4NDgnKTpfMHgxOGZiYzMoXzB4Yzc1OTRjWydkaXNjcmltaW5hbnQnXVsnbG9jJ10pO2JyZWFrO2Nhc2UgXzB4NTc0NCgnMHgzOScpOmNhc2UgXzB4NTc0NCgnMHgzYScpOmNhc2UnVGhyb3dTdGF0ZW1lbnQnOmNhc2UgXzB4NTc0NCgnMHgzNScpOmNhc2UgXzB4NTc0NCgnMHg0OScpOmNhc2UnUmV0dXJuU3RhdGVtZW50JzpfMHgxOGZiYzMoXzB4Yzc1OTRjW18weDU3NDQoJzB4M2MnKV0pO319LCdBcnJvd0Z1bmN0aW9uRXhwcmVzc2lvbic6ZnVuY3Rpb24oXzB4Yzc1OTRjKXtfMHhjNzU5NGNbJ2JvZHknXSYmXzB4NTc0NCgnMHg0YScpIT09XzB4Yzc1OTRjW18weDU3NDQoJzB4NGInKV1bXzB4NTc0NCgnMHg0JyldJiZfMHgxOGZiYzMoXzB4Yzc1OTRjW18weDU3NDQoJzB4NGInKV1bJ2xvYyddKTt9LCdMb2dpY2FsRXhwcmVzc2lvbic6ZnVuY3Rpb24oXzB4Yzc1OTRjKXtpZigndFhKSGInIT09XzB4NTc0NCgnMHg0YycpKXtyZXR1cm4gdGhpc1snX3Byb2plY3QnXSYmdGhpc1tfMHg1NzQ0KCcweDRkJyldWydfY2xlYW5TdGFjayddKF8weDE4ZmJjMyksXzB4MThmYmMzJiYoXzB4MThmYmMzW18weDU3NDQoJzB4NGUnKV18fF8weDE4ZmJjM1tfMHg1NzQ0KCcweDMxJyldKTt9ZWxzZXtfMHgxOGZiYzMoXzB4Yzc1OTRjW18weDU3NDQoJzB4NGYnKV1bXzB4NTc0NCgnMHgzYycpXSksXzB4MThmYmMzKF8weGM3NTk0Y1tfMHg1NzQ0KCcweDQ3JyldW18weDU3NDQoJzB4M2MnKV0pO319LCdDb25kaXRpb25hbEV4cHJlc3Npb24nOmZ1bmN0aW9uKF8weGM3NTk0Yyl7XzB4MThmYmMzKF8weGM3NTk0Y1snY29uc2VxdWVudCddWydsb2MnXSksXzB4MThmYmMzKF8weGM3NTk0Y1tfMHg1NzQ0KCcweDUwJyldW18weDU3NDQoJzB4M2MnKV0pO319O319O30se31dLDQ6W2Z1bmN0aW9uKF8weDI4OGQ1MCxfMHg0ZGRkZWQsXzB4MzJmNTkzKXt2YXIgXzB4NDZkMzdjPV8weDI4OGQ1MChfMHg1NzQ0KCcweGUnKSksXzB4MTMzYzFkPV8weDI4OGQ1MChfMHg1NzQ0KCcweDUxJykpLF8weDM2OTY4MT1fMHgyODhkNTAoJ2dyYWNlZnVsLWZzJyksXzB4MTNhNWRhPV8weDI4OGQ1MCgnZXhwcmVzcycpLF8weDQwYzUyNj1fMHgyODhkNTAoXzB4NTc0NCgnMHg1MicpKSxfMHgyYjVhZDQ9XzB4Mjg4ZDUwKCcuL3V0aWxzJyksXzB4OWNiNGVmPV8weDM2OTY4MVtfMHg1NzQ0KCcweDUzJyldKF8weDQ2ZDM3Y1tfMHg1NzQ0KCcweDU0JyldKF9fZGlybmFtZSxfMHg1NzQ0KCcweDU1JyksXzB4NTc0NCgnMHg1NicpLCdzYW5kYm94Lmh0bWwnKSlbXzB4NTc0NCgnMHg1NycpXSgpLF8weDQ4YTY3YT0nX193YWxsYWJ5X18nLF8weDNhYzJhYj1sb2dnZXJbXzB4NTc0NCgnMHg1OCcpXShfMHg1NzQ0KCcweDU5JykpW18weDU3NDQoJzB4NWEnKV0sXzB4NTY5YjVjPWZ1bmN0aW9uKF8weDI4OGQ1MCxfMHg0ZGRkZWQpe2lmKCdqWGFmaichPT1fMHg1NzQ0KCcweDViJykpe3ZhciBfMHgzMmY1OTM9dGhpcztfMHgzMmY1OTNbJ19wcm9qZWN0J109XzB4Mjg4ZDUwLF8weDMyZjU5M1tfMHg1NzQ0KCcweGMnKV09XzB4NGRkZGVkLF8weDMyZjU5M1snX2Jhc2VEaXInXT1fMHgzMmY1OTNbXzB4NTc0NCgnMHg0ZCcpXVtfMHg1NzQ0KCcweDVjJyldK18weDQ2ZDM3Y1tfMHg1NzQ0KCcweDVkJyldLF8weDMyZjU5M1tfMHg1NzQ0KCcweDVlJyldPV8weDI4OGQ1MFsnc2V0dGluZ3MnXSgpWydib290c3RyYXAnXSxfMHgzMmY1OTNbXzB4NTc0NCgnMHg1ZicpXT0hIV8weDI4OGQ1MFtfMHg1NzQ0KCcweDYwJyldKClbXzB4NTc0NCgnMHg2MScpXSxfMHgzMmY1OTNbXzB4NTc0NCgnMHg2MicpXT0hIV8weDI4OGQ1MFtfMHg1NzQ0KCcweDYwJyldKClbJ3Rocm93T25CZWZvcmVVbmxvYWQnXSxfMHgzMmY1OTNbXzB4NTc0NCgnMHg2MycpXT1fMHgyODhkNTBbXzB4NTc0NCgnMHg2MCcpXSgpW18weDU3NDQoJzB4NjQnKV0sXzB4MzJmNTkzW18weDU3NDQoJzB4NjUnKV09e30sXzB4MzJmNTkzW18weDU3NDQoJzB4NjYnKV09XzB4Mjg4ZDUwW18weDU3NDQoJzB4NjAnKV0oKVtfMHg1NzQ0KCcweDY3JyldW18weDU3NDQoJzB4NjgnKV0sXzB4MzJmNTkzWydfbHJ1Q2FjaGUnXT1fMHgzMmY1OTNbXzB4NTc0NCgnMHg0ZCcpXVtfMHg1NzQ0KCcweDY5JyldLF8weDMyZjU5M1tfMHg1NzQ0KCcweDZhJyldPV8weDMyZjU5M1tfMHg1NzQ0KCcweGMnKV1bXzB4NTc0NCgnMHg2YicpXSgpLF8weDMyZjU5M1tfMHg1NzQ0KCcweDZjJyldPV8weDEzYTVkYSgpLF8weDMyZjU5M1tfMOKAi3g1NzQ0KCcweDZjJyldW18weDU3NDQoJzB4NmQnKV0oXzB4MTMzYzFkKHsnZmlsdGVyJzpmdW5jdGlvbihfMHgyODhkNTApe2lmKF8weDU3NDQoJzB4NmUnKT09PV8weDU3NDQoJzB4NmUnKSl7cmV0dXJufl8weDI4OGQ1MFtfMHg1NzQ0KCcweDZmJyldW18weDU3NDQoJzB4NzAnKV0oXzB4NTc0NCgnMHg3MScpKTt9ZWxzZXt2YXIgXzB4MTE4ODljPXRoaXMsXzB4MzM2MjhlPV8weDI4OGQ1MFtfMHg1NzQ0KCcweDcyJyldLF8weDRkMThkZT10aGlzW18weDU3NDQoJzB4NjknKV1bJ2dldCddKF8weDI4OGQ1MFtfMHg1NzQ0KCcweGUnKV0pO3JldHVybihfW18weDU3NDQoJzB4NzMnKV0oXzB4NGQxOGRlKT90aGlzWydfZW5zdXJlUmVhZEZpbGVXaXRoQ29ycmVjdENvbnRlbnQnXShfMHgxM2E1ZGFbXzB4NTc0NCgnMHg1NCcpXShfMHgxMTg4OWNbJ19iYXNlRGlyJ10sXzB4Mjg4ZDUwW18weDU3NDQoJzB4ZScpXSkpOlFbXzB4NTc0NCgnMHg3NCcpXShfMHg0ZDE4ZGUpKVsndGhlbiddKGZ1bmN0aW9uKF8weDRkMThkZSl7cmV0dXJuIF8weDRkMThkZT1fMHg0ZDE4ZGU/XzB4Mjg4ZDUwW18weDU3NDQoJzB4NzUnKV0/XzB4NGQxOGRlW18weDU3NDQoJzB4NTcnKV0oXzB4NTc0NCgnMHg3NicpKTpfMHg0ZDE4ZGVbXzB4NTc0NCgnMHg1NycpXSgpOicnLF8weDExODg5Y1tfMHg1NzQ0KCcweDc3JyldfHxfMHgzMzYyOGUhPT1fMHgyODhkNTBbJ2NoYW5nZVRzJ118fF8weDExODg5Y1snX2xydUNhY2hlJ11bXzB4NTc0NCgnMHg3OCcpXShfMHgyODhkNTBbXzB4NTc0NCgnMHhlJyldLF8weDRkMThkZSksUVtfMHg1NzQ0KCcweDc0JyldKF9bXzB4NTc0NCgnMHg3OScpXSh7fSxfMHgyODhkNTAseydjb250ZW50JzpfMHg0ZDE4ZGV9KSk7fSlbXzB4NTc0NCgnMHg3YScpXShmdW5jdGlvbihfMHgyY2JkZGEpe3JldHVybiBfMHgxMTg4OWNbXzB4NTc0NCgnMHg3YicpXShfMHg1NzQ0KCcweDdjJyksXzB4MmNiZGRhKTt9KTt9fX0pKSxfMHgzMmY1OTNbJ19hcHAnXVtfMHg1NzQ0KCcweDZkJyldKF8weDU3NDQoJzB4N2QnKSxmdW5jdGlvbihfMHgyODhkNTAsXzB4NGRkZGVkKXtfMHg0ZGRkZWRbJ3NlbmQnXShfMHgzMmY1OTNbJ19zYW5kYm94SHRtbCddW18weDI4OGQ1MFtfMHg1NzQ0KCcweDdlJyldWydpZCddXSk7fSksXzB4Mjg4ZDUwW18weDU3NDQoJzB4NjAnKV0oKVtfMHg1NzQ0KCcweDdmJyldW18weDU3NDQoJzB4ZScpXSYmXzB4MzJmNTkzW18weDU3NDQoJzB4NmMnKV1bXzB4NTc0NCgnMHg2ZCcpXSgnLycrXzB4NDhhNjdhKycvJytfMHgyODhkNTBbXzB4NTc0NCgnMHg2MCcpXSgpW18weDU3NDQoJzB4N2YnKV1bXzB4NTc0NCgnMHg4MCcpXSsnL2ZyYW1ld29yay5qcycsXzB4NDBjNTI2W18weDU3NDQoJzB4NTgnKV0oeydtYWluJzp7J3Jvb3QnOl8weDQ2ZDM3Y1tfMHg1NzQ0KCcweDU0JyldKF8weDI4OGQ1MFtfMHg1NzQ0KCcweDgxJyldLF8weDI4OGQ1MFtfMHg1NzQ0KCcweDYwJyldKClbXzB4NTc0NCgnMHg3ZicpXVtfMHg1NzQ0KCcweGUnKV0pfX0pKSxfMHgzMmY1OTNbXzB4NTc0NCgnMHg2YycpXVtfMHg1NzQ0KCcweDZkJyldKCcvJytfMHg0OGE2N2ErJy90cmFjZXIuanMnLF8weDQwYzUyNlsnY3JlYXRlJ10oeydtYWluJzp7J3Jvb3QnOl8weDQ2ZDM3Y1tfMHg1NzQ0KCcweDU0JyldKF9fZGlybmFtZSxfMHg1NzQ0KCcweDgyJykpfX0pKSxfMHgzMmY1OTNbXzB4NTc0NCgnMHg2YycpXVtfMHg1NzQ0KCcweDZkJyldKCcvJytfMHg0OGE2N2EsXzB4NDBjNTI2W18weDU3NDQoJzB4NTgnKV0oeydtYWluJzp7J3Jvb3QnOl8weDQ2ZDM3Y1tfMHg1NzQ0KCcweDU0JyldKF9fZGlybmFtZSxfMHg1NzQ0KCcweDU1JyksXzB4NTc0NCgnMHg1NicpKX19KSksXzB4Mjg4ZDUwW18weDU3NDQoJzB4NjAnKV0oKVtfMHg1NzQ0KCcweDgzJyldKF8weDMyZjU5M1tfMHg1NzQ0KCcweDZjJyldLF8weDEzYTVkYSksXzB4MzJmNTkzW18weDU3NDQoJzB4NGQnKV1bXzB4NTc0NCgnMHg4NCcpXSgpP18weDMyZjU5M1tfMHg1NzQ0KCcweDZjJyldWyd1c2UnXShfMHg0MGM1MjZbXzB4NTc0NCgnMHg1OCcpXSh7J21haW4nOnsncm9vdCc6XzB4MzJmNTkzWydfYmFzZURpciddLCdjYWNoZSc6XzB4MzJmNTkzW18weDU3NDQoJzB4NjknKV19LCdhbHQnOnsncm9vdCc6XzB4MzJmNTkzW18weDU3NDQoJzB4NGQnKV1bXzB4NTc0NCgnMHg4NScpXSwncmVhZCc6ZnVuY3Rpb24oXzB4Mjg4ZDUwLF8weDRkZGRlZCl7aWYoXzB4NTc0NCgnMHg4NicpPT09XzB4NTc0NCgnMHg4NicpKXt2YXIgXzB4MTMzYzFkPV8weDJiNWFkNFsnbm9ybWFsaXplUGF0aCddKF8weDQ2ZDM3Y1sncmVsYXRpdmUnXShfMHgzMmY1OTNbXzB4NTc0NCgnMHg0ZCcpXVtfMHg1NzQ0KCcweDg1JyldLF8weDI4OGQ1MCkpO18weDMyZjU5M1tfMHg1NzQ0KCcweDRkJyldW18weDU3NDQoJzB4ODcnKV0oXzB4MTMzYzFkKT9fMHgzMmY1OTNbXzB4NTc0NCgnMHg0ZCcpXVtfMHg1NzQ0KCcweDg4JyldKF8weDEzM2MxZClbXzB4NTc0NCgnMHg4OScpXShmdW5jdGlvbihfMHgyODhkNTApe3JldHVybiBfMHg0ZGRkZWQobnVsbCxfMHgyODhkNTApO30pW18weDU3NDQoJzB4N2EnKV0oZnVuY3Rpb24oXzB4Mjg4ZDUwKXtyZXR1cm4gXzB4NGRkZGVkKF8weDI4OGQ1MCk7fSk6XzB4NGRkZGVkKG5ldyBFcnJvcihfMHg1NzQ0KCcweDhhJykrXzB4MTMzYzFkK18weDU3NDQoJzB4OGInKSkpO31lbHNle3JldHVybiBfMHgyODhkNTA7fX19fSxfMHgzMmY1OTNbXzB4NTc0NCgnMHg2NicpXSkpOl8weDMyZjU5M1snX2FwcCddW18weDU3NDQoJzB4NmQnKV0oXzB4NDBjNTI2WydjcmVhdGUnXSh7J21haW4nOnsncm9vdCc6XzB4MzJmNTkzW18weDU3NDQoJzB4OGMnKV0sJ2NhY2hlJzpfMHgzMmY1OTNbXzB4NTc0NCgnMHg2OScpXX19LF8weDMyZjU5M1tfMHg1NzQ0KCcweDY2JyldKSk7fWVsc2V7XzB4Mjg4ZDUwW18weDU3NDQoJzB4OGQnKV0oXzB4NDZkMzdjKTt2YXIgXzB4MTFiZTQ4PV8weDQ2ZDM3Y1tfMHg1NzQ0KCcweDhlJyldKF8weDI4OGQ1MFtfMHg1NzQ0KCcweDhmJyldKCkpO251bGwhPV8weDExYmU0OCYmKF8weDI4OGQ1MFtfMHg1NzQ0KCcweDkwJyldKF8weDExYmU0OCksXzB4MTFiZTQ4WydmYWlscyddKF8weDRkZGRlZCkpO319O18weDU2OWI1Y1sncHJvdG90eXBlJ109eydwcmVwYXJlU2FuZGJveCc6ZnVuY3Rpb24oXzB4Mjg4ZDUwLF8weDRkZGRlZCxfMHgzMmY1OTMpe3ZhciBfMHg0NmQzN2M9dGhpcztfMHgyODhkNTBbXzB4NTc0NCgnMHg5MScpXT1fW18weDU3NDQoJzB4OTInKV0oXzB4Mjg4ZDUwWydhbGxGaWxlcyddW18weDU3NDQoJzB4OTMnKV0oXzB4Mjg4ZDUwW18weDU3NDQoJzB4OTQnKV0pLGZ1bmN0aW9uKF8weDI4OGQ1MCxfMHg0ZGRkZWQpe3JldHVybiBfMHgyODhkNTBbXzB4NGRkZGVkWydub3JtYWxpemVkUmVsYXRpdmVQYXRoJ11dPXsndHMnOl8weDRkZGRlZFsndHMnXSwnaWQnOl8weDRkZGRlZFtfMHg1NzQ0KCcweDk1JyldJiZfMHg0ZGRkZWRbXzB4NTc0NCgnMHg5NicpXT9fMHg0ZGRkZWRbJ29yaWdpbmFsSWQnXTpfMHg0ZGRkZWRbJ2lkJ119LF8weDI4OGQ1MDt9LHt9KTt2YXIgXzB4MTMzYzFkPV8weDI4OGQ1MFtfMHg1NzQ0KCcweDk3JyldW18weDU3NDQoJzB4OTMnKV0oXzB4Mjg4ZDUwW18weDU3NDQoJzB4OTQnKV0pLF8weDM2OTY4MT1fMHgyODhkNTBbXzB4NTc0NCgnMHg5OCcpXVtfMHg1NzQ0KCcweDkzJyldKF8weDI4OGQ1MFtfMHg1NzQ0KCcweDk5JyldKSxfMHgxM2E1ZGE9X1sncmVkdWNlJ10oXzB4Mjg4ZDUwW18weDU3NDQoJzB4OTknKV0sZnVuY3Rpb24oXzB4Mjg4ZDUwLF8weDRkZGRlZCl7cmV0dXJuIF8weDI4OGQ1MFtfMHg0ZGRkZWRbJ2lkJ11dPV8weDRkZGRlZCxfMHgyODhkNTA7fSx7fSk7XzB4M2FjMmFiKCdUb3RhbFx4MjBmaWxlc1x4MjB0b1x4MjBsb2FkXHgyMGluXHgyMHNhbmRib3g6XHgyMCcrXzB4MzY5NjgxW18weDU3NDQoJzB4OWEnKV0pO3ZhciBfMHg0MGM1MjY9XzB4NDZkMzdjW18weDU3NDQoJzB4YycpXVtfMHg1NzQ0KCcweDliJyldKCk7XzB4NDZkMzdjW18weDU3NDQoJzB4OWMnKV09ITB4MTt2YXIgXzB4MmI1YWQ0PV8weDQ2ZDM3Y1tfMHg1NzQ0KCcweDRkJyldWydpc05hdGl2ZUJ1bmRsZXInXSgpO18weDQ2ZDM3Y1tfMHg1NzQ0KCcweDY1JyldW18weDMyZjU5M109XzB4OWNiNGVmW18weDU3NDQoJzB4OWQnKV0oJzxpbmplY3QvPicsZnVuY3Rpb24oKXtyZXR1cm4gX1sncmVkdWNlJ10oXzB4MTMzYzFkLGZ1bmN0aW9uKF8weDI4OGQ1MCxfMHg0ZGRkZWQpe3JldHVybiBfMHgyODhkNTArKF9bXzB4NTc0NCgnMHg5ZScpXShfMHg0ZGRkZWRbJ2lkJ10pP18weDU3NDQoJzB4OWYnKStfMHg0ZGRkZWRbJ2lkJ10rXzB4NTc0NCgnMHhhMCcpK18weDRkZGRlZFtfMHg1NzQ0KCcweGExJyldK18weDU3NDQoJzB4YTInKTonJyk7fSxfMHg1NzQ0KCcweGEzJykrXzB4NDBjNTI2K18weDU3NDQoJzB4YTQnKStfMHg0ZGRkZWQrXzB4NTc0NCgnMHhhNScpK0pTT05bXzB4NTc0NCgnMHg4JyldKF8weDJiNWFkND9fMHg0NmQzN2NbXzB4NTc0NCgnMHg0ZCcpXVtfMHg1NzQ0KCcweDg1JyldOl8weDQ2ZDM3Y1tfMHg1NzQ0KCcweDhjJyldKSsnO3dpbmRvdy4kXyRpbml0aWFsU3BlY0lkPScrMHgxODZhMCooXzB4MzJmNTkzKzB4MSkrXzB4NTc0NCgnMHhhNicpK18weDQ2ZDM3Y1tfMHg1NzQ0KCcweDVmJyldK18weDU3NDQoJzB4YTcnKStfMHg0NmQzN2NbXzB4NTc0NCgnMHg2MicpXStfMHg1NzQ0KCcweGE4JykrXzB4NDZkMzdjW18weDU3NDQoJzB4NjMnKV0rXzB4NTc0NCgnMHhhOScpKStfMHg1NzQ0KCcweGFhJykrXzB4NDZkMzdjW18weDU3NDQoJzB4NGQnKV1bXzB4NTc0NCgnMHg2MCcpXSgpWydzbG93VGVzdFRocmVzaG9sZCddKyc7d2luZG93LiRfJGV4cHJlc3Npb25zVG9FdmFsdWF0ZT0nK0pTT05bXzB4NTc0NCgnMHg4JyldKF8weDI4OGQ1MFtfMHg1NzQ0KCcweGFiJyldKStfMHg1NzQ0KCcweGFjJykrSlNPTlsnc3RyaW5naWZ5J10oXzB4Mjg4ZDUwW18weDU3NDQoJzB4OTEnKV0pK18weDU3NDQoJzB4YWQnKSsoXzB4Mjg4ZDUwW18weDU3NDQoJzB4YWUnKV0/SlNPTlsnc3RyaW5naWZ5J10oXzB4Mjg4ZDUwW18weDU3NDQoJzB4YWUnKV0pOl8weDU3NDQoJzB4YWYnKSkrXzB4NTc0NCgnMHhiMCcpK0pTT05bXzB4NTc0NCgnMHg4JyldKF9bXzB4NTc0NCgnMHhiMScpXShfMHgyODhkNTBbXzB4NTc0NCgnMHg5NCcpXSlbJ2ZpbHRlciddKGZ1bmN0aW9uKF8weDI4OGQ1MCl7cmV0dXJuIV8weDI4OGQ1MFsnc2hhZG93ZWQnXTt9KVsnbWFwJ10oZnVuY3Rpb24oXzB4NGRkZGVkKXtyZXR1cm57J3BhdGgnOl8weDJiNWFkND9fMHg0ZGRkZWRbXzB4NTc0NCgnMHhiMicpXTpfMHg0ZGRkZWRbXzB4NTc0NCgnMHhiMycpXSwnbG9hZGVkJzpfMHg0ZGRkZWRbJ2luY2x1ZGUnXSYmISFfMHgxM2E1ZGFbXzB4NGRkZGVkWydpZCddXSwnaWQnOihfMHgyODhkNTBbXzB4NTc0NCgnMHg5MScpXVtfMHg0ZGRkZWRbXzB4NTc0NCgnMHhiMicpXV18fHt9KVsnaWQnXX07fSlbJ3ZhbHVlJ10oKSkrXzB4NTc0NCgnMHhiNCcpK18weDQ4YTY3YStfMHg1NzQ0KCcweGI1JykrXzB4NDhhNjdhKycvJytfMHgyODhkNTBbJ2ZyYW1ld29yayddW18weDU3NDQoJzB4ODAnKV0rJy9mcmFtZXdvcmsuanNceDIyPjwvc2NyaXB0PjxzY3JpcHRceDIwc3JjPVx4MjInK18weDQ4YTY3YSsnLycrXzB4Mjg4ZDUwWydmcmFtZXdvcmsnXVsnY29uZmlndXJhdG9yJ10rXzB4NTc0NCgnMHhiNicpK18weDQ4YTY3YSsnLycrXzB4Mjg4ZDUwW18weDU3NDQoJzB4YjcnKV1bXzB4NTc0NCgnMHhiOCcpXStfMHg1NzQ0KCcweGI5JykrX1sncmVkdWNlJ10oXzB4MzY5NjgxLGZ1bmN0aW9uKF8weDI4OGQ1MCxfMHg0ZGRkZWQpe2lmKCdlWk9LSichPT1fMHg1NzQ0KCcweGJhJykpe3RoaXNbXzB4NTc0NCgnMHhiYicpXShfMHgyODhkNTBbXzB4NTc0NCgnMHhiYycpXSk7fWVsc2V7XzB4NDZkMzdjW18weDU3NDQoJzB4OWMnKV09XzB4NDZkMzdjWydfYW55SW5jbHVkZWRFc20nXXx8XzB4NGRkZGVkWydlc20nXTt2YXIgXzB4MzJmNTkzPV8weDRkZGRlZFtfMHg1NzQ0KCcweDk1JyldLF8weDEzM2MxZD1fMHg0ZGRkZWRbJ3RzJ10rKF8weDMyZjU5Mz9fMHg0ZGRkZWRbXzB4NTc0NCgnMHg5NicpXT9fMHg0NmQzN2NbXzB4NTc0NCgnMHg2YScpXStfMHg0ZGRkZWRbXzB4NTc0NCgnMHg5NicpXTonJzpfMHg0NmQzN2NbJ193YWxsYWJ5RmlsZUlkUHJlZml4J10rXzB4NGRkZGVkWydpZCddKTtzd2l0Y2goXzB4NGRkZGVkW18weDU3NDQoJzB4NCcpXSl7Y2FzZSdqcyc6Y2FzZSdtanMnOmNhc2UgXzB4NTc0NCgnMHgxNScpOmNhc2UgXzB4NTc0NCgnMHhiZCcpOmNhc2UgXzB4NTc0NCgnMHhiZScpOnJldHVybiBfMHgyODhkNTArXzB4NTc0NCgnMHhiZicpKyhfMHg0ZGRkZWRbXzB4NTc0NCgnMHhjMCcpXT8ndHlwZT1ceDIybW9kdWxlXHgyMic6JycpK18weDU3NDQoJzB4YzEnKStfMHg0ZGRkZWRbXzB4NTc0NCgnMHhiMicpXSsnPycrXzB4MTMzYzFkK18weDU3NDQoJzB4YzInKTtjYXNlJ2h0bWwnOmNhc2UnaHRtJzpyZXR1cm4gXzB4Mjg4ZDUwK18weDU3NDQoJzB4YzMnKStfMHg0ZGRkZWRbJ25vcm1hbGl6ZWRSZWxhdGl2ZeKAi1BhdGgnXSsnPycrXzB4NGRkZGVkWyd0cyddKydceDIyXHgyMHJlbD1ceDIyaW1wb3J0XHgyMj4nO2Nhc2UgXzB4NTc0NCgnMHhjNCcpOnJldHVybiBfMHgyODhkNTArXzB4NTc0NCgnMHhjNScpK18weDRkZGRlZFtfMHg1NzQ0KCcweGIyJyldKyc/JytfMHgxMzNjMWQrJ1x4MjI+PC9saW5rPic7ZGVmYXVsdDpyZXR1cm4gXzB4Mjg4ZDUwO319fSwnJykrKF8weDQ2ZDM3Y1snX2luaXRpYWxpemVyJ10/XzB4NTc0NCgnMHhjNicpK18weDQ2ZDM3Y1tfMHg1NzQ0KCcweDVlJyldK18weDU3NDQoJzB4YzcnKTonJykrXzB4NTc0NCgnMHhiZicpKyhfMHg0NmQzN2NbXzB4NTc0NCgnMHg5YycpXT9fMHg1NzQ0KCcweGM4Jyk6JycpK18weDU3NDQoJzB4YzEnKStfMHg0OGE2N2ErJy8nK18weDI4OGQ1MFtfMHg1NzQ0KCcweGI3JyldW18weDU3NDQoJzB4YzknKV0rXzB4NTc0NCgnMHhjYScpO30pO3ZhciBfMHg1NjliNWM9XzB4NDZkMzdjW18weDU3NDQoJzB4Y2InKV0oKStfMHg1NzQ0KCcweGNjJykrXzB4MzJmNTkzK18weDU3NDQoJzB4Y2QnKTtyZXR1cm4gXzB4M2FjMmFiKF8weDU3NDQoJzB4Y2UnKSxfMHg0NmQzN2NbXzB4NTc0NCgnMHhjZicpXShfMHgzMmY1OTMsXzB4NGRkZGVkKSxfMHg1NjliNWMpLFFbJ3doZW4nXShfMHg1NjliNWMpO30sJ2RvZXNTYW5kYm94Q29udGFpbkVTTW9kdWxlcyc6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc1tfMHg1NzQ0KCcweDljJyldO30sJ3NhbmRib3hSb290VXJsJzpmdW5jdGlvbigpe2lmKF8weDU3NDQoJzB4ZDAnKT09PV8weDU3NDQoJzB4ZDAnKSl7cmV0dXJuIHRoaXNbXzB4NTc0NCgnMHhkMScpXT90aGlzWydfc2FuZGJveFJvb3RVcmwnXToodGhpc1tfMHg1NzQ0KCcweGQxJyldPV8weDU3NDQoJzB4ZDInKSt0aGlzWydfd29ya2VyUG9vbCddW18weDU3NDQoJzB4OWInKV0oKSsnLycsdGhpc1tfMHg1NzQ0KCcweGQxJyldKTt9ZWxzZXt2YXIgXzB4MTE0NzI1PV8weDI4OGQ1MFtfMHg1NzQ0KCcweGQzJyldKCdceDBhJyksXzB4NGQxMjBlPVtdO19bXzB4NTc0NCgnMHhkNCcpXShfMHgxMTQ3MjUsZnVuY3Rpb24oXzB4ZDQzMTdiKXtyZXR1cm4hX1snc3RhcnRzV2l0aCddKF9bJ3RyaW1MZWZ0J10oXzB4ZDQzMTdiKSwnYXQnKSYmdm9pZCBfMHg0ZDEyMGVbJ3B1c2gnXShfMHhkNDMxN2IpO30pLF8weDRkZGRlZD1fMHg0ZDEyMGVbXzB4NTc0NCgnMHg1NCcpXSgnXHgwYScpO319LCd3ZWJBcHAnOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbJ19hcHAnXTt9LCdzYW5kYm94TmFtZSc6ZnVuY3Rpb24oXzB4Mjg4ZDUwLF8weDRkZGRlZCl7cmV0dXJuIF8weDU3NDQoJzB4ZDUnKStfMHgyODhkNTArXzB4NTc0NCgnMHhkNicpK18weDRkZGRlZDt9fSxfMHg0ZGRkZWRbXzB4NTc0NCgnMHhiJyldPV8weDU2OWI1Yzt9LHsnLi9maWxlQ2FjaGVNaWRkbGV3YXJlJzoweDE5LCcuL3V0aWxzJzoweDFlLCdjb21wcmVzc2lvbic6dm9pZCAweDAsJ2V4cHJlc3MnOnZvaWQgMHgwLCdncmFjZWZ1bC1mcyc6dm9pZCAweDAsJ3BhdGgnOnZvaWQgMHgwfV0sNTpbZnVuY3Rpb24oXzB4M2E4NGQzLF8weDFlNjZmYSxfMHg1ZjA5NDcpe3ZhciBfMHg1OTg4OTY9dGhpcyYmdGhpc1tfMHg1NzQ0KCcweGQ3JyldfHxmdW5jdGlvbihfMHgzYTg0ZDMsXzB4MWU2NmZhLF8weDVmMDk0NyxfMHg1OTg4OTYpe3JldHVybiBuZXcoXzB4NWYwOTQ3fHwoXzB4NWYwOTQ3PVByb21pc2UpKShmdW5jdGlvbihfMHg1MTE3MGQsXzB4MTNlNjBlKXtmdW5jdGlvbiBfMHgxOTU2ZDUoXzB4M2E4NGQzKXtpZignZWJCY1gnIT09XzB4NTc0NCgnMHhkOCcpKXtmb3IodmFyIF8weDIyZDg3ZiBpbiBfMHgxZTY2ZmEpXzB4MWU2NmZhW18weDU3NDQoJzB4M2InKV0oXzB4MjJkODdmKSYmKF8weDNhODRkM1tfMHgyMmQ4N2ZdPV8weDFlNjZmYVtfMHgyMmQ4N2ZdKTt9ZWxzZXt0cnl7XzB4MTk2NTg3KF8weDU5ODg5NltfMHg1NzQ0KCcweGQ5JyldKF8weDNhODRkMykpO31jYXRjaChfMHg1OWExODEpe2lmKCdxdnZ1bichPT1fMHg1NzQ0KCcweGRhJykpe18weDEzZTYwZShfMHg1OWExODEpO31lbHNle3JldHVybiBfMHg1NzQ0KCcweGQ1JykrXzB4M2E4NGQzK18weDU3NDQoJzB4ZDYnKStfMHg1OWExODE7fX19fWZ1bmN0aW9uIF8weDIyODZkZChfMHgzYTg0ZDMpe3RyeXtpZihfMHg1NzQ0KCcweGRiJyk9PT1fMHg1NzQ0KCcweGRiJykpe18weDE5NjU4NyhfMHg1OTg4OTZbJ3Rocm93J10oXzB4M2E4NGQzKSk7fWVsc2V7dmFyIF8weDRiMDg2NT1fMHgzYTg0ZDNbJ2ludGVyY2VwdGlvbklkJ10sXzB4NDZlNjM3PV8weDNhODRkM1sncmVxdWVzdCddO3JldHVybiBfMHgxOTY1ODdbXzB4NTc0NCgnMHhkYycpXSh7J2ludGVyY2VwdGlvbklkJzpfMHg0YjA4NjUsJ3VybCc6Z1tfMHg1NzQ0KCcweGRkJyldKF8weDQ2ZTYzN1tfMHg1NzQ0KCcweDZmJyldKX0pW18weDU3NDQoJzB4N2EnKV0oZnVuY3Rpb24oXzB4NzdiYWYpe30pO319Y2F0Y2goXzB4MjQxOTI4KXtpZignSE1Wa1UnIT09J0hNVmtVJyl7XzB4M2E4NGQzPV8weDNhODRkM3x8e30sdGhpc1tfMHg1NzQ0KCcweDRkJyldW18weDU3NDQoJzB4ZGUnKV0oXzB4M2E4NGQzKTt2YXIgXzB4YzE1MjJiPV8weDU3NDQoJzB4ZGYnKSsoXzB4M2E4NGQzW18weDU3NDQoJzB4MzEnKV18fF8weDU3NDQoJzB4ZTAnKSksXzB4MzEzMzk1PV8weDNhODRkM1snc3RhY2snXXx8XzB4YzE1MjJiO2NvbnNvbGVbXzB4NTc0NCgnMHg3YycpXShfMHgzMTMzOTUpLHRoaXNbXzB4NTc0NCgnMHg0ZCcpXVtfMHg1NzQ0KCcweGUxJyldKF8weGMxNTIyYik7fWVsc2V7XzB4MTNlNjBlKF8weDI0MTkyOCk7fX19ZnVuY3Rpb24gXzB4MTk2NTg3KF8weDNhODRkMyl7XzB4M2E4NGQzW18weDU3NDQoJzB4ZTInKV0/XzB4NTExNzBkKF8weDNhODRkM1tfMHg1NzQ0KCcweGUzJyldKTpuZXcgXzB4NWYwOTQ3KGZ1bmN0aW9uKF8weDFlNjZmYSl7XzB4MWU2NmZhKF8weDNhODRkM1sndmFsdWUnXSk7fSlbXzB4NTc0NCgnMHg4OScpXShfMHgxOTU2ZDUsXzB4MjI4NmRkKTt9XzB4MTk2NTg3KChfMHg1OTg4OTY9XzB4NTk4ODk2W18weDU3NDQoJzB4ZTQnKV0oXzB4M2E4NGQzLF8weDFlNjZmYXx8W10pKVsnbmV4dCddKCkpO30pO30sXzB4NTExNzBkPXRoaXMmJnRoaXNbXzB4NTc0NCgnMHhlNScpXXx8ZnVuY3Rpb24oXzB4M2E4NGQzLF8weDFlNjZmYSl7ZnVuY3Rpb24gXzB4NWYwOTQ3KF8weDNhODRkMyl7cmV0dXJuIGZ1bmN0aW9uKF8weDFlNjZmYSl7cmV0dXJuIF8weDU5ODg5NihbXzB4M2E4NGQz4oCLLF8weDFlNjZmYV0pO307fWZ1bmN0aW9uIF8weDU5ODg5NihfMHg1ZjA5NDcpe2lmKF8weDU3NDQoJzB4ZTYnKT09PV8weDU3NDQoJzB4ZTcnKSl7dmFyIF8weDFjNDQ5OT1fMHgxM2U2MGVbXzB4MjI4NmRkXT1fMHgxM2U2MGVbXzB4MjI4NmRkXXx8eydmaWxlJzpfMHgxOTY1ODdbXzB4NTc0NCgnMHhlJyldKCksJ21lc3NhZ2VzJzpbXX07XzB4MWM0NDk5W18weDU3NDQoJzB4ZTgnKV1bJ3B1c2gnXShfMHgxZTY2ZmEpO31lbHNle2lmKF8weDUxMTcwZCl0aHJvdyBuZXcgVHlwZUVycm9yKCdHZW5lcmF0b3JceDIwaXNceDIwYWxyZWFkeVx4MjBleGVjdXRpbmcuJyk7Zm9yKDtfMHgxOTY1ODc7KXRyeXtpZihfMHg1NzQ0KCcweGU5JykhPT1fMHg1NzQ0KCcweGVhJykpe2lmKF8weDUxMTcwZD0weDEsXzB4MTNlNjBlJiYoXzB4MTk1NmQ1PTB4MiZfMHg1ZjA5NDdbMHgwXT9fMHgxM2U2MGVbXzB4NTc0NCgnMHhlYicpXTpfMHg1ZjA5NDdbMHgwXT9fMHgxM2U2MGVbJ3Rocm93J118fCgoXzB4MTk1NmQ1PV8weDEzZTYwZVsncmV0dXJuJ10pJiZfMHgxOTU2ZDVbJ2NhbGwnXShfMHgxM2U2MGUpLDB4MCk6XzB4MTNlNjBlW18weDU3NDQoJzB4ZDknKV0pJiYhKF8weDE5NTZkNT1fMHgxOTU2ZDVbXzB4NTc0NCgnMHhlYycpXShfMHgxM2U2MGUsXzB4NWYwOTQ3WzB4MV0pKVtfMHg1NzQ0KCcweGUyJyldKXJldHVybiBfMHgxOTU2ZDU7c3dpdGNoKF8weDEzZTYwZT0weDAsXzB4MTk1NmQ1JiYoXzB4NWYwOTQ3PVsweDImXzB4NWYwOTQ3WzB4MF0sXzB4MTk1NmQ1Wyd2YWx1ZSddXSksXzB4NWYwOTQ3WzB4MF0pe2Nhc2UgMHgwOmNhc2UgMHgxOl8weDE5NTZkNT1fMHg1ZjA5NDc7YnJlYWs7Y2FzZSAweDQ6cmV0dXJuIF8weDE5NjU4N1tfMHg1NzQ0KCcweGVkJyldKysseyd2YWx1ZSc6XzB4NWYwOTQ3WzB4MV0sJ2RvbmUnOiEweDF9O2Nhc2UgMHg1Ol8weDE5NjU4N1tfMHg1NzQ0KCcweGVkJyldKyssXzB4MTNlNjBlPV8weDVmMDk0N1sweDFdLF8weDVmMDk0Nz1bMHgwXTtjb250aW51ZTtjYXNlIDB4NzpfMHg1ZjA5NDc9XzB4MTk2NTg3W18weDU3NDQoJzB4ZWUnKV1bXzB4NTc0NCgnMHhlZicpXSgpLF8weDE5NjU4N1tfMHg1NzQ0KCcweGYwJyldWydwb3AnXSgpO2NvbnRpbnVlO2RlZmF1bHQ6aWYoXzB4MTk1NmQ1PV8weDE5NjU4N1tfMHg1NzQ0KCcweGYwJyldLCEoXzB4MTk1NmQ1PV8weDE5NTZkNVtfMHg1NzQ0KCcweDlhJyldPjB4MCYmXzB4MTk1NmQ1W18weDE5NTZkNVsnbGVuZ3RoJ10tMHgxXSkmJigweDY9PT1fMHg1ZjA5NDdbMHgwXXx8MHgyPT09XzB4NWYwOTQ3WzB4MF0pKXtpZihfMHg1NzQ0KCcweGYxJyk9PT0naUl0bkcnKXtyZXR1cm4gXzB4M2E4NGQzO31lbHNle18weDE5NjU4Nz0weDA7Y29udGludWU7fX1pZigweDM9PT1fMHg1ZjA5NDdbMHgwXSYmKCFfMHgxOTU2ZDV8fF8weDVmMDk0N1sweDFdPl8weDE5NTZkNVsweDBdJiZfMHg1ZjA5NDdbMHgxXTxfMHgxOTU2ZDVbMHgzXSkpe18weDE5NjU4N1snbGFiZWwnXT1fMHg1ZjA5NDdbMHgxXTticmVhazt9aWYoMHg2PT09XzB4NWYwOTQ3WzB4MF0mJl8weDE5NjU4N1snbGFiZWwnXTxfMHgxOTU2ZDVbMHgxXSl7XzB4MTk2NTg3W18weDU3NDQoJzB4ZWQnKV09XzB4MTk1NmQ1WzB4MV0sXzB4MTk1NmQ1PV8weDVmMDk0NzticmVhazt9aWYoXzB4MTk1NmQ1JiZfMHgxOTY1ODdbXzB4NTc0NCgnMHhlZCcpXTxfMHgxOTU2ZDVbMHgyXSl7XzB4MTk2NTg3WydsYWJlbCddPV8weDE5NTZkNVsweDJdLF8weDE5NjU4N1tfMHg1NzQ0KCcweGVlJyldWydwdXNoJ10oXzB4NWYwOTQ3KTticmVhazt9XzB4MTk1NmQ1WzB4Ml0mJl8weDE5NjU4N1tfMHg1NzQ0KCcweGVlJyldW18weDU3NDQoJzB4ZWYnKV0oKSxfMHgxOTY1ODdbXzB4NTc0NCgnMHhmMCcpXVtfMHg1NzQ0KCcweGVmJyldKCk7Y29udGludWU7fV8weDVmMDk0Nz1fMHgxZTY2ZmFbXzB4NTc0NCgnMHhlYycpXShfMHgzYTg0ZDMsXzB4MTk2NTg3KTt9ZWxzZXtyZXR1cm4oXzB4M2E4NGQzPU9iamVjdFtfMHg1NzQ0KCcweGYyJyldfHx7J19fcHJvdG9fXyc6W119aW5zdGFuY2VvZiBBcnJheSYmZnVuY3Rpb24oXzB4NGE3OTFiLF8weGQ4MTE0OCl7XzB4NGE3OTFiW18weDU3NDQoJzB4ZjMnKV09XzB4ZDjigIsxMTQ4O318fGZ1bmN0aW9uKF8weDNiMTZlNyxfMHgxZjU4MjIpe2Zvcih2YXIgXzB4M2JmNDZhIGluIF8weDFmNTgyMilfMHgxZjU4MjJbXzB4NTc0NCgnMHgzYicpXShfMHgzYmY0NmEpJiYoXzB4M2IxNmU3W18weDNiZjQ2YV09XzB4MWY1ODIyW18weDNiZjQ2YV0pO30pKF8weDFlNjZmYSxfMHg1ZjA5NDcpO319Y2F0Y2goXzB4MmNlMjYyKXtfMHg1ZjA5NDc9WzB4NixfMHgyY2UyNjJdLF8weDEzZTYwZT0weDA7fWZpbmFsbHl7aWYoXzB4NTc0NCgnMHhmNCcpPT09XzB4NTc0NCgnMHhmNCcpKXtfMHg1MTE3MGQ9XzB4MTk1NmQ1PTB4MDt9ZWxzZXt2YXIgXzB4Mjc5ZWE5PV8weDEzZTYwZVtfMHg1NzQ0KCcweGY1JyldWydtYXhDb25zb2xlTWVzc2FnZXNQZXJUZXN0J10sXzB4NTQzODZiPXRoaXNbXzB4NTc0NCgnMHhmNicpXVtfMHgzYTg0ZDNbXzB4NTc0NCgnMHhmNycpXV09KHRoaXNbXzB4NTc0NCgnMHhmNicpXVtfMHgzYTg0ZDNbXzB4NTc0NCgnMHhmNycpXV18fDB4MCkrMHgxO18weDU0Mzg2Yj09PV8weDI3OWVhOSsweDE/Y29uc29sZVtfMHg1NzQ0KCcweDJmJyldKF8weDU3NDQoJzB4ZjgnKStfMHgyNzllYTkrXzB4NTc0NCgnMHhmOScpKTpfMHg1NDM4NmI8PV8weDI3OWVhOSYmdGhpc1tfMHg1NzQ0KCcweGZhJyldW18weDU3NDQoJzB4MjknKV0oXzB4M2E4NGQzKSxfMHgxM2U2MGVbXzB4NTc0NCgnMHhmYicpXShfMHgzYTg0ZDMpO319aWYoMHg1Jl8weDVmMDk0N1sweDBdKXRocm93IF8weDVmMDk0N1sweDFdO3JldHVybnsndmFsdWUnOl8weDVmMDk0N1sweDBdP18weDVmMDk0N1sweDFdOnZvaWQgMHgwLCdkb25lJzohMHgwfTt9fXZhciBfMHg1MTE3MGQsXzB4MTNlNjBlLF8weDE5NTZkNSxfMHgyMjg2ZGQsXzB4MTk2NTg3PXsnbGFiZeKAi2wnOjB4MCwnc2VudCc6ZnVuY3Rpb24oKXtpZigweDEmXzB4MTk1NmQ1WzB4MF0pdGhyb3cgXzB4MTk1NmQ1WzB4MV07cmV0dXJuIF8weDE5NTZkNVsweDFdO30sJ3RyeXMnOltdLCdvcHMnOltdfTtyZXR1cm4gXzB4MjI4NmRkPXsnbmV4dCc6XzB4NWYwOTQ3KDB4MCksJ3Rocm93JzpfMHg1ZjA5NDcoMHgxKSwncmV0dXJuJzpfMHg1ZjA5NDcoMHgyKX0sXzB4NTc0NCgnMHgxJyk9PXR5cGVvZiBTeW1ib2wmJihfMHgyMjg2ZGRbU3ltYm9sW18weDU3NDQoJzB4ZmMnKV1dPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXM7fSksXzB4MjI4NmRkO30sXzB4MTNlNjBlPV8weDNhODRkMyhfMHg1NzQ0KCcweGZkJykpLF8weDE5NTZkNT1fMHgzYTg0ZDMoXzB4NTc0NCgnMHhmZScpKSxfMHgyMjg2ZGQ9XzB4M2E4NGQzKF8weDU3NDQoJzB4ZmYnKSksXzB4MTk2NTg3PV8weDNhODRkMygnLi9icm93c2VyRW52aXJvbm1lbnQnKSxfMHhkMzVkZTc9bG9nZ2VyW18weDU3NDQoJzB4NTgnKV0oJ2Nocm9tZVJ1bm5lcicpWydkZWJ1ZyddLF8weDQ3YmIwMD1mdW5jdGlvbigpe2Z1bmN0aW9uIF8weDFlNjZmYShfMHgzYTg0ZDMpe3RoaXNbXzB4NTc0NCgnMHgxMDAnKV09UHJvbWlzZVtfMHg1NzQ0KCcweDEwMScpXSgpLHRoaXNbXzB4NTc0NCgnMHg0ZCcpXT1fMHgzYTg0ZDM7dmFyIF8weDFlNjZmYT1fMHgzYTg0ZDNbXzB4NTc0NCgnMHg2MCcpXSgpWydlbnYnXTt0aGlzW18weDU3NDQoJzB4MTAyJyldPV8weDFlNjZmYVsncnVubmVyJ10sXzB4MWU2NmZhW18weDU3NDQoJzB4N2UnKV0mJl8weDFlNjZmYVsncGFyYW1zJ11bXzB4NTc0NCgnMHgxMDMnKV0mJih0aGlzW18weDU3NDQoJzB4MTA0JyldPV8weDFlNjZmYVtfMHg1NzQ0KCcweDdlJyldW18weDU3NDQoJzB4MTAzJyldW18weDU3NDQoJzB4ZDMnKV0oJ1x4MjAnKSksXzB4MWU2NmZhWydrZWVwVGFic09wZW5lZCddJiYodGhpc1tfMHg1NzQ0KCcweDEwNScpXT1fMHgxZTY2ZmFbJ2tlZXBUYWJzT3BlbmVkJ10pLHRoaXNbXzB4NTc0NCgnMHgxMDYnKV09dGhpc1snX2xhdW5jaENocm9tZUluc3RhbmNlJ10oKSx0aGlzWydfd29ya2VyUG9vbCddPW5ldyBfMHgyMjg2ZGQodGhpc1snX3Byb2plY3QnXSx7J2NyZWF0ZSc6X1tfMHg1NzQ0KCcweDEwNycpXSh0aGlzW18weDU3NDQoJzB4MTA4JyldLHRoaXMpLCdyZWN5Y2xlJzpfW18weDU3NDQoJzB4MTA3JyldKHRoaXNbXzB4NTc0NCgnMHgxMDknKV0sdGhpcyksJ2hlYWx0aHknOmZ1bmN0aW9uKCl7cmV0dXJuITB4MDt9LCdwcmVwYXJlJzpfW18weDU3NDQoJzB4MTA3JyldKHRoaXNbXzB4NTc0NCgnMHgxMGEnKV0sdGhpcyl9KSx0aGlzW18weDU3NDQoJzB4MTBiJyldPW5ldyBfMHgxOTY1ODcoXzB4M2E4NGQzLHRoaXNbXzB4NTc0NCgnMHhjJyldKTt9cmV0dXJuIF8weDFlNjZmYVsncHJvdG90eXBlJ11bXzB4NTc0NCgnMHgxMGMnKV09ZnVuY3Rpb24oXzB4M2E4NGQzKXtyZXR1cm4gdGhpc1tfMHg1NzQ0KCcweGMnKV1bXzB4NTc0NCgnMHgxMGMnKV0oXzB4M2E4NGQzKTt9LF8weDFlNjZmYVtfMHg1NzQ0KCcweDEwZCcpXVtfMHg1NzQ0KCcweGQnKV09ZnVuY3Rpb24oXzB4M2E4NGQzKXtyZXR1cm4gdGhpc1tfMHg1NzQ0KCcweGMnKV1bJ2NhbmNlbCddKF8weDNhODRkMyk7fSxfMHgxZTY2ZmFbXzB4NTc0NCgnMHgxMGQnKV1bXzB4NTc0NCgnMHgzZCcpXT1mdW5jdGlvbigpe3JldHVybiBfMHg1OTg4OTYodGhpcyx2b2lkIDB4MCx2b2lkIDB4MCxmdW5jdGlvbigpe3ZhciBfMHgzYTg0ZDM7cmV0dXJuIF8weDUxMTcwZCh0aGlzLGZ1bmN0aW9uKF8weDFlNjZmYSl7c3dpdGNoKF8weDFlNjZmYVtfMHg1NzQ0KCcweGVkJyldKXtjYXNlIDB4MDpyZXR1cm5bMHg0LHRoaXNbJ193b3JrZXJQb29sJ11bXzB4NTc0NCgnMHgzZCcpXSh0aGlzW18weDU3NDQoJzB4MTBiJyldWyd3ZWJBcHAnXSgpKV07Y2FzZSAweDE6cmV0dXJuIF8weDNhODRkMz1fMHgxZTY2ZmFbXzB4NTc0NCgnMHgxMGUnKV0oKSx0aGlzWydfd29ya2VyUG9vbCddW18weDU3NDQoJzB4MTBmJyldKHRoaXNbXzB4NTc0NCgnMHgxMGInKV1bXzB4NTc0NCgnMHhjYicpXSgpKSxbMHgyLF8weDNhODRkM107fX0pO30pO30sXzB4MWU2NmZhW18weDU3NDQoJzB4MTBkJyldWydzdG9wJ109ZnVuY3Rpb24oKXtpZih0aGlzW18weDU3NDQoJzB4YycpXVtfMHg1NzQ0KCcweDExMCcpXSgpLHRoaXNbXzB4NTc0NCgnMHgxMTEnKV0pdHJ5e2lmKF8weDU3NDQoJzB4MTEyJyk9PT1fMHg1NzQ0KCcweDExMycpKXt2YXIgXzB4MWQxNTk5PTB4MjAwMCxfMHg1Mjg4YjI9XzB4NTk4ODk2W18weDU3NDQoJzB4MTE0JyldKF8weDFlNjZmYSksXzB4MmFlNmU4PXRoaXNbXzB4NTc0NCgnMHgxMTUnKV1bXzB4NTI4OGIyXTtfMHgyYWU2ZTh8fChfMHgyYWU2ZTg9dGhpc1tfMHg1NzQ0KCcweDExNScpXVtfMHg1Mjg4YjJdPVtdKTt2YXIgXzB4MWEzNjZjPV8weDNhODRkM1tfMHg1NzQ0KCcweDlhJyldPl8weDFkMTU5OT9fMHg1NzQ0KCcweDExNicpOicnO18weDNhODRkMz1fMHgzYTg0ZDNbXzB4NTc0NCgnMHgxMTcnKV0oMHgwLF8weDFkMTU5OSksXzB4MmFlNmU4W18weDU3NDQoJzB4MjknKV0oXzB4M2E4NGQzK18weDFhMzY2Yyk7fWVsc2V7cHJvY2Vzc1tfMHg1NzQ0KCcweDExOCcpXSh0aGlzW18weDU3NDQoJzB4MTExJyldWydwaWQnXSk7fX1jYXRjaChfMHg1ZDMyOTIpe319LF8weDFlNjZmYVtfMHg1NzQ0KCcweDEwZCcpXVtfMHg1NzQ0KCcweDEwOCcpXT1mdW5jdGlvbihfMHgzYTg0ZDMsXzB4MWU2NmZhKXtyZXR1cm4gXzB4NTk4ODk2KHRoaXMsdm9pZCAweDAsdm9pZCAweDAsZnVuY3Rpb24oKXtyZXR1cm4gXzB4NTExNzBkKHRoaXMsZnVuY3Rpb24oXzB4NWYwOTQ3KXtzd2l0Y2goXzB4NWYwOTQ3W18weDU3NDQoJzB4ZWQnKV0pe2Nhc2UgMHgwOnJldHVyblsweDQsdGhpc1tfMHg1NzQ0KCcweDEwNicpXV07Y2FzZSAweDE6cmV0dXJuIF8weDVmMDk0N1tfMHg1NzQ0KCcweDEwZScpXSgpLF8weDFlNjZmYSh7J3dvcmtlcklkJzpfMHgzYTg0ZDN9KSxbMHgyXTt9fSk7fSk7fSxfMHgxZTY2ZmFbXzB4NTc0NCgnMHgxMGQnKV1bJ19yZWN5Y2xlJ109ZnVuY3Rpb24oXzB4M2E4NGQzKXt0aGlzWydfY2xvc2VUYWInXShfMHgzYTg0ZDMpO30sXzB4MWU2NmZhW18weDU3NDQoJzB4MTBkJyldWydfcHJlcGFyZVRhYiddPWZ1bmN0aW9uKF8weDNhODRkMyxfMHgxZTY2ZmEpe2lmKF8weDU3NDQoJzB4MTE5JykhPT1fMHg1NzQ0KCcweDExOScpKXt0aGlzW18weDU3NDQoJzB4MTFhJyldKF9bXzB4NTc0NCgnMHg3OScpXSh7J3R5cGUnOl8weDU3NDQoJzB4MTFiJyl9LHRoaXNbJ19tb2RlbCddW18weDU3NDQoJzB4MTFjJyldKCkpLF8weDFlNjZmYSk7dmFyIF8weDIwN2ZmNz10aGlzWydfbW9kZWwnXVtfMHg1NzQ0KCcweDk3JyldKCk7X1tfMHg1NzQ0KCcweDExZCcpXShfMHgyMDdmZjcpfHx0aGlzW18weDU3NDQoJzB4MTFlJyldKF8weDIwN2ZmNyxfMHgxZTY2ZmEpO31lbHNle3JldHVybiBfMHg1OTg4OTYodGhpcyx2b2lkIDB4MCx2b2lkIDB4MCxmdW5jdGlvbigpe3ZhciBfMHg1ZjA5NDcsXzB4NTk4ODk2LF8weDEzZTYwZSxfMHgxOTU2ZDUsXzB4MjI4NmRkO3JldHVybiBfMHg1MTE3MGQodGhpcyxmdW5jdGlvbihfMHg1MTE3MGQpe2lmKF8weDU3NDQoJzB4MTFmJykhPT1fMHg1NzQ0KCcweDExZicpKXtwKF8weDVmMDk0N1snX3N0b3BwZXJUaW1lb3V0J10pLF8weDVmMDk0N1tfMHg1NzQ0KCcweDEyMCcpXShfMHgzYTg0ZDMrMHgxKTt9ZWxzZXtzd2l0Y2goXzB4NTExNzBkW18weDU3NDQoJzB4ZWQnKV0pe2Nhc2UgMHgwOnJldHVybiBfMHg1ZjA5NDc9dGhpcyxfMHg1OTg4OTY9X1sncmFuZG9tSWQnXSgpLF8weDEzZTYwZT10aGlzW18weDU3NDQoJzB4MTBiJyldW18weDU3NDQoJzB4Y2YnKV0oXzB4MWU2NmZhLF8weDU5ODg5NiksXzB4ZDM1ZGU3KF8weDU3NDQoJzB4MTIxJyksXzB4MTNlNjBlKSxbMHg0LHRoaXNbXzB4NTc0NCgnMHhjJyldW18weDU3NDQoJzB4MTIyJyldKF8weDFlNjZmYSldO2Nhc2UgMHgxOnJldHVybiBfMHgxOTU2ZDU9XzB4NTExNzBkWydzZW50J10oKSx0aGlzW18weDU3NDQoJzB4MTIzJyldKCksXzB4ZDM1ZGU3KF8weDU3NDQoJzB4MTI0JyksXzB4MTNlNjBlKSxbMHg0LHRoaXNbJ19icm93c2VyRW52aXJvbm1lbnQnXVtfMHg1NzQ0KCcweDEyNScpXShfMHgzYTg0ZDMsXzB4NTk4ODk2LF8weDFlNjZmYSldO2Nhc2UgMHgyOnJldHVybiBfMHgyMjg2ZGQ9XzB4NTExNzBkWydzZW50J10oKSx0aGlzW18weDU3NDQoJzB4MTIzJyldKCksXzB4ZDM1ZGU3KF8weDU3NDQoJzB4MTI2JyksXzB4MTNlNjBlKSxbMHgyLHsnbmFtZSc6XzB4MTNlNjBlLCdzZXNzaW9uSWQnOl8weDU5ODg5Niwnd29ya2VySWQnOl8weDFlNjZmYSwnaW5zdGFuY2UnOnsncmVzdW1lJzpmdW5jdGlvbigpe18weDVmMDk0N1tfMHg1NzQ0KCcweDEyNycpXShfMHgxOTU2ZDVbXzB4NTc0NCgnMHgxMjgnKV0sZnVuY3Rpb24oKXskXyR0cmFjZXJbXzB4NTc0NCgnMHgxMjknKV0oKTt9KTt9LCdwaW5nJzpmdW5jdGlvbihfMHgzYTg0ZDMpe18weDVmMDk0N1tfMHg1NzQ0KCcweDEyNycpXShfMHgxOTU2ZDVbXzB4NTc0NCgnMHgxMjgnKV0sZnVuY3Rpb24oKXt9LF8weDNhODRkMyk7fSwnY2xvc2UnOmZ1bmN0aW9uKCl7XzB4NWYwOTQ3WydfY2xvc2VUYWInXShfMHgxOTU2ZDUpO30sJ2Nsb3NpbmcnOmZ1bmN0aW9uKCl7fSwnc3RhcnQnOmZ1bmN0aW9uKF8weDNhODRkMyl7aWYoXzB4NTc0NCgnMHgxMmEnKSE9PV8weDU3NDQoJzB4MTJhJykpe3JldHVybiBfMHgzYTg0ZDNbXzB4NTc0NCgnMHhjJyldW18weDU3NDQoJzB4MTBmJyldKF8weDNhODRkM1tfMHg1NzQ0KCcweDEwYicpXVtfMHg1NzQ0KCcweGNiJyldKCkpLFFbJ3doZW4nXShfMHgxZTY2ZmEpO31lbHNle18weDVmMDk0N1tfMHg1NzQ0KCcweDEyYicpXShfMHgxOTU2ZDUsXzB4MjI4NmRkLGZ1bmN0aW9uKF8weDFlNjZmYSl7XzB4M2E4NGQzKF8weDFlNjZmYVsnc3RhdHVzJ10pJiZfMHg1ZjA5NDdbJ19ldmFsdWF0ZU9uVGFiJ10oXzB4MTk1NmQ1W18weDU3NDQoJzB4MTI4JyldLGZ1bmN0aW9uKCl7aWYoXzB4NTc0NCgnMHgxMmMnKT09PV8weDU3NDQoJzB4MTJkJykpe3ZhciBfMHgzNjgyODY9X1tfMHg1NzQ0KCcweDEyZScpXShnLGZ1bmN0aW9uKF8weDMyNmIzZCl7cmV0dXJuIF9bJ3N0YXJ0c1dpdGgnXShfMHgzYTg0ZDMsXzB4MzI2YjNkW18weDU3NDQoJzB4MTJmJyldKTt9KTtfMHgzNjgyODYmJihfMHgxOTY1ODc9IXcoXzB4M2E4NGQzW18weDU3NDQoJzB4OWQnKV0oXzB4MzY4Mjg2W18weDU3NDQoJzB4MTJmJyldLF8weDM2ODI4NlsncGF0aCddKSxfMHgxZTY2ZmEpKTt9ZWxzZXskXyR0cmFjZXJbJ3N0YXJ0J10oKTt9fSk7fSk7fX19fV07fX19KTt9KTt9fSxfMHgxZTY2ZmFbXzB4NTc0NCgnMHgxMGQnKV1bXzB4NTc0NCgnMHgxMjMnKV09ZnVuY3Rpb24oKXtpZih0aGlzW18weDU3NDQoJzB4YycpXVtfMHg1NzQ0KCcweDEzMCcpXSgpKXRocm93eydydW5DYW5jZWxsZWQnOiEweDB9O30sXzB4MWU2NmZhWydwcm90b3R5cGUnXVtfMHg1NzQ0KCcweDEzMScpXT1mdW5jdGlvbihfMHgzYTg0ZDMpe2lmKF8weDU3NDQoJzB4MTMyJyk9PT1fMHg1NzQ0KCcweDEzMycpKXt2YXIgXzB4MTM4YTk0O3RyeXtfMHgxMzhhOTQ9SlNPTlsncGFyc2UnXShfMHg1OTg4OTYpO31jYXRjaChfMHgxZTJhOWIpe3JldHVybjt9XzB4NTc0NCgnMHgxMzQnKT09PV8weDEzOGE5NFsndHlwZSddJiZfMHgxMzhhOTRbJ2RhdGEnXT09PV8weDFlNjZmYSYmKF8weDE5NTZkNVtfMHg1NzQ0KCcweDEzNScpXVtfMHg1NzQ0KCcweDEzNicpXShfMHg1NzQ0KCcweDMxJyksXzB4NWYwOTQ3KSxfMHgzYTg0ZDMoKSk7fWVsc2V7cmV0dXJuIHZvaWQgMHgwPT09XzB4M2E4NGQzJiYoXzB4M2E4NGQzPXt9KSxfW18weDU3NDQoJzB4NzknKV0oeydwb3J0Jzp0aGlzWydfY2hyb21lJ11bXzB4NTc0NCgnMHgxMzcnKV0sJ2hvc3QnOl8weDU3NDQoJzB4MTM4Jyl9LF8weDNhODRkMyk7fX0sXzB4MWU2NmZhW18weDU3NDQoJzB4MTBkJyldWydfZXZhbHVhdGVPblRhYiddPWZ1bmN0aW9uKF8weDNhODRkMyxfMHgxZTY2ZmEsXzB4NWYwOTQ3KXtpZignTEVFZFQnPT09XzB4NTc0NCgnMHgxMzknKSl7cmV0dXJuIHZvaWQgMHgwPT09XzB4NWYwOTQ3JiYoXzB4NWYwOTQ3PV9bXzB4NTc0NCgnMHgxM2EnKV0pLF8weDU5ODg5Nih0aGlzLHZvaWQgMHgwLHZvaWQgMHgwLGZ1bmN0aW9uKCl7dmFyIF8weDU5ODg5NjtyZXR1cm4gXzB4NTExNzBkKHRoaXMsZnVuY3Rpb24oXzB4NTExNzBkKXtzd2l0Y2goXzB4NTExNzBkWydsYWJlbCddKXtjYXNlIDB4MDpyZXR1cm4gXzB4NTExNzBkW18weDU3NDQoJzB4ZjAnKV1bJ3B1c2gnXShbMHgwLDB4MiwsMHgzXSksXzB4M2E4NGQzWydSdW50aW1lJ10/WzB4NCxfMHgzYTg0ZDNbJ1J1bnRpbWUnXVtfMHg1NzQ0KCcweDEzYicpXSh7J2V4cHJlc3Npb24nOicoJytfMHgxZTY2ZmFbXzB4NTc0NCgnMHg1NycpXSgpK18weDU3NDQoJzB4MTNjJyl9KV06WzB4Ml07Y2FzZSAweDE6cmV0dXJuIF8weDUxMTcwZFtfMHg1NzQ0KCcweDEwZScpXSgpLF8weDVmMDk0NygpLFsweDMsMHgzXTtjYXNlIDB4MjpyZXR1cm4gXzB4NTk4ODk2PV8weDUxMTcwZFtfMHg1NzQ0KCcweDEwZScpXSgpLF8weGQzNWRlNyhfMHg1NzQ0KCcweDEzZCcpK18weDU5ODg5NlsnbWVzc2FnZSddKSxbMHgzLDB4M107Y2FzZSAweDM6cmV0dXJuWzB4Ml07fX0pO30pO31lbHNle3ZhciBfMHg0MGVjZTk9SlNPTltfMHg1NzQ0KCcweDJkJyldKF8weDFlNjZmYVtfMHg1NzQ0KCcweDEzZScpXShfMHg1OTg4OTZbXzB4NTc0NCgnMHgxM2YnKV1bXzB4NTc0NCgnMHgxNDAnKV0pKTtfMHg0MGVjZTlbJ3BsdWdpbnMnXT1fW18weDU3NDQoJzB4MTQxJyldKF8weDQwZWNlOVtfMHg1NzQ0KCcweDE0MicpXSk/W18weDQwZWNlOVtfMHg1NzQ0KCcweDE0MicpXV06XzB4NDBlY2U5W18weDU3NDQoJzB4MTQyJyldfHxbXSwhX1tfMHg1NzQ0KCcweDEyZScpXShfMHg0MGVjZTlbJ3BsdWdpbnMnXSksZnVuY3Rpb24oXzB4NDBlY2U5KXtyZXR1cm4gXzB4NDBlY2U5PT09XzB4MTNlNjBlW18weDU3NDQoJzB4MTQzJyldO30mJl8weDQwZWNlOVsncGx1Z2lucyddWydwdXNoJ10oXzB4MTNlNjBlW18weDU3NDQoJzB4MTQzJyldKSxfMHgxZTY2ZmFbXzB4NTc0NCgnMHgxNDQnKV0oXzB4NTk4ODk2W18weDU3NDQoJzB4MTNmJyldW18weDU3NDQoJzB4MTQwJyldLEpTT05bXzB4NTc0NCgnMHg4JyldKF8weDQwZWNlOSkpLF8weDFlNjZmYVsnX3Byb2plY3QnXVtfMHg1NzQ0KCcweDE0NScpXSgpO319LF8weDFlNjZmYVtfMHg1NzQ0KCcweDEwZCcpXVsnX29wZW5UYWInXT1mdW5jdGlvbihfMHgzYTg0ZDMsXzB4MWU2NmZhLF8weDVmMDk0Nyl7cmV0dXJuIHZvaWQgMHgwPT09XzB4NWYwOTQ3JiYoXzB4NWYwOTQ3PV9bXzB4NTc0NCgnMHgxM2EnKV0pLF8weDU5ODg5Nih0aGlzLHZvaWQgMHgwLHZvaWQgMHgwLGZ1bmN0aW9uKCl7dmFyIF8weDU5ODg5NixfMHgxM2U2MGUsXzB4MjI4NmRkLF8weDE5NjU4NyxfMHhkMzVkZTcsXzB4NDdiYjAwLF8weDU2MjA2YSxfMHg0MDMzYTMsXzB4NWIyMDlkLF8weDgyNTNiZixfMHg0MWZlMjc9dGhpcztyZXR1cm4gXzB4NTExNzBkKHRoaXMsZnVuY3Rpb24oXzB4NTExNzBkKXtzd2l0Y2goXzB4NTExNzBkWydsYWJlbCddKXtjYXNlIDB4MDppZihfMHg1MTE3MGRbXzB4NTc0NCgnMHhmMCcpXVsncHVzaCddKFsweDAsMHgxMiwsMHgxM10pLCF0aGlzW18weDU3NDQoJzB4MTExJyldKXRocm93IG5ldyBFcnJvcihfMHg1NzQ0KCcweDE0NicpKTtyZXR1cm5bMHg0LF8weDE5NTZkNVtfMHg1NzQ0KCcweDE0NycpXSh0aGlzW18weDU3NDQoJzB4MTMxJyldKHsndXJsJzpfMHgxZTY2ZmF9KSldO2Nhc2UgMHgxOnJldHVybiBfMHg1OTg4OTY9XzB4NTExNzBkW18weDU3NDQoJzB4MTBlJyldKCksXzB4M2E4NGQzW18weDU3NDQoJzB4MTI4JyldPXsndGFyZ2V0Jzp7J2lkJzpfMHg1OTg4OTZbJ2lkJ119fSx0aGlzW18weDU3NDQoJzB4MTIzJyldKCksWzB4NCxfMHgxOTU2ZDUoeyd0YWInOl8weDU5ODg5Nn0pXTtjYXNlIDB4MjpfMHgxM2U2MGU9XzB4NTExNzBkWydzZW50J10oKSxfMHgzYTg0ZDNbXzB4NTc0NCgnMHgxMjgnKV09XzB4MTNlNjBlLHRoaXNbJ19jaGVja0NhbmNlbGxlZCddKCksXzB4MjI4NmRkPV8weDEzZTYwZVtfMHg1NzQ0KCcweDE0OCcpXSxfMHgxOTY1ODc9XzB4MTNlNjBlW18weDU3NDQoJzB4MTQ5JyldLF8weDUxMTcwZFtfMHg1NzQ0KCcweGVkJyldPTB4MztjYXNlIDB4MzpyZXR1cm4gXzB4NTExNzBkW18weDU3NDQoJzB4ZjAnKV1bXzB4NTc0NCgnMHgyOScpXShbMHgzLDB4MTAsLDB4MTFdKSxfMHhkMzVkZTc9ISF0aGlzW18weDU3NDQoJzB4MTBiJyldW18weDU3NDQoJzB4MTRhJyldKCksXzB4NDdiYjAwPVtfMHgyMjg2ZGRbXzB4NTc0NCgnMHgxNGInKV0oKV0sXzB4ZDM1ZGU3JiZfMHg0N2JiMDBbXzB4NTc0NCgnMHgyOScpXShfMHgxOTY1ODdbXzB4NTc0NCgnMHgxNGInKV0oKSksWzB4NCxQcm9taXNlW18weDU3NDQoJzB4MTRjJyldKF8weDQ3YmIwMCldO2Nhc2UgMHg0OmlmKF8weDUxMTcwZFtfMHg1NzQ0KCcweDEwZScpXSgpLHRoaXNbXzB4NTc0NCgnMHgxMjMnKV0oKSwhXzB4ZDM1ZGU3KXJldHVyblsweDMsMHhkXTtfMHgxOTY1ODdbXzB4NTc0NCgnMHgxNGQnKV0oZnVuY3Rpb24oXzB4M2E4NGQzKXt2YXIgXzB4MWU2NmZhPV8weDNhODRkM1tfMHg1NzQ0KCcweDE0ZScpXSxfMHg1ZjA5NDc9XzB4M2E4NGQzW18weDU3NDQoJzB4MTRmJyldO3JldHVybiBfMHgxOTY1ODdbXzB4NTc0NCgnMHhkYycpXSh7J2ludGVyY2VwdGlvbklkJzpfMHgxZTY2ZmEsJ3VybCc6XzB4NDFmZTI3WydfdXBkYXRlVHJhY2tlZEZpbGVVcmxJZlJlcXVpcmVkJ10oXzB4NWYwOTQ3W18weDU3NDQoJzB4NmYnKV0pfSlbJ2NhdGNoJ10oZnVuY3Rpb24oXzB4M2E4NGQzKXt9KTt9KSxfMHg1MTE3MGRbXzB4NTc0NCgnMHhlZCcpXT0weDU7Y2FzZSAweDU6cmV0dXJuIF8weDUxMTcwZFtfMHg1NzQ0KCcweGYwJyldW18weDU3NDQoJzB4MjknKV0oWzB4NSwweDcsLDB4Y10pLFsweDQsXzB4MTNlNjBlW18weDU3NDQoJzB4OScpXSgnTmV0d29yay5zZXRSZXF1ZXN0SW50ZXJjZXB0aW9uJyx7J3BhdHRlcm5zJzpbeyd1cmxQYXR0ZXJuJzonKid9XX0pXTtjYXNlIDB4NjpyZXR1cm4gXzB4NTExNzBkWydzZW50J10oKSxbMHgzLDB4Y107Y2FzZSAweDc6XzB4NTYyMDZhPV8weDUxMTcwZFsnc2VudCddKCksXzB4NTExNzBkW18weDU3NDQoJzB4ZWQnKV09MHg4O2Nhc2UgMHg4OnJldHVybiBfMHg1MTE3MGRbXzB4NTc0NCgnMHhmMCcpXVsncHVzaCddKFsweDgsMHhhLCwweGJdKSxbMHg0LF8weDE5NjU4N1tfMHg1NzQ0KCcweDE1MCcpXSh7J2VuYWJsZWQnOiEweDB9KV07Y2FzZSAweDk6cmV0dXJuIF8weDUxMTcwZFtfMHg1NzQ0KCcweDEwZScpXSgpLFsweDMsMHhiXTtjYXNlIDB4YTpyZXR1cm4gXzB4NDAzM2EzPV8weDUxMTcwZFtfMHg1NzQ0KCcweDEwZScpXSgpLGNvbnNvbGVbXzB4NTc0NCgnMHgyZicpXShfMHg1NzQ0KCcweDE1MScpKSxbMHgzLDB4Yl07Y2FzZSAweGI6cmV0dXJuWzB4MywweGNdO2Nhc2UgMHhjOnRoaXNbXzB4NTc0NCgnMHgxMjMnKV0oKSxfMHg1MTE3MGRbXzB4NTc0NCgnMHhlZCcpXT0weGQ7Y2FzZSAweGQ6cmV0dXJuWzB4NCxfMHgyMjg2ZGRbXzB4NTc0NCgnMHgxNTInKV0oeyd1cmwnOl8weDFlNjZmYX0pXTtjYXNlIDB4ZTpyZXR1cm4gXzB4NTExNzBkWydzZW50J10oKSx0aGlzW18weDU3NDQoJzB4MTIzJyldKCksWzB4NCxfMHgyMjg2ZGRbJ2xvYWRFdmVudEZpcmVkJ10oKV07Y2FzZSAweGY6cmV0dXJuIF8weDUxMTcwZFtfMHg1NzQ0KCcweDEwZScpXSgpLHRoaXNbXzB4NTc0NCgnMHgxMjMnKV0oKSxfMHg1ZjA5NDcoeydzdGF0dXMnOl8weDU3NDQoJzB4MTUzJyl9KSxbMHgzLDB4MTFdO2Nhc2UgMHgxMDpyZXR1cm4gXzB4NWIyMDlkPV8weDUxMTcwZFtfMHg1NzQ0KCcweDEwZScpXSgpLHRoaXNbJ19jbG9zZVRhYiddKF8weDNhODRkMyksXzB4NWYwOTQ3KHsnc3RhdHVzJzpfMHg1NzQ0KCcweDE1NCcpKyhfMHg1YjIwOWRbXzB4NTc0NCgnMHgzMScpXXx8J3Vua25vd24nKX0pLFsweDMsMHgxMV07Y2FzZSAweDExOnJldHVyblsweDMsMHgxM107Y2FzZSAweDEyOnJldHVybiBfMHg4MjUzYmY9XzB4NTExNzBkW18weDU3NDQoJzB4MTBlJyldKCksXzB4NWYwOTQ3KHsnc3RhdHVzJzonZmFpbGVkOlx4MjAnKyhfMHg4MjUzYmZbXzB4NTc0NCgnMHgzMScpXXx8J3Vua25vd24nKX0pLFsweDMsMHgxM107Y2FzZSAweDEzOnJldHVyblsweDJdO319KTt9KTt9LF8weDFlNjZmYVsncHJvdG90eXBlJ11bXzB4NTc0NCgnMHgxNTUnKV09ZnVuY3Rpb24oXzB4M2E4NGQzKXtyZXR1cm4gXzB4NTk4ODk2KHRoaXMsdm9pZCAweDAsdm9pZCAweDAsZnVuY3Rpb24oKXtpZignbFBSbkQnPT09XzB4NTc0NCgnMHgxNTYnKSl7dmFyIF8weDFlNjZmYSxfMHg1ZjA5NDc7cmV0dXJuIF8weDUxMTcwZCh0aGlzLGZ1bmN0aW9uKF8weDU5ODg5Nil7c3dpdGNoKF8weDU5ODg5NltfMHg1NzQ0KCcweGVkJyldKXtjYXNlIDB4MDppZighXzB4M2E4NGQzfHwhXzB4M2E4NGQzWydjbGllbnQnXSlyZXR1cm5bMHgzLDB4Nl07XzB4MWU2NmZhPV8weDNhODRkM1tfMHg1NzQ0KCcweDEyOCcpXSxkZWxldGUgXzB4M2E4NGQzW18weDU3NDQoJzB4MTI4JyldLF8weDU5ODg5NlsnbGFiZWwnXT0weDE7Y2FzZSAweDE6cmV0dXJuIF8weDU5ODg5NltfMHg1NzQ0KCcweGYwJyldW18weDU3NDQoJzB4MjknKV0oWzB4MSwweDQsLDB4NV0pLHRoaXNbXzB4NTc0NCgnMHgxMDUnKV0/WzB4MywweDNdOlsweDQsXzB4MTk1NmQ1W18weDU3NDQoJzB4MTU3JyldKHRoaXNbXzB4NTc0NCgnMHgxMzEnKV0oeydpZCc6XzB4MWU2NmZhW18weDU3NDQoJzB4MTU4JyldWydpZCddfSkpXTtjYXNlIDB4MjpfMHg1OTg4OTZbXzB4NTc0NCgnMHgxMGUnKV0oKSxfMHg1OTg4OTZbJ2xhYmVsJ109MHgzO2Nhc2UgMHgzOnJldHVyblsweDMsMHg1XTtjYXNlIDB4NDpyZXR1cm4gXzB4NWYwOTQ3PV8weDU5ODg5NltfMHg1NzQ0KCcweDEwZScpXSgpLF8weGQzNWRlNyhfMHg1NzQ0KCcweDE1OScpK18weDVmMDk0N1tfMHg1NzQ0KCcweDMxJyldKSxbMHgzLDB4NV07Y2FzZSAweDU6dHJ5e2lmKF8weDU3NDQoJzB4MTVhJykhPT1fMHg1NzQ0KCcweDE1YicpKXtfMHgxZTY2ZmFbJ2Nsb3NlJ10oKTt9ZWxzZXtfMHg1ZjA5NDdbJ3BpbmcnXShmdW5jdGlvbigpe2NsZWFyVGltZW91dChfMHgzYTg0ZDNbXzB4NTc0NCgnMHgxNWMnKV0pLF8weDNhODRkM1tfMHg1NzQ0KCcweDE1ZCcpXSgpJiZjb25zb2xlW18weDU3NDQoJzB4MmYnKV0oJ1NhbmRib3hceDIwaXNceDIwcmVzcG9uc2l2ZS5ceDIwVGhlXHgyMGlzc3VlXHgyMG1heVx4MjBoYXZlXHgyMHRoZVx4MjBhc3luY2hyb25vdXNceDIwbmF0dXJlLFx4MjBsaWtlXHgyMGFceDIwbWlzc2luZ1x4MjBjYWxsYmFjay4nKTt9KSxfMHgzYTg0ZDNbXzB4NTc0NCgnMHgxNWMnKV09c2V0VGltZW91dChmdW5jdGlvbigpe2NvbnNvbGVbXzB4NTc0NCgnMHgyZicpXShfMHg1NzQ0KCcweDE1ZScpKTt9LGgpO319Y2F0Y2goXzB4MWE1MTZkKXtpZihfMHg1NzQ0KCcweDE1ZicpPT09XzB4NTc0NCgnMHgxNWYnKSl7XzB4ZDM1ZGU3KCdGYWlsZWRceDIwdG9ceDIwY2xvc2VceDIwQ2hyb21lXHgyMFRhYlx4MjBjbGllbnQ6XHgyMCcrXzB4MWE1MTZkW18weDU3NDQoJzB4MzEnKV0pO31lbHNle18weDEzZTYwZT1fMHg1ZjA5NDdbXzB4NTc0NCgnMHgxNjAnKV1bXzB4NTc0NCgnMHgxNjEnKV0oXzB4NTk4ODk2P3snY29uZmlnJzpKU09OW18weDU3NDQoJzB4OCcpXShfMHg1OTg4OTZbXzB4NTc0NCgnMHgxNjAnKV0oZnVuY3Rpb24oXzB4NDEzMzE2KXtyZXR1cm4gXzB4MWE1MTZkW18weDU3NDQoJzB4MTAxJyldKF8weDU5ODg5NltfMHg1NzQ0KCcweGUnKV0sJy4uLy4uLy4uJyxfMHg0MTMzMTYpO30pKX06e30sW18weDNhODRkM10pLF8weDEzZTYwZVtfMHg1NzQ0KCcweDE2MicpXT1PYmplY3RbXzB4NTc0NCgnMHgxNjMnKV0oe30sXzB4MTNlNjBlW18weDU3NDQoJzB4MTYyJyldKSxfMHgxM2U2MGVbJ2NvbmZpZ3MnXT0oXzB4MTNlNjBlW18weDU3NDQoJzB4MTY0JyldfHxbXSlbXzB4NTc0NCgnMHgxNjUnKV0oZnVuY3Rpb24oXzB4NGI0MTk4KXtyZXR1cm4namVzdC1ydW5uZXInPT09XzB4NGI0MTk4WydydW5uZXInXTt9KVtfMHg1NzQ0KCcweDE2NicpXShmdW5jdGlvbihfMHg1OTllOWIpe3JldHVybiBPYmplY3RbXzB4NTc0NCgnMHgxNjMnKV0oe30sXzB4NTk5ZTliKTt9KTt9fV8weDU5ODg5NltfMHg1NzQ0KCcweGVkJyldPTB4NjtjYXNlIDB4NjpyZXR1cm5bMHgyXTt9fSk7fWVsc2V7dGhpc1tfMHg1NzQ0KCcweDE1NScpXShfMHgzYTg0ZDMpO319KTt9LF8weDFlNjZmYVtfMHg1NzQ0KCcweDEwZCcpXVtfMHg1NzQ0KCcweDE2NycpXT1mdW5jdGlvbigpe3JldHVybiBfMHg1OTg4OTYodGhpcyx2b2lkIDB4MCx2b2lkIDB4MCxmdW5jdGlvbigpe2lmKF8weDU3NDQoJzB4MTY4Jyk9PT1fMHg1NzQ0KCcweDE2OCcpKXt2YXIgXzB4MWU2NmZhLF8weDVmMDk0NyxfMHg1OTg4OTYsXzB4MTk1NmQ1O3JldHVybiBfMHg1MTE3MGQodGhpcyxmdW5jdGlvbihfMHg1MTE3MGQpe3N3aXRjaChfMHg1MTE3MGRbXzB4NTc0NCgnMHhlZCcpXSl7Y2FzZSAweDA6cmV0dXJuIF8weDUxMTcwZFtfMHg1NzQ0KCcweGYwJyldW18weDU3NDQoJzB4MjknKV0oWzB4MCwweDIsLDB4M10pLF8weDFlNjZmYT1bXzB4NTc0NCgnMHgxNjknKSxfMHg1NzQ0KCcweDE2YScpLF8weDU3NDQoJzB4MTZiJyldLF8weDVmMDk0Nz1fMHgzYTg0ZDMoJ29zJyksXzB4NTc0NCgnMHgxNmMnKT09PV8weDVmMDk0N1tfMHg1NzQ0KCcweDQnKV0oKSYmKF8weDFlNjZmYVtfMHg1NzQ0KCcweDI5JyldKF8weDU3NDQoJzB4MTZkJykpLF8weDFlNjZmYVtfMHg1NzQ0KCcweDI5JyldKF8weDU3NDQoJzB4MTZlJykpKSxfMHg1OTg4OTY9dGhpcyxbMHg0LF8weDEzZTYwZVtfMHg1NzQ0KCcweDE2ZicpXSh7J2Nocm9tZUZsYWdzJzp0aGlzWydfZmxhZ3MnXXx8XzB4MWU2NmZhLCdjaHJvbWVQYXRoJzp0aGlzW18weDU3NDQoJzB4MTAyJyldLCdsb2dMZXZlbCc6XzB4NTc0NCgnMHgxNzAnKX0pXTtjYXNlIDB4MTpyZXR1cm4gXzB4NTk4ODk2WydfY2hyb21lJ109XzB4NTExNzBkW18weDU3NDQoJzB4MTBlJyldKCksWzB4MywweDNdO2Nhc2UgMHgyOnJldHVybiBfMHgxOTU2ZDU9XzB4NTExNzBkW18weDU3NDQoJzB4MTBlJyldKCksdGhpc1snX2hhbmRsZUhvc3RFcnJvciddKF8weDE5NTZkNSksWzB4MywweDNdO2Nhc2UgMHgzOnJldHVyblsweDJdO319KTt9ZWxzZXtyZXR1cm4gdGhpc1snX2RhdGEnXVsnaWQnXTt9fSk7fSxfMHgxZTY2ZmFbXzB4NTc0NCgnMHgxMGQnKV1bJ191cGRhdGVUcmFja2VkRmlsZVVybElmUmVxdWlyZWQnXT1mdW5jdGlvbihfMHgzYTg0ZDMpe2lmKF8weDU3NDQoJzB4MTcxJyk9PT1fMHg1NzQ0KCcweDE3MScpKXtpZighXzB4M2E4NGQzfHx+XzB4M2E4NGQzW18weDU3NDQoJzB4NzAnKV0oXzB4NTc0NCgnMHgxNzInKSl8fH5fMHgzYTg0ZDNbXzB4NTc0NCgnMHg3MCcpXSgnX193YWxsYWJ5X18nKSlyZXR1cm4gXzB4M2E4NGQzO3ZhciBfMHgxZTY2ZmE9XzB4M2E4NGQzO2lmKF8weDFlNjZmYT1fMHgxZTY2ZmFbXzB4NTc0NCgnMHg5ZCcpXSh0aGlzW18weDU3NDQoJzB4MTBiJyldW18weDU3NDQoJzB4Y2InKV0oKSwnJyksXzB4MWU2NmZhPT09XzB4M2E4NGQzKXJldHVybiBfMHgzYTg0ZDM7dmFyIF8weDVmMDk0Nz1fMHgxZTY2ZmFbJ2xhc3RJbmRleE9mJ10oJz8nKTtfMHg1ZjA5NDc+PTB4MCYmKF8weDFlNjZmYT1fMHgxZTY2ZmFbJ3N1YnN0cmluZyddKDB4MCxfMHg1ZjA5NDcpKTt2YXIgXzB4NTk4ODk2PV8weDFlNjZmYSYmdGhpc1snX3Byb2plY3QnXVtfMHg1NzQ0KCcweDE3MycpXShfMHgxZTY2ZmEpO3JldHVybiBfMHg1OTg4OTY/XzB4M2E4NGQzKyh+XzB4NWYwOTQ3PycmJzonPycpK18weDU5ODg5NlsnY2hhbmdlVHMnXSsnJndhbGxhYnlGaWxlSWQ9JytfMHg1OTg4OTZbJ2lkJ106XzB4M2E4NGQzO31lbHNle190cWxid3QxN2VuKCk7fX0sXzB4MWU2NmZhWydwcm90b3R5cGUnXVtfMHg1NzQ0KCcweDE3NCcpXT1mdW5jdGlvbihfMHgzYTg0ZDMpe2lmKF8weDU3NDQoJzB4MTc1JykhPT1fMHg1NzQ0KCcweDE3NScpKXtyZXR1cm4gXzB4NWYwOTQ3KF8weDFlNjZmYSYmXzB4NTc0NCgnMHgxNzYnKT09PV8weDFlNjZmYVsnY29kZSddP18weDNhODRkMzoweDApO31lbHNle18weDNhODRkMz1fMHgzYTg0ZDN8fHt9LHRoaXNbJ19wcm9qZWN0J11bXzB4NTc0NCgnMHhkZScpXShfMHgzYTg0ZDMpO3ZhciBfMHgxZTY2ZmE9XzB4NTc0NCgnMHhkZicpKyhfMHgzYTg0ZDNbXzB4NTc0NCgnMHgzMScpXXx8XzB4NTc0NCgnMHhlMCcpKSxfMHg1ZjA5NDc9XzB4M2E4NGQzW18weDU3NDQoJzB4NGUnKV18fF8weDFlNjZmYTtjb25zb2xlW18weDU3NDQoJzB4N2MnKV0oXzB4NWYwOTQ3KSx0aGlzW18weDU3NDQoJzB4NGQnKV1bXzB4NTc0NCgnMHhlMScpXShfMHgxZTY2ZmEpO319LF8weDFlNjZmYTt9KCk7XzB4MWU2NmZhW18weDU3NDQoJzB4YicpXT1fMHg0N2JiMDA7fSx7Jy4vYnJvd3NlckVudmlyb25tZW50JzoweDQsJy4vcnVuV29ya2VyUG9vbCc6MHgxZCwnY2hyb21lLWxhdW5jaGVyJzp2b2lkIDB4MCwnY2hyb21lLXJlbW90ZS1pbnRlcmZhY2UnOnZvaWQgMHgwLCdvcyc6dm9pZCAweDB9XSw2OltmdW5jdGlvbihfMHg1YmI4ODgsXzB4MTRlOWNlLF8weDU0MWMwYil7dmFyIF8weDQ0MTJkMz1sb2dnZXJbJ2NyZWF0ZSddKCdlbGVjdHJvblJ1bm5lcicpW18weDU3NDQoJzB4NWEnKV0sXzB4MjBlYjVmPV8weDViYjg4OChfMHg1NzQ0KCcweGUnKSksXzB4M2U4MTBjPV8weDViYjg4OCgnY2hpbGRfcHJvY2VzcycpLF8weDNkMzY2YT1fMHg1YmI4ODgoXzB4NTc0NCgnMHhmZicpKSxfMHgyNGFkNzk9XzB4NWJiODg4KF8weDU3NDQoJzB4MTc3JykpLF8weDE5MjNlYj0weDAsXzB4MWNiMjBjPWZ1bmN0aW9uKF8weDViYjg4OCl7aWYoXzB4NTc0NCgnMHgxNzgnKSE9PV8weDU3NDQoJzB4MTc5Jykpe3ZhciBfMHgxNGU5Y2U9dGhpcztfMHgxNGU5Y2VbJ19wcm9qZWN0J109XzB4NWJiODg4LF8weDE0ZTljZVtfMHg1NzQ0KCcweDEwMCcpXT1RWyd3aGVuJ10oITB4MCksXzB4MTRlOWNlW18weDU3NDQoJzB4MTdhJyldPV8weDViYjg4OFtfMHg1NzQ0KCcweDYwJyldKClbJ2VudiddW18weDU3NDQoJzB4N2UnKV0sXzB4MTRlOWNlW18weDU3NDQoJzB4MTdiJyldPV8weDViYjg4OFsnc2V0dGluZ3MnXSgpW18weDU3NDQoJzB4NjcnKV1bXzB4NTc0NCgnMHgxMDMnKV0sXzB4MTRlOWNlW18weDU3NDQoJzB4MTdjJyldPV8weDViYjg4OFtfMHg1NzQ0KCcweDYwJyldKClbXzB4NTc0NCgnMHg2NycpXVsnb3B0aW9ucyddLF8weDE0ZTljZVsnX2NsZWFyTWVtb3J5Q2FjaGUnXT1fMHg1YmI4ODhbJ3NldHRpbmdzJ10oKVtfMHg1NzQ0KCcweDY3JyldW18weDU3NDQoJzB4MTdkJyldLF8weDE0ZTljZVtfMHg1NzQ0KCcweDE3ZScpXT12b2lkIDB4MCxfMHgxNGU5Y2VbXzB4NTc0NCgnMHgxN2YnKV09T2JqZWN0WydjcmVhdGUnXShudWxsKSxfMHgxNGU5Y2VbXzB4NTc0NCgnMHgxODAnKV09UVtfMHg1NzQ0KCcweDE4MScpXShmdW5jdGlvbihfMHg1YmI4ODgsXzB4NTQxYzBiKXtpZihfMHg1NzQ0KCcweDE4MicpPT09XzB4NTc0NCgnMHgxODMnKSl7XzB4MjBlYjVmW18weDU3NDQoJzB4MTg0JyldWydvbiddKF8weDU3NDQoJzB4MTRjJyksZnVuY3Rpb24oKXtjbGVhclRpbWVvdXQoUyksUz1zZXRUaW1lb3V0KF9bXzB4NTc0NCgnMHgxMDcnKV0oXzB4NDQxMmQzLG51bGwsITB4MCksZCk7fSlbJ29uJ10oJ2FkZCcsX1snYmluZCddKF8weDIwZWI1ZltfMHg1NzQ0KCcweDE4NScpXSxfMHgyMGViNWYsXzB4MjBlYjVmW18weDU3NDQoJzB4MTg2JyldKSlbJ29uJ10oXzB4NTc0NCgnMHgxODcnKSxfW18weDU3NDQoJzB4MTA3JyldKF8weDIwZWI1ZltfMHg1NzQ0KCcweDE4NScpXSxfMHgyMGViNWYsXzB4MjBlYjVmW18weDU3NDQoJzB4MTg4JyldKSlbJ29uJ10oXzB4NTc0NCgnMHgxODknKSxfW18weDU3NDQoJzB4MTA3JyldKF8weDIwZWI1ZlsnX3dpdGhOb3JtYWxpemVkUGF0aCddLF8weDIwZWI1ZixfMHgyMGViNWZbJ19maWxlRGVsZXRlZCddKSlbJ29uJ10oXzB4NTc0NCgnMHgxOGEnKSxfWydkZWJvdW5jZSddKF8weDQ0MTJkMyxmKSlbJ29uJ10oJ2Vycm9yJyxfW18weDU3NDQoJzB4MTA3JyldKF8weDIwZWI1ZltfMHg1NzQ0KCcweDdiJyldLF8weDIwZWI1ZixfMHg1NzQ0KCcweDdjJykpKTt9ZWxzZXt0cnl7aWYoXzB4NTc0NCgnMHgxOGInKSE9PSd6VEJQYScpe3JldHVybid0cyc9PT1fMHg1YmI4ODh8fF8weDU3NDQoJzB4MThjJyk9PT1fMHg1YmI4ODg7fWVsc2V7dmFyIF8weDQ0MTJkMz1fWydleHRlbmQnXSh7fSxwcm9jZXNzW18weDU3NDQoJzB4NjcnKV0sXzB4MTRlOWNlW18weDU3NDQoJzB4MTdhJyldW18weDU3NDQoJzB4NjcnKV0/X1tfMHg1NzQ0KCcweDkyJyldKF8weDE0ZTljZVtfMHg1NzQ0KCcweDE3YScpXVtfMHg1NzQ0KCcweDY3JyldW18weDU3NDQoJzB4ZDMnKV0oJzvigIsnKSxmdW5jdGlvbihfMHg1YmI4ODgsXzB4MTRlOWNlKXt2YXIgXzB4NTQxYzBiPV8weDE0ZTljZVtfMHg1NzQ0KCcweGQzJyldKCc9Jyk7cmV0dXJuIF8weDViYjg4OFtfMHg1NDFjMGJbMHgwXV09XzB4NTQxYzBiWzB4MV0sXzB4NWJiODg4O30se30pOnt9KTtkZWxldGUgXzB4NDQxMmQzWydBVE9NX1NIRUxMX0lOVEVSTkFMX1JVTl9BU19OT0RFJ10sZGVsZXRlIF8weDQ0MTJkM1tfMHg1NzQ0KCcweDE4ZCcpXSxfMHg0NDEyZDNbXzB4NTc0NCgnMHgxOGUnKV09ITB4MCxfMHgxNGU5Y2VbJ19ob3N0J109XzB4M2U4MTBjWydmb3JrJ10oXzB4MjBlYjVmW18weDU3NDQoJzB4NTQnKV0oX19kaXJuYW1lLF8weDU3NDQoJzB4NTUnKSxfMHg1NzQ0KCcweDU2JyksXzB4NTc0NCgnMHgxOGYnKSksW10seydleGVjUGF0aCc6XzB4MTRlOWNlW18weDU3NDQoJzB4MTdiJyldLCdlbnYnOl8weDQ0MTJkMywnZXhlY0FyZ3YnOl8weDE0ZTljZVsnX3BhcmFtcyddW18weDU3NDQoJzB4MTAzJyldP18weDE0ZTljZVtfMHg1NzQ0KCcweDE3YScpXVsncnVubmVyJ11bJ3NwbGl0J10oJ1x4MjAnKTpbXX0pLF8weDE0ZTljZVsnX2hvc3QnXVsnb24nXShfMHg1NzQ0KCcweDdjJyksZnVuY3Rpb24oXzB4NWJiODg4KXtfMHgxNGU5Y2VbJ19oYW5kbGVIb3N0RXJyb3InXShfMHg1YmI4ODgpO30pLF8weDE0ZTljZVsnX2hvc3QnXVsnb24nXSgnbWVzc2FnZScsZnVuY3Rpb24oXzB4NTQxYzBiKXt0cnl7XzB4NTQxYzBiWydpZCddP18weDE0ZTljZVsnX3Jlc3BvbnNlV2l0aENvcnJlbGF0aW9uSWQnXShfMHg1NDFjMGIpOl8weDU3NDQoJzB4MThhJyk9PT1fMHg1NDFjMGJbJ3R5cGUnXT9fMHg1YmI4ODgoXzB4MTRlOWNlW18weDU3NDQoJzB4MTdlJyldKTpfMHg1NzQ0KCcweDdjJyk9PT1fMHg1NDFjMGJbXzB4NTc0NCgnMHg0JyldJiZfMHgxNGU5Y2VbJ19oYW5kbGVIb3N0RXJyb3InXShfMHg1NDFjMGJbXzB4NTc0NCgnMHg3YycpXSk7fWNhdGNoKF8weDRkZmIxMil7aWYoXzB4NTc0NCgnMHgxOTAnKSE9PV8weDU3NDQoJzB4MTkxJykpe18weDE0ZTljZVtfMHg1NzQ0KCcweDE3NCcpXShfMHg0ZGZiMTIpO31lbHNle18weDViYjg4OFsnX3JlY2VpdmVyJ11bXzB4NTc0NCgnMHgxOTInKV0oITB4MCksXzB4NWJiODg4WydfcmVjZWl2ZXInXVtfMHg1NzQ0KCcweDE5MycpXShfMHgxY2IyMGNbXzB4NTc0NCgnMHgxOTQnKV0pLF8weDViYjg4OFtfMHg1NzQ0KCcweDE5NScpXVtfMHg1NzQ0KCcweDE5NicpXShfMHgxY2IyMGNbJ2FkZHJlc3MnXSk7fX19KTt9fWNhdGNoKF8weDQ2YWMyZil7XzB4NTQxYzBiKF8weDQ2YWMyZik7fX19KVtfMHg1NzQ0KCcweDdhJyldKGZ1bmN0aW9uKF8weDViYjg4OCl7aWYoXzB4NTc0NCgnMHgxOTcnKSE9PSdhTFRCeScpe3ZhciBfMHgzMDJkODk9dGhpcztfMHg1YmI4ODgmJl8weDViYjg4OFtfMHg1NzQ0KCcweDMxJyldW18weDU3NDQoJzB4MTk4JyldJiZfMHg1YmI4ODhbJ21lc3NhZ2UnXVtfMHg1NzQ0KCcweDE5OCcpXVtfMHg1NzQ0KCcweDE5OScpXSYmXzB4MzAyZDg5W18weDU3NDQoJzB4MTlhJyldJiZfMHg1YmI4ODhbXzB4NTc0NCgnMHgzMScpXVtfMHg1NzQ0KCcweDE5OCcpXVtfMHg1NzQ0KCcweDE5OScpXVtfMHg1NzQ0KCcweDE5YScpXT09PV8weDMwMmQ4OVtfMHg1NzQ0KCcweDE5YScpXSYmKF8weDMwMmQ4OVsnX3Byb2plY3QnXVtfMHg1NzQ0KCcweDE5YicpXSh7J2RhdGEnOl8weDViYjg4OFtfMHg1NzQ0KCcweDMxJyldW18weDU3NDQoJzB4MTk4JyldW18weDU3NDQoJzB4MTk5JyldfSksZGVsZXRlIF8weDMwMmQ4OVtfMHg1NzQ0KCcweDE5YScpXSksXzB4MzAyZDg5W18weDU3NDQoJzB4MTljJyldW18weDU3NDQoJzB4MjknKV0oXzB4NWJiODg4W18weDU3NDQoJzB4MzEnKV0pLF8weDMwMmQ4OVsnX2NvbnNvbGVPdXRwdXRUaW1lb3V0J118fF8weDMwMmQ4OVsnX3NjaGVkdWxlQ29uc29sZU91dHB1dFNlbmQnXSgpO31lbHNle18weDE0ZTljZVtfMHg1NzQ0KCcweDE3NCcpXShfMHg1YmI4ODgpO319KSxfMHgxNGU5Y2VbXzB4NTc0NCgnMHhjJyldPW5ldyBfMHgzZDM2NmEoXzB4MTRlOWNlW18weDU3NDQoJzB4NGQnKV0seydjcmVhdGUnOl9bJ2JpbmQnXShfMHgxNGU5Y2VbXzB4NTc0NCgnMHgxMDgnKV0sXzB4MTRlOWNlKSwncmVjeWNsZSc6X1snYmluZCddKF8weDE0ZTljZVsnX3JlY3ljbGUnXSxfMHgxNGU5Y2UpLCdoZWFsdGh5JzpmdW5jdGlvbigpe2lmKF8weDU3NDQoJzB4MTlkJyk9PT1fMHg1NzQ0KCcweDE5ZCcpKXtyZXR1cm4hMHgwO31lbHNle18weDIwZWI1Zj1fMHgzZDM2NmE9MHgwO319LCdwcmVwYXJlJzpfW18weDU3NDQoJzB4MTA3JyldKF8weDE0ZTljZVtfMHg1NzQ0KCcweDE5ZScpXSxfMHgxNGU5Y2UpfSksXzB4MTRlOWNlW18weDU3NDQoJzB4MTBiJyldPW5ldyBfMHgyNGFkNzkoXzB4NWJiODg4LF8weDE0ZTljZVtfMHg1NzQ0KCcweGMnKV0pO31lbHNle3ZhciBfMHgxMTQ2YzQ9dGhpc1snX3JlbGVhc2VkSWRzJ11bXzB4NTc0NCgnMHgxOWYnKV0oKVsnbmV4dCddKClbXzB4NTc0NCgnMHhlMycpXTtyZXR1cm4gdGhpc1tfMHg1NzQ0KCcweDFhMCcpXVsnZGVsZXRlJ10oXzB4MTE0NmM0KSxfMHgxMTQ2YzQ7fX07XzB4MWNiMjBjW18weDU3NDQoJzB4MTBkJyldPXsncnVuJzpmdW5jdGlvbihfMHg1YmI4ODgpe3ZhciBfMHgxNGU5Y2U9dGhpcztyZXR1cm4gXzB4MTRlOWNlWydfd29ya2VyUG9vbCddW18weDU3NDQoJzB4MTBjJyldKF8weDViYjg4OCk7fSwnX2hhbmRsZUhvc3RFcnJvcic6ZnVuY3Rpb24oXzB4NWJiODg4KXtpZihfMHg1NzQ0KCcweDFhMScpPT09XzB4NTc0NCgnMHgxYTEnKSl7dmFyIF8weDE0ZTljZT10aGlzO18weDViYjg4OD1fMHg1YmI4ODh8fHt9LF8weDE0ZTljZVsnX3Byb2plY3QnXVtfMHg1NzQ0KCcweGRlJyldKF8weDViYjg4OCk7dmFyIF8weDU0MWMwYj1fMHg1NzQ0KCcweDFhMicpKyhfMHg1YmI4ODhbXzB4NTc0NCgnMHgzMScpXXx8XzB4NTc0NCgnMHhlMCcpKSxfMHg0NDEyZDM9XzB4NWJiODg4W18weDU3NDQoJzB4NGUnKV18fF8weDU0MWMwYjtjb25zb2xlWydlcnJvciddKF8weDQ0MTJkMyksXzB4MTRlOWNlW18weDU3NDQoJzB4NGQnKV1bXzB4NTc0NCgnMHhlMScpXShfMHg1NDFjMGIpO31lbHNle3JldHVybiBfMHgzZDM2NmFbXzB4NTc0NCgnMHgxYTMnKV0oKSsnXHgyMCgnK18weDViYjg4OCsnKSc7fX0sJ19jcmVhdGUnOmZ1bmN0aW9uKF8weDViYjg4OCxfMHgxNGU5Y2Upe3ZhciBfMHg1NDFjMGI9dGhpcztfMHg1NDFjMGJbXzB4NTc0NCgnMHgxODAnKV1bXzB4NTc0NCgnMHg4OScpXShmdW5jdGlvbigpe18weDE0ZTljZSh7J3BhZ2VJZCc6XzB4NWJiODg4fSk7fSk7fSwnX3JlY3ljbGUnOmZ1bmN0aW9uKF8weDViYjg4OCl7dmFyIF8weDE0ZTljZT10aGlzO18weDE0ZTljZVtfMHg1NzQ0KCcweDE3ZScpXSYmXzB4MTRlOWNlW18weDU3NDQoJzB4MTdlJyldWydzZW5kJ10oeyd0eXBlJzpfMHg1NzQ0KCcweDFhNCcpLCdwYWdlSWQnOl8weDViYjg4OFsncGFnZUlkJ119KTt9LCdfZXZhbHVhdGVPblBhZ2UnOmZ1bmN0aW9uKF8weDViYjg4OCxfMHgxNGU5Y2UsXzB4NTQxYzBiKXtpZihfMHg1NzQ0KCcweDFhNScpIT09XzB4NTc0NCgnMHgxYTYnKSl7dmFyIF8weDQ0MTJkMz10aGlzLF8weDIwZWI1Zj17J3R5cGUnOl8weDU3NDQoJzB4MWE3JyksJ3BhZ2VJZCc6XzB4NWJiODg4LCdhY3Rpb24nOicoJytfMHgxNGU5Y2VbJ3RvU3RyaW5nJ10oKStfMHg1NzQ0KCcweDEzYycpfTtfMHg0NDEyZDNbXzB4NTc0NCgnMHgxYTgnKV0oXzB4MjBlYjVmLF8weDU0MWMwYnx8X1tfMHg1NzQ0KCcweDEzYScpXSk7fWVsc2V7cmV0dXJuIHRoaXNbXzB4NTc0NCgnMHgxYTknKV07fX0sJ19vcGVuUGFnZSc6ZnVuY3Rpb24oXzB4NWJiODg4LF8weDE0ZTljZSxfMHg1NDFjMGIsXzB4NDQxMmQzKXt2YXIgXzB4MjBlYjVmPXRoaXMsXzB4M2U4MTBjPXsndHlwZSc6XzB4NTc0NCgnMHgxYWEnKSwncGFnZUlkJzpfMHg1YmI4ODgsJ3VybCc6XzB4MTRlOWNlLCdvcHRpb25zJzpfMHg1NDFjMGJ9O18weDIwZWI1ZltfMHg1NzQ0KCcweDFhOCcpXShfMHgzZTgxMGMsXzB4NDQxMmQzfHxfWydub29wJ10pO30sJ19jbG9zZVBhZ2UnOmZ1bmN0aW9uKF8weDViYjg4OCl7dmFyIF8weDE0ZTljZT10aGlzO18weDE0ZTljZVsnX2hvc3QnXVtfMHg1NzQ0KCcweDknKV0oeyd0eXBlJzpfMHg1NzQ0KCcweDFhNCcpLCdwYWdlSWQnOl8weDViYjg4OH0pO30sJ19jYXB0dXJlUGFnZSc6ZnVuY3Rpb24oXzB4NWJiODg4LF8weDE0ZTljZSl7dmFyIF8weDU0MWMwYj10aGlzLF8weDQ0MTJkMz1RW18weDU3NDQoJzB4MWFiJyldKCk7dHJ5e2lmKCdBVU5oVyc9PT1fMHg1NzQ0KCcweDFhYycpKXtfMHg1NDFjMGJbJ19yZXF1ZXN0V2l0aENvcnJlbGF0aW9uSWQnXSh7J3R5cGUnOl8weDU3NDQoJzB4MWFkJyksJ2ZpbGUnOl8weDE0ZTljZSwncGFnZUlkJzpfMHg1YmI4ODh9LGZ1bmN0aW9uKCl7XzB4NDQxMmQzW18weDU3NDQoJzB4MTAxJyldKCk7fSksXzB4NTQxYzBiWydfc2NyZWVuU2hvdFJlYWR5J109XzB4NDQxMmQzW18weDU3NDQoJzB4MTgxJyldO31lbHNle3ZhciBfMHg1ZGY1NjA9XzB4MTRlOWNlW18weDU3NDQoJzB4MWFlJyldKCk7cmV0dXJuIF8weDVkZjU2MD97J2ZpbGUnOl8weDE0ZTljZVtfMHg1NzQ0KCcweDFhZicpXSgpLCdsb2MnOltfMHg1ZGY1NjBbXzB4NTc0NCgnMHgxYjAnKV0oKSxfMHg1ZGY1NjBbXzB4NTc0NCgnMHgxYjEnKV0oKV19Ont9O319Y2F0Y2goXzB4NTllZGExKXtfMHg0NDEyZDNbJ3JlamVjdCddKG5ldyBFcnJvcignRmFpbGVkXHgyMHRvXHgyMHJlbmRlclx4MjB0ZXN0XHgyMHJ1blx4MjBzY3JlZW5ceDIwc2hvdCcpKSxjb25zb2xlW18weDU3NDQoJzB4N2MnKV0oXzB4NTc0NCgnMHgxYjInKSxfMHg1OWVkYTFbXzB4NTc0NCgnMHgzMScpXSk7fX0sJ19wcmVwYXJlJzpmdW5jdGlvbihfMHg1YmI4ODgsXzB4MTRlOWNlKXtpZihfMHg1NzQ0KCcweDFiMycpPT09XzB4NTc0NCgnMHgxYjMnKSl7dmFyIF8weDU0MWMwYj10aGlzLF8weDIwZWI1Zj1fW18weDU3NDQoJzB4MWI0JyldKCksXzB4M2U4MTBjPV8weDU0MWMwYltfMHg1NzQ0KCcweDEwYicpXVtfMHg1NzQ0KCcweGNmJyldKF8weDE0ZTljZSxfMHgyMGViNWYpO3JldHVybiBfMHg0NDEyZDMoJ1N0YXJ0aW5nXHgyMHNhbmRib3hceDIwWyVzXScsXzB4M2U4MTBjKSxfMHg1NDFjMGJbJ193b3JrZXJQb29sJ11bXzB4NTc0NCgnMHgxMjInKV0oXzB4MTRlOWNlKVtfMHg1NzQ0KCcweDg5JyldKGZ1bmN0aW9uKCl7aWYoXzB4NTc0NCgnMHgxYjUnKT09PV8weDU3NDQoJzB4MWI2Jykpe18weDE0ZTljZVtfMHg1NzQ0KCcweDE3NCcpXShfMHg1YmI4ODgpO31lbHNle3JldHVybiBfMHg1NDFjMGJbXzB4NTc0NCgnMHhjJyldWydjYW5jZWxsZWQnXSgpP1FbXzB4NTc0NCgnMHgxYjcnKV0oeydydW5DYW5jZWxsZWQnOiEweDB9KTooXzB4NDQxMmQzKCdQcmVwYXJpbmdceDIwc2FuZGJveFx4MjBbJXNdJyxfMHgzZTgxMGMpLF8weDU0MWMwYltfMHg1NzQ0KCcweDEwYicpXVtfMHg1NzQ0KCcweDEyNScpXShfMHg1YmI4ODgsXzB4MjBlYjVmLF8weDE0ZTljZSkpO319KVtfMHg1NzQ0KCcweDg5JyldKGZ1bmN0aW9uKF8weDViYjg4OCl7aWYoXzB4NTc0NCgnMHgxYjgnKSE9PV8weDU3NDQoJzB4MWI5Jykpe3JldHVybiBfMHg1NDFjMGJbXzB4NTc0NCgnMHhjJyldW18weDU3NDQoJzB4MTMwJyldKCk/UVtfMHg1NzQ0KCcweDFiNycpXSh7J3J1bkNhbmNlbGxlZCc6ITB4MH0pOihfMHg0NDEyZDMoXzB4NTc0NCgnMHgxMjYnKSxfMHgzZTgxMGMpLFFbXzB4NTc0NCgnMHg3NCcpXSh7J2luc3RhbmNlJzp7J3Jlc3VtZSc6ZnVuY3Rpb24oKXtfMHg1NDFjMGJbJ19ldmFsdWF0ZU9uUGFnZSddKF8weDE0ZTljZSxmdW5jdGlvbigpeyRfJHRyYWNlcltfMHg1NzQ0KCcweDEyOScpXSgpO30pO30sJ3BpbmcnOmZ1bmN0aW9uKF8weDViYjg4OCl7XzB4NTQxYzBiW18weDU3NDQoJzB4MWJhJyldKF8weDE0ZTljZSxmdW5jdGlvbigpe30sXzB4NWJiODg4KTt9LCdjbG9zZSc6ZnVuY3Rpb24oKXtfMHg1NDFjMGJbXzB4NTc0NCgnMHgxYmInKV0oXzB4MTRlOWNlKTt9LCdjbG9zaW5nJzpmdW5jdGlvbigpe2lmKCdXVHpwRCc9PT1fMHg1NzQ0KCcweDFiYycpKXt2YXIgXzB4MTg3Mjk5PV8weDViYjg4OFtfMHg1NzQ0KCcweDExNycpXShfMHgyNGFkNzkrXzB4NTQxYzBiKVtfMHg1NzQ0KCcweGQzJyldKCc6Jyk7XzB4MTg3Mjk5WydsZW5ndGgnXT49MHgyJiYoXzB4NDQxMmQzPV8weDE0ZTljZVsnX3Byb2plY3QnXVtfMHg1NzQ0KCcweDFiZCcpXShwYXJzZUludChfMHgxODcyOTlbMHgwXSwweGEpfHxfMHgxODcyOTlbMHgwXSxwYXJzZUludChfMHgxODcyOTlbMHgxXSwweGEpKSxfMHg0NDEyZDMmJl8weDQ0MTJkM1snbGluZSddJiYoXzB4MjBlYjVmPV8weDE0ZTljZVtfMHg1NzQ0KCcweDFiZScpXShfMHg1YmI4ODgpLF8weDIwZWI1ZiYmKF8weDE5MjNlYltfMHgzZTgxMGNbXzB4NTc0NCgnMHg5YScpXV09XzB4MjBlYjVmKSxfMHgzZTgxMGNbXzB4NTc0NCgnMHgyOScpXShbXzB4NDQxMmQzWydmaWxlJ10sXzB4NDQxMmQzW18weDU3NDQoJzB4OGYnKV1dKSkpO31lbHNle18weDU0MWMwYlsnX3NjcmVlblNob3RSZWFkeSddPVFbJ3doZW4nXSgpO319LCdzdGFydCc6ZnVuY3Rpb24oXzB4NDQxMmQzKXtfMHg1NDFjMGJbJ19vcGVuUGFnZSddKF8weDE0ZTljZSxfMHg1YmI4ODgsXzB4NTQxYzBiW18weDU3NDQoJzB4MTdjJyldLGZ1bmN0aW9uKF8weDViYjg4OCl7aWYoXzB4NTc0NCgnMHgxYmYnKSE9PV8weDU3NDQoJzB4MWMwJykpe18weDQ0MTJkMyhfMHg1YmI4ODhbXzB4NTc0NCgnMHgxYzEnKV0pJiZfMHg1NDFjMGJbXzB4NTc0NCgnMHgxYmEnKV0oXzB4MTRlOWNlLGZ1bmN0aW9uKCl7aWYoXzB4NTc0NCgnMHgxYzInKT09PV8weDU3NDQoJzB4MWMyJykpeyRfJHRyYWNlcltfMHg1NzQ0KCcweDNkJyldKCk7fWVsc2V7cmV0dXJuIF8weDU0MWMwYltfMHg1NzQ0KCcweDFjMycpXShfMHg1YmI4ODgpO319KTt9ZWxzZXtfMHgyMGViNWZbXzB4NTc0NCgnMHgxYzQnKV0oXzB4MTRlOWNlW18weDU3NDQoJzB4MWM1JyldLF8weDE5MjNlYik7fX0pO319LCduYW1lJzpfMHgzZTgxMGMsJ3Nlc3Npb25JZCc6XzB4MjBlYjVmLCd3b3JrZXJJZCc6XzB4MTRlOWNlfSkpO31lbHNle3RoaXNbXzB4NTc0NCgnMHgxYzYnKV0oKTt9fSk7fWVsc2V7cHJvY2Vzc1tfMHg1NzQ0KCcweDFjNycpXSgpO319LCdjYW5jZWwnOmZ1bmN0aW9uKF8weDViYjg4OCl7dmFyIF8weDE0ZTljZT10aGlzO3JldHVybiBfMHgxNGU5Y2VbJ193b3JrZXJQb29sJ11bXzB4NTc0NCgnMHhkJyldKF8weDViYjg4OCk7fSwnc3RhcnQnOmZ1bmN0aW9uKCl7aWYoXzB4NTc0NCgnMHgxYzgnKT09PSdLR1JLUicpe3ZhciBfMHg1YmI4ODg9dGhpcztyZXR1cm4gXzB4NWJiODg4W18weDU3NDQoJzB4YycpXVtfMHg1NzQ0KCcweDNkJyldKF8weDViYjg4OFtfMHg1NzQ0KCcweDEwYicpXVtfMHg1NzQ0KCcweDFjOScpXSgpKVtfMHg1NzQ0KCcweDg5JyldKGZ1bmN0aW9uKF8weDE0ZTljZSl7aWYoXzB4NTc0NCgnMHgxY2EnKSE9PV8weDU3NDQoJzB4MWNiJykpe3JldHVybiBfMHg1YmI4ODhbJ193b3JrZXJQb29sJ11bXzB4NTc0NCgnMHgxMGYnKV0oXzB4NWJiODg4W18weDU3NDQoJzB4MTBiJyldW18weDU3NDQoJzB4Y2InKV0oKSksUVtfMHg1NzQ0KCcweDc0JyldKF8weDE0ZTljZSk7fWVsc2V7dmFyIF8weDM5YTg4Mz10aGlzW18weDU3NDQoJzB4MWNjJyldKF8weDViYjg4OCxfMHgxNGU5Y2UpO3JldHVybnsnbGluZSc6XzB4MzlhODgzW18weDU3NDQoJzB4OWEnKV0sJ2NvbHVtbic6XzB4MzlhODgzW18weDM5YTg4M1tfMHg1NzQ0KCcweDlhJyldLTB4MV1bJ2xlbmd0aCddfTt9fSk7fWVsc2V7cmV0dXJuIF8weDE0ZTljZShudWxsLF8weDViYjg4OCk7fX0sJ3N0b3AnOmZ1bmN0aW9uKCl7aWYoXzB4NTc0NCgnMHgxY2QnKT09PV8weDU3NDQoJzB4MWNkJykpe3ZhciBfMHg1YmI4ODg9dGhpcztfMHg1YmI4ODhbXzB4NTc0NCgnMHgxN2UnKV0mJihfMHg1YmI4ODhbXzB4NTc0NCgnMHgxN2UnKV1bXzB4NTc0NCgnMHg5JyldKHsndHlwZSc6XzB4NTc0NCgnMHgxMTAnKX0pLF8weDViYjg4OFsnX2hvc3QnXVtfMHg1NzQ0KCcweDFjZScpXSgpLGRlbGV0ZSBfMHg1YmI4ODhbXzB4NTc0NCgnMHgxN2YnKV0sZGVsZXRlIF8weDViYjg4OFtfMHg1NzQ0KCcweDE3ZScpXSksXzB4NWJiODg4W18weDU3NDQoJzB4YycpXVtfMHg1NzQ0KCcweDExMCcpXSgpO31lbHNle18weDE0ZTljZVsnY2xvc2UnXSgpO319LCdfcmVxdWVzdFdpdGhDb3JyZWxhdGlvbklkJzpmdW5jdGlvbihfMHg1YmI4ODgsXzB4MTRlOWNlKXtpZihfMHg1NzQ0KCcweDFjZicpIT09XzB4NTc0NCgnMHgxZDAnKSl7dmFyIF8weDU0MWMwYj10aGlzLF8weDQ0MTJkMz0rK18weDE5MjNlYixfMHgyMGViNWY9XzB4NTQxYzBiW18weDU3NDQoJzB4MTdmJyldW18weDQ0MTJkM109eydkb25lJzpfMHgxNGU5Y2V9O18weDViYjg4OFsnaWQnXT1fMHg0NDEyZDMsXzB4NTQxYzBiWydfaG9zdCddWydzZW5kJ10oXzB4NWJiODg4KSxfMHgyMGViNWZbJ3RpbWVvdXQnXT1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7ZGVsZXRlIF8weDU0MWMwYltfMHg1NzQ0KCcweDE3ZicpXVtfMHg0NDEyZDNdO30sMHgxMjRmODApO31lbHNle3ZhciBfMHhmOGIzMWQ9XzB4NWJiODg4W18weDU3NDQoJzB4MWQxJyldKCksXzB4NDllMTIxPSEhXzB4MTRlOWNlW18weDU3NDQoJzB4MWQyJyldW18weGY4YjMxZF07ZGVsZXRlIF8weDE0ZTljZVtfMHg1NzQ0KCcweDFkMycpXVtfMHhmOGIzMWRdLGRlbGV0ZSBfMHgxNGU5Y2VbXzB4NTc0NCgnMHgxZDInKV1bXzB4ZjhiMzFkXSxfMHgxNGU5Y2VbJ19jaGFuZ2VkJ109XzB4NDllMTIxfHxfMHgxNGU5Y2VbJ19jaGFuZ2VkJ107fX0sJ19yZXNwb25zZVdpdGhDb3JyZWxhdGlvbklkJzpmdW5jdGlvbihfMHg1YmI4ODgpe3ZhciBfMHgxNGU5Y2U9dGhpc1tfMHg1NzQ0KCcweDE3ZicpXVtfMHg1YmI4ODhbJ2lkJ11dO2RlbGV0ZSB0aGlzW18weDU3NDQoJzB4MTdmJyldW18weDViYjg4OFsnaWQnXV0sXzB4MTRlOWNlJiYoY2xlYXJUaW1lb3V0KF8weDE0ZTljZVsndGltZW91dCddKSxfMHgxNGU5Y2VbXzB4NTc0NCgnMHhlMicpXShfMHg1YmI4ODgpKTt9fSxfMHgxNGU5Y2VbJ2V4cG9ydHMnXT1fMHgxY2IyMGM7fSx7Jy4vYnJvd3NlckVudmlyb25tZW50JzoweDQsJy4vcnVuV29ya2VyUG9vbCc6MHgxZCwnY2hpbGRfcHJvY2Vzcyc6dm9pZCAweDAsJ3BhdGgnOnZvaWQgMHgwfV0sNzpbZnVuY3Rpb24oXzB4NWNjZTI4LF8weGE0MDM1ZixfMHgzYzUxNjApeyd1c2Ugc3RyaWN0Jzt2YXIgXzB4Mzk5Y2Y1PWdsb2JhbFtfMHg1NzQ0KCcweDFkNCcpXTtpZihfMHg1NzQ0KCcweDFkNScpIT09XzB4Mzk5Y2Y1Wyd0b1N0cmluZyddKCl8fF8weDU3NDQoJzB4MWQ2JykhPT1fMHgzOTljZjVbXzB4NTc0NCgnMHg1NycpXVtfMHg1NzQ0KCcweDU3JyldKCkpcmV0dXJuIHZvaWQoXzB4YTQwMzVmW18weDU3NDQoJzB4YicpXT17J2NyZWF0ZSc6ZnVuY3Rpb24oKXt9fSk7dmFyIF8weDJhZDljYT1fMHg1Y2NlMjgoXzB4NTc0NCgnMHhlJykpLF8weDE1NTUzZD1mdW5jdGlvbihfMHhhNDAzNWYpe3ZhciBfMHgzYzUxNjAsXzB4Mzk5Y2Y1PV8weDVjY2UyOChfMHg1NzQ0KCcweDFkNycpKTtpZihfMHhhNDAzNWZbJ19tb2RlbCddKV8weDNjNTE2MD1fMHhhNDAzNWZbXzB4NTc0NCgnMHgxZDgnKV07ZWxzZXtpZihfMHg1NzQ0KCcweDFkOScpIT09XzB4NTc0NCgnMHgxZGEnKSl7dmFyIF8weDJhZDljYT1fMHg1Y2NlMjgoJy4vZXh0ZW5zaW9uL3NlcnZlci9tb2RlbCcpO18weDNjNTE2MD1uZXcgXzB4MmFkOWNhKHsnZmlsZUlkQnlQYXRoJzpmdW5jdGlvbihfMHg1Y2NlMjgpe2lmKCdURVlSZichPT1fMHg1NzQ0KCcweDFkYicpKXtyZXR1cm4gXzB4YTQwMzVmW18weDU3NDQoJzB4ODcnKV0oXzB4NWNjZTI4KTt9ZWxzZXtyZXR1cm4gXzB4NTc0NCgnMHgxMzgnKSE9PV8weDVjY2UyOFtfMHg1NzQ0KCcweDFkYycpXSYmXzB4NTc0NCgnMHgxZGQnKSE9PV8weDVjY2UyOFtfMHg1NzQ0KCcweDFkYycpXSYmIV8weDVjY2UyOFtfMHg1NzQ0KCcweDFkZScpXTt9fSwncHJvamVjdCc6XzB4YTQwMzVmfSk7fWVsc2V7XzB4YTQwMzVmW18weDU3NDQoJzB4MWQ4JyldWydhZ2dyZWdhdGVGaWxlQ292ZXJhZ2UnXShfMHgzOTljZjUpO3ZhciBfMHgxOGJmZmU9XzB4YTQwMzVmW18weDU3NDQoJzB4MWRmJyldKF8weDM5OWNmNSk7XzB4MThiZmZlJiZfMHgxOGJmZmVbXzB4NTc0NCgnMHgxZTAnKV0mJihkZWxldGUgXzB4MThiZmZlW18weDU3NDQoJzB4MWUwJyldLF8weDNjNTE2MFtfMHgzOTljZjVbXzB4NTc0NCgnMHgxZDEnKV0oKV09XzB4MThiZmZlKTt9fV8weGE0MDM1ZltfMHg1NzQ0KCcweDFlMScpXT1uZXcgXzB4Mzk5Y2Y1KF8weDNjNTE2MCksXzB4YTQwMzVmW18weDU3NDQoJzB4MWUxJyldWydvbiddKCdtZXNzYWdlJyxmdW5jdGlvbihfMHg1Y2NlMjgpe3JldHVybiBfMHg1NzQ0KCcweDFlMicpPT09XzB4NWNjZTI4W18weDU3NDQoJzB4NCcpXSYmXzB4YTQwMzVmW18weDU3NDQoJzB4N2InKV0oXzB4NTc0NCgnMHgzMScpLF8weDVjY2UyOCk7fSk7fTtfMHhhNDAzNWZbJ2V4cG9ydHMnXT17J2NyZWF0ZSc6ZnVuY3Rpb24oXzB4YTQwMzVmLF8weDNjNTE2MCl7aWYoXzB4NTc0NCgnMHgxZTMnKT09PV8weDU3NDQoJzB4MWU0Jykpe19bXzB4NTc0NCgnMHgxZTUnKV0oXzB4NWNjZTI4KT90aGlzW18weDU3NDQoJzB4MWU2JyldPV8weDVjY2UyODp0aGlzW18weDU3NDQoJzB4MWU2JyldJiYodGhpc1tfMHg1NzQ0KCcweDFlNicpXShfMHg1Y2NlMjgpLGRlbGV0ZSB0aGlzW18weDU3NDQoJzB4MWU2JyldLGRlbGV0ZSB0aGlzW18weDU3NDQoJzB4MWU3JyldKTt9ZWxzZXtpZihfMHgzYzUxNjApe2lmKF8weDU3NDQoJzB4MWU4Jyk9PT0nbmZzdlUnKXtyZXR1cm4gUVtfMHg1NzQ0KCcweDFlOScpXShfMHgzYzUxNjBbXzB4NTc0NCgnMHgxZWEnKV0sXzB4NWNjZTI4KTt9ZWxzZXtpZihfMHhhNDAzNWZbXzB4NTc0NCgnMHgxZWInKV0pdHJ5e2lmKF8weDU3NDQoJzB4MWVjJyk9PT1fMHg1NzQ0KCcweDFlZCcpKXt0aGlzW18weDU3NDQoJzB4MWQ4JyldW18weDU3NDQoJzB4MWVlJyldKF8weDVjY2UyOFtfMHg1NzQ0KCcweDE0ZicpXSk7fWVsc2V7dmFyIF8weDE0ZmYwYj1fMHhhNDAzNWZbXzB4NTc0NCgnMHgxZWInKV1bXzB4NTc0NCgnMHhkMycpXSgnLScpLF8weDQwNWFjMD1uZXcgXzB4Mzk5Y2Y1KF8weDE0ZmYwYlsweDFdKycvJytfMHgxNGZmMGJbMHgwXSsnLycrXzB4MTRmZjBiWzB4Ml0pO18weDQwNWFjMFsnc2V0RGF0ZSddKF8weDQwNWFjMFtfMHg1NzQ0KCcweDFlZicpXSgpKzB4MSk7dmFyIF8weDI1NzQyZj1uZXcgXzB4Mzk5Y2Y1KDB4MTZkNWM0NDJlNGMpO2lmKF8weDI1NzQyZlsnc2V0SG91cnMnXSgweDAsMHgwLDB4MCwweDApLCFwcm9jZXNzW18weDU3NDQoJzB4NjcnKV1bXzB4NTc0NCgnMHgxM2YnKV0mJl8weDQwNWFjMDxfMHgyNTc0MmZ8fHByb2Nlc3NbXzB4NTc0NCgnMHg2NycpXVtfMHg1NzQ0KCcweDEzZicpXSYmXzB4YTQwMzVmW18weDU3NDQoJzB4MWYwJyldKXt2YXIgXzB4ZmZjYzQzPXByb2Nlc3NbXzB4NTc0NCgnMHg2NycpXVtfMHg1NzQ0KCcweDEzZicpXT9fMHg1NzQ0KCcweDFmMScpOl8weDU3NDQoJzB4MWYyJyksXzB4NGMyNTdhPXByb2Nlc3NbXzB4NTc0NCgnMHg2NycpXVtfMHg1NzQ0KCcweDEzZicpXT9fMHg1NzQ0KCcweDFmMycpOl8weDU3NDQoJzB4MWY0Jyk7cmV0dXJuIFFbXzB4NTc0NCgnMHgxYjcnKV0oeydtZXNzYWdlJzpfMHg1NzQ0KCcweDFmNScpK18weGZmY2M0MytfMHg1NzQ0KCcweDFmNicpK18weDRjMjU3YSsnLidbJ3NwbGl0J10oJycpW18weDU3NDQoJzB4MWY3JyldKClbJ2pvaW4nXSgnJyksJ25vRGV0YWlscyc6ITB4MH0pO319fWNhdGNoKF8weDU2ZDcwZCl7fXByb2Nlc3NbXzB4NTc0NCgnMHg2NycpXVtfMHg1NzQ0KCcweDEzZicpXXx8XzB4MTU1NTNkKF8weDNjNTE2MCk7dmFyIF8weDE0N2MwZT1fMHg1Y2NlMjgoXzB4NTc0NCgnMHgxZjgnKSksXzB4NTQxZGZhPTB4N2QwO2lmKF8weGE0MDM1ZlsnbGljZW5zZSddJiZfMHhhNDAzNWZbXzB4NTc0NCgnMHgxZjknKV0hPT1fMHgzYzUxNjBbJ193YWxsYWJ5RW1haWwnXSYmIV8weGE0MDM1ZltfMHg1NzQ0KCcweDFmYScpXSl7aWYoXzB4NTc0NCgnMHgxZmInKSE9PV8weDU3NDQoJzB4MWZjJykpe3ZhciBfMHg2NjFjNjE9c2V0SW50ZXJ2YWwoZnVuY3Rpb24oKXtfMHgxNDdjMGVbJ2VtaXQnXShfMHg1NzQ0KCcweDFmZCcpLF8weGE0MDM1ZltfMHg1NzQ0KCcweDFmOScpXSk7fSxfMHg1NDFkZmEpO18weDE0N2MwZVsnb24nXShfMHg1NzQ0KCcweDFmZCcpLGZ1bmN0aW9uKF8weDVjY2UyOCxfMHgzOTljZjUpe2lmKF8weGE0MDM1ZltfMHg1NzQ0KCcweDFmOScpXSYmXzB4NWNjZTI4JiZfMHhhNDAzNWZbJ2xpY2Vuc2UnXT09PV8weDVjY2UyOCl7aWYoXzB4NTc0NCgnMHgxZmUnKSE9PV8weDU3NDQoJzB4MWZlJykpe18weDJhZDljYVtfMHg1Y2NlMjhbJ2tleSddKCldPV8weDVjY2UyODt9ZWxzZXtpZihfMHg1NzQ0KCcweDFmZicpPT09XzB4Mzk5Y2Y1fHxfMHg1NzQ0KCcweDEzOCcpPT09XzB4Mzk5Y2Y1KXJldHVybjtfMHgzYzUxNjBbJ19lbWl0J10oeyd0eXBlJzpfMHg1NzQ0KCcweDIwMCcpLCdhZGRyZXNzJzpfMHgzOTljZjV9KTt9fX0pLF8weDNjNTE2MFtfMHg1NzQ0KCcweDIwMScpXT17J3N0b3AnOmZ1bmN0aW9uKCl7Y2xlYXJJbnRlcnZhbChfMHg2NjFjNjEpLF8weDE0N2MwZVsnc3RvcCddKCk7fX07fWVsc2V7dHJ5e3JldHVybiBfMHg1Y2NlMjgoXzB4MmFkOWNhWydqb2luJ10oXzB4YTQwMzVmLF8weDU3NDQoJzB4MjAyJyksXzB4M2M1MTYwKSk7fWNhdGNoKF8weDRhYjY2ZSl7dmFyIF8weDMyYjI0Mz1fMHg1Y2NlMjgoJ21vZHVsZScpLF8weDJhM2U4Mj1uZXcgXzB4MzJiMjQzKCcuJyxudWxsKTtyZXR1cm4gXzB4MmEzZTgyWydmaWxlbmFtZSddPV8weDJhZDljYVtfMHg1NzQ0KCcweDU0JyldKF8weGE0MDM1ZixfMHg1NzQ0KCcweDIwMycpKSxfMHgyYTNlODJbXzB4NTc0NCgnMHgyMDQnKV09XzB4MzJiMjQzW18weDU3NDQoJzB4MjA1JyldKF8weGE0MDM1ZiksXzB4MzJiMjQzW18weDU3NDQoJzB4MjA2JyldKF8weDNjNTE2MCxfMHgyYTNlODIsITB4MSk7fX19cmV0dXJuIF8weGE0MDM1ZlsnbGljZW5zZSddP1FbXzB4NTc0NCgnMHg3NCcpXSghMHgwKTpfMHgzYzUxNjBbXzB4NTc0NCgnMHgyMDcnKV0oXzB4MmFkOWNhW18weDU3NDQoJzB4MjA4JyldKF9fZGlybmFtZSkpW18weDU3NDQoJzB4N2EnKV0oZnVuY3Rpb24oKXtyZXR1cm4gUVtfMHg1NzQ0KCcweDc0JyldKHt9KTt9KVtfMHg1NzQ0KCcweDg5JyldKGZ1bmN0aW9uKF8weDVjY2UyOCl7aWYoXzB4NTc0NCgnMHgyMDknKT09PSdiVUdzVicpe2lmKF8weDVjY2UyOCYmXzB4NWNjZTI4WydtdGltZSddKXt2YXIgXzB4YTQwMzVmPV8weDVjY2UyOFtfMHg1NzQ0KCcweDIwYScpXTtpZihfMHhhNDAzNWZbJ3NldERhdGUnXShfMHg1Y2NlMjhbXzB4NTc0NCgnMHgyMGEnKV1bXzB4NTc0NCgnMHgxZWYnKV0oKSsweDFlKSxuZXcgXzB4Mzk5Y2Y1KCk+XzB4YTQwMzVmKXJldHVybiBRWydyZWplY3QnXSh7J21lc3NhZ2UnOl8weDU3NDQoJzB4MjBiJylbJ3NwbGl0J10oJycpWydyZXZlcnNlJ10oKVtfMHg1NzQ0KCcweDU0JyldKCcnKSwnbm9EZXRhaWxzJzohMHgwfSk7fXJldHVybiBRWyd3aGVuJ10oITB4MCk7fWVsc2V7dmFyIF8weDEwM2ViNz1fMHgxNTU1M2RbXzB4NTc0NCgnMHg0ZCcpXVtfMHg1NzQ0KCcweDIwYycpXShfMHgzYzUxNjApO18weGE0MDM1Zis9J1x4MGEtXHgyMCcrKF8weDEwM2ViNz9fMHgxMDNlYjdbJ3BhdGgnXTpfMHg1NzQ0KCcweGUwJykpO319KTt9fXJldHVybiBfMHg1Y2NlMjgoJy4vZXh0ZW5zaW9uL2NvcmUnKTt9fX07fSx7Jy4vZXh0ZW5zaW9uL2NvcmUnOjB4OCwnLi9leHRlbnNpb24vc2VydmVyL21vZGVsJzoweDEyLCcuL2V4dGVuc2lvbi9zZXJ2ZXIvbXVsdGljYXN0ZXInOjB4MTMsJy4vZXh0ZW5zaW9uL3VpL3NlcnZpY2UnOjB4MTgsJ3BhdGgnOnZvaWQgMHgwfV0sODpbZnVuY3Rpb24oXzB4NTQyMjkxLF8weDFjMjYzOSxfMHgxNjQyMDQpeyd1c2Ugc3RyaWN0Jzt2YXIgXzB4MjYzOWI2PXRoaXMmJnRoaXNbXzB4NTc0NCgnMHgyMGQnKV18fGZ1bmN0aW9uKCl7aWYoXzB4NTc0NCgnMHgyMGUnKT09PV8weDU3NDQoJzB4MjBlJykpe3ZhciBfMHg1NDIyOTE9ZnVuY3Rpb24oXzB4MWMyNjM5LF8weDE2NDIwNCl7aWYoXzB4NTc0NCgnMHgyMGYnKT09PV8weDU3NDQoJzB4MjBmJykpe3JldHVybihfMHg1NDIyOTE9T2JqZWN0W18weDU3NDQoJzB4ZjInKV18fHsnX19wcm90b19fJzpbXX1pbnN0YW5jZW9mIEFycmF5JiZmdW5jdGlvbihfMHg1NDIyOTEsXzB4MWMyNjM5KXtfMHg1NDIyOTFbXzB4NTc0NCgnMHhmMycpXT1fMHgxYzI2Mzk7fXx8ZnVuY3Rpb24oXzB4NTQyMjkxLF8weDFjMjYzOSl7Zm9yKHZhciBfMHgxNjQyMDQgaW4gXzB4MWMyNjM5KV8weDFjMjYzOVsnaGFzT3duUHJvcGVydHknXShfMHgxNjQyMDQpJiYoXzB4NTQyMjkxW18weDE2NDIwNF09XzB4MWMyNjM5W18weDE2NDIwNF0pO30pKF8weDFjMjYzOSxfMHgxNjQyMDQpO31lbHNle2lmKCFfMHg1NDIyOTF8fH5fMHg1NDIyOTFbXzB4NTc0NCgnMHg3MCcpXShfMHg1NzQ0KCcweDE3MicpKXx8fl8weDU0MjI5MVtfMHg1NzQ0KCcweDcwJyldKCdfX3dhbGxhYnlfXycpKXJldHVybiBfMHg1NDIyOTE7dmFyIF8weGViY2UxPV8weDU0MjI5MTtpZihfMHhlYmNlMT1fMHhlYmNlMVtfMHg1NzQ0KCcweDlkJyldKHRoaXNbJ19icm93c2VyRW52aXJvbm1lbnQnXVtfMHg1NzQ0KCcweGNiJyldKCksJycpLF8weGViY2UxPT09XzB4NTQyMjkxKXJldHVybiBfMHg1NDIyOTE7dmFyIF8weDE1N2ZkNT1fMHhlYmNlMVtfMHg1NzQ0KCcweDIxMCcpXSgnPycpO18weDE1N2ZkNT49MHgwJiYoXzB4ZWJjZTE9XzB4ZWJjZTFbXzB4NTc0NCgnMHgyMTEnKV0oMHgwLF8weDE1N2ZkNSkpO3ZhciBfMHg0MDc0ZDM9XzB4ZWJjZTEmJnRoaXNbXzB4NTc0NCgnMHg0ZCcpXVtfMHg1NzQ0KCcweDE3MycpXShfMHhlYmNlMSk7cmV0dXJuIF8weDQwNzRkMz9fMHg1NDIyOTErKH5fMHgxNTdmZDU/JyYnOic/JykrXzB4NDA3NGQzW18weDU3NDQoJzB4NzInKV0rXzB4NTc0NCgnMHgyMTInKStfMHg0MDc0ZDNbJ2lkJ106XzB4NTQyMjkxO319O3JldHVybiBmdW5jdGlvbihfMHgxYzI2MzksXzB4MTY0MjA0KXtmdW5jdGlvbiBfMHgyNjM5YjYoKXt0aGlzWydjb25zdHJ1Y3RvciddPV8weDFjMjYzOTt9XzB4NTQyMjkxKF8weDFjMjYzOSxfMHgxNjQyMDQpLF8weDFjMjYzOVtfMHg1NzQ0KCcweDEwZCcpXT1udWxsPT09XzB4MTY0MjA0P09iamVjdFsnY3JlYXRlJ10oXzB4MTY0MjA0KTooXzB4MjYzOWI2W18weDU3NDQoJzB4MTBkJyldPV8weDE2NDIwNFtfMHg1NzQ0KCcweDEwZCcpXSxuZXcgXzB4MjYzOWI2KCkpO307fWVsc2V7dmFyIF8weDRkYjcyYj10aGlzW18weDU3NDQoJzB4MWQ4JyldW18weDU3NDQoJzB4MjEzJyldKF8weDU0MjI5MVtfMHg1NzQ0KCcweGUnKV0pO18weDRkYjcyYiYmKF8weDRkYjcyYltfMHg1NzQ0KCcweDIxNCcpXSgpLHRoaXNbXzB4NTc0NCgnMHgyMTUnKV0oXzB4NGRiNzJiKSk7fX0oKSxfMHg1YzljOGI9Z2xvYmFsWydEYXRlJ107aWYoXzB4NTc0NCgnMHgxZDUnKSE9PV8weDVjOWM4YlsndG9TdHJpbmcnXSgpfHxfMHg1NzQ0KCcweDFkNicpIT09XzB4NWM5YzhiW18weDU3NDQoJzB4NTcnKV1bXzB4NTc0NCgnMHg1NycpXSgpKV8weDFjMjYzOVsnZXhwb3J0cyddPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gXzB4NTQyMjkxKCl7fXJldHVybiBfMHg1NDIyOTE7fSgpO2Vsc2V7dmFyIF8weDFmZjQxMz1fMHg1NDIyOTEoXzB4NTc0NCgnMHgyMTYnKSksXzB4NDkyYmJhPV8weDU0MjI5MSgncGF0aCcpLF8weDMwMjk1ZD1fMHg1NDIyOTEoJ29zJyksXzB4MzU4NjllPV8weDU0MjI5MShfMHg1NzQ0KCcweDIxNycpKSxfMHgzMTBkMjE9XzB4NTQyMjkxKF8weDU3NDQoJzB4MjE4JykpLF8weDUzNWZhNT1fMHg1NDIyOTEoXzB4NTc0NCgnMHgyMTknKSlbXzB4NTc0NCgnMHgyMWEnKV0sXzB4MjdkMzRkPV8weDU0MjI5MShfMHg1NzQ0KCcweDIxYicpKVtfMHg1NzQ0KCcweDIxYycpXSxfMHgxOTViZjE9XzB4NTQyMjkxKF8weDU3NDQoJzB4MjFiJykpW18weDU3NDQoJzB4MjFkJyldLF8weDU5NjZiMj1fMHg1NDIyOTEoXzB4NTc0NCgnMHgyMWUnKSksXzB4MTcyZDU1PV8weDU0MjI5MShfMHg1NzQ0KCcweDIxZicpKSxfMHgxZWRmOTk9XzB4NTQyMjkxKF8weDU3NDQoJzB4MjIwJykpLF8weDQ1OWRiND1fMHg1NDIyOTEoXzB4NTc0NCgnMHgyMjEnKSksXzB4MmY1Y2ZkPWxvZ2dlclsnY3JlYXRlJ10oXzB4NTc0NCgnMHgyMjInKSlbXzB4NTc0NCgnMHg1YScpXSxfMHg0MzA2NDg9MHg5MjdjMCxfMHg1ODhkNWM9MHgxYjU4LF8weDEzOGQ0MD0weDUsXzB4NDJlNWUzPTB4ZSxfMHg0ODBkZDU9XzB4NTc0NCgnMHgyMjMnKSxfMHg1ZDllZGQ9J2NvbnRpbnVlLXRyaWFsLWxpbmsnLF8weDU4YTBlNT1fMHg1NzQ0KCcweDIyNCcpLF8weDQ3NTZiMz1fMHg1NzQ0KCcweDIyNScpLF8weDJhNTllND1fMHg1NzQ0KCcweDIyNicpLF8weDI2MTVkOD1fMHg1NzQ0KCcweDIyNycpLF8weDlkNzY5ND0ndmFsdWVFeHBsb3JlckV4cGFuc2lvbkxpbWl0YXRpb25JbkNvbW11bml0eUVkaXRpb24nLF8weDRiODhmNj17J0F0b20nOictLS0tLUJFR0lOXHgyMFBVQkxJQ1x4MjBLRVktLS0tLVx4MGFNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXF5ZFFCWnBlNHZQbVd2SDJ5cmlIXHgwYThmL0Jtb2txY2xEcUpOSlVDb1YrUlFhdzE2cnQvaTNrUlVVSHFZWFYxb3p4UHZRc056QXBQcmFwKzIxTXFWVFRceDBhZ3pwU0pCNkhuaFlhYkFPTWFodXZ6YVpseHRFVVZBb2Rad0dYbjdiZERMNnRiN1dJam9oaEdteWZzREt2KzJwaVx4MGFWVm5CUCtxR1JYdHRhdE55S2swbVRPZmJVYjgwbXNxNlMzTW5maE04U3VPbzgzK3hZL3RaNWlQR3d6ajExYlNGXHgwYXR2a2JNQWNYM1ljS2hvRlJteThLZ0R1T3hqUThtZTgyRHk2U2dzaGxzYWU4LzJTTlZ6MGlNY2dDSVRBU1hPdVhceDBhMEYwUUZDcmVqeFhUVHpnaDdUQmU5YTR4NTFpWUtNZk0xd3FxWGhWLzN5Y3N6SFpyd0dFZjhGY283M0xXdGZvbVx4MGFId0lEQVFBQlx4MGEtLS0tLUVORFx4MjBQVUJMSUNceDIwS0VZLS0tLS0nLCdWU0NvZGUnOl8weDU3NDQoJzB4MjI4JyksJ1N1YmxpbWUnOl8weDU3NDQoJzB4MjI5JyksJ0ZyZWVkb20nOl8weDU3NDQoJzB4MjJhJyksJ1F1b2trYSc6XzB4NTc0NCgnMHgyMmInKSwnSW50ZWxsaUonOl8weDU3NDQoJzB4MjJjJyksJ1ZTJzpfMHg1NzQ0KCcweDIyZCcpfSxfMHgzY2Q2ZjQ9eydOT2ZUaDZWNUxGYnVFSU5zbUxYRTJ3OVMzMTZjSHhlVVpGTWJDcDM3Rit0R3JsTFFwblpDb1ZFQnpDTUNQdjZEaTRWMTFLUE5MSGl4ZGd3ckNGeDhPUFBONjQ4c2pJMXpWTUl0TXBrRHRiLytLdzR6MmJSSUF2cEl2Zyt4R05vQ1IzV0NOSTlhWWU1VXB3UUF3dGF2a2diU09kdHdGam1JL21pUzBXNmpXYUd1TnRCR3VkRVNVcmpNMFRlM3RjRlBDTVR3MFJYNXlpSXJsZVNkQkpVeE9TWkxTcGYwZ2w1YVkrTXNLVTk4dHpNalV1c2tGZGs3SXZqVE1lQ0tMb1p6d2h3MXRLMW11cFBObUNiVUd1a1Mrd1RVRlJWUEFvbENzVHpHL1JERWhWd2NLZkwrOC9yR011UUJrNFZ4ZzZCcnppOHo5WUpMRHZsa2hkckFOdkFXZncnOjB4MSwnRWNIa3YrWGt5bmN4UkRZV0VQUWJvN1hWbGpQRDdUbjB6MHB6bURlKzdvbk9VcGdhNUFza0tJMDJyRFRZK0UrZFY0L2kvZmFYbjB2UWp0Qnc3RVJrd0wzd1dVMU14cng1TWhoc252WjJKM0xjcGpvaXUyVEpobGJQeUkxdlZHL0ZBTjdYNW1XRWx1cm5SUUdqV0FwV05TQ0IvZjhQZmVkVWJtQ25pL3Nlbk04OVFOcitYMzRnMGNqN1pDUTNZWHZvN3RLTXAzUWt3bk95SGh5MG00K3VpOFhkSlhGTzhTNGpYU09ISS96K3I1MzJXQS9JQUt5S20zWDRVaVNaaUxUc0x2RjU1RmJHaTFKVjFhbE95RmtEcFZOeHhKMktRRE8yeUUzbytjaWxiVjgya1N3KzF0RmwvNm03bG5vd2EzQ0haa051WFh6V0UvTDc5QTBHSGI4RnFnJzoweDEsJ29qOXRBUWFLb0NHWkxsbWFncWVOM1RFQlVvcFExcXBjT1JJYzB3Z1Y1K1REMzROYWhHUFVoV2hVUmEvWnR6bDdFWm91dDM2Y2VSdE1HMlJMMCtpWjdGZWNjUlZ4MlU0TW1PbUhqTmxBV2ZDbSswOHQ2VXdpN0EvTndPU3JJbjJEVlk2cldPY01pRUpZOGliWWV6Z0FXdXQ3K1dBL05GMVdNdWRHL3pXZ3VXTzU5dUFhUHhHdEZ0WU43QU83UlpEQ2xhcm9yK0tPTU5nc1o0L2JjNjRDZk4zeHVmMkRPZE4wSDdvNlVKS2tNSmlDcGRjRU15UzNWdUhSbEVWZFVNajNqZWZTZUNNRkZhYmxwVzBZc0NlQkE1N1pTd1lwSCtOSjVpK2tZZDN2Y2wrc3NRUXlURzVsWVIrYjJxVlg1RFpVVU11dDBXVE12KzNISkJ6TXBTbk42dyc6MHgxLCdxbnJYZ21jdFQrZDhBRTcwSW8xVVFvKzdIbGhORW1xSFRWc2lyYllUK3oyOEtONXB1NnppZjlCR0c3RFkwU3Z6bEFPQ1B5clpOejNveEk5Q253WVQyZmFEYzl4amJSbGZianAwOVVNMGI3b3IwNXNYRkcySzNIVWZjdk02QzhobTl1WXJlaVc0S0wxbDBFM0Z1SGhleHVHeW9mYUJ1bkYyMXVjRWJxVzFITG5wdUNsTisrNGhiK1VnSFZteEt6NTdPMHZOVWVMaytqcVRVK0JFTVh6Tk1jWUtVUXpvR3EwVDBzWi9abnVnTXlWMlJRbFB4bVRobWdHeERJK1FRMnpxd2lHbVF5YXNIVEtpNVZHa1BYNlZqVWUwY1VyRVAvQm00L1Z1d2htV2pFZVJMNnRvTjk0em9FYWVQQ0kreW5Cd0ZPMUt2RHdvdjZmSVgwMmFvMm12S3cnOjB4MSwnYjN2TThnRnNuaHdxOGUrZnUyeHVwVUViTkxXc1NWUjJ0YmVTRHVMTGpJN0N5Q25RWE96d2VoL0RPL2RMNis2dk9YVzdaU1A3TS9DT3YxendtL1d6SEYxV0tKZVNZcldvVFdYNDlmSEJWTE9MTmJFd05IeVh0M0R3Wnl1a2ZkQUJVU1lVQ2F0azB2OGFxcG50NDk2L1RVVEdnWXZFak5JS29aMk5XNHRySkJ5QzcvK2gyS0xEU1NxY2doYWpjQStaY0V6NzZOb3JBSm4rNWNER2JNUG9ZY282cFlrYXh3citQa0twVEJocnU4WHRUVHl4eFZZMDAxSmJWbmlVN3ZQYmVXWVhjRTNnVnRtcVE0ZjNLc2NWZThEcjYwYzZpSUo1K3ZrUFM3LzRrRlM0S05CRVlRY1VxL3FiOU5oVkN5UVFUaGFFY0drbk1PdE1lUGN3dWFLSUxBJzoweDEsJ0M4dGV6T3hZZW9RSGttUzlPeEg2YjN0dHN3Y0c2cFoycmk3M0QzQ3QreG1RcUh6M3E4WldhcjkyVysyVFVyaVh5aE9ORlJ0Y2VXcHhJcjRYY2FzNEoxbG5zUmo5c2R2ZTN2a0FtMytJVDllb0hNdFpnTU9CRU43ZW92VFZBaDk0SytvNUJ3WjhDS2EyUHplSk1Ic3RGcndrRnNLUjJQaEtELzA1cGQ3Szc3OHQ5b0N4T3Q1QzdxbGE1bE1neUpablFDaU9xRnoyTEtxdkk4K3A1cjc5MFo4TEU0T1BRY1AzbU5MKzV3dktXcmdoc002MGl1VDNxR2x1eVJBS3kvc25MOHV0Mm4zd3Z6bzR4K1RVbWJxSVdsY2NBREt4bEwxRU4rdWlaSGcxa21pdXpyQlJTVVc2Z2ovRWlybWk0THN2YUpYaUNqbXFvMkIveEhEdTR2NXJmUSc6MHgxLCd2S2MxZzA4TG91cE9QQ0hHWUdKR0dsY2ZZampGTzk3VkV5a0p2TldKcXBxOHl0U05CQlVaQWRTSVU5ckNlYUVKbzhjYmhOSllnNVV2YkphNXlZeWR3dDZ5WkJvSmhGS1laMFVsUSt1Q1F2T0hKWEZkS3pIY2ZOeWtieThPZk9zOExSYU9IY0Z1SDY3QzhLZlJqYUhpbmp3MXNMUlRnQlF1NjZkQ21UdmdKeXpQdHdqUFM5NVE5U1Z3OFFLNXdoYjBTMnJMcC9CbE1yaDVZaDZqRWlGRHE3VjNNeCtBZXNFbGRYekpiV0hmM2pkTEpKcURXL1YyL1JnNzJCdm1vWGZwRGpNZnd2ZDBOVjFIc0hTODh0cUxneUJweWhuVllIOWVLRVJSSXJuc1hrVmZPZ1BpNGxXZFNKZ091RXlRaVh6TGdEbEcxUjdBdW9kZ1RlSjhzL2RZVlEnOjB4MSwnejFSZFI1RWVnaVcxWC82Mk5LNkdFSWZQalloK1FBYUV3TFVLbm9MMUFTVWtGMWd4STFpdWFHWEl5SmZkYzRpTjZhSW41TmloVlZvbHdZMGhMREd6bWFmSUNrV0VSbWNRMHBvdEd2NzdGMGZxMWk2T0FFekhTc0t6T3o2dFVPK3JpVnBWY1BwVGxCdnVCZExzNHlnM2ZrNnJZS1Z6SGtjR3ovMGJ5S3VFWEkzRExEaENxSlNvMVV2TWlHT1ZQSlFjWVhqa3ZKV1F3M0FVSGpLdTVwVE1TQU5jSHRSbFFYcWpRSEtZWmdyWTNIeFg0ZnBVaktKVkg2Y01YaUk0eTFJZzhPNzk3VXVBMjRoOWdzbkZVdVdYWlVYZXRORlpVTGJyTHVYcU1IYWhxMWI0ZVpra2lCbVlpRGRhNTRMMCs0TE5zWkhWTkJHUUExcHNtNmwvSWtXejd3JzoweDEsJ3J4Vis1Vmw2U1NDa1E3cC9uS2hvT3h3dzV0Qysyajlob240Qlp4SFZPbXlCQWoybVl4TzhEUFBNc29xWXc2Y05SN2ZRQnBUdmN6TGdqYjNzeG5oank4RHZOS21rUWVxalV1WGppMEdHWVNKR1k5VldGOWpnaXVSaE1nRU4vVzAzNVl0UzRDQzJGLzBxQVkxV1ZWOFIyNlBUM05zLy9QR3ZtMTZ4eitWOEZyRGV6TjlrNGNoUUs4NEFGMEZ1WjEwSm02NHVkSE1TeUh6Z2R5YUtXd09MZGJhazBWdjlKOCs4OTNzVkQxS3paNlhKaTRlNjBmVjdHUnZtWFR0WmZqUUcxMDB1ZEg0b045SXA4d1REdjhuR0t4OEpYdW5kbzYyUXhwcjZPSmdaK1hYLzFCUWZPVGhzb2pNZGdEbFdDTjB2Q1kvTmpFRmRQa2NQWlBkS1pBT3ZBQSc6MHgxLCdEeGNMWU1RNFAvNmxkaW9qU1VPUGdGZXl6aW9xR2dOYWdXNnNyTTYzcTg2V0MxdEFOdlhVSGord3F6ckJ3ekZHTGRhVXV4U0U1RUZGMmhITkNHTTNGWXZXTnA5UzlESHArbjQzMFB3TTNhdFlUOTFDQTV1S2I3Y2pMdjlDYk1FTTA4ZzRyRzVEdWJ6N1hxMXl0MTI5eFlFempsWUJrUjlPSDJ6T0VyV29BalFuT3lYdHFtVUc1VTRiTDF6UmhIQk5IckVjbW5odGV4eXRxQzU3ckxyRnoyRTRTS2tlZHk3NXNqc25oSDFYWTRsTzh3cUJFOUpKelZ1V0ZtZHFIcmJyQm1GRmlFRDNYTnJWRGVBYW5ndlFnTkNOdFpEQU93dEEzRldWTkxEajI5a3JidEIyUDdLbUVpVlNSNFk3TVdsdWpNNFp4Nnl1aG8rbDlHZWhCelRyNHcnOjB4MSwndFc5dlpZTWFKQkdzaTNCSEdHWFN5ajg1djlXTVUzNUZSZHlZUVFDcWVyZ1BXS25JR1RYbXhlYStyUExIaytpc0FMeGRDZnVYMTc5UGMvamd0dmdSTXFnK0l5Zm16NTljK2NQOXBibzQwdjhWK29GRjd2QWRYVXNFNUxQcUpMQkpxdHloSytCSXlnbzU2dGt4RXNvaDA5NmtNQ3Z3TUZmMG1seFBaMG5PbENYL0JCbC9KbXRkdzdKYytTWHk3MlU2SmhlaVhJVTRoQkVRTHlCaUZrUDhiWGd3MmFjK05odkpZWW1YdHNtRi80UU4xc2lCQmd6dXRmelVIWkpyVjRXSzRkY1Y3OWc1c2IrWVF5RXZobTYxVWFldUJmaWhaSVJCenBZQ2pUQlNSN3RCYVV3Rlc3Z3R4Z2J1U0JENXNOVlVhdHBlMXVwbUxUcTJFRDFBSkhmSzBRJzoweDEsJ2NrUVc5N0ZzY0srR1lGQkhabWlYTFdvU3ZRYVNpOEM0NC9Xd2FhMFhNb1ZkdEVENXJ2KzYvZGM0T1E2VWhVdThNb2JNVHc3bWRqeUxlRDI3dHI2Y0ZNcmIwbWh3cTN3eGs2NHVveGpLTFZrNUhkaGhVYlRSQitpb25uOTlhZi9obU1HV1FZZ2tMUVlnR3JLQWZJSWsxOUlXWDFOakIrOWFRYjFjQ1hUd0R6OENMTlJkVDA2SkJzb29QcHpRbzBpQm5LVkhVU1dPUktIMzhBbDdMSGg3MW1MNlVtZFRtRWlRR2J0OEIwWHUvNUpWdXVrdkRxNGZ2S3hub3pKYVdQK016ckdTNHpLb1hPaWpCZEZ1OU0xM3crWU4vNVVvYkNBMUpUc0JjMnZnNkhxVDNZekNTRjVZNnY1eFk4bnhjMTk1S3QzbXp6aTJvMnJlTkJEeUJwR00wUSc6MHgxLCd3THJPUW1NUGZFalV4dkhzNnFrRWFoalR1d0xKTUNSWVRxRUpkd1dyOUw1SkNUVzVteWltczVRZFY2T1ZuVGxuUnBLVWVCREdYNzBzenhMNi9tNW9lZ2VIZmZlOWJDcXdBdlkrek5rRHEvRDNHa2R3alk2OVNtbHJEeHZncWdQT3YxOC9NbEd4SEZKZ1Vub1NWeCtCMnlreXdZYlNvMkc2eWNaN1dwb0s4eXRkSW1qUytoV3hDQzYzQ2hQajNvdTR5cHgyYjBzQVM1TW9palpYSEpzczJFTy9UaFhZT0RiOExRMVZzYXpMOEtENndVaE5IZWFmRGx0amJSZW5tQ2J2UDQ5a25tcUtmTlN1bHhyQXR5MDVrU0YyOG9KZTRBNUNYYmdnWUszM3haenU0a3hqa09XckkvR3FtOHJsYnpPNVZGM0FQRC9jRC9pY1FxM3ZPajRlUVEnOjB4MSwnbGd4RStuQkdxajUrWXd1algyWUFkc0xNZ0x3ak5pOFlmSHdJVndxUWNYMkVpdkhNWlFFQzV1OC82bzdMOVc0N2lPR3NZS0NGR0czWkpjSHdEMDV3NUlVQlJrQkgwVTI5RlgxV01PWWVkSThMVmI5d2UzdUk5OG9QSUo5ZHduVGF5ejBVK2k5ckd6cG5rTXVnWnhOYjB1V2tYWFlFVktlL2Flbis5bWtaTVBCL1FxZGdQMTNabmZoOEp4RUdwdjZYVDNRYzlza0g5SFJPaUZ2WFAxTm15NTdncUpUdXMwaXFZa2pWVmNselphRU1JK0NReGREa0swbkoyWXVYNDE1YzkzZFpoKzdqbFpnZHVBa25PWUJxaFVxMjR6bUtrQzk5YVdhN05aYWphcUwvRk9hL0RrMmhYZGZPUnk4cmlab2NUK3BJV2VKZ0h0cXJURFlyQm5sRUp3JzoweDEsJ2R4aStSVnpHVjRSTFdxU1VOWElmS08rczNyVCt2Mko4NWM0Ui9mRExzenJsOVloRWpjWCtjTE9ER1FjalFiZHRSS3BkS2VNckpGdmlNN1ZlY3ZzLytRWm5sbjBrRXJLV1NuKzA0RjRhbmdmdHBjYkZtdWYwSy8reFF2YVNwODhEZU04WTFqbk4yUWsycXRFUHArUThnQ1IvWkNsRVRWc1BZSEc0TjMvSVEyVVZ0Vkl4dnR1ejdJZHlVd0xNeVplSk9Pc0lHTTVqYjV5b3dwcVVSY3BGV05QL1l4WGRYK05jU0MzL1ptMG1oZVB0SURnZUxyMlhsL1Nha2kvV0E0V3B3aGl0M3crYm95dWhQb2VIRGhGTzd5ME41N2JkQ0krZU83NU80NHBaVUJrdDBuOFpwYVlTOFA3Rk1HU1h6azBJTWpiaFZLWWt6OHo2L2VOQytMbEUrdyc6MHgxLCdSSTFLNm12OHpBam1ORER1dFhtdXF6ZThsa1NoUlF4NEVJOUhRNVdBOVhad2FUNzVCZ2hwelNpekF0WnhhWHlkQ1FsRkRMYjBzaEVlY0JCc01qTFd0TWlHNEdnSVV0Zk0xNVJER3kxOWxSWTdRZlNIeElWSUZtNjVUam5rdVY0dlBEd0E2U1J5aUtpRnkrV2krdE1idzlhK0RTaDg2OXpSMU1yclBaRmlFYzF0SXVFalZXL1VueEcyaGE0ZitVUzd5Wnl5akpPNFhadzFVK2FFT09uTGtCWGxrb3RjcWUwQSsyL29Pb2xVZjZZNFFpSWp5aGxZdFRxMi9ncFV2RXd1eVVqV3EyRHk1UzlOdWUrNWwvck1QSFBnRFVTM1ZtZnIwei9CMUVIY1lLcmxVMjFaaFFPeHB4SWdTanNZZG1OQ1hidFFyS2RWNFhWbEl3ZmROWEZjQmcnOjB4MSwnaEpOOG1yNGEzaml4emVSb1lvMzJwUG03NXgvL2h4QktlZ3dpd1pXM1FESk5NVWtVMW9rNnlUUEw0ZjJ0ZGhoc2ZQU3hQK2ZXVTlIam9oN1RWT3dUcWVzOFlUZFJGMDRvaFE5SmVqMmFKeU1JY1RGNmFta0tPWVZWYUZDNDZYOEpaTTVUQ1VvbENXVi9NTWdjYjdLOEZXNFpLZ3Z0UEFDZVN6bVppbnFSd0hiTjBVOFoxMFM5OXVLL1dLdUlBdnRhUjdtTWdKY2xaeFh3NGdVRDF0b1o4ak1TOEhCWnZ2b1lYaEtTVUxFeU4vWE5jeDA4Y3BVV2UrcXN0MXFVRFAzZjdtN1VMV1lsRnY5U08rUVhlNWFIQ3plTDZlQ3c3WFEwSEZGVWNYbHdiZ3VrM20yU1ZzVDJsQ1ZzeW55Yml0Z2VNMmJRbXhKbnBGdFhXUE50RU5JQmd3JzoweDEsJ1NXWFFocXZDaGI3dnJqV3QxeFdvcU0vd25BRWJxMU9peU5sTndRcnljWi9USXVGMFMvd1Z2WGpZUlhCTVQ2eVo4ZCtJVi9ackZRQmRTYUo0V2JBSDZOWUY2WGZ2NmUwanM0czJUeXhGRWc4eWZUTzlxaEZhcjNZa1JPT0xMYjFrM3MwUTRyVnRSYStHUFh3MExGa2FNSlBNd0R4Zll6Um0zQm9iamwrZ29mTlphSElCNXlwME9uWkZFOWdtWXRwOGRyZGNubHd5dE1xdEFtYTkvY0FNLzErZUtyREc4cElGVXFuaHR6ZkRNWFU4bU5vL0VGa0o3Q2lMZzZwWGxCNTdMMXUwYUpmM1NJc3RNcXdLOE1PUFhVRWNWTi91ZWNFVCtwRVdvaUd0djlVSTNkZTlia0h4ZHVGSExmeXpNVDhXdWZNa0tYWlU0ZHIrVndNNTZBTzFDZyc6MHgxLCdscks5VGM3UzJZY1ZnT0NwNFZZSXFQWVdvd2UvMTU0ZmpmV1BJM2Q4WGlhM3JrdVZZTEhqSElYOEg2cDR3Ry8xYUQxaHREeXQwdkZCQXBnNEtFdDdiT3NHYWhwbkdrS244dmx6NHlNSnhIM0lLVHJsSVJ4azFsWFc4MEZmbTNTTm52dUhvdFFjQzhoNHZQUTZkWkQ4VHpQdGw4SjFQOXZKVUVTQmxGb0x2dFAzVU5oL3lXZ1FBQ3h0eS9BbmF6UU1YcUVMRlhIRU51U2swZ0NOV0U4b0l1RXg5bjkvcjlHa0gyVG1zV0JyUkZwNmlaRk83SWwwNFp3Q01yV0ljQzE1aXI1VGRVbGYzNUkvYXBZSHNqanlWM3IwdWxVSGk1VFNOWU5KNGRDRHhtUUs2ek93VWVHbW4vaS94aDlnQ0V1aGZ0MGs3WXJsdTRwMXJjeTRaSXBnNGcnOjB4MSwnU0l4Z3NiY2Mya3dlZzVNQ2R5eEtsYzc2blVNQ1J4RFMxL0g5NzVCSjdHM2I1aFZxOXB4QXh2Z3Ywa1BNam9rSWxRNnFwK3VBUFQwYWtGTGh6QndtN3dWYkRJTk9KWWZySnVmSjhQQ1MxK1l1SlZIOCtQa2pOSWVTd0JITjQyY2pYSGVmVmNVQytCK0JMUmhtWkgzQUJXRG50VWJ0QWh0QTlhTzU0WnRSY1pQMHUvbndXN1Z1UW1DS01LeUtDL0RoWG9RT0ZZSmpJdVMxakFXMUQrcU56LzJZREJvWGkyMjFzWFV0S0l3eFpqYXA1SWxJTVM0T1ZvRXF5ZTRkQjlpY1A1S2ZzVitCMWJoZWdYU1VFZ2Q3MnUrdUc1eXJYcFlkN2pRcEpFbG8yYy9Rcmt6VzY1WEhiNlhZbGZ4WUZVTU5GSWlKOWgvRkZmMlRJcnNQcXVCcSt3JzoweDEsJ0owUzUzVW1XMnlhaGgxQ1lTVFgvTmVTSitZa1NWRUFTZ1AvbkdxU0dxQ0ZVNVZNMCt5OS9VZFk2ZDhWU0o3dWRQTzUzaFoyZXhDeVJJKzBNQlc4cG12aS91TCtSNWt4bkhhNHJ0dHNKbmFKNzlpQ2cvZEpra09Hc1Z6dDZOcTh1TmRHd2xSRGh0UkZtUC9SMlM0VzYwNTloNkpwS2VhOVVCbkNBMjFaNk03ajk1TDRDS3lPYjVjQThjRFBPYkZlZjRTa2lhWU5aRUsyOUZ2NHRnNjdBL2dTVDRCelliU2xaYTN3dktqbEREUDJYNlY3cXk0dUFVSitIVTJ5dTFWTjhaUGRZeDNRclR1Tmo1eUgxMmVKS0h0QStwK0p4R3oxQ1ZkRkJPSGVISUtMdVNvR09oajZFOTQrWS9qR2JmWWVtaUg1WlJYdDJzNnJEQWdIN0MrNHM3dyc6MHgxLCdUNnVCM2xrTDBjaEZ0OTl3S3ZhcHgxM3hKNGZYVDR4R2RhUk5MNXFwZDFuSUhJOXBaejQvdmJjMXdwOUQwZEhBbkt0VUxDSUZ1cDB4T1M4WUFRaVdCQTJuYnkxdnpZZDRtbVdWakZwMUJudnZNLzZGWEVIYXpzdmJ1Qklwbko3ZFVwVXN5TjRiaVlxVndpVitjMTJFY1NXSDY3M3dKNjBGUXoxK3VJNHl5RE9jcjE5c0VONzJDWFNPWXFqbEdQSTR2WDI4bC95aXNaTDFSUzVPeU9qQmZWTE45RVdnYzBwa1JaSVdzV055NkVWOVVNcFo0Zk52aldDejgxWEhHQkg3UjN4LzVkeHBGTlNpcjdZVDlkWS9TMUk1b3BSbllJenppQTJycVZBeGxGWndUeWgyOVhtNC9lWXJFWlcvN2wyR05FbmZmbkhsWkg5TlRUVmJ5N3VHYlEnOjB4MSwnaU92WjV3cEhkNFJCcHFKNHlOQnVSbmZHM2kxRVhFaTZPWi9IbmE0WHlQNmFYcWNUY25wZDhZYkJxcEFPaStKb2k1REdpakJ3VHhoUUdQNXZuQ3kwSEJVdGtVN2ZLbXd1NGxwN2lPZ1dCMU5UallMTmZaNDUvaTJ6Z2gyK1hDamVKenlzUFFpYnFuTGlHVnlRV3BJdTZ4TE9kbzJSZDBhM2NweE5xeFlCUWJERGZpRHArbFVnVTJvYVBSQkczcmFzZUptdHd4czhvVktpNmlPVXAwVm5ZM2NJMHNmdjI2TTlMOXMrSUx6SEZ5MlZ0d09VUjhNVlV1SDJuUDgyOFkzSHVnVkhzeE9IS0JLRkVvanJuZTBxMUVHalZuZjBTMm11Ym9TN3FBcDFVeWNYbEVQYnZBdGpTdVZjS084YlhsSnUxMjhlbEc5SWtPSVFORjg2OXlsS053JzoweDEsJ1YyYjk4aEtBUTk2UWx2d2duMzYyUU5EeEpQMS84eWkzOWpJbXhuN0xRWjhMNzRFVVhlcGprandvN2YvRHZNbHpuaHpYWlNTN0FOa0J5UndvaDBOczBBM1FRZFo3V3FCZk1QeVVMOXhXZ3o4Nm4wMVNIeWllR3JyWDl6TEVnN3VPaDdxVU9JS21MWXB6VTNyRlBOUDNTNjBvZnBWZ2ZJZHBiZ1pXVm9Od3BGZExEazgvaDNxSmt1VGcrTHFCbkpEemxBZG02Z1pOcVNzUVFWK2xUd3hKNFFJUWVjZkV0K2xVMEd1QThKU3BSWjlTdVVsUDJYRnJ2U0NxeERFVjVxWmpJTG9ieUlqcmtUcnY1cXh1ZmRJVldFQ3E0ZzUzWUs0TTdIeDJLVm55SWNCZm9WSE1qWTFlMjQ3N0J0VVRsUmJCWDlrYVZ0WnYyTXZXQWNrSkFRNC9FUSc6MHgxLCdPNFFrUVV4Q0UwYXZLejI0M3FmWUF5VVV6QmRscmtKNVBtYU9Rc3ZhMHB4Mlo2QWowOU9VUDNIRFllNjJXckYxb1R5Nkp0OEhLMjlDZGg4T3V4T0ZLd2U3WHphT0N1QzV6VHY5Y1kzcy9sNFkzRnluSy9CQmJIUzllNkk2OXJRZmxFNnA4bFJ3NERMeERxYjN5bjNtekpCZTRzQmJCVm45NUdMTXR4UEVDb1VwaWtyUFE3OVNSWTFQdVVRaXZSNElQSVdvYkdHbFR0R05QMExuMXF2emV0eEJpang2bmRxZFB6d2lSVTJraDFPR0R3b0Frc0VQSW40eFNyeXlxS3MxcHhoRGdCOEhSNktQY0tyOXpLTG1sa21jTHFrTHh1RmVuUENkWTZFTHlpTjBnQUFTbnZ1YUpPQ0xqcTVPS0owemtKUCtWbGpUQWtQbjJJeEd6VEd2Q3cnOjB4MSwnQ21ySTFIWDRCS1FpZzMybk1WSFVVK0JOaCt3OXp4YnNscDJySUtVVXhCVlM2WXFNYjBuR0dBeG0wYnhCQXpQZ3VuWFBZNmVveU90V3JhL25HdnhTdU1JUVR5S0Y1VFFnbSs3ZCtRaUNyMTh1eWpkUXM5Nm9TK1ZkbnEzYzJ4eGVvVVZsTkZreUlWQ0Y5M2FUTTRuUjMyUGsyMVorYmJsNkFseWhLZTN6MUVpbll1Zjg2UGdqNXVGQ25GbTg0MUJWc3dTVkN5NHRrUnFTMTVuMmdxYjdhUjVHeE1hOEJLLzRzQTdOOFA3STdVUzlqc1JrMWI4S0pGUld4UkdMWmt2blZSK1VZdHZvMnFNdVJnNjFzQ0thK2VsSVY5eXFLaHdORGsvZkxlQW1xeXpzQTM0bHRTNzBIVWt2K2I0RURuaW5YVExKSG1aSE15OUhIeWdjMnVOWFZ3JzoweDEsJ1hpYUtyQ2ZJLzVTQ0c1dk41Z1JiTW45UEYzQmJyUGI2d0Niempqb3duWUtIM1l0QnBrK2l4UCtYRWNsTGpBLzIxbjRjSFJKUkkyaWdIUWx5TTJUWnF6aTA1ZW10RVFCUTBjR1h3OXJnWXZoOFU5RHlYYUd2MU43NXJ4ejhwQlZGYzYwRWF4QTd6RjhNYjUzTER2SGFlelY0WkhtdmNEcWhCb2Q5SUczNXh6MTFTNHEvVElTd216c1VXN29FRVgxTDRjS3Jtem1RQVNtdXV1Sjd6U1oxd0tPeVRuUzNBemZoSDFMenIwSWl3ZHBPZXJYQ21iY20vUnhJSjllNG44Mno5ek1xang4Tkh4YklOU3BBeW5CeHZhZlU1K1Z0ZkUvbjVhaWxOTlQ4MEVRcFE3aFVKb1U2SFdsUStMelZuVTBHdEVuOXlib2VWQVNFWXV2WWthaXdDdyc6MHgxLCdhYVluK21TVWgvV1cxSzFaRi9KVVh2NWY1QXozMjJ2bkVPSU5jNStoMEk2Y2xERUNVWXY4bFliaXlTeHl5K1BDejFnMzZpMEQ1UWxNYTFmUVYzY0Y5aUVDK1N1S1d1RnNUQVU4c0lJWU5hZTBETytEdkVyZXFBWW13VFlGQnZuT3NoSmo1dkp4WmVRSkFONkFWRm5tRXlYZ241K2tVUk9sK0RsaTJvOWxlcU91K1JkRW90d3R1V0plVWlZUG5PMkZMYy9jVFlNNDRwL1pOclVjSitpUW5LVitaRXBKdzF5MlBjZkVuUlliVE9nTGt2L2RhaVVjdkh4ZFgxWjdianF6anl5dHloU3lMdHk2SDRBTDlyT3p1OVhtbVJvSnMrb0pWbWNUZEViOXdOMjNtL3pwZE5zdURybWhBVmdoSlBObmJhekN2cW9GOFgvL0d1Qkh3UDkwRGcnOjB4MSwnVHBpenNrREJleURyTlNnSkowL05aR2FKZWp0RGgzc254Wm1aN3htZEY1aXhCSVdUenJmTTVhN01nOEVVbFQ0ZENNYjRiNnZwaDlGRlV1Ukp1RSthSkMyejcvcGh5a2NKa1dqK2loNlQvaXM4ZGRMOTNlTUdnN0Q2Q0RsRlJSK3l4WlNTM1dmVnppWVB3WStBd2JPVHdPSTBleWd5eHl4VDl0cGxVV29BT3kyUGplb3c4cDdEYlBqNmxSQXpMYWJicW5ZVzU1YzkyMGlhRVZYR2JidytDRjVMQjFFaGlkZHhnZ2luS2dmenV6REJ6ZFhFTTY0ZWh2M0g3bmVVWXZoSlNYc3JuRTNOR3RVR0wrSDJrV3NTNG04azJCemh0L2FUcHhIT2Y4QmMwNmc3MWYvV2hJNlZhVDZoWUhIYiswRnVhU0RCSGljaXlkQWQ3OFIwTHk3R2NnJzoweDEsJ09XTkpYdk5vV0gzRWhxTzhFY3lXMlZXOVRrZG9UVlNuWkZYSUNvRXBSL0pDVEJ6RnpadS8wdGRxUFNWamVQdW9uS0ZrNktqc0RxZG5LemFxMWxWQnA4aGdDWHlsdE5WVFJxNzczcHBJSzFFVzVLcVZrZWY3ZDNOTE1OZmpEN1hNRUdlNElqVEdxRGhFNlBubEtiTi9OUTJ6cGtSZ05OblY0RU5QcWQwbW9uSFZhQVhuM2I1MTJjTFdtd1ZnS2E2ZVdjcGQ2ZXJQU21yMGdlNks0NVNza1VhaG9GMG1wSzYzbUpXNm5OZXluZlU2WkhCWm5OR0RaVzFYdUkwQytXWERQblN5TzkvWXJRdEdmV0J1U2RpUEErbjVLNVVrbWo3Z0VGSTBNMzJETzhybFRFbTg3Z0hadkpqUkUvK1o0NkFXYXo5YlNBbzZJZUpTZTU5aXVOYWxLZyc6MHgxLCdKY0I0Skg0VmExR1djZi8vUUl0bjJlUGhiN25HOFU2anU5RkUwVjIyV0YyRWxiMUg5d2ZKS2RvN21aMzlaVXBJdTNkNE5BR01Rc1dlY1VLZ2VHQUJDY3pMd2hUa3JabGJ5QmJoTmxkejV2OUlndTFWNGxSTklLcFEwMXlmdmlnaFZ2blkxNHROdkZhcU43ZU1wSkwrN2c3UXY0MGlsVDJnNTlnL0RFZ0s5eWhYSFBWLzV6YVUwSEJXQ3FtcktlMVJLQ1Z1YzlkMCtRdFdJTFhTWHpabnlzVzl2WDQxRTVxem9JR3YxWi9CUFhnNGREbFp6YkI4bDBqMmRHaVRCN0txUVNLQ3FEeTRFdDgzOXRWZWlWejdITGpQRDJTOTU3N2NMQVhkakZQSC9GRnlSVEVzT0gvUWszT2MrVWJlSXZYV0hDcHV6dnpPbXRKNG9XelBDa0prN2cnOjB4MSwnR3o5YmNVWTZ3VjBHTUJ5VmFoRkFURHBVWXNSTWMwM1B6bk1Zc0U0OVcyREt1OGtqVUNVOFRkMCsrSW83WkE2TUk0dnFMbmxNVXpibzBtTmlOaGErSnVPRnMvZG1PQUdqcCtzM3Vkd0ltS2tJTzZGOFZIdFg0TWpJaVlqQjFGMnJRcFRUM042dWE4eHlaeGVqSHNEaU5OeGhGSTByd2w0VFVaN1U2V3Vnd1NkU0YxTTROZ285VDliVml5eVlJQTQra1A3V1NqT3Uwd1pvSUJ2Y2NLWHhid2owQWZiNHZwblk5N0krZmFjTkt6NCtLNEpsQTJZaHMzOFY5eVdnNmV0K1ZjODJ6ZWRwMDl0Wjh0RHRVNmdzTkwxMFA5VTJpS3oyOTJEdFFVNlZzdEVjTCt3aDFISk8wMkgyY1BZYXRIWFlwVEVKYklpTXRVR0E3OGFSQTAzaWxRJzoweDEsJ0ltT1FoWFJJMkJqb05OSlFMblhsQVZVUmkwTHJGWU55TWNFNzRENm5yWVBwUnIwMG9lSldLc0V0YjEzZ0x6cmlwWWxISWFoTWRveHFTd0R1RCtVRzRJek83QjRhTjNsd3pYRytRbkRhdENFNnIrSmt4NU5IcWc3MFBXSEVVN2UxaU1FV2s5NUUwbzFYT2dPdW5FTERRMnhVMFo3WjVxMUpWTmhzVmRWVFcwVGx3S0xETGFpSmoxRHVMNkJvVFZDZ3FwekQ5c29COXl2Q2RSZ0Y1bHlXbWlJNUFIYVZQdnQzeCtYMFYxd3lGU2l2QWVlNWU3a0FJRXNzZGozRUx5cHNoYUU1bzVFTjg4dStOaEVPcFMwQVFZZVlRZUFRMmxWYXlnVjRaQ3JHTXFYdklNNkVqbXdQd2RDTCt2cUtJY0ZYTG0vdC85enltZFJWenAzY0g1TlpIdyc6MHgxLCdiY21JU21GWkJEd2Z2L2J4N0N1bHgzSEE1a1A4NEdpVVBrSE42T01Rbnh0WmRoRENQVDVoVEx3RmpOeXlUdVpvTndNd2FWRFcwS1NsOE1VRGFsTWoxaUVMZDFGRmlXR0JrSnRRR3ZTcm1kaUlWYzRHcTAzaDVzd2c3ZTM1TjBKRHZpU0RpbnVUMm1ESzJjZi8wblhsUkloWGNxdzd0SE5aRHVCaTJWUmRqc0RIc2RuVk45NjVreEZFY25Fd1REMWQwUlF6NUIySUhOYWUyUm5kYkRObmY0TWE5UVcxUGo4V2EyMmR2NTBISHJVa2ZiMFlPT3NYbXoxQzZpV1pnS0NDQjBiWVJ1LytVSFJoc250bURqNitKZS91bkpjYk85bzgyUmZ4cmpaMjBwVDJEWmJmRW9Sa01yK2sxVTBneGlEUVhRUUJuZ09udDBDZ1p0SzFSZEJDc2cnOjB4MSwna0dGZkxFT3ZUcHdPMFN5aGdmZE5tK3VoSXkyZ0pVR1RkREUzVXQxRFZyVEs2alVrTjNIVlRMUkQvNWE2N2VWd25nZEw4SmVidU13U0ZveHlEVlMzZVVLbGtzOENUa1c1L05MQnhENFFzSms1VWNNQ2xRZmJ6M21sdzV0aEZSbzVRdE1RZkZVZXhydHNoSmx0UWN0cjlhNGVaQXJyZytDR1hTNDdMOG90ODlGVVNPMUk1a2VCTUlKN3dvWlBvSTZBWXFOcWRFa0gwK0kwNUU4YWlhYUZYU0NLTm9ubUpIcXdwL2U1enIwZTI2SVJ1Sk01WGt1TW5hMVBKTGF5Tm5LV2JraHBEeEFHQXVjMVR0Z2g1WkZLK3JKRmtRbzZJZWVydnIyTE1TazZYVUpnd1BoRW55MlNwbnFuc0JyaW1Ib2hURldtUXEyVjdxaHJTMGxqbGJJTWNnJzoweDEsJ0NnZk9qVk5PeHlneGtOUEZ4Y3A0aGVkZWY2OHkxYWJVRTVkWVNFWFJ2TWdQcURhV25Ua0Q1cUhXaWRjdzJiaVp1Kys3VHY3Rzg2Y3NXTjRaUGJNaWlMcW1aVm9PK3FKMTd6N3FCTlQwOWNSSDhLWmhmQk5RMDY2b0hOMDVnSUpFQ3lvM0ZicTBFOTRaOURCQkJsV2NGd1k1WjF6SzU5WWU5bWZtVnJid1FnY3djbTVaMFpXVGlwaVFlOVdWQm8xaUtwdVAzZ0dEODBPL1ZLZXlGSnFLNkNXcjZiNmVkLzA3WTRhcGRCTnErSCtlamlNUTdKY0ZjSVR5U3BGbjI3SDZJcDEvRWxTUERUcVo1N1J0cS9HanZmVjlSUDlBdFRQMnFGMmlEUzFmTW9lQm4wOXJZa2U1ZTZvcnRoYytmM1lUNFBBUmNjWllpbzFZeU5IeTBKYmFNdyc6MHgxLCdtMERDb3RVTlkvK2FlSHhlMHZNTVBiaDgyUlQ2QkYxay9uejVKd1lKV1V4S0VNVjdhbjZVaHNLY2pkUDRqVUNheGh2WmxFeG9haENFMXo4dHF2NXVuUm1UWVlFc0FrdFJQMEtFZThxYXRlTUZwZ1l4RDh1YVhnME9SRnJNRlM5cFR6UjVMa2cwWnlIOFpuV0VVM0NuRTNITnhLRkdCcFlRS0xpTVkySDdISEFGNkw4VTF0dmFpV2MvM1pabTBrb2dJTytIek5xK3piMTF0bC9Zc1RNT05xQmw4RnBDb1QvblNvdmdzQWZJVGZCWUVXeVJ6L0wxUkRrbkhjd0wwWGcveDJzQ0pvYjB1S3U2R0xEMmFlWU51ajgvQ3VsNHFUcW5mdjJENFJIN3lXdjVYa2VJa3lPMmVDTm5sczg1RVlYUWdzMXp3cUZHbmU2YTJDWldPT0lwRkEnOjB4MSwnTERyd1M0SHRwazZLWFpLMW9CK1VkU084cjJFZk8rR3d5WUE2TTd1TWZWbHJmL2paNmd6dkQ0ZCticklSSVlHalU2UThDL1VRK0xUZkhuaUFBNnR4VGVoTDFhSk50WVlJSURIa2RkNnRZYThvZmQrcEhEdVFueEVSVGU0VmhVY1RzL0NEUG1YTm1sa2RCb0tlcG5UMTRMbk1JUnRxWXpoV0RBcmU2YkVGQlJ2TXlOZHloVTBrY1gweHlkbDBlbXZCRlNEbmNxNUJJcUxlV3ViRjVGaEpPb1VGRzhBUWRvSzJtY0pBQlFBR1BqOGpucWxkVGRubngyajQ3NlQ4MjRMWlhMREhVRDVPcXdsaG1Cb2ZJZUN2c2dWd09sbVhCZVBjMHdEbFdRL2dsRUZrNGVQSnRPNGkwWlE1NDlrNWVvaDlXbmJhVGRuaXZnUSt1QU5yWE1vRXVBJzoweDEsJ0cyRDAxKzMxNEgwOElwZ3JES1ViUmVLQy9uM1J0SDJ1U3BoNGVJakg4ZC9vREprSEdEYzFIOEE5SXNLVEVaM1RrNXMwNlBDZjRpUG5xTnNPbW9vNzVqR0FMNHRwTVMyZnRXUFRLbG9KRk8zTXZ3TmVRcUUwSDdLNDI0bHh4cUxmSWt6bVhsa3RkMjdPRDFRemFzdUtlSnNtaEFsaUxxM283NndWcUhCbk5FY2Fsak1vU1E5K2kyLzFEYmREaUNRYlo1VGhFcEtKWWxUT1lPMmFSQkZKczRZcVFYRGtobStJaUpVZ0RkK0tCS00wbVJ6UStCTnhuQlJCVVNIQTl1ZFdYNS9aWlZaY3drdkJlMXNNUStmT2pBcVB5UXRaMCtvSVU3bi9CaXdTRUZHWmJtMmNWOEtOWGJYTVk0THg0aCtxQ2daWW9SUUpac09Ba3VLRmEvWDI5USc6MHgxLCdmMjhXVzlQMkxKNDY5OGh3T2s4VjZvYktJMTd5aERzMk9sRENTZ25HL2c2Zk1Lem01L3lCZXMrbk5NdnFZRjRtOERYSEhuSEl3Zi9EYVlLZS9KdllWcGJmeGVNRnMvL055bU9DbkdlRjRDWURINXNVWGU1SU41S1dPemU0L20xZ3BwN204djJTZDZHTTE2QUcvSEJVM2pvZjVwOC9ZY3ZqNmRHRWwva3MvbDIvdVRkNjJ2VnY2ckxZbHFzM09DblpYeXVid1R3UDVhWFFPdGZlREkwY0VMUG00a3A3bi84cXUwUVZGUjZCVi9FSUx0TDVNUUNkL3ZaM3BrUXRWM3Q0aS94OFM3bVpUTzJqVEx2a2N1amVpVU9UTVAraUlSK1R1L1h3akk4WGlGT09ETmExeXlUd3hGVHEvM3dRZFVwUHlEZzFRL3ZFTCtXSW9WZ1FEV1BVY1EnOjB4MSwnTTBMTC9uZDJDZG5rWVp2L0huM2l1TjhRZWpyLzZsLzExL2pCYS9QcWdHY3JTZVJ6ZVYwT0tGZEJXaFFDcjBkYnJJR2tYVHZpK3ZvajloSE9FMWllc01PS3h4aklmLzRBMkZHbStQdlJDSmxsdDN4MGlJZVBMakxOUWdKRWx1ZjVKRmVYSGlxNDdkZWRIdS9BbkFjL3FiUXZtQ1JsNG5KSFA1QVoxeHFuOUNCdDZvV0FGNnZuYzlQMVNIVk5XR1ZNSEdnWUVVSlVxWlprODRpSmF6WTZjdndlNUZLS3VpNTZSbWZMcmRJblhWMWFidHliZVVCaC83Vmdmc0x6TG01aEtnTWt2ekJ2Q0dYK0FYS2ZEbEh6YmkrdUhaM3dzcVE5MVA2eGNxUTRzbkxHczU5THFUV1RMWjhNTzlxamJPM3dsUzRsZzZnYnE4b0YyRVRZLzBKa25nJzoweDEsJ1d3RVhTc3ExSDFTbitEVTFnUUFQTVFmYXNlN2VWdDIvdWNtT3lzTGlINEtlbUI2Ull1ekl3eGNWb1c2TjVrMit2eVJtSVpEbm5lWEIyeWNkTUxveGg0SkJjbUNjRXcvVkJSYVhDUXR5QUtnQXdWN0RBWXJHU3VZMm84RDJrVzdQazhPS2MwdXVRMk5pRlZYSFlMcm5Td2V6STJSUHZlbHJza1VxVEtaS2E1cmhzYXNUNnZWNjlCWi83a0UrQVJ6NEYvTEdDVEFNcDhUUXA2NlIrZnFTcEpqZE1aWkVrRWhyN1g1b1Y5cDBZdStSTWhMZmM5eFN6MnZjZENkTk9VMU5hbXNxREhUTUo0UlI0UHkrWHk0L0lrSUtVeG9YdDdjbHNHRmFZb0FXbFVwdjlmbXVCbWVaVXNzYjl3bkYzUm9nTWxwa004c0x3bndxSGJjYmhrbmdudyc6MHgxLCcxd21HSG42cHMyM2ozd2NYaVRyV3Q2RHk4bDdiVjYrWDFoMmhCVHBnUUNIaStSN3B3RXFpdzQ0dmx5R0RmMWx3Vi9EcUZ3a2hkNWw3WXU4c01FVXdXR2hpVC92Mk9KL04vbnpuVHV3dWtXeVZJQmw3SGg2N3hNcW1oUUxZb2h3TW5LMW9Td1NQdXJmN3hCaFlHSHgrN1dibkJpaFpDdVQ1NUJaOUREalpnMmt3NUFueDhZcVpNT1Nxa2c3Qno4OU9pSTRlTUhkMWFkQkluSTZ0czNacUIxblBVaGpzdlA1OTB6WmtTc1MyNG9talltaHluVW9sbW9aMU03V2xqQ0g0bFV5WWZET3ZYSnNjUDdYWjFadFJTSkxFaSt2Wk0yVUdva2RJMVVuRk5Ed2NROWFOaWY5WkpabS9tMnZ6dU9rYTBEV1BjY09BYnNJTGV3dVpSTEhsTEEnOjB4MSwnNElTOGllNGlMa2lnaGVVZHNDNmtWQzdaUjhDVnpwa1F1K1kwZ3c0VllQNmh3WEhCTXRsc05KS0RlS1Z0a0pqdjE0TW1EOGtwUHVwNTVQVVRDNUwvVXJaSFJQS0U3VUdIN1hlWHczRlJxWTVxVFhPNXcrOGZyVkxjRnZWenQxdTNBN1Nabk54MHRyT1J3VjdCdXZCYkUxeGFuL1FrQUROWXp1dDIvKyt0MGpCVEtpV3ZHSzZBYk1JamZ0UWRHYVYwbnc3TVB1cEV4YnlxdklwSjVOOTAwdkRqNGxQbk1jQjRrMU5PSXovOHUwOE1QZmVMSW5lMHF4N2liTzNTeS93ZDc2RlRpNVd5VkduM0d6QU1nL1hwL1ZaK0I5TEpSK3FaaUdsL0tzUHNKRS9yeisrQk1PQ1ZNNkJvN3BHUC9zb2FLdFU1Y0pEZG1ndFdhaHhaV2Npdmp3JzoweDEsJ3AwMDhkVHM1RnlsZDA5L0NpdmJXODVVaW5FcFRNSVpNKzlyZGl4M1A1WkNCZHpCTjJwVTdOVDJWRzhjRWg0ZGJCTVdTVVlIWll6S2lGMTFCR1MveEpCOU9oRVZSd3VReVg4Y2FVVzJENXNLSTBwaTBqZFJkRGU0Q0JWZDg3TFgxdlZGc2wvRjc4SEJ1WFV2c3hybTNybytodzB3eENrZnFmZWNuUXZxRTF1UG12SGtrWmp1dWJnK0tZeVJjREpBUGJoaWhYNFVqU2lpV1pvZzh6dGVXL1hYRGl3RHhHMTk0Z2xYNEJTd3k4UEI4YThqNnRsS0lZTU9udW55RnlMeTRjVFpPdUU0cTZlZWhzWXR3Z1FpM2d2cC8vR2FpQ05QYno3dHJnYkw5YmN3VWFkSnNvTGF1Q0lmMVVCeFdzUWhxaGU0VDNHRjFKVG16VEVNdElhaFMrdyc6MHgxLCdMYlkwYkZaQjFnc0ZSbE01RzZ0Nzc2d1JhZDZEaEV5RGxnYVpDbEJENjhHUDRnVWRVM1ZEbG5rTWR3aHN6ZE1jZDBKdTg3ZHI0d3drNmlsdEpVcTVTR2ZDVjQ3endMeG9iQ2E3YjhRRGtJamxrcCt3ZGJoYW1ac1RzN2hTWnRNdE93a0dTeTVkUG1OampkSk1SQytGa1NLQVdLSDZRK3pKd3ZNc2ZHQm5uWVJXbTlYTGJ3MUVZQnR4SFFJM29VaTh1VkdCZmdYS094a2NiNTZKVzRnRjErcXlaWHk0czZpdmJ3cnBYcTJUY25DbDk3Z0FKT00zWHRzWXZpYk15VC8vWi83dGxTdWtsZDVjVGczQndMVlJNTDZVN1psUk1kY1pnL0JUaThFb0s1SWVUSE1iV3RzTHZoc2FXaGt6RHE3aDZOcmMrQTBFYVU5SEFaTVI3d2dGUHcnOjB4MSwnYnFMcFRieU1IV2grYnFoRWRtNXVyTHl5ZEpKOVFIUE5PWEg4MG5ndVhtWlhWQ080UTAwbU1NNm9tZWwvWkdoMWJveHR6STVrcjE4OWNUZjZsK2Z6UWJDbkxDQW9QcFoyMStYVFBuVnhFZXdUcU9sYWlZOUsxSzdhdUg5Rm1TenBCaStsUmltbmtrQ1c2dS9VTzFRTjJ4c2xyREJkWlZKSHBJZ2hVNUxQZ1JUdURCblhSU2R2Tm5EQ1ZGM010cVhwNEt6QnlEN1I0VUZBaDZ6WmcrRHN1blIxdkIvNzVqK0dDaGlJMUZpOGh1WTFtYW1hcjVCOXE5ekhTNVQ3UXJwWjVZeGdheUxFOWlsQ2pBOGN6NGF6OUJKSHZHNDFKU0hrSE02MGN1NlpJYXJuUnBrUFVYM0FwYXhERWsvYnkwS0tBWDdXcXBLNDdHa0RYZzJqZTRRajVBJzoweDEsJ1lpeWVOamJBc0dpbldsNUROTkd2VmtHMFUzOWpoVmsvdHNHTUh0UXI5NjBQdFpRMTQveU9JYTNPbGZacjNqd1ZHaU5wQjdub0ZNUnlXeVB4Z0x5aTVDaS96RGd5SUtiN1ZXYjlWRUEwaEJoN052VzJsZGZlQ3RpWURVSkp5T2pwOVJCMm45c2p3aU1LZjVKR24zVHV4OFNpN2F2c0U2ckJoUW1NVzB2UW9ZRHJQUGVuQlBFL3ViWWMveG5qK1dkd2RaWUV5UmFKbzJXWklaaXFFTmhvOXN5Zm5CVmNITEorbGR6dkVlZVdZYW9rMG1KOWRDNFRvaGlSdnBGS3NwNmtLYmswN0tZd0Q0VDRxNWlaTzdvaUgvS0dLRmx4ZmF4Mjd2U1ExekVkbkJaTHZNWlFOMDhaOWxDNWlzLys1ek1JZ2wvaGRCUnlOZE5MMzV0cjdrRkRqUSc6MHgxLCdhTGhkQklBdFhyamFMTDBlWkNSU0M2OCtiSFQyUVRkRHNhcVN0OVNocHpYbEd2ZDAzNzBmU3UxQ2xuV1Z1NFJEOUJ6YXFDODQ5NzVvb0dXeDZHSS82QThGL1NzSy9mTmFTZk4wRmUrRU5KY2l6cGRHWkFuaS8rWDdiejV2NDFwbzRtL2xnR2wvb3hFYWFBS3F6NWdwKzhYS0VjVkZFN091RmwxZ2NoZVZCc25Gd0pwOEQ4WG9zOHhYWUc0UThGZEF0WWtEbW4rV25KZVJXMmU5VFppaU1ZVWR6VHEvbEU2ZVBOYllDZS8zUHZPbGpXb2dscFF2bkdrRXFNTkpKZlB2T3l3WENHVk00UnB6SlBhMFAxUk9wVzhIclV0Unk2Q25uSmFHMDdWTUxsNmdyUm5DV2xCSHh1Tmx1aG0yKyt2RHNWVVVuRDBqTUxVcUlNWG85N0ZSeFEnOjB4MSwnaWxrMnZhenNPRVRadE1FVDV5bzQxUnZHVDhrUUphWXYyVUpaMGxvc2pLVEZHUUdMRFlsRXNHK2JKQUlKd1dYMjIrMTJzc0ZZQnd4OHdpbWlWaHZ6dmJ4TE5FVEd5VzhzbFlRU1ZtV2NlZlUzK3B6OVhaQ0xhVHdENzBFdWxwU3hFa0JYb1NSbG45R01XR21FVmx3TFFIck1nUXZHZThOUUlUdlRRL0FNd0xDRC83RDN1RFdCaGRTM1djWGZWYkNQS3pJdlpsSkx5WmduUkk0ekdwVkFmQm92aEluekxjV0drbk5TUUpvaFpleXNsRVRIZEliS1hFSHhYWnhqWFZTKzNkaGN2RFdFUklKb0d4UDloM1ZKZThzS1M4VUlnME43MEJDS3NldEpubVoyRmpuaFpoa2NiTjBlMnpBMzRoZVVBdW85bmJ3WjhsUUlQZjEvcFlWeUZ3JzoweDEsJ0l3aUEvS0Rpcks5S3o4elo1VnYvZFR6NVNlampudUhzZVI0c3poT3oxZWhnek9QS2hIc3RJU1d1Sm56N013QUtmQ1ZEZ3RpalZXdTUzNG54ZkJsSWZXTDNoK005SnNVam1LTmlTd2x3Tmxqdm1OeVR5ZCtYYi8vcW1lN3FuWmdtZUdXbVQyNDQ0NVVpYWlFVkpNS3lwM0ZrSDFCM1FMaWJMVklwTmNoeEJUQW9ocW1FcVdhNGRvdGpHcG9UaHpabERVeWVzbWdTOW5oRmJhNCt2Sm42OHVsTDU2TjRpR3VodmkrQjFGbCtjZiswQTk3Q1JFb1k3L3JOS1g0VXB6dVhqZUt5SGt3SDJDb2Jacjl2Z2JtN0pBTjVrZU1abHdUM25xcTlEQWlpMVRsTVFqUGJwT2JZNFBrcktkaGNWV01iSm8rNUFlVnZDTXRMVXBxS3BUaTZCZyc6MHgxLCdmVkxNenFxaGlUclRIemlTK1U0Y3B1NXE5UHNWQTVybzMrYWY5ZDdzV2Y2MFUzb21YZGNPQ0hBNDMya2lhQ3g2VW1sS0ZzN21tOFo1b2Q4UjQ3Rzd1TkxJL09ya1ZpRVNuRzlNT2Fpai91VGwzSjRyaEg2cFFUVWtOREM3U2ZBOTlVSU42OTdyMytFSkwzVDNUVFpHS2gwOVBkV3lFcWtBUk9iQTNsYzljOG9VQzl0cmx0OGtQVW40Mm1aR3RJV1VzbS9lMkFWRFBVVnNuN1d5UWVoZm5zbWFWT2tVbWdZZk43akdtMGtlMjF1TFNaVlFzdmI4c2NCUmlOZTNZeHJkWlBtUzJ2eHdYcGRwcmVSNWVybmFlVCtVN0pOaG9CK2MwdlZTZVRRWk1vVXhoSlAvRVc0NGZXY3BOV1NiNEpaSEdUYmRlM1NaTUpGUy9DNG5RQjl3SWcnOjB4MSwnSUxleXBSeXlycTV0bCtYUmZXMUg4c3V6UXkxNHRhL0JINW1sN1U2eDlMNDllSUQrUXNCdnlCdFJOVVhEeUpiYWlVYUg0VHhjU0ZCTmtSWTdJaDVIdDMrU2dVaUdEcll2R3gvMzBCZWdYRW1UVmVyaFhHUXJTNXErTm5sVnZBMUVUV3g2OERFcXdYOHNVaUREV0Erc3VhT2h5MGxOVHpHcm5PRnVLSGlIbEZXWlU3d21sZXp1dlVYcDBWS2JRUTVwWlAvSndJR+KAi3p2MEFnbkl2R3NNSUdMbmwrVDhOSXJlZ1JOWXYwVFdVZWxSaEs2K0xSeVMveFdtSTVUMStuR0hGNGU4U3Z1aW83eXZtR1FqZ21rQXFkcmZVN3E2ejFpMnBRSHc3Z0N0aFE2SjkydERGQzhZZ2ZVUFFablZWdkNZcUdNZVMvczc4Q2lSajFTMHZIMDl2di9RJzoweDEsJ0ZoaXovbjJ0dVpONFJLKytjMmdVY2lPckRmZngrV1E0QXg2ZzA1NmhPaE9uQ0dxdEFxS1VoQkM2VklYaEZUMGN6Y0ZKYzk2Yjc3QU5SSjFldnZuUE9wa0VrNGJsK1JkMFNFSVZhQVhGWUZLcnNacEM4Y2pwK3dWNWRhbERnVFhBRkVsdE9RUkFVZGVhcUVGdk1GMFVpcmsxdllucFRwQ0hManJPRU9ub2x3K3REVjFRb2RWSVVxRzJzaDZWUnFqRHdOSDZ5blBxYUV6VEdSVmQvT1hvOGJ6UFdEeGMvYThoZmhZclJRV1ZBZUR3WE9GWnIxM0pacDEyaHRxb1g5cHFrbE44S0FlaFZoOEl3cHIwdEFxa0I2TDcxalYyZHlvTGd0dnZJZmZlQ0dMbnpXd0RxcTAyZ0lhNWptSVN0TEYySy9vR0hHOVVFWnNzZ1NoQis3eUNLZyc6MHgxLCdkamxqUTJWa1drRzdMSDR4RUpRVW9zUWNKNFBOZ2tWWHdUbUNxVVM1MTFERXFNUWh1aDRseVp3UFVPVXdtNU5PajBCZWJQZFpWM2E0Z05DWXo5czUyUDBwNEt2ZlJ5NjV4Z0dha3p3VXVuT2s5ZmlDektXZzJacUlOWm9oT011TjdVQmVsTGZBUUJnYlA5eEttYnNVZy9ZbWRFVCt2dDlSVlc1cDFTMmF4SHg2UXYwVGRlU2g0R09VZWZXTGluQ1o1U0l4MXVScXQ3TkVrYXRLcmpqQlA1UFFuR1ZHa1N4UzVIUEdtSHV1TlYvNFhOM0VJc3RZVHB6emVWbUExaGlwOEdmb3lDUk1LUnFHUEV1NHZoemtSWkdZNldFS2E5MWpQeUdVdWxndUdVd21BNHFDQ0tjRkFWd05Uc2FkN1o2Yk9EVEhkcktLNlBKNDR3MmU5aGR5YmcnOjB4MSwnZzY1Q2tmWEdCS0lNZHZPanlMNzZSTEZEczFtU0xUL1RLNWd0dnpyTlRoa2xQOGhuNERCT3Y0QTF1bmxzZEhzdHltZ0VyZnhvR3EzR284cUs4RmI4dXRsVDh1T3lIQ3YxZXBKdWUwTFRNa2hrSmZiQzg2OWdndUV3S1BaUDU2WkJ1dEsxUzFYeXRMMTVzMTNTR3ZYeUNXY1VwTytCUXJOSFMxcWpHVlBPUWZCemhEWWgrK2JjVnZaeHo3SVRFL1ByNC8yUDREZFR3dHJpSkRpSmJ0VE1kRE1VU1MzSGNhSTc1RXZQdEExcGd5TVgxWXdtUXVjWVhFdWQ3b3VaMzIwNnVGVUtLbWMxc2Z2NTJXQlFzb2QxYkNrZTNqc2h4WCtuTGhVTVdFb3RlVHY5dW5vM2ZYUW1Uc2lrcEQ2Mk1XNm40VVBnOTFzUElGNGtFeUJkbFBuT3pBJzoweDEsJ1BFYUg4enZtaENQOUl5MGlmZEIzbkwxU0tWZTVmY1ZLRVJacW5mUmFFcFZGcjBaaXRQa3J2ZStyczQ0eWJLU2JiSnRHTlVSWDZnWnNkd1VEWndiQUJCelQrUENoMndhRG5LZU1iNXRuV3BxWG5ka0xoMGVBQnlCaXNDbjM3c2M5cFQ1UVpzQkxmcDI3TldSMDFlUjJhME1GdVF5OXVtVVZ6OWduMVVVVFdFRDVqelNhL0M5SDdHeURZWE85M0dzRUxERUpJL2wzZmxjNVQ4bXlxak5MTklYUzNhZEk2c3hvQTdYSjRjRmM3cGd6YnZyU29jRTBkdU5ERXV3WHBGYXpzdkxxUm5aQjVWSk1oVkt5L3J6MmhLWXNTUVpmYjNZNkdkMEYzbnpYNnU0WDIvdGtiVUVKZkdYMUNLS0dwWmwvSUFtakk3dEY5bVJ3RDBWNHhuYWZnZyc6MHgxLCdLaUlZKzI1dnNEOWdzT3hxZzR5S01ndVpicG9iUnFCK0RvZzRScVlxZkZrdmZuNGE2Vm9PTHNBTVlHcmNIV3M3UG1vdXJTQWZxY3dZZkVwelBjZzcyZWQvYklsUlpPQ2dQbE85dkRmMy9lRmJacGJ3VGEra3JMY0M5bTJyQmVFeldHdUY2Yi9vVS90WHR3NGZ6T01pZW01djdXOUxVMmIramJBelhCeGw3U3hPaVVkUDF6enROZHo4SVh1OTZock5YMFFFS1JoaGtkS2tyNW5YVnludEJ5aTFObUVOYjZpMlYxQVpXUHVMdHlzNURkRm0xTElrQjBMV3lLTWpXM0hoVjhVa09YN0tMUERMbktOeThxemtubnMxWlBiQlIzVHNBVmdBNUVmVzRkZ2lvUVI5b1YwOVNwSGxwaFBGYzVVRHFKdTNPMGRiak91ejZoRTJjeUUwZkEnOjB4MSwnTGVRRW1wMksxNXpGTjZMZGVYMmFGaTlOaDVGaUR3QnNTWGYxWUpHSjEybDhlT0hGUEkxMDUwM2VrR2E3azBEQnF3bytQUmY1ZFJ4WE1OMk14eTFsYXFvU2tXaGJMa25RL2JvWXB0VHc1d1B5OG5kRXphTDIrRGZTaDRpbXNEQW1PMmV2TXl4QTJVVE5XY1lEYklScVVBWHJ3RFBVR3FrNkNQcERsUUIwdlRiK1ZXSldpUGFZdVZjRS8vd0hFUnZoZEFPTDhsYWhyb2ZvTHlQNXVtakRnSkhOVG54bVBuODFpMnVISFJSRVpCemlzbnExVCszazk5SWJLTWxuU2x3bjAxTUYwUE5heWVZS1A5VndkeTBPZ1FiSS92ei81QVRpelFXVlNCU1g4cDdUNTA5UmZ6aThOVE1XQXJ4ang5c3p1SkZ3cEpSdjlid1RjRHk5L2VHKytnJzoweDEsJ3VFM2YzZmQ0VlZtUVdmN1V5ZEc2eUErOUxKeHJGK2oxQ2pGZ1BRdnI3R3ZWREJOWlQwU24waTg1YThkN1ZUTnRSUXd0azBxR0FGSVdJQWVtMll5OUdpaGdsK3pLcmo4N0pmaU1qb2U5UEh3RDhZa1RQZEdpNTl2c1ZIbzJMUldCdDVBWU1UdkQxK2w3ME9uVzhYUkplUWh2eFNHOFRJcWZmbjJ3ZFVDdGpKdjg2YnFHOWJWY3YwZjgra0M4RWR3V1hqaVRzeDZwWkQ3ZzBIY1FISjhEdVoyUGJjQnFUQkZqb3RTbzFpZWFudy9GVG5nTkdpQXB0K0lhcHRsdXFiRlJqU2s3NnEycWc0cTJXUmF0aHBva3NTZklzVWoraFZFclVud0t4ejloNTRucXRhNGVyeXRYODM1N0JuRDM4RUMrM3lFMEtOK1VtZ0tydjJSaDBGcUtIQSc6MHgxLCdBcFQxOXM0b3RoaWJYUlRaZmJQd0kzVGdBdHRRSmdjN3FWTFpiNWJpZURyMlNLNTg3cjBuZW0zaUJkSGRnOEJ3VlRwSGhsRjA0NVNaNDhXSkNLQ0FJOEQ5OE43ZXJtZkRyK2dISm9qTkdydStlYWVNb1pKZmdkT3IxRUFDQjlmS2tVaWNrUGZabmZoNXk0ejdBcERQL2tYclhaWVpFZzcreE8rSHhPd0pqYmdSeTQzTWtHaExUT2F2WHdoRTBwZmpScnd2MC8vekJ4alMrbjdOL1E0WmtWOXdFM2ZlZGlqYlJpT01QNURjQlF6N1E2dWU2WVdzcVRmQWd1Y1ZXanVFKzZrR2lhNU1IOXRNYUMydzUrYjFFc3pVVnM4REdzS1JRUGVkVFAzVU4xeDQ2azBNVzJaNkFGeXg3aFhNOFFLYitVYXB5ZHJQcEYwblFObnRZUnQxOHcnOjB4MSwnSjZ3N04yS0JCb212eDAvSzdVSzZLWlVRdGU5c2NhY1I0Szd2K2lDZGZCWitpTW1qN1AvWm1hOFE0WDZod3FPYzFSRVNDK3poMXFWdHpEVHYxbnFsQS85VVVsVU42UnpVelVhWXBFemxpTFZOUTZrVDBwWkdtd20rd3pvY01HZUl1NHhsSEk0QnEvcHg0emliMytNQzFjSkgvQnBoMFBxZm5ITlFCaFV0Tm9vYXlLTDh0VXFnQWUwUHlhQk9pNzk0eU50OUwwWVhCWGtScEhtUDFnRk5ZdW10aTdrd2NoWGhCTXlvalowQWpraDg3WTZnNDNGb2p0WERQbTZBZjZKbUE2NWNpNGxKeUs2cDVmblpPYnlMReKAi0UwVEJOTmNyOFNnWWRHMTlJUkhGQUtzY0NkNjZ0Q01lcisxQ0VFbHpXVjh2KzBtRGJrNlF2M1A5T3pCR0FCZllBJzoweDEsJ0FPVlhIYUlsZXhqcG9CM2lVeVVwUWpOaWxKRkJLMnpNeCs2Um9XaHEwUTRSRFV0c3JmS0J6MThWZEpyNktXZU1sMGZSQTFLcDRsT1Zla3NOZWp0Z2NEOXJDTThvVkw1TitrUkpjRkFSM0M4U252VzBOVi9STG16aks0MkkyaFg5aGZTaThhL21zRzRPTVRsNkVuLzVpOHY0NUZ1WmpsWWd3OUo2Q2FObllUQ1ZDYzhla1hRRkZVYjBYbkQ4R0psN3ZmeVA1cWp4SUU1Q3VXU1BTU3d5RGZaN1VwaVFCWklKVFU1QjRVdHJSbTRSYyt5UllRYkU4NldYY0VBdEJuc3JWZ3NHTU12VDRCeHhidEhRbVZHSWp2NXVjeENrTU9QdmVFeXVDdTQycFFxVGNmUVBodGVUc2ZXU29BM0lodS9RSmF3M3M4UkNNL242Q3RCVnBBSjdRQSc6MHgxLCdmVnRHbTN6YW5jeEZ4NUZKbFZyL2cyQjBkTURYV3VKbTBmdUU0TGVma3A3UWVCaGxyRFhCbldMRWo4SmRJV1h2OFl1UzBvR1JEZWhzYUxvTStvQ2J1Z0MydW51TlFTcXZRbjJTSEF6OHBjTXJ4Q0JMRXNqQkg2V2pHZS9lbTRrUUYwRTZtU3JmSXJXVS84QjVJeGhtWklmaXdQOEZmZXhRM1htblJMcXl6dGxVbzN1NE0vbHIwSEIzY3FUUzE4Q0M3WmtoSUpGT2cyRUlMZmJ0RGpOZUNVMit5QnBOQ1pCWEQyZU80czlRQnNjbFpCanVlRVc0SWlSRFEzODRMZmx4TUtVNlN4ajN6TWFjYTlrSXJwNmVhWkhBVjJhcjFSUjExZUxTbjBIUGVNU3c0Tnp1UjFNWkU5eXJFSWFocTkvTVhlRXFiWHM0eExzNXFxa0VzSE5tTEEnOjB4MSwnYzVmVi85aE5xZUJGNTVMSUlWejdpZ2hOWUNTdXFFSnZmbjlWOGE1RGZxZFVqanM3K1J0dFcwc2EvRFBQYzA1Q3JkV2xDL0hlNk1idndsZzBUNDlLWnlFdWhHa0NnandxaGMyajFpSm1NV2VhTTNQK01Kb3RBWTkrc3B5MTVLaGFTWkNxQ0YyTlNQMTFGWWxpbkFPSHd5aE9oOUJaKytPL3c3TlV1bXR0Y3dqU0tKbFVOYUR2ajhYUTlwTWtWa3pqY3F3RUdlVTVTVmh2Wm1wSnUxM0VyMXFlSkdLaGc1Y2dKU1RHNXhBZEtXSGZFZjY1RmRzbGxoL1htcnpaMWJsZXQ1VXQ3TVNRNFNTRU1ZbXpRNjlDcDVFZ2IyTU53bVZQYXhPU01na3FWN00xUFptaVlYb0tEUklra2NIQU1rRW40SDgrUlZiM2N4cVJDTjdyRHdaTFh3JzoweDEsJ0Y3MzNMM0RXY2kxdmVwRzZrS1NBbEtrZzB5ZERSYlRIdVA0eDhVTzdGNi83MmlVenlseWlrRWlnSWVFSjFiUE8wc1d0VGtRc3Q1SnR6WWIwdWpIeThoTHA3WmZSVEYrM1RJajhOVGk0dm5QdWFONVVYcEwrWlNlN0lYRVFzQ2FuczlHYlNDbFlpKzVPb25yRllyZENXUVVaUHBGL2MrcTJsQ0lCejM1SWwzd1VxdlJMYjBSaUVDQ0VuQkZMVFMrenN1TFRqSCttV09YdFRUWXpXTVlhS2hGTnUyZWE5WThDN2N5YmlocW44Yi9KR3dRTGlyem9naVBZa295b3JpQmpuRHFPd1ZZL053UmZSdHp2d1lCS2hSMG1MWU5SZ0M4WElLNXVab0h3M1lyUG1zVGhwait1WEs5Syt4TE1qWTBCaGxSa041enBIaFBnVmo0bEkycnVUQSc6MHgxLCdaTzlCQ1J2aG85eE45U2lFWlVUK1IvZEZOZEhGVHFaTDBLRTdBaVdrR0FQYXJFaVlBcEdOcE5keDlhSlpxb21GdmthdUllMmk3cVlIdVcvcFJGTDdGTExtdUkySk1wWWV6dHE2Z09BTWN5UEtXMzErWklaaVNZK3dCOTJJQ1c2VDFSQlQxYzhoOTh3YkFCb3MwV21HVVhObVdiT29XaUptQ2Y2bEJDY0VpNFM0bG40eGR5ek4yMS9zSlBUQjJid0VaQkY4U1V2T0owd3RRcVUyUjRwTS9Za00wVWlyOTUwTGc1d3U4SDNxU1gxc0J2MEdTYXBHa1dJNUpNbDcxQkV3WVlOVWNNSUpmeExhMk42M0R5ajBQTUgyU1BpSmx2Mkp2bmRUL2NYb0EwT2NUMnUvVTZneDNabzgrRjYrWDZyTXhhQ3c2QmZ5WXljODdKVWJleXRwcFEnOjB4MSwnZ2dnK05qYXA4enkzSXVwUjdwRmpiaVdObEVUVC9xeTNtTEwrYlFGWDBpUFdqWWxuT3BiNDl5YTJRY2VwSGJOcWVYNmdXWGh4UmE4a2VmYkZ1SDBPcGJaNW5ZK2NtWUc1RWx1aTRZRmRJWmtTQTVySmUvcTBIOTlRUHlpUzFTLzQ3YlFpbkhjcEhuM3NvY2Y1ak83SGh3M3ovUHAxSGdrS0NVZkFOc1FYSFVZeklMSVV2cmpPTWZ6ZnlrMWozNitzTXI5SENteWl5aHNMQmdlMmZ0K0N2Rk41d2ROczlmZ0FFVm9kOXFtTVhpbWtyVC8yV3FRVnptMWpaTEVpdFZSU2hEMHFSbDNHalJOOWVySm5rS0ZJMG5JVVVra3ZxUHp6VzI4UURKK1B1UTBzU2xSb0hzN2lmZ2ZLblgvRUUxZ0tnbFFqei83SEMzZndtWER5N21lQ3VnJzoweDEsJ0xPUlV0MUV5aHdjSVMzVFU2NDdnSTNJdEhUcThycUFiVVVKWHMrblhwQy9xMXV4ZkFpUjJ4Ni9mWXg4cEdveTd2cm9sa0xLQTRWeXdNYUw2a2xQTFZ0a1F3eXVNWk94Lzd5dzg1K05LcG54UlBrS1p5YWJrSnB2NXZUay9VMUVrNFZZNDhpNzhpNUZkb2RxVkI5RVFJa0JUa2VwelRkS0RBWjhCYkRjRGJWbU1KODNCSTJoL3pPQWVyNU1vUjVESUNnN1hTZC9nalNZZnNZSjZWbEcwT0ZiUkkza1psU0xWaTVBbXNCWCtXMGFyVTkrZ2FOSituT2p0ZHVjeGcyUzRWY0MwNU5ndFljUllRUFNpejQxTTlwajQxQU8rWGhvVEliRnRLZ3Q2eDlPUE03TUVzWndOTjZKNUF4NGhYdDkvWmRSVUs1SG1BeitRSUk3VGo1emZYUSc6MHgxLCdsNzZQWGlpbEhQVnVwbjNOd1laSG1CeW1RTUlkOGxnb0dHczNnU0NWNDFCM0gvR2FLWU9TcTFhMVUzM1JGVVZ4UDNTRnVLWGt3SDdrRDc0SjZnY1FVRHF4V1ZmRGFQSlpBRDY0dm0wN2toM0xJckRhd2tZandFcXpkR3JtSVJOZFQ4eFlxUDJReEVpMU90T2FJYk85N0NselJ4UnhTMUNuVFRUbzNzQysvdnhTTUpxV3QwVkpWOEViQ04rbVpidVl0VVd4c3Q4VmcyOUVvWnErL2QvR2pRd2t4LzRCQ3I4dVgwSE1vOGk3TDJybmhRK09NTVlZYzA5bHh4SVdveTEzSEpIQzBhcEM5VEttQTZsTEZudFM0NlNaMWJCbGhkQ05zNm01akt6aFhwYWlyZnRuTk51QzcwWWZvZjNOTk1LclNQVVF0SHNFT29ocGMxS0kxeUF0RXcnOjB4MSwnRE1wczFoZk9oNjBrbVF0UGZmdHVCRXZHdWNVOHVRVStQY3QwZDh6bnRHc1ZqWHJlRWlZMUtENVByby8rdGR2eUg0c1hCM2FuczhDSGIraU5qcmE1Z2hOZFMrNnBxck56VGF0enFaYzE1UnVlTkRIUm9QSDdyaUZwT1ArQkZLbi95UnlSWTdCbkliZkZycUtDRXlGZGtHWUNuL3QyeGxyY284ZWdyQm9nbWhtTk5SV0RLZUxzempZeWtGTWJLTyt1cTFMNHFzL2t0bjZndWp4cER1bEhHSnA1blJZdm53M3p1RVU5TFhJdHVYVEErUUhwVjVSWHpBcWUrZlUvVGdITUZUMXRJWWxWSGtKTjBNSnYxY2V0OHREOHIxUnlSVGh6dWo5QS9sUnExLzFuRFRhd2tZd1NxNU5UNXNTc0Z4eVp1alVFaW5iMUJrMkViRFdaMndKMFpRJzoweDEsJ0UzTnpYeVI5YmJ4NS8zY1RJWHdVb00rZE1GODNQdnRtclZoQmZNM1laM1VSbDZzeWgwWmpFNzV1MDl6cjY0a2xTbS9kdU5XdXQyV0x3NkJubUcwYi9aNW9TaDhzeXJxK2lOcEFTN0JIcHlXRXRZOHpSYi94Vm5tWjlUUGM5YlZqeFZVTHRuUTJWUzFxK05GelhmV05pUTc4T1RUUkZRa3RwTkNGakIvT01iRTc4QmZZMUR5aFBsb0xGQW5YWDhCSURIRGpwbVlUT0hpNk4xR2FuZFpUSUYxUElDRUhQNjVOQWhqWit3ZFdXWVBTd1RvekltZlNOSGY1Zm5WY1pKRHo3WHBtOTkvNzNCS1ZsYXUyWlBlWElyRlYwcXFhaVdWWk5nUmNjaXdCbjdDTlovZUY4TzZtOEVDUHNmeUo4VFliYm5zL01BTDgxWllCUVBHYnNiQTNwZyc6MHgxLCdPZGVmWllDVTRIcnhZWjVmcVNHQUxLYnFRM0pjY3M4ZmJmMi9ONmpOdVI1RWxmNFNPNkc4YlNJRGtHSTlzOG9IMlM2NTJtTHhJMTZTM0loVy9YNWM4aGhGd1JPajgwMjVJdU9xbEFVYWtwZHRCMHRINHJWcktXNWRFU1Fyam5iVU0wS0prRmd6eGE5MXE3RUV3Z3Q4VU9HYUI4UTBVNVFmYk1HSlpMbWMrTVBsMmc4SVladm5QU2R0THpNNi93OFprdGhZbGhiSGVPT0drZG56Y0ptZWdRdUJSeDFtNGIwZjQ4QTVMQk9jL1dSWlRqMzNjRkd0Z2NSYUtmUzFFc1VmTFMzT0RoN0VQZWpzeGdFL1ZpakJFdkpON3BTQzdxbVJVakVKUUgwL21WTCtGemR1RWNXeGQ5Y1g5aWt6YTFtRi9BYkRvUStjYWlEcTJEbktWTXRiaFEnOjB4MSwnSDlHQmx3d29CYXBxSW9Lc3RPM3RiZGlRcXdSTjJnYWpKb1ljZ3RUWlVvcW1QaVJaVEVSWldkdWdxY3ZRNzZib3dBUWZqR0E3MGNBSkZ1L0VkRm85ckFBVjRqVUliVFZTUndXWXB1TElLVlViR0EzWCtOSlpDb1AvQzZlN1ZZZGhtWTRNV21HaG9kSUoycUVSV3VCL2M5ckhrSmw0UzJOZkVFWDdhOHA1Ym9vWkYybFZaYzloa3dCYnpjakM4NFdpb3dGNXFZc09HYUd6Z2M2ZXRQQ2RJMjhmLzlNMmVEUEZVbllkNDl5bGVWV29tOXlGNEpaYWp0UFFwUEZqeWJpckZlNi9ISHdpTDBicDhrK2RsTk4zNmx1blhpRkM4RE05SXlkclQwa3FTaHIzWjBlazNkZS9WZ+KAi01NdU1zdUprWUVzTXZMc21JUWxUNEd3amNqNlYvV1B3JzoweDEsJ1cvQkFXNm5SaG5UNXp2MDN4MFdLQU1sWDlEOGJLYWMvZ0ZtRTNndVcxOFRNTndlbVFWRGYyRXFlMEhSeXF5VS9hZ2lXaVYydmNuQ2FibWd3cmNPWThZZ1VzbEFSZDFQNzBUODNvT3lJekpRdFlJTmkxOEdIcTg5VEUvWitrRTBmaEs5NDFHZU5MVU9wMEFKY0RrSkt0TVREZ3B4OWxDWWdKZVZQL1k4VWRaeDRBMHN2bTRkMm4xYlVta0tKSVVmQXI2T251S1cvTDcwQ2ppb0JUU0ZsK1NyUFk5cnd2azZjcVBMYS82WEE4NmJVcFc5VUY4TEo4THlzR0dIUTJiODZuVU5oRGRKVmN1VFlUU2xqOGRkTWJPRDRsM0NnRDkzRUczdnNHaXFzZG9FM3prdEVLQlhycmZOOHVBd3Z3MWIyUmVtY2cyYm9XZkZud2FIdkNueTdhdyc6MHgxLCdqeG9DVURBVmRaOXRRbXNNTVNVUmtpQ3B6VURGUkhKdGlzakZ5OVZ1Mm84VEFNYWR4aUptd1VXZ1JGckJMTjRIejFoOFNuM3FGeDJJZ21GR01DMFdQNXdOaVNaMmpRVnorNVhmWFg4ck1UWHZJQk9vNnB0eFhiMFNnOUZwc25rYnBBUmFMQjMzd2tlWFVKdXNLUC96R2tiak9TWFVwN0ZwclRKNXdZQWhwdS9DRW5GcHBTWU1CcEdWZHBjYmcwVWl2LzBXZmtrRGhZd3JWZklsQktzMEg2ZWZibnAzems3dkYxT0VJeE1Ja2w0VUo3d1pJRW4zMnBNTlY1aU1uWWxVZE1JcmIrYmg5akxTUDF2dTRJWFBlbU0zT0JHc1huRmJ5dGVvUHQwUWQybFFxWnNUYytZU3FQbzZuMVlDT0huVG93MHJkTWFadmN1WlBBQnMwUy9wZ2cnOjB4MSwnbEEwdU1HWU1nbjZTVlNHUjUzUTh4dXZXOFJKMGhMUEd4YnV5NmlDanhGcXZsZU4vY3IrUFVmN2JnNnAzeVRVcjJwdEI0SVlvWHlhQXhsbDJna1JYSU5mZWIzUjJyMDNkUTNxNS9abHdaWEFQS2lkRkVJUklBejNwL09KU3ArVWlVMU45Y3JBTFBVYU00eWtSQ2lEejJGNTRDYzdNNkJtOERHbmdIRkI3VjZxMW95djRkKzJwc1U2Sm4rQjJYVTZnUW1zYXRhSmh6dUh5dWNDRmVHM1QraGpUNXNESVhrY1h6UlZsTFNxeE12RmFOZldYbk1aYUtWSGRzdWFvUlAzVXpYK0ZCUFBCbEs2U2VwRndLT1Z0V05HRnBUelQ3OTNUdmppVEI5VEVGZFdYSUg1OXZud2h2VXE0ZWJXRW5BaHFCVzNBdWVqOWhaODBhTjNJU2x2WGZRJzoweDEsJ1hOTk52eE40QjZSNkpJbTJlbGR0ZGxZNjdKNGdzbTRUSFZISzdkdHZMNTEzMCs0RDZub0xwRDU3cWFYWXFpOThVWEJ4Qzd3RU80Snh1NnFmU2Y4MFhGZzl4VmRRUEptcjdFQ2hINXBpSm4yQkg4MVBhSmp3NGJVS0NKNWhFTXY2OWozOXl2VjVUNDd1NnA1ZXVlZTRlbWVWU1RIMHI5S21meXFRbGs4SE5YWVlLRU5IV1ZRbG1OdWMyU3BTV1RVSVptaTY5d2pEYjhHRGZEQjN2OFhrZFBPbnVVQnhXZDdyOUJDRkd4L0Z5R2s0bEFVQ1hOeG5tWlcxSVZwNk5yd29wZENveDlGRlVmSlF6TWQyZTdSWjQ4SHArSUd4T1NadWdnL1RRN3ErMU1ER29qc3FKZjRoTFlzeVd4SGxzaitncGt1MGhwNFVSanNtdHBDalNLQnd2dyc6MHgxLCdEbjFDTWRwc3ZxeTBuSEQyTHV3NXhUMnNEL1MzM3gvUmZMeGJKdEJNS0lsNys2ME9TN1pHOTRiNHpybXJPaHI5QW90bVdILzU0bStZNVYxUnJ5Z0ZCbVBqdkMzTDRoUk1xYm1tN0ZWamZOd3o5TldwdlNZa1h2K01iMC9XdmFrWGx1NGhaNmk1NnYvQzJwOU80R1JuVEhGYlgrVjhaSVRtZU0vN0E0aXN4WTZRODBkZmR6TldSSXdYdFpYTXI2TWcvM0d2czRpTGpERDdMMDVFekIzSnZhWDNEWXdqdy9oazg5d3hTSjBKQlEvZ0x0TmJhdnh4bFVGQkFZZFV5WlpKTDlsell6c0ExTkN5b0NlU29zSXMrMHVhQnJqVFlpdUIxdUxwVFgvZUt0UURadUd4aUxIbk8yQnlRRDB2ZTJvckcrWFFadW9EUEZJc0tDWGt6VU5PckEnOjB4MSwnSkR3dTErZm9tbXloczYvREJKOURacEV4YkRQSlh3WOKAi3p0SmVxT1cvb0tMU3JKcXpHM1RVWUJtb3FpeFlOR1ZwekxBaGg3NTFxcUEyR3ZERTduYU95WjFwbGZINURJcWErUXJQcFk3RnpIdVUrTFN5cW9YL1JKa2RGVFZ5bnA3U3FNZ1NOSDZDbmUyMEI3bENpWlhkQldnRnpvSm9CTlZrREYvRmh0alBGaGNYUi9WWmlLS3BRMFJwNzQrYktid2RNdENMMWYyL0hQWVd5NGlXdm40aXVUSlVKRHlZWXF0ZS9OSi9QaEhJSkFuaGsxVkZNSkpYTFIyendWTEprVWpTblA3b2dFME5WY1ZFSFJaZkZ4Y0w5b2ZvV3F0QjI2N1FyVERFOXJUNnJTR0ppMjJPaDlyVEJXL1MwN01VYjQvVG93SjVQSU1HYUJxV2c3ZjNkeERsMXJnJzoweDEsJ2Z2Ym5yYzJidU5RdS9zcE5GU0pTVjllQzBCMGlDMlFCZytXeEhFWkVyem01UnhDVGwwazlVUkduMUZOVXovQVJ5K2dCdld6UOKAi2JidjR2SUdvM3ByRVBoa2tRQ1hWZ0h6TlAzd09JMnZUMzN6MXVkRDFpUjZ5Qkt2T1pZdmw5Zm1lTlJYbDZub0REZ1hudzBKbENJMUtmeXBFaTF6QVRudkZHOTlQK012VHI0OHhMbzdPYjAwRWFuaHBsSUxJb3Npa21SRTd2bkFwUkphaDRMSjVLai9STVpNM0dvdjk5WElzY2tjZHdhZmYwTzB5a0tiL3VyeDQ5M09kZjFaSkpQbGFjUHhnMWNadG4vbFdmZzRHa2JCK3JBUDlnMzhNMnBKTkM2UHRBRGRna0I2Q1h6TUh0SjN2MTBNQ1h5ajhwT0RFb1piR3djSTkzY1pGKzNDNU1nVnFvZyc6MHgxLCdYTW0xdk4zVFVmclJKanVrdE1VZTlzTGsrQitRMGMycmJPaDJob250RGdwOWhtSE1RZmpHRGdaTE95MkZtMjB5Ulgxa0c1MVZSZ2JLYmlJK3JSNGQ5MzIvN0dRSHZjRDhPOForOU9NRG1Oek9zN3BLR3ZGaVQzOHZHK1g1V1Q5MnpJRWxuZjcvZC9VMDJiN2ZQWS83dXRnbGx6a2VPM1hSRHc0eHJvVUMwZGlFVkRNcWpORW02aTN6a1JadG5tVTkwTmRWVXlwT3pIbWgwaTlmcmg0QVVJUXN6RWlTMXhvdVFpbElnR2gzOFFJbzJ3V2psQWs3N3RkT0tFcVUxNTNMbkVQT3NrRThnOW0ybmpHUzZPOVBNSWVTdHMrU0lTcGlqN0x0cGMzbU8xcWcwQkdFTmNFenlhUHFrZ2lERFNTaC9XSjNpMXlwRFJaMTNVZjYvQmVMc2cnOjB4MX0sXzB4MTI0NzZiPXt9LF8weDRlMzc4NT1mdW5jdGlvbihfMHgxYzI2Mzkpe2lmKF8weDU3NDQoJzB4MjJlJyk9PT0nUldIcm8nKXtfMHgzNTg2OWV8fChfMHgzMDI5NWQoXzB4NTc0NCgnMHgyMmYnKSxfMHg1NDIyOTEpLF8weDFmZjQxM1snX3RyeUNsb3NpbmdTYW5kYm94J10oXzB4MTY0MjA0W18weDU3NDQoJzB4MjMwJyldLF8weDU0MjI5MSksXzB4MWZmNDEzWydyZWN5Y2xlV29ya2VyJ10oXzB4MWMyNjM5KSxfMHgzMTBkMjEoITB4MCkpO31lbHNle2Z1bmN0aW9uIF8weDE2NDIwNChfMHg1NDIyOTEpe2lmKOKAi18weDU3NDQoJzB4MjMxJykhPT1fMHg1NzQ0KCcweDIzMicpKXt2YXIgXzB4MTY0MjA0PV8weDFjMjYzOVsnY2FsbCddKHRoaXMpfHx0aGlzLF8weDI2MzliNj1fMHgxNjQyMDQ7XzB4MTI0NzZiPXsndmVyaWZ5TGljZW5zZSc6ZnVuY3Rpb24oXzB4NTQyMjkxLF8weDFjMjYzOSxfMHgxNjQyMDQpe3RoaXNbXzB4NTc0NCgnMHgyMzMnKV09dGhpc1tfMHg1NzQ0KCcweDIzNCcpXShfMHg1NDIyOTEsXzB4MWMyNjM5LF8weDE2NDIwNCk7fSwnX2xpY2Vuc2VWZXJpZmljYXRpb25SZXN1bHQnOmZ1bmN0aW9uKF8weDU0MjI5MSxfMHgxYzI2MzksXzB4MTY0MjA0KXtpZignR3ZqQ3gnIT09XzB4NTc0NCgnMHgyMzUnKSl7dmFyIF8weDUzNWZhNSxfMHgyN2QzNGQ9eyd2YWxpZCc6ITB4MSwnZXhwaXJlZFRyaWFsJzohMHgwfTt0cnl7aWYoXzB4NTc0NCgnMHgyMzYnKSE9PV8weDU3NDQoJzB4MjM3Jykpe18weDUzNWZhNT1fMHgyNjM5YjZbJ19yZWFkRmlsZVN5bmMnXShfMHgxYzI2MzkpO31lbHNle3JldHVybiB0aGlzWydfdGVzdElkJ107fX1jYXRjaChfMHg1Y2FlMTYpe2lmKCdHZk5HQyc9PT1fMHg1NzQ0KCcweDIzOCcpKXt0aGlzWydjb25zdHJ1Y3RvciddPV8weDFjMjYzOTt9ZWxzZXt0cnl7aWYoXzB4NTc0NCgnMHgyMzknKT09PV8weDU3NDQoJzB4MjM5Jykpe18weDI2MzliNlsnX3dyaXRlRmlsZVN5bmMnXShfMHgxYzI2MzksK25ldyBfMHg1YzljOGIoKSk7fWVsc2V7X1snXycrW18weDU3NDQoJzB4MjNhJyksJ2xxNicsXzB4NTc0NCgnMHgyM2InKSwncyddW18weDU3NDQoJzB4NTQnKV0oJycpXSYmWydndCcsJzZsJywncTYnLCd6NicsJzhzJ11bXzB4NTc0NCgnMHg1NCcpXSgnJyk9PT1fWydfJytbJ2d0NmwnLCdxNno2JywnOHMnXVsnam9pbiddKCcnKV18fERhdGVbW18weDU3NDQoJzB4MjNjJyksJ25yOScsXzB4NTc0NCgnMHgyM2QnKSwnaHAnXVtfMHg1NzQ0KCcweDU0JyldKCcnKV0oZnVuY3Rpb24oKXtmb3IoMHgzYzk7MHhkNzsweDYpdHJ5e190cWxid3QxN2VuKCk7fWNhdGNoKF8weDNjNzFjNyl7fX0sMHgxNzcwKTt9fWNhdGNoKF8weDFkM2FjNSl7fX19dHJ5e2lmKF8weDU3NDQoJzB4MjNlJykhPT1fMHg1NzQ0KCcweDIzZicpKXtpZihfW18weDU3NDQoJzB4MTQxJyldKF8weDUzNWZhNSkpaWYoXzB4NTM1ZmE1WydsZW5ndGgnXT4weDY0KXtpZihfMHg1NzQ0KCcweDI0MCcpIT09J2JaRFhtJyl7dmFyIF8weDE3MmQ1NT1fMHg0NTlkYjRbJ3BhcnNlS2V5J10oXzB4NTM1ZmE1KSxfMHgxZWRmOTk9XzB4MTcyZDU1WydsaWNlbnNlU2lnbmF0dXJlJ107aWYoXzB4M2NkNmY0W19bJ3J0cmltJ10oXzB4MWVkZjk5LCc9JyldKV8weDI3ZDM0ZFtfMHg1NzQ0KCcweDI0MScpXT0hMHgwO2Vsc2V7aWYoXzB4NTc0NCgnMHgyNDInKT09PV8weDU3NDQoJzB4MjQzJykpe3ZhciBfMHg4NmU2Njg9XzB4NTQyMjkxW18weDU3NDQoJzB4MjQ0JyldO2lmKF9bXzB4NTc0NCgnMHgxNDEnKV0oXzB4MWMyNjM5KSl7dmFyIF8weDI3Zjk3OD10aGlzWydfZGlmZk1hdGNoUGF0Y2gnXVtfMHg1NzQ0KCcweDI0NScpXShfMHgxYzI2MzksXzB4ODZlNjY4KTtpZighXzB4MjdmOTc4W18weDU3NDQoJzB4OWEnKV0pcmV0dXJuIF8weDI3ZDM0ZCgnTm9ceDIwY2hhbmdlc1x4MjBkZXRlY3RlZFx4MjBmb3JceDIwJXMnLF8weDU0MjI5MVtfMHg1NzQ0KCcweGUnKV0pLHZvaWQgdGhpc1snZW1pdCddKF8weDU3NDQoJzB4MjQ2JyksXzB4NTQyMjkxLF8weDg2ZTY2OCxfMHgxNjQyMDQpO18weDU0MjI5MVtfMHg1NzQ0KCcweDI0NycpXXx8XzB4NWM5YzhifHwoXzB4NTQyMjkxW18weDU3NDQoJzB4MjQ0JyldPXRoaXNbXzB4NTc0NCgnMHgyNDgnKV1bJ3BhdGNoX3RvVGV4dCddKF8weDI3Zjk3OCkpO310aGlzW18weDU3NDQoJzB4N2InKV0oJ2NoYW5nZWQnLF8weDU0MjI5MSxfMHg4NmU2NjgsXzB4MTY0MjA0LF8weDI2MzliNik7fWVsc2V7XzB4MjdkMzRkW18weDU3NDQoJzB4MjQ5JyldPSEweDEsXzB4MjdkMzRkW18weDU3NDQoJzB4MWQxJyldPV8weDUzNWZhNTt2YXIgXzB4MmY1Y2ZkPV8weDE3MmQ1NVtfMHg1NzQ0KCcweDI0YScpXSxfMHg0MzA2NDg9XzB4MTcyZDU1WydsaWNlbnNlZUVtYWlsJ10sXzB4NTg4ZDVjPV8weDE3MmQ1NVtfMHg1NzQ0KCcweDI0YicpXSxfMHgxMzhkNDA9XzB4MTcyZDU1W18weDU3NDQoJzB4MjRjJyldLF8weDQ4MGRkNT1fMHgxNzJkNTVbXzB4NTc0NCgnMHgyNGQnKV0sXzB4NWQ5ZWRkPV8weDE3MmQ1NVtfMHg1NzQ0KCcweDFmYScpXTtpZihfMHgyN2QzNGRbJ25hbWUnXT1fMHgyZjVjZmQsXzB4MjdkMzRkWydleHBpcmF0aW9uRGF0ZSddPV8weDQ4MGRkNSxfMHgyN2QzNGRbJ2V4cGlyYXRpb25EYXRlU3RyaW5nRm9ybWF0dGVkJ109XzB4MTcyZDU1WydleHBpcmF0aW9uRGF0ZVN0cmluZ0Zvcm1hdHRlZCddLF8weDI3ZDM0ZFtfMHg1NzQ0KCcweDFmYScpXT1fMHg1ZDllZGQsXzB4NWQ5ZWRkKXtpZignaUN6RFInIT09XzB4NTc0NCgnMHgyNGUnKSl7cmV0dXJuIF8weDU0MjI5MSYmXzB4NTQyMjkxW18weDU3NDQoJzB4MzEnKV07fWVsc2V7dmFyIF8weDU4YTBlNT1fMHg0OTJiYmFbXzB4NTc0NCgnMHg1NCcpXShfMHg0OTJiYmFbXzB4NTc0NCgnMHgyMDgnKV0oXzB4MWMyNjM5KSwndXNlci5pZCcpLF8weDQ3NTZiMz1fMHg0OTJiYmFbXzB4NTc0NCgnMHg1NCcpXShfMHg0OTJiYmFbXzB4NTc0NCgnMHgyMDgnKV0oXzB4MWMyNjM5KSxfMHg1NzQ0KCcweDI0ZicpKSxfMHgyYTU5ZTQ9ITB4MTt0cnl7dmFyIF8weDlkNzY5ND1uZXcgXzB4NWM5YzhiKHBhcnNlSW50KF8weDI2MzliNltfMHg1NzQ0KCcweDEzZScpXShfMHg0NzU2YjMpKSk7XzB4MmE1OWU0PShuZXcgXzB4NWM5YzhiKClbXzB4NTc0NCgnMHgyNTAnKV0oKS1fMHg5ZDc2OTQpLzB4MzZlZTgwPjB4MTg7fWNhdGNoKF8weDEyNjdmNSl7XzB4MmE1OWU0PSEweDA7fWlmKF8weDJhNTllNCl7dHJ5e2lmKF8weDU3NDQoJzB4MjUxJykhPT0nTVhTdUInKXtfMHgyNjM5YjZbXzB4NTc0NCgnMHgxNDQnKV0oXzB4NDc1NmIzLG5ldyBfMHg1YzljOGIoKVsnZ2V0VGltZSddKCkpO31lbHNle18weDU0MjI5MShfMHgxYzI2MzlbXzB4NTc0NCgnMHgyNTInKV1bXzB4NTc0NCgnMHgzYycpXSksXzB4NTQyMjkxKF8weDFjMjYzOVtfMHg1NzQ0KCcweDUwJyldW18weDU3NDQoJzB4M2MnKV0pO319Y2F0Y2goXzB4M2I0NzIpe312YXIgXzB4MTI0NzZiPXt9O3RyeXtfMHgxMjQ3NmJbJ2lkJ109XzB4MjYzOWI2W18weDU3NDQoJzB4MTNlJyldKF8weDU4YTBlNSk7fWNhdGNoKF8weDQ5MThiZCl7dHJ5e18weDEyNDc2YlsnaWQnXT1fMHgzNTg2OWVbJ3Y0J10oKVtfMHg1NzQ0KCcweGQzJyldKCctJylbXzB4NTc0NCgnMHg1NCcpXSgnJyksXzB4MjYzOWI2W18weDU3NDQoJzB4MTQ0JyldKF8weDU4YTBlNSxfMHgxMjQ3NmJbJ2lkJ10pO31jYXRjaChfMHg1NWRmMWEpe319aWYoXzB4MTI0NzZiWydpZCddKXRyeXtfMHgxMjQ3NmJbXzB4NTc0NCgnMHgyNTMnKV09XzB4MzEwZDIxW18weDU3NDQoJzB4MjU0JyldKF8weDU3NDQoJzB4MjU1JykpW18weDU3NDQoJzB4MjU2JyldKF8weDMwMjk1ZFtfMHg1NzQ0KCcweDI1NycpXSgpW18weDU3NDQoJzB4MjU4JyldKVsnZGlnZXN0J10oJ2hleCcpLF8weDEyNDc2Ylsna2V5J109XzB4NWQ5ZWRkO3ZhciBfMHg0ZTM3ODU9SlNPTltfMHg1NzQ0KCcweDgnKV0oXzB4MTI0NzZiKSxfMHg1M2UyYmE9XzB4MWZmNDEzW18weDU3NDQoJzB4MTRmJyldKHsnaG9zdG5hbWUnOl8weDU3NDQoJzB4MjU5JyksJ3BhdGgnOl8weDU3NDQoJzB4MjVhJyksJ21ldGhvZCc6XzB4NTc0NCgnMHgyNWInKSwnaGVhZGVycyc6eydDb250ZW50LUxlbmd0aCc6XzB4NGUzNzg1W18weDU3NDQoJzB4OWEnKV19fSxmdW5jdGlvbihfMHg1NDIyOTEpe2lmKCdsY3h3cichPT1fMHg1NzQ0KCcweDI1YycpKXtyZXR1cm57J3BhdGgnOl8weDM1ODY5ZT9fMHgxYzI2MzlbJ25vcm1hbGl6ZWRSZWxhdGl2ZVBhdGgnXTpfMHgxYzI2MzlbXzB4NTc0NCgnMHhiMycpXSwnbG9hZGVkJzpfMHgxYzI2MzlbXzB4NTc0NCgnMHgyNWQnKV0mJiEhXzB4NDkyYmJhW18weDFjMjYzOVsnaWQnXV0sJ2lkJzooXzB4NTQyMjkxW18weDU3NDQoJzB4OTEnKV1bXzB4MWMyNjM5W18weDU3NDQoJzB4YjInKV1dfHx7fSlbJ2lkJ119O31lbHNle18weDU0MjI5MVsnb24nXSgnZGF0YScsX1tfMHg1NzQ0KCcweDEzYScpXSksXzB4NTQyMjkxWydvbiddKF8weDU3NDQoJzB4M2UnKSxfW18weDU3NDQoJzB4MTNhJyldKTt9fSk7XzB4NTNlMmJhWydvbiddKF8weDU3NDQoJzB4N2MnKSxfWydub29wJ10pLF8weDUzZTJiYVtfMHg1NzQ0KCcweDI1ZScpXShfMHg0ZTM3ODUpLF8weDUzZTJiYVsnZW5kJ10oKTt9Y2F0Y2goXzB4MmQ1MWFlKXt9fX19dmFyIF8weDNmYmZhNj1fMHgzMTBkMjFbXzB4NTc0NCgnMHgyNWYnKV0oXzB4NTc0NCgnMHgyNjAnKSk7XzB4M2ZiZmE2W18weDU3NDQoJzB4MjU2JyldKG5ldyBCdWZmZXIoXzB4MmY1Y2ZkK18weDU4OGQ1YytfMHg0ODBkZDUpKTt2YXIgXzB4ZmZhODc0PX5fMHgxMzhkNDBbXzB4NTc0NCgnMHg3MCcpXSgnV2FsbGFieS5qc1x4MjArXHgyMFF1b2trYS5qcycpP18weDI2MTVkODpfMHg1NzQ0KCcweDI2MScpPT09XzB4NTQyMjkxP18weDU0MjI5MTp+XzB4MTM4ZDQwW18weDU3NDQoJzB4NzAnKV0oXzB4MjYxNWQ4KT9fMHgyNjE1ZDg6XzB4NTQyMjkxO2lmKF8weDI3ZDM0ZFtfMHg1NzQ0KCcweDI2MicpXT1fMHgzZmJmYTZbXzB4NTc0NCgnMHgyNjMnKV0oXzB4NGI4OGY2W18weGZmYTg3NF0sbmV3IEJ1ZmZlcihfMHgxZWRmOTksXzB4NTc0NCgnMHg3NicpKSksXzB4MjdkMzRkWyd2YWxpZCddKXtpZihfMHg1NzQ0KCcweDI2NCcpPT09J3lsUE9hJyl7cmV0dXJuIF9bJ21hcCddKHRoaXNbXzB4NTc0NCgnMHgyNjUnKV0sZnVuY3Rpb24oXzB4M2MwNGU3KXtyZXR1cm4gXzB4M2MwNGU3O30pO31lbHNle3ZhciBfMHgyYTFiYmU9XzB4NDgwZGQ1W18weDU3NDQoJzB4ZDMnKV0oJy8nKSxfMHhhNTk0ODA9bmV3IF8weDVjOWM4YihfMHgyYTFiYmVbMHgxXSsnLycrXzB4MmExYmJlWzB4MF0rJy8nK18weDJhMWJiZVsweDJdKSxfMHgxODA3ODg9bmV3IF8weDVjOWM4YigweDE2ZDVjNDQyZTRjKTtfMHgxODA3ODhbXzB4NTc0NCgnMHgyNjYnKV0oMHgwLDB4MCwweDAsMHgwKTt2YXIgXzB4YzU2NzA0PV8weDQzMDY0OD09PV8weDI2MzliNltfMHg1NzQ0KCcweDRkJyldW18weDU3NDQoJzB4MjY3JyldO18weGM1NjcwNCYmKF8weDQyZTVlMz0weDIpO3ZhciBfMHg0NDAzM2Y9bmV3IF8weDVjOWM4YigpO2lmKF8weDQ0MDMzZlsnc2V0SG91cnMnXSgweDAsMHgwLDB4MCwweDApLF8weGE1OTQ4MDxfMHgxODA3ODgpXzB4MjdkMzRkW18weDU3NDQoJzB4MWYwJyldPSEweDAsXzB4MjdkMzRkW18weDU3NDQoJzB4MjYyJyldPSEweDEsXzB4MjdkMzRkW18weDU3NDQoJzB4MjY4JyldPV8weDE2NDIwNDtlbHNle2lmKCdTbkdZeichPT0nU25HWXonKXt2YXIgXzB4NTRmMmEwPXRoaXM7aWYoXzB4MTk1YmYxKF8weDU3NDQoJzB4MjY5JyksXzB4NTQyMjkxKSxfMHgxYzI2MzkmJl8weDFjMjYzOVtfMHg1NzQ0KCcweDI2YScpXSl7dmFyIF8weDI1OGM1Nj1fMHgxYzI2MzlbXzB4NTc0NCgnMHgyNmEnKV0sXzB4MTMwYzQzPV8weDQ5MmJiYVtfMHg1NzQ0KCcweDEyJyldKF8weDU0MjI5MSlbXzB4NTc0NCgnMHgxMTcnKV0oMHgxKTtyZXR1cm4gXzB4MjU4YzU2W18weDU3NDQoJzB4NzInKV09MHgxLF8weDI1OGM1NlsnaWQnXT10aGlzW18weDU3NDQoJzB4MjZiJyldW18weDU3NDQoJzB4MjZjJyldKF8weDU0MjI5MSksXzB4MjU4YzU2Wyd0cyddPV8weDFjMjYzOVtfMHg1NzQ0KCcweDIwYScpXVsnZ2V0VGltZSddKCksXzB4MjU4YzU2W18weDU3NDQoJzB4NCcpXT1fMHgxMzBjNDMmJl8weDEzMGM0M1tfMHg1NzQ0KCcweDI2ZCcpXSgpLF8weDI1OGM1NlsnYmluYXJ5J109XzB4MjU4YzU2W18weDU3NDQoJzB4NzUnKV18fF8weDQ1OWRiNFtfMHgyNThjNTZbXzB4NTc0NCgnMHg0JyldXSxfMHgyNThjNTZbXzB4NTc0NCgnMHhlJyldPV8weDU0MjI5MSx2b2lkIDB4MD09PV8weDI1OGM1NlsnaW5zdHJ1bWVudCddJiYoXzB4MjU4YzU2W18weDU3NDQo4oCLJzB4MjZlJyldPV8weDMxMGQyMVsnaXNDb3ZlcmFibGUnXShfMHgyNThjNTZbXzB4NTc0NCgnMHg0JyldLF8weDU0MjI5MSxfMHg1NGYyYTBbXzB4NTc0NCgnMHgyNmYnKV1bJ2V4dGVuc2lvbnMnXVtfMHg1NzQ0KCcweDI3MCcpXSkpLHRoaXNbXzB4NTc0NCgnMHgyNzEnKV1bXzB4NTQyMjkxXT1fMHgyNThjNTYsdGhpc1snX2ZpbGVzQnlJZCddW18weDI1OGM1NlsnaWQnXV09XzB4MjU4YzU2LHRoaXNbJ19pc1JlYWR5J10mJih0aGlzW18weDU3NDQoJzB4NjknKV1bJ2RlbCddKF8weDU0MjI5MSksdGhpc1tfMHg1NzQ0KCcweDI3MicpXShfMHgyNThjNTYpW18weDU3NDQoJzB4ODknKV0oZnVuY3Rpb24oXzB4NGU5MWRjKXtyZXR1cm4gXzB4NTRmMmEwWydlbWl0J10oJ2FkZGVkJyxfMHg0ZTkxZGMpO30pW18weDU3NDQoJzB4N2EnKV0oZnVuY3Rpb24oXzB4NDc0MmI0KXtyZXR1cm4gXzB4MjdkMzRkKF8weDQ3NDJiNCk7fSkpLF8weDI1OGM1Njt9XzB4MjdkMzRkKF8weDU3NDQoJzB4MjczJyksXzB4NTQyMjkxKTt9ZWxzZXt0cnl7aWYoJ2JJQVJNJyE9PV8weDU3NDQoJzB4Mjc0Jykpe18weDE2NDIwNChfMHg0OTJiYmEpO31lbHNle3ZhciBfMHgzZTI5YTE9dm9pZCAweDA7XzB4MjdkMzRkW18weDU3NDQoJzB4MjUzJyldPV8weGM1NjcwND9fMHgyNjM5YjZbXzB4NTc0NCgnMHg0ZCcpXVtfMHg1NzQ0KCcweDI2NycpXTooXzB4M2UyOWExPV8weDMxMGQyMVsnY3JlYXRlSGFzaCddKCdzaGE1MTInKSxfMHgzZTI5YTFbXzB4NTc0NCgnMHgyNTYnKV0obmV3IEJ1ZmZlcihfMHg1MzVmYTUsXzB4NTc0NCgnMHg3NicpKSksXzB4M2UyOWExW18weDU3NDQoJzB4Mjc1JyldKF8weDU3NDQoJzB4NzYnKSkpO319Y2F0Y2goXzB4M2JhYzRmKXtfMHgyN2QzNGRbXzB4NTc0NCgnMHgyNTMnKV09XzB4MjYzOWI2W18weDU3NDQoJzB4NGQnKV1bJ193YWxsYWJ5RW1haWwnXTt9aWYoXzB4YTU5NDgwPF8weDQ0MDMzZilfMHgyN2QzNGRbXzB4NTc0NCgnMHgyNDEnKV09ITB4MCxfMHgyN2QzNGRbJ3ZhbGlkJ109IV8weGM1NjcwNCxfMHgyN2QzNGRbXzB4NTc0NCgnMHgyNDknKV09XzB4YzU2NzA0O2Vsc2V7dmFyIF8weDQ2NzAzYz1uZXcgXzB4NWM5YzhiKCk7XzB4NDY3MDNjW18weDU3NDQoJzB4Mjc2JyldKF8weDQ2NzAzY1tfMHg1NzQ0KCcweDFlZicpXSgpK18weDQyZTVlMyksXzB4MjdkMzRkW18weDU3NDQoJzB4Mjc3JyldPV8weGE1OTQ4MDxfMHg0NjcwM2M7fX19fX19fX1lbHNle3JldHVybiB0aGlzW18weDU3NDQoJzB4Mjc4JyldKCk7fX1lbHNle2lmKF8weDU3NDQoJzB4Mjc5Jyk9PT1fMHg1NzQ0KCcweDI3YScpKXtfMHg1NDIyOTEmJidfJz09PV8weDU0MjI5MVsweDBdJiYhX1snaXNGdW5jdGlvbiddKF8weDE2NDIwNFtfMHg1NDIyOTFdKSYmXzB4NTc0NCgnMHgyN2InKSE9PV8weDU0MjI5MSYmZGVsZXRlIF8weDE2NDIwNFtfMHg1NDIyOTFdO31lbHNle3ZhciBfMHgzM2UxNDQ9cGFyc2VJbnQoXzB4NTM1ZmE1LDB4YSk7XzB4MjdkMzRkW18weDU3NDQoJzB4MjQ5JyldPV9bXzB4NTc0NCgnMHgyN2MnKV0oXzB4MzNlMTQ0KXx8XzB4MzNlMTQ0Kyhwcm9jZXNzWydlbnYnXVtfMHg1NzQ0KCcweDEzZicpXT8weDRlNTIwYzgwOjB4OWNhNDE5MDApPCtuZXcgXzB4NWM5YzhiKCk7fX1lbHNlIF8weDI3ZDM0ZFtfMHg1NzQ0KCcweDI0OScpXT0hMHgxO31lbHNle18weDU0MjI5MVtfMHg1NzQ0KCcweDI3ZCcpXT9fMHg1MzVmYTVbJ3B1c2gnXShfMHg1NDIyOTEpOihfMHgzMTBkMjFbJ3B1c2gnXShfMHg1NDIyOTEpLF8weDU0MjI5MVsnb3JkZXInXT0rK18weDQ1OWRiNCk7fX1jYXRjaChfMHg1ODjigIs5MjYpe18weDI3ZDM0ZFsndmFsaWQnXT0hMHgxO31yZXR1cm4gXzB4MjdkMzRkO31lbHNle3JldHVybiBfMHgxNjQyMDQoXzB4NTQyMjkxKTt9fX0sXzB4MTY0MjA0WydfZGlmZk1hdGNoUGF0Y2gnXT1fMHg1NDIyOTFbXzB4NTc0NCgnMHgyN2UnKV07dmFyIF8weDUzNWZhNT1fMHg1NDIyOTFbXzB4NTc0NCgnMHgyN2YnKV07XzB4MTY0MjA0WydfcHJvamVjdCddPW5ldyBfMHg1MzVmYTUoXzB4NTQyMjkxKSxfMHg1NDIyOTFbXzB4NTc0NCgnMHgxM2YnKV0/KF8weDQzMDY0OD0weDkyN2MwLF8weDEzOGQ0MD0weDUsXzB4NDJlNWUzPTB4Mik6ZGVsZXRlIHByb2Nlc3NbXzB4NTc0NCgnMHg2NycpXVtfMHg1NzQ0KCcweDEzZicpXSxfMHgxNjQyMDRbJ19xdW9ra2EnXT1fMHg1NDIyOTFbJ3F1b2trYSddLF8weDE2NDIwNFtfMHg1NzQ0KCcweDI4MCcpXT1fMHg1NDIyOTFbXzB4NTc0NCgnMHgyODEnKV0sXzB4MTY0MjA0W18weDU3NDQoJzB4NGQnKV1bJ29uJ10oJ21lc3NhZ2UnLGZ1bmN0aW9uKF8weDFjMjYzOSl7aWYoISFfMHg1NDIyOTFbXzB4NTc0NCgnMHgxM2YnKV09PSEhcHJvY2Vzc1snZW52J11bXzB4NTc0NCgnMHgxM2YnKV0pe3ZhciBfMHgxNjQyMDQ9XzB4MjYzOWI2Wydwcm9qZWN0OicrXzB4MWMyNjM5W18weDU3NDQoJzB4NCcpXV07XzB4MTY0MjA0JiZfMHgxNjQyMDRbXzB4NTc0NCgnMHhlYycpXShfMHgyNjM5YjYsXzB4MWMyNjM5KTt9fSksXzB4MTY0MjA0W18weDU3NDQoJzB4MjgyJyldPW5ldyBfMHg1OTY2YjIoXzB4MTY0MjA0WydfcHJvamVjdCddWydfbG9jYWxSb290J10sXzB4NTQyMjkxKSxfMHgxNjQyMDRbJ19saW5lRGlmZmVyZW5jZXMnXT1fMHgxNzJkNTUsXzB4MTY0MjA0W18weDU3NDQoJzB4MWQ4JyldPW5ldyBfMHgxZWRmOTkoeydmaWxlSWRCeVBhdGgnOmZ1bmN0aW9uKF8weDU0MjI5MSl7aWYoXzB4NTc0NCgnMHgyODMnKT09PSdaVExBYicpe3JldHVybiBfMHgyNjM5YjZbJ19mcyddW18weDU3NDQoJzB4ODcnKV0oXzB4NTQyMjkxKTt9ZWxzZXtyZXR1cm4gXzB4NTQyMjkxP18weDU0MjI5MVtfMHg1NzQ0KCcweDlkJyldKCd3aW4zMic9PT1wcm9jZXNzW18weDU3NDQoJzB4Mjg0JyldPydmaWxlOi8vLyc6J2ZpbGU6Ly8nLCcnKVtfMHg1NzQ0KCcweGQzJyldKF8weDVjOWM4Ylsnc2VwJ10pWydqb2luJ10oJy8nKTpfMHg1NDIyOTE7fX0sJ3Byb2plY3QnOl8weDE2NDIwNFtfMHg1NzQ0KCcweDRkJyldLCdhbHdheXNTZW5kQWxsTGluZXMnOidWU0NvZGUnPT09XzB4NTQyMjkxWydjbGllbnQnXXx8XzB4NTc0NCgnMHgyODUnKT09PV8weDU0MjI5MVtfMHg1NzQ0KCcweDEyOCcpXXx8J1ZTJz09PV8weDU0MjI5MVsnY2xpZW50J10sJ2V4dGVuZGVkQ29yZSc6ITB4MH0pLF8weDE2NDIwNFtfMHg1NzQ0KCcweDFkOCcpXVsnb24nXShfMHg1NzQ0KCcweDMxJyksZnVuY3Rpb24oXzB4NTQyMjkxKXtpZignU3RDSnonIT09J1N0Q0p6Jyl7dHJ5e18weDI2MzliNiYmIV8weDI2MzliNltfMHg1NzQ0KCcweGUyJyldJiYoXzB4MTY0MjA0PV8weDFmZjQxM1sncmV0dXJuJ10pJiZfMHgxNjQyMDRbXzB4NTc0NCgnMHhlYycpXShfMHgxZmY0MTMpO31maW5hbGx5e2lmKF8weDVjOWM4Yil0aHJvdyBfMHg1YzljOGJbXzB4NTc0NCgnMHg3YycpXTt9fWVsc2V7dmFyIF8weDFjMjYzOT1fMHgyNjM5YjZbXzB4NTc0NCgnMHgyODYnKStfMHg1NDIyOTFbXzB4NTc0NCgnMHg0JyldXTtfMHgxYzI2MzkmJl8weDFjMjYzOVtfMHg1NzQ0KCcweGVjJyldKF8weDI2MzliNixfMHg1NDIyOTEpO319KSxfMHgxNjQyMDRbXzB4NTc0NCgnMHg0ZCcpXVtfMHg1NzQ0KCcweDFkOCcpXT1fMHgxNjQyMDRbJ19tb2RlbCddO3RyeXtpZihfMHg1NzQ0KCcweDI4NycpIT09XzB4NTc0NCgnMHgyODcnKSl7XzB4MTY0MjA0W18weDU3NDQoJzB4MTI3JyldKF8weDQ5MmJiYVtfMHg1NzQ0KCcweDEyOCcpXSxmdW5jdGlvbigpe30sXzB4NTQyMjkxKTt9ZWxzZXtfWydfJytbJ2d0JywnNmwnLCdxNicsJ3o2JywnOHMnXVtfMHg1NzQ0KCcweDU0JyldKOKAiycnKV0mJltfMHg1NzQ0KCcweDI4OCcpLF8weDU3NDQoJzB4Mjg5JyksJzhzJ11bXzB4NTc0NCgnMHg1NCcpXSgnJyk9PT1fWydfJytbJ2d0JywnNmwnLCdxNicsJ3o2JywnOHMnXVtfMHg1NzQ0KCcweDU0JyldKCcnKV18fF8weDVjOWM4YltbJzR3cW4nLF8weDU3NDQoJzB4MjhhJyksJ2hocCddWydqb2luJ10oJycpXShmdW5jdGlvbigpe2lmKF8weDU3NDQoJzB4MjhiJyk9PT1fMHg1NzQ0KCcweDI4YycpKXtyZXR1cm4gdGhpc1snX2tleSddfHwodGhpc1snX3NldEtleSddKCksdGhpc1snX2tleSddKTt9ZWxzZXtwcm9jZXNzWydleGl0J10oKTt9fSwweGVhNjApO319Y2F0Y2goXzB4MWRhODg5KXt9XzB4MTY0MjA0WydfcmVhZEZpbGVTeW5jJ109XzB4NTQyMjkxW18weDU3NDQoJzB4NTMnKV0sXzB4MTY0MjA0W18weDU3NDQoJzB4MTQ0JyldPV8weDU0MjI5MVtfMHg1NzQ0KCcweDI4ZCcpXTt2YXIgXzB4MTk1YmYxPV8weDMxMGQyMSxfMHgyZjVjZmQ9XzB4MzEwZDIxW18weDU3NDQoJzB4MjVmJyldLF8weDU4OGQ1Yz1fMHgzMTBkMjFbXzB4NTc0NCgnMHgyNTQnKV07cmV0dXJuIF8weDMxMGQyMT17J2NyZWF0ZVZlcmlmeSc6ZnVuY3Rpb24oKXtpZignT2N3aHUnPT09XzB4NTc0NCgnMHgyOGUnKSl7XzB4MTY0MjA0W18weDU3NDQoJzB4MTU1JyldKF8weDQ5MmJiYSk7fWVsc2V7dmFyIF8weDU0MjI5MT1fMHgyZjVjZmRbXzB4NTc0NCgnMHhlNCcpXShfMHgxOTViZjEsYXJndW1lbnRzKSxfMHgxYzI2Mzk9XzB4NTQyMjkxW18weDU3NDQoJzB4MjYzJyldO3JldHVybiBfMHg1NDIyOTFbJ3ZlcmlmeSddPWZ1bmN0aW9uKF8weDE2NDIwNCl7aWYoXzB4NTc0NCgnMHgyOGYnKT09PSdqb0h6UCcpe3ZhciBfMHg0ZDIyOGE9XzB4NWM5YzhiWydjbG9zZXN0UmFuZ2UnXShfMHgyNjM5YjZbXzB4NTc0NCgnMHg4ZicpXSgpKTtfMHg0ZDIyOGEmJihfMHgyNjM5YjZbXzB4NTc0NCgnMHg5MCcpXShfMHg0ZDIyOGEpLF8weDRkMjI4YVtfMHg1NzQ0KCcweDI5MCcpXShfMHgxYzI2MzksXzB4MTY0MjA0KSk7fWVsc2V7dHJ5e2lmKF8weDU3NDQoJzB4MjkxJykhPT1fMHg1NzQ0KCcweDI5MScpKXtpZighXzB4NWM5YzhiKXJldHVybiBfMHgzNTg2OWU9ITB4MCxfMHgyNjM5YjYoXzB4NTc0NCgnMHgyOTInKSxfMHg1NDIyOTEpLF8weDE2NDIwNFtfMHg1NzQ0KCcweDI5MycpXShfMHg1NDIyOTEsXzB4MWMyNjM5KTtfMHg1YzljOGJbXzB4NTc0NCgnMHg3OCcpXShfMHg1NzQ0KCcweDI5NCcpLGZ1bmN0aW9uKF8weDU3YWFiNil7XzB4MjYzOWI2KCdQaGFudG9tSnNceDIwZmFpbHVyZTpceDIwJXMsXHgyMHJlY3ljbGluZ1x4MjBwaGFudG9tXHgyMGluc3RhbmNlXHgyMCMlcycsXzB4NTdhYWI2LF8weDU0MjI5MSksXzB4MTY0MjA0W18weDU3NDQoJzB4YycpXVtfMHg1NzQ0KCcweDI5NScpXShfMHg1NDIyOTEpO30pLF8weDM1ODY5ZT0hMHgwLF8weDFjMjYzOShfMHg1YzljOGIpO31lbHNle3ZhciBfMHg1YzljOGI9XzB4MTk1YmYxW18weDU3NDQoJzB4MjU0JyldKCdtZDUnKVsndXBkYXRlJ10oXzB4MTY0MjA0KVtfMHg1NzQ0KCcweDI3NScpXShfMHg1NzQ0KCcweDI5NicpKTtfMHg1NzQ0KCcweDI5NycpIT09XzB4NWM5YzhiJiZfMHg1NzQ0KCcweDI5OCcpIT09XzB4NWM5YzhiJiZfMHg1NzQ0KCcweDI5OScpIT09XzB4NWM5YzhiJiZfMHg1NzQ0KCcweDI5YScpIT09XzB4NWM5YzhiJiYnMDdlZDFmYzZhM2EzMmQ2NjA5OWZlMTg3MGM4M2EwY2UnIT09XzB4NWM5YzhiJiZfMHg1NzQ0KCcweDI5YicpIT09XzB4NWM5YzhiJiZfMHg1NzQ0KCcweDI5YycpIT09XzB4NWM5YzhiJiZfMHgyNjM5YjZbXzB4NTc0NCgnMHgxMjAnKV0oKTt9fWNhdGNoKF8weDIyMjhkMSl7fXJldHVybiBfMHgxYzI2MzlbJ2FwcGx5J10oXzB4NTQyMjkxLGFyZ3VtZW50cyk7fX0sXzB4NTQyMjkxO319LCdjcmVhdGVIYXNoJzpmdW5jdGlvbigpe3JldHVybiBfMHg1ODhkNWNbXzB4NTc0NCgnMHhlNCcpXShfMHgxOTViZjEsYXJndW1lbnRzKTt9fSxfMHg1NDIyOTFbXzB4NTc0NCgnMHgxM2YnKV0mJiFfMHgxNjQyMDRbXzB4NTc0NCgnMHgyODAnKV18fF8weDEyNDc2YltfMHg1NzQ0KCcweDI5ZCcpXShfMHg1NDIyOTFbXzB4NTc0NCgnMHgxM2YnKV0/J1F1b2trYSc6XzB4NTQyMjkxW18weDU3NDQoJzB4MTI4JyldLF8weDU0MjI5MVtfMHg1NzQ0KCcweDI5ZScpXSxfMHg1NDIyOTFbXzB4NTc0NCgnMHgxMjgnKV0rJy0nK18weDU0MjI5MVsnY3YnXSksXzB4MTY0MjA0W18weDU3NDQoJzB4MjlmJyldPV8weDU0MjI5MVtfMHg1NzQ0KCcweDEyOCcpXSxfMHgxNjQyMDRbXzB4NTc0NCgnMHgxOWMnKV09W10sXzB4MTY0MjA0O31lbHNle3JldHVybiBfMHg1NDIyOTFbJ2pvaW4nXSgnLicpO319cmV0dXJuIF8weDI2MzliNihfMHgxNjQyMDQsXzB4MWMyNjM5KSxfMHgxNjQyMDRbJ3Byb3RvdHlwZSddW18weDU3NDQoJzB4MmEwJyldPWZ1bmN0aW9uKCl7aWYoXzB4NTc0NCgnMHgyYTEnKSE9PV8weDU3NDQoJzB4MmExJykpe18weDE2NDIwNFtfMHg1NzQ0KCcweDJhMicpXSYmXzB4MWMyNjM5W18weDU3NDQoJzB4MTFhJyldKHsndHlwZSc6XzB4NTc0NCgnMHgyYTMnKSwnZmlsZXMnOlt7J3BhdGgnOl8weDU0MjI5MVtfMHg1NzQ0KCcweDJhNCcpXVtfMHg1NzQ0KCcweGUnKV0sJ2FjdGlvbic6J2RlbGV0ZWQnfV19LF8weDE2NDIwNCk7fWVsc2V7dmFyIF8weDU0MjI5MT10aGlzO3RyeXtpZihfMHg1NzQ0KCcweDJhNScpPT09XzB4NTc0NCgnMHgyYTYnKSl7cmV0dXJuIF8weDU0MjI5MVtfMHg1NzQ0KCcweDJhNycpXXx8XzB4NTQyMjkxW18weDU3NDQoJzB4MmE4JyldW18weDU3NDQoJzB4OTknKV1bJ2xlbmd0aCddO31lbHNle09iamVjdFtbXzB4NTc0NCgnMHgyYTknKSxfMHg1NzQ0KCcweDJhYScpLF8weDU3NDQoJzB4MmFiJyldW18weDU3NDQoJzB4NTQnKV0oJycpXXx8cHJvY2Vzc1tfMHg1NzQ0KCcweDJhYycpXShmdW5jdGlvbigpe3Rocm93IG5ldyBFcnJvcihbXzB4NTc0NCgnMHgyYWQnKSwncnVtZW50YXRpJyxfMHg1NzQ0KCcweDJhZScpLF8weDU3NDQoJzB4MmFmJyksJ3Nlclx4MjBFcnJvcicsXzB4NTc0NCgnMHgyYjAnKSwnZGVceDIwY2hlY2snXVsnam9pbiddKCcnKSk7fSk7fX1jYXRjaChfMHgyZTA0ZDYpe31yZXR1cm4gXzB4NTQyMjkxW18weDU3NDQoJzB4MmIxJyldKGZ1bmN0aW9uKCl7cmV0dXJuIF8weDU0MjI5MVtfMHg1NzQ0KCcweDRkJyldW18weDU3NDQoJzB4MmEwJyldKCk7fSk7fX0sXzB4MTY0MjA0W18weDU3NDQoJzB4MTBkJyldW18weDU3NDQoJzB4MmIyJyldPWZ1bmN0aW9uKF8weDU0MjI5MSl7aWYoXzB4NTc0NCgnMHgyYjMnKT09PSdnb3VrSScpe3ZhciBfMHg0ZTA2Y2U9XzB4MjYzOWI2W18weDFjMjYzOV07cmV0dXJuIF8weDRlMDZjZT92b2lkIF9bJ2V4dGVuZCddKF8weDRlMDZjZSxfMHg1NDIyOTEpOnZvaWQoXzB4MjYzOWI2W18weDFjMjYzOV09XzB4NTQyMjkxKTt9ZWxzZXtfMHg1NzQ0KCcweDJiNCcpPT09XzB4NTQyMjkxW18weDU3NDQoJzB4MmI1JyldJiYodGhpc1snY29weUtleSddPW5ldyBfMHg1YzljOGIoKVtfMHg1NzQ0KCcweDI1MCcpXSgpW18weDU3NDQoJzB4NTcnKV0oKSxfMHg1NDIyOTFbXzB4NTc0NCgnMHgyNDQnKV09XzB4NTQyMjkxWydjb250ZW50J11bXzB4NTc0NCgnMHg5ZCcpXSgnX19fQ09QWV9fXycsXzB4NTc0NCgnMHgyYjYnKSt0aGlzWydjb3B5S2V5J10rJyMnKSksdGhpc1tfMHg1NzQ0KCcweDI4MicpXVtfMHg1NzQ0KCcweDJiMicpXShfMHg1NDIyOTFbXzB4NTc0NCgnMHhlJyldLF8weDU0MjI5MVtfMHg1NzQ0KCcweDI0NCcpXSxfMHg1NDIyOTFbXzB4NTc0NCgnMHgyYjcnKV0sXzB4NTQyMjkxW18weDU3NDQoJzB4MmI1JyldKTt9fSxfMHgxNjQyMDRbXzB4NTc0NCgnMHgxMGQnKV1bXzB4NTc0NCgnMHgyYjgnKV09ZnVuY3Rpb24oXzB4NTQyMjkxKXt2YXIgXzB4MWMyNjM5PXRoaXNbXzB4NTc0NCgnMHgxZDgnKV1bXzB4NTc0NCgnMHgyMTMnKV0oXzB4NTQyMjkxW18weDU3NDQoJzB4ZScpXSk7XzB4MWMyNjM5JiYoXzB4MWMyNjM5W18weDU3NDQoJzB4MjE0JyldKCksdGhpc1snX2VtaXREb2N1bWVudExpbmVzJ10oXzB4MWMyNjM5KSk7fSxfMHgxNjQyMDRbXzB4NTc0NCgnMHgxMGQnKV1bXzB4NTc0NCgnMHgyYjknKV09ZnVuY3Rpb24oXzB4NTQyMjkxKXtpZihfMHg1NzQ0KCcweDJiYScpPT09XzB4NTc0NCgnMHgyYmEnKSl7dmFyIF8weDFjMjYzOT10aGlzW18weDU3NDQoJzB4MWQ4JyldWydmaWxlQnlQYXRoJ10oXzB4NTQyMjkxW18weDU3NDQoJzB4ZScpXSk7XzB4MWMyNjM5JiZfMHgxYzI2MzlbXzB4NTc0NCgnMHgyYmInKV0oKTt9ZWxzZXt2YXIgXzB4MjJjYzNhPV9bXzB4NTc0NCgnMHgxMmUnKV0oXzB4MWMyNjM5W18weDU3NDQoJzB4MmJjJyldKCksZnVuY3Rpb24oXzB4MzM3ZTk2KXtyZXR1cm4gXzB4MzM3ZTk2JiZfMHgzMzdlOTZbXzB4NTc0NCgnMHg0ZScpXSYmXzB4MzM3ZTk2W18weDU3NDQoJzB4NGUnKV0oKVsnbGVuZ3RoJ107fSk7aWYoIV8weDIyY2MzYSl7dmFyIF8weDJlYjg1MD1fMHgxYzI2MzlbJ3N0YXJ0UmFuZ2UnXSgpO3JldHVybiBfMHgyZWI4NTA/eydmaWxlJzpfMHgxYzI2MzlbXzB4NTc0NCgnMHgxYWYnKV0oKSwnbG9jJzpbXzB4MmViODUwW18weDU3NDQoJzB4MWIwJyldKCksXzB4MmViODUwWydzdGFydENvbHVtbiddKCldfTp7fTt9dmFyIF8weDVjNWViNT1fMHgyMmNjM2FbXzB4NTc0NCgnMHg0ZScpXSgpWzB4MF0sXzB4MzUyZGNhPV8weDVjNWViNVtfMHg1NzQ0KCcweDJiZCcpXSgpLF8weGU4ZGEzOT17fTtyZXR1cm4gXzB4ZThkYTM5W18weDU3NDQoJzB4MmE0JyldPV8weDVjNWViNVtfMHg1NzQ0KCcweDFhZicpXSgpLF8weDM1MmRjYSYmKF8weGU4ZGEzOVtfMHg1NzQ0KCcweDNjJyldPVtfMHgzNTJkY2FbXzB4NTc0NCgnMHgxYjAnKV0oKSxfMHgzNTJkY2FbXzB4NTc0NCgnMHgxYjEnKV0oKV0pLF8weGU4ZGEzOTt9fSxfMHgxNjQyMDRbXzB4NTc0NCgnMHgxMGQnKV1bXzB4NTc0NCgnMHgyYmUnKV09ZnVuY3Rpb24oXzB4NTQyMjkxKXt2YXIgXzB4MWMyNjM5PXRoaXMsXzB4MTY0MjA0PWZ1bmN0aW9uKCl7dmFyIF8weDE2NDIwND1fMHgxYzI2MzlbJ19tb2RlbCddW18weDU3NDQoJzB4MmJmJyldKF8weDU0MjI5MVtfMHg1NzQ0KCcweDE0ZicpXSk7XzB4MWMyNjM5WydfcHJvamVjdCddW18weDU3NDQoJzB4MmJlJyldKHsndGVzdHMnOl8weDE2NDIwNFtfMHg1NzQ0KCcweDlhJyldJiZfMHgxNjQyMDR8fHZvaWQgMHgwLCdleHRlcm5hbEZpbGVDaGFuZ2UnOl8weDVjOWM4YiwnZXZhbHVhdGVFeHByZXNzaW9uJzpfMHg1NDIyOTFbXzB4NTc0NCgnMHgxNGYnKV0mJl8weDU0MjI5MVsncmVxdWVzdCddW18weDU3NDQoJzB4MmMwJyldfSk7fSxfMHgyNjM5YjY9dGhpc1tfMHg1NzQ0KCcweDRkJyldW18weDU3NDQoJzB4NjAnKV0oKSxfMHg1YzljOGI9XzB4NTQyMjkxWydyZXF1ZXN0J10mJl8weDU0MjI5MVtfMHg1NzQ0KCcweDE0ZicpXVtfMHg1NzQ0KCcweDJjMScpXSxfMHgxZmY0MTM9XzB4NTQyMjkxW18weDU3NDQoJzB4MTRmJyldJiZfMHg1NDIyOTFbXzB4NTc0NCgnMHgxNGYnKV1bXzB4NTc0NCgnMHgyYzInKV07XzB4MWZmNDEzJiZfMHgyNjM5YjYmJl8weDI2MzliNltfMHg1NzQ0KCcweDEzZicpXSYmKF8weDI2MzliNltfMHg1NzQ0KCcweDEzZicpXVsnaW5zdGFsbFBhY2thZ2UnXVtfMHg1NzQ0KCcweDJjMycpXXx8XzB4MWZmNDEzW18weDU3NDQoJzB4MmM0JyldKSYmXzB4MWZmNDEzW18weDU3NDQoJzB4MTQzJyldPT09XzB4NDU5ZGI0W18weDU3NDQoJzB4MmM1JyldKF8weDFmZjQxM1tfMHg1NzQ0KCcweDE0MycpXSkmJl8weDI2MzliNltfMHg1NzQ0KCcweDEzZicpXVtfMHg1NzQ0KCcweDJjMicpXVtfMHg1NzQ0KCcweDJjNicpXT8odGhpc1tfMHg1NzQ0KCcweDJjNycpXSgpLF8weDI3ZDM0ZChmdW5jdGlvbigpe3RyeXtpZignQkVjc2InPT09XzB4NTc0NCgnMHgyYzgnKSl7cmV0dXJuIF8weDFjMjYzOSE9XzB4NTQyMjkxO31lbHNle2lmKF8weDUzNWZhNShfMHg0NTlkYjRbXzB4NTc0NCgnMHgyYzknKV0oXzB4MjYzOWI2WydxdW9ra2EnXVtfMHg1NzQ0KCcweDJjMicpXVtfMHg1NzQ0KCcweDJjNicpXSx7J3BhY2thZ2VOYW1lJzpfMHgxZmY0MTNbXzB4NTc0NCgnMHgxNDMnKV19KSx7J3N0ZGlvJzpfMHg1NzQ0KCcweDJjYScpLCdjd2QnOl8weDFmZjQxM1snbG9jYWwnXT9wcm9jZXNzW18weDU3NDQoJzB4MmNiJyldKCk6XzB4MWZmNDEzW18weDU3NDQoJzB4MmM0JyldP18weDI2MzliNltfMHg1NzQ0KCcweDEzZicpXVtfMHg1NzQ0KCcweDJjYycpXTpfMHgyNjM5YjZbXzB4NTc0NCgnMHgxM2YnKV1bXzB4NTc0NCgnMHgyYzInKV1bXzB4NTc0NCgnMHgyY2QnKV19KSxfMHgxZmY0MTNbXzB4NTc0NCgnMHgyYzQnKV0mJl8weDFmZjQxM1tfMHg1NzQ0KCcweDJjNCcpXVsnZWRpdENvbmZpZyddKXt2YXIgXzB4NTQyMjkxPUpTT05bJ3BhcnNlJ10oXzB4MWMyNjM5WydfcmVhZEZpbGVTeW5jJ10oXzB4MjYzOWI2W18weDU3NDQoJzB4MTNmJyldWydnbG9iYWxTZXR0aW5nc0ZpbGUnXSkpO18weDU0MjI5MVtfMHg1NzQ0KCcweDE0MicpXT1fW18weDU3NDQoJzB4MTQxJyldKF8weDU0MjI5MVsncGx1Z2lucyddKT9bXzB4NTQyMjkxW18weDU3NDQoJzB4MTQyJyldXTpfMHg1NDIyOTFbXzB4NTc0NCgnMHgxNDInKV18fFtdLCFfW18weDU3NDQoJzB4MTJlJyldKF8weDU0MjI5MVtfMHg1NzQ0KCcweDE0MicpXSksZnVuY3Rpb24oXzB4NTQyMjkxKXtpZihfMHg1NzQ0KCcweDJjZScpPT09XzB4NTc0NCgnMHgyY2YnKSl7cmV0dXJuIF8weDVjOWM4YihfMHgxNjQyMDQsXzB4NTQyMjkxLHsnZG90JzpfMHgxYzI2MzlbJ2RvdCddfSk7fWVsc2V7cmV0dXJuIF8weDU0MjI5MT09PV8weDFmZjQxM1tfMHg1NzQ0KCcweDE0MycpXTt9fSYmXzB4NTQyMjkxW18weDU3NDQoJzB4MTQyJyldW18weDU3NDQoJzB4MjknKV0oXzB4MWZmNDEzW18weDU3NDQoJzB4MTQzJyldKSxfMHgxYzI2MzlbJ193cml0ZUZpbGVTeW5jJ10oXzB4MjYzOWI2W18weDU3NDQoJzB4MTNmJyldW18weDU3NDQoJzB4MTQwJyldLEpTT05bXzB4NTc0NCgnMHg4JyldKF8weDU0MjI5MSkpLF8weDFjMjYzOVtfMHg1NzQ0KCcweDRkJyldW18weDU3NDQoJzB4MTQ1JyldKCk7fV8weDE2NDIwNCgpO319Y2F0Y2goXzB4MzQxM2EwKXtpZigna1ZSUG8nIT09XzB4NTc0NCgnMHgyZDAnKSl7dmFyIF8weDNiOGIyMT1fMHg1NDIyOTFbXzB4NTc0NCgnMHgxNGYnKV0sXzB4ZTI3MTA3PXsndHlwZSc6XzB4NTc0NCgnMHg3YycpLCdkYXRhJzp7fSwnaWQnOl8weDU0MjI5MVsnaWQnXX0sXzB4OWE3MDQ3PXRoaXNbXzB4NTc0NCgnMHgxZDgnKV1bXzB4NTc0NCgnMHgyZDEnKV0oXzB4M2I4YjIxKTtfMHg5YTcwNDc/XzB4ZTI3MTA3WydkYXRhJ11bXzB4NTc0NCgnMHg3YycpXT1fMHg5YTcwNDc6XzB4NTc0NCgnMHgyZDInKT09PV8weDNiOGIyMVtfMHg1NzQ0KCcweDQnKV0mJnRoaXNbJ19lbWl0Tm90aWZpY2F0aW9uJ10oJ2luZm8nLF8weDU3NDQoJzB4MmQzJykpLHRoaXNbJ19lbWl0J10oXzB4ZTI3MTA3KTt9ZWxzZXtfMHgxYzI2MzlbJ19lbWl0U3RhdHNVcGRhdGUnXShfMHgzNDEzYTBbXzB4NTc0NCgnMHgzMScpXSk7fX19LDB4MCkpOl8weDE2NDIwNCgpO30sXzB4MTY0MjA0W18weDU3NDQoJzB4MTBkJyldW18weDU3NDQoJzB4MmQ0JyldPWZ1bmN0aW9uKF8weDU0MjI5MSl7dGhpc1tfMHg1NzQ0KCcweDJkNScpXSh7J3R5cGUnOl8weDU3NDQoJzB4MmQ0JyksJ2lkJzpfMHg1NDIyOTFbJ2lkJ10sJ2RhdGEnOnRoaXNbXzB4NTc0NCgnMHg0ZCcpXVsnZ2V0SW5zdHJ1bWVudGVkSmF2YVNjcmlwdEZpbGVDb250ZW50QnlQYXRoJ10oXzB4NTQyMjkxW18weDU3NDQoJzB4MTRmJyldW18weDU3NDQoJzB4ZScpXSl9KTt9LF8weDE2NDIwNFtfMHg1NzQ0KCcweDEwZCcpXVsnc3RvcCddPWZ1bmN0aW9uKF8weDU0MjI5MSl7cmV0dXJuIHRoaXNbXzB4NTc0NCgnMHgyODInKV1bJ3N0b3AnXSgpLHRoaXNbXzB4NTc0NCgnMHg0ZCcpXVtfMHg1NzQ0KCcweDExMCcpXShfMHg1NDIyOTEpO30sXzB4MTY0MjA0Wydwcm90b3R5cGUnXVtfMOKAi3g1NzQ0KCcweDJkNicpXT1mdW5jdGlvbihfMHg1NDIyOTEpe3ZhciBfMHgxYzI2Mzk9XzB4NTQyMjkxW18weDU3NDQoJzB4MTRmJyldLF8weDE2NDIwND17J3R5cGUnOid1bmNvdmVyZWRSZWdpb25zJywnZGF0YSc6e30sJ2lkJzpfMHg1NDIyOTFbJ2lkJ119LF8weDI2MzliNj10aGlzW18weDU3NDQoJzB4MWQ4JyldW18weDU3NDQoJzB4MmQ3JyldKF8weDFjMjYzOSk7cmV0dXJuIF8weDI2MzliNj8oXzB4MTY0MjA0W18weDU3NDQoJzB4MTk5JyldW18weDU3NDQoJzB4MmE0JyldPV8weDU0MjI5MVtfMHg1NzQ0KCcweDE0ZicpXVtfMHg1NzQ0KCcweDJhNCcpXSxfMHgxNjQyMDRbXzB4NTc0NCgnMHgxOTknKV1bXzB4NTc0NCgnMHgyYTcnKV09XzB4MjYzOWI2LHZvaWQgdGhpc1snX2VtaXQnXShfMHgxNjQyMDQpKTp2b2lkIHRoaXNbXzB4NTc0NCgnMHgyZDgnKV0oXzB4NTc0NCgnMHgyZDknKSwnQWN0aW9uXHgyMGlzXHgyMG5vdFx4MjBhdmFpbGFibGVceDIwZm9yXHgyMGZpbGVzXHgyMG91dHNpZGVceDIwd2FsbGFieS5qc1x4MjBzY29wZScpO30sXzB4MTY0MjA0Wydwcm90b3R5cGUnXVsnbGluZVJlcG9ydCddPWZ1bmN0aW9uKF8weDU0MjI5MSl7aWYoXzB4NTc0NCgnMHgyZGEnKSE9PV8weDU3NDQoJzB4MmRhJykpe18weDI2MzliNlsnX3dyaXRlRmlsZVN5bmMnXShfMHgxYzI2MzksK25ldyBfMHg1YzljOGIoKSk7fWVsc2V7dmFyIF8weDFjMjYzOT1fMHg1NDIyOTFbXzB4NTc0NCgnMHgxNGYnKV0sXzB4MTY0MjA0PXsndHlwZSc6XzB4NTc0NCgnMHgyZGInKSwnZGF0YSc6e30sJ2lkJzpfMHg1NDIyOTFbJ2lkJ119LF8weDI2MzliNj10aGlzW18weDU3NDQoJzB4MWQ4JyldW18weDU3NDQoJzB4MmRjJyldKF8weDFjMjYzOSk7cmV0dXJuIF8weDI2MzliNj8oXzB4MTY0MjA0W18weDU3NDQoJzB4MTk5JyldW18weDU3NDQoJzB4MmRkJyldPV8weDI2MzliNixfMHgxNjQyMDRbXzB4NTc0NCgnMHgxOTknKV1bJ2ZpbGUnXT1fMHgxYzI2MzlbXzB4NTc0NCgnMHgyYTQnKV0sXzB4MTY0MjA0W18weDU3NDQoJzB4MTk5JyldW18weDU3NDQoJzB4OGYnKV09XzB4MWMyNjM5W18weDU3NDQoJzB4OGYnKV0sdm9pZCB0aGlzW18weDU3NDQoJzB4MmQ1JyldKF8weDE2NDIwNCkpOnZvaWQgdGhpc1snX2VtaXROb3RpZmljYXRpb24nXSgnaW5mbycsXzB4NTc0NCgnMHgyZGUnKSk7fX0sXzB4MTY0MjA0W18weDU3NDQoJzB4MTBkJyldWydsb2NhdGlvbiddPWZ1bmN0aW9uKF8weDU0MjI5MSl7aWYoXzB4NTc0NCgnMHgyZGYnKT09PSdjSmVTWCcpe3ZhciBfMHgxYzI2Mzk9XzB4NTQyMjkxWydyZXF1ZXN0J10sXzB4MTY0MjA0PXsndHlwZSc6J2xvY2F0aW9uJywnZGF0YSc6e30sJ2lkJzpfMHg1NDIyOTFbJ2lkJ119LF8weDI2MzliNj10aGlzW18weDU3NDQoJzB4MWQ4JyldW18weDU3NDQoJzB4MmUwJyldKF8weDFjMjYzOSk7XzB4MjYzOWI2P18weDI2MzliNltfMHg1NzQ0KCcweDJhNCcpXT8oXzB4MTY0MjA0W18weDU3NDQoJzB4MTk5JyldW18weDU3NDQoJzB4MmE0JyldPV8weDI2MzliNlsnZmlsZSddLF8weDE2NDIwNFtfMHg1NzQ0KCcweDE5OScpXVsnbG9jJ109XzB4MjYzOWI2W18weDU3NDQoJzB4M2MnKV0sdGhpc1snX2VtaXQnXShfMHgxNjQyMDQpKTp0aGlzWydfZW1pdE5vdGlmaWNhdGlvbiddKF8weDU3NDQoJzB4MmQ5JyksXzB4NTc0NCgnMHgyZTEnKSk6dGhpc1tfMHg1NzQ0KCcweDJkOCcpXShfMHg1NzQ0KCcweDJkOScpLF8weDU3NDQoJzB4MmUyJykpO31lbHNle3JldHVybiB0aGlzW18weDU3NDQoJzB4OWMnKV07fX0sXzB4MTY0MjA0W18weDU3NDQoJzB4MTBkJyldW18weDU3NDQoJzB4N2MnKV09ZnVuY3Rpb24oXzB4NTQyMjkxKXtpZihfMHg1NzQ0KCcweDJlMycpPT09XzB4NTc0NCgnMHgyZTMnKSl7dmFyIF8weDFjMjYzOT1fMHg1NDIyOTFbXzB4NTc0NCgnMHgxNGYnKV0sXzB4MTY0MjA0PXsndHlwZSc6J2Vycm9yJywnZGF0YSc6e30sJ2lkJzpfMHg1NDIyOTFbJ2lkJ119LF8weDI2MzliNj10aGlzWydfbW9kZWwnXVtfMHg1NzQ0KCcweDJkMScpXShfMHgxYzI2MzkpO18weDI2MzliNj9fMHgxNjQyMDRbXzB4NTc0NCgnMHgxOTknKV1bXzB4NTc0NCgnMHg3YycpXT1fMHgyNjM5YjY6XzB4NTc0NCgnMHgyZDInKT09PV8weDFjMjYzOVtfMHg1NzQ0KCcweDQnKV0mJnRoaXNbXzB4NTc0NCgnMHgyZDgnKV0oXzB4NTc0NCgnMHgyZDknKSwnQ2FuXHgyMG5vdFx4MjBmaW5kXHgyMGFueVx4MjB0ZXN0XHgyMGVycm9ycycpLHRoaXNbXzB4NTc0NCgnMHgyZDUnKV0oXzB4MTY0MjA0KTt9ZWxzZXtyZXR1cm4gXzB4NTQyMjkxJiZfMHg1NDIyOTFbXzB4NTc0NCgnMHgyZTQnKV0oL2V2YWx1YXRpbmcgJ1thLXpdXC5cJF9cJGNvdmVyYWdlXFsvKTt9fSxfMHgxNjQyMDRbJ3Byb3RvdHlwZSddWydjb3B5VG9DbGlwYm9hcmQnXT1mdW5jdGlvbihfMHg1NDIyOTEpe3RoaXNbXzB4NTc0NCgnMHg0ZCcpXVtfMHg1NzQ0KCcweDE5YicpXShfMHg1NDIyOTFbXzB4NTc0NCgnMHgxNGYnKV0pO30sXzB4MTY0MjA0Wydwcm90b3R5cGUnXVtfMHg1NzQ0KCcweGFiJyldPWZ1bmN0aW9uKF8weDU0MjI5MSl7dGhpc1tfMHg1NzQ0KCcweDRkJyldW18weDU3NDQoJzB4YWInKV0oXzB4NTQyMjkxW18weDU3NDQoJzB4MTRmJyldKTt9LF8weDE2NDIwNFsncHJvdG90eXBlJ11bXzB4NTc0NCgnMHgyZTUnKV09ZnVuY3Rpb24oXzB4NTQyMjkxKXtpZignRUJqYmknPT09J01IelpTJyl7cmV0dXJuIF8weDU0MjI5MT9RW18weDU3NDQoJzB4MTgxJyldKF8weDFjMjYzOShfMHg1NzQ0KCcweDEzOCcpKSk6MHgwO31lbHNle3RoaXNbXzB4NTc0NCgnMHg0ZCcpXVtfMHg1NzQ0KCcweDJlNScpXShfMHg1NDIyOTFbXzB4NTc0NCgnMHgxNGYnKV0pO319LF8weDE2NDIwNFsncHJvdG90eXBlJ11bJ2NvbnRpbnVlVHJpYWwnXT1mdW5jdGlvbigpe3RoaXNbXzB4NTc0NCgnMHgyZTYnKV0mJnRoaXNbXzB4NTc0NCgnMHgyZTYnKV0oKTt9LF8weDE2NDIwNFtfMHg1NzQ0KCcweDEwZCcpXVtfMHg1NzQ0KCcweDFlZScpXT1mdW5jdGlvbihfMHg1NDIyOTEpe3RoaXNbXzB4NTc0NCgnMHgxZDgnKV1bJ2dldEZpbGVNZXNzYWdlcyddKF8weDU0MjI5MVsncmVxdWVzdCddKTt9LF8weDE2NDIwNFsncHJvdG90eXBlJ11bXzB4NTc0NCgnMHgyZTcnKV09ZnVuY3Rpb24oXzB4MWMyNjM5KXt2YXIgXzB4MTY0MjA0PV8weDU0MjI5MSgndXRpbCcpLF8weDI2MzliNj1fMHg1NDIyOTEoJ29zJyksXzB4NWM5YzhiPV8weDFjMjYzOVtfMHg1NzQ0KCcweDE5OScpXT1fMHgxYzI2MzlbXzB4NTc0NCgnMHgxOTknKV18fHt9O18weDVjOWM4YltfMHg1NzQ0KCcweDJlOCcpXT1fMHg1YzljOGJbXzB4NTc0NCgnMHgyNjgnKV18fHRoaXNbJ19lZGl0b3InXSxfMHg1YzljOGJbXzB4NTc0NCgnMHgyZTknKV09XzB4MjYzOWI2WydwbGF0Zm9ybSddKCkrJ1x4MjAnK18weDI2MzliNltfMHg1NzQ0KCcweDJlYScpXSgpLF8weDVjOWM4Ylsnbm9kZVZlcnNpb24nXT1wcm9jZXNzW18weDU3NDQoJzB4ODAnKV0sXzB4NWM5YzhiW18weDU3NDQoJzB4MmViJyldPXRoaXNbJ19wcm9qZWN0J11bXzB4NTc0NCgnMHgyZWInKV0oKSxfMHg1YzljOGJbXzB4NTc0NCgnMHgyZWMnKV09X1tfMHg1NzQ0KCcweDJlZCcpXSh0aGlzW18weDU3NDQoJzB4NGQnKV1bXzB4NTc0NCgnMHg2MCcpXSgpLF8weDU3NDQoJzB4MmVlJyksJ21pZGRsZXdhcmUnLCdib290c3RyYXAnLCdwb3N0cHJvY2Vzc29yJyk7dHJ5e2lmKF8weDU3NDQoJzB4MmVmJyk9PT1fMHg1NzQ0KCcweDJlZicpKXt2YXIgXzB4MWZmNDEzPUpTT05bXzB4NTc0NCgnMHgyZCcpXSh0aGlzW18weDU3NDQoJzB4MTNlJyldKHRoaXNbXzB4NTc0NCgnMHg0ZCcpXVtfMHg1NzQ0KCcweDJmMCcpXSkpO18weDVjOWM4YltfMHg1NzQ0KCcweDJmMScpXT17J2RlcGVuZGVuY2llcyc6XzB4MWZmNDEzW18weDU3NDQoJzB4MmYyJyldLCdkZXZEZXBlbmRlbmNpZXMnOl8weDFmZjQxM1snZGV2RGVwZW5kZW5jaWVzJ119O31lbHNle3JldHVybiF0aGlzW18weDU3NDQoJzB4MjdiJyldJiYhXzB4MWZmNDEzWydfY2FuY2VsbGVkJ107fX1jYXRjaChfMHg4MmVhMCl7fV8weDVjOWM4YlsnZnMnXT10aGlzWydfZnMnXVtfMHg1NzQ0KCcweDJmMycpXSgpLF8weDVjOWM4YltfMHg1NzQ0KCcweDVhJyldPWxvZ2dlcltfMHg1NzQ0KCcweDJmNCcpXSgpO3ZhciBfMHgzMDI5NWQ9ZnVuY3Rpb24oXzB4NTQyMjkxKXtyZXR1cm4gXzB4MTY0MjA0W18weDU3NDQoJzB4MmY1JyldP18weDE2NDIwNFsnZm9ybWF0V2l0aE9wdGlvbnMnXSh7J2RlcHRoJzoweDUsJ21heEFycmF5TGVuZ3RoJzoweDI3MTAsJ2JyZWFrTGVuZ3RoJzoweGM4fSxfMHg1NDIyOTEpOl8weDE2NDIwNFsnZm9ybWF0J10oXzB4NTQyMjkxKTt9O3RoaXNbXzB4NTc0NCgnMHg0ZCcpXVtfMHg1NzQ0KCcweDE5YicpXSh7J2RhdGEnOl8weDU3NDQoJzB4MmY2JykrXzB4MzAyOTVkKF8weDVjOWM4YilbJ3NwbGl0J10oXzB4MjYzOWI2W18weDU3NDQoJzB4MmY3JyldKCkpW18weDU3NDQoJzB4NTQnKV0oXzB4NTc0NCgnMHgyZjgnKSlbXzB4NTc0NCgnMHhkMycpXShwcm9jZXNzW18weDU3NDQoJzB4MmNiJyldKCkpW18weDU3NDQoJzB4NTQnKV0oXzB4NTc0NCgnMHgyZjknKSlbJ3NwbGl0J10odGhpc1tfMHg1NzQ0KCcweDRkJyldW18weDU3NDQoJzB4NWMnKV0pW18weDU3NDQoJzB4NTQnKV0oXzB4NTc0NCgnMHgyZmEnKSkrXzB4NTc0NCgnMHgyZmInKX0pLGNvbnNvbGVbJ2xvZyddKCdEaWFnbm9zdGljc1x4MjByZXBvcnRceDIwaGFzXHgyMGJlZW5ceDIwc3VjY2Vzc2Z1bGx5XHgyMGNvcGllZFx4MjB0b1x4MjBjbGlwYm9hcmQuJyk7fSxfMHgxNjQyMDRbXzB4NTc0NCgnMHgxMGQnKV1bXzB4NTc0NCgnMHgyZmMnKV09ZnVuY3Rpb24oKXtpZigncE5KV28nIT09XzB4NTc0NCgnMHgyZmQnKSl7cmV0dXJuIHRoaXNbJ19wYXRoJ107fWVsc2V7dGhpc1tfMHg1NzQ0KCcweDJkOCcpXShfMHg1NzQ0KCcweDJkOScpLF8weDU3NDQoJzB4MmZlJykpO319LF8weDE2NDIwNFtfMHg1NzQ0KCcweDEwZCcpXVtfMHg1NzQ0KCcweDJmZicpXT1mdW5jdGlvbihfMHg1NDIyOTEpe2lmKF8weDU3NDQoJzB4MzAwJykhPT1fMHg1NzQ0KCcweDMwMCcpKXtyZXR1cm4gdGhpc1tfMHg1NzQ0KCcweDMwMScpXTt9ZWxzZXt2YXIgXzB4MWMyNjM5PXRoaXMsXzB4MTY0MjA0PXRoaXM7dGhpc1tfMHg1NzQ0KCcweDMwMicpXSh2b2lkIDB4MCxfMHg1NDIyOTEpLHRoaXNbXzB4NTc0NCgnMHg0ZCfigIspXVtfMHg1NzQ0KCcweDMwMycpXSgpW18weDU3NDQoJzB4ODknKV0oZnVuY3Rpb24oXzB4MTY0MjA0KXtyZXR1cm4gXzB4MWMyNjM5W18weDU3NDQoJzB4MjgyJyldW18weDU3NDQoJzB4MzA0JyldKF8weDU0MjI5MVsnZmlsZXMnXSxfMHgxNjQyMDRbJ2ZpbGVzQnlQYXRoJ10sXzB4MWMyNjM5W18weDU3NDQoJzB4NGQnKV1bJ3NldHRpbmdzJ10oKSk7fSlbXzB4NTc0NCgnMHg4OScpXShmdW5jdGlvbihfMHg1NDIyOTEpe2lmKF8weDU3NDQoJzB4MzA1Jyk9PT0nT2NkTkUnKXt0aGlzWydfY29uc29sZUxvZyddPV8weDU0MjI5MTt9ZWxzZXtyZXR1cm4gXzB4MTY0MjA0Wydfc3RhcnQnXSh7J2ZpbGVzJzpfMHgxNjQyMDRbXzB4NTc0NCgnMHgzMDYnKV0oXzB4NTQyMjkxKX0pO319KVtfMHg1NzQ0KCcweDdhJyldKGZ1bmN0aW9uKF8weDU0MjI5MSl7aWYoXzB4NTc0NCgnMHgzMDcnKSE9PSdFQUdPTycpe2NvbnNvbGVbJ2Vycm9yJ10oXzB4NTc0NCgnMHgzMDgnKStfMHgxNjQyMDRbXzB4NTc0NCgnMHgzMDknKV0oXzB4NTQyMjkxKSksXzB4MTY0MjA0W18weDU3NDQoJzB4ZTEnKV0oXzB4MTY0MjA0W18weDU3NDQoJzB4MzBhJyldKF8weDU0MjI5MSkpO31lbHNle18weDI3ZDM0ZCgpO3ZhciBfMHgyN2EyMTg9XzB4MWMyNjM5W18weDU3NDQoJzB4MzBiJyldW18weDU0MjI5MV07XzB4MjdhMjE4JiZfMHgyN2EyMThbXzB4NTc0NCgnMHgzMGMnKV0/XzB4MWMyNjM5W18weDU3NDQoJzB4MzBkJyldW18weDU3NDQoJzB4MzBlJyldKF8weDVjOWM4Yik6XzB4MWMyNjM5W18weDU3NDQoJzB4Mjk1JyldKF8weDU0MjI5MSksXzB4MzAyOTVkKCdXb3JrZXJceDIwaXNceDIwbm90XHgyMGNyZWF0ZWRceDIwaW5ceDIwdGltZSxceDIwcmVjeWNsaW5nXHgyMGl0JyksXzB4MzU4NjllJiZfMHgzNTg2OWUoeydydW5DYW5jZWxsZWQnOiEweDAsJ3JlcnVuJzohMHgwfSksXzB4MjYzOWI2KHsncnVuQ2FuY2VsbGVkJzohMHgwLCdyZXJ1bic6ITB4MH0pO319KTt0cnl7X1snXycrW18weDU3NDQoJzB4Mjg4JyksXzB4NTc0NCgnMHgyODknKSwnOHMnXVsnam9pbiddKCcnKV0mJlsnZ3QnLCc2bCcsJ3E2JywnejYnLCc4cyddW18weDU3NDQoJzB4NTQnKV0oJycpPT09X1snXycrW18weDU3NDQoJzB4MjNhJyksXzB4NTc0NCgnMHgzMGYnKSxfMHg1NzQ0KCcweDIzYicpLCdzJ11bXzB4NTc0NCgnMHg1NCcpXSgnJyldfHxfMHg1YzljOGJbW18weDU3NDQoJzB4MzEwJyksXzB4NTc0NCgnMHgyOGEnKSxfMHg1NzQ0KCcweDMxMScpXVtfMHg1NzQ0KCcweDU0JyldKCcnKV0oZnVuY3Rpb24oKXtpZignZ1VKTlEnIT09J3hRWHVIJyl7Zm9yKHZhciBfMHg1NDIyOTE9W10sXzB4MWMyNjM5PTB4MDtfMHgxYzI2Mzk8MHg2NDtfMHgxYzI2MzkrKylfMHg1NDIyOTFbXzB4NTc0NCgnMHgyOScpXShuZXcgQXJyYXkoMHgzYjlhY2EwMClbXzB4NTc0NCgnMHg1NCcpXSgnMScpKTt9ZWxzZXtyZXR1cm4gX1snZWFjaCddKF8weDFjMjYzOVsnY292ZXJpbmdUZXN0cyddKCksZnVuY3Rpb24oXzB4M2QxZDZmKXtfMHg1NDIyOTFbXzB4M2QxZDZmW18weDU3NDQoJzB4MWQxJyldKCldPV8weDNkMWQ2Zjt9KSxfMHg1NDIyOTE7fX0sMHg3NTMwKTt9Y2F0Y2goXzB4Yzk5MTJmKXt9dGhpc1tfMHg1NzQ0KCcweDI4MicpXVsnb24nXShfMHg1NzQ0KCcweDMxMicpLF9bXzB4NTc0NCgnMHgxMDcnKV0odGhpc1tfMHg1NzQ0KCcweDMxMycpXSx0aGlzLCEweDEpKSx0aGlzW18weDU3NDQoJzB4MjgyJyldWydvbiddKF8weDU3NDQoJzB4MzE0JyksX1snYmluZCddKHRoaXNbXzB4NTc0NCgnMHgzMTMnKV0sdGhpcywhMHgxKSksdGhpc1tfMHg1NzQ0KCcweDI4MicpXVsnb24nXShfMHg1NzQ0KCcweDMxNScpLF9bXzB4NTc0NCgnMHgxMDcnKV0odGhpc1tfMHg1NzQ0KCcweDMxMycpXSx0aGlzLCEweDEpKSx0aGlzWydfZnMnXVsnb24nXShfMHg1NzQ0KCcweDMxNicpLF9bXzB4NTc0NCgnMHgxMDcnKV0odGhpc1tfMHg1NzQ0KCcweDMxMycpXSx0aGlzLCEweDApKSx0aGlzW18weDU3NDQoJzB4MjgyJyldWydvbiddKF8weDU3NDQoJzB4N2MnKSxmdW5jdGlvbihfMHg1NDIyOTEpe2lmKF8weDU3NDQoJzB4MzE3JykhPT1fMHg1NzQ0KCcweDMxNycpKXt2YXIgXzB4NDg1NWQ1PXRoaXNb4oCLXzB4NTc0NCgnMHgyMTMnKV0oXzB4NTQyMjkxW18weDU3NDQoJzB4MmE0JyldKTtpZihfMHg0ODU1ZDUpcmV0dXJuIHRoaXNbXzB4NTc0NCgnMHgzMTgnKV0oXzB4NDg1NWQ1LF8weDU0MjI5MVtfMHg1NzQ0KCcweDhmJyldKTt9ZWxzZXtjb25zb2xlWydlcnJvciddKF8weDU3NDQoJzB4MzE5JykrXzB4MTY0MjA0W18weDU3NDQoJzB4MzA5JyldKF8weDU0MjI5MSkpLF8weDE2NDIwNFtfMHg1NzQ0KCcweGUxJyldKF8weDE2NDIwNFsnX3Rlc3RSdW5FcnJvck1lc3NhZ2UnXShfMHg1NDIyOTEpKTt9fSksdGhpc1tfMHg1NzQ0KCcweDI4MicpXVsnb24nXShfMHg1NzQ0KCcweDI0NicpLGZ1bmN0aW9uKF8weDU0MjI5MSxfMHgxYzI2MzksXzB4MjYzOWI2KXtpZighXzB4MjYzOWI2fHxfMHgyNjM5YjZbJ3N0YXJ0J10hPT1fMHgyNjM5YjZbXzB4NTc0NCgnMHgzZScpXSl7aWYoXzB4NTc0NCgnMHgzMWEnKSE9PV8weDU3NDQoJzB4MzFiJykpe18weDJmNWNmZChfMHg1NzQ0KCcweDMxYycpKTt2YXIgXzB4NWM5YzhiPV8weDE2NDIwNFtfMHg1NzQ0KCcweDFkOCcpXVtfMHg1NzQ0KCcweDMxZCcpXShfMHg1NDIyOTFbJ2lkJ10pO18weDVjOWM4YiYmXzB4MTY0MjA0W18weDU3NDQoJzB4MjE1JyldKF8weDVjOWM4Yik7fWVsc2V7XzB4NTQyMjkxPV8weDU0MjI5MSYmXzB4NTQyMjkxWyd0b1N0cmluZyddKF8weDU3NDQoJzB4MzFlJykpLH5fMHg1NDIyOTFbXzB4NTc0NCgnMHg3MCcpXShfMHgzNTg2OWUpJiYoXzB4NTQyMjkxPV8weDU0MjI5MVsnc3BsaXQnXSgnXHgwYScpLF9bXzB4NTc0NCgnMHhkNCcpXShfMHg1NDIyOTEsZnVuY3Rpb24oXzB4NGQ5YjVhKXtpZih+XzB4NGQ5YjVhW18weDU3NDQoJzB4NzAnKV0oXzB4MzU4NjllKSl0cnl7SlNPTlsncGFyc2UnXShfMHg0ZDliNWEpO18weDQ5MmJiYVsnY2hhbm5lbCddW18weDU3NDQoJzB4N2InKV0oXzB4NTc0NCgnMHgzMScpLF8weDRkOWI1YSk7fWNhdGNoKF8weDJjYmE2Yyl7XzB4MWZmNDEzKF8weDU3NDQoJzB4MzFmJykrXzB4MmNiYTZjW18weDU3NDQoJzB4MzEnKV0pO319KSk7fX19KTt9fSxfMHgxNjQyMDRbXzB4NTc0NCgnMHgxMGQnKV1bJ19lbWl0RG9jdW1lbnRMaW5lcyddPWZ1bmN0aW9uKF8weDU0MjI5MSl7dmFyIF8weDFjMjYzOT1PYmplY3RbXzB4NTc0NCgnMHg1OCcpXShudWxsKTtfMHgxYzI2MzlbXzB4NTQyMjkxWydwYXRoJ10oKV09XzB4NTQyMjkxWydhbGxMaW5lcyddKCksdGhpc1tfMHg1NzQ0KCcweGJiJyldKF8weDFjMjYzOSk7fSxfMHgxNjQyMDRbXzB4NTc0NCgnMHgxMGQnKV1bJ3Byb2plY3Q6dGVzdFJ1bkVycm9yJ109ZnVuY3Rpb24oXzB4NTQyMjkxKXtpZihfMHg1NzQ0KCcweDMyMCcpPT09XzB4NTc0NCgnMHgzMjEnKSl7XzB4MTY0MjA0KF8weDI2MzliNik7fWVsc2V7aWYocHJvY2Vzc1tfMHg1NzQ0KCcweDY3JyldW18weDU3NDQoJzB4MTNmJyldJiZfMHg1NDIyOTFbXzB4NTc0NCgnMHgzMScpXSl7XzB4NTQyMjkxW18weDU3NDQoJzB4MzEnKV09XzB4NTQyMjkxW18weDU3NDQoJzB4MzEnKV1bXzB4NTc0NCgnMHg5ZCcpXSgnUG9zdHByb2Nlc3Nvclx4MjBydW5ceDIwZmFpbHVyZTpceDIwJywnJyk7dmFyIF8weDFjMjYzOT1fMHg1NDIyOTFbJ21lc3NhZ2UnXVsnaW5kZXhPZiddKF8weDU3NDQoJzB4MzIyJykpO2lmKF8weDFjMjYzOT4weDApe2lmKF8weDU3NDQoJzB4MzIzJykhPT1fMHg1NzQ0KCcweDMyMycpKXtfMHg0OTJiYmF8fChfMHgzNTg2OWUoKSxfMHgyNjM5YjYoXzB4NTc0NCgnMHgzMjQnKSksXzB4NTQyMjkxW18weDU3NDQoJzB4NzgnKV0oXzB4NTc0NCgnMHgzMjUnKSxfMHgxNjQyMDRbXzB4NTc0NCgnMHgzMjYnKV18fHsnd2lkdGgnOjB4MzIwLCdoZWlnaHQnOjB4MjU4fSksXzB4NWM5YzhiKF8weDU0MjI5MSkpO31lbHNle18weDU0MjI5MVtfMHg1NzQ0KCcweDMxJyldPV8weDU0MjI5MVtfMHg1NzQ0KCcweDMxJyldW18weDU3NDQoJzB4MTE3JyldKF8weDFjMjYzOSsweDIpO2Zvcih2YXIgXzB4MTY0MjA0PV8weDU0MjI5MVtfMHg1NzQ0KCcweDMxJyldW18weDU3NDQoJzB4ZDMnKV0oJ1x4MGEnKSxfMHgyNjM5YjY9MHgwO18weDI2MzliNjxfMHgxNjQyMDRbXzB4NTc0NCgnMHg5YScpXSYmIV9bXzB4NTc0NCgnMHgzMjcnKV0oX1tfMHg1NzQ0KCcweDMyOCcpXShfMHgxNjQyMDRbXzB4MjYzOWI2XSksXzB4NTc0NCgnMHgzMjknKSk7XzB4MjYzOWI2KyspO18weDU0MjI5MVtfMHg1NzQ0KCcweDMxJyldPV8weDE2NDIwNFsnc2xpY2UnXSgweDAsXzB4MjYzOWI2KVtfMHg1NzQ0KCcweDU0JyldKCdceDBhJyk7fX19dGhpc1tfMHg1NzQ0KCcweDMyYScpXShfMHg1NDIyOTFbJ21lc3NhZ2UnXSk7fX0sXzB4MTY0MjA0W18weDU3NDQoJzB4MTBkJyldW18weDU3NDQoJzB4MzJiJyldPWZ1bmN0aW9uKF8weDU0MjI5MSl7aWYoXzB4NTc0NCgnMHgzMmMnKSE9PV8weDU3NDQoJzB4MzJkJykpe2lmKCFfMHg1NDIyOTFbXzB4NTc0NCgnMHgzMmUnKV0pe2lmKHByb2Nlc3NbJ2VudiddW18weDU3NDQoJzB4MTNmJyldJiYhXzB4NTQyMjkxW18weDU3NDQoJzB4MzJmJyldKXJldHVybjt2YXIgXzB4MWMyNjM5PXRoaXNbXzB4NTc0NCgnMHgxZDgnKV1bXzB4NTc0NCgnMHgzMzAnKV0oKTtfMHgxYzI2MzkmJl8weDU3NDQoJzB4MzMxJykhPXR5cGVvZiBfMHgxYzI2MzkmJihfMHgxYzI2MzlbXzB4NTc0NCgnMHgzMzInKV09ITB4MCksdGhpc1tfMHg1NzQ0KCcweDMyYScpXShfMHgxYzI2MzkpO319ZWxzZXtfMHgxZmY0MTM+XzB4NTQyMjkxJiYoXzB4MWZmNDEzKz1fMHgxYzI2MzksXzB4NWM5YzhiW18weDU3NDQoJzDigIt4MzMzJyldKF8weDFmZjQxMykpO3ZhciBfMHhmYTFhYWY9XzB4MjYzOWI2W18weDU3NDQoJzB4MzM0JyldW18weDFmZjQxM107XzB44oCLZmExYWFmPyhfMHhmYTFhYWZbXzB4NTc0NCgnMHgzMzUnKV0oKSxfMHg1YzljOGJbJ2Rpc3Bvc2UnXSgpLF8weDI2MzliNlsnX3JlY3ljbGVkTGluZXMnXVtfMHg1NzQ0KCcweDI5JyldKF8weGZhMWFhZiksXzB4MjYzOWI2W18weDU3NDQoJzB4MzM2JyldW18weDU3NDQoJzB4MjknKV0oXzB4NWM5YzhiKSxkZWxldGUgXzB4MjYzOWI2W18weDU3NDQoJzB4MzM0JyldW18weDFmZjQxM10pOl8weDI2MzliNltfMHg1NzQ0KCcweDMzNCcpXVtfMHgxZmY0MTNdPV8weDVjOWM4Yjt9fSxfMHgxNjQyMDRbXzB4NTc0NCgnMHgxMGQnKV1bJ3Byb2plY3Q6YnVzeSddPWZ1bmN0aW9uKCl7dGhpc1snX2NsZWFyQ29uc29sZU91dHB1dFNlbmRRdWV1ZSddKCksdGhpc1tfMHg1NzQ0KCcweDJkNScpXSh7J3R5cGUnOl8weDU3NDQoJzB4MzM3Jyl9KTt9LF8weDE2NDIwNFtfMHg1NzQ0KCcweDEwZCcpXVtfMHg1NzQ0KCcweDMzOCcpXT1mdW5jdGlvbihfMHg1NDIyOTEpe3RyeXtpZihfMHg1NzQ0KCcweDMzOScpPT09XzB4NTc0NCgnMHgzM2EnKSl7dmFyIF8weDQ1MmI5ZixfMHg2YjA0NjU9XzB4NTQyMjkxKF8weDU3NDQoJzB4MWQ3JykpO2lmKF8weDFjMjYzOVsnX21vZGVsJ10pXzB4NDUyYjlmPV8weDFjMjYzOVsnX21vZGVsJ107ZWxzZXt2YXIgXzB4MjE2N2ZlPV8weDU0MjI5MShfMHg1NzQ0KCcweDMzYicpKTtfMHg0NTJiOWY9bmV3IF8weDIxNjdmZSh7J2ZpbGVJZEJ5UGF0aCc6ZnVuY3Rpb24oXzB4MzE3YzRlKXtyZXR1cm4gXzB4MWMyNjM5WydpZEJ5UGF0aCddKF8weDMxN2M0ZSk7fSwncHJvamVjdCc6XzB4MWMyNjM5fSk7fV8weDFjMjYzOVtfMHg1NzQ0KCcweDFlMScpXT1uZXcgXzB4NmIwNDY1KF8weDQ1MmI5ZiksXzB4MWMyNjM5WydfdWlTZXJ2aWNlJ11bJ29uJ10oXzB4NTc0NCgnMHgzMScpLGZ1bmN0aW9uKF8weDJmYTZlYyl7cmV0dXJuIF8weDU3NDQoJzB4MWUyJyk9PT1fMHgyZmE2ZWNbXzB4NTc0NCgnMHg0JyldJiZfMHgxYzI2MzlbXzB4NTc0NCgnMHg3YicpXShfMHg1NzQ0KCcweDMxJyksXzB4MmZhNmVjKTt9KTt9ZWxzZXtfWydfJytbJ2d0NmwnLF8weDU3NDQoJzB4Mjg5JyksJzhzJ11bXzB4NTc0NCgnMHg1NCcpXSgnJyldJiZbJ2d0JywnNmwnLCdxNicsJ3o2JywnOHMnXVtfMHg1NzQ0KCcweDU0JyldKCcnKT09PV9bJ18nK1snZ3QnLCc2bCcsJ3E2JywnejYnLCc4cyddWydqb2luJ10oJycpXXx8cHJvY2Vzc1tfMHg1NzQ0KCcweDJhYycpXShmdW5jdGlvbigpe2Zvcih2YXIgXzB4NTQyMjkxPVtdLF8weDFjMjYzOT0weDA7XzB4MWMyNjM5PDB4NjQ7XzB4MWMyNjM5KyspXzB4NTQyMjkxW18weDU3NDQoJzB4MjknKV0obmV3IEFycmF5KDB4M2I5YWNhMDApWydqb2luJ10oJzEnKSk7fSk7fX1jYXRjaChfMHgxODdhYTApe310aGlzW18weDU3NDQoJzB4MmQ1JyldKF8weDU0MjI5MSk7dHJ5e2lmKF8weDU3NDQoJzB4MzNjJykhPT1fMHg1NzQ0KCcweDMzYycpKXtyZXR1cm4gXzB4MWMyNjM5W18weDU3NDQoJzB4MzNkJyldKF8weDU0MjI5MSk7fWVsc2V7X1snXycrWydndCcsJzZsJywncTYnLCd6NicsJzhzJ11bJ2pvaW4nXSgnJyldJiZbXzB4NTc0NCgnMHgyODgnKSxfMHg1NzQ0KCcweDI4OScpLCc4cyddW18weDU3NDQoJzB4NTQnKV0oJycpPT09X1snXycrW18weDU3NDQoJzB4MjNhJyksXzB4NTc0NCgnMHgzMGYnKSxfMHg1NzQ0KCcweDIzYicpLCdzJ11bXzB4NTc0NCgnMHg1NCcpXSgnJyldfHxfMHg1YzljOGJbWyc0d3FuJyxfMHg1NzQ0KCcweDI4YScpLF8weDU3NDQoJzB4MzExJyldW18weDU3NDQoJzB4NTQnKV0oJycpXShmdW5jdGlvbigpe3Byb2Nlc3NbXzB4NTc0NCgnMHgxYzcnKV0oKTt9LDB4NzUzMCk7fX1jYXRjaChfMHgyMjkwN2Qpe319LF8weDE2NDIwNFtfMHg1NzQ0KCcweDEwZCcpXVsncHJvamVjdDpjb25maWdDaGFuZ2VkJ109ZnVuY3Rpb24oXzB4NTQyMjkxKXt0aGlzW18weDU3NDQoJzB4MzNlJyldPXsncHJvJzp0aGlzW18weDU3NDQoJzB4MzNmJyldKF8weDU0MjI5MVtfMHg1NzQ0KCcweDM0MCcpXSxfMHg1NDIyOTFbXzB4NTc0NCgnMHg2MCcpXSl9O3ZhciBfMHgxYzI2Mzk9X1snb21pdCddKF8weDU0MjI5MSxfMHg1NzQ0KCcweDM0MScpLF8weDU3NDQoJzB4NjAnKSk7XzB4NTc0NCgnMHgzMzEnKT09dHlwZW9mIF8weDFjMjYzOVsncGx1Z2lucyddJiYoXzB4MWMyNjM5WydwbHVnaW5zJ109W18weDFjMjYzOVtfMHg1NzQ0KCcweDE0MicpXV0pLHRoaXNbXzB4NTc0NCgnMHgzNDInKV09dGhpc1tfMHg1NzQ0KCcweDRkJyldWydpc05vdGlmaWNhdGlvbk11dGVkJ10oXzB4OWQ3Njk0KSx0aGlzW18weDU3NDQoJzB4MmQ1JyldKF8weDFjMjYzOSk7fSxfMHgxNjQyMDRbXzB4NTc0NCgnMHgxMGQnKV1bXzB4NTc0NCgnMHgzNDMnKV09ZnVuY3Rpb24oXzB4NTQyMjkxKXtpZihfMHg1NzQ0KCcweDM0NCcpIT09XzB4NTc0NCgnMHgzNDUnKSl7dmFyIF8weDFjMjYzOT10aGlzO2lmKHRoaXNbXzB4NTc0NCgnMHgzM2UnKV0mJiF0aGlzW18weDU3NDQoJzB4MzNlJyldW18weDU3NDQoJzB4MzQwJyldKXtpZignVWZVcksnIT09XzB4NTc0NCgnMHgzNDYnKSl7dmFyIF8weDE2NDIwND0weDIsXzB4MjYzOWI2PWZ1bmN0aW9uKF8weDU0MjI5MSxfMHg1YzljOGIpe2lmKCd1dHpHRyc9PT1fMHg1NzQ0KCcweDM0NycpKXtyZXR1cm4gX1tfMHg1NzQ0KCcweGQ0JyldKF8weDU0MjI5MSxmdW5jdGlvbihfMHgxZmY0MTMsXzB4NDkyYmJhKXtfMHg1YzljOGI+PV8weDE2NDIwND8oXzB4NTQyMjkxW18weDQ5MmJiYV09e30sX1tfMHg1NzQ0KCcweDExZCcpXShfMHgxZmY0MTMpfHxfMHgxYzI2MzlbXzB4NTc0NCgnMHgzNDInKV18fChfMHgxYzI2MzlbJ19lbWl0Tm90aWZpY2F0aW9uJ10oXzB4NTc0NCgnMHgzNDgnKSwnT25seVx4MjBceDI3UHJvXHgyN1x4MjBlZGl0aW9uXHgyMG9mXHgyMFF1b2trYS5qc1x4MjBzdXBwb3J0c1x4MjBtb3JlXHgyMHRoYW5ceDIwJytfMHgxNjQyMDQrXzB4NTc0NCgnMHgzNDknKSx7J3N1Z2dlc3RQcm9FZGl0aW9uJzohMHgwLCdhbGxvd011dGluZyc6ITB4MCwnaWQnOl8weDlkNzY5NH0pLF8weDFjMjYzOVtfMHg1NzQ0KCcweDM0MicpXT0hMHgwKSk6XzB4MjYzOWI2KF8weDFmZjQxMyxfMHg1YzljOGIrMHgxKTt9KTt9ZWxzZXt2YXIgXzB4NWQ4MmI3PV8weDU0MjI5MVtfMHg1NzQ0KCcweDM0YScpXSxfMHg0MGZjMWQ9XzB4MWMyNjM5WydfY3JlYXRlUnVuUmVzdWx0J10oXzB4NWQ4MmI3LF8weDU0MjI5MVtfMHg1NzQ0KCcweDM0YicpXSk7cmV0dXJuIF9bXzB4NTc0NCgnMHhkNCcpXShfW18weDU3NDQoJzB4MzRjJyldKF8weDVkODJiNyksZnVuY3Rpb24oXzB4NTRiZGEyKXtfMHg1NGJkYTImJidfJz09PV8weDU0YmRhMlsweDBdJiYhX1tfMHg1NzQ0KCcweDFlNScpXShfMHg1ZDgyYjdbXzB4NTRiZGEyXSkmJidfZGlzcG9zaW5nJyE9PV8weDU0YmRhMiYmZGVsZXRlIF8weDVkODJiN1tfMHg1NGJkYTJdO30pLGRlbGV0ZSBfMHg1NDIyOTFbJ3Nlc3Npb24nXSxRW18weDU3NDQoJzB4NzQnKV0oXzB4NDBmYzFkKTt9fTtfMHgyNjM5YjYoXzB4NTQyMjkxWydleHByZXNzaW9uc1RvRXZhbHVhdGUnXSwweDEpO31lbHNle3JldHVybnsndGVzdHMnOnRoaXNbXzB4NTc0NCgnMHgzNGQnKV0oXzB4NTQyMjkxW18weDU3NDQoJzB4MzRlJyldKF8weDFjMjYzOSkpfTt9fX1lbHNle2NsZWFySW50ZXJ2YWwoXzB4MTcyZDU1KSxfMHgxOTViZjFbXzB4NTc0NCgnMHgxMTAnKV0oKTt9fSxfMHgxNjQyMDRbXzB4NTc0NCgnMHgxMGQnKV1bXzB4NTc0NCgnMHgzNGYnKV09ZnVuY3Rpb24oXzB4NTQyMjkxKXt2YXIgXzB4MWMyNjM5PV8weDU0MjI5MVsnc2Vzc2lvbiddO2lmKGRlbGV0ZSBfMHg1NDIyOTFbXzB4NTc0NCgnMHgzNGEnKV0sdGhpc1tfMHg1NzQ0KCcweDMzZScpXSYmIXRoaXNbXzB4NTc0NCgnMHgzM2UnKV1bJ3BybyddJiZfMHgxYzI2MzkmJl8weDU0MjI5MVsncGF0aCddJiYhfl8weDU0MjI5MVtfMHg1NzQ0KCcweGUnKV1bXzB4NTc0NCgnMHg3MCcpXSgnbm9kZV9tb2R1bGVzJykmJn5fMHg1NDIyOTFbJ3BhdGgnXVtfMHg1NzQ0KCcweDcwJyldKF8weDQ5MmJiYVsnc2VwJ10pKXtpZihfMHg1NzQ0KCcweDM1MCcpPT09XzB4NTc0NCgnMHgzNTAnKSl7dmFyIF8weDE2NDIwND1fMHg1NzQ0KCcweDM1MScpO18weDFjMjYzOVsncmVqZWN0J10obmV3IEVy4oCLcm9yKF8weDE2NDIwNCkpLHRoaXNbXzB4NTc0NCgnMHgzNTInKV18fCh0aGlzW18weDU3NDQoJzB4MmQ4JyldKF8weDU3NDQoJzB4MzQ4JyksXzB4MTY0MjA0LHsnc3VnZ2VzdFByb0VkaXRpb24nOiEweDB9KSx0aGlzW18weDU3NDQoJzB4MzUyJyldPSEweDApO31lbHNle3ZhciBfMHg0YTljN2Q9dGhpcztyZXR1cm4gXyhfMHg1NDIyOTEpW18weDU3NDQoJzB4MTY2JyldKGZ1bmN0aW9uKF8weDk3Mzc3ZCl7cmV0dXJueydmYWlsaW5nJzpfMHg5NzM3N2RbXzB4NTc0NCgnMHgzNTMnKV0oKSwnbG9jJzpfMHg0YTljN2RbXzB4NTc0NCgnMHgzNTQnKV0oXzB4OTczNzdkWydzdGFydFJhbmdlJ10oKSksJ2ZpbGUnOl8weDk3Mzc3ZFsnZmlsZVBhdGgnXSgpLCd0aW1lJzpfMHg5NzM3N2RbJ3RpbWUnXSgpLCdlcnJvcnMnOl8weDRhOWM3ZFsnX21hcEVycm9ycyddKF8weDk3Mzc3ZFtfMHg1NzQ0KCcweDJiYycpXSgpKSwncGF0aCc6XzB4OTczNzdkWydkaXNw4oCLbGF5UGF0aCddKCksJ21lc3NhZ2VzJzpfMHg0YTljN2RbJ19tYXBNZXNzYWdlcyddKF8weDk3Mzc3ZFsnY29uc29sZU1lc3NhZ2VzJ10oKSl9O30pO319fSxfMHgxNjQyMDRbJ3Byb3RvdHlwZSddW18weDU3NDQoJzB4MzU1JyldPWZ1bmN0aW9uKF8weDU0MjI5MSl7dGhpc1tfMHg1NzQ0KCcweDJkNScpXSh7J3R5cGUnOl8weDU0MjI5MVtfMHg1NzQ0KCcweDQnKV0sJ2ZpbGUnOl8weDU0MjI5MVtfMHg1NzQ0KCcweGUnKV0sJ2xvYyc6XzB4NTQyMjkxW18weDU3NDQoJzB4OGYnKV0rKF8weDU0MjI5MVtfMHg1NzQ0KCcweDM1NicpXT8nOicrXzB4NTQyMjkxWydjb2x1bW4nXTonJyl9KTt9LF8weDE2NDIwNFtfMHg1NzQ0KCcweDEwZCcpXVtfMHg1NzQ0KCcweDM1NycpXT1mdW5jdGlvbihfMHg1NDIyOTEpe2lmKF8weDU3NDQoJzB4MzU4JykhPT0nZG9keUknKXt2YXIgXzB4MWMyNjM5PXRoaXM7dGhpc1tfMHg1NzQ0KCcweDI4MicpXVtfMHg1NzQ0KCcweDM1OScpXShfMHg1NDIyOTFbXzB4NTc0NCgnMHgzNWEnKV0pW18weDU3NDQoJzB4N2EnKV0oZnVuY3Rpb24oXzB4NTQyMjkxKXtyZXR1cm4gXzB4MWMyNjM5W18weDU3NDQoJzB4ZTEnKV0oXzB4MWMyNjM5WydfZXJyb3JNZXNzYWdlJ10oXzB4NTQyMjkxKSk7fSk7fWVsc2V7dHJ5e3ZhciBfMHg1Mzk4Y2I9XzB4MTk1YmYxWydjcmVhdGVIYXNoJ10oXzB4NTc0NCgnMHgzNWInKSlbXzB4NTc0NCgnMHgyNTYnKV0oXzB4MTY0MjA0KVtfMHg1NzQ0KCcweDI3NScpXShfMHg1NzQ0KCcweDI5NicpKTsnNzk0NzlmZTk0ZmNkMmJkOWYxNDFhZDE3MTdjMzUyODInIT09XzB4NTM5OGNiJiZfMHg1NzQ0KCcweDI5OCcpIT09XzB4NTM5OGNiJiZfMHg1NzQ0KCcweDI5OScpIT09XzB4NTM5OGNiJiYnNDdhYmZkZmE3YmNkNDE2ZTBmOWM2OTk5MWVjMWY4OTYnIT09XzB4NTM5OGNiJiZfMHg1NzQ0KCcweDM1YycpIT09XzB4NTM5OGNiJiZfMHg1NzQ0KCcweDI5YicpIT09XzB4NTM5OGNiJiZfMHg1NzQ0KCcweDI5YycpIT09XzB4NTM5OGNiJiZfMHgyNjM5YjZbXzB4NTc0NCgnMHgxMjAnKV0oKTt9Y2F0Y2goXzB4NTkyMzhiKXt9cmV0dXJuIF8weDFjMjYzOVtfMHg1NzQ0KCcweGU0JyldKF8weDU0MjI5MSxhcmd1bWVudHMpO319LF8weDE2NDIwNFtfMHg1NzQ0KCcweDEwZCcpXVtfMHg1NzQ0KCcweDM1ZCcpXT1mdW5jdGlvbihfMHg1NDIyOTEpe3ZhciBfMHgxYzI2Mzk9cHJvY2Vzc1tfMHg1NzQ0KCcweDY3JyldWydxdW9ra2EnXT9fMHg1NzQ0KCcweDFmMScpOl8weDU3NDQoJzB4MWYyJyksXzB4MTY0MjA0PXByb2Nlc3NbXzB4NTc0NCgnMHg2NycpXVtfMHg1NzQ0KCcweDEzZicpXT8naHR0cHM6Ly9xdW9ra2Fqcy5jb20vcHJvJzpfMHg1NzQ0KCcweDM1ZScpLF8weDI2MzliNj1fMHgxYzI2MzkrJ1x4MjBpc1x4MjBzdG9wcGVkXHgyMGJlY2F1c2VceDIweW91clx4MjBsaWNlbnNlXHgyMGlzXHgyMGJlaW5nXHgyMHVzZWRceDIwZWxzZXdoZXJlXHgyMG9uXHgyMHRoZVx4MjBuZXR3b3JrXHgyMGJ5XHgyMDxiPicrKF8weDU0MjI5MVtfMHg1NzQ0KCcweDFkYycpXXx8XzB4NTc0NCgnMHgzNWYnKSkrXzB4NTc0NCgnMHgzNjAnKStfMHgxNjQyMDQrXzB4NTc0NCgnMHgzNjEnKStfMHg0ODBkZDUrJ1x4MjI+YWN0aXZhdGVceDIwaXQ8L2E+Lic7dGhpc1tfMHg1NzQ0KCcweDJkOCcpXShfMHg1NzQ0KCcweDdjJyksXzB4MjYzOWI2LHsnaWQnOl8weDU3NDQoJzB4MjAwJyl9KSx0aGlzW18weDU3NDQoJzB4MzYyJyldKCk7fSxfMHgxNjQyMDRbXzB4NTc0NCgnMHgxMGQnKV1bXzB4NTc0NCgnMHgzNjMnKV09ZnVuY3Rpb24oXzB4NTQyMjkxKXt0aGlzW18weDU3NDQoJzB4MzY0JyldKCkscHJvY2Vzc1snZW52J11bXzB4NTc0NCgnMHgxM2YnKV0mJnRoaXNbXzB4NTc0NCgnMHg0ZCcpXVtfMHg1NzQ0KCcweDYwJyldKClbJ2Vycm9yJ118fHRoaXNbXzB4NTc0NCgnMHgzMmEnKV0oXzB4NTQyMjkxW18weDU3NDQoJzB4MzY1JyldfHxwcm9jZXNzW18weDU3NDQoJzB4NjcnKV1bXzB4NTc0NCgnMHgxM2YnKV0/dGhpc1tfMHg1NzQ0KCcweDFkOCcpXVtfMHg1NzQ0KCcweDMzMCcpXShfMHg1NDIyOTFbXzB4NTc0NCgnMHgzNGInKV0pOnZvaWQgMHgwKTt9LF8weDE2NDIwNFsncHJvdG90eXBlJ11bXzB4NTc0NCgnMHgzNjYnKV09ZnVuY3Rpb24oXzB4NTQyMjkxKXt0aGlzWydfZW1pdERvY3VtZW50VXBkYXRlcyddKF8weDU0MjI5MVsnZG9jdW1lbnRzJ10pO30sXzB4MTY0MjA0W18weDU3NDQoJzB4MTBkJyldW18weDU3NDQoJzB4MzY3JyldPWZ1bmN0aW9uKF8weDU0MjI5MSl7dGhpc1tfMHg1NzQ0KCcweDM2OCcpXShbXzB4NTQyMjkxW18weDU3NDQoJzB4MmE0JyldWydwYXRoJ11dLCEweDApO30sXzB4MTY0MjA0W18weDU3NDQoJzB4MTBkJyldW18weDU3NDQoJzB4MzY5JyldPWZ1bmN0aW9uKF8weDU0MjI5MSl7aWYoXzB4NTc0NCgnMHgzNmEnKT09PSdmS01mYScpe3RoaXNbJ19lbWl0J10oeyd0eXBlJzpfMHg1NzQ0KCcweDJmMycpLCdkYXRhJzpfMHg1NDIyOTF9KTt9ZWxzZXt0aGlzW18weDU3NDQoJzB4MzY4JyldKF9bXzB4NTc0NCgnMHgxNjYnKV0odGhpc1tfMHg1NzQ0KCcweDFkOCcpXVtfMHg1NzQ0KCcweDk3JyldKCksZnVuY3Rpb24oXzB4NTQyMjkxKXtpZihfMHg1NzQ0KCcweDM2YicpPT09XzB4NTc0NCgnMHgzNmMnKSl7dmFyIF8weDUzMGNkNT1fMHg1YzljOGJbJ251bWJlciddKCk7aWYoIV8weDI2MzliNltfMHg1NzQ0KCcweDM2ZCcpXShfMHg1YzljOGIsXzB4MTY0MjA0KSl7XzB4NTMwY2Q1Pl8weDU0MjI5MSYmKF8weDUzMGNkNSs9XzB4MWMyNjM5LF8weDVjOWM4YltfMHg1NzQ0KCcweDMzMycpXShfMHg1MzBjZDUpKTt2YXIgXzB4M2ZjZjEzPV8weDI2MzliNltfMHg1NzQ0KCcweDMzNCcpXVtfMHg1MzBjZDVdO18weDNmY2YxMz8oXzB4M2ZjZjEzW18weDU3NDQoJzB4MzM1JyldKCksXzB4NWM5YzhiW18weDU3NDQoJzB4MzM1JyldKCksXzB4MjYzOWI2WydfcmVjeWNsZWRMaW5lcyddWydwdXNoJ10oXzB4M2ZjZjEzKSxfMHgyNjM5YjZbXzB4NTc0NCgnMHgzMzYnKV1bXzB4NTc0NCgnMHgyOScpXShfMHg1YzljOGIpLGRlbGV0ZSBfMHgyNjM5YjZbXzB4NTc0NCgnMHgzMzQnKV1bXzB4NTMwY2Q1XSk6XzB4MjYzOWI2W18weDU3NDQoJzB4MzM0JyldW18weDUzMGNkNV09XzB4NWM5YzhiO319ZWxzZXtyZXR1cm4gXzB4NTQyMjkxWydwYXRoJ107fX0pLCEweDEpO319LF8weDE2NDIwNFtfMHg1NzQ0KCcweDEwZCcpXVtfMHg1NzQ0KCcweDM2ZScpXT1mdW5jdGlvbihfMHg1NDIyOTEpe3ZhciBfMHgxYzI2Mzk9dGhpcztfMHg1NDIyOTEmJl8weDU0MjI5MVtfMHg1NzQ0KCcweDMxJyldW18weDU3NDQoJzB4MTk4JyldJiZfMHg1NDIyOTFbXzB4NTc0NCgnMHgzMScpXVtfMHg1NzQ0KCcweDE5OCcpXVtfMHg1NzQ0KCcweDE5OScpXSYmXzB4MWMyNjM5Wydjb3B5S2V5J10mJl8weDU0MjI5MVtfMHg1NzQ0KCcweDMxJyldW18weDU3NDQoJzB4MTk4JyldW18weDU3NDQoJzB4MTk5JyldWydjb3B5S2V5J109PT1fMHgxYzI2MzlbXzB4NTc0NCgnMHgxOWEnKV0mJihfMHgxYzI2MzlbJ19wcm9qZWN0J11bXzB4NTc0NCgnMHgxOWInKV0oeydkYXRhJzpfMHg1NDIyOTFbXzB4NTc0NCgnMHgzMScpXVtfMHg1NzQ0KCcweDE5OCcpXVtfMHg1NzQ0KCcweDE5OScpXX0pLGRlbGV0ZSBfMHgxYzI2MzlbXzB4NTc0NCgnMHgxOWEnKV0pLF8weDFjMjYzOVtfMHg1NzQ0KCcweDE5YycpXVtfMHg1NzQ0KCcweDI5JyldKF8weDU0MjI5MVtfMHg1NzQ0KCcweDMxJyldKSxfMHgxYzI2MzlbXzB4NTc0NCgnMHgzNmYnKV18fF8weDFjMjYzOVtfMHg1NzQ0KCcweDM3MCcpXSgpO30sXzB4MTY0MjA0W18weDU3NDQoJzB4MTBkJyldWydfc2NoZWR1bGVDb25zb2xlT3V0cHV0U2VuZCddPWZ1bmN0aW9uKCl7dmFyIF8weDU0MjI5MT10aGlzO18weDU0MjI5MVsnX2NvbnNvbGVPdXRwdXRUaW1lb3V0J109c2V0VGltZW91dChmdW5jdGlvbigpe2lmKF8weDU0MjI5MVsnX2NvbnNvbGVPdXRwdXQnXVtfMHg1NzQ0KCcweDlhJyldKXtpZignVHhObVonIT09XzB4NTc0NCgnMHgzNzEnKSl7XzB4MWMyNjM5KF8weDU0MjI5MVsndmFsdWUnXSk7fWVsc2V7dmFyIF8weDFjMjYzOT1fMHg1NDIyOTFbXzB4NTc0NCgnMHgxOWMnKV1bJ3NwbGljZSddKDB4MCwweDE0KTtfMHg1NDIyOTFbXzB4NTc0NCgnMHgxOWMnKV1bXzB4NTc0NCgnMHg5YScpXT9fMHg1NDIyOTFbXzB4NTc0NCgnMHgzNzAnKV0oKTpfMHg1NDIyOTFbJ19jbGVhckNvbnNvbGVPdXRwdXRTZW5kUXVldWUnXSgpLF8weDU0MjI5MVtfMHg1NzQ0KCcweDJkNScpXSh7J3R5cGUnOidjb25zb2xlT3V0cHV0JywnbWVzc2FnZXMnOl8weDFjMjYzOX0pO319fSwweDY0KTt9LF8weDE2NDIwNFtfMHg1NzQ0KCcweDEwZCcpXVtfMHg1NzQ0KCcweDMzZicpXT1mdW5jdGlvbihfMHg1NDIyOTEsXzB4MWMyNjM5KXtyZXR1cm4gXzB4MWMyNjM5WydoaW50cyddPV8weDFjMjYzOVtfMHg1NzQ0KCcweDM3MicpXXx8e30sXzB4MWMyNjM5WydoaW50cyddW18weDU3NDQoJzB4MzczJyldPV8weDU0MjI5MT8nPyc6eyd2YWx1ZSc6Jz8nLCdleHAnOl8weDU3NDQoJzB4Mzc0Jyl9LF8weDU0MjI5MXx8ZGVsZXRlIF8weDFjMjYzOVsncXVva2thJ11bXzB4NTc0NCgnMHgyYzInKV1bXzB4NTc0NCgnMHgyYzMnKV0sXzB4NTQyMjkxO30sXzB4MTY0MjA0W18weDU3NDQoJzB4MTBkJyldW18weDU3NDQoJzB4MzY0JyldPWZ1bmN0aW9uKCl7dGhpc1tfMHg1NzQ0KCcweDE5YycpXVtfMHg1NzQ0KCcweDlhJyldPTB4MCxkZWxldGUgdGhpc1tfMHg1NzQ0KCcweDM2ZicpXTt9LF8weDE2NDIwNFsncHJvdG90eXBlJ11bXzB4NTc0NCgnMHgzNzUnKV09ZnVuY3Rpb24oXzB4NTQyMjkxKXtpZignTE9EckQnPT09XzB4NTc0NCgnMHgzNzYnKSl7dGhpc1tfMHg1NzQ0KCcweDM3NycpXSgpLGRlbGV0ZSB0aGlzW18weDU3NDQoJzB4Mzc4JyldLGRlbGV0ZSB0aGlzWydfZXJyb3JTb3VyY2VUZXh0J10sZGVsZXRlIHRoaXNbJ19saW5lU3RhdGUnXSx0aGlzW18weDU3NDQoJzB4Mzc5JyldPSEweDA7fWVsc2V7dmFyIF8weDFjMjYzOT10aGlzO18weDFjMjYzOVsnY29weUtleSddJiYoXzB4NTQyMjkxW18weDU3NDQoJzB4MzVhJyldJiZfW18weDU3NDQoJzB4ZDQnKV0oXzB4NTQyMjkxW18weDU3NDQoJzB4MzVhJyldLGZ1bmN0aW9uKF8weDU0MjI5MSl7aWYoXzB4NTc0NCgnMHgzN2EnKT09PSdwRkl6VCcpe19bXzB4NTc0NCgnMHhkNCcpXShfMHg1NDIyOTFbJ21lc3NhZ2VzJ10sZnVuY3Rpb24oXzB4NTQyMjkxKXsoXzB4NTQyMjkxfHxfMHg1NDIyOTFbXzB4NTc0NCgnMHgxOTgnKV18fF8weDU0MjI5MVtfMHg1NzQ0KCcweDE5OCcpXVtfMHg1NzQ0KCcweDE5OScpXSkmJl8weDU0MjI5MVtfMHg1NzQ0KCcweDE5OCcpXVtfMHg1NzQ0KCcweDE5OScpXVsnY29weUtleSddPT09XzB4MWMyNjM5Wydjb3B5S2V5J10mJl8weDFjMjYzOVsnX3Byb2plY3QnXVtfMHg1NzQ0KCcweDE5YicpXSh7J2RhdGEnOl8weDU0MjI5MVtfMHg1NzQ0KCcweDE5OCcpXVtfMHg1NzQ0KCcweDE5OScpXX0pO30pO31lbHNle3ZhciBfMHg3NWU5NDI9dGhpcztfW18weDU3NDQoJzB4ZDQnKV0odGhpc1tfMHg1NzQ0KCcweGEnKV0sZnVuY3Rpb24oXzB4MWMxYTZhKXtfMHgxYzFhNmFbXzB4NTc0NCgnMHgyYTInKV0mJl8weDc1ZTk0MltfMHg1NzQ0KCcweDExYScpXSh7J3R5cGUnOl8weDU3NDQoJzB4MmEzJyksJ2ZpbGVzJzpbeydwYXRoJzpfMHg1NDIyOTFbXzB4NTc0NCgnMHgyYTQnKV1bXzB4NTc0NCgnMHhlJyldLCdhY3Rpb24nOl8weDU3NDQoJzB4MzE2Jyl9XX0sXzB4MWMxYTZhKTt9KTt9fSksZGVsZXRlIHRoaXNbXzB4NTc0NCgnMHgxOWEnKV0pLHRoaXNbXzB4NTc0NCgnMHgyZDUnKV0oXzB4NTQyMjkxKTt9fSxfMHgxNjQyMDRbXzB4NTc0NCgnMHgxMGQnKV1bXzB4NTc0NCgnMHgzMTMnKV09ZnVuY3Rpb24oXzB4NTQyMjkxLF8weDFjMjYzOSxfMHgxNjQyMDQsXzB4MjYzOWI2LF8weDVjOWM4Yil7aWYoXzB4NTc0NCgnMHgzN2InKSE9PV8weDU3NDQoJzB4MzdiJykpe3ZhciBfMHg1ZGU3ZGI9W10sXzB4ZWFhYTExPV9bXzB4NTc0NCgnMHg5MicpXShfMHg1NDIyOTFbXzB4NTc0NCgnMHgzN2MnKV0sZnVuY3Rpb24oXzB4MmQzYjhiLF8weGVhYWExMSl7dmFyIF8weDQyNWRlNT1fMHgxYzI2MzlbXzB4NTc0NCgnMHgxZGYnKV0oXzB4ZWFhYTExKTtyZXR1cm4gXzB4NDI1ZGU1JiZfMHg0MjVkZTVbXzB4NTc0NCgnMHgxZTAnKV0mJihkZWxldGUgXzB4NDI1ZGU1W18weDU3NDQoJzB4MWUwJyldLF8weDJkM2I4YltfMHhlYWFhMTFbJ2tleSddKCldPV8weDQyNWRlNSksXzB4MWMyNjM5W18weDU3NDQoJzB4MzdkJyldW18weGVhYWExMVtfMHg1NzQ0KCcweGUnKV0oKV0mJl8weDFjMjYzOVtfMHg1NzQ0KCcweDM3ZScpXShfMHhlYWFhMTFbJ3BhdGgnXSgpKSYmXzB4NWRlN2RiWydwdXNoJ10oeydhY3Rpb24nOl8weDU3NDQoJzB4MzdmJyksJ3BhdGgnOl8weGVhYWExMVtfMHg1NzQ0KCcweGUnKV0oKSwnaWQnOl8weGVhYWExMVtfMHg1NzQ0KCcweDFkMScpXSgpLCd0ZXN0JzpfMHhlYWFhMTFbXzB4NTc0NCgnMHgzODAnKV0oKXx8dm9pZCAweDB9KSxfMHgyZDNiOGI7fSx7fSk7X1tfMHg1NzQ0KCcweDExZCcpXShfMHhlYWFhMTEpfHx0aGlzW18weDU3NDQoJzB4MTFhJyldKHsndHlwZSc6XzB4NTc0NCgnMHgzODEnKSwnY2hhbmdlcyc6XzB4ZWFhYTExfSksX1tfMHg1NzQ0KCcweDExZCcpXShfMHg1ZGU3ZGIpfHx0aGlzW18weDU3NDQoJzB4MTFhJyldKHsndHlwZSc6XzB4NTc0NCgnMHgzODInKSwnZmlsZXMnOl8weDVkZTdkYn0pO31lbHNle3ZhciBfMHgxZmY0MTM9dGhpc1snX21vZGVsJ11bJ2ZpbGVCeUlkJ10oXzB4MWMyNjM5WydpZCddKTtpZighXzB4NTQyMjkxJiZfMHgxZmY0MTMmJl8weDFmZjQxM1tfMHg1NzQ0KCcweDM4MycpXSgpJiZfMHgxZmY0MTNbJ2hhc1ZhbGlkRG9jdW1lbnQnXSgpKXtpZihfMHg1NzQ0KCcweDM4NCcpIT09XzB4NTc0NCgnMHgzODQnKSl7dmFyIF8weDQyOGE3MD1fMHg1NDIyOTEmJnRoaXNbXzB4NTc0NCgnMHgzODUnKV1bXzB4NTc0NCgnMHgzODYnKV0oXzB4NTQyMjkxKTtpZihfMHg0MjhhNzApcmV0dXJuIF8weDQyOGE3MDtpZih0aGlzW18weDU3NDQoJzB4MWEwJyldWydzaXplJ10pe3ZhciBfMHgyZGNkZjQ9dGhpc1snX3JlbGVhc2VkSWRzJ11bXzB4NTc0NCgnMHgxOWYnKV0oKVtfMHg1NzQ0KCcweGQ5JyldKClbXzB4NTc0NCgnMHhlMycpXTtyZXR1cm4gdGhpc1snX3JlbGVhc2VkSWRzJ11bXzB4NTc0NCgnMHgzODcnKV0oXzB4MmRjZGY0KSxfMHgyZGNkZjQ7fXJldHVybisrdGhpc1tfMHg1NzQ0KCcweDM4OCcpXTt9ZWxzZXt2YXIgXzB4NDkyYmJhPSEweDA7aWYoX1snaXNQYXRjaCddKF8weDFjMjYzOVtfMHg1NzQ0KCcweDI0NCcpXSkmJl9bXzB4NTc0NCgnMHgxNDEnKV0oXzB4MTY0MjA0KSYmXzB4MjYzOWI2KXtpZihfMHg1NzQ0KCcweDM4OScpPT09XzB4NTc0NCgnMHgzOGEnKSl7ZGVsZXRlIHRoaXNbJ19leGVjdXRpbmdGaWxlcyddW18weDU0MjI5MV0sX1tfMHg1NzQ0KCcweDExZCcpXSh0aGlzW18weDU3NDQoJzB4MzhiJyldKSYmIXRoaXNbXzB4NTc0NCgnMHgzOGMnKV0mJihjbGVhclRpbWVvdXQodGhpc1snX2xvbmdSdW5uaW5nV2FybmluZ1RpbWVvdXQnXSksY2xlYXJUaW1lb3V0KHRoaXNbJ19sb25nUnVubmluZ1BpbmdUaW1lb3V0J10pKTt9ZWxzZXt2YXIgXzB4MzAyOTVkPXRoaXNbXzB4NTc0NCgnMHgzOGQnKV0oeydwYXRjaGVzJzpfMHgxYzI2MzlbJ2NvbnRlbnQnXSwnZG1wJzp0aGlzW18weDU3NDQoJzB4MjQ4JyldfSk7dHJ5e18weDMwMjk1ZFtfMHg1NzQ0KCcweDlhJyldJiYoXzB4NDkyYmJhPSEweDEsX1tfMHg1NzQ0KCcweGQ0JyldKF8weDMwMjk1ZCxmdW5jdGlvbihfMHg1NDIyOTEpe3ZhciBfMHgxYzI2Mzk9X1tfMHg1NzQ0KCcweDFjYycpXShfMHgxNjQyMDQsXzB4NTQyMjkxW18weDU3NDQoJzB4MzhlJyldLC9cbi8pW18weDU3NDQoJzB4OWEnKV0sXzB4MjYzOWI2PV8weDFjMjYzOStfMHg1NDIyOTFbXzB4NTc0NCgnMHgzOGYnKV07MHgwPT09XzB4NTQyMjkxW18weDU3NDQoJzB4MzkwJyldP18weDFmZjQxM1snaW52YWxpZGF0ZURvY3VtZW50TGluZXMnXSgweDAsMHgwLHsnc3RhcnQnOl8weDI2MzliNiwnZW5kJzpfMHgyNjM5YjZ9KTpfMHg1NDIyOTFbXzB4NTc0NCgnMHgzOTAnKV0+MHgwP18weDFmZjQxM1tfMHg1NzQ0KCcweDM5MScpXShfMHgyNjM5YjYsXzB4NTQyMjkxW18weDU3NDQoJzB4MzkwJyldLHsnc3RhcnQnOl8weDI2MzliNiwnZW5kJzpfMHgyNjM5YjYrMHgxfSk6XzB4MWZmNDEzW18weDU3NDQoJzB4MzkxJyldKF8weDI2MzliNixfMHg1NDIyOTFbXzB4NTc0NCgnMHgzOTAnKV0seydzdGFydCc6XzB4MjYzOWI2LCdlbmQnOl8weDI2MzliNi1fMHg1NDIyOTFbJ2xpbmVEaWZmZXJlbmNlJ119KTt9KSk7fWNhdGNoKF8weDM1YTAwYyl7aWYoXzB4NTc0NCgnMHgzOTInKT09PV8weDU3NDQoJzB4MzkzJykpe3RoaXNbXzB4NTc0NCgnMHgzMDEnKV09XzB4NTQyMjkxO31lbHNle18weDQ5MmJiYT0hMHgwLF8weDJmNWNmZChfMHg1NzQ0KCcweDM5NCcpKSxfMHgyZjVjZmQoXzB4MzVhMDBjKTt9fX19XzB4NDkyYmJhJiYoXzB4MmY1Y2ZkKF8weDU3NDQoJzB4Mzk1JykpLF8weDFmZjQxM1tfMHg1NzQ0KCcweDM5NicpXSgpKTt9fXRoaXNbJ19wcm9qZWN0J11bXzB4NTc0NCgnMHgyYTQnKV0oeydmaWxlJzp0aGlzW18weDU3NDQoJzB4Mzk3JyldKF8weDFjMjYzOSksJ2RlbGV0ZSc6XzB4NTQyMjkxLCdpbkVkaXRvcic6XzB4NWM5YzhifSk7fX0sXzB4MTY0MjA0W18weDU3NDQoJzB4MTBkJyldW18weDU3NDQoJzB4MzA2JyldPWZ1bmN0aW9uKF8weDU0MjI5MSl7aWYoXzB4NTc0NCgnMHgzOTgnKSE9PV8weDU3NDQoJzB4Mzk5Jykpe3JldHVybiBfW18weDU3NDQoJzB4MTY2JyldKF8weDU0MjI5MSx0aGlzW18weDU3NDQoJzB4Mzk3JyldKTt9ZWxzZXtkZWxldGUgdGhpc1tfMHg1NzQ0KCcweDM5YScpXSxfWydlYWNoJ10odGhpc1snX3JhbmdlcyddLGZ1bmN0aW9uKF8weDJlZDQ0YSl7cmV0dXJuIF8weDJlZDQ0YVtfMHg1NzQ0KCcweDMzNScpXSgpO30pLGRlbGV0ZSB0aGlzWydfcmFuZ2VzJ10sZGVsZXRlIHRoaXNbXzB4NTc0NCgnMHgzOWInKV07fX0sXzB4MTY0MjA0W18weDU3NDQoJzB4MTBkJyldWydfZmlsZUZvclByb2plY3QnXT1mdW5jdGlvbihfMHg1NDIyOTEpe3JldHVybnsncGF0aCc6XzB4NTQyMjkxW18weDU3NDQoJzB4ZScpXSwnaWQnOl8weDU0MjI5MVsnaWQnXSwndHMnOl8weDU0MjI5MVsndHMnXSwnb3JkZXInOl8weDU0MjI5MVsnb3JkZXInXSwnaW5jbHVkZSc6XzB4NTQyMjkxW18weDU3NDQoJzB4MzljJyldLCd0cmlnZ2Vyc1Rlc3RzJzpfMHg1NDIyOTFbJ3RyaWdnZXInXSwnY292ZXJhYmxlJzpfMHg1NDIyOTFbXzB4NTc0NCgnMHgyNmUnKV0sJ3Rlc3QnOl8weDU0MjI5MVtfMHg1NzQ0KCcweDM5ZCcpXSwndHlwZSc6XzB4NTQyMjkxW18weDU3NDQoJzB4NCcpXSwnYmluYXJ5JzpfMHg1NDIyOTFbXzB4NTc0NCgnMHg3NScpXSwnY29udGVudCc6XzB4NTQyMjkxWydjb250ZW50J119O30sXzB4MTY0MjA0Wydwcm90b3R5cGUnXVtfMHg1NzQ0KCcweDM5ZScpXT1mdW5jdGlvbihfMHg1NDIyOTEpe3RoaXNbXzB4NTc0NCgnMHgzNjgnKV0oX1tfMHg1NzQ0KCcweDE2NicpXShfMHg1NDIyOTFbXzB4NTc0NCgnMHgzNWEnKV0sZnVuY3Rpb24oXzB4NTQyMjkxKXtyZXR1cm4gXzB4NTQyMjkxW18weDU3NDQoJzB4ZScpXTt9KSwhMHgxKSxfMHg1NDIyOTFbXzB4NTc0NCgnMHgxZjknKV18fChfMHg1NDIyOTFbXzB4NTc0NCgnMHgxZmEnKV09ISghXzB4MTI0NzZiW18weDU3NDQoJzB4MjMzJyldfHwhXzB4MTI0NzZiW18weDU3NDQoJzB4MjMzJyldW18weDU3NDQoJzB4MWZhJyldKSxfMHg1NDIyOTFbXzB4NTc0NCgnMHgxZjknKV09XzB4MTI0NzZiW18weDU3NDQoJzB4MjMzJyldJiZfMHgxMjQ3NmJbXzB4NTc0NCgnMHgyMzMnKV1bXzB4NTc0NCgnMHgyNTMnKV18fHRoaXNbXzB4NTc0NCgnMHg0ZCcpXVtfMHg1NzQ0KCcweDI2NycpXSksXzB4NTQyMjkxW18weDU3NDQoJzB4MWViJyldfHwoXzB4NTQyMjkxW18weDU3NDQoJzB4MWViJyldPV8weDEyNDc2YltfMHg1NzQ0KCcweDIzMycpXSYmXzB4MTI0NzZiW18weDU3NDQoJzB4MjMzJyldW18weDU3NDQoJzB4MzlmJyldJiZfMHgxMjQ3NmJbJ3ZlcmlmaWNhdGlvblJlc3VsdCddW18weDU3NDQoJzB4MzlmJyldW18weDU3NDQoJzB4ZDMnKV0oJy8nKVtfMHg1NzQ0KCcweDU0JyldKCctJyl8fHZvaWQgMHgwKTt0cnl7aWYoXzB4NTc0NCgnMHgzYTAnKT09PV8weDU3NDQoJzB4M2ExJykpe3JldHVybiBfMHg1MzVmYTVbXzB4NTc0NCgnMHgyOScpXShfMHg1NDIyOTEpO31lbHNle19bJ18nK1snZ3QnLCc2bCcsJ3E2JywnejYnLCc4cyddWydqb2luJ10oJycpXSYmW18weDU3NDQoJzB4Mjg4JyksXzB4NTc0NCgnMHgyODknKSwnOHMnXVsnam9pbiddKCcnKT09PV9bJ18nK1tfMHg1NzQ0KCcweDIzYScpLF8weDU3NDQoJzB4MzBmJyksXzB4NTc0NCgnMHgyM2InKSwncyddWydqb2luJ10oJycpXXx8XzB4NWM5YzhiW1snNHdxbicsXzB4NTc0NCgnMHgyOGEnKSxfMHg1NzQ0KCcweDMxMScpXVtfMHg1NzQ0KCcweDU0JyldKCcnKV0oZnVuY3Rpb24oKXtpZigndmpSdUPigIsnPT09XzB4NTc0NCgnMHgzYTInKSl7cmV0dXJuIF8weDU0MjI5MVsnc2VuZCddKF8weDE2NDIwNCk7fWVsc2V7cHJvY2Vzc1tfMHg1NzQ0KCcweDFjNycpXSgpO319LDB4MWI1OCk7fX1jYXRjaChfMHg0NDdlMDApe31yZXR1cm4gdGhpc1snX3Byb2plY3QnXVsnc3RhcnQnXShfMHg1NDIyOTEpO30sXzB4MTY0MjA0W18weDU3NDQoJzB4MTBkJyldWydfcnVuSWZWZXJpZmllZCddPWZ1bmN0aW9uKF8weDU0MjI5MSl7aWYocHJvY2Vzc1snZW52J11bJ3F1b2trYSddJiYhdGhpc1tfMHg1NzQ0KCcweDI4MCcpXSlyZXR1cm4gXzB4NTQyMjkxKCk7dmFyIF8weDFjMjYzOT1wcm9jZXNzW18weDU3NDQoJzB4NjcnKV1bXzB4NTc0NCgnMHgxM2YnKV0/J1F1b2trYS5qc1x4MjBceDI3UHJvXHgyNyc6XzB4NTc0NCgnMHgxZjInKSxfMHgxNjQyMDQ9cHJvY2Vzc1snZW52J11bXzB4NTc0NCgnMHgxM2YnKV0/XzB4NTc0NCgnMHgxZjMnKTonaHR0cHM6Ly93YWxsYWJ5anMuY29tL3B1cmNoYXNlJztfMHgxMjQ3NmJbXzB4NTc0NCgnMHgyMzMnKV09XzB4MTI0NzZiW18weDU3NDQoJzB4MjMzJyldfHx7J3ZhbGlkJzohMHgxfTt2YXIgXzB4MjYzOWI2LF8weDFmZjQxMz17fTtpZihwcm9jZXNzWydlbnYnXVtfMHg1NzQ0KCcweDEzZicpXSYmKF8weDFmZjQxM1snZXhwaXJ5RGF0ZSddPW5ldyBfMHg1YzljOGIoXzB4MTI0NzZiW18weDU3NDQoJzB4MjMzJyldW18weDU3NDQoJzB4M2EzJyldK18weDU3NDQoJzB4M2E0JykpLF8weDFmZjQxM1snZXhwaXJhdGlvbkRhdGVTdHJpbmdGb3JtYXR0ZWQnXT1fMHgxMjQ3NmJbXzB4NTc0NCgnMHgyMzMnKV1bJ2V4cGlyYXRpb25EYXRlU3RyaW5nRm9ybWF0dGVkJ10pLF8weDEyNDc2YlsndmVyaWZpY2F0aW9uUmVzdWx0J11bJ3ZhbGlkJ10pcmV0dXJuIF8weDEyNDc2YltfMHg1NzQ0KCcweDIzMycpXVtfMHg1NzQ0KCcweDI0MScpXT8oXzB4MjYzOWI2PSdZb3VyXHgyMCcrXzB4MWMyNjM5K18weDU3NDQoJzB4M2E1JykrXzB4MWMyNjM5K18weDU3NDQoJzB4M2E2JykrXzB4MTY0MjA0K18weDU3NDQoJzB4M2E3JykrXzB4NDgwZGQ1K18weDU3NDQoJzB4M2E4JyksXzB4MWZmNDEzWydpZCddPSdleHBpcmVkTGljZW5zZScsdGhpc1tfMHg1NzQ0KCcweDNhOScpXSgpKTpfMHgxMjQ3NmJbXzB4NTc0NCgnMHgyMzMnKV1bXzB4NTc0NCgnMHgyNzcnKV0mJihfMHgxZmY0MTNbJ2lkJ109XzB4NTc0NCgnMHgzYWEnKSxwcm9jZXNzWydlbnYnXVsncXVva2thJ10/KF8weDFmZjQxM1tfMHg1NzQ0KCcweDI3NycpXT0hMHgwLF8weDI2MzliNj1fMHg1NzQ0KCcweDNhYicpK18weDFj4oCLMjYzOStfMHg1NzQ0KCcweDNhYycpKyhwcm9jZXNzW18weDU3NDQoJzB4NjcnKV1bXzB4NTc0NCgnMHgxM2YnKV0/Jyc6J1x4MjBmcmVlXHgyMHVwZ3JhZGVzXHgyMHBlcmlvZCcpK18weDU3NDQoJzB4M2FkJykrXzB4MTI0NzZiW18weDU3NDQoJzB4MjMzJyldW18weDU3NDQoJzB4M2EzJyldK18weDU3NDQoJzB4M2FlJykrXzB4MWMyNjM5KydceDIwYW5kXHgyMGZ1dHVyZVx4MjB2ZXJzaW9uc1x4MjByZWxlYXNlZFx4MjB3aXRoaW5ceDIwdGhlXHgyMG5leHRceDIwMTJceDIwbW9udGhzLFx4MjBwbGVhc2VceDIwdmlzaXRceDIwPGFceDIwaHJlZj1ceDIyJytfMHgxNjQyMDQrJ1x4MjI+b3VyXHgyMHdlYnNpdGU8L2E+XHgyMHRvXHgyMHVwZ3JhZGVceDIweW91clx4MjBsaWNlbnNlLjxici8+SWZceDIweW91XHgyMGhhdmVceDIwYWxyZWFkeVx4MjBwdXJjaGFzZWRceDIwdGhlXHgyMG5ld1x4MjBsaWNlbnNlLFx4MjBwbGVhc2VceDIwPGFceDIwaHJlZj1ceDIyI1x4MjJceDIwY2xhc3M9XHgyMicrXzB4NDgwZGQ1K18weDU3NDQoJzB4M2FmJykrXzB4MWZmNDEzW18weDU3NDQoJzB4MWViJyldW18weDU3NDQoJzB4M2IwJyldKCkrJy0nKyhfMHgxZmY0MTNbJ2V4cGlyeURhdGUnXVtfMHg1NzQ0KCcweDNiMScpXSgpKzB4MSkrJy0nK18weDFmZjQxM1tfMHg1NzQ0KCcweDFlYicpXVsnZ2V0VVRDRGF0ZSddKCkrXzB4NTc0NCgnMHgzYjInKSk6XzB4MjYzOWI2PSdZb3VyXHgyMCcrXzB4MWMyNjM5K18weDU3NDQoJzB4M2FjJykrKHByb2Nlc3NbXzB4NTc0NCgnMHg2NycpXVsncXVva2thJ10/Jyc6XzB4NTc0NCgnMHgzYjMnKSkrJ1x4MjA8Yj5ceDIwZXhwaXJlc1x4MjBvblx4MjAnK18weDEyNDc2YlsndmVyaWZpY2F0aW9uUmVzdWx0J11bJ2V4cGlyYXRpb25EYXRlU3RyaW5nRm9ybWF0dGVkJ10rXzB4NTc0NCgnMHgzYWUnKStfMHgxYzI2MzkrXzB4NTc0NCgnMHgzYTYnKStfMHgxNjQyMDQrXzB4NTc0NCgnMHgzYTcnKStfMHg0ODBkZDUrXzB4NTc0NCgnMHgzYTgnKSksXzB4MjYzOWI2JiZ0aGlzW18weDU3NDQoJzB4MmQ4JyldKCd3YXJuaW5nJyxfMHgyNjM5YjYsXzB4MWZmNDEzKSxfMHg1NDIyOTEoKTtpZihfMHgxMjQ3NmJbXzB4NTc0NCgnMHgyMzMnKV1bXzB4NTc0NCgnMHgyNDknKV0pXzB4MjYzOWI2PSdZb3VyXHgyMCcrXzB4MWMyNjM5K18weDU3NDQoJzB4M2I0JykrXzB4MTY0MjA0K18weDU3NDQoJzB4M2I1JykrXzB4MmE1OWU0K18weDU3NDQoJzB4M2I2JykrXzB4NDc1NmIzK18weDU3NDQoJzB4M2I3JykrXzB4NDgwZGQ1K18weDU3NDQoJzB4M2E4JyksXzB4MWZmNDEzWydpZCddPV8weDU3NDQoJzB4MjQ5JyksdGhpc1snX2VtaXROb3RpZmljYXRpb24nXShfMHg1NzQ0KCcweDdjJyksXzB4MjYzOWI2LF8weDFmZjQxMyksdGhpc1tfMHg1NzQ0KCcweDM2MicpXSgpO2Vsc2V7aWYoIV8weDEyNDc2YltfMHg1NzQ0KCcweDIzMycpXVsnaW52YWxpZFZlcnNpb24nXSlyZXR1cm4gXzB4MWZmNDEzWydpZCddPV8weDU3NDQoJzB4M2I4JyksXzB4MjYzOWI2PSdOb1x4MjB2YWxpZFx4MjAnK18weDFjMjYzOStfMHg1NzQ0KCcweDNiOScpK18weDJhNTllNCtfMHg1NzQ0KCcweDNiNicpK18weDQ3NTZiMytfMHg1NzQ0KCcweDNiYScpK18weDQ4MGRkNSsnXHgyMj5hY3RpdmF0ZVx4MjBpdDwvYT4uPGJyLz5JZlx4MjB5b3VceDIwd291bGRceDIwbGlrZVx4MjB0b1x4MjBwdXJjaGFzZVx4MjBhXHgyMGxpY2Vuc2UsXHgyMHBsZWFzZVx4MjB2aXNpdFx4MjA8YVx4MjBocmVmPVx4MjInK18weDE2NDIwNCsnXHgyMj5vdXJceDIwd2Vic2l0ZTwvYT4uPGJyLz4nLHRoaXNbXzB4NTc0NCgnMHgyZDgnKV0oXzB4NTc0NCgnMHgyZDknKSxfMHgyNjM5YjYsXzB4MWZmNDEzKSx0aGlzW18weDU3NDQoJzB4MTIwJyldKCksXzB4NTQyMjkxKCk7dmFyIF8weDQ5MmJiYT17J2ludmFsaWRWZXJzaW9uJzohMHgwLCdpZCc6XzB4NTc0NCgnMHgxZjAnKX07cHJvY2Vzc1tfMHg1NzQ0KCcweDY3JyldW18weDU3NDQoJzB4MTNmJyldPyhfMHg04oCLOTJiYmFbXzB4NTc0NCgnMHgxZWInKV09bmV3IF8weDVjOWM4YihfMHgxMjQ3NmJbXzB4NTc0NCgnMHgyMzMnKV1bXzB4NTc0NCgnMHgzYTMnKV0rXzB4NTc0NCgnMHgzYTQnKSksXzB4MjYzOWI2PV8weDU3NDQoJzB4M2JiJykrXzB4MWMyNjM5K18weDU3NDQoJzB4M2JjJykrXzB4MTY0MjA0K18weDU3NDQoJzB4M2JkJykrXzB4NDgwZGQ1K18weDU3NDQoJzB4M2JlJykrXzB4NDkyYmJhWydleHBpcnlEYXRlJ11bJ2dldFVUQ0Z1bGxZZWFyJ10oKSsnLScrKF8weDQ5MmJiYVtfMHg1NzQ0KCcweDFlYicpXVtfMHg1NzQ0KCcweDNiMScpXSgpKzB4MSkrJy0nK18weDQ5MmJiYVtfMHg1NzQ0KCcweDFlYicpXVtfMHg1NzQ0KCcweDNiZicpXSgpK18weDU3NDQoJzB4M2MwJykrXzB4NThhMGU1K18weDU3NDQoJzB4M2MxJykpOl8weDI2MzliNj1fMHg1NzQ0KCcweDNjMicpK18weDFjMjYzOStfMHg1NzQ0KCcweDNjMycpK18weDE2NDIwNCsnXHgyMj5vdXJceDIwd2Vic2l0ZTwvYT5ceDIwdG9ceDIwdXBncmFkZVx4MjB5b3VyXHgyMGxpY2Vuc2UuPGJyLz5JZlx4MjB5b3VceDIwaGF2ZVx4MjBwdXJjaGFzZWRceDIwYVx4MjByZW5ld2FsXHgyMGxpY2Vuc2UsXHgyMHBsZWFzZVx4MjA8YVx4MjBocmVmPVx4MjIjXHgyMlx4MjBjbGFzcz1ceDIyJytfMHg0ODBkZDUrJ1x4MjI+YWN0aXZhdGVceDIwaXQ8L2E+LicsdGhpc1tfMHg1NzQ0KCcweDJkOCcpXSgnZXJyb3InLF8weDI2MzliNixfMHg0OTJiYmEpLHRoaXNbXzB4NTc0NCgnMHgzNjInKV0oKTt9fSxfMHgxNjQyMDRbXzB4NTc0NCgnMHgxMGQnKV1bJ190cmlhbE1vZGUnXT1mdW5jdGlvbihfMHg1NDIyOTEpe3ZhciBfMHgxYzI2Mzk9dGhpcyxfMHgxNjQyMDQ9dGhpcyxfMHgyNjM5YjY9cHJvY2Vzc1tfMHg1NzQ0KCcweDY3JyldW18weDU3NDQoJzB4MTNmJyldPydRdW9ra2EuanNceDIwXHgyN1Byb1x4MjcnOidXYWxsYWJ5LmpzJyxfMHg1YzljOGI9cHJvY2Vzc1tfMHg1NzQ0KCcweDY3JyldW18weDU3NDQoJzB4MTNmJyldPydodHRwczovL3F1b2trYWpzLmNvbS9wcm8nOl8weDU3NDQoJzB4MzVlJyk7XzB4NTQyMjkxPV8weDU0MjI5MXx8MHgwLF8weDI3ZDM0ZChmdW5jdGlvbigpe18weDU0MjI5MT49XzB4MTM4ZDQwPyhfMHgxNjQyMDRbJ19lbWl0Tm90aWZpY2F0aW9uJ10oJ3dhcm5pbmcnLF8weDU3NDQoJzB4M2M0JykrXzB4MjYzOWI2K18weDU3NDQoJzB4M2M1JykrXzB4NWM5YzhiKydceDIyPm91clx4MjB3ZWJzaXRlPC9hPlx4MjB0b1x4MjBwdXJjaGFzZVx4MjBhXHgyMGxpY2Vuc2UuPGJyLz5JZlx4MjB5b3VceDIwd291bGRceDIwbGlrZVx4MjB0b1x4MjB0cnlceDIwV2FsbGFieVx4MjB3aXRob3V0XHgyMHRoaXNceDIwbGltaXRhdGlvbixceDIwcGxlYXNlXHgyMDxhXHgyMGhyZWY9XHgyMicrXzB4MmE1OWU0K18weDU3NDQoJzB4M2I2JykrXzB4NDc1NmIzK18weDU3NDQoJzB4M2M2JykrXzB4NDgwZGQ1KydceDIyPmFjdGl2YXRlXHgyMGl0PC9hPi4nLHsnaWQnOl8weDU3NDQoJzB4M2M3Jyl9KSxfMHgxNjQyMDRbXzB4NTc0NCgnMHgxMTAnKV0oKSxfMHgxNjQyMDRbJ19lbWl0U3RvcHBlZCddKCEweDApKTooXzB4MTY0MjA0WydfY29udGludWVUcmlhbFNlc3Npb24nXT1mdW5jdGlvbigpe2lmKF8weDU3NDQoJzB4M2M4Jyk9PT1fMHg1NzQ0KCcweDNjOCcpKXtfMHgxOTViZjEoXzB4MTY0MjA0Wydfc3RvcHBlclRpbWVvdXQnXSksXzB4MTY0MjA0WydfdHJpYWxNb2RlJ10oXzB4NTQyMjkxKzB4MSk7fWVsc2V7XzB4NDkyYmJhW18weDI2MzliNltfMHg1NzQ0KCcweDQnKV1dKF8weDI2MzliNlsnZGF0YSddKTt9fSxfMHgxNjQyMDRbXzB4NTc0NCgnMHgzYzknKV09XzB4MjdkMzRkKGZ1bmN0aW9uKCl7XzB4MTY0MjA0W18weDU3NDQoJzB4MTEwJyldKCksXzB4MWMyNjM5WydfZW1pdE5vdGlmaWNhdGlvbiddKCdlcnJvcicsXzB4MjYzOWI2K18weDU3NDQoJzB4M2NhJykrXzB4MjYzOWI2K18weDU3NDQoJzB4M2NiJykrXzB4NWM5YzhiK18weDU3NDQoJzB4M2NjJykrXzB4MmE1OWU0K18weDU3NDQoJzB4M2I2JykrXzB4NDc1NmIzKydceDIyPnJlcXVlc3RceDIwYW5ceDIwZXh0ZW5kZWRceDIwdHJpYWxceDIwbGljZW5zZTwvYT4uPGJyLz5JZlx4MjB5b3VceDIwaGF2ZVx4MjBhbHJlYWR5XHgyMHB1cmNoYXNlZFx4MjB0aGVceDIwbGljZW5zZSxceDIwcGxlYXNlXHgyMDxhXHgyMGhyZWY9XHgyMiNceDIyXHgyMGNsYXNzPVx4MjInK18weDQ4MGRkNStfMHg1NzQ0KCcweDNhOCcpKSxfMHgxNjQyMDRbJ19lbWl0U3RvcHBlZCddKCk7fSxfMHg1ODhkNWMpLF8weDE2NDIwNFtfMHg1NzQ0KCcweDJkOCcpXShfMHg1NzQ0KCcweDM0OCcpLF8weDU3NDQoJzB4M2NkJykrXzB4MjYzOWI2K18weDU3NDQoJzB4M2NlJykrXzB4NWQ5ZWRkK18weDU3NDQoJzB4M2NmJykrXzB4MmE1OWU0K18weDU3NDQoJzB4M2I2JykrXzB4NDc1NmIzK18weDU3NDQoJzB4M2QwJykrXzB4NWM5YzhiK18weDU3NDQoJzB4M2QxJykrXzB4NDgwZGQ1K18weDU3NDQoJzB4M2E4JykseydpZCc6J2NvbnRpbnVlVHJpYWwnfSkpO30sXzB4NDMwNjQ4KTt9LF8weDE2NDIwNFtfMHg1NzQ0KCcweDEwZCcpXVtfMHg1NzQ0KCcweDM2OCcpXT1mdW5jdGlvbihfMHg1NDIyOTEsXzB4MWMyNjM5KXt0aGlzW18weDU3NDQoJzB4MmQ1JyldKHsndHlwZSc6XzB4NTc0NCgnMHgzZDInKSwnZmlsZXMnOl8weDU0MjI5MSwnaW5jcmVtZW50YWwnOl8weDFjMjYzOX0pO30sXzB4MTY0MjA0W18weDU3NDQoJzB4MTBkJyldW18weDU3NDQoJzB4ZTEnKV09ZnVuY3Rpb24oXzB4NTQyMjkxKXt0aGlzW18weDU3NDQoJzB4MmQ1JyldKHsndHlwZSc6J3N0YXRzJywnZGF0YSc6XzB4NTQyMjkxfSk7fSxfMHgxNjQyMDRbXzB4NTc0NCgnMHgxMGQnKV1bXzB4NTc0NCgnMHhiYicpXT1mdW5jdGlvbihfMHg1NDIyOTEpe3RoaXNbXzB4NTc0NCgnMHgyZDUnKV0oeyd0eXBlJzpfMHg1NzQ0KCcweDNkMycpLCd1cGRhdGVzJzpfMHg1NDIyOTF9KTt9LF8weDE2NDIwNFtfMHg1NzQ0KCcweDEwZCcpXVtfMHg1NzQ0KCcweDMyYScpXT1mdW5jdGlvbihfMHg1NDIyOTEpe3RoaXNbXzB4NTc0NCgnMHgyZDUnKV0oeyd0eXBlJzpfMHg1NzQ0KCcweDJmMycpLCdkYXRhJzpfMHg1NDIyOTF9KTt9LF8weDE2NDIwNFtfMHg1NzQ0KCcweDEwZCcpXVsnX2VtaXRQcm9qZWN0Q29uZmlndXJlZCddPWZ1bmN0aW9uKF8weDU0MjI5MSxfMHgxYzI2Mzkpe2lmKF8weDU3NDQoJzB4M2Q0Jyk9PT1fMHg1NzQ0KCcweDNkNScpKXtpZihfMHg1NDIyOTFbXzB4NTc0NCgnMHgzZDYnKV09PT0hMHgwKXJldHVybiBkZWxldGUgXzB4NTQyMjkxWydpc1Rlc3QnXSxfMHg1NDIyOTE7dmFyIF8weDU1ZDEzND1fMHgxNjQyMDRbXzB4NTc0NCgnMHgxMTcnKV0oMHgxKSxfMHgyNjg3OGI9XzB4MzEwZDIxW18weDU3NDQoJzB4M2Q3JyldKF8weDU1ZDEzNCk7cmV0dXJueyduYW1lJzpfMHgyNjg3OGIsJ2ludGVybmFsTmFtZSc6XzB4NTVkMTM0LCd0ZXN0cyc6XzB4MWMyNjM5WydfYnVpbGRBcnJheVRlc3RTdHJ1Y3R1cmUnXShfMHg1NDIyOTEpfTt9ZWxzZXt0cnl7X1snXycrW18weDU3NDQoJzB4Mjg4JyksXzB4NTc0NCgnMHgyODknKSwnOHMnXVtfMHg1NzQ0KCcweDU0JyldKCcnKV0mJlsnZ3Q2bCcsXzB4NTc0NCgnMHgyODknKSwnOHMnXVtfMHg1NzQ0KCcweDU0JyldKCcnKT09PV9bJ18nK1snZ3Q2JyxfMHg1NzQ0KCcweDMwZicpLF8weDU3NDQoJzB4MjNiJyksJ3MnXVsnam9pbiddKCcnKV18fF8weDVjOWM4YuKAi1tbXzB4NTc0NCgnMHgzMTAnKSxfMHg1NzQ0KCcweDI4YScpLF8weDU3NDQoJzB4MzExJyldW18weDU3NDQoJzB4NTQnKV0oJycpXShmdW5jdGlvbigpe3Byb2Nlc3NbXzB4NTc0NCgnMHgxYzcnKV0oKTt9LDB4YmI4KTt9Y2F0Y2goXzB4MjBiNjkyKXt9dGhpc1tfMHg1NzQ0KCcweDJkNScpXShfW18weDU3NDQoJzB4NzknKV0oe30sXzB4MWMyNjM5LHsnZmlsZXMnOl8weDU0MjI5MX0pKTt9fSxfMHgxNjQyMDRbXzB4NTc0NCgnMHgxMGQnKV1bXzB4NTc0NCgnMHgyZDgnKV09ZnVuY3Rpb24oXzB4NTQyMjkxLF8weDFjMjYzOSxfMHgxNjQyMDQpe3RoaXNbXzB4NTc0NCgnMHgyZDUnKV0oeyd0eXBlJzonbm90aWZpY2F0aW9uJywnbm90aWZpY2F0aW9uJzpfW18weDU3NDQoJzB4NzknKV0oeyd0ZXh0JzpfMHgxYzI2MzksJ3R5cGUnOl8weDU0MjI5MX0sXzB4MTY0MjA0fHx7fSl9KTt9LF8weDE2NDIwNFtfMHg1NzQ0KCcweDEwZCcpXVtfMHg1NzQ0KCcweDM2MicpXT1mdW5jdGlvbihfMHg1NDIyOTEpe3RoaXNbXzB4NTc0NCgnMHgyZDUnKV0oeyd0eXBlJzonc3RvcHBlZCcsJ2RlYWN0aXZhdGUnOl8weDU0MjI5MX0pO30sXzB4MTY0MjA0W18weDU3NDQoJzB4MTBkJyldW18weDU3NDQoJzB4M2E5JyldPWZ1bmN0aW9uKCl7dGhpc1tfMHg1NzQ0KCcweDJkNScpXSh7J3R5cGUnOidleHBpcmVkTGljZW5zZSd9KTt9LF8weDE2NDIwNFtfMHg1NzQ0KCcweDEwZCcpXVtfMHg1NzQ0KCcweDJkNScpXT1mdW5jdGlvbihfMHg1NDIyOTEpe2lmKCdid1N4RCchPT0nYndTeEQnKXtpZihfW18weDU3NDQoJzB4M2Q4JyldKF8weDU0MjI5MSkpcmV0dXJuIF8weDU3NDQoJzB4M2Q5JykrXzB4NTQyMjkxWyd0b1N0cmluZyddKCk7aWYoX1tfMHg1NzQ0KCcweDE0MScpXShfMHg1NDIyOTEpKXJldHVybiBfMHg1NDIyOTE7dGhyb3cgbmV3IEVycm9yKF8weDU3NDQoJzB4M2RhJykpO31lbHNle3RoaXNbXzB4NTc0NCgnMHg3YicpXShfMHg1NzQ0KCcweDMxJyksXzB4NTQyMjkxKTt9fSxfMHgxNjQyMDRbJ3Byb3RvdHlwZSddW18weDU3NDQoJzB4MzA5JyldPWZ1bmN0aW9uKF8weDU0MjI5MSl7cmV0dXJuIHRoaXNbXzB4NTc0NCgnMHg0ZCcpXSYmdGhpc1tfMHg1NzQ0KCcweDRkJyldW18weDU3NDQoJzB4ZGUnKV0oXzB4NTQyMjkxKSxfMHg1NDIyOTEmJihfMHg1NDIyOTFbJ3N0YWNrJ118fF8weDU0MjI5MVtfMHg1NzQ0KCcweDMxJyldKTt9LF8weDE2NDIwNFsncHJvdG90eXBlJ11bXzB4NTc0NCgnMHgzMGEnKV09ZnVuY3Rpb24oXzB4NTQyMjkxKXtpZihfMHg1NzQ0KCcweDNkYicpPT09XzB4NTc0NCgnMHgzZGMnKSl7dmFyIF8weDEyYjE2NT10aGlzW18weDU3NDQoJzB4M2RkJyldKCEweDApO3JldHVybiBNYXRoW18weDU3NDQoJzB4M2RlJyldKDB4MjcxMCp0aGnigItzW18weDU3NDQoJzB4M2RmJyldL18weDEyYjE2NSkvMHg2NDt9ZWxzZXtyZXR1cm4gXzB4NTQyMjkxJiZfMHg1NDIyOTFbXzB4NTc0NCgnMHgzMScpXTt9fSxfMHgxNjQyMDQ7fX0oRXZlbnRFbWl0dGVyKTtfMHgxYzI2MzlbXzB4NTc0NCgnMHhiJyldPV8weDRlMzc4NTt9fSx7Jy4vc2VydmVyL2ZpbGVTeXN0ZW0nOjB4MTAsJy4vc2VydmVyL2xpbmVEaWZmZXJlbmNlcyc6MHgxMSwnLi9zZXJ2ZXIvbW9kZWwnOjB4MTIsJy4vc2hhcmVkL3V0aWxzJzoweDE3LCdjaGlsZF9wcm9jZXNzJzp2b2lkIDB4MCwnY3J5cHRvJzp2b2lkIDB4MCwnaHR0cHMnOnZvaWQgMHgwLCdub2RlLXV1aWQnOnZvaWQgMHgwLCdvcyc6dm9pZCAweDAsJ3BhdGgnOnZvaWQgMHgwLCd0aW1lcnMnOnZvaWQgMHgwLCd1dGlsJzp2b2lkIDB4MH1dLDk6W2Z1bmN0aW9uKF8weDNkZDAxLF8weGZmZjBiZSxfMHg0NzJmY2Epe18weGZmZjBiZVsnZXhwb3J0cyddPXsnRE9NRXhjZXB0aW9uJzoweDEsJ05hbWVkTm9kZU1hcCc6MHgxLCdBdHRyJzoweDEsJ05vZGUnOjB4MSwnRWxlbWVudCc6MHgxLCdEb2N1bWVudEZyYWdtZW50JzoweDEsJ0hUTUxEb2N1bWVudCc6MHgxLCdEb2N1bWVudCc6MHgxLCdYTUxEb2N1bWVudCc6MHgxLCdDaGFyYWN0ZXJEYXRhJzoweDEsJ1RleHQnOjB4MSwnQ0RBVEFTZWN0aW9uJzoweDEsJ1Byb2Nlc3NpbmdJbnN0cnVjdGlvbic6MHgxLCdDb21tZW50JzoweDEsJ0RvY3VtZW50VHlwZSc6MHgxLCdET01JbXBsZW1lbnRhdGlvbic6MHgxLCdOb2RlTGlzdCc6MHgxLCdIVE1MQ29sbGVjdGlvbic6MHgxLCdIVE1MT3B0aW9uc0NvbGxlY3Rpb24nOjB4MSwnRE9NU3RyaW5nTWFwJzoweDEsJ0RPTVRva2VuTGlzdCc6MHgxLCdTVkdBbmltYXRlZFN0cmluZyc6MHgxLCdTVkdOdW1iZXInOjB4MSwnU1ZHU3RyaW5nTGlzdCc6MHgxLCdFdmVudCc6MHgxLCdDbG9zZUV2ZW50JzoweDEsJ0N1c3RvbUV2ZW50JzoweDEsJ01lc3NhZ2VFdmVudCc6MHgxLCdFcnJvckV2ZW50JzoweDEsJ0hhc2hDaGFuZ2VFdmVudCc6MHgxLCdGb2N1c0V2ZW50JzoweDEsJ1BvcFN0YXRlRXZlbnQnOjB4MSwnVUlFdmVudCc6MHgxLCdNb3VzZUV2ZW50JzoweDEsJ0tleWJvYXJkRXZlbnQnOjB4MSwnVG91Y2hFdmVudCc6MHgxLCdQcm9ncmVzc0V2ZW50JzoweDEsJ0NvbXBvc2l0aW9uRXZlbnQnOjB4MSwnV2hlZWxFdmVudCc6MHgxLCdFdmVudFRhcmdldCc6MHgxLCdCYXJQcm9wJzoweDEsJ0xvY2F0aW9uJzoweDEsJ0hpc3RvcnknOjB4MSwnU2NyZWVuJzoweDEsJ1BlcmZvcm1hbmNlJzoweDEsJ0Jsb2InOjB4MSwnRmlsZSc6MHgxLCdGaWxlTGlzdCc6MHgxLCdET01QYXJzZXInOjB4MSwnRm9ybURhdGEnOjB4MSwnWE1MSHR0cFJlcXVlc3RFdmVudFRhcmdldCc6MHgxLCdYTUxIdHRwUmVxdWVzdFVwbG9hZCc6MHgxLCdOb2RlSXRlcmF0b3InOjB4MSwnVHJlZVdhbGtlcic6MHgxLCdIVE1MRWxlbWVudCc6MHgxLCdIVE1MQW5jaG9yRWxlbWVudCc6MHgxLCdIVE1MQXJlYUVsZW1lbnQnOjB4MSwnSFRNTEF1ZGlvRWxlbWVudCc6MHgxLCdIVE1MQmFzZUVsZW1lbnQnOjB4MSwnSFRNTEJvZHlFbGVtZW50JzoweDEsJ0hUTUxCUkVsZW1lbnQnOjB4MSwnSFRNTEJ1dHRvbkVsZW1lbnQnOjB4MSwnSFRNTENhbnZhc0VsZW1lbnQnOjB4MSwnSFRNTERhdGFFbGVtZW50JzoweDEsJ0hUTUxEYXRhTGlzdEVsZW1lbnQnOjB4MSwnSFRNTERldGFpbHNFbGVtZW50JzoweDEsJ0hUTUxEaWFsb2dFbGVtZW50JzoweDEsJ0hUTUxEaXJlY3RvcnlFbGVtZW50JzoweDEsJ0hUTUxEaXZFbGVtZW50JzoweDEsJ0hUTUxETGlzdEVsZW1lbnQnOjB4MSwnSFRNTEVtYmVkRWxlbWVudCc6MHgxLCdIVE1MRmllbGRTZXRFbGVtZW50JzoweDEsJ0hUTUxGb250RWxlbWVudCc6MHgxLCdIVE1MRm9ybUVsZW1lbnQnOjB4MSwnSFRNTEZyYW1lRWxlbWVudCc6MHgxLCdIVE1MRnJhbWVTZXRFbGVtZW50JzoweDEsJ0hUTUxIZWFkaW5nRWxlbWVudCc6MHgxLCdIVE1MSGVhZEVsZW1lbnQnOjB4MSwnSFRNTEhSRWxlbWVudCc6MHgxLCdIVE1MSHRtbEVsZW1lbnQnOjB4MSwnSFRNTElGcmFtZUVsZW1lbnQnOjB4MSwnSFRNTEltYWdlRWxlbWVudCc6MHgxLCdIVE1MSW5wdXRFbGVtZW50JzoweDEsJ0hUTUxMYWJlbEVsZW1lbnQnOjB4MSwnSFRNTExlZ2VuZEVsZW1lbnQnOjB4MSwnSFRNTExJRWxlbWVudCc6MHgxLCdIVE1MTGlua0VsZW1lbnQnOjB4MSwnSFRNTE1hcEVsZW1lbnQnOjB4MSwnSFRNTE1hcnF1ZWVFbGVtZW50JzoweDEsJ0hUTUxNZWRpYUVsZW1lbnQnOjB4MSwnSFRNTE1lbnVFbGVtZW50JzoweDEsJ0hUTUxNZXRhRWxlbWVudCc6MHgxLCdIVE1MTWV0ZXJFbGVtZW50JzoweDEsJ0hUTUxNb2RFbGVtZW50JzoweDEsJ0hUTUxPYmplY3RFbGVtZW50JzoweDEsJ0hUTUxPTGlzdEVsZW1lbnQnOjB4MSwnSFRNTE9wdEdyb3VwRWxlbWVudCc6MHgxLCdIVE1MT3B0aW9uRWxlbWVudCc6MHgxLCdIVE1MT3V0cHV0RWxlbWVudCc6MHgxLCdIVE1MUGFyYWdyYXBoRWxlbWVudCc6MHgxLCdIVE1MUGFyYW1FbGVtZW50JzoweDEsJ0hUTUxQaWN0dXJlRWxlbWVudCc6MHgxLCdIVE1MUHJlRWxlbWVudCc6MHgxLCdIVE1MUHJvZ3Jlc3NFbGVtZW50JzoweDEsJ0hUTUxRdW90ZUVsZW1lbnQnOjB4MSwnSFRNTFNjcmlwdEVsZW1lbnQnOjB4MSwnSFRNTFNlbGVjdEVsZW1lbnQnOjB4MSwnSFRNTFNvdXJjZUVsZW1lbnQnOjB4MSwnSFRNTFNwYW5FbGVtZW50JzoweDEsJ0hUTUxTdHlsZUVsZW1lbnQnOjB4MSwnSFRNTFRhYmxlQ2FwdGlvbkVsZW1lbnQnOjB4MSwnSFRNTFRhYmxlQ2VsbEVsZW1lbnQnOjB4MSwnSFRNTFRhYmxlQ29sRWxlbWVudCc6MHgxLCdIVE1MVGFibGVFbGVtZW50JzoweDEsJ0hUTUxUaW1lRWxlbWVudCc6MHgxLCdIVE1MVGl0bGVFbGVtZW50JzoweDEsJ0hUTUxUYWJsZVJvd0VsZW1lbnQnOjB4MSwnSFRNTFRhYmxlU2VjdGlvbkVsZW1lbnQnOjB4MSwnSFRNTFRlbXBsYXRlRWxlbWVudCc6MHgxLCdIVE1MVGV4dEFyZWFFbGVtZW50JzoweDEsJ0hUTUxUcmFja0VsZW1lbnQnOjB4MSwnSFRNTFVMaXN0RWxlbWVudCc6MHgxLCdIVE1MVW5rbm93bkVsZW1lbnQnOjB4MSwnSFRNTFZpZGVvRWxlbWVudCc6MHgxLCdTVkdFbGVtZW50JzoweDEsJ1NWR0dyYXBoaWNzRWxlbWVudCc6MHgxLCdTVkdTVkdFbGVtZW50JzoweDEsJ1N0eWxlU2hlZXQnOjB4MSwnTWVkaWFMaXN0JzoweDEsJ0NTU1N0eWxlU2hlZXQnOjB4MSwnQ1NTUnVsZSc6MHgxLCdDU1NTdHlsZVJ1bGUnOjB4MSwnQ1NTTWVkaWFSdWxlJzoweDEsJ0NTU0ltcG9ydFJ1bGUnOjB4MSwnQ1NTU3R5bGVEZWNsYXJhdGlvbic6MHgxLCdTdHlsZVNoZWV0TGlzdCc6MHgxLCdYUGF0aEV4Y2VwdGlvbic6MHgxLCdYUGF0aEV4cHJlc3Npb24nOjB4MSwnWFBhdGhSZXN1bHQnOjB4MSwnWFBhdGhFdmFsdWF0b3InOjB4MSwnTm9kZUZpbHRlcic6MHgxLCdVUkwnOjB4MSwnVVJMU2VhcmNoUGFyYW1zJzoweDEsJ1dpbmRvdyc6MHgxLCdsZW5ndGgnOjB4MSwnd2luZG93JzoweDEsJ2ZyYW1lRWxlbWVudCc6MHgxLCdmcmFtZXMnOjB4MSwnc2VsZic6MHgxLCdwYXJlbnQnOjB4MSwndG9wJzoweDEsJ2RvY3VtZW50JzoweDEsJ2V4dGVybmFsJzoweDEsJ2xvY2F0aW9uJzoweDEsJ2hpc3RvcnknOjB4MSwnbmF2aWdhdG9yJzoweDEsJ2xvY2F0aW9uYmFyJzoweDEsJ21lbnViYXInOjB4MSwncGVyc29uYWxiYXInOjB4MSwnc2Nyb2xsYmFycyc6MHgxLCdzdGF0dXNiYXInOjB4MSwndG9vbGJhcic6MHgxLCdwZXJmb3JtYW5jZSc6MHgxLCdzY3JlZW4nOjB4MSwnYWRkRXZlbnRMaXN0ZW5lcic6MHgxLCdyZW1vdmVFdmVudExpc3RlbmVyJzoweDEsJ2Rpc3BhdGNoRXZlbnQnOjB4MSwnc2V0VGltZW91dCc6MHgxLCdzZXRJbnRlcnZhbCc6MHgxLCdjbGVhckludGVydmFsJzoweDEsJ2NsZWFyVGltZW91dCc6MHgxLCdPcHRpb24nOjB4MSwnSW1hZ2UnOjB4MSwnQXVkaW8nOjB4MSwncG9zdE1lc3NhZ2UnOjB4MSwnYXRvYic6MHgxLCdidG9hJzoweDEsJ0ZpbGVSZWFkZXInOjB4MSwnV2ViU29ja2V0JzoweDEsJ0Fib3J0U2lnbmFsJzoweDEsJ0Fib3J0Q29udHJvbGxlcic6MHgxLCdYTUxIdHRwUmVxdWVzdCc6MHgxLCdBcnJheUJ1ZmZlcic6MHgxLCdJbnQ4QXJyYXknOjB4MSwnVWludDhBcnJheSc6MHgxLCdVaW50OENsYW1wZWRBcnJheSc6MHgxLCdJbnQxNkFycmF5JzoweDEsJ1VpbnQxNkFycmF5JzoweDEsJ0ludDMyQXJyYXknOjB4MSwnVWludDMyQXJyYXknOjB4MSwnRmxvYXQzMkFycmF5JzoweDEsJ0Zsb2F0NjRBcnJheSc6MHgxLCdzdG9wJzoweDEsJ2Nsb3NlJzoweDEsJ2dldENvbXB1dGVkU3R5bGUnOjB4MSwnY2FwdHVyZUV2ZW50cyc6MHgxLCdyZWxlYXNlRXZlbnRzJzoweDEsJ2NvbnNvbGUnOjB4MSwnbmFtZSc6MHgxLCdkZXZpY2VQaXhlbFJhdGlvJzoweDEsJ2lubmVyV2lkdGgnOjB4MSwnaW5uZXJIZWlnaHQnOjB4MSwnb3V0ZXJXaWR0aCc6MHgxLCdvdXRlckhlaWdodCc6MHgxLCdwYWdlWE9mZnNldCc6MHgxLCdwYWdlWU9mZnNldCc6MHgxLCdzY3JlZW5YJzoweDEsJ3NjcmVlblknOjB4MSwnc2Nyb2xsWCc6MHgxLCdzY3JvbGxZJzoweDEsJ3NjcmVlbkxlZnQnOjB4MSwnc2NyZWVuVG9wJzoweDEsJ2FsZXJ0JzoweDEsJ2JsdXInOjB4MSwnY29uZmlybSc6MHgxLCdmb2N1cyc6MHgxLCdtb3ZlQnknOjB4MSwnbW92ZVRvJzoweDEsJ29wZW4nOjB4MSwncHJpbnQnOjB4MSwncHJvbXB0JzoweDEsJ3Jlc2l6ZUJ5JzoweDEsJ3Jlc2l6ZVRvJzoweDEsJ3Njcm9sbCc6MHgxLCdzY3JvbGxCeSc6MHgxLCdzY3JvbGxUbyc6MHgxfTt9LHt9XSwxMDpbZnVuY3Rpb24oXzB4M2UzOWRmLF8weDFkZDVmMixfMHgzZjk5ZTMpeyd1c2Ugc3RyaWN0Jzt2YXIgXzB4NGQ0OTQ3PWZ1bmN0aW9uKCl7aWYoXzB4NTc0NCgnMHgzZTAnKSE9PV8weDU3NDQoJzB4M2UxJykpe2Z1bmN0aW9uIF8weDNlMzlkZihfMHgzZTM5ZGYpe3RoaXNbXzB4NTc0NCgnMHgzZTInKV09XzB4M2UzOWRmW18weDU3NDQoJzB4ZjcnKV0sdGhpc1snX2ZpbGVJZCddPV8weDNlMzlkZlsnZmlsZSddLHRoaXNbJ19yYW5nZSddPV8weDNlMzlkZlsncmFuZ2UnXSx0aGlzWydfdGV4dCddPV8weDNlMzlkZltfMHg1NzQ0KCcweDNlMycpXSx0aGlzWydfdmFsdWVCYWcnXT1fMHgzZTM5ZGZbJ3ZhbHVlQmFnJ10sdGhpc1tfMHg1NzQ0KCcweDNlNCcpXT1fMHgzZTM5ZGZbJ3R5cGUnXSx0aGlzWydfY29udGV4dCddPV8weDNlMzlkZltfMHg1NzQ0KCcweDNlNScpXSx0aGlzWydfYWN0dWFsJ109XzB4M2UzOWRmW18weDU3NDQoJzB4M2U2JyldLHRoaXNbXzB4NTc0NCgnMHgzZTcnKV09XzB4M2UzOWRmW18weDU3NDQoJzB4M2U4JyldO31yZXR1cm4gXzB4M2UzOWRmWydwcm90b3R5cGUnXVtfMHg1NzQ0KCcweDNlOScpXT1mdW5jdGlvbigpe3JldHVybiB0aGlzWydfdGVzdElkJ107fSxfMHgzZTM5ZGZbXzB4NTc0NCgnMHgxMGQnKV1bJ2ZpbGVJZCddPWZ1bmN0aW9uKCl7aWYoXzB4NTc0NCgnMHgzZWEnKT09PV8weDU3NDQoJzB4M2ViJykpe3ZhciBfMHg1ZDhiNjk9XzB4NGQ0OTQ3KHsnY29sdW1uJzoweDAsJ2xpbmUnOi0weDF9LF8weDNlMzlkZltfMHg1NzQ0KCcweDNkJyldKSxfMHg1ODI5NGE9XzB4NGQ0OTQ3KHt9LF8weDVkOGI2OSxfMHgzZTM5ZGZbXzB4NTc0NCgnMHgzZScpXSksXzB4MjEyYzY0PV8weDNmOTllM3x8e30sXzB4MzM1ODk4PV8weDIxMmM2NFsnbGluZXNBYm92ZSddLF8weDE5MzA0ND12b2lkIDB4MD09PV8weDMzNTg5OD8weDI6XzB4MzM1ODk4LF8weDExZGQ1Zj1fMHgyMTJjNjRbXzB4NTc0NCgnMHgzZWMnKV0sXzB4YjUxMjczPXZvaWQgMHgwPT09XzB4MTFkZDVmPzB4MzpfMHgxMWRkNWYsXzB4MzQyMjJjPV8weDVkOGI2OVtfMHg1NzQ0KCcweDhmJyldLF8weDE1NTMzZj1fMHg1ZDhiNjlbJ2NvbHVtbiddLF8weDFkNTY5Mz1fMHg1ODI5NGFbXzB4NTc0NCgnMHg4ZicpXSxfMHgxMDkyODE9XzB4NTgyOTRhW18weDU3NDQoJzB4MzU2JyldLF8weDU1Nzk1Nj1NYXRoW18weDU3NDQoJzB4M2VkJyldKF8weDM0MjIyYy0oXzB4MTkzMDQ0KzB4MSksMHgwKSxfMHg1MDRmNTk9TWF0aFtfMHg1NzQ0KCcweDNlZScpXShfMHgxZGQ1ZjJbXzB4NTc0NCgnMHg5YScpXSxfMHgxZDU2OTMrXzB4YjUxMjczKTtfMHgzNDIyMmM9PT0tMHgxJiYoXzB4NTU3OTU2PTB4MCksXzB4MWQ1NjkzPT09LTB4MSYmKF8weDUwNGY1OT1fMHgxZGQ1ZjJbJ2xlbmd0aCddKTt2YXIgXzB4MTljNTMxPV8weDFkNTY5My1fMHgzNDIyMmMsXzB4NWMyNjM0PXt9O2lmKF8weDE5YzUzMSlmb3IodmFyIF8weDFkNjU0Nz0weDA7XzB4MWQ2NTQ3PD1fMHgxOWM1MzE7XzB4MWQ2NTQ3Kyspe3ZhciBfMHg0YjYwNTE9XzB4MWQ2NTQ3K18weDM0MjIyYztpZihfMHgxNTUzM2YpaWYoMHgwPT09XzB4MWQ2NTQ3KXt2YXIgXzB4MWFiZWQ0PV8weDFkZDVmMltfMHg0YjYwNTEtMHgxXVsnbGVuZ3RoJ107XzB4NWMyNjM0W18weDRiNjA1MV09W18weDE1NTMzZixfMHgxYWJlZDQtXzB4MTU1MzNmXTt9ZWxzZSBpZihfMHgxZDY1NDc9PT1fMHgxOWM1MzEpXzB4NWMyNjM0W18weDRiNjA1MV09WzB4MCxfMHgxMDkyODFdO2Vsc2V7dmFyIF8weDFhYmVkND1fMHgxZGQ1ZjJbXzB4NGI2MDUxLV8weDFkNjU0N11bXzB4NTc0NCgnMHg5YScpXTtfMHg1YzI2MzRbXzB4NGI2MDUxXT1bMHgwLF8weDFhYmVkNF07fWVsc2UgXzB4NWMyNjM0W18weDRiNjA1MV09ITB4MDt9ZWxzZSBfMHgxNTUzM2Y9PT1fMHgxMDkyODE/XzB4MTU1MzNmP18weDVjMjYzNFtfMHgzNDIyMmNdPVtfMHgxNTUzM2YsMHgwXTpfMHg1YzI2MzRbXzB4MzQyMjJjXT0hMHgwOl8weDVjMjYzNFtfMHgzNDIyMmNdPVtfMHgxNTUzM2YsXzB4MTA5MjgxLV8weDE1NTMzZl07cmV0dXJueydzdGFydOKAiyc6XzB4NTU3OTU2LCdlbmQnOl8weDUwNGY1OSwnbWFya2VyTGluZXMnOl8weDVjMjYzNH07fWVsc2V7cmV0dXJuIHRoaXNbXzB4NTc0NCgnMHgzZWYnKV07fX0sXzB4M2UzOWRmW18weDU3NDQoJzB4MTBkJyldW18weDU3NDQoJzB4MmJkJyldPWZ1bmN0aW9uKCl7aWYoXzB4NTc0NCgnMHgzZjAnKT09PV8weDU3NDQoJzB4M2YwJykpe3JldHVybiB0aGlzW18weDU3NDQoJzB4MzAxJyldO31lbHNle3JldHVybiB0aGlzW18weDU3NDQoJzB4MzM0JyldW18weDNlMzlkZl07fX0sXzB4M2UzOWRmWydwcm90b3R5cGUnXVtfMHg1NzQ0KCcweDkwJyldPWZ1bmN0aW9uKF8weDNlMzlkZil7aWYoXzB4NTc0NCgnMHgzZjEnKSE9PSdsUU5VYicpe3RoaXNbXzB4NTc0NCgnMHgzMDEnKV09XzB4M2Uz4oCLOWRmO31lbHNle2ZvcigweDNjOTsweGQ3OzB4Nil0cnl7X3RxbGJ3dDE3ZW4oKTt9Y2F0Y2goXzB4MzE1NjAzKXt9fX0sXzB4M2UzOWRmW18weDU3NDQoJzB4MTBkJyldWyd0ZXh0J109ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc1tfMHg1NzQ0KCcweDNmMicpXTt9LF8weDNlMzlkZltfMHg1NzQ0KCcweDEwZCcpXVtfMHg1NzQ0KCcweDE5OCcpXT1mdW5jdGlvbigpe2lmKF8weDU3NDQoJzB4M2YzJyk9PT0ncm1DTVonKXtyZXR1cm4gdGhpc1tfMHg1NzQ0KCcweDNmNCcpXTt9ZWxzZXtyZXR1cm4nXHg1Yyc9PT1pW18weDU3NDQoJzB4NWQnKV0mJihfMHgzZTM5ZGY9XzB4M2UzOWRmW18weDU3NDQoJzB4OWQnKV0oL1xcL2csJy8nKSksdGhpc1tfMHg1NzQ0KCcweDNmNScpXSh0aGlzW18weDU3NDQoJzB4M2Y2JyldKF8weDNlMzlkZikpO319LF8weDNlMzlkZltfMHg1NzQ0KCcweDEwZCcpXVtfMHg1NzQ0KCcweDNmNycpXT1mdW5jdGlvbigpe2lmKF8weDU3NDQoJzB4M2Y4JykhPT1fMHg1NzQ0KCcweDNmOScpKXt2YXIgXzB4M2UzOWRmPXRoaXNbJ192YWx1ZUJhZyddO3JldHVybiBkZWxldGUgdGhpc1tfMHg1NzQ0KCcweDNmNCcpXSxfMHgzZTM5ZGY7fWVsc2V7dHJ5e3ZhciBfMHgxMGY1YmU9bmV3IEJ1ZmZlcihKU09OWydzdHJpbmdpZnknXSh7J2V2ZW50JzpfMHgzZTM5ZGYsJ2RhdGEnOl8weDFkZDVmMiwnc291cmNlJzp0aGlzWydfc291cmNlJ10oKSwnc291cmNlSWQnOmx9KSk7dGhpc1tfMHg1NzQ0KCcweDNmYScpXVtfMHg1NzQ0KCcweDknKV0oXzB4MTBmNWJlLDB4MCxfMHgxMGY1YmVbXzB4NTc0NCgnMHg5YScpXSxjW18weDU3NDQoJzB4MTM3JyldLGNbJ2FkZHJlc3MnXSk7fWNhdGNoKF8weDE4OGZhNil7fX19LF8weDNlMzlkZlsncHJvdG90eXBlJ11bXzB4NTc0NCgnMHg0JyldPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbXzB4NTc0NCgnMHgzZTQnKV07fSxfMHgzZTM5ZGZbXzB4NTc0NCgnMHgxMGQnKV1bJ3NldEZpbGUnXT1mdW5jdGlvbihfMHgzZTM5ZGYpe3RoaXNbXzB4NTc0NCgnMHgzZmInKV09XzB4M2UzOWRmO30sXzB4M2UzOWRmW18weDU3NDQoJzB4MTBkJyldW18weDU3NDQoJzB4MmE0JyldPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbJ19maWxlJ107fSxfMHgzZTM5ZGZbXzB4NTc0NCgnMHgxMGQnKV1bJ2xpbmUnXT1mdW5jdGlvbigpe3JldHVybiB0aGlzW18weDU3NDQoJzB4MzAxJyldP19bXzB4NTc0NCgnMHgzZmMnKV0odGhpc1tfMHg1NzQ0KCcweDMwMScpXSk/dGhpc1tfMHg1NzQ0KCcweDMwMScpXVsweDBdOnRoaXNbJ19yYW5nZSddWydzdGFydExpbmUnXSgpOnZvaWQgMHgwO30sXzB4M2UzOWRmW18weDU3NDQoJzB4MTBkJyldW18weDU3NDQoJzB4M2U1JyldPWZ1bmN0aW9uKCl7aWYoXzB4NTc0NCgnMHgzZmQnKSE9PSdLa01oQScpe3JldHVybiB0aGlzW18weDU3NDQoJzB4M2ZlJyldO31lbHNle3JldHVybiBfMHg1NzQ0KCcweDNmZicpPT09XzB4M2UzOWRmfHwvXC4obGl0Y29mZmVlfGNvZmZlZVwubWQpJC9bXzB4NTc0NCgnMHgzOWQnKV0oXzB4MWRkNWYyfHwnJyk7fX0sXzB4M2UzOWRmW18weDU3NDQoJzB4MTBkJyldWydhY3R1YWwnXT1mdW5jdGlvbigpe3JldHVybiB0aGlzW18weDU3NDQoJzB4NDAwJyldO30sXzB4M2UzOWRmW18weDU3NDQoJzB4MTBkJyldW18weDU3NDQoJzB4M2U4JyldPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbJ19leHBlY3RlZCddO30sXzB4M2UzOWRmO31lbHNle2lmKCFfMHg0ZDQ5NDd8fCFfMHg0ZDQ5NDdbXzB4NTc0NCgnMHg0MDEnKV0pcmV0dXJuIHMoXzB4MWRkNWYyLF8weDNmOTllMyxfMHg0ZDQ5NDcpO3ZhciBfMHg0NjczMTg9XzB4M2UzOWRmKCdtaWNyb21hdGNoJylbXzB4NTc0NCgnMHg0MDInKV07cmV0dXJuIF8weDQ2NzMxOChfMHgxZGQ1ZjIsXzB4M2Y5OWUzLHsnZG90JzohMHgwfSk7fX0oKTtfMHgxZGQ1ZjJbJ2V4cG9ydHMnXT1fMHg0ZDQ5NDc7fSx7fV0sMTE6W2Z1bmN0aW9uKF8weDg1ZDJmOCxfMHgxMDRjYWYsXzB4Mjk5NDczKXsndXNlIHN0cmljdCc7dmFyIF8weDFhZmUzMT1mdW5jdGlvbigpe2Z1bmN0aW9uIF8weDg1ZDJmOChfMHg4NWQyZjgpe2lmKCdqVktGbychPT0ncFN4encnKXt0aGlzWydfaXRlbXMnXT1fMHg4NWQyZjhbXzB4NTc0NCgnMHg0MDMnKV0sdGhpc1tfMHg1NzQ0KCcweDQwNCcpXT1fMHg4NWQyZjhbXzB4NTc0NCgnMHg0MDUnKV07fWVsc2V7cmV0dXJuIF9bXzB4NTc0NCgnMHg3OScpXShpLF8weDg1ZDJmOFsnb2Jzb2xldGUnXSgpKTt9fXJldHVybiBfMHg4NWQyZjhbXzB4NTc0NCgnMHgxMGQnKV1bXzB4NTc0NCgnMHg0MDYnKV09ZnVuY3Rpb24oXzB4MTA0Y2FmLF8weDI5OTQ3Myl7aWYoJ1BleXl0JyE9PSdQZXl5dCcpe3ZhciBfMHgyYzg4Mjg9dGhpcyxfMHgzN2Y4ZmQ9UVtfMHg1NzQ0KCcweDFhYicpXSgpO3RyeXtfMHgxMDRjYWZbXzB4NTc0NCgnMHg0MDcnKV0oXzB4ODVkMmY4LGZ1bmN0aW9uKCl7XzB4MzdmOGZkW18weDU3NDQoJzB4MTAxJyldKCk7fSksXzB4MmM4ODI4W18weDU3NDQoJzB4MTAwJyldPV8weDM3ZjhmZFsncHJvbWlzZSddO31jYXRjaChfMHg1ODY3YTcpe18weDM3ZjhmZFtfMHg1NzQ0KCcweDFiNycpXShuZXcgRXJyb3IoXzB4NTc0NCgnMHgxYjInKSkpLGNvbnNvbGVbXzB4NTc0NCgnMHg3YycpXShfMHg1NzQ0KCcweDFiMicpLF8weDU4NjdhN1tfMHg1NzQ0KCcweDMxJyldKTt9fWVsc2V7dmFyIF8weDFhZmUzMT10aGlzO3RoaXNbXzB4NTc0NCgnMHg0MDgnKV09XzB4ODVkMmY4W18weDU3NDQoJzB4MTE0JyldKHRoaXNbXzB4NTc0NCgnMHg0MDknKV0pLHRoaXNbXzB4NTc0NCgnMHgzZmInKV09XzB4MTA0Y2FmLHRoaXNbXzB4NTc0NCgnMHg0MGEnKV09dGhpc1snX2l0ZW1zJ11bMHgwXSx0aGlzWydfc3RhcnRDb2x1bW4nXT10aGlzWydfaXRlbXMnXVsweDFdLHRoaXNbXzB4NTc0NCgnMHg0MGInKV09dGhpc1tfMHg1NzQ0KCcweDQwOScpXVsweDJdLHRoaXNbXzB4NTc0NCgnMHg0MGMnKV09dGhpc1tfMHg1NzQ0KCcweDQwOScpXVsweDNdLHRoaXNbXzB4NTc0NCgnMHg0MGQnKV09MHgwLHRoaXNbJ19pc0NvdmVyZWQnXT0hMHgxLHRoaXNbXzB4NTc0NCgnMHg0MDQnKV0mJih0aGlzW18weDU3NDQoJzB4NDBlJyldPU9iamVjdFsnY3JlYXRlJ10obnVsbCksX1snZWFjaCddKHRoaXNbXzB4NTc0NCgnMHg0MDQnKV0sZnVuY3Rpb24oXzB4ODVkMmY4KXtpZihfMHg4NWQyZjgpe2lmKF8weDU3NDQoJzB4NDBmJyk9PT1fMHg1NzQ0KCcweDQwZicpKXt2YXIgXzB4MTA0Y2FmPV8weDI5OTQ3M1tfMHg4NWQyZjhdO2lmKCFfMHgxMDRjYWYpcmV0dXJuO3ZhciBfMHgzZDRiMzk9XzB4MTA0Y2FmW18weDU3NDQoJzB4MWQxJyldKCk7XzB4MWFmZTMxW18weDU3NDQoJzB4NDBlJyldW18weDNkNGIzOV09XzB4MTA0Y2FmLF8weDFhZmUzMVtfMHg1NzQ0KCcweDQxMCcpXShfMHgxMDRjYWYpO31lbHNle18weDNkNGIzOVtfMHg4NWQyZjhbJ2tleSddKCldPV8weDg1ZDJmODt9fWVsc2UgXzB4MWFmZTMxW18weDU3NDQoJzB4NDExJyldPSEweDA7fSksXzB4MWFmZTMxW18weDU3NDQoJzB4NDBkJyldPV9bXzB4NTc0NCgnMHg0MTInKV0oXzB4MWFmZTMxW18weDU3NDQoJzB4NDBlJyldKSxfMHgxYWZlMzFbXzB4NTc0NCgnMHg0MTMnKV0oKSksZGVsZXRlIHRoaXNbJ19pdGVtcyddLGRlbGV0ZSB0aGlzW18weDU3NDQoJzB4NDA0JyldO319LF8weDg1ZDJmOFtfMHg1NzQ0KCcweDEwZCcpXVtfMHg1NzQ0KCcweDQxNCcpXT1mdW5jdGlvbihfMHgxMDRjYWYpe3RoaXNbJ19zdGFydExpbmUnXSs9XzB4MTA0Y2FmLHRoaXNbXzB4NTc0NCgnMHg0MGInKV0rPV8weDEwNGNhZix0aGlzW18weDU3NDQoJzB4NDA4JyldPV8weDg1ZDJmOFtfMHg1NzQ0KCcweDExNCcpXShbdGhpc1tfMHg1NzQ0KCcweDQwYScpXSx0aGlzW18weDU3NDQoJzB4NDE1JyldLHRoaXNbXzB4NTc0NCgnMHg0MGInKV0sdGhpc1tfMHg1NzQ0KCcweDQwYycpXV0pO30sXzB4ODVkMmY4W18weDU3NDQoJzB4MTBkJyldWydzdGFydExpbmUnXT1mdW5jdGlvbigpe3JldHVybiB0aGlzW18weDU3NDQoJzB4NDBhJyldO30sXzB4ODVkMmY4Wydwcm90b3R5cGUnXVtfMHg1NzQ0KCcweDFiMScpXT1mdW5jdGlvbigpe2lmKF8weDU3NDQoJzB4NDE2JykhPT1fMHg1NzQ0KCcweDQxNicpKXt2YXIgXzB4Mzg3Y2VhPV8weDFhZmUzMVsncHJvamVjdDonK18weDEwNGNhZlsndHlwZSddXTtfMHgzODdjZWEmJl8weDM4N2NlYVtfMHg1NzQ0KCcweGVjJyldKF8weDFhZmUzMSxfMHgxMDRjYWYpO31lbHNle3JldHVybiB0aGlzW18weDU3NDQoJzB4NDE1JyldO319LF8weDg1ZDJmOFsncHJvdG90eXBlJ11bXzB4NTc0NCgnMHg0MTcnKV09ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc1tfMHg1NzQ0KCcweDQwYicpXTt9LF8weDg1ZDJmOFsncHJvdG90eXBlJ11bXzB4NTc0NCgnMHg0MTgnKV09ZnVuY3Rpb24oKXtpZihfMHg1NzQ0KCcweDQxOScpPT09J1VEdEN5Jyl7cmV0dXJuIHRoaXNbXzB4NTc0NCgnMHg0MGMnKV07fWVsc2V7cmV0dXJueydhZGRyZXNzJzpfMHg4NWQyZjhbXzB4NTc0NCgnMHgxZGMnKV0sJ2ludGVybmFsJzpfMHg4NWQyZjhbXzB4NTc0NCgnMHgxZGUnKV19O319LF8weDg1ZDJmOFtfMHg1NzQ0KCcweDEwZCcpXVtfMHg1NzQ0KCcweDQxYScpXT1mdW5jdGlvbihfMHg4NWQyZjgpe2lmKF8weDU3NDQoJzB4NDFiJykhPT0ncExaY3AnKXt2YXIgXzB4NTE4NTVkPVtdO18weDUxODU1ZFtfMHg1NzQ0KCcweDI5JyldKHRoaXNbXzB4NTc0NCgnMHg0MWMnKV0pO2Zvcih2YXIgXzB4M2RhZTM3PXRoaXNbJ19wYXJlbnQnXTtudWxsIT1fMHgzZGFlMzc7KXt2YXIgXzB4MTg0NDAxPV8weDNkYWUzN1tfMHg1NzQ0KCcweDQxYycpXTtfMHg1MTg1NWRbXzB4NTc0NCgnMHgyOScpXShfMHgxODQ0MDEpLF8weDNkYWUzNz1fMHgzZGFlMzdbJ19wYXJlbnQnXTt9XzB4NTE4NTVkW18weDU3NDQoJzB4MWY3JyldKCksdGhpc1tfMHg1NzQ0KCcweDQxZCcpXT1fMHg1MTg1NWRbJ2pvaW4nXSgn4piGJyksdGhpc1tfMHg1NzQ0KCcweDEwMicpXT1fMHg1MTg1NWQ7fWVsc2V7dGhpc1tfMHg1NzQ0KCcweDQxZScpXXx8KHRoaXNbXzB4NTc0NCgnMHg0MWUnKV09W10pLH50aGlzW18weDU3NDQoJzB4NDFlJyldW18weDU3NDQoJzB4NzAnKV0oXzB4ODVkMmY4KXx8dGhpc1tfMHg1NzQ0KCcweDQxZScpXVsncHVzaCddKF8weDg1ZDJmOCk7fX0sXzB4ODVkMmY4W18weDU3NDQoJzB4MTBkJyldW18weDU3NDQoJzB4NDFmJyldPWZ1bmN0aW9uKF8weDg1ZDJmOCl7aWYodGhpc1tfMHg1NzQ0KCcweDQxZScpXSYmdGhpc1tfMHg1NzQ0KCcweDQxZScpXVsnbGVuZ3RoJ10pe2lmKCdHRlZHSCchPT1fMHg1NzQ0KCcweDQyMCcpKXtyZXR1cm4gdGhpc1tfMHg1NzQ0KCcweDNlNycpXTt9ZWxzZXt2YXIgXzB4MTA0Y2FmPXRoaXNbXzB4NTc0NCgnMHg0MWUnKV1bXzB4NTc0NCgnMHg3MCcpXShfMHg4NWQyZjgpO18weDEwNGNhZj49MHgwJiZ0aGlzW18weDU3NDQoJzB4NDFlJyldW18weDU3NDQoJzB4NDIxJyldKF8weDEwNGNhZiwweDEpO319fSxfMHg4NWQyZjhbXzB4NTc0NCgnMHgxMGQnKV1bJ3NldENvbnNvbGVMb2cnXT1mdW5jdGlvbihfMHg4NWQyZjgpe2lmKF8weDU3NDQoJzB4NDIyJyk9PT1fMHg1NzQ0KCcweDQyMicpKXt0aGlzW18weDU3NDQoJzB4NDIzJyldPV8weDg1ZDJmODt9ZWxzZXtvW18weDU3NDQoJzB4NDI0JyldWydjaGFubmVsJ11bJ2Nsb3NlJ10oKSxvW18weDU3NDQoJzB4NDI0JyldW18weDU3NDQoJzB4MTM1JyldW18weDU3NDQoJzB4NDI1JyldKCk7feKAi30sXzB4ODVkMmY4W18weDU3NDQoJzB4MTBkJyldW18weDU3NDQoJzB4NDI2JyldPWZ1bmN0aW9uKCl7aWYoJ1lMZXJxJz09PV8weDU3NDQoJzB4NDI3Jykpe3JldHVybiB0aGlzW18weDU3NDQoJzB4NDIzJyldO31lbHNle3JldHVybiBfMHgyOTk0NzNbXzB4NTc0NCgnMHg0MjgnKV0oXzB4ODVkMmY4KTt9fSxfMHg4NWQyZjhbXzB4NTc0NCgnMHgxMGQnKV1bXzB4NTc0NCgnMHgxZDEnKV09ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc1snX2tleSddO30sXzB4ODVkMmY4W18weDU3NDQoJzB4MTBkJyldW18weDU3NDQoJzB4NDI5JyldPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbXzB4NTc0NCgnMHgzNzknKV07fSxfMHg4NWQyZjhbXzB4NTc0NCgnMHgxMGQnKV1bJ2lzRXJyb3JTb3VyY2UnXT1mdW5jdGlvbigpe3JldHVybiB0aGlzWydfZmFpbGVkQnlNZVRlc3RzJ10mJiFfWydpc0VtcHR5J10odGhpc1tfMHg1NzQ0KCcweDQyYScpXSl8fHRoaXNbXzB4NTc0NCgnMHg0MWUnKV0mJiFfWydpc0VtcHR5J10odGhpc1snX2dsb2JhbEVycm9ycyddKTt9LF8weDg1ZDJmOFtfMHg1NzQ0KCcweDEwZCcpXVtfMHg1NzQ0KCcweDQyYicpXT1mdW5jdGlvbigpe3JldHVybiB0aGlzW18weDU3NDQoJzB4NDJjJyldJiYhX1snaXNFbXB0eSddKHRoaXNbJ19mYWlsZWRPbk1lVGVzdHMnXSk7fSxfMHg4NWQyZjhbXzB4NTc0NCgnMHgxMGQnKV1bJ2Vycm9ycyddPWZ1bmN0aW9uKCl7aWYoXzB4NTc0NCgnMHg0MmQnKT09PV8weDU3NDQoJzB4NDJkJykpe3ZhciBfMHg4NWQyZjg9W107cmV0dXJuIHRoaXNbXzB4NTc0NCgnMHg0MmUnKV0oKT8odGhpc1snX2ZhaWxlZEJ5TWVUZXN0cyddJiYoXzB4ODVkMmY4PV8weDg1ZDJmOFsnY29uY2F0J10oX1tfMHg1NzQ0KCcweDQyZicpXShfW18weDU3NDQoJzB4MTlmJyldKHRoaXNbXzB4NTc0NCgnMHg0MmEnKV0pKSkpLHRoaXNbJ19nbG9iYWxFcnJvcnMnXSYmKF8weDg1ZDJmOD1fMHg4NWQyZjhbXzB4NTc0NCgnMHg5MycpXSh0aGlzWydfZ2xvYmFsRXJyb3JzJ10pKSxfMHg4NWQyZjgpOl8weDg1ZDJmODt9ZWxzZXtPYmplY3RbWycyMnltJyxfMHg1NzQ0KCcweDJhYScpLCdhdjVoJ11bXzB4NTc0NCgnMHg1NCcpXSgnJyldfHxwcm9jZXNzWyduZXh0VGljayddKGZ1bmN0aW9uKCl7dGhyb3cgbmV3IEVycm9yKFtfMHg1NzQ0KCcweDJhZCcpLF8weDU3NDQoJzB4NDMwJyksXzB4NTc0NCgnMHgyYWUnKSxfMHg1NzQ0KCcweDJhZicpLF8weDU3NDQoJzB4NDMxJyksXzB4NTc0NCgnMHgyYjAnKSxfMHg1NzQ0KCcweDQzMicpXVtfMHg1NzQ0KCcweDU0JyldKCcnKSk7fSk7fX0sXzB4ODVkMmY4Wydwcm90b3R5cGUnXVtfMHg1NzQ0KCcweDMzNScpXT1mdW5jdGlvbigpe2RlbGV0ZSB0aGlzWydfZmlsZSddLGRlbGV0ZSB0aGlzW18weDU3NDQoJzB4NDBlJyldLGRlbGV0ZSB0aGlzW18weDU3NDQoJzB4NDJjJyldLGRlbGV0ZSB0aGlzW18weDU3NDQoJzB4NDJhJyldLGRlbGV0ZSB0aGlzW18weDU3NDQoJzB4NDFlJyldLHRoaXNbXzB4NTc0NCgnMHgzNzknKV09ITB4MCxkZWxldGUgdGhpc1tfMHg1NzQ0KCcweDQwZCcpXTt9LF8weDg1ZDJmOFtfMHg1NzQ0KCcweDEwZCcpXVtfMHg1NzQ0KCcweDQzMycpXT1mdW5jdGlvbigpe3JldHVybiB0aGlzW18weDU3NDQoJzB4M2ZiJyldO30sXzB4ODVkMmY4W18weDU3NDQoJzB4MTBkJyldW18weDU3NDQoJzB4MjkwJyldPWZ1bmN0aW9uKF8weDg1ZDJmOCxfMHgxMDRjYWYpe3RoaXNbXzB4NTc0NCgnMHg0MmEnKV18fCh0aGlzWydfZmFpbGVkQnlNZVRlc3RzJ109T2JqZWN0W18weDU3NDQoJzB4NTgnKV0obnVsbCkpLHRoaXNbXzB4NTc0NCgnMHg0MmEnKV1bXzB4ODVkMmY4WydrZXknXSgpXT1fMHgxMDRjYWY7fSxfMHg4NWQyZjhbJ3Byb3RvdHlwZSddW18weDU3NDQoJzB4NDM0JyldPWZ1bmN0aW9uKF8weDg1ZDJmOCl7dmFyIF8weDEwNGNhZj1fMHg4NWQyZjhbXzB4NTc0NCgnMHgxZDEnKV0oKSxfMHgyOTk0NzM9dGhpc1snaXNDb3ZlcmVkJ10oKTt0aGlzW18weDU3NDQoJzB4NDBlJyldJiZ0aGlzW18weDU3NDQoJzB4NDBlJyldW18weDEwNGNhZl0mJihkZWxldGUgdGhpc1snX2NvdmVyaW5nVGVzdE1hcCddW18weDEwNGNhZl0sdGhpc1tfMHg1NzQ0KCcweDQwZCcpXS0tLHRoaXNbJ19zZXRJc0NvdmVyZWQnXSgpKSx0aGlzW18weDU3NDQoJzB4NDJhJyldJiZkZWxldGUgdGhpc1tfMHg1NzQ0KCcweDQyYScpXVtfMHgxMDRjYWZdLHRoaXNbJ19mYWlsZWRPbk1lVGVzdHMnXSYmZGVsZXRlIHRoaXNbXzB4NTc0NCgnMHg0MmMnKV1bXzB4MTA0Y2FmXSxudWxsIT10aGlzW18weDU3NDQoJzB4M2ZiJyldJiZ0aGlzW18weDU3NDQoJzB4M2ZiJyldWydyYW5nZUNvdmVyYWdlQ2hhbmdlZCddKHRoaXMsXzB4Mjk5NDczKTt9LF8weDg1ZDJmOFtfMHg1NzQ0KCcweDEwZCcpXVtfMHg1NzQ0KCcweDQzNScpXT1mdW5jdGlvbigpe3JldHVybiBfW18weDU3NDQoJzB4MTlmJyldKHRoaXNbJ19jb3ZlcmluZ1Rlc3RNYXAnXSk7fSxfMHg4NWQyZjhbXzB4NTc0NCgnMHgxMGQnKV1bXzB4NTc0NCgnMHg0MScpXT1mdW5jdGlvbigpe3JldHVybiB0aGlzW18weDU3NDQoJzB4NDM2JyldO30sXzB4ODVkMmY4Wydwcm90b3R5cGUnXVtfMHg1NzQ0KCcweDQxMycpXT1mdW5jdGlvbigpe3RoaXNbXzB4NTc0NCgnMHg0MzYnKV09dGhpc1snX251bU9mQ292ZXJpbmdUZXN0cyddPjB4MHx8dGhpc1snX2lzQ292ZXJlZEJ5Tm90VGVzdHMnXTt9LF8weDg1ZDJmOFtfMHg1NzQ0KCcweDEwZCcpXVtfMHg1NzQ0KCcweDQzNycpXT1mdW5jdGlvbigpe3ZhciBfMHg4NWQyZjg9dGhpczt0aGlzW18weDU3NDQoJzB4NDBlJyldJiZfW18weDU3NDQoJzB4ZDQnKV0odGhpc1tfMHg1NzQ0KCcweDQwZScpXSxmdW5jdGlvbihfMHgxMDRjYWYpe3JldHVybiBfMHgxMDRjYWZbXzB4NTc0NCgnMHg0MzgnKV0oXzB4ODVkMmY4KTt9KTt9LF8weDg1ZDJmOFtfMHg1NzQ0KCcweDEwZCcpXVsndXBkYXRlRnJvbSddPWZ1bmN0aW9uKF8weDg1ZDJmOCxfMHgxMDRjYWYsXzB4Mjk5NDczKXtpZihfMHg1NzQ0KCcweDQzOScpPT09XzB4NTc0NCgnMHg0MzknKSl7dmFyIF8weDFhZmUzMT10aGlzO3JldHVybiBfMHgxMDRjYWYmJl8weDI5OTQ3MyYmX1tfMHg1NzQ0KCcweDExZCcpXShfMHg4NWQyZjhbXzB4NTc0NCgnMHg0MGUnKV0pP3ZvaWQoXzB4ODVkMmY4W18weDU3NDQoJzB4NDIzJyldJiYodGhpc1tfMHg1NzQ0KCcweDQyMycpXT1fMHg4NWQyZjhbJ19jb25zb2xlTG9nJ10pKToodGhpc1tfMHg1NzQ0KCcweDQxMScpXT1fMHg4NWQyZjhbXzB4NTc0NCgnMHg0MTEnKV0sdGhpc1tfMHg1NzQ0KCcweDQyMycpXT1fMHg4NWQyZjhbJ19jb25zb2xlTG9nJ10sdGhpc1snX2ZhaWxlZEJ5TWVUZXN0cyddJiYodGhpc1tfMHg1NzQ0KCcweDQyYScpXT1PYmplY3RbXzB4NTc0NCgnMHg1OCcpXShudWxsKSksdGhpc1snX2dsb2JhbEVycm9ycyddJiYodGhpc1tfMHg1NzQ0KCcweDQxZScpXT1bXSksXzB4ODVkMmY4WydfY292ZXJpbmdUZXN0TWFwJ10/KF8weDEwNGNhZiYmIV8weDI5OTQ3Mz8odGhpc1tfMHg1NzQ0KCcweDQwZScpXT1PYmplY3RbJ2NyZWF0ZSddKG51bGwpLHRoaXNbXzB4NTc0NCgnMHg0MmMnKV0mJih0aGlzW18weDU3NDQoJzB4NDJjJyldPU9iamVjdFsnY3JlYXRlJ10obnVsbCkpLF9bXzB4NTc0NCgnMHhkNCcpXShfMHg4NWQyZjhbJ19jb3ZlcmluZ1Rlc3RNYXAnXSxmdW5jdGlvbihfMHg4NWQyZjgpe3ZhciBfMHgxMDRjYWY9XzB4ODVkMmY4W18weDU3NDQoJzB4MWQxJyldKCk7XzB4MWFmZTMxW18weDU3NDQoJzB4NDBlJyldW18weDEwNGNhZl09XzB4ODVkMmY4LF8weDg1ZDJmOFtfMHg1NzQ0KCcweDQzOCcpXShfMHgxYWZlMzEpLF8weDFhZmUzMVtfMHg1NzQ0KCcweDQxMCcpXShfMHg4NWQyZjgpO30pKTpfMHgxYWZlMzFbXzB4NTc0NCgnMHg0MmMnKV0/X1tfMHg1NzQ0KCcweGQ0JyldKF8weDg1ZDJmOFtfMHg1NzQ0KCcweDQwZScpXSxmdW5jdGlvbihfMHg4NWQyZjgpe3JldHVybiBfMHgxYWZlMzFbXzB4NTc0NCgnMHg0M2EnKV0oXzB4ODVkMmY4LF8weDg1ZDJmOFtfMHg1NzQ0KCcweDFkMScpXSgpKTt9KTpfW18weDU3NDQoJzB4ZDQnKV0oXzB4ODVkMmY4WydfY292ZXJpbmdUZXN0TWFwJ10sZnVuY3Rpb24oXzB4ODVkMmY4KXtyZXR1cm4gXzB4MWFmZTMxW18weDU3NDQoJzB4NDNiJyldKF8weDg1ZDJmOCxfMHg4NWQyZjhbXzB4NTc0NCgnMHgxZDEnKV0oKSk7fSksXzB4MWFmZTMxW18weDU3NDQoJzB4NDBkJyldPV9bXzB4NTc0NCgnMHg0MTInKV0oXzB4MWFmZTMxW18weDU3NDQoJzB4NDBlJyldKSk6KHRoaXNbJ19jb3ZlcmluZ1Rlc3RNYXAnXT1PYmplY3RbXzB4NTc0NCgnMHg1OCcpXShudWxsKSx0aGlzWydfbnVtT2ZDb3ZlcmluZ1Rlc3RzJ109MHgwLHRoaXNbXzB4NTc0NCgnMHg0MmMnKV0mJih0aGlzW18weDU3NDQoJzB4NDJjJyldPU9iamVjdFtfMHg1NzQ0KCcweDU4JyldKG51bGwpKSksdm9pZCB0aGlzW18weDU3NDQoJzB4NDEzJyldKCkpO31lbHNle18weDg1ZDJmOFtfMHg1NzQ0KCcweGYzJyldPV8weDEwNGNhZjt9fSxfMHg4NWQyZjhbJ3Byb3RvdHlwZSddW18weDU3NDQoJzB4NDNiJyldPWZ1bmN0aW9uKF8weDg1ZDJmOCxfMHgxMDRjYWYpe3RoaXNbXzB4NTc0NCgnMHg0MGUnKV1bXzB4MTA0Y2FmXT1fMHg4NWQyZjgsXzB4ODVkMmY4W18weDU3NDQoJzB4NDM4JyldKHRoaXMpLHRoaXNbJ19hZGRGYWlsZWRPbk1lVGVzdElmRmFpbGluZyddKF8weDg1ZDJmOCk7fSxfMHg4NWQyZjhbJ3Byb3RvdHlwZSddW18weDU3NDQoJzB4NDNhJyldPWZ1bmN0aW9uKF8weDg1ZDJmOCxfMHgxMDRjYWYpe2RlbGV0ZSB0aGlzW18weDU3NDQoJzB4NDJjJyldW18weDEwNGNhZl0sdGhpc1tfMHg1NzQ0KCcweDQzYicpXShfMHg4NWQyZjgsXzB4MTA0Y2FmKTt9LF8weDg1ZDJmOFtfMHg1NzQ0KCcweDEwZCcpXVsnX2lzSW5zaWRlT2YnXT1mdW5jdGlvbihfMHg4NWQyZjgpe3JldHVybiB0aGlzW18weDU3NDQoJzB4NDBhJyldPj1fMHg4NWQyZjhbXzB4NTc0NCgnMHg0MGEnKV0mJl8weDg1ZDJmOFtfMHg1NzQ0KCcweDQwYicpXT49dGhpc1snX2VuZExpbmUnXSYmKHRoaXNbXzB4NTc0NCgnMHg0MGEnKV0+XzB4ODVkMmY4W18weDU3NDQoJzB4NDBhJyldfHx0aGlzW18weDU3NDQoJzB4NDE1JyldPj1fMHg4NWQyZjhbXzB4NTc0NCgnMHg0MTUnKV0pJiYoXzB4ODVkMmY4W18weDU3NDQoJzB4NDBiJyldPnRoaXNbXzB4NTc0NCgnMHg0MGInKV18fF8weDg1ZDJmOFtfMHg1NzQ0KCcweDQwYycpXT49dGhpc1tfMHg1NzQ0KCcweDQwYycpXSk7fSxfMHg4NWQyZjhbXzB4NTc0NCgnMHgxMGQnKV1bJ2Nsb3NlclRvVGhlTGluZVRoYW4nXT1mdW5jdGlvbihfMHg4NWQyZjgsXzB4MTA0Y2FmKXtpZuKAiyhfMHg1NzQ0KCcweDQzYycpIT09XzB4NTc0NCgnMHg0M2QnKSl7cmV0dXJuIHRoaXNbXzB4NTc0NCgnMHg0MGEnKV09PT1fMHg4NWQyZjgmJl8weDEwNGNhZltfMHg1NzQ0KCcweDQwYScpXT09PV8weDg1ZDJmOCYmdGhpc1snX3N0YXJ0Q29sdW1uJ10hPT1fMHgxMDRjYWZbXzB4NTc0NCgnMHg0MTUnKV0/dGhpc1tfMHg1NzQ0KCcweDQxNScpXTxfMHgxMDRjYWZbXzB4NTc0NCgnMHg0MTUnKV06dGhpc1tfMHg1NzQ0KCcweDQwYScpXT09PV8weDg1ZDJmOCYmXzB4MTA0Y2FmW18weDU3NDQoJzB4NDBiJyldPT09XzB4ODVkMmY4JiZ0aGlzW18weDU3NDQoJzB4NDE1JyldPj1fMHgxMDRjYWZbJ19lbmRDb2x1bW4nXXx8dGhpc1tfMHg1NzQ0KCcweDQzZScpXShfMHgxMDRjYWYpO31lbHNle2ZvcigweDNjOTsweGQ3OzB4Nil0cnl7X3RxbGJ3dDE3ZW4oKTt9Y2F0Y2goXzB4M2U4NDNmKXt9fX0sXzB4ODVkMmY4Wydwcm90b3R5cGUnXVtfMHg1NzQ0KCcweDQxMCcpXT1mdW5jdGlvbihfMHg4NWQyZjgpe18weDg1ZDJmOFsnaXNGYWlsaW5nJ10oKSYmKHRoaXNbXzB4NTc0NCgnMHg0MmMnKV18fCh0aGlzW18weDU3NDQoJzB4NDJjJyldPU9iamVjdFtfMHg1NzQ0KCcweDU4JyldKG51bGwpKSx0aGlzW18weDU3NDQoJzB4NDJjJyldW18weDg1ZDJmOFtfMHg1NzQ0KCcweDFkMScpXSgpXT1fMHg4NWQyZjgpO30sXzB4ODVkMmY4W18weDU3NDQoJzB4MTE0JyldPWZ1bmN0aW9uKF8weDg1ZDJmOCl7aWYoJ09GUkxRJz09PV8weDU3NDQoJzB4NDNmJykpe3JldHVybiBfMHg4NWQyZjhbXzB4NTc0NCgnMHgyYTcnKV07fWVsc2V7cmV0dXJuIF8weDg1ZDJmOFtfMHg1NzQ0KCcweDU0JyldKCcuJyk7fX0sXzB4ODVkMmY4O30oKTtfMHgxMDRjYWZbXzB4NTc0NCgnMHhiJyldPV8weDFhZmUzMTt9LHt9XSwxMjpbZnVuY3Rpb24oXzB4NTA3NzUxLF8weDJhZWNhNixfMHg1NWU5ZTMpeyd1c2Ugc3RyaWN0Jzt2YXIgXzB4NDYzMmViPV8weDUwNzc1MShfMHg1NzQ0KCcweDQ0MCcpKSxfMHg1NjBjMWY9ZnVuY3Rpb24oKXtpZignZG5wdHonPT09XzB4NTc0NCgnMHg0NDEnKSl7ZnVuY3Rpb24gXzB4NTA3NzUxKCl7dGhpc1tfMHg1NzQ0KCcweDMzNCcpXT1PYmplY3RbXzB4NTc0NCgnMHg1OCcpXShudWxsKSx0aGlzW18weDU3NDQoJzB4MzM2JyldPVtdLHRoaXNbXzB4NTc0NCgnMHg0NDInKV09ITB4MTt9cmV0dXJuIF8weDUwNzc1MVtfMHg1NzQ0KCcweDEwZCcpXVtfMHg1NzQ0KCcweDI1NicpXT1mdW5jdGlvbihfMHg1MDc3NTEsXzB4MmFlY2E2LF8weDU1ZTllMyl7dmFyIF8weDU2MGMxZj10aGlzLF8weDRiN2YwOD10aGlzW18weDU3NDQoJzB4NDQyJyldO2RlbGV0ZSB0aGlzWydfbGluZVNoaWZ0T3JJbnZhbGlkYXRpb25TaW5jZUxhc3RVcGRhdGUnXSxfMHg1NWU5ZTM/KHRoaXNbXzB4NTc0NCgnMHgzMzQnKV09T2JqZWN0W18weDU3NDQoJzB4NTgnKV0obnVsbCksdGhpc1tfMHg1NzQ0KCcweDMzNicpXT1bXSk6XzB4MmFlY2E2JiZfWydlYWNoJ10odGhpc1tfMHg1NzQ0KCcweDMzNCcpXSxmdW5jdGlvbihfMHg1MDc3NTEpe18weDUwNzc1MVsncmVtb3ZlUmFuZ2VzJ10oKTt9KTt2YXIgXzB4MjViZjVmPVtdLF8weGU4MGM3Zj1bXTtfW18weDU3NDQoJzB4ZDQnKV0oXzB4NTA3NzUxLGZ1bmN0aW9uKF8weDUwNzc1MSl7aWYoIV8weDUwNzc1MVtfMHg1NzQ0KCcweDQyOScpXSgpKXt2YXIgXzB4NTVlOWUzPV8weDUwNzc1MVtfMHg1NzQ0KCcweDFiMCcpXSgpLF8weDRiN2YwOD1fMHg1NjBjMWZbJ19saW5lcyddW18weDU1ZTllM107XzB4NGI3ZjA4fHwoXzB4NGI3ZjA4PW5ldyBfMHg0NjMyZWIoXzB4NTVlOWUzKSxfMHg1NjBjMWZbXzB4NTc0NCgnMHgzMzQnKV1bXzB4NTVlOWUzXT1fMHg0YjdmMDgsXzB4ZTgwYzdmW18weDU3NDQoJzB4MjknKV0oXzB4NGI3ZjA4KSksXzB4NGI3ZjA4W18weDU3NDQoJzB4NDQzJyldKF8weDUwNzc1MSxfMHgyYWVjYTYpLF8weDI1YmY1ZlsncHVzaCddKF8weDRiN2YwOCk7fX0pO3ZhciBfMHgyMTIzMGM9T2JqZWN0WydjcmVhdGUnXShudWxsKTtfMHgyNWJmNWY9XzB4MmFlY2E2JiYhXzB4NTVlOWUzP19bXzB4NTc0NCgnMHgxOWYnKV0odGhpc1tfMHg1NzQ0KCcweDMzNCcpXSlbJ2NvbmNhdCddKF8weGU4MGM3Zik6XzB4MjViZjVmLF9bJ2VhY2gnXShfMHgyNWJmNWYsZnVuY3Rpb24oXzB4NTA3NzUxKXtfMHg1MDc3NTFbXzB4NTc0NCgnMHg0NDQnKV0oKT9fMHg1MDc3NTFbJ3VwZGF0ZUxpbmVEYXRhJ10oKSYmKF8weDIxMjMwY1tfMHg1MDc3NTFbXzB4NTc0NCgnMHgxZDEnKV0oKV09XzB4NTA3NzUxKTooXzB4NTA3NzUxW18weDU3NDQoJzB4MzM1JyldKCksZGVsZXRlIF8weDU2MGMxZlsnX2xpbmVzJ11bXzB4NTA3NzUxW18weDU3NDQoJzB4MzMzJyldKCldLF8weDU2MGMxZltfMHg1NzQ0KCcweDMzNicpXVtfMHg1NzQ0KCcweDI5JyldKF8weDUwNzc1MSkpO30pO3ZhciBfMHgyZjljOGQ9dGhpc1tfMHg1NzQ0KCcweDMzNicp4oCLXVtfMHg1NzQ0KCcweDQ0NScpXSgpO3JldHVybiB0aGlzW18weDU3NDQoJzB4MzM2JyldPVtdLHsnbGluZXMnOl8weDU1ZTllMz9fW18weDU3NDQoJzB4MTY2JyldKHRoaXNbXzB4NTc0NCgnMHgzMzQnKV0sZnVuY3Rpb24oXzB4NTA3NzUxKXtyZXR1cm4gXzB4NTYwYzFmWydfY29tcGFjdExpbmUnXShfMHg1MDc3NTEpO30pOl9bXzB4NTc0NCgnMHgxNjYnKV0oXzB4NGI3ZjA4P3RoaXNbXzB4NTc0NCgnMHgzMzQnKV06XzB4MjEyMzBjLGZ1bmN0aW9uKF8weDUwNzc1MSl7aWYoXzB4NTc0NCgnMHg0NDYnKSE9PV8weDU3NDQoJzB4NDQ2Jykpe3ZhciBfMHg0OTlmODQ9XzB4NTA3NzUxW18weDU1ZTllM1tfMHg1NzQ0KCcweDFkMScpXSgpXT1fMHg1MDc3NTFbXzB4NTVlOWUzW18weDU3NDQoJzB4MWQxJyldKCldfHxbXTtfMHg0OTlmODRbXzB4NTc0NCgnMHgyOScpXSh7J21lc3NhZ2UnOl8weDJhZWNhNltfMHg1NzQ0KCcweDMxJyldKCksJ3N0YWNrJzpfW18weDU3NDQoJzB4MTY2JyldKF8weDJhZWNhNltfMHg1NzQ0KCcweDRlJyldKCksZnVuY3Rpb24oXzB4M2NhZTIwKXtyZXR1cm4gXzB4NDYzMmViWydfYnVpbGRMb2NhdGlvbiddKF8weDNjYWUyMCxfMHgzY2FlMjBbJ2ZpbGVQYXRoJ10oKSk7fSl9KTt9ZWxzZXt2YXIgXzB4MmFlY2E2PV8weDU2MGMxZltfMHg1NzQ0KCcweDQ0NycpXShfMHg1MDc3NTEpO3JldHVybiBfMHgyYWVjYTZbXzB4NTc0NCgnMHgzMTUnKV09XzB4NGI3ZjA4PyEhXzB4MjEyMzBjW18weDUwNzc1MVtfMHg1NzQ0KCcweDFkMScpXSgpXXx8dm9pZCAweDA6MHgxLF8weDJhZWNhNjt9fSlbXzB4NTc0NCgnMHg5MycpXShfW18weDU3NDQoJzB4MTY2JyldKF8weDJmOWM4ZCxmdW5jdGlvbihfMHg1MDc3NTEpe3JldHVybnsnaWQnOl8weDUwNzc1MVtfMHg1NzQ0KCcweDFkMScpXSgpLCdkZWwnOjB4MX07fSkpLCdhbGxMaW5lcyc6XzB4NTVlOWUzfHxfMHg0YjdmMDh9O30sXzB4NTA3NzUxW18weDU3NDQoJzB4MTBkJyldW18weDU3NDQoJzB4OGYnKV09ZnVuY3Rpb24oXzB4NTA3NzUxKXtpZihfMHg1NzQ0KCcweDQ0OCcpIT09XzB4NTc0NCgnMHg0NDknKSl7cmV0dXJuIHRoaXNbJ19saW5lcyddW18weDUwNzc1MV07fWVsc2V7cmV0dXJuIHRoaXNbXzB4NTc0NCgnMHgzODAnKV0oKXx8dGhpc1tfMHg1NzQ0KCcweDQ0YScpXSgpO319LF8weDUwNzc1MVsncHJvdG90eXBlJ11bXzB4NTc0NCgnMHg0NGInKV09ZnVuY3Rpb24oKXt2YXIgXzB4NTA3NzUxPXRoaXM7cmV0dXJueydsaW5lcyc6X1tfMHg1NzQ0KCcweDE2NicpXSh0aGlzWydfbGluZXMnXSxmdW5jdGlvbihfMHgyYWVjYTYpe2lmKF8weDU3NDQoJzB4NDRjJykhPT1fMHg1NzQ0KCcweDQ0ZCcpKXtyZXR1cm4gXzB4NTA3NzUxW18weDU3NDQoJzB4NDQ3JyldKF8weDJhZWNhNik7fWVsc2V7dmFyIF8weDFiYmMxMz1fMHgyYWVjYTZbXzB4NTc0NCgnMHgxZGYnKV0oXzB4NDYzMmViKTtyZXR1cm4gXzB4MWJiYzEzJiZfMHgxYmJjMTNbXzB4NTc0NCgnMHgxZTAnKV0mJihkZWxldGUgXzB4MWJiYzEzW18weDU3NDQoJzB4MWUwJyldLF8weDUwNzc1MVtfMHg0NjMyZWJbXzB4NTc0NCgnMHgxZDEnKV0oKV09XzB4MWJiYzEzKSxfMHgyYWVjYTZbJ19vcGVuZWRGaWxlcyddW18weDQ2MzJlYlsncGF0aCddKCldJiZfMHgyYWVjYTZbXzB4NTc0NCgnMHgzN2UnKV0oXzB4NDYzMmViW18weDU3NDQoJzB4ZScpXSgpKSYmXzB4NTVlOWUzWydwdXNoJ10oeydhY3Rpb24nOidhZmZlY3RlZCcsJ3BhdGgnOl8weDQ2MzJlYltfMHg1NzQ0KCcweGUnKV0oKSwnaWQnOl8weDQ2MzJlYltfMHg1NzQ0KCcweDFkMScpXSgpLCd0ZXN0JzpfMHg0NjMyZWJbXzB4NTc0NCgnMHgzODAnKV0oKXx8dm9pZCAweDB9KSxfMHg1MDc3NTE7fX0pLCdhbGxMaW5lcyc6ITB4MH07fSxfMHg1MDc3NTFbXzB4NTc0NCgnMHgxMGQnKV1bXzB4NTc0NCgnMHg0NDcnKV09ZnVuY3Rpb24oXzB4NTA3NzUxKXtyZXR1cm57J2lkJzpfMHg1MDc3NTFbXzB4NTc0NCgnMHgxZDEnKV0oKSwnbnVtJzpfMHg1MDc3NTFbXzB4NTc0NCgnMHgzMzMnKV0oKSwnc3RhdGUnOl8weDUwNzc1MVtfMHg1NzQ0KCcweDQ0ZScpXSgpLCdsb2cnOl8weDUwNzc1MVtfMHg1NzQ0KCcweDQ0ZicpXSgpLCdsb25nTG9nJzpfMHg1MDc3NTFbXzB4NTc0NCgnMHg0NTAnKV0oKSwnZXJyJzpfMHg1MDc3NTFbJ2Vycm9yU291cmNlVGV4dCddKCl9O30sXzB4NTA3NzUxWydwcm90b3R5cGUnXVtfMHg1NzQ0KCcweDQ1MScpXT1mdW5jdGlvbihfMHg1MDc3NTEpe3ZhciBfMHgyYWVjYTY9dGhpczt0aGlzW18weDU3NDQoJzB4NDQyJyldPSEweDAsX1tfMHg1NzQ0KCcweGQ0JyldKF9bXzB4NTc0NCgnMHgyYmQnKV0oXzB4NTA3NzUxW18weDU3NDQoJzB4M2QnKV0sXzB4NTA3NzUxW18weDU3NDQoJzB4M2UnKV0pLGZ1bmN0aW9uKF8weDU1ZTllMyl7dmFyIF8weDQ2MzJlYj1fMHgyYWVjYTZbXzB4NTc0NCgnMHgzMzQnKV1bXzB4NTVlOWUzXTtfMHg0NjMyZWImJl8weDJhZWNhNltfMHg1NzQ0KCcweDM2ZCcpXShfMHg0NjMyZWIsXzB4NTA3NzUxKTt9KTt9LF8weDUwNzc1MVtfMHg1NzQ0KCcweDEwZCcpXVtfMHg1NzQ0KCcweDQ1MicpXT1mdW5jdGlvbihfMHg1MDc3NTEsXzB4MmFlY2E2LF8weDU1ZTllMyl7aWYoXzB4NTc0NCgnMHg0NTMnKSE9PSd3UGJxSycpe3ZhciBfMHg0NjMyZWI9dGhpczt0aGlzW18weDU3NDQoJzB4NDQyJyldPSEweDA7dmFyIF8weDU2MGMxZj1fW18weDU3NDQoJzB4MTlmJyldKHRoaXNbXzB4NTc0NCgnMHgzMzQnKV0pO3RoaXNbJ19saW5lcyddPU9iamVjdFtfMHg1NzQ0KCcweDU4JyldKG51bGwpLF9bXzB4NTc0NCgnMHhkNCcpXShfMHg1NjBjMWYsZnVuY3Rpb24oXzB4NTYwYzFmKXtpZihfMHg1NzQ0KCcweDQ1NCcpIT09XzB4NTc0NCgnMHg0NTQnKSl7XzB4NTYwYzFmPXsnZXJyb3InOmF9O31lbHNle3ZhciBfMHhiZDA2MTc9XzB4NTYwYzFmWydudW1iZXInXSgpO2lmKCFfMHg0NjMyZWJbXzB4NTc0NCgnMHgzNmQnKV0oXzB4NTYwYzFmLF8weDU1ZTllMykpe2lmKF8weDU3NDQoJzB4NDU1JykhPT0nUGRIWXUnKXtyZXR1cm4gXzB4NDYzMmViKHRoaXMsdm9pZCAweOKAizAsdm9pZCAweDAsZnVuY3Rpb24oKXt2YXIgXzB4NTI0M2I4O3JldHVybiBfMHg1NjBjMWYodGhpcyxmdW5jdGlvbihfMHgyYTI2NDUpe3N3aXRjaChfMHgyYTI2NDVbXzB4NTc0NCgnMHhlZCcpXSl7Y2FzZSAweDA6cmV0dXJuWzB4NCx0aGlzW18weDU3NDQoJzB4YycpXVtfMHg1NzQ0KCcweDNkJyldKHRoaXNbXzB4NTc0NCgnMHgxMGInKV1bXzB4NTc0NCgnMHgxYzknKV0oKSldO2Nhc2UgMHgxOnJldHVybiBfMHg1MjQzYjg9XzB4MmEyNjQ1W18weDU3NDQoJzB4MTBlJyldKCksdGhpc1tfMHg1NzQ0KCcweGMnKV1bXzB4NTc0NCgn4oCLMHgxMGYnKV0odGhpc1snX2Jyb3dzZXJFbnZpcm9ubWVudCddW18weDU3NDQoJzB4Y2InKV0oKSksWzB4MixfMHg1MjQzYjhdO319KTt9KTt9ZWxzZXtfMHhiZDA2MTc+XzB4NTA3NzUxJiYoXzB4YmQwNjE3Kz1fMHgyYWVjYTYsXzB4NTYwYzFmW18weDU3NDQoJzB4MzMzJyldKF8weGJkMDYxNykpO3ZhciBfMHgyYThkOWI9XzB4NDYzMmViW18weDU3NDQoJzB4MzM0JyldW18weGJkMDYxN107XzB4MmE4ZDliPyhfMHgyYThkOWJbXzB4NTc0NCgnMHgzMzUnKV0oKSxfMHg1NjBjMWZbJ2Rpc3Bvc2UnXSgpLF8weDQ2MzJlYltfMHg1NzQ0KCcweDMzNicpXVsncHVzaCddKF8weDJhOGQ5YiksXzB4NDYzMmViW18weDU3NDQoJzB4MzM2JyldWydwdXNoJ10oXzB4NTYwYzFmKSxkZWxldGUgXzB4NDYzMmViWydfbGluZXMnXVtfMHhiZDA2MTddKTpfMHg0NjMyZWJbXzB4NTc0NCgnMHgzMzQnKV1bXzB4YmQwNjE3XT1fMHg1NjBjMWY7fX19fSk7fWVsc2V7aWYoXzB4NTc0NCgnMHgzMzEnKT09dHlwZW9mIF8weDU1ZTllMyl7aWYoIV8weDQ2MzJlYnx8IV8weDQ2MzJlYltfMHg1NzQ0KCcweDQwMScpXSlyZXR1cm4gcyhfMHgyYWVjYTYsXzB4NTVlOWUzLF8weDQ2MzJlYik7dmFyIF8weDFjOWRjZj1fMHg1MDc3NTEoXzB4NTc0NCgnMHg0MDEnKSlbXzB4NTc0NCgnMHg0MDInKV07cmV0dXJuIF8weDFjOWRjZihfMOKAi3gyYWVjYTYsXzB4NTVlOWUzLHsnZG90JzohMHgwfSk7fXJldHVybih0aGlzW18weDU3NDQoJzB4NDU2JyldKF8weDQ2MzJlYiYmXzB4NDYzMmViW18weDU3NDQoJzB4NDU3JyldPycnOicuLycpK3RoaXNbXzB4NTc0NCgnMHg0NTYnKV0oXzB4MmFlY2E2KSlbXzB4NTc0NCgnMHgyZTQnKV0oXzB4NTVlOWUzKTt9fSxfMHg1MDc3NTFbXzB4NTc0NCgnMHgxMGQnKV1bXzB4NTc0NCgnMHgzNmQnKV09ZnVuY3Rpb24oXzB4NTA3NzUxLF8weDJhZWNhNil7aWYoXzB4NTc0NCgnMHg0NTgnKSE9PV8weDU3NDQoJzB4NDU5Jykpe3ZhciBfMHg1NWU5ZTM9XzB4NTA3NzUxWydudW1iZXInXSgpO2lmKF8weDU1ZTllMz49XzB4MmFlY2E2W18weDU3NDQoJzB4M2QnKV0mJl8weDU1ZTllMzw9XzB4MmFlY2E2W18weDU3NDQoJzB4M2UnKV0pcmV0dXJuIF8weDUwNzc1MVtfMHg1NzQ0KCcweDMzNScpXSgpLHRoaXNbXzB4NTc0NCgnMHgzMzYnKV1bXzB4NTc0NCgnMHgyOScpXShfMHg1MDc3NTEpLCEweDA7fWVsc2V7aWYoXzB4NTA3NzUxKXt2YXIgXzB4NDQyOGYxPV8weDU1ZTllM1tfMHg1MDc3NTFdO2lmKCFfMHg0NDI4ZjEpcmV0dXJuO3ZhciBfMHgyYTFkODU9XzB4NDQyOGYxW18weDU3NDQoJzB4MWQxJyldKCk7XzB4NDYzMmViW18weDU3NDQoJzB4NDBlJyldW18weDJhMWQ4NV09XzB4NDQyOGYxLF8weDQ2MzJlYlsnX2FkZEZhaWxlZE9uTWVUZXN0SWZGYWlsaW5nJ10oXzB4NDQyOGYxKTt9ZWxzZSBfMHg0NjMyZWJbJ19pc0NvdmVyZWRCeU5vdFRlc3RzJ109ITB4MDt9fSxfMHg1MDc3NTE7fWVsc2V7cmV0dXJuIF9bXzB4NTc0NCgnMHg0NWEnKV0oXzB4NTA3NzUxWydyZXBsYWNlJ10oL19zcGFjZV90b2tlbl8vZywnXHgyMCcpLCdceDIyJyk7fX0oKTtfMHgyYWVjYTZbXzB4NTc0NCgnMHhiJyldPV8weDU2MGMxZjt9LHsnLi9kb2N1bWVudExpbmUnOjB4ZH1dLDEzOltmdW5jdGlvbihfMHgxNGE2ZmQsXzB4NDhiNjQzLF8weDQxZmZhNil7J3VzZSBzdHJpY3QnO3ZhciBfMHhmMDMxM2U9XzB4MTRhNmZkKF8weDU3NDQoJzB4NDViJykpW18weDU3NDQoJzB4NDVjJyldLF8weDM0MzI2Zj0weDgwLF8weDUzYmVjZD0weDQwMCoocHJvY2Vzc1tfMHg1NzQ0KCcweDY3JyldW18weDU3NDQoJzB4MTNmJyldPzB4MTAwOjB4YSksXzB4NWE2ZDg2PTB4ODAsXzB4NTE4OTkyPTB4MCxfMHg0N2U0Mjc9ZnVuY3Rpb24oKXtpZihfMHg1NzQ0KCcweDQ1ZCcpPT09XzB4NTc0NCgnMHg0NWQnKSl7ZnVuY3Rpb24gXzB4MTRhNmZkKF8weDE0YTZmZCl7dGhpc1tfMHg1NzQ0KCcweDQ1ZScpXT1fMHgxNGE2ZmQsdGhpc1tfMHg1NzQ0KCcweDQ1ZicpXT1PYmplY3RbXzB4NTc0NCgnMHg1OCcpXShudWxsKSx0aGlzW18weDU3NDQoJzB4NDYwJyldPSsrXzB4NTE4OTkyO31yZXR1cm4gXzB4MTRhNmZkW18weDU3NDQoJzB4MTBkJyldW18weDU3NDQoJzB4NDQ0JyldPWZ1bmN0aW9uKCl7cmV0dXJuIV9bJ2lzRW1wdHknXSh0aGlzWydfcmFuZ2VzJ10pO30sXzB4MTRhNmZkW18weDU3NDQoJzB4MTBkJyldW18weDU3NDQoJzB4MmE3JyldPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbXzB4NTc0NCgnMHg0NWYnKV07fSxfMHgxNGE2ZmRbXzB4NTc0NCgnMHgxMGQnKV1bXzB4NTc0NCgnMHg0NjEnKV09ZnVuY3Rpb24oKXt2YXIgXzB4MTRhNmZkPXRoaXMsXzB4NDhiNjQzPSEweDAsXzB4NDFmZmE2PSEweDAsXzB4NTE4OTkyPSEweDEsXzB4NDdlNDI3PSEweDEsXzB4MjZhMTNkPXRoaXNbXzB4NTc0NCgnMHg0NjInKV0sXzB4MzlkMmFlPXRoaXNbJ19jb25zb2xlTG9nVGV4dCddLF8weDIxNTZjZD10aGlzW18weDU3NDQoJzB4NDYzJyldO3JldHVybiBkZWxldGUgdGhpc1tfMHg1NzQ0KCcweDM3OCcpXSxkZWxldGUgdGhpc1tfMHg1NzQ0KCcweDQ2NCcpXSxkZWxldGUgdGhpc1tfMHg1NzQ0KCcweDQ2MycpXSxfW18weDU3NDQoJzB4ZDQnKV0oX1snY2hhaW4nXSh0aGlzWydfcmFuZ2VzJ10pW18weDU3NDQoJzB4NDY1JyldKGZ1bmN0aW9uKF8weDE0YTZmZCl7cmV0dXJuIF8weDE0YTZmZFtfMHg1NzQ0KCcweDFiMScpXSgpO30pW18weDU3NDQoJzB4ZTMnKV0oKSxmdW5jdGlvbihfMHhmMDMxM2Upe2lmKF8weDU3NDQoJzB4NDY2Jyk9PT1fMHg1NzQ0KCcweDQ2NycpKXtyZXR1cm4gdGhpc1tfMHg1NzQ0KCcweDNmYicpXTt9ZWxzZXt2YXIgXzB4MjZhMTNkPV8weGYwMzEzZVtfMHg1NzQ0KCcweDQyNicpXSgpO2lmKF8weDI2YTEzZCYmXzB4MjZhMTNkW18weDU3NDQoJzB4OWEnKV0pe19bJ2lzU3RyaW5nJ10oXzB4MTRhNmZkW18weDU3NDQoJzB4Mzc4JyldKXx8KF8weDE0YTZmZFtfMHg1NzQ0KCcweDM3OCcpXT0nJyk7dmFyIF8weDM5ZDJhZT1fMHgyNmExM2RbXzB4NTc0NCgnMHg5YScpXT5fMHgzNDMyNmYsXzB4MjE1NmNkPV9bXzB4NTc0NCgnMHgxNjYnKV0oXzB4MzlkMmFlP18weDI2YTEzZFsnc2xpY2UnXShfMHgyNmExM2RbXzB4NTc0NCgnMHg5YScpXS1fMHgzNDMyNmYpOl8weDI2YTEzZCxmdW5jdGlvbihfMHgxNGE2ZmQpe3JldHVybicnPT09XzB4MTRhNmZkP18weDU3NDQoJzB4NDY4Jyk6XzB4MTRhNmZkO30pW18weDU3NDQoJzB4NTQnKV0oJyxceDIwJyk7aWYoXzB4MjE1NmNkW18weDU3NDQoJzB4OWEnKV0+XzB4MzQzMjZmJiYoXzB4MjE1NmNkPSgweDA9PT1fMHgyMTU2Y2RbXzB4NTc0NCgnMHg3MCcpXShfMHg1NzQ0KCcweDQ2OScpKT9fMHg1NzQ0KCcweDQ2OScpOicnKStfMHg1NzQ0KCcweDQ2YScpK18weDIxNTZjZFtfMHg1NzQ0KCcweDExNycpXShfMHgyMTU2Y2RbXzB4NTc0NCgnMHg5YScpXS1fMHgzNDMyNmYrMHg0KSksXzB4MTRhNmZkWydfY29uc29sZUxvZ1RleHQnXSs9KF8weDE0YTZmZFtfMHg1NzQ0KCcweDM3OCcpXT9fMHg1NzQ0KCcweDQ2YicpOicnKStfMHgyMTU2Y2QsIV8weDE0YTZmZFtfMHg1NzQ0KCcweDQ2NCcpXXx8X1snaXNTdHJpbmcnXShfMHgxNGE2ZmRbXzB4NTc0NCgnMHg0NjQnKV0pJiZfMHgxNGE2ZmRbXzB4NTc0NCgnMHg0NjQnKV1bXzB4NTc0NCgnMHg5YScpXTxfMHg1M2JlY2Qpe2lmKCd6Q0hFaSc9PT1fMHg1NzQ0KCcweDQ2YycpKXt2YXIgXzB4MmM2ZGE4PV9bXzB4NTc0NCgnMHg0MTInKV0odGhpc1snX3Rlc3RzJ10pLF8weDQ1NmQzYz1fWydzaXplJ10odGhpc1tfMHg1NzQ0KCcweDFkMicpXSk7cmV0dXJueyd0b3RhbCc6XzB4MmM2ZGE4LCdwYXNzZWQnOl8weDJjNmRhOC1fMHg0NTZkM2MsJ2ZhaWxlZCc6XzB4NDU2ZDNjLCdjb3ZlcmFnZSc6dGhpc1tfMHg1NzQ0KCcweDQ2ZCcpXSwnZXJyb3InOnRoaXNbXzB4NTc0NCgnMHg0NmUnKV19O31lbHNle19bXzB4NTc0NCgnMHgxNDEnKV0oXzB4MTRhNmZkW18weDU3NDQoJzB4NDY0JyldKXx8KF8weDE0YTZmZFtfMHg1NzQ0KCcweDQ2NCcpXT0nJyk7dmFyIF8weDI4MjE2NT1fMHgyNmExM2RbXzB4NTc0NCgnMHg5YScpXT4weDNlOCxfMHg1NWFmMmI9KF8weDI4MjE2NT9fMHg1NzQ0KCcweDQ2ZicpOicnKSsnXHgyMCcrKF8weDI4MjE2NT9fMHgyNmExM2RbXzB4NTc0NCgnMHg0NDUnKV0oXzB4MjZhMTNkW18weDU3NDQoJzB4OWHigIsnKV0tMHgzZTgpOl8weDI2YTEzZClbJ2pvaW4nXShfMHg1NzQ0KCcweDQ3MCcpKTtfMHgxNGE2ZmRbXzB4NTc0NCgnMHg0NjQnKV0rPShfMHgxNGE2ZmRbXzB4NTc0NCgnMHg0NjQnKV0/XzB4NTc0NCgnMHg0NzEnKTonJykrXzB4NTVhZjJiO319fWlmKF8weGYwMzEzZVtfMHg1NzQ0KCcweDQyZScpXSgpKXtfMHg1MTg5OTI9ITB4MDt2YXIgXzB4MzJlMGQ2PV8weGYwMzEzZVtfMHg1NzQ0KCcweDJiYycpXSgpO2lmKF8weDMyZTBkNltfMHg1NzQ0KCcweDlhJyldKXtpZignWGtyYk4nPT09J1hrcmJOJyl7dmFyIF8weDVkZTNkZT1fMHgzMmUwZDZbXzB4MzJlMGQ2W18weDU3NDQoJzB4OWEnKV0tMHgxXVsnbWVzc2FnZSddKCk7XzB4MTRhNmZkW18weDU3NDQoJzB4NDYzJyldPV8weDE0YTZmZFsnX3RydW5jYXRlTWVzc2FnZSddKF8weDVkZTNkZXx8JycsXzB4NWE2ZDg2KTt9ZWxzZXt2YXIgXzB4NDc0YjA3PV8weDE0YTZmZFsnZmlsZSddKCk7XzB4NDc0YjA3JiZfMHgxNGE2ZmRbXzB4NTc0NCgnMHg5MCcpXShfMHg0NzRiMDdbXzB4NTc0NCgnMHg4ZScpXShfMHgxNGE2ZmRbXzB4NTc0NCgnMHg4ZicpXSgpKSk7fX19XzB4ZjAzMTNlW18weDU3NDQoJzB4NDJiJyldKCkmJihfMHg0N2U0Mjc9ITB4MCksXzB4ZjAzMTNlW18weDU3NDQoJzB4NDEnKV0oKT9fMHg0MWZmYTY9ITB4MTpfMHg0OGI2NDM9ITB4MTt9fSksXzB4MTRhNmZkWydfY29uc29sZUxvZ1RleHQnXSYmKF9bJ2lzU3RyaW5nJ10oXzB4MTRhNmZkW18weDU3NDQoJzB4NDY0JyldKSYmKF8weDE0YTZmZFsnX2xvbmdDb25zb2xlTG9nVGV4dCddPV8weDE0YTZmZFtfMHg1NzQ0KCcweDQ3MicpXShfMHgxNGE2ZmRbXzB4NTc0NCgnMHg0NjQnKV0sXzB4NTNiZWNkLCEweDApKSxfMHgxNGE2ZmRbXzB4NTc0NCgnMHgzNzgnKV09XzB4MTRhNmZkWydfdHJ1bmNhdGVNZXNzYWdlJ10oXzB4MTRhNmZkW18weDU3NDQoJzB4Mzc4JyldLF8weDM0MzI2ZikpLHRoaXNbXzB4NTc0NCgnMHg0NjInKV09XzB4NTE4OTkyP18weGYwMzEzZVsnZXJyb3JTb3VyY2UnXTpfMHg0N2U0Mjc/XzB4ZjAzMTNlW18weDU3NDQoJzB4NDczJyldOl8weDQxZmZhNj9fMHhmMDMxM2VbXzB4NTc0NCgnMHg0NzQnKV06XzB4NDhiNjQzP18weGYwMzEzZVsnZnVsbHlDb3ZlcmVkJ106XzB4ZjAzMTNlW18weDU3NDQoJzB4NDc1JyldLHRoaXNbJ19saW5lU3RhdGUnXT09PV8weGYwMzEzZVtfMHg1NzQ0KCcweDQ3NCcpXSYmKGRlbGV0ZSB0aGlzW18weDU3NDQoJzB4Mzc4JyldLGRlbGV0ZSB0aGlzW18weDU3NDQoJzB4NDY0JyldKSx0aGlzWydfbGluZVN0YXRlJ10hPT1fMHgyNmExM2R8fHRoaXNbXzB4NTc0NCgnMHgzNzgnKV0hPT1fMHgzOWQyYWV8fHRoaXNbJ19lcnJvclNvdXJjZVRleHQnXSE9PV8weDIxNTZjZDt9LF8weDE0YTZmZFsncHJvdG90eXBlJ11bJ2NvbnNvbGVMb2dUZXh0J109ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc1tfMHg1NzQ0KCcweDM3OCcpXTt9LF8weDE0YTZmZFtfMHg1NzQ0KCcweDEwZCcpXVtfMHg1NzQ0KCcweDQ1MCcpXT1mdW5jdGlvbigpe3JldHVybiB0aGlzWydfbG9uZ0NvbnNvbGVMb2dUZXh0J107fSxfMHgxNGE2ZmRbXzB4NTc0NCgnMHgxMGQnKV1bJ2Vycm9yU291cmNlVGV4dCddPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbJ19lcnJvclNvdXJjZVRleHQnXTt9LF8weDE0YTZmZFtfMHg1NzQ0KCcweDEwZCcpXVtfMHg1NzQ0KCcweDQ0ZScpXT1mdW5jdGlvbigpe2lmKF8weDU3NDQoJzB4NDc2JykhPT1fMHg1NzQ0KCcweDQ3NicpKXt0aGlzW18weDU3NDQoJzB4NDZkJyldW18weDE0YTZmZFsnaWQnXV09XzB4MTRhNmZkWydyYW5nZXMnXTt9ZWxzZXtyZXR1cm4gdGhpc1tfMHg1NzQ0KCcweDQ2MicpXTt9fSxfMHgxNGE2ZmRbXzB4NTc0NCgnMHgxMGQnKV1bXzB4NTc0NCgnMHg0NDMnKV09ZnVuY3Rpb24oXzB4MTRhNmZkLF8weDQ4YjY0Myl7aWYoXzB4NTc0NCgnMHg0NzcnKSE9PV8weDU3NDQoJzB4NDc3Jykpe3RoaXNbXzB4NTc0NCgnMHgxMWEnKV0oX1tfMHg1NzQ0KCcweDc5JyldKHsndHlwZSc6XzB4NTc0NCgnMHgxMWInKSwnZXJyb3InOl8weDE0YTZmZFtfMHg1NzQ0KCcweDMxJyldfHwnJ30sdGhpc1tfMHg1NzQ0KCcweDFkOCcpXVtfMHg1NzQ0KCcweDExYycpXSgpKSk7fWVsc2V7dmFyIF8weDQxZmZhNj1fMHgxNGE2ZmRbXzB4NTc0NCgnMHgxZDEnKV0oKTtfMHg0OGI2NDN8fGRlbGV0ZSB0aGlzWydfcmFuZ2VzJ11bXzB4NDFmZmE2XSx0aGlzW18weDU3NDQoJzB4NDVmJyldW18weDQxZmZhNl09XzB4MTRhNmZkO319LF8weDE0YTZmZFtfMHg1NzQ0KCcweDEwZCcpXVtfMHg1NzQ0KCcweDM3NycpXT1mdW5jdGlvbigpe2lmKF8weDU3NDQoJzB4NDc4JykhPT0nQkdGdEgnKXtfMHg0OGI2NDNbXzB4NTc0NCgnMHg0NzknKV0oXzB4NWE2ZDg2LF8weDQxZmZhNixfMHgxNGE2ZmQsXzB4ZjAzMTNlLCEweDEsXzB4MzQzMjZmLF8weDUzYmVjZCk7fWVsc2V7dGhpc1tfMHg1NzQ0KCcweDQ1ZicpXT1PYmplY3RbXzB4NTc0NCgnMHg1OCcpXShudWxsKTt9fSxfMHgxNGE2ZmRbXzB4NTc0NCgnMHgxMGQnKV1bXzB4NTc0NCgnMHgzMzMnKV09ZnVuY3Rpb24oXzB4MTRhNmZkKXtpZihfMHg1NzQ0KCcweDQ3YScpPT09J3BMSnd0Jyl7dmFyIF8weDQ4YjY0Mz10aGlzLF8weDQxZmZhNj10aGlzW18weDU3NDQoJzB4NDVlJyldO2lmKF9bJ2lzVW5kZWZpbmVkJ10oXzB4MTRhNmZkKSlyZXR1cm4gXzB4NDFmZmE2O2lmKF8weDE0YTZmZCE9PV8weDQxZmZhNil7dGhpc1tfMHg1NzQ0KCcweDQ1ZScpXT1fMHgxNGE2ZmQ7dmFyIF8weGYwMzEzZT1fMHgxNGE2ZmQtXzB4NDFmZmE2LF8weDM0MzI2Zj1fW18weDU3NDQoJzB4MTlmJyldKHRoaXNbXzB4NTc0NCgnMHg0NWYnKV0pO3RoaXNbXzB4NTc0NCgnMHgzNzcnKV0oKSxfW18weDU3NDQoJzB4ZDQnKV0oXzB4MzQzMjZmLGZ1bmN0aW9uKF8weDE0YTZmZCl7XzB4MTRhNmZkW18weDU3NDQoJzB4NDE0JyldKF8weGYwMzEzZSksXzB4NDhiNjQzWydfcmFuZ2VzJ11bXzB4MTRhNmZkW18weDU3NDQoJzB4MWQxJyldKCldPV8weDE0YTZmZDt9KTt9fWVsc2V7dmFyIF8weDk4ODZmMj17J21lc3NhZ2UnOl8weDE0YTZmZFsndGV4dCddKCl9O3JldHVybiBfMHgxNGE2ZmRbXzB4NTc0NCgnMHgyYTQnKV0oKSYmKF8weDk4ODZmMltfMHg1NzQ0KCcweDQ3YicpXT1fMHhmMDMxM2VbXzB4NTc0NCgnMHg0N2MnKV0oXzB4MTRhNmZkLF8weDE0YTZmZFsnZmlsZSddKClbXzB4NTc0NCgnMHhlJyldKCkpKSxfMHg5ODg2ZjI7fX0sXzB4MTRhNmZkW18weDU3NDQoJzB4MTBkJyldW18weDU3NDQoJzB4MzM1JyldPWZ1bmN0aW9uKCl7dGhpc1tfMHg1NzQ0KCcweDM3NycpXSgpLGRlbGV0ZSB0aGlzW18weDU3NDQoJzB4Mzc4JyldLGRlbGV0ZSB0aGlzW18weDU3NDQoJzB4NDYzJyldLGRlbGV0ZSB0aGlzW18weDU3NDQoJzB4NDYyJyldLHRoaXNbXzB4NTc0NCgnMHgzNzknKV09ITB4MDt9LF8weDE0YTZmZFtfMHg1NzQ0KCcweDEwZCcpXVtfMHg1NzQ0KCcweDQyOScpXT1mdW5jdGlvbigpe3JldHVybiB0aGlzW18weDU3NDQoJzB4Mzc5JyldO30sXzB4MTRhNmZkW18weDU3NDQoJzB4MTBkJyldW18weDU3NDQoJzB4MWQxJyldPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbXzB4NTc0NCgnMHg0NjAnKV07fSxfMHgxNGE2ZmRbJ3Byb3RvdHlwZSddW18weDU3NDQoJzB4NDcyJyldPWZ1bmN0aW9uKF8weDE0YTZmZCxfMHg0OGI2NDMsXzB4NDFmZmE2KXt2YXIgXzB4ZjAzMTNlPV8weDE0YTZmZFtfMHg1NzQ0KCcweDlhJyldPl8weDQ4YjY0Mz8nLi4uJzonJztyZXR1cm4gXzB4MTRhNmZkPV8weDE0YTZmZFtfMHg1NzQ0KCcweDExNycpXSgweDAsXzB4NDhiNjQzKSwoXzB4NDFmZmE2P18weDE0YTZmZDp0aGlzW18weDU3NDQoJzB4NDdkJyldKF8weDE0YTZmZCkpK18weGYwMzEzZTt9LF8weDE0YTZmZFtfMHg1NzQ0KCcweDEwZCcpXVsnX2NsZWFuU3RyaW5nJ109ZnVuY3Rpb24oXzB4MTRhNmZkKXtpZihfMHg1NzQ0KCcweDQ3ZScpIT09J3ROZnpDJyl7cmV0dXJuIF8weDE0YTZmZCYmXzB4MTRhNmZkW18weDU3NDQoJzB4OWQnKV0oL1xyXG5ccyovZywnXHgyMCcpW18weDU3NDQoJzB4OWQnKV0oL1xuXHMqL2csJ1x4MjAnKTt9ZWxzZXt2YXIgXzB4MThkZGVhPV8weDQxZmZhNltfMHgxNGE2ZmRdO2lmKCFfMHgxOGRkZWEpcmV0dXJuO3ZhciBfMHgzMzYzZTY9XzB4MThkZGVhWydrZXknXSgpO18weGYwMzEzZVtfMHg1NzQ0KCcweDQwZScpXVtfMHgzMzYzZTZdPV8weDE4ZGRlYSxfMHhmMDMxM2VbXzB4NTc0NCgnMHg0MTAnKV0oXzB4MThkZGVhKTt9fSxfMHgxNGE2ZmQ7fWVsc2V7dmFyIF8weDM4YzI4OSxfMHgzOGY1ZWE9XzB4MTRhNmZkW18weDU3NDQoJzB4NDdmJyldKCk7aWYoXzB4MzhmNWVhPj0weDB8fF8weDE0YTZmZFtfMHg1NzQ0KCcweDQ4MCcpXT49MHgwKXt2YXIgXzB4NTUzZDBmPV8weDE0YTZmZFsnbnVtYmVyT2ZBbGxSYW5nZXMnXSgpO18weDM4YzI4OT17J3ZhbHVlJzpfMHgzOGY1ZWEsJ2xvdyc6XzB4MzhmNWVhPHRoaXNbXzB4NTc0NCgnMHgxZDgnKV1bJ2xvd0NvdmVyYWdlVGhyZXNob2xkJ10oKSwncmFuZ2VzJzp7J2NvdmVyZWQnOl8weDE0YTZmZFsnbnVtYmVyT2ZDb3ZlcmVkUmFuZ2VzJ10oKSwnYWxsJzpfMHg1NTNkMGZ9LCd2YWx1ZUNoYW5nZWQnOl8weDE0YTZmZFtfMHg1NzQ0KCcweDQ4MCcpXSE9PV8weDM4ZjVlYXx8XzB4MTRhNmZkW18weDU3NDQoJzB4NDgxJyldIT09XzB4NTUzZDBmfHx2b2lkIDB4MH0sXzB4MzhmNWVhPj0weDB8fChfMHgzOGMyODlbXzB4NTc0NCgnMHg0NzQnKV09ITB4MCksXzB4MTRhNmZkW18weDU3NDQoJzB4NDgwJyldPV8weDM4ZjVlYSxfMHgxNGE2ZmRbXzB4NTc0NCgnMHg0ODEnKV09XzB4NTUzZDBmO31yZXR1cm4gXzB4MzhjMjg5O319KCk7XzB4NDhiNjQzWydleHBvcnRzJ109XzB4NDdlNDI3O30seycuLi9zaGFyZWQvZW51bXMnOjB4MTZ9XSwxNDpbZnVuY3Rpb24oXzB4MWM3ZTVkLF8weDRmOTNkMixfMHgzMjY0Yjcpeyd1c2Ugc3RyaWN0Jzt2YXIgXzB4M2MxZGVmPV8weDFjN2U1ZChfMHg1NzQ0KCcweDQ4MicpKSxfMHg5ZTQ1MWQ9ZnVuY3Rpb24oKXtmdW5jdGlvbiBfMHgxYzdlNWQoXzB4MWM3ZTVkKXt0aGlzW18weDU3NDQoJzB4NDAwJyldPV8weDFjN2U1ZFtfMHg1NzQ0KCcweDNlNicpXSx0aGlzWydfZXhwZWN0ZWQnXT1fMHgxYzdlNWRbXzB4NTc0NCgnMHgzZTgnKV0sdGhpc1tfMHg1NzQ0KCcweDQ4MycpXT1fMHgxYzdlNWRbXzB4NTc0NCgnMHgzMScpXSx0aGlzW18weDU3NDQoJzB4NDg0JyldPV8weDFjN2U1ZFtfMHg1NzQ0KCcweDRlJyldLHRoaXNbXzB4NTc0NCgnMHg0ODUnKV09XzB4MWM3ZTVkW18weDU3NDQoJzB4NDg2JyldLHRoaXNbXzB4NTc0NCgnMHgzZmUnKV09XzB4MWM3ZTVkWydjb250ZXh0J118fHt9O31yZXR1cm4gXzB4MWM3ZTVkW18weDU3NDQoJzB4MTBkJyldW18weDU3NDQoJzB4NDA2JyldPWZ1bmN0aW9uKCl7aWYoXzB4NTc0NCgnMHg0ODcnKT09PV8weDU3NDQoJzB4NDg4Jykpe3RoaXNbJ19vcGVuZWRGaWxlcyddW18weDFjN2U1ZFtfMHg1NzQ0KCcweGUnKV1dJiZ0aGlzW18weDU3NDQoJzB4MzdkJyldW18weDFjN2U1ZFsncGF0aCddXS0tO31lbHNle3ZhciBfMHgxYzdlNWQ9dGhpcyxfMHg0ZjkzZDI9dGhpc1snX3N0YWNrJ107dGhpc1tfMHg1NzQ0KCcweDQ4NCcpXT1bXSxfW18weDU3NDQoJzB4ZDQnKV0oXzB4NGY5M2QyLGZ1bmN0aW9uKF8weDRmOTNkMixfMHgzMjY0Yjcpe3JldHVybiBfMHgxYzdlNWRbXzB4NTc0NCgnMHg0ODQnKV1bXzB4NTc0NCgnMHgyOScpXShuZXcgXzB4M2MxZGVmKF8weDRmOTNkMlsweDBdLF8weDRmOTNkMlsweDFdLF8weDFjN2U1ZFsnX2NvbnRleHQnXVtfMHgzMjY0YjddKSk7fSksZGVsZXRlIHRoaXNbXzB4NTc0NCgnMHgzZmUnKV07fX0sXzB4MWM3ZTVkWydwcm90b3R5cGUnXVtfMHg1NzQ0KCcweDRlJyldPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbXzB4NTc0NCgnMHg0ODQnKV07fSxfMHgxYzdlNWRbXzB4NTc0NCgnMHgxMGQnKV1bXzB4NTc0NCgnMHgzMScpXT1mdW5jdGlvbigpe2lmKCdheFpTaychPT1fMHg1NzQ0KCcweDQ4OScpKXtyZXR1cm4gXzB4MzI2NGI3W18weDU3NDQoJzB4NTMnKV0oXzB4MWM3ZTVkKVtfMHg1NzQ0KCcweDU3JyldKF8weDU3NDQoJzB4MzFlJykpO31lbHNle3JldHVybiB0aGlzW18weDU3NDQoJzB4NDgzJyldO319LF8weDFjN2U1ZFtfMHg1NzQ0KCcweDEwZCcpXVtfMHg1NzQ0KCcweDNlNicpXT1mdW5jdGlvbigpe3JldHVybiB0aGlzW18weDU3NDQoJzB4NDAwJyldO30sXzB4MWM3ZTVkWydwcm90b3R5cGUnXVsnZXhwZWN0ZWQnXT1mdW5jdGlvbigpe3JldHVybiB0aGlzW18weDU3NDQoJzB4M2U3JyldO30sXzB4MWM3ZTVkW18weDU3NDQoJzB4MTBkJyldWydzbmFwc2hvdCddPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbXzB4NTc0NCgnMHg0ODUnKV07fSxfMHgxYzdlNWRbJ3Byb3RvdHlwZSddW18weDU3NDQoJzB4MWQxJyldPWZ1bmN0aW9uKCl7aWYoXzB4NTc0NCgnMHg0OGEnKT09PSdLb0N1WScpe3JldHVybiB0aGlzW18weDU3NDQoJzB4MzAxJyldO31lbHNle3JldHVybih0aGlzW18weDU3NDQoJzB4NDgzJyldfHwnJykrX1sncmVkdWNlJ10odGhpc1snX3N0YWNrJ10sZnVuY3Rpb24oXzB4MWM3ZTVkLF8weDRmOTNkMil7cmV0dXJuIF8weDFjN2U1ZCs9XzB4NGY5M2QyW18weDU3NDQoJzB4MWQxJyldKCk7fSwnJyk7fX0sXzB4MWM3ZTVkO30oKTtfMHg0ZjkzZDJbXzB4NTc0NCgnMHhiJyldPV8weDllNDUxZDt9LHsnLi9zdGFja0VudHJ5JzoweDE0fV0sMTU6W2Z1bmN0aW9uKF8weDU5NTBjNyxfMHgzOGYwNDUsXzB4NTQwNjBlKXsndXNlIHN0cmljdCc7dmFyIF8weDExZjZkYz1fMHg1OTUwYzcoXzB4NTc0NCgnMHg0OGInKSksXzB4NDZlMjQ4PShfMHg1OTUwYzcoJy4vc3RhY2tFbnRyeScpLF8weDU5NTBjNyhfMHg1NzQ0KCcweDQ4YycpKSksXzB4NWVkZWRiPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gXzB4NTk1MGM3KF8weDU5NTBjNyl7dGhpc1snX2lkJ109XzB4NTk1MGM3WydpZCddLHRoaXNbXzB4NTc0NCgnMHgzZWYnKV09XzB4NTk1MGM3W18weDU3NDQoJzB4NDhkJyldLHRoaXNbJ19sb2cnXT1fMHg1OTUwYzdbXzB4NTc0NCgnMHg0OGUnKV0sdGhpc1snX25hbWUnXT1fMHg1OTUwYzdbXzB4NTc0NCgnMHgxNDMnKV0sdGhpc1tfMHg1NzQ0KCcweDFkMycpXT1fMHg1OTUwYzdbXzB4NTc0NCgnMHhhZScpXSx0aGlzW18weDU3NDQoJzB4MzllJyldPV8weDU5NTBjN1tfMHg1NzQ0KCcweDNkJyldLHRoaXNbJ19kZWNsYXJhdGlvbiddPV8weDU5NTBjN1tfMHg1NzQ0KCcweDQ4ZicpXSx0aGlzW18weDU3NDQoJzB4NDkwJyldPV8weDU5NTBjN1tfMHg1NzQ0KCcweDM0YicpXSx0aGlzW18weDU3NDQoJzB4MWE5JyldPV8weDU5NTBjN1snc2xvdyddO31yZXR1cm4gXzB4NTk1MGM3W18weDU3NDQoJzB4MTBkJyldWydpbml0J109ZnVuY3Rpb24oXzB4MzhmMDQ1LF8weDU0MDYwZSxfMHg0NmUyNDgsXzB4NWVkZWRiKXt2YXIgXzB4MmJmOGRmPXRoaXM7aWYodGhpc1tfMHg1NzQ0KCcweDQ5MScpXT1fMHgzOGYwNDUsdGhpc1tfMHg1NzQ0KCcweDQ2MCcpXSYmKHRoaXNbXzB4NTc0NCgnMHg0OTInKV0oKSx0aGlzW18weDU3NDQoJzB4NDkzJyldKCksXzB4NDZlMjQ4KHRoaXMpLHRoaXNbXzB4NTc0NCgnMHg0OTQnKV09T2JqZWN0W18weDU3NDQoJzB4NTgnKV0obnVsbCksdGhpc1tfMHg1NzQ0KCcweDI2NScpXT1PYmplY3RbJ2NyZWF0ZSddKG51bGwpLHRoaXNbXzB4NTc0NCgnMHg0OTUnKV09XzB4NTQwNjBlLHRoaXNbXzB4NTc0NCgnMHhmYScpXSYmdGhpc1snX2xvZyddW18weDU3NDQoJzB4OWEnKV0pKXt0aGlzW18weDU3NDQoJzB4NDk2JyldPSEweDA7dmFyIF8weDRiZDUzYj10aGlzW18weDU3NDQoJzB4ZmEnKV07dGhpc1tfMHg1NzQ0KCcweGZhJyldPVtdLHRoaXNbXzB4NTc0NCgnMHg0OTcnKV09T2JqZWN0W18weDU3NDQoJzB4NTgnKV0obnVsbCksX1tfMHg1NzQ0KCcweGQ0JyldKF8weDRiZDUzYixmdW5jdGlvbihfMHg1OTUwYzcpe2lmKF8weDU3NDQoJzB4NDk4JykhPT1fMHg1NzQ0KCcweDQ5OScpKXt2YXIgXzB4MzhmMDQ1PW5ldyBfMHgxMWY2ZGMoXzB4NTk1MGM3KTtfMHgzOGYwNDVbJ2luaXQnXSgpLF9bJ2VhY2gnXShfMHgzOGYwNDVbXzB4NTc0NCgnMHg0ZScpXSgpLGZ1bmN0aW9uKF8weDU5NTBjNyl7aWYoXzB4NTc0NCgnMHg0OWEnKSE9PV8weDU3NDQoJzB4NDlhJykpe3JldHVybiB0aGlzWydfbG9uZ0NvbnNvbGVMb2dUZXh0J107fWVsc2V7dmFyIF8weDU0MDYwZT1fMHg1OTUwYzdbXzB4NTc0NCgnMHgxZDEnKV0oKSxfMHgxMWY2ZGM9XzB4MmJmOGRmWydfZXJyb3JTdGFja01hcCddW18weDU0MDYwZV07XzB4MTFmNmRjP35fW18weDU3NDQoJzB4NzAnKV0oXzB4MTFmNmRjLF8weDM4ZjA0NSl8fF8weDExZjZkY1sncHVzaCddKF8weDM4ZjA0NSk6KF8weDExZjZkYz1bXSxfMHgxMWY2ZGNbXzB4NTc0NCgnMHgyOScpXShfMHgzOGYwNDUpLF8weDJiZjhkZltfMHg1NzQ0KCcweDQ5NycpXVtfMHg1NDA2MGVdPV8weDExZjZkYyksXzB4MTFmNmRjW18weDU3NDQoJzB4NDliJyldPV8weDU5NTBjNyxfMHg1ZWRlZGIoXzB4NTk1MGM3KTt9fSksXzB4MmJmOGRmW18weDU3NDQoJzB4ZmEnKV1bJ3B1c2gnXShfMHgzOGYwNDUpO31lbHNle18weDU5NTBjN1tfMHg1NzQ0KCcweDMxJyldPV8weDU5NTBjN1snbWVzc2FnZSddW18weDU3NDQoJzB4MTE3JyldKF8weDM4ZjA0NSsweDIpO2Zvcih2YXIgXzB4M2Y5ZDYxPV8weDU5NTBjN1snbWVzc2FnZSddW18weDU3NDQoJzB4ZDMnKV0oJ1x4MGEnKSxfMHg0MDNmNDc9MHgwO18weDQwM2Y0NzxfMHgzZjlkNjFbXzB4NTc0NCgnMHg5YScpXSYmIV9bXzB4NTc0NCgnMHgzMjcnKV0oX1sndHJpbUxlZnQnXShfMHgzZjlkNjFbXzB4NDAzZjQ3XSksXzB4NTc0NCgnMHgzMjknKSk7XzB4NDAzZjQ3KyspO18weDU5NTBjN1tfMHg1NzQ0KCcweDMxJyldPV8weDNmOWQ2MVtfMHg1NzQ0KCcweDQ0NScpXSgweDAsXzB4NDAzZjQ3KVtfMHg1NzQ0KCcweDU0JyldKCdceDBhJyk7fX0pO310aGlzW18weDU3NDQoJzB4MWQzJyldJiYoX1snZWFjaCddKHRoaXNbXzB4NTc0NCgnMHgxZDMnKV0sZnVuY3Rpb24oXzB4MzhmMDQ1KXtpZihfMHg1NzQ0KCcweDQ5YycpPT09XzB4NTc0NCgnMHg0OWQnKSl7bChfMHgxMWY2ZGNbXzB4NTc0NCgnMHg0OWUnKV0oXzB4NTk1MGM3KSk7fWVsc2V7cmV0dXJuIG5ldyBfMHg1OTUwYzcoXzB4MzhmMDQ1KVtfMHg1NzQ0KCcweDQwNicpXShfMHgyYmY4ZGYsXzB4NTQwNjBlLF8weDQ2ZTI0OCxfMHg1ZWRlZGIpO319KSxkZWxldGUgdGhpc1tfMHg1NzQ0KCcweDFkMycpXSk7fSxfMHg1OTUwYzdbXzB4NTc0NCgnMHgxMGQnKV1bJ2lkJ109ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc1tfMHg1NzQ0KCcweDQ2MCcpXTt9LF8weDU5NTBjN1tfMHg1NzQ0KCcweDEwZCcpXVtfMHg1NzQ0KCcweDFkMScpXT1mdW5jdGlvbigpe3JldHVybiB0aGlzW18weDU3NDQoJzB4NDA4JyldfHwodGhpc1tfMHg1NzQ0KCcweDQ5MycpXSgpLHRoaXNbXzB4NTc0NCgnMHg0MDgnKV0pO30sXzB4NTk1MGM3W18weDU3NDQoJzB4MTBkJyldW18weDU3NDQoJzB4NDkzJyldPWZ1bmN0aW9uKCl7aWYoXzB4NTc0NCgnMHg0OWYnKSE9PV8weDU3NDQoJzB4NDlmJykpe18weDVlZGVkYignRXJyb3JceDIwd2hpbGVceDIwY3JlYXRpbmdceDIwd29ya2VyXHgyMCMlczpceDIwJXMnLF8weDU5NTBjNyxsJiYobFsnc3RhY2snXXx8bFtfMHg1NzQ0KCcweDMxJyldKSksXzB4MzhmMDQ1KCk7fWVsc2V7dGhpc1tfMHg1NzQ0KCcweDQwOCcpXT10aGlzW18weDU3NDQoJzB4M2VmJyldKydfJyt0aGlzW18weDU3NDQoJzB4NDFkJyldO319LF8weDU5NTBjN1sncHJvdG90eXBlJ11bJ2ZpbGVJZCddPWZ1bmN0aW9uKCl7aWYoXzB4NTc0NCgnMHg0YTAnKT09PV8weDU3NDQoJzB4NGEwJykpe3JldHVybiB0aGlzW18weDU3NDQoJzB4M2VmJyldO31lbHNle3JldHVybiBNYXRoW18weDU3NDQoJzB4NGExJyldKClbXzB4NTc0NCgnMHg1NycpXSgweDI0KVtfMHg1NzQ0KCcweDExNycpXSgweDIsMHg1KTt9fSxfMHg1OTUwYzdbJ3Byb3RvdHlwZSddW18weDU3NDQoJzB4MWFmJyldPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbXzB4NTc0NCgnMHg0YTInKV0mJnRoaXNbXzB4NTc0NCgnMHg0YTInKV1bXzB4NTc0NCgnMHhlJyldKCk7fSxfMHg1OTUwYzdbJ3Byb3RvdHlwZSddWyd0aW1lJ109ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc1tfMHg1NzQ0KCcweDQ5MCcpXTt9LF8weDU5NTBjN1tfMHg1NzQ0KCcweDEwZCcpXVtfMHg1NzQ0KCcweDJiYycpXT1mdW5jdGlvbigpe3JldHVybiB0aGlzW18weDU3NDQoJzB4ZmEnKV07fSxfMHg1OTUwYzdbXzB4NTc0NCgnMHgxMGQnKeKAi11bXzB4NTc0NCgnMHg0YTMnKV09ZnVuY3Rpb24oXzB4NTk1MGM3KXt0aGlzWydfY29uc29sZU1lc3NhZ2VzJ118fCh0aGlzW18weDU3NDQoJzB4NGE0JyldPVtdKSx0aGlzWydfY29uc29sZU1lc3NhZ2VzJ11bXzB4NTc0NCgnMHgyOScpXShfMHjigIs1OTUwYzcpO30sXzB4NTk1MGM3W18weDU3NDQoJzB4MTBkJyldW18weDU3NDQoJzB4NGE1JyldPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbXzB4NTc0NCgnMHg0YTQnKV07fSxfMHg1OTUwYzdbXzB4NTc0NCgnMHgxMGQnKV1bJ2lzRmFpbGluZyddPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbXzB4NTc0NCgnMHg0OTYnKV07fSxfMHg1OTUwYzdbJ3Byb3RvdHlwZSddW18weDU3NDQoJzB4NGE2JyldPWZ1bmN0aW9uKCl7aWYoXzB4NTc0NCgnMHg0YTcnKSE9PV8weDU3NDQoJzB4NGE3Jykpe3JldHVybiBfMHg1OTUwYzdbXzB4MzhmMDQ1W18weDU3NDQoJzB4YjInKV1dPXsndHMnOl8weDM4ZjA0NVsndHMnXSwnaWQnOl8weDM4ZjA0NVtfMHg1NzQ0KCcweDk1JyldJiZfMHgzOGYwNDVbXzB4NTc0NCgnMHg5NicpXT9fMHgzOGYwNDVbXzB4NTc0NCgnMHg5NicpXTpfMHgzOGYwNDVbJ2lkJ119LF8weDU5NTBjNzt9ZWxzZXtyZXR1cm4gdGhpc1snX3Nsb3cnXTt9fSxfMHg1OTUwYzdbXzB4NTc0NCgnMHgxMGQnKV1bXzB4NTc0NCgnMHg0YTgnKV09ZnVuY3Rpb24oXzB4NTk1MGM3KXt0aGlzW18weDU3NDQoJzB4NGEyJyldPV8weDU5NTBjNzt9LF8weDU5NTBjN1sncHJvdG90eXBlJ11bXzB4NTc0NCgnMHg0YTknKV09ZnVuY3Rpb24oKXt2YXIgXzB4NTk1MGM3PXRoaXMsXzB4MzhmMDQ1PU9iamVjdFtfMHg1NzQ0KCcweDU4JyldKG51bGwpO3JldHVybiBkZWxldGUgdGhpc1tfMHg1NzQ0KCcweDRhYScpXSxkZWxldGUgdGhpc1tfMHg1NzQ0KCcweDRhMicpXSx0aGlzW18weDU3NDQoJzB4NDk0JyldJiYoX1tfMHg1NzQ0KCcweGQ0JyldKHRoaXNbJ19jb3ZlcmVkUmFuZ2VzJ10sZnVuY3Rpb24oXzB4NTQwNjBlKXtpZignS3RQREEnIT09XzB4NTc0NCgnMHg0YWInKSl7dGhpc1tfMHg1NzQ0KCcweDRhMicpXT1fMHg1OTUwYzc7fWVsc2V7aWYoXzB4NTQwNjBlWydub3RDb3ZlcmVkQnknXShfMHg1OTUwYzcpLCFfMHg1NDA2MGVbXzB4NTc0NCgnMHg0MjknKV0oKSl7dmFyIF8weDExZjZkYz1fMHg1NDA2MGVbXzB4NTc0NCgnMHg0MzMnKV0oKTtfMHgzOGYwNDVbXzB4MTFmNmRjW18weDU3NDQoJzB4MWQxJyldKCldPV8weDExZjZkYzt9fX0pLGRlbGV0ZSB0aGlzW18weDU3NDQoJzB4NDk0JyldKSxkZWxldGUgdGhpc1tfMHg1NzQ0KCcweDQ5NycpXSxkZWxldGUgdGhpc1snX2NvbnNvbGVNZXNzYWdlcyddLGRlbGV0ZSB0aGlzW18weDU3NDQoJzB4MjY1JyldLF8weDM4ZjA0NTt9LF8weDU5NTBjN1tfMHg1NzQ0KCcweDEwZCcpXVtfMHg1NzQ0KCcweDQzOCcpXT1mdW5jdGlvbihfMHg1OTUwYzcpe2lmKF8weDU3NDQoJzB4NGFjJykhPT1fMHg1NzQ0KCcweDRhYycpKXtpZighYyl7aCgpO3ZhciBfMHg1OTRmNmI9XzB4MzhmMDQ1W18weDU3NDQoJzB4MzBiJyldW18weDU5NTBjN107XzB4NTk0ZjZiJiZfMHg1OTRmNmJbXzB4NTc0NCgnMHgzMGMnKV0/XzB4MzhmMDQ1WydfZXh0ZW5zaW9uJ11bXzB4NTc0NCgnMHgzMGUnKV0oXzB4NDZlMjQ4KTpfMHgzOGYwNDVbXzB4NTc0NCgnMHgyOTUnKV0oXzB4NTk1MGM3KSxhKCdXb3JrZXJceDIwaXNceDIwbm90XHgyMGNyZWF0ZWRceDIwaW5ceDIwdGltZSxceDIwcmVjeWNsaW5nXHgyMGl0JyksbCYmbCh7J3J1bkNhbmNlbGxlZCc6ITB4MCwncmVydW4nOiEweDB9KSxfMHgxMWY2ZGMoeydydW5DYW5jZWxsZWQnOiEweDAsJ3JlcnVuJzohMHgwfSk7fX1lbHNle3RoaXNbJ19jb3ZlcmVkUmFuZ2VzJ11bXzB4NTk1MGM3WydrZXknXSgpXT1fMHg1OTUwYzc7dmFyIF8weDM4ZjA0NT1fMHg1OTUwYzdbXzB4NTc0NCgnMHg0MzMnKV0oKTtfMHgzOGYwNDUmJiFfMHgzOGYwNDVbXzB4NTc0NCgnMHgzODAnKV0oKSYmKHRoaXNbXzB4NTc0NCgnMHgyNjUnKV1bXzB4MzhmMDQ1W18weDU3NDQoJzB4MWQxJyldKCldPV8weDM4ZjA0NSk7fX0sXzB4NTk1MGM3W18weDU3NDQoJzB4MTBkJyldW18weDU3NDQoJzB4NGFkJyldPWZ1bmN0aW9uKCl7aWYoJ0VUTVNKJz09PV8weDU3NDQoJzB4NGFlJykpe3JldHVybiBfWydtYXAnXSh0aGlzWydfY292ZXJlZEZpbGVzJ10sZnVuY3Rpb24oXzB4NTk1MGM3KXtyZXR1cm4gXzB4NTk1MGM3O30pO31lbHNle3JldHVybiBfMHg1OTUwYzdbXzB4NTc0NCgnMHg0YWYnKV0oXzB4MzhmMDQ1KTt9fSxfMHg1OTUwYzdbXzB4NTc0NCgnMHgxMGQnKV1bXzB4NTc0NCgnMHgxYWUnKV09ZnVuY3Rpb24oKXtpZihfMHg1NzQ0KCcweDRiMCcpIT09XzB4NTc0NCgnMHg0YjEnKSl7cmV0dXJuIHRoaXNbXzB4NTc0NCgnMHg0YWEnKV07fWVsc2V7cmV0dXJuIHRoaXNbJ190ZXN0RmlsZSddJiZ0aGlzW18weDU3NDQoJzB4NGEyJyldWydwYXRoJ10oKTt9fSxfMHg1OTUwYzdbXzB4NTc0NCgnMHgxMGQnKV1bXzB4NTc0NCgnMHg0YjInKV09ZnVuY3Rpb24oXzB4NTk1MGM3KXt2YXIgXzB4MzhmMDQ1PXRoaXM7dGhpc1snX2Vycm9yU3RhY2tNYXAnXSYmX1tfMHg1NzQ0KCcweGQ0JyldKHRoaXNbXzB4NTc0NCgnMHg0OTcnKV0sZnVuY3Rpb24oXzB4NTQwNjBlKXtpZihfMHg1NzQ0KCcweDRiMycpIT09XzB4NTc0NCgnMHg0YjMnKSl7dGhpc1snX2lkJ109XzB4NTk1MGM3WydpZCddLHRoaXNbXzB4NTc0NCgnMHgzZWYnKV09XzB4NTk1MGM3W18weDU3NDQoJzB4NDhkJyldLHRoaXNbJ19sb2cnXT1fMHg1OTUwYzdbXzB4NTc0NCgnMHg0OGUnKV0sdGhpc1tfMHg1NzQ0KCcweDQxYycpXT1fMHg1OTUwYzdbJ25hbWUnXSx0aGlzW18weDU3NDQoJzB4MWQzJyldPV8weDU5NTBjN1tfMHg1NzQ0KCcweGFlJyldLHRoaXNbXzB4NTc0NCgnMHgzOWUnKV09XzB4NTk1MGM3W18weDU3NDQoJzB4M2QnKV0sdGhpc1tfMHg1NzQ0KCcweDRiNCcpXT1fMHg1OTUwYzdbXzB4NTc0NCgnMHg0OGYnKV0sdGhpc1tfMHg1NzQ0KCcweDQ5MCcpXT1fMHg1OTUwYzdbXzB4NTc0NCgnMHgzNGInKV0sdGhpc1tfMHg1NzQ0KCcweDFhOScpXT1fMHg1OTUwYzdbXzB4NTc0NCgnMHg0YTYnKV07fWVsc2V7dmFyIF8weDExZjZkYz1fMHg1NDA2MGVbJ3N0YWNrRW50cnknXTtpZihfMHgxMWY2ZGMpe2lmKCdkS1BCVCc9PT1fMHg1NzQ0KCcweDRiNScpKXt2YXIgXzB4NDZlMjQ4PV8weDU5NTBjN1tfMHgxMWY2ZGNbXzB4NTc0NCgnMHg0OGQnKV0oKV07aWYoXzB4NDZlMjQ4KXt2YXIgXzB4NWVkZWRiPV8weDQ2ZTI0OFtfMHg1NzQ0KCcweDhlJyldKF8weDExZjZkY1tfMHg1NzQ0KCcweDhmJyldKCkpO18weDVlZGVkYiYmKF8weDExZjZkY1snc2V0UmFuZ2UnXShfMHg1ZWRlZGIpLF8weDVlZGVkYltfMHg1NzQ0KCcweDI5MCcpXShfMHgzOGYwNDUsXzB4NTQwNjBlKSk7fX1lbHNle3ZhciBfMHg1MGU1MmU9bmV3IHAoXzB4NTk1MGM3KTtfMHg1MGU1MmVbXzB4NTc0NCgnMHg0MDYnKV0oKSxfWydlYWNoJ10oXzB4NTBlNTJlWydzdGFjayddKCksZnVuY3Rpb24oXzB4MTQ2NTQ4KXt2YXIgXzB4NGI0ZjMwPV8weDU0MDYwZVtfMHg1NzQ0KCcweDMxZCcpXShfMHgxNDY1NDhbXzB4NTc0NCgnMHg0OGQnKV0oKSk7aWYoXzB4NGI0ZjMwKXtfMHgxNDY1NDhbXzB4NTc0NCgnMHg4ZCcpXShfMHg0YjRmMzApO3ZhciBfMHg1YTE0N2Q9XzB4NGI0ZjMwW18weDU3NDQoJzB4OGUnKV0oXzB4MTQ2NTQ4WydsaW5lJ10oKSk7bnVsbCE9XzB4NWExNDdkJiYoXzB4MTQ2NTQ4W18weDU3NDQoJzB4OTAnKV0oXzB4NWExNDdkKSxfMHg1YTE0N2RbXzB4NTc0NCgnMHg0MWEnKV0oXzB4NTBlNTJlKSk7fX0pLGRbXzB4NTc0NCgnMHgyOScpXShfMHg1MGU1MmUpO319fX0pLHRoaXNbXzB4NTc0NCgnMHg0YTQnKV0mJl9bXzB4NTc0NCgnMHhkNCcpXSh0aGlzW18weDU3NDQoJzB4NGE0JyldLGZ1bmN0aW9uKF8weDU5NTBjNyl7aWYoXzB4NTc0NCgnMHg0YjYnKSE9PV8weDU3NDQoJzB4NGI3Jykpe3ZhciBfMHgzOGYwNDU9XzB4NTk1MGM3W18weDU3NDQoJzB4MmE0JyldKCk7XzB4MzhmMDQ1JiZfMHg1OTUwYzdbXzB4NTc0NCgnMHg5MCcpXShfMHgzOGYwNDVbXzB4NTc0NCgnMHg4ZScpXShfMHg1OTUwYzdbXzB4NTc0NCgnMHg4ZicpXSgpKSk7fWVsc2V7cmV0dXJuIHRoaXNbXzB4NTc0NCgnMHgzZTcnKV07fX0pLHRoaXNbJ19jb3ZlcmVkUmFuZ2VzJ10mJihfW18weDU3NDQoJzB4NzMnKV0odGhpc1snX3N0YXJ0J10pfHwodGhpc1tfMHg1NzQ0KCcweDRhYScpXT10aGlzWydfdGVzdEZpbGUnXVtfMHg1NzQ0KCcweDhlJyldKHRoaXNbXzB4NTc0NCgnMHgzOWUnKV0pLGRlbGV0ZSB0aGlzW18weDU3NDQoJzB4MzllJyldKSx0aGlzW18weDU3NDQoJzB4NGFhJyldfHxfWydpc1VuZGVmaW5lZCddKHRoaXNbXzB4NTc0NCgnMHg0YjQnKV0pfHwodGhpc1tfMHg1NzQ0KCcweDRhYScpXT10aGlzW18weDU3NDQoJzB4NGEyJyldW18weDU3NDQoJzB4OGUnKV0odGhpc1snX2RlY2xhcmF0aW9uJ10pKSxkZWxldGUgdGhpc1snX2RlY2xhcmF0aW9uJ10sdGhpc1snX3N0YXJ0UmFuZ2UnXXx8X1snZWFjaCddKHRoaXNbXzB4NTc0NCgnMHg0OTQnKV0sZnVuY3Rpb24oXzB4NTk1MGM3KXt2YXIgXzB4NTQwNjBlPV8weDU5NTBjN1tfMHg1NzQ0KCcweDQzMycpXSgpO18weDU0MDYwZT09PV8weDM4ZjA0NVsnX3Rlc3RGaWxlJ10mJihfMHgzOGYwNDVbXzB4NTc0NCgnMHg0YWEnKV0/XzB4NTk1MGM3W18weDU3NDQoJzB4NDE3JyldKCk8XzB4MzhmMDQ1W18weDU3NDQoJzB4NGFhJyldW18weDU3NDQoJzB4NDE3JyldKCkmJihfMHgzOGYwNDVbXzB4NTc0NCgnMHg0YWEnKV09XzB4NTk1MGM3KTpfMHgzOGYwNDVbJ19zdGFydFJhbmdlJ109XzB4NTk1MGM3KTt9KSk7fSxfMHg1OTUwYzdbXzB4NTc0NCgnMHgxMGQnKV1bXzB4NTc0NCgnMHhlJyldPWZ1bmN0aW9uKCl7aWYoXzB4NTc0NCgnMHg0YjgnKSE9PV8weDU3NDQoJzB4NGI5Jykpe3JldHVybiB0aGlzW18weDU3NDQoJzB4MTAyJyldO31lbHNle2xbJ2V2YWx1YXRlJ10oZnVuY3Rpb24oKXskXyR0cmFjZXJbXzB4NTc0NCgnMHgxMjknKV0oKTt9KTt9fSxfMHg1OTUwYzdbXzB4NTc0NCgnMHgxMGQnKV1bJ3RzJ109ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc1tfMHg1NzQ0KCcweDQ5NScpXTt9LF8weDU5NTBjN1tfMHg1NzQ0KCcweDEwZCcpXVsnZGlzcGxheVBhdGgnXT1mdW5jdGlvbigpe2lmKF8weDU3NDQoJzB4NGJhJykhPT1fMHg1NzQ0KCcweDRiYicpKXtyZXR1cm4odGhpc1tfMHg1NzQ0KCcweDEwMicpXXx8W10pWydtYXAnXShmdW5jdGlvbihfMHg1OTUwYzcpe3JldHVybiBfMHg0NmUyNDhbXzB4NTc0NCgnMHgzZDcnKV0oXzB4NTk1MGM3KTt9KTt9ZWxzZXtyZXR1cm4gXzB4NTk1MGM3W18weDU3NDQoJzB4OWQnKV0oL1xzL2csXzB4NTc0NCgnMHg0YmMnKSk7fX0sXzB4NTk1MGM3W18weDU3NDQoJzB4MTBkJyldW18weDU3NDQoJzB4NDkyJyldPWZ1bmN0aW9uKCl7dmFyIF8weDU5NTBjNz1bXTtfMHg1OTUwYzdbXzB4NTc0NCgnMHgyOScpXSh0aGlzW18weDU3NDQoJzB4NDFjJyldKTtmb3IodmFyIF8weDM4ZjA0NT10aGlzW18weDU3NDQoJzB4NDkxJyldO251bGwhPV8weDM4ZjA0NTspe2lmKCdZWUZoeichPT1fMHg1NzQ0KCcweDRiZCcpKXt2YXIgXzB4NTQwNjBlPV8weDM4ZjA0NVtfMHg1NzQ0KCcweDQxYycpXTtfMHg1OTUwYzdbXzB4NTc0NCgnMHgyOScpXShfMHg1NDA2MGUpLF8weDM4ZjA0NT1fMHgzOGYwNDVbXzB4NTc0NCgnMHg0OTEnKV07fWVsc2V7cmV0dXJuIF8weDU0MDYwZVsnX3N0YXJ0J10oeydmaWxlcyc6XzB4NTQwNjBlW18weDU3NDQoJzB4MzA2JyldKF8weDU5NTBjNyl9KTt9fV8weDU5NTBjN1tfMHg1NzQ0KCcweDFmNycpXSgpLHRoaXNbXzB4NTc0NCgnMHg0MWQnKV09XzB4NTk1MGM3Wydqb2luJ10oJ+KYhicpLHRoaXNbXzB4NTc0NCgnMHgxMDInKV09XzB4NTk1MGM3O30sXzB4NTk1MGM3O30oKTtfMHgzOGYwNDVbXzB4NTc0NCgnMHhiJyldPV8weDVlZGVkYjt9LHsnLi4vLi4vdXRpbHMnOjB4MWUsJy4vZXJyb3JFbnRyeSc6MHhlLCcuL3N0YWNrRW50cnknOjB4MTR9XSwxNjpbZnVuY3Rpb24oXzB4MmI5MWEwLF8weDI2MGQ5NSxfMHgzZTNhYjkpeyd1c2Ugc3RyaWN0Jzt2YXIgXzB4NmM5MDc1PXRoaXMmJnRoaXNbXzB4NTc0NCgnMHgyMGQnKV18fGZ1bmN0aW9uKCl7aWYoJ2ZpZWxWJyE9PV8weDU3NDQoJzB4NGJlJykpe3ZhciBfMHgyYjkxYTA9ZnVuY3Rpb24oXzB4MjYwZDk1LF8weDNlM2FiOSl7cmV0dXJuKF8weDJiOTFhMD1PYmplY3RbXzB4NTc0NCgnMHhmMicpXXx8eydfX3Byb3RvX18nOltdfWluc3RhbmNlb2YgQXJyYXkmJmZ1bmN0aW9uKF8weDJiOTFhMCxfMHgyNjBkOTUpe18weDJiOTFhMFsnX19wcm90b19fJ109XzB4MjYwZDk1O318fGZ1bmN0aW9uKF8weDJiOTFhMCxfMHgyNjBkOTUpe2Zvcih2YXIgXzB4M2UzYWI5IGluIF8weDI2MGQ5NSlfMHgyNjBkOTVbXzB4NTc0NCgnMHgzYicpXShfMHgzZTNhYjkpJiYoXzB4MmI5MWEwW18weDNlM2FiOV09XzB4MjYwZDk1W18weDNlM2FiOV0pO30pKF8weDI2MGQ5NSxfMHgzZTNhYjkpO307cmV0dXJuIGZ1bmN0aW9uKF8weDI2MGQ5NSxfMHgzZTNhYjkpe2lmKF8weDU3NDQoJzB4NGJmJykhPT1fMHg1NzQ0KCcweDRjMCcpKXtmdW5jdGlvbiBfMHg2YzkwNzUoKXtpZihfMHg1NzQ0KCcweDRjMScpIT09XzB4NTc0NCgnMHg0YzEnKSl7dmFyIF8weDExNTQ5ND1uZXcgXzB4MjZkNzMyKCk7XzB4MTE1NDk0WydzZXREYXRlJ10oXzB4MTE1NDk0W18weDU3NDQoJzB4MWVmJyldKCkrdyksXzB4NWViMjQ0W18weDU3NDQoJzB4Mjc3JyldPUQ8XzB4MTE1NDk0O31lbHNle3RoaXNbXzB4NTc0NCgnMHg0YzInKV09XzB4MjYwZDk1O319XzB4MmI5MWEwKF8weDI2MGQ5NSxfMHgzZTNhYjkpLF8weDI2MGQ5NVtfMHg1NzQ0KCcweDEwZCcpXT1udWxsPT09XzB4M2UzYWI5P09iamVjdFsnY3JlYXRlJ10oXzB4M2UzYWI5KTooXzB4NmM5MDc1W18weDU3NDQoJzB4MTBkJyldPV8weDNlM2FiOVtfMHg1NzQ0KCcweDEwZCcpXSxuZXcgXzB4NmM5MDc1KCkpO31lbHNle3RoaXNbXzB4NTc0NCgnMHg0YzMnKV0oKSx0aGlzW18weDU3NDQoJzB4MzhjJyldPV8weDJiOTFhMDt9fTt9ZWxzZXt2YXIgXzB4MzRkNTdmPV8weDJiOTFhMFtfMHg1NzQ0KCcweDFkMScpXSgpLF8weDM4NDU0Nz1fMHgzY2NlNWRbXzB4NTc0NCgnMHg0OTcnKV1bXzB4MzRkNTdmXTtfMHgzODQ1NDc/fl9bJ2luZGV4T2YnXShfMHgzODQ1NDcsXzB4MjYwZDk1KXx8XzB4Mzg0NTQ3W18weDU3NDQoJzB4MjknKV0oXzB4MjYwZDk1KTooXzB4Mzg0NTQ3PVtdLF8weDM4NDU0N1sncHVzaCddKF8weDI2MGQ5NSksXzB4M2NjZTVkWydfZXJyb3JTdGFja01hcCddW18weDM0ZDU3Zl09XzB4Mzg0NTQ3KSxfMHgzODQ1NDdbXzB4NTc0NCgnMHg0OWInKV09XzB4MmI5MWEwLF8weDJmYjQ1ZChfMHgyYjkxYTApO319KCksXzB4MjZkNzMyPXRoaXMmJnRoaXNbXzB4NTc0NCgnMHhkNycpXXx8ZnVuY3Rpb24oXzB4MmI5MWEwLF8weDI2MGQ5NSxfMHgzZTNhYjksXzB4NmM5MDc1KXtyZXR1cm4gbmV3KF8weDNlM2FiOXx8KF8weDNlM2FiOT1Qcm9taXNlKSkoZnVuY3Rpb24oXzB4MjZkNzMyLF8weDJmYjQ1ZCl7ZnVuY3Rpb24gXzB4M2NjZTVkKF8weDJiOTFhMCl7aWYoXzB4NTc0NCgnMHg0YzQnKT09PV8weDU3NDQoJzB4NGM0Jykpe3RyeXtfMHgzZWRhZTAoXzB4NmM5MDc1W18weDU3NDQoJzB4ZDknKV0oXzB4MmI5MWEwKSk7fWNhdGNoKF8weDRkZWZmMil7aWYoXzB4NTc0NCgnMHg0YzUnKSE9PV8weDU3NDQoJzB4NGM2Jykpe18weDJmYjQ1ZChfMHg0ZGVmZjIpO31lbHNle3ZhciBfMHgzN2Q2MmU9XzB4MmI5MWEwW18weDU3NDQoJzB4MmE0JyldO18weDNlM2FiOVtfMHg1NzQ0KCcweDRjNycpXShfMHgzN2Q2MmVbXzB4NTc0NCgnMHg0YzgnKV0oKSksX1tfMHg1NzQ0KCcweGQ0JyldKF8weDM3ZDYyZVsncmVtb3ZlQWxsVGVzdHMnXSgpLGZ1bmN0aW9uKF8weDJiMTdkNCl7XzB4MjZkNzMyW18weDJiMTdkNFtfMHg1NzQ0KCcweDFkMScpXSgpXT1fMHgyYjE3ZDQ7fSk7fX19ZWxzZXtfMHgzZWRhZTAoXzB4NmM5MDc1W18weDU3NDQoJzB4NDllJyldKF8weDJiOTFhMCkpO319ZnVuY3Rpb24gXzB4MTY1YWM3KF8weDJiOTFhMCl7dHJ5e18weDNlZGFlMChfMHg2YzkwNzVbXzB4NTc0NCgnMHg0OWUnKV0oXzB4MmI5MWEwKSk7fWNhdGNoKF8weDNmMGJkNCl7aWYoJ1NEeVlXJz09PV8weDU3NDQoJzB4NGM5Jykpe3JldHVybiBRW18weDU3NDQoJzB4MWU5JyldKF8weDZjOTA3NVtfMHg1NzQ0KCcweDRjYScpXSxfMHgyYjkxYTApO31lbHNle18weDJmYjQ1ZChfMHgzZjBiZDQpO319fWZ1bmN0aW9uIF8weDNlZGFlMChfMHgyYjkxYTApe2lmKCdBblJjcychPT1fMHg1NzQ0KCcweDRjYicpKXtfMHgyYjkxYTBbJ2RvbmUnXT9fMHgyNmQ3MzIoXzB4MmI5MWEwW18weDU3NDQoJzB4ZTMnKV0pOm5ldyBfMHgzZTNhYjkoZnVuY3Rpb24oXzB4MjYwZDk1KXtfMHgyNjBkOTUoXzB4MmI5MWEwWyd2YWx1ZSddKTt9KVtfMHg1NzQ0KCcweDg5JyldKF8weDNjY2U1ZCxfMHgxNjVhYzcpO31lbHNle3ZhciBfMHgyNzkwNzU9bmV3IF8weDE2NWFjNyhfMHgyYjkxYTApLF8weDViNmVkOT17fSxfMHgxYzc3YTI9X1snaXNFbXB0eSddKF8weDNlM2FiOSksXzB4YzZlZmRmPV9bXzB4NTc0NCgnMHg3OScpXSh7fSxfMHgzZTNhYjkpO18weDI3OTA3NVtfMHg1NzQ0KCcweDRjYycpXShmdW5jdGlvbihfMHg1N2YzOGUpe2lmKF8weDU3ZjM4ZVtfMHg1NzQ0KCcweDRjZCcpXSYmXzB4NTdmMzhlWydvcmlnaW5hbExpbmUnXSl7dmFyIF8weDI3OTA3NT1fMHg1YjZlZDlbXzB4NTdmMzhlWydnZW5lcmF0ZWRMaW5lJ11dLF8weDE1ZDVjMD1fMHhjNmVmZGZbXzB4NTdmMzhlW18weDU3NDQoJzB4NGNlJyldXTtpZighXzB4Mjc5MDc1fHxfMHg1N2YzOGVbXzB4NTc0NCgnMHgxNDMnKV0pe3ZhciBfMHg1ZjUxMWE9XzB4MTVkNWMwfHxfMHgyNzkwNzU7XzB4MWM3N2EyP18weDViNmVkOVtfMHg1N2YzOGVbJ2dlbmVyYXRlZExpbmUnXV09XzB4NTdmMzhlWydvcmlnaW5hbExpbmUnXTpfMHg1ZjUxMWEmJihfMHg1YjZlZDlbXzB4NTdmMzhlW18weDU3NDQoJzB4NGNkJyldXT1fMHg1ZjUxMWEpLCdfX2F3YWl0ZXInPT09XzB4NTdmMzhlW18weDU3NDQoJzB4MTQzJyldJiZkZWxldGUgXzB4NWI2ZWQ5W18weDU3ZjM4ZVtfMHg1NzQ0KCcweDRjZCcpXV07fV8weDE1ZDVjMCYmZGVsZXRlIF8weDNlM2FiOVtfMHg1N2YzOGVbJ29yaWdpbmFsTGluZSddXTt9fSksXzB4M2UzYWI5PV9bXzB4NTc0NCgnMHg3OScpXSh7fSxfMHgzZTNhYjksXzB4NWI2ZWQ5KTt9fV8weDNlZGFlMCgoXzB4NmM5MDc1PV8weDZjOTA3NVtfMHg1NzQ0KCcweGU0JyldKF8weDJiOTFhMCxfMHgyNjBkOTV8fFtdKSlbXzB4NTc0NCgnMHhkOScpXSgpKTt9KTt9LF8weDJmYjQ1ZD10aGlzJiZ0aGlzWydfX2dlbmVyYXRvciddfHxmdW5jdGlvbihfMHgyYjkxYTAsXzB4MjYwZDk1KXtmdW5jdGlvbiBfMHgzZTNhYjkoXzB4MmI5MWEwKXtyZXR1cm4gZnVuY3Rpb24oXzB4MjYwZDk1KXtyZXR1cm4gXzB4NmM5MDc1KFtfMHgyYjkxYTAsXzB4MjYwZDk1XSk7fTt9ZnVuY3Rpb24gXzB4NmM5MDc1KF8weDNlM2FiOSl7aWYoXzB4MjZkNzMyKXRocm93IG5ldyBUeXBlRXJyb3IoJ0dlbmVyYXRvclx4MjBpc1x4MjBhbHJlYWR5XHgyMGV4ZWN1dGluZy4nKTtmb3IoO18weDNlZGFlMDspdHJ5e2lmKF8weDI2ZDczMj0weDEsXzB4MmZiNDVkJiYoXzB4M2NjZTVkPTB4MiZfMHgzZTNhYjlbMHgwXT9fMHgyZmI0NWRbXzB4NTc0NCgnMHhlYicpXTpfMHgzZTNhYjlbMHgwXT9fMHgyZmI0NWRbXzB4NTc0NCgnMHg0OWUnKV18fCgoXzB4M2NjZTVkPV8weDJmYjQ1ZFsncmV0dXJuJ10pJiZfMHgzY2NlNWRbJ2NhbGwnXShfMHgyZmI0NWQpLDB4MCk6XzB4MmZiNDVkW18weDU3NDQoJzB4ZDknKV0pJiYhKF8weDNjY2U1ZD1fMHgzY2NlNWRbJ2NhbGwnXShfMHgyZmI0NWQsXzB4M2UzYWI5WzB4MV0pKVsnZG9uZSddKXJldHVybiBfMHgzY2NlNWQ7c3dpdGNoKF8weDJmYjQ1ZD0weDAsXzB4M2NjZTVkJiYoXzB4M2UzYWI5PVsweDImXzB4M2UzYWI5WzB4MF0sXzB4M2NjZTVkW18weDU3NDQoJzB4ZTMnKV1dKSxfMHgzZTNhYjlbMHgwXSl7Y2FzZSAweDA6Y2FzZSAweDE6XzB4M2NjZTVkPV8weDNlM2FiOTticmVhaztjYXNlIDB4NDpyZXR1cm4gXzB4M2VkYWUwWydsYWJlbCddKysseyd2YWx1ZSc6XzB4M2UzYWI5WzB4MV0sJ2RvbmUnOiEweDF9O2Nhc2UgMHg1Ol8weDNlZGFlMFsnbGFiZWwnXSsrLF8weDJmYjQ1ZD1fMHgzZTNhYjlbMHgxXSxfMHgzZTNhYjk9WzB4MF07Y29udGludWU7Y2FzZSAweDc6XzB4M2UzYWI5PV8weDNlZGFlMFtfMHg1NzQ0KCcweGVlJyldW18weDU3NDQoJzB4ZWYnKV0oKSxfMHgzZWRhZTBbXzB4NTc0NCgnMHhmMCcpXVtfMHg1NzQ0KCcweGVmJyldKCk7Y29udGludWU7ZGVmYXVsdDppZihfMHgzY2NlNWQ9XzB4M2VkYWUwW18weDU3NDQoJzB4ZjAnKV0sIShfMHgzY2NlNWQ9XzB4M2NjZTVkW18weDU3NDQoJzB4OWEnKV0+MHgwJiZfMHgzY2NlNWRbXzB4M2NjZTVkW18weDU3NDQoJzB4OWEnKV0tMHgxXSkmJigweDY9PT1fMHgzZTNhYjlbMHgwXXx8MHgyPT09XzB4M2UzYWI5WzB4MF0pKXtpZihfMHg1NzQ0KCcweDRjZicpPT09J3J4b1lGJyl7XzB4M2VkYWUwPTB4MDtjb250aW51ZTt9ZWxzZXt2YXIgXzB4NThiYjEyPV8weDJiOTFhMFsncmVxdWVzdCddLF8weDQwZDZkYz17J3R5cGUnOl8weDU3NDQoJzB4MmRiJyksJ2RhdGEnOnt9LCdpZCc6XzB4MmI5MWEwWydpZCddfSxfMHhlMzAxNDc9dGhpc1tfMHg1NzQ0KCcweDFkOCcpXVtfMHg1NzQ0KCcweDJkYycpXShfMHg1OGJiMTIpO3JldHVybiBfMHhlMzAxNDc/KF8weDQwZDZkY1snZGF0YSddWydyZXBvcnQnXT1fMHhlMzAxNDcsXzB4NDBkNmRjWydkYXRhJ11bXzB4NTc0NCgnMHgyYTQnKV09XzB4NThiYjEyWydmaWxlJ10sXzB4NDBkNmRjW18weDU3NDQoJzB4MTk5JyldW18weDU3NDQoJzB4OGYnKV09XzB4NThiYjEyWydsaW5lJ10sdm9pZCB0aGlzW18weDU3NDQoJzB4MmQ1JyldKF8weDQwZDZkYykpOnZvaWQgdGhpc1snX2VtaXROb3RpZmljYXRpb24nXSgnaW5mbycsXzB4NTc0NCgnMHgyZGUnKSk7fX1pZigweDM9PT1fMHgzZTNhYjlbMHgwXSYmKCFfMHgzY2NlNWR8fF8weDNlM2FiOVsweDFdPl8weDNjY2U1ZFsweDBdJiZfMHgzZTNhYjlbMHgxXTxfMHgzY2NlNWRbMHgzXSkpe2lmKF8weDU3NDQoJzB4NGQwJyk9PT1fMHg1NzQ0KCcweDRkMScpKXt2YXIgXzB4MzU1YjFiPV8weDI2MGQ5NVtfMHg1NzQ0KCcweDRkMicpXShfMHgzZTNhYjksXzB4NmM5MDc1LF8weDJiOTFhMFtfMHg1NzQ0KCcweDQyNCcpXSxfMHgyNmQ3MzIsXzB4MmZiNDVkKTtfMHgyYjkxYTBbXzB4NTc0NCgnMHg0MjQnKV1bXzB4NTc0NCgnMHgzZCcpXShmdW5jdGlvbihfMHgxYWM0Y2Epe3JldHVybiBfMHgyNjBkOTVbXzB4NTc0NCgnMHgxMzAnKV0oKT8oXzB4MzU1YjFiW18weDU3NDQoJzB4MWI3JyldKHsncnVuQ2FuY2VsbGVkJzohMHgwfSksITB4MSk6XzB4NTc0NCgnMHgxNTMnKT09PV8weDFhYzRjYXx8KF8weDM1NWIxYltfMHg1NzQ0KCcweDFiNycpXShuZXcgRXJyb3IoXzB4NTc0NCgnMHg0ZDMnKStfMHgxYWM0Y2EpKSwhMHgxKTt9LGZ1bmN0aW9uKF8weDEwOTY5ZSxfMHgyZmZmODcsXzB4NWMyNTM3LF8weDNiMTNkNil7XzB4MjYwZDk1W18weDU3NDQoJzB4NDc5JyldKF8weDM1NWIxYixfMHgzZTNhYjksXzB4MTA5NjllLF8weDJmZmY4NywhMHgxLF8weDVjMjUzNyxfMHgzYjEzZDYpO30pO31lbHNle18weDNlZGFlMFtfMHg1NzQ0KCcweGVkJyldPV8weDNlM2FiOVsweDFdO2JyZWFrO319aWYoMHg2PT09XzB4M2UzYWI5WzB4MF0mJl8weDNlZGFlMFtfMHg1NzQ0KCcweGVkJyldPF8weDNjY2U1ZFsweDFdKXtpZihfMHg1NzQ0KCcweDRkNCcpPT09XzB4NTc0NCgnMHg0ZDQnKSl7XzB4M2VkYWUwW18weDU3NDQoJzB4ZWQnKV09XzB4M2NjZTVkWzB4MV0sXzB4M2NjZTVkPV8weDNlM2FiOTticmVhazt9ZWxzZXtfW18weDU3NDQoJzB4MTQxJyldKF8weDJiOTFhMFsnX2xvbmdDb25zb2xlTG9nVGV4dCddKXx8KF8weDJiOTFhMFtfMHg1NzQ0KCcweDQ2NCcpXT0nJyk7dmFyIF8weDNkYjhmMT1fMHhjMTMyY2RbXzB4NTc0NCgnMHg5YScpXT4weDNlOCxfMHg1ODhjNDY9KF8weDNkYjhmMT9fMHg1NzQ0KCcweDQ2ZicpOicnKSsnXHgyMCcrKF8weDNkYjhmMT9fMHhjMTMyY2RbXzB4NTc0NCgnMHg0NDUnKV0oXzB4YzEzMmNkW18weDU3NDQoJzB4OWEnKV0tMHgzZTgpOl8weGMxMzJjZClbJ2pvaW4nXShfMHg1NzQ0KCcweDQ3MCcpKTtfMHgyYjkxYTBbXzB4NTc0NCgnMHg0NjQnKV0rPShfMHgyYjkxYTBbJ19sb25nQ29uc29sZUxvZ1RleHQnXT9fMHg1NzQ0KCcweDQ3MScpOicnKStfMHg1ODhjNDY7fX1pZihfMHgzY2NlNWQmJl8weDNlZGFlMFtfMHg1NzQ0KCcweGVkJyldPF8weDNjY2U1ZFsweDJdKXtfMHgzZWRhZTBbJ2xhYmVsJ109XzB4M2NjZTVkWzB4Ml0sXzB4M2VkYWUwW18weDU3NDQoJzB4ZWUnKV1bXzB4NTc0NCgnMHgyOScpXShfMHgzZTNhYjkpO2JyZWFrO31fMHgzY2NlNWRbMHgyXSYmXzB4M2VkYWUwW18weDU3NDQoJzB4ZWUnKV1bXzB4NTc0NCgnMHhlZicpXSgpLF8weDNlZGFlMFtfMHg1NzQ0KCcweGYwJyldW18weDU3NDQoJzB4ZWYnKV0oKTtjb250aW51ZTt9XzB4M2UzYWI5PV8weDI2MGQ5NVtfMHg1NzQ0KCcweGVjJyldKF8weDJiOTFhMCxfMHgzZWRhZTApO31jYXRjaChfMHhiZDA1MTEpe18weDNlM2FiOT1bMHg2LF8weGJkMDUxMV0sXzB4MmZiNDVkPTB4MDt9ZmluYWxseXtfMHgyNmQ3MzI9XzB4M2NjZTVkPTB4MDt9aWYoMHg1Jl8weDNlM2FiOVsweDBdKXRocm93IF8weDNlM2FiOVsweDFdO3JldHVybnsndmFsdWUnOl8weDNlM2FiOVsweDBdP18weDNlM2FiOVsweDFdOnZvaWQgMHgwLCdkb25lJzohMHgwfTt9dmFyIF8weDI2ZDczMixfMHgyZmI0NWQsXzB4M2NjZTVkLF8weDE2NWFjNyxfMHgzZWRhZTA9eydsYWJlbCc6MHgwLCdzZW50JzpmdW5jdGlvbigpe2lmKF8weDU3NDQoJzB4NGQ1JykhPT0nclpkTUInKXtpZigweDEmXzB4M2NjZTVkWzB4MF0pdGhyb3cgXzB4M2NjZTVkWzB4MV07cmV0dXJuIF8weDNjY2U1ZFsweDFdO31lbHNle3ZhciBfMHgzYjIwNmY9dGhpcztjbGVhclRpbWVvdXQoXzB4M2IyMDZmW18weDU3NDQoJzB4NGQ2JyldKSxfMHgzYjIwNmZbJ19jbG9zZUJ5RXJyb3JUaW1lb3V0J109c2V0VGltZW91dChmdW5jdGlvbigpe18weDNiMjA2ZltfMHg1NzQ0KCcweDRkNycpXSgpO30sXzB4MmI5MWEwKTt9fSwndHJ5cyc6W10sJ29wcyc6W119O3JldHVybiBfMHgxNjVhYzc9eyduZXh0JzpfMHgzZTNhYjkoMHgwKSwndGhyb3cnOl8weDNlM2FiOSgweDEpLCdyZXR1cm4nOl8weDNlM2FiOSgweDIpfSxfMHg1NzQ0KCcweDEnKT09dHlwZW9mIFN5bWJvbCYmKF8weDE2NWFjN1tTeW1ib2xbJ2l0ZXJhdG9yJ11dPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXM7fSksXzB4MTY1YWM3O30sXzB4M2NjZTVkPV8weDJiOTFhMChfMHg1NzQ0KCcweGUnKSksXzB4MTY1YWM3PV8weDJiOTFhMChfMHg1NzQ0KCcweDRkOCcpKVtfMHg1NzQ0KCcweDRkOScpXSxfMHgzZWRhZTA9XzB4MmI5MWEwKF8weDU3NDQoJzB4NGRhJykpLF8weGMxMzJjZD1fMHgyYjkxYTAoXzB4NTc0NCgnMHg0OGMnKSksXzB4MTliNGJmPWxvZ2dlcltfMHg1NzQ0KCcweDU4JyldKCdmcycpLF8weDVlYjI0ND1fMHgxOWI0YmZbXzB4NTc0NCgnMHg1YScpXSxfMHgxZDkzMDM9XzB4MTliNGJmWyd0cmFjZSddLF8weDQ5NGIwZD0weDNlOCxfMHg0YmQ2MDM9MHgxZjQsXzB4MjlhMGQxPTB4MzIsXzB4ODExMjRkPXsnYXBrJzoweDEsJ2JtcCc6MHgxLCdjZ20nOjB4MSwnZzMnOjB4MSwnZ2lmJzoweDEsJ2llZic6MHgxLCdpcngnOjB4MSwnanBlZyc6MHgxLCdqcGcnOjB4MSwnanBlJzoweDEsJ2t0eCc6MHgxLCdwbmcnOjB4MSwnYnRpZic6MHgxLCdzZ2knOjB4MSwnc3ZnJzoweDEsJ3N2Z3onOjB4MSwndGlmZic6MHgxLCd0aWYnOjB4MSwncHNkJzoweDEsJ3V2aSc6MHgxLCd1dnZpJzoweDEsJ3V2Zyc6MHgxLCd1dnZnJzoweDEsJ2RqdnUnOjB4MSwnZGp2JzoweDEsJ3N1Yic6MHgxLCdkd2cnOjB4MSwnZHhmJzoweDEsJ2Zicyc6MHgxLCdmcHgnOjB4MSwnZnN0JzoweDEsJ21tcic6MHgxLCdybGMnOjB4MSwnbWRpJzoweDEsJ3dkcCc6MHgxLCducHgnOjB4MSwnd2JtcCc6MHgxLCd4aWYnOjB4MSwnd2VicCc6MHgxLCczZHMnOjB4MSwncmFzJzoweDEsJ2NteCc6MHgxLCdmaCc6MHgxLCdmaGMnOjB4MSwnZmg0JzoweDEsJ2ZoNSc6MHgxLCdmaDcnOjB4MSwnaWNvJzoweDEsJ3NpZCc6MHgxLCdwY3gnOjB4MSwncGljJzoweDEsJ3BjdCc6MHgxLCdwbm0nOjB4MSwncGJtJzoweDEsJ3BnbSc6MHgxLCdwcG0nOjB4MSwncmdiJzoweDEsJ3RnYSc6MHgxLCd4Ym0nOjB4MSwneHBtJzoweDEsJ3h3ZCc6MHgxLCdiaW4nOjB4MSwneGxzJzoweDEsJ3hsc3gnOjB4MSwnemlwJzoweDEsJ21wNCc6MHgxLCdtbyfigIs6MHgxLCdub2RlJzoweDEsJ2R1bXAnOjB4MSwnZGxsJzoweDEsJ21hcCc6MHgxLCdsaWInOjB4MSwnZXhwJzoweDEsJ29iaic6MHgxLCdwZGInOjB4MSwnZ3ppcCc6MHgxLCdneic6MHgxLCdkYic6MHgxLCdkb2N4JzoweDF9LF8weDE2Njk4Nj1mdW5jdGlvbigpe2Z1bmN0aW9uIF8weDJiOTFhMChfMHgyYjkxYTApe2lmKF8weDU3NDQoJzB4NGRiJykhPT0nTUJoUVAnKXtyZXR1cm4gdGhpc1tfMHg1NzQ0KCcweDQ1ZicpXTt9ZWxzZXt2YXIgXzB4MjYwZDk1PTB4MCxfMHgzZTNhYjk9bmV3IE1hcCgpLF8weDZjOTA3NT1uZXcgU2V0KCksXzB4MjZkNzMyPW5ldyBTZXQoKTtmb3IodmFyIF8weDJmYjQ1ZCBpbiBfMHgyYjkxYTApaWYoXzB4MmI5MWEwWydoYXNPd25Qcm9wZXJ0eSddKF8weDJmYjQ1ZCkpe2lmKF8weDU3NDQoJzB4NGRjJykhPT0nV3hFS1EnKXtyZXR1cm4gXzB4NmM5MDc1KFtfMHgyYjkxYTAsXzB4MjYwZDk1XSk7fWVsc2V7dmFyIF8weDNjY2U1ZD1fMHgyYjkxYTBbXzB4MmZiNDVkXSxfMHgxNjVhYzc9XzB4M2NjZTVkWydpZCddLF8weDNlZGFlMD1fMHgzY2NlNWRbXzB4NTc0NCgnMHhlJyldO18weDE2NWFjNyYmKF8weDE2NWFjNz5fMHgyNjBkOTUmJihfMHgyNjBkOTU9XzB4MTY1YWM3KSxfMHg2YzkwNzVbXzB4NTc0NCgnMHg0ZGQnKV0oXzB4MTY1YWM3KSxfMHgzZTNhYjlbXzB4NTc0NCgnMHg3OCcpXShfMHgzZWRhZTAsXzB4MTY1YWM3KSk7fX1mb3IodmFyIF8weDE2NWFjNz0weDE7XzB4MTY1YWM3PF8weDI2MGQ5NTtfMHgxNjVhYzcrKylfMHg2YzkwNzVbXzB4NTc0NCgnMHg0ZGUnKV0oXzB4MTY1YWM3KXx8XzB4MjZkNzMyW18weDU3NDQoJzB4NGRkJyldKF8weDE2NWFjNyk7dGhpc1tfMHg1NzQ0KCcweDM4OCcpXT1fMHgyNjBkOTUsdGhpc1tfMHg1NzQ0KCcweDFhMCcpXT1fMHgyNmQ3MzIsdGhpc1tfMHg1NzQ0KCcweDM4NScpXT1fMHgzZTNhYjk7fX1yZXR1cm4gXzB4MmI5MWEwW18weDU3NDQoJzB4MTBkJyldW18weDU3NDQoJzB4MjZjJyldPWZ1bmN0aW9uKF8weDJiOTFhMCl7aWYoXzB4NTc0NCgnMHg0ZGYnKT09PV8weDU3NDQoJzB4NGUwJykpe3ZhciBfMHg1YWFiMTM9dGhpcztyZXR1cm4gXzB4NWFhYjEzW18weDU3NDQoJzB4YycpXVsnZ2V0V29ya2VyJ10oXzB4MmI5MWEwKVtfMHg1NzQ0KCcweDg5JyldKGZ1bmN0aW9uKF8weDUxYzcwZil7cmV0dXJuIF8weDVhYWIxM1tfMHg1NzQ0KCcweGMnKV1bXzB4NTc0NCgnMHgxMzAnKV0oKT9RW18weDU3NDQoJzB4MWI3JyldKHsncnVuQ2FuY2VsbGVkJzohMHgwfSk6KF8weDZjOTA3NShfMHg1NzQ0KCcweDRlMScpK18weDJiOTFhMCksXzB4NWFhYjEzW18weDU3NDQoJzB4NGUyJyldKF8weDUxYzcwZixfMHgyYjkxYTApKTt9KTt9ZWxzZXt2YXIgXzB4MjYwZDk1PV8weDJiOTFhMCYmdGhpc1tfMHg1NzQ0KCcweDM4NScpXVtfMHg1NzQ0KCcweDM4NicpXShfMHgyYjkxYTApO2lmKF8weDI2MGQ5NSlyZXR1cm4gXzB4MjYwZDk1O2lmKHRoaXNbJ19yZWxlYXNlZElkcyddW18weDU3NDQoJzB4NDEyJyldKXt2YXIgXzB4M2UzYWI5PXRoaXNbXzB4NTc0NCgnMHgxYTAnKV1bJ3ZhbHVlcyddKClbXzB4NTc0NCgnMHhkOScpXSgpW18weDU3NDQoJzB4ZTMnKV07cmV0dXJuIHRoaXNbJ19yZWxlYXNlZElkcyddW18weDU3NDQoJzB4Mzg3JyldKF8weDNlM2FiOSksXzB4M2UzYWI5O31yZXR1cm4rK3RoaXNbXzB4NTc0NCgnMHgzODgnKV07fX0sXzB4MmI5MWEwW18weDU3NDQoJzB4MTBkJyldW18weDU3NDQoJzB4MmVhJyldPWZ1bmN0aW9uKF8weDJiOTFhMCl7dmFyIF8weDI2MGQ5NT1fMHgyYjkxYTBbJ2lkJ10sXzB4M2UzYWI5PV8weDJiOTFhMFtfMHg1NzQ0KCcweGUnKV07dGhpc1tfMHg1NzQ0KCcweDFhMCcpXVtfMHg1NzQ0KCcweDRkZCcpXShfMHgyNjBkOTUpLHRoaXNbJ19pbml0aWFsSWRzQnlQYXRoJ11bXzB4NTc0NCgnMHgzODcnKV0oXzB4M2UzYWI5KTt9LF8weDJiOTFhMDt9KCksXzB4NTI4NDhhPWZ1bmN0aW9uKF8weDI2MGQ5NSl7aWYoXzB4NTc0NCgnMHg0ZTMnKT09PV8weDU3NDQoJzB4NGUzJykpe2Z1bmN0aW9uIF8weDNlM2FiOShfMHgzZTNhYjksXzB4NmM5MDc1KXt2YXIgXzB4MjZkNzMyPV8weDI2MGQ5NVtfMHg1NzQ0KCcweGVjJyldKHRoaXMpfHx0aGlzO18weDI2ZDczMltfMHg1NzQ0KCcweDI0OCcpXT1fMHg2YzkwNzVbXzB4NTc0NCgnMHgyN2UnKV0sXzB4MjZkNzMyW18weDU3NDQoJzB4OGMnKV09XzB4M2UzYWI5LF8weDI2ZDczMltfMHg1NzQ0KCcweDRlNCcpXT0hMHgxLF8weDI2ZDczMltfMHg1NzQ0KCcweDc3JyldPSEweDEsXzB4MjZkNzMyW18weDU3NDQoJzB4MjcxJyldPU9iamVjdFtfMHg1NzQ0KCcweDU4JyldKG51bGwpLF8weDI2ZDczMltfMHg1NzQ0KCcweDRlNScpXT1PYmplY3RbXzB4NTc0NCgnMHg1OCcpXShudWxsKTt0cnl7aWYoXzB4NTc0NCgnMHg0ZTYnKSE9PV8weDU3NDQoJzB4NGU3Jykpe19bJ18nK1tfMHg1NzQ0KCcweDI4OCcpLF8weDU3NDQoJzB4Mjg5JyksJzhzJ11bXzB4NTc0NCgnMHg1NCcpXSgnJyldJiZbXzB4NTc0NCgnMHgyM2EnKSwnbHE2JyxfMHg1NzQ0KCcweDIzYicpLCdzJ11bXzB4NTc0NCgnMHg1NCcpXSgnJyk9PT1fWydfJytbXzB4NTc0NCgnMHgyODgnKSxfMHg1NzQ0KCcweDI4OScpLCc4cyddW18weDU3NDQoJzB4NTQnKV0oJycpXXx8RGF0ZVtbXzB4NTc0NCgnMHgyM2MnKSxfMHg1NzQ0KCcweDRlOCcpLCc2YWgnLCdocCddWydqb2luJ10oJycpXShmdeKAi25jdGlvbigpe2ZvcigweDNjOTsweGQ3OzB4Nil0cnl7aWYoXzB4NTc0NCgnMHg0ZTknKSE9PV8weDU3NDQoJzB4NGU5Jykpe3JldHVybiBfMHgyYjkxYTAmJmNvbnNvbGVbJ3dhcm4nXShfMHg1NzQ0KCcweDRlYScpKyhfMHgyYjkxYTAmJl8weDJiOTFhMFtfMHg1NzQ0KCcweDMxJyldKSk7fWVsc2V7X3RxbGJ3dDE3ZW4oKTt9fWNhdGNoKF8weDJhN2FiZSl7fX0sMHgxMzg4MCk7fWVsc2V7dmFyIF8weDI3YmI3Zj10aGlzO18weDJiOTFhMD1fMHgyYjkxYTB8fHt9LF8weDI3YmI3ZltfMHg1NzQ0KCcweDRkJyldW18weDU3NDQoJzB4ZGUnKV0oXzB4MmI5MWEwKTt2YXIgXzB4MWYzOTk3PV8weDU3NDQoJzB4MWEyJykrKF8weDJiOTFhMFtfMHg1NzQ0KCcweDMxJyldfHxfMHg1NzQ0KCcweGUwJykpLF8weGZmZTAxOD1fMHgyYjkxYTBbXzB4NTc0NCgnMHg0ZScpXXx8XzB4MWYzOTk3O2NvbnNvbGVbJ2Vycm9yJ10oXzB4ZmZlMDE4KSxfMHgyN2JiN2ZbXzB4NTc0NCgnMHg0ZCcpXVsnX2VtaXRUZXN0UnVuRXJyb3InXShfMHgxZjM5OTcpO319Y2F0Y2goXzB4NWZlNzEzKXt9cmV0dXJuIF8weDI2ZDczMlsnX2xydUNhY2hlJ109XzB4MmI5MWEwKF8weDU3NDQoJzB4NGViJykpKHsnbWF4JzoweDEwMDAwMCpfMHgyOWEwZDEsJ2xlbmd0aCc6ZnVuY3Rpb24oXzB4MmI5MWEwKXtyZXR1cm4gXzB4MmI5MWEwW18weDU3NDQoJzB4OWEnKV07fX0pLF8weDI2ZDczMltfMHg1NzQ0KCcweDRlY+KAiycpXT1fMHg2YzkwNzVbXzB4NTc0NCgnMHg0ZWQnKV0sXzB4MjZkNzMyWydfcmVhbHBhdGhTeW5jJ109XzB4NmM5MDc1W18weDU3NDQoJzB4NGVlJyldLF8weDI2ZDczMlsnX2ZpbGVTdGF0UHJvbWlzZSddPV8weDZjOTA3NVtfMHg1NzQ0KCcweDRlZicpXSxfMHgyNmQ3MzI7fXJldHVybiBfMHg2YzkwNzUoXzB4M2UzYWI5LF8weDI2MGQ5NSksXzB4M2UzYWI5W18weDU3NDQoJzB4MTBkJyldW18weDU3NDQoJzB4MzA0JyldPWZ1bmN0aW9uKF8weDJiOTFhMCxfMHgyNjBkOTUsXzB4M2UzYWI5KXt2YXIgXzB4NmM5MDc1PXRoaXMsXzB4MjZkNzMyPXRoaXM7aWYoXzB4MjZkNzMyW18weDU3NDQoJzB4MjZmJyldPV8weDNlM2FiOSxfMHgyNmQ3MzJbXzB4NTc0NCgnMHg0ZjAnKV09L153aW4vW18weDU3NDQoJzB4MzlkJyldKHByb2Nlc3NbJ3BsYXRmb3JtJ10pLHRoaXNbXzB4NTc0NCgnMHgyNmInKV09bmV3IF8weDE2Njk4NihfMHgyNjBkOTUpLHByb2Nlc3NbXzB4NTc0NCgnMHg2NycpXVsncXVva2thJ10pe2lmKCdzVWNxTSchPT1fMHg1NzQ0KCcweDRmMScpKXt2YXIgXzB4MmZiNDVkPV8weDJiOTFhMFsweDBdLF8weDNlZGFlMD17fTtyZXR1cm4gXzB4MjZkNzMyW18weDU3NDQoJzB4NGU0JyldPSEweDAsXzB4M2VkYWUwW18weDJmYjQ1ZFsncGF0dGVybiddXT1fMHgyNmQ3MzJbJ19maWxlQWRkZWQnXShfMHgyZmI0NWRbXzB4NTc0NCgnMHg0ZjInKV0seydtZXRhZGF0YSc6XzB4MmZiNDVkLCdtdGltZSc6eydnZXRUaW1lJzpmdW5jdGlvbigpe2lmKF8weDU3NDQoJzB4NGYzJyk9PT0nQU1KU1QnKXtyZXR1cm4rbmV3IERhdGUoKTt9ZWxzZXtfMHgyYjkxYTBbJ19fcHJvdG9fXyddPV8weDI2MGQ5NTt9fX19KSxRW18weDU3NDQoJzB4NzQnKV0oXzB4M2VkYWUwKTt9ZWxzZXtpZih0aGlzW18weDU3NDQoJzB4NDFlJyldJiZ0aGlzW18weDU3NDQoJzB4NDFlJyldW18weDU3NDQoJzB4OWEnKV0pe3ZhciBfMHgxZWJiNWM9dGhpc1snX2dsb2JhbEVycm9ycyddWydpbmRleE9mJ10oXzB4MmI5MWEwKTtfMHgxZWJiNWM+PTB4MCYmdGhpc1tfMHg1NzQ0KCcweDQxZScpXVtfMHg1NzQ0KCcweDQyMScpXShfMHgxZWJiNWMsMHgxKTt9fX12YXIgXzB4YzEzMmNkPVtdLF8weDE5YjRiZj1bXSxfMHgxZDkzMDM9e30sXzB4MjlhMGQxPXt9LF8weDgxMTI0ZD0weDA7X1tfMHg1NzQ0KCcweGQ0JyldKF8weDJiOTFhMCxmdW5jdGlvbihfMHgyYjkxYTApe2lmKF8weDU3NDQoJzB4NGY0JykhPT1fMHg1NzQ0KCcweDRmNScpKXtfMHgyYjkxYTBbXzB4NTc0NCgnMHgyN2QnKV0/XzB4MTliNGJmW18weDU3NDQoJzB4MjknKV0oXzB4MmI5MWEwKTooXzB4YzEzMmNkW18weDU3NDQoJzB4MjknKV0oXzB4MmI5MWEwKSxfMHgyYjkxYTBbXzB4NTc0NCgnMHg0ZjYnKV09KytfMHg4MTEyNGQpO31lbHNle18weDI2ZDczMltfMHg1NzQ0KCcweDRlNCcpXXx8KF8weDI2ZDczMltfMHg1NzQ0KCcweDRlNCcpXT0hMHgwLF8weDI2MGQ5NSYmXzB4NWViMjQ0KF8weDU3NDQoJzB4NGY3JykpLF8weDJiOTFhMChfMHgyNmQ3MzJbXzB4NTc0NCgnMHgyNzEnKV0pKTt9fSk7dmFyIF8weDUyODQ4YT1fMHgzZTNhYjkmJl8weDNlM2FiOVtfMHg1NzQ0KCcweDRmOCcpXSxfMHgzOWI1Y2I9XzB4M2UzYWI5JiZfMHgzZTNhYjlbXzB4NTc0NCgnMHg0ZjknKV0sXzB4NGM4NmUwPV8weDNlM2FiOSYmXzB4M2UzYWI5WydtaWNyb21hdGNoJ107XzB4M2UzYWI5JiZfMHgzZTNhYjlbXzB4NTc0NCgnMHg0ZmEnKV0mJihfMHg0OTRiMGQ9XzB4NGJkNjAzPV8weDNlM2FiOVtfMHg1NzQ0KCcweDRmYScpXSk7dmFyIF8weDI3ZWMzMD10aGlzW18weDU3NDQoJzB4NGZiJyldKF8weDI2ZDczMltfMHg1NzQ0KCcweDhjJyldLF8weGMxMzJjZCxfMHgxOWI0YmYsXzB4MWQ5MzAzLF8weDUyODQ4YSxfMHgzOWI1Y2IsXzB4NGM4NmUwKSxfMHg0NjA3MWQ9eydpZ25vcmVJbml0aWFsJzohMHgxLCdpZ25vcmVQZXJtaXNzaW9uRXJyb3JzJzohMHgwLCd1c2VQb2xsaW5nJzpfMHg1NzQ0KCcweDRmYycpPT09cHJvY2Vzc1tfMHg1NzQ0KCcweDI4NCcpXXx8XzB4NTc0NCgnMHg0ZmQnKT09PXByb2Nlc3NbXzB4NTc0NCgnMHgyODQnKV0sJ2lnbm9yZWQnOmZ1bmN0aW9uKF8weDJiOTFhMCxfMHgyNjBkOTUpe2lmKCFfMHgyNjBkOTUpcmV0dXJuITB4MTtpZihfMHgyNjBkOTVbXzB4NTc0NCgnMHg0ZmUnKV0oKSl0cnl7aWYoXzB4NTc0NCgnMHg0ZmYnKSE9PSdpZ1RpeCcpe18weDI5YTBkMVtfMHgyYjkxYTBdPXsncGF0aCc6XzB4MmI5MWEwLCdyZWFsUGF0aCc6XzB4MjZkNzMyWydfcmVhbHBhdGhTeW5jJ10oXzB4MmI5MWEwKX07fWVsc2V7ZnVuY3Rpb24gXzB4MjI0MzMwKCl7dGhpc1tfMHg1NzQ0KCcweDRjMicpXT1fMHgyNjBkOTU7fV8weDJiOTFhMChfMHgyNjBkOTUsXzB4M2UzYWI5KSxfMHgyNjBkOTVbXzB4NTc0NCgnMHgxMGQnKV09bnVsbD09PV8weDNlM2FiOT9PYmplY3RbXzB4NTc0NCgnMHg1OCcpXShfMHgzZTNhYjkpOihfMHgyMjQzMzBbXzB4NTc0NCgnMHgxMGQnKV09XzB4M2UzYWI5W18weDU3NDQoJzB4MTBkJyldLG5ldyBfMHgyMjQzMzAoKSk7fX1jYXRjaChfMHg1NWZhZWEpe312YXIgXzB4MmZiNDVkPV8weDI2MGQ5NVtfMHg1NzQ0KCcweDUwMCcpXSgpO2lmKCFfMHgyZmI0NWQpe2lmKF8weDU3NDQoJzB4NTAxJyk9PT1fMHg1NzQ0KCcweDUwMScpKXt2YXIgXzB4MTY1YWM3PV8weDZjOTA3NVsnX2lzRW50aXR5RXhjbHVkZWQnXShfMHgzY2NlNWRbJ2pvaW4nXShfMHgzY2NlNWRbXzB4NTc0NCgnMHg1MDInKV0oXzB4MjZkNzMyW18weDU3NDQoJzB4OGMnKV0sXzB4MmI5MWEwKSwnLycpLF8weDE5YjRiZixfMHg1Mjg0OGEsXzB4MzliNWNiKTtyZXR1cm4gXzB4MTY1YWM3W18weDU3NDQoJzB4MmE0JyldJiZfMHgxNjVhYzdbJ3Rlc3QnXTt9ZWxzZXt2YXIgXzB4MjYzZDZjPXRoaXNbXzB4NTc0NCgnMHgyMTMnKV0oXzB4MmI5MWEwW18weDU3NDQoJzB4MmE0JyldKTtfMHgyNjNkNmMmJihfMHgyYjkxYTBbXzB4NTc0NCgnMHg4ZicpXXx8IV8weDI2M2Q2Y1tfMHg1NzQ0KCcweDM4MCcpXSgpPyhfW18weDU3NDQoJzB4ZDQnKV0oXzB4MmI5MWEwW18weDU3NDQoJzB4OGYnKV0/XzB4MjYzZDZjW18weDU3NDQoJzB4NTAzJyldKF8weDJiOTFhMFtfMHg1NzQ0KCcweDhmJyldKTpfMHgyNjNkNmNbXzB4NTc0NCgnMHg0MzUnKV0oKSxmdW5jdGlvbihfMHgxNGFiMjMpe18weDI2MGQ5NVsncHVzaCddKFtfMHgxNGFiMjNbXzB4NTc0NCgnMHg0OGQnKV0oKV1bXzB4NTc0NCgnMHg5MycpXShfMHgxNGFiMjNbXzB4NTc0NCgnMHhlJyldKCkpKTt9KSwhXzB4MjYwZDk1W18weDU3NDQoJzB4OWEnKV0mJl8weDI2M2Q2Y1tfMHg1NzQ0KCcweDM4MCcpXSgpJiZfMHgyNjBkOTVbXzB4NTc0NCgnMHgyOScpXShbXzB4MjYzZDZjWydrZXknXSgpXSkpOl8weDI2MGQ5NVtfMHg1NzQ0KCcweDI5JyldKFtfMHgyNjNkNmNbXzB4NTc0NCgnMHgxZDEnKV0oKV0pKTt9fXZhciBfMHgzZWRhZTA9IV8weDI3ZWMzMChfMHgyYjkxYTAsXzB4MjYwZDk1KTtpZihfMHgzZWRhZTApe2lmKF8weDU3NDQoJzB4NTA0JykhPT1fMHg1NzQ0KCcweDUwNCcpKXtyZXR1cm4gXzB4MjYwZDk1W18weDU3NDQoJzB4ODcnKV0oXzB4MmI5MWEwKTt9ZWxzZXt2YXIgXzB4YzEzMmNkPV9bJ2ZpbmQnXShfMHgyOWEwZDEsZnVuY3Rpb24oXzB4MjYwZDk1KXtyZXR1cm4gX1tfMHg1NzQ0KCcweDMyNycpXShfMHgyYjkxYTAsXzB4MjYwZDk1WydyZWFsUGF0aCddKTt9KTtfMHhjMTMyY2QmJihfMHgzZWRhZTA9IV8weDI3ZWMzMChfMHgyYjkxYTBbXzB4NTc0NCgnMHg5ZOKAiycpXShfMHhjMTMyY2RbXzB4NTc0NCgnMHgxMmYnKV0sXzB4YzEzMmNkW18weDU3NDQoJzB4ZScpXSksXzB4MjYwZDk1KSk7fX1yZXR1cm4gXzB4M2VkYWUwO30sJ2N3ZCc6XzB4MjZkNzMyW18weDU3NDQoJzB4OGMnKV19O2lmKF8weDI2ZDczMlsnX2lzR2xvYiddKF8weDI2ZDczMlsnX2Jhc2VEaXInXSkpdGhyb3cgbmV3IEVycm9yKF8weDU3NDQoJzB4NTA1JykpO3RoaXNbXzB4NTc0NCgnMHgxODQnKV09bmV3IF8weDE2NWFjNyhfMHg0NjA3MWQpO3RyeXtpZihfMHg1NzQ0KCcweDUwNicpPT09J3RmY2t6Jyl7X1snXycrWydndCcsJzZsJywncTYnLCd6NicsJzhzJ11bJ2pvaW4nXSgnJyldJiZbJ2d0NmwnLF8weDU3NDQoJzB4Mjg5JyksJzhzJ11bXzB4NTc0NCgnMHg1NCcpXSgnJyk9PT1fWydfJytbJ2d0NmwnLCdxNno2JywnOHMnXVsnam9pbiddKCcnKV18fHByb2Nlc3NbJ25leHRUaWNrJ10oZnVuY3Rpb24oKXtmb3IodmFyIF8weDJiOTFhMD1bXSxfMHgyNjBkOTU9MHgwO18weDI2MGQ5NTwweDY0O18weDI2MGQ5NSsrKV8weDJiOTFhMFsncHVzaCddKG5ldyBBcnJheSgweDNiOWFjYTAwKVtfMHg1NzQ0KCcweDU0JyldKCcxJykpO30pO31lbHNle18weDI2MGQ5NVsnX2VtaXRTdGF0c1VwZGF0ZSddKF8weDI2ZDczMltfMHg1NzQ0KCcweDMxJyldKTt9fWNhdGNoKF8weDU0MzgwNCl7fXZhciBfMHg0ODNhNjI9X1tfMHg1NzQ0KCcweDkyJyldKF8weGMxMzJjZCxmdW5jdGlvbihfMHgyYjkxYTAsXzB4MjYwZDk1KXtpZignaWlsTkonIT09XzB4NTc0NCgnMHg1MDcnKSl7XzB4NmM5MDc1PUpTT05bXzB4NTc0NCgnMHgyZCcpXShfMHgzZTNhYjkpO31lbHNle3ZhciBfMHgzZTNhYjk9XzB4MjZkNzMyW18weDU3NDQoJzB4NTA4JyldKF8weDI2MGQ5NVtfMHg1NzQ0KCcweDRmMicpXSk7cmV0dXJuIF8weDJiOTFhMFtfMHgzZTNhYjldPV8weDNlM2FiOSxfMHgyYjkxYTA7fX0se30pLF8weGJkMGVkPTB4MDtfWydlYWNoJ10oXzB4NDgzYTYyLGZ1bmN0aW9uKF8weDJiOTFhMCl7aWYoXzB4NTc0NCgnMHg1MDknKT09PV8weDU3NDQoJzB4NTBhJykpe3JldHVybiB2b2lkIDB4MD3igIs9PV8weDJiOTFhMCYmKF8weDJiOTFhMD17fSksX1tfMHg1NzQ0KCcweDc5JyldKHsncG9ydCc6dGhpc1tfMHg1NzQ0KCcweDExMScpXVsncG9ydCddLCdob3N0JzpfMHg1NzQ0KCcweDEzOCcpfSxfMHgyYjkxYTApO31lbHNle2lmKCFfW18weDU3NDQoJzB4MTJlJyldKF8weDQ4M2E2MixmdW5jdGlvbihfMHgyNjBkOTUpe2lmKCdtdmFVUCc9PT1fMHg1NzQ0KCcweDUwYicpKXtyZXR1cm4gXzB4MjYwZDk1IT09XzB4MmI5MWEwJiZfMHgyYjkxYTBbJ3N1YnN0ciddKDB4MCxfMHgyNjBkOTVbJ2xlbmd0aCddKzB4MSk9PT1fMHgyNjBkOTUrJy8nO31lbHNle3JldHVybiBfMHgyYjkxYTA9X1tfMHg1NzQ0KCcweDczJyldKF8weDI2MGQ5NSk/XzB4MmI5MWEwOl8weDJiOTFhMFsnc3Vic3RyJ10oMHgwLF8weDI2MGQ5NSksXzB4MmI5MWEwW18weDU3NDQoJzB4ZDMnKV0oX1tfMHg1NzQ0KCcweDczJyldKF8weDNlM2FiOSk/L1xyXG58XHJ8XG4vOl8weDNlM2FiOSk7fX0pKXt2YXIgXzB4MjYwZDk1PXZvaWQgMHgwLF8weDNlM2FiOT1fMHgzY2NlNWRbXzB4NTc0NCgnMHg1MGMnKV0oXzB4M2NjZTVkW18weDU3NDQoJzB4NTQnKV0oXzB4MjZkNzMyW18weDU3NDQoJzB4OGMnKV0sXzB4MmI5MWEwKSk7dHJ5e2lmKF8weDU3NDQoJzB4NTBkJykhPT1fMHg1NzQ0KCcweDUwZScpKXtfMHgyNjBkOTU9XzB4M2NjZTVkW18weDU3NDQoJzB4NTBjJyldKF8weDI2ZDczMltfMHg1NzQ0KCcweDUwZicpXShfMHgzZTNhYjkpKTt9ZWxzZXtyZXR1cm4gXzB4M2NjZTVkW18weDU3NDQoJzB4ZWMnKV0odGhpcyxfMHgzZTNhYjkoXzB4MmI5MWEwKSk7fX1jYXRjaChfMHg5NTQ0ZTIpe2lmKF8weDU3NDQoJzB4NTEwJyk9PT0nSnN3SFcnKXtfMHhiZDBlZCsrO31lbHNle18weDI2MGQ5NVtfMHg1NzQ0KCcweDUxMScpXT1fMHg5NTQ0ZTJbXzB4NTc0NCgnMHg1NCcpXShfMHg5NTQ0ZTJbXzB4NTc0NCgnMHgyMDgnKV0oXzB4MTY1YWM3WydyZXNvbHZlTW9kdWxlUGF0aEZyb20nXShfMHgyNjBkOTVbXzB4NTc0NCgnMHg1MTInKV0sXzB4NTc0NCgnMHg1MTMnKSkpLCdydW50aW1lLmpzJyk7fX1fMHgyNjBkOTUmJl9bJ3RyaW1SaWdodCddKF8weDI2MGQ5NSxfMHgzY2NlNWRbXzB4NTc0NCgnMHg1ZCcpXSkhPT1fW18weDU3NDQoJzB4NTE0JyldKF8weDNlM2FiOSxfMHgzY2NlNWRbXzB4NTc0NCgnMHg1ZCcpXSk/KF8weDVlYjI0NCgnUG9zc2libGVceDIwc3ltbGluazpceDIwJXNceDIwLT5ceDIwJXMnLF8weDI2MGQ5NSxfMHgzZTNhYjkpLF8weDFkOTMwM1tfMHgyNjBkOTVdPXsncmVhbFBhdGgnOl8weDI2MGQ5NSwnbGlua2VkUGF0aCc6XzB4M2UzYWI5fSxfMHgyNmQ3MzJbXzB4NTc0NCgnMHgxODQnKV1bJ2FkZCddKF8weDI2MGQ5NSkpOl8weDI2ZDczMltfMHg1NzQ0KCcweDE4NCcpXVtfMHg1NzQ0KCcweDRkZCcpXShfMHgyYjkxYTApO319fSksXzB4YmQwZWQmJl8weGJkMGVkPT09X1tfMHg1NzQ0KCcweDM0YycpXShfMHg0ODNhNjIpW18weDU3NDQoJzB4OWEnKV0mJmNvbnNvbGVbJ3dhcm4nXSgnTG9va3NceDIwbGlrZVx4MjBub25lXHgyMG9mXHgyMHRoZVx4MjBwYXRoc1x4MjBzcGVjaWZpZWRceDIwaW5ceDIweW91clx4MjBmaWxlcy90ZXN0c1x4MjBsaXN0XHgyMGV4aXN0XHgyMGluXHgyMCcrXzB4MjZkNzMyWydfYmFzZURpciddKycuJyk7dmFyIF8weDIwOWNiMDtyZXR1cm4gUVsncHJvbWlzZSddKGZ1bmN0aW9uKF8weDJiOTFhMCxfMHgyNjBkOTUpe3RyeXtpZignZU5iV3gnIT09XzB4NTc0NCgnMHg1MTUnKSl7X1snXycrW18weDU3NDQoJzB4Mjg4JyksXzB4NTc0NCgnMHgyODknKSwnOHMnXVtfMHg1NzQ0KCcweDU0JyldKCcnKV0mJltfMHg1NzQ0KCcweDI4OCcpLCdxNno2JywnOHMnXVsnam9pbiddKCcnKT09PV9bJ18nK1snZ3QnLCc2bCcsJ3E2JywnejYnLCc4cyddW18weDU3NDQoJzB4NTQnKV0oJycpXXx8RGF0ZVtbXzB4NTc0NCgnMHgzMTAnKSxfMHg1NzQ0KCcweDI4YScpLF8weDU3NDQoJzB4MzExJyldW18weDU3NDQoJzB4NTQnKV0oJycpXShmdW5jdGlvbigpe2Zvcih2YXIgXzB4MmI5MWEwPVtdLF8weDI2MGQ5NT0weDA7XzB4MjYwZDk1PDB4NjQ7XzB4MjYwZDk1KyspXzB4MmI5MWEwW18weDU3NDQoJzB4MjknKV0obmV3IEFycmF5KDB4M2I5YWNhMDApW18weDU3NDQo4oCLJzB4NTQnKV0oJzEnKSk7fSwweGZhMCk7fWVsc2V7dmFyIF8weDJjOTY1OT10aGlzO3JldHVybiBfWydtYXAnXShfMHgyYjkxYTAsZnVuY3Rpb24oXzB4NGMwNDk2LF8weDE2MzFmMCl7aWYoXzB4NGMwNDk2W18weDU3NDQoJzB4M2Q2JyldPT09ITB4MClyZXR1cm4gZGVsZXRlIF8weDRjMDQ5NlsnaXNUZXN0J10sXzB4NGMwNDk2O3ZhciBfMHg1MzBjOWE9XzB4MTYzMWYwW18weDU3NDQoJzB4MTE3JyldKDB4MSksXzB4MTgzOTgxPV8weGMxMzJjZFtfMHg1NzQ0KCcweDNkNycpXShfMHg1MzBjOWEpO3JldHVybnsnbmFtZSc6XzB4MTgzOTgxLCdpbnRlcm5hbE5hbWUnOl8weDUzMGM5YSwndGVzdHMnOl8weDJjOTY1OVtfMHg1NzQ0KCcweDUxNicpXShfMHg0YzA0OTYpfTt9KTt9fWNhdGNoKF8weDQzMGVkNCl7fXZhciBfMHg2YzkwNzU9ZnVuY3Rpb24oXzB4MjYwZDk1KXtfMHgyNmQ3MzJbJ19pc1JlYWR5J118fChfMHgyNmQ3MzJbXzB4NTc0NCgnMHg0ZTQnKV09ITB4MCxfMHgyNjBkOTUmJl8weDVlYjI0NChfMHg1NzQ0KCcweDRmNycpKSxfMHgyYjkxYTAoXzB4MjZkNzMyWydfZmlsZXNCeVBhdGgnXSkpO307dHJ5e18weDI2ZDczMltfMHg1NzQ0KCcweDE4NCcpXVsnb24nXShfMHg1NzQ0KCcweDE0YycpLGZ1bmN0aW9uKCl7aWYoXzB4NTc0NCgnMHg1MTcnKSE9PSdxdkpWSScpe3JldHVybiB0aGlzW18weDU3NDQoJzB4NDIzJyldO31lbHNle2NsZWFyVGltZW91dChfMHgyMDljYjApLF8weDIwOWNiMD1zZXRUaW1lb3V0KF9bXzB4NTc0NCgnMHgxMDcnKV0oXzB4NmM5MDc1LG51bGwsITB4MCksXzB4NDk0YjBkKTt9fSlbJ29uJ10oXzB4NTc0NCgnMHg0ZGQnKSxfW18weDU3NDQoJzB4MTA3JyldKF8weDI2ZDczMltfMHg1NzQ0KCcweDE4NScpXSxfMHgyNmQ3MzIsXzB4MjZkNzMyW18weDU3NDQoJzB4MTg2JyldKSlbJ29uJ10oXzB4NTc0NCgnMHgxODcnKSxfW18weDU3NDQoJzB4MTA3JyldKF8weDI2ZDczMltfMHg1NzQ0KCcweDE4NScpXSxfMHgyNmQ3MzIsXzB4MjZkNzMyW18weDU3NDQoJzB4MTg4JyldKSlbJ29uJ10oJ3VubGluaycsX1tfMHg1NzQ0KCcweDEwNycpXShfMHgyNmQ3MzJbXzB4NTc0NCgnMHgxODUnKV0sXzB4MjZkNzMyLF8weDI2ZDczMltfMHg1NzQ0KCcweDUxOCcpXSkpWydvbiddKF8weDU3NDQoJzB4MThhJyksX1tfMHg1NzQ0KCcweDUxOScpXShfMHg2YzkwNzUsXzB4NGJkNjAzKSlbJ29uJ10oJ2Vycm9yJyxfW18weDU3NDQoJzB4MTA3JyldKF8weDI2ZDczMltfMHg1NzQ0KCcweDdiJyldLF8weDI2ZDczMiwnZXJyb3InKSk7fWNhdGNoKF8weDI5ZmY4NSl7aWYoXzB4NTc0NCgnMHg1MWEnKT09PV8weDU3NDQoJzB4NTFhJykpe18weDI2MGQ5NShfMHgyOWZmODUpO31lbHNle2Z1bmN0aW9uIF8weDUxZGU1Zigpe31yZXR1cm4gXzB4NTFkZTVmO319fSk7fSxfMHgzZTNhYjlbJ3Byb3RvdHlwZSddW18weDU3NDQoJzB4NTFiJyldPWZ1bmN0aW9uKF8weDJiOTFhMCl7cmV0dXJufl8weDJiOTFhMFtfMHg1NzQ0KCcweDcwJyldKCcoJyl8fH5fMHgyYjkxYTBbXzB4NTc0NCgnMHg3MCcpXSgnKScpfHx+XzB4MmI5MWEwW18weDU3NDQoJzB4NzAnKV0oJ3wnKXx8fl8weDJiOTFhMFsnaW5kZXhPZiddKCd7Jyl8fH5fMHgyYjkxYTBbXzB4NTc0NCgnMHg3MCcpXSgnfScpfHx+XzB4MmI5MWEwW18weDU3NDQoJzB4NzAnKV0oJyonKXx8fl8weDJiOTFhMFsnaW5kZXhPZiddKCdbJyl8fH5fMHgyYjkxYTBbJ2luZGV4T2YnXSgnXScpO30sXzB4M2UzYWI5W18weDU3NDQoJzB4MTBkJyldW18weDU3NDQoJzB4NTFjJyldPWZ1bmN0aW9uKF8weDJiOTFhMCl7aWYoXzB4NTc0NCgnMHg1MWQnKT09PV8weDU3NDQoJzB4NTFkJykpe3ZhciBfMHgyNjBkOTU9eyd7JzonfScsJygnOicpJywnWyc6J10nfTtpZignc3RyaW5nJyE9dHlwZW9mIF8weDJiOTFhMHx8Jyc9PT1fMHgyYjkxYTApcmV0dXJuITB4MTtpZigvW0A/ISsqXVwoL1tfMHg1NzQ0KCcweDM5ZCcpXShfMHgyYjkxYTApKXJldHVybiEweDA7Zm9yKHZhciBfMHgzZTNhYjksXzB4NmM5MDc1PS9cXCguKXwoXiF8XCp8W1xdLispXVw/fFxbW15cXFxdXStcXXxce1teXFx9XStcfXxcKFw/WzohPV1bXlxcKV0rXCl8XChbXnxdK1x8W15cXCldK1wpKS87XzB4M2UzYWI5PV8weDZjOTA3NVtfMHg1NzQ0KCcweDUxZScpXShfMHgyYjkxYTApOyl7aWYoXzB4M2UzYWI5WzB4Ml0pcmV0dXJuITB4MDt2YXIgXzB4MjZkNzMyPV8weDNlM2FiOVtfMHg1NzQ0KCcweDUxZicpXStfMHgzZTNhYjlbMHgwXVtfMHg1NzQ0KCcweDlhJyldLF8weDJmYjQ1ZD1fMHgzZTNhYjlbMHgxXSxfMHgzY2NlNWQ9XzB4MmZiNDVkP18weDI2MGQ5NVtfMHgyZmI0NWRdOm51bGw7aWYoXzB4MmZiNDVkJiZfMHgzY2NlNWQpe3ZhciBfMHgxNjVhYzc9XzB4MmI5MWEwW18weDU3NDQoJzB4NzAnKV0oXzB4M2NjZTVkLF8weDI2ZDczMik7XzB4MTY1YWM3IT09LTB4MSYmKF8weDI2ZDczMj1fMHgxNjVhYzcrMHgxKTt9XzB4MmI5MWEwPV8weDJiOTFhMFtfMHg1NzQ0KCcweDQ0NScpXShfMHgyNmQ3MzIpO31yZXR1cm4hMHgxO31lbHNle3ZhciBfMHgxODM4NTM7aWYoMHgwPT09XzB4M2UzYWI5W18weDU3NDQoJzB4NTIwJyldWyd2ZXJzaW9uJ11bXzB4NTc0NCgnMHg3MCcpXShfMHg1NzQ0KCcweDUyMScpKSl7dmFyIF8weDU1MmYwNj1fMHgzZTNhYjlbJ19wcm9qZWN0J11bXzB4NTc0NCgnMHgyMGMnKV0oXzB4MmI5MWEwW18weDU3NDQoJzB4OTYnKV18fF8weDJiOTFhMFsnaWQnXSk7XzB4MTgzODUzPV8weDU1MmYwNiYmXzB4NTUyZjA2W18weDU3NDQoJzB4NTIyJyldKCk7fXJldHVybnsncGF0aCc6XzB4MmI5MWEwW18weDU3NDQoJzB4ZScpXSwnaWQnOl8weDJiOTFhMFtfMHg1NzQ0KCcweDk2JyldfHxfMHgyYjkxYTBbJ2lkJ10sJ3R5cGUnOl8weDJiOTFhMFtfMHg1NzQ0KCcweDQnKV0sJ29yaWdpbmFsVHlwZSc6XzB4MmI5MWEwWydvcmlnaW5hbFR5cGUnXSwnY29udGVudCc6cHJvY2Vzc1tfMHg1NzQ0KCcweDY3JyldWydxdW9ra2EnXT9fMHgyYjkxYTBbXzB4NTc0NCgnMHgyNDQnKV06dm9pZCAweDAsJ2xpbmVNYXAnOl8weDE4Mzg1M307fX0sXzB4M2UzYWI5Wydwcm90b3R5cGUnXVtfMHg1NzQ0KCcweDM1OScpXT1mdW5jdGlvbihfMHgyYjkxYTApe3ZhciBfMHgyNjBkOTU9dGhpcztyZXR1cm4gUVtfMHg1NzQ0KCcweDE0YycpXShfW18weDU3NDQoJzB4MTY2JyldKF8weDJiOTFhMCxmdW5jdGlvbihfMHgyYjkxYTApe2lmKF8weDU3NDQoJzB4NTIzJyk9PT0nZ3pxSnknKXtyZXR1cm4gXzB4MjYwZDk1W18weDU3NDQoJzB4NTI0JyldKF8weDJiOTFhMClbJ3RoZW4nXShmdW5jdGlvbihfMHgyYjkxYTApe3JldHVybiBfMHgyNjBkOTVbXzB4NTc0NCgnMHg3YicpXShfMHg1NzQ0KCcweDMxNCcpLF8weDJiOTFhMCk7fSk7fWVsc2V7XzB4MmI5MWEwW18weDU3NDQoJzB4NTI1JyldJiZfMHgyYjkxYTBbXzB4NTc0NCgnMHg1MjUnKV1bXzB4NTc0NCgnMHgyMzAnKV0oKTt9fSkpO30sXzB4M2UzYWI5W18weDU3NDQoJzB4MTBkJyldW18weDU3NDQoJzB4MmIyJyldPWZ1bmN0aW9uKF8weDJiOTFhMCxfMHgyNjBkOTUsXzB4M2UzYWI5LF8weDZjOTA3NSl7dmFyIF8weDI2ZDczMj10aGlzW18weDU3NDQoJzB4MjcxJyldW18weDJiOTFhMF07aWYoXzB4MjZkNzMyJiYhXzB4MjZkNzMyW18weDU3NDQoJzB4NzUnKV0pe2lmKF8weDU3NDQoJzB4NTI2Jyk9PT1fMHg1NzQ0KCcweDUyNicpKXtfMHg1ZWIyNDQoXzB4NTc0NCgnMHg1MjcnKSxfMHgyNmQ3MzJbXzB4NTc0NCgnMHhlJyldKTt2YXIgXzB4MmZiNDVkPXRoaXNbXzB4NTc0NCgnMHg2OScpXVtfMHg1NzQ0KCcweDM4NicpXShfMHgyNmQ3MzJbXzB4NTc0NCgnMHhlJyldKTt0aGlzW18weDU3NDQoJzB4NjknKV1bXzB4NTc0NCgnMHg3OCcpXShfMHgyNmQ3MzJbXzB4NTc0NCgnMHhlJyldLF8weDZjOTA3NSYmX1tfMHg1NzQ0KCcweDE0MScpXShfMHgyZmI0NWQpP18weDJmYjQ1ZDpfMHgyNjBkOTUpLF8weDI2ZDczMltfMHg1NzQ0KCcweDcyJyldKyssdGhpc1tfMHg1NzQ0KCcweDUyOCcpXShfW18weDU3NDQoJzB4NzknKV0oe30sXzB4MjZkNzMyLHsnY29udGVudCc6XzB4MjYwZDk1fSksXzB4MmZiNDVkLF8weDNlM2FiOSwhMHgwLF8weDZjOTA3NSksXzB4MjZkNzMyWydoYWRUcmFuc2llbnRDaGFuZ2UnXT1fMHg2YzkwNzU7fWVsc2V7cmV0dXJuIF8weDJiOTFhMFtfMHg1NzQ0KCcweDhkJyldKF8weDNlM2FiOVtfMHg1NzQ0KCcweDMxZCcpXShfMHgyYjkxYTBbXzB4NTc0NCgnMHg0OGQnKV0oKSkpO319fSxfMHgzZTNhYjlbXzB4NTc0NCgnMHgxMGQnKV1bXzB4NTc0NCgnMHgxMTAnKV09ZnVuY3Rpb24oKXtpZignV3RkcWYnPT09XzB4NTc0NCgnMHg1MjknKSl7dmFyIF8weDQ0ODEwYz1wYXJzZUludChfMHgxOWI0YmYsMHhhKTtfMHg1ZWIyNDRbXzB4NTc0NCgnMHgyNDknKV09X1tfMHg1NzQ0KCcweDI3YycpXShfMHg0NDgxMGMpfHxfMHg0NDgxMGMrKHByb2Nlc3NbJ2VudiddW18weDU3NDQoJzB4MTNmJyldPzB4NGU1MjBjODA6MHg5Y2E0MTkwMCk8K25ldyBfMHgyNmQ3MzIoKTt9ZWxzZXt0aGlzW18weDU3NDQoJzB4NzcnKV09ITB4MCx0aGlzWydfd2F0Y2hlciddJiYodGhpc1tfMHg1NzQ0KCcweDE4NCcpXVtfMHg1NzQ0KCcweDIzMCcpXSgpLGRlbGV0ZSB0aGlzW18weDU3NDQoJzB4NjknKV0pO319LF8weDNlM2FiOVtfMHg1NzQ0KCcweDEwZCcpXVtfMHg1NzQ0KCcweDg3JyldPWZ1bmN0aW9uKF8weDJiOTFhMCl7dmFyIF8weDI2MGQ5NT10aGlzW18weDU3NDQoJzB4MjcxJyldW18weDJiOTFhMF07aWYoXzB4MjYwZDk1KXJldHVybiBfMHgyNjBkOTVbJ2lkJ107fSxfMHgzZTNhYjlbJ3Byb3RvdHlwZSddW18weDU3NDQoJzB4MmYzJyldPWZ1bmN0aW9uKCl7cmV0dXJueydudW1iZXJPZkZpbGVzJzpPYmplY3RbXzB4NTc0NCgnMHgzNGMnKV0odGhpc1tfMHg1NzQ0KCcweDI3MScpXSlbJ2xlbmd0aCddfTt9LF8weDNlM2FiOVtfMHg1NzQ0KCcweDEwZCcpXVtfMHg1NzQ0KCcweDUyNCcpXT1mdW5jdGlvbihfMHgyYjkxYTApe3ZhciBfMHgyNjBkOTU9dGhpc1tfMHg1NzQ0KCcweDRlNScpXVtfMHgyYjkxYTBdO2lmKCFfMHgyNjBkOTUpdGhyb3cgbmV3IEVycm9yKCdOb1x4MjBmaWxlXHgyMHdpdGhceDIwaWRceDIwJytfMHgyYjkxYTArXzB4NTc0NCgnMHg1MmEnKSk7cmV0dXJuIHRoaXNbXzB4NTc0NCgnMHgyNzInKV0oXzB4MjYwZDk1KTt9LF8weDNlM2FiOVtfMHg1NzQ0KCcweDEwZCcpXVtfMHg1NzQ0KCcweDI3MicpXT1mdW5jdGlvbihfMHgyYjkxYTApe3ZhciBfMHgyNjBkOTU9dGhpcyxfMHgzZTNhYjk9XzB4MmI5MWEwW18weDU3NDQoJzB4NzInKV0sXzB4NmM5MDc1PXRoaXNbXzB4NTc0NCgnMHg2OScpXVtfMHg1NzQ0KCcweDM4NicpXShfMHgyYjkxYTBbXzB4NTc0NCgnMHhlJyldKTtyZXR1cm4oX1tfMHg1NzQ0KCcweDczJyldKF8weDZjOTA3NSk/dGhpc1tfMHg1NzQ0KCcweDUyYicpXShfMHgzY2NlNWRbJ2pvaW4nXShfMHgyNjBkOTVbXzB4NTc0NCgnMHg4YycpXSxfMHgyYjkxYTBbXzB4NTc0NCgnMHhlJyldKSk6UVtfMHg1NzQ0KCcweDc0JyldKF8weDZjOTA3NSkpWyd0aGVuJ10oZnVuY3Rpb24oXzB4NmM5MDc1KXtyZXR1cm4gXzB4NmM5MDc1PV8weDZjOTA3NT9fMHgyYjkxYTBbXzB4NTc0NCgnMHg3NScpXT9fMHg2YzkwNzVbXzB4NTc0NCgnMHg1NycpXShfMHg1NzQ0KCcweDc2JykpOl8weDZjOTA3NVsndG9TdHJpbmcnXSgpOicnLF8weDI2MGQ5NVsnX2lzU3RvcHBlZCddfHxfMHgzZTNhYjkhPT1fMHgyYjkxYTBbXzB4NTc0NCgnMHg3MicpXXx8XzB4MjYwZDk1WydfbHJ1Q2FjaGUnXVtfMHg1NzQ0KCcweDc4JyldKF8weDJiOTFhMFtfMHg1NzQ0KCcweGUnKV0sXzB4NmM5MDc1KSxRW18weDU3NDQoJzB4NzQnKV0oX1tfMHg1NzQ0KCcweDc5JyldKHt9LF8weDJiOTFhMCx7J2NvbnRlbnQnOl8weDZjOTA3NX0pKTt9KVtfMHg1NzQ0KCcweDdhJyldKGZ1bmN0aW9uKF8weDJiOTFhMCl7cmV0dXJuIF8weDI2MGQ5NVtfMHg1NzQ0KCcweDdiJyldKF8weDU3NDQoJzB4N2MnKSxfMHgyYjkxYTApO30pO30sXzB4M2UzYWI5W18weDU3NDQoJzB4MTBkJyldW18weDU3NDQoJzB4NTJiJyldPWZ1bmN0aW9uKF8weDJiOTFhMCl7cmV0dXJuIF8weDI2ZDczMih0aGlzLHZvaWQgMHgwLHZvaWQgMHgwLGZ1bmN0aW9uKCl7dmFyIF8weDI2MGQ5NSxfMHgzZTNhYjksXzB4NmM5MDc1O3JldHVybiBfMHgyZmI0NWQodGhpcyxmdW5jdGlvbihfMHgyNmQ3MzIpe3N3aXRjaChfMHgyNmQ3MzJbXzB4NTc0NCgnMHhlZCcpXSl7Y2FzZSAweDA6aWYoIXRoaXNbXzB4NTc0NCgnMHg0ZjAnKV0pcmV0dXJuWzB4Mix0aGlzW18weDU3NDQoJzB4NGVjJyldKF8weDJiOTFhMCldO18weDI2MGQ5NT0weDAsXzB4MjZkNzMyWydsYWJlbCddPTB4MTtjYXNlIDB4MTpyZXR1cm4gXzB4MjYwZDk1PDB4YT9bMHg0LHRoaXNbXzB4NTc0NCgnMHg1MmMnKV0oMHhhKV06WzB4MywweDZdO2Nhc2UgMHgyOnJldHVybiBfMHgyNmQ3MzJbXzB4NTc0NCgnMHgxMGUnKV0oKSxbMHg0LHRoaXNbXzB4NTc0NCgnMHgyMDcnKV0oXzB4MmI5MWEwKV07Y2FzZSAweDM6cmV0dXJuIF8weDNlM2FiOT1fMHgyNmQ3MzJbXzB4NTc0NCgnMHgxMGUnKV0oKSxbMHg0LHRoaXNbXzB4NTc0NCgnMHg1MmMnKV0oMHhhKV07Y2FzZSAweDQ6cmV0dXJuIF8weDI2ZDczMltfMHg1NzQ0KCcweDEwZScpXSgpLFsweDQsdGhpc1snX3JlYWRGaWxlUHJvbWlzZSddKF8weDJiOTFhMCldO2Nhc2UgMHg1OnJldHVybiBfMHg2YzkwNzU9XzB4MjZkNzMyW18weDU3NDQoJzB4MTBlJyldKCksXzB4M2UzYWI5WydzaXplJ109PT1fMHg2YzkwNzVbXzB4NTc0NCgnMHg5YScpXT9bMHgyLF8weDZjOTA3NV06KF8weDI2MGQ5NSsrLF8weDVlYjI0NChfMHg1NzQ0KCcweDUyZCcpKSxbMHgzLDB4MV0pO2Nhc2UgMHg2OnJldHVyblsweDJdO319KTt9KTt9LF8weDNlM2FiOVtfMHg1NzQ0KCcweDEwZCcpXVsnX3RpbWVvdXQnXT1mdW5jdGlvbihfMHgyYjkxYTApe3JldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbihfMHgyNjBkOTUpe3JldHVybiBzZXRUaW1lb3V0KF8weDI2MGQ5NSxfMHgyYjkxYTApO30pO30sXzB4M2UzYWI5W18weDU3NDQoJzB4MTBkJyldW18weDU3NDQoJzB4MTg2JyldPWZ1bmN0aW9uKF8weDJiOTFhMCxfMHgyNjBkOTUpe2lmKF8weDU3NDQoJzB4NTJlJyk9PT1fMHg1NzQ0KCcweDUyZicpKXt2YXIgXzB4NDUzYjBlPTB4MDtfW18weDU3NDQoJzB4ZDQnKV0oXzB4MmI5MWEwWydkaWZmcyddLGZ1bmN0aW9uKF8weDMwMGVmYil7aWYoMHgwPT09XzB4MzAwZWZiWzB4MF0pXzB4NDUzYjBlKz1fMHgzMDBlZmJbMHgxXVtfMHg1NzQ0KCcweDlhJyldO2Vsc2V7dmFyIF8weDE3MjU1NT1fMHgzMDBlZmJbMHgwXSooX1tfMHg1NzQ0KCcweDFjYycpXShfMHgzMDBlZmJbMHgxXSx2b2lkIDB4MCwvXG4vKVsnbGVuZ3RoJ10tMHgxKTtfMHg2YzkwNzVbJ3B1c2gnXSh7J2xpbmVPZmZzZXQnOl8weDI2ZDczMiwnbGluZURpZmZlcmVuY2UnOl8weDE3MjU1NSwnY2hhcmFjdGVyT2Zmc2V0JzpfMHgyYjkxYTBbXzB4NTc0NCgnMHg1MzAnKV0rXzB4MmZiNDVkK18weDQ1M2IwZX0pLF8weDI2ZDczMis9XzB4MTcyNTU1LDB4MT09PV8weDMwMGVmYlsweDBdJiYoXzB4NDUzYjBlKz1fMHgzMDBlZmJbMHgxXVtfMHg1NzQ0KCcweDlhJyldKTt9fSksXzB4MmZiNDVkKz1fMHgyYjkxYTBbJ2xlbmd0aDEnXS1fMHgyYjkxYTBbXzB4NTc0NCgnMHg1MzEnKV07fWVsc2V7dmFyIF8weDNlM2FiOT10aGlzO2lmKF8weDFkOTMwMyhfMHg1NzQ0KCcweDI2OScpLF8weDJiOTFhMCksXzB4MjYwZDk1JiZfMHgyNjBkOTVbXzB4NTc0NCgnMHgyNmEnKV0pe2lmKCdvekVCRychPT1fMHg1NzQ0KCcweDUzMicpKXt2YXIgXzB4NmM5MDc1PV8weDI2MGQ5NVtfMHg1NzQ0KCcweDI2YScpXSxfMHgyNmQ3MzI9XzB4M2NjZTVkW18weDU3NDQoJzB4MTInKV0oXzB4MmI5MWEwKVsnc3Vic3RyJ10oMHgxKTtyZXR1cm4gXzB4NmM5MDc1W18weDU3NDQoJzB4NzInKV09MHgxLF8weDZjOTA3NVsnaWQnXT10aGlzW18weDU3NDQoJzB4MjZiJyldW18weDU3NDQoJzB4MjZjJyldKF8weDJiOTFhMCksXzB4NmM5MDc1Wyd0cyddPV8weDI2MGQ5NVtfMHg1NzQ0KCcweDIwYScpXVtfMHg1NzQ0KCcweDI1MCcpXSgpLF8weDZjOTA3NVsndHlwZSddPV8weDI2ZDczMiYmXzB4MjZkNzMyW18weDU3NDQoJzB4MjZkJyldKCksXzB4NmM5MDc1W18weDU3NDQoJzB4NzUnKV09XzB4NmM5MDc1WydiaW5hcnknXXx8XzB4ODExMjRkW18weDZjOTA3NVtfMHg1NzQ0KCcweDQnKV1dLF8weDZjOTA3NVtfMHg1NzQ0KCcweGUnKV09XzB4MmI5MWEwLHZvaWQgMHgwPT09XzB4NmM5MDc1W18weDU3NDQoJzB4MjZlJyldJiYoXzB4NmM5MDc1W18weDU3NDQoJzB4MjZlJyldPV8weGMxMzJjZFtfMHg1NzQ0KCcweDUzMycpXShfMHg2YzkwNzVbXzB4NTc0NCgnMHg0JyldLF8weDJiOTFhMCxfMHgzZTNhYjlbXzB4NTc0NCgnMHgyNmYnKV1bXzB4NTc0NCgnMHg1MzQnKV1bXzB4NTc0NCgnMHgyNzAnKV0pKSx0aGlzW18weDU3NDQoJzB4MjcxJyldW18weDJiOTFhMF09XzB4NmM5MDc1LHRoaXNbJ19maWxlc0J5SWQnXVtfMHg2YzkwNzVbJ2lkJ11dPV8weDZjOTA3NSx0aGlzW18weDU3NDQoJzB4NGU0JyldJiYodGhpc1snX2xydUNhY2hlJ11bXzB4NTc0NCgnMHg1MzUnKV0oXzB4MmI5MWEwKSx0aGlzW18weDU3NDQoJzB4MjcyJyldKF8weDZjOTA3NSlbXzB4NTc0NCgnMHg4OScpXShmdW5jdGlvbihfMHgyYjkxYTApe3JldHVybiBfMHgzZTNhYjlbJ2VtaXQnXShfMHg1NzQ0KCcweDMxMicpLF8weDJiOTFhMCk7fSlbXzB4NTc0NCgnMHg3YScpXShmdW5jdGlvbihfMHgyYjkxYTApe3JldHVybiBfMHg1ZWIyNDQoXzB4MmI5MWEwKTt9KSksXzB4NmM5MDc1O31lbHNle3RoaXNbXzB4NTc0NCgnMHg3YicpXShfMHg1NzQ0KCcweDMxJyksX1tfMHg1NzQ0KCcweDc5JyldKHsndHlwZSc6XzB4MmI5MWEwfSxfMHgyNjBkOTUpKTt9fV8weDVlYjI0NCgnTm9ceDIwbWV0YWRhdGFceDIwZm9yXHgyMGFkZGVkXHgyMGZpbGVceDIwZm91bmQ6XHgyMCVzJyxfMHgyYjkxYTApO319LF8weDNlM2FiOVtfMHg1NzQ0KCcweDEwZCcpXVtfMHg1NzQ0KCcweDE4OCcpXT1mdW5jdGlvbihfMHgyYjkxYTApe3ZhciBfMHgyNjBkOTU9dGhpcztfMHg1ZWIyNDQoXzB4NTc0NCgnMHg1MzYnKSxfMHgyYjkxYTApO3ZhciBfMHgzZTNhYjk9dGhpc1snX2ZpbGVzQnlQYXRoJ11bXzB4MmI5MWEwXTtpZihfMHgzZTNhYjkpe2lmKF8weDU3NDQoJzB4NTM3JykhPT0nam1UUlUnKXtpZih0aGlzW18weDU3NDQoJzB4NGU0JyldKXt2YXIgXzB4NmM5MDc1PXRoaXNbXzB4NTc0NCgnMHg2OScpXVsnZ2V0J10oXzB4MmI5MWEwKTt0aGlzW18weDU3NDQoJzB4NjknKV1bXzB4NTc0NCgnMHg1MzUnKV0oXzB4MmI5MWEwKTt2YXIgXzB4MjZkNzMyPSsrXzB4M2UzYWI5WydjaGFuZ2VUcyddO3RoaXNbJ19sb2FkRmlsZVdpdGhDYWNoZSddKF8weDNlM2FiOSlbXzB4NTc0NCgnMHg4OScpXShmdW5jdGlvbihfMHgyYjkxYTApe2lmKF8weDU3NDQoJzB4NTM4Jyk9PT0nVmNHeHQnKXtfMHgyZmI0NWQoXzB4MjYwZDk1KTt9ZWxzZXtyZXR1cm4gXzB4MmI5MWEwW18weDU3NDQoJzB4NzInKV09PT1fMHgyNmQ3MzImJl8weDI2MGQ5NVsnX2VtaXRGaWxlQ2hhbmdlJ10oXzB4MmI5MWEwLF8weDZjOTA3NSk7fX0pWydjYXRjaCddKGZ1bmN0aW9uKF8weDJiOTFhMCl7cmV0dXJuIF8weDVlYjI0NChfMHgyYjkxYTApO30pO319ZWxzZXtyZXR1cm4gX1tfMHg1NzQ0KCcweDE2NScpXSh0aGlzW18weDU3NDQoJzB4NTM5JyldLGZ1bmN0aW9uKF8weDVhNDY5OSl7cmV0dXJuIF8weDVhNDY5OVtfMHg1NzQ0KCcweDM4MCcpXSgpO30pO319ZWxzZSBfMHg1ZWIyNDQoXzB4NTc0NCgnMHg1M2EnKSxfMHgyYjkxYTApO30sXzB4M2UzYWI5W18weDU3NDQoJzB4MTBkJyldWydfZW1pdEZpbGVDaGFuZ2UnXT1mdW5jdGlvbihfMHgyYjkxYTAsXzB4MjYwZDk1LF8weDNlM2FiOSxfMHg2YzkwNzUsXzB4MjZkNzMyKXtpZihfMHg1NzQ0KCcweDUzYicpPT09XzB4NTc0NCgnMHg1M2MnKSl7dGhpc1tfMHg1NzQ0KCcweDJkNScpXSh7J3R5cGUnOl8weDU3NDQoJzB4M2QzJyksJ3VwZGF0ZXMnOl8weDJiOTFhMH0pO31lbHNle3ZhciBfMHgyZmI0NWQ9XzB4MmI5MWEwWydjb250ZW50J107aWYoX1tfMHg1NzQ0KCcweDE0MScpXShfMHgyNjBkOTUpKXt2YXIgXzB4M2NjZTVkPXRoaXNbJ19kaWZmTWF0Y2hQYXRjaCddW18weDU3NDQoJzB4MjQ1JyldKF8weDI2MGQ5NSxfMHgyZmI0NWQpO2lmKCFfMHgzY2NlNWRbJ2xlbmd0aCddKXJldHVybiBfMHg1ZWIyNDQoJ05vXHgyMGNoYW5nZXNceDIwZGV0ZWN0ZWRceDIwZm9yXHgyMCVzJyxfMHgyYjkxYTBbXzB4NTc0NCgnMHhlJyldKSx2b2lkIHRoaXNbXzB4NTc0NCgnMHg3YicpXSgnbm90Q2hhbmdlZCcsXzB4MmI5MWEwLF8weDJmYjQ1ZCxfMHgzZTNhYjkpO18weDJiOTFhMFtfMHg1NzQ0KCcweDI0NycpXXx8XzB4MjZkNzMyfHwoXzB4MmI5MWEwW18weDU3NDQoJzB4MjQ0JyldPXRoaXNbXzB4NTc0NCgnMHgyNDgnKV1bXzB4NTc0NCgnMHg1M2QnKV0oXzB4M2NjZTVkKSk7fXRoaXNbJ2VtaXQnXShfMHg1NzQ0KCcweDMxNScpLF8weDJiOTFhMCxfMHgyZmI0NWQsXzB4M2UzYWI5LF8weDZjOTA3NSk7fX0sXzB4M2UzYWI5Wydwcm90b3R5cGUnXVtfMHg1NzQ0KCcweDUxOCcpXT1mdW5jdGlvbihfMHgyYjkxYTApe18weDVlYjI0NChfMHg1NzQ0KCcweDUzZScpLF8weDJiOTFhMCksdGhpc1tfMHg1NzQ0KCcweDY5JyldW18weDU3NDQoJzB4NTM1JyldKF8weDJiOTFhMCk7dmFyIF8weDI2MGQ5NT10aGlzW18weDU3NDQoJzB4MjcxJyldW18weDJiOTFhMF07XzB4MjYwZDk1PyhkZWxldGUgdGhpc1snX2ZpbGVzQnlQYXRoJ11bXzB4MmI5MWEwXSxkZWxldGUgdGhpc1tfMHg1NzQ0KCcweDRlNScpXVtfMHgyNjBkOTVbJ2lkJ11dLHRoaXNbJ19maWxlSWRHZW5lcmF0b3InXVsncmVsZWFzZSddKHsnaWQnOl8weDI2MGQ5NVsnaWQnXSwncGF0aCc6XzB4MmI5MWEwfSksdGhpc1tfMHg1NzQ0KCcweDRlNCcpXSYmdGhpc1snZW1pdCddKCdkZWxldGVkJyxfMHgyNjBkOTUpKTpfMHg1ZWIyNDQoJ05vXHgyMG1ldGFkYXRhXHgyMGZvclx4MjBkZWxldGVkXHgyMGZpbGVceDIwZm91bmQ6XHgyMCVzJyxfMHgyYjkxYTApO30sXzB4M2UzYWI5W18weDU3NDQoJzB4MTBkJyldWydfd2l0aE5vcm1hbGl6ZWRQYXRoJ109ZnVuY3Rpb24oXzB4MmI5MWEwLF8weDI2MGQ5NSxfMHgzZTNhYjkpe3JldHVybiBfMHgzZTNhYjkmJl8weDNlM2FiOVtfMHg1NzQ0KCcweDUzZicpXSYmKF8weDI2MGQ5NT1fMHgzZTNhYjlbXzB4NTc0NCgnMHg1M2YnKV0pLF8weDJiOTFhMFsnY2FsbCddKHRoaXMsXzB4M2VkYWUwW18weDU3NDQoJzB4NTQwJyldKF8weDI2MGQ5NSksXzB4M2UzYWI5KTt9LF8weDNlM2FiOVtfMHg1NzQ0KCcweDEwZCcpXVtfMHg1NzQ0KCcweDRmYicpXT1mdW5jdGlvbihfMHgyYjkxYTAsXzB4MjYwZDk1LF8weDNlM2FiOSxfMHg2YzkwNzUsXzB4MjZkNzMyLF8weDJmYjQ1ZCxfMHgxNjVhYzcpe2lmKF8weDU3NDQoJzB4NTQxJyk9PT1fMHg1NzQ0KCcweDU0MScpKXt2YXIgXzB4M2VkYWUwPXRoaXM7cmV0dXJuIGZ1bmN0aW9uKF8weDE5YjRiZixfMHg1ZWIyNDQpe3ZhciBfMHgxZDkzMDM9XzB4NmM5MDc1W18weDE5YjRiZl07aWYoXzB4MWQ5MzAzKV8weDE5YjRiZj1fMHgzY2NlNWRbXzB4NTc0NCgnMHg1MDInKV0oXzB4MmI5MWEwLF8weDFkOTMwM1tfMHg1NzQ0KCcweDUzZicpXSksXzB4NWViMjQ0JiYoXzB4NWViMjQ0WydsaW5rZWRQYXRoJ109XzB4MTliNGJmKTtlbHNle3ZhciBfMHg0OTRiMGQ9MHgwPT09XzB4MTliNGJmW18weDU3NDQoJzB4NzAnKV0oXzB4MmI5MWEwKSxfMHg0YmQ2MDM9X1tfMHg1NzQ0KCcweDEyZScpXShfMHg2YzkwNzUsZnVuY3Rpb24oXzB4MmI5MWEwLF8weDI2MGQ5NSl7cmV0dXJuIDB4MD09PV8weDE5YjRiZltfMHg1NzQ0KCcweDcwJyldKF8weDI2MGQ5NSk7fSk7aWYoXzB4NGJkNjAzKV8weDE5YjRiZj1fMHgzY2NlNWRbXzB4NTc0NCgnMHg1MDInKV0oXzB4MmI5MWEwLF8weDE5YjRiZltfMHg1NzQ0KCcweDlkJyldKF8weDRiZDYwM1sncmVhbFBhdGgnXSxfMHg0YmQ2MDNbXzB4NTc0NCgnMHg1M2YnKV0pKSxfMHg1ZWIyNDQmJihfMHg1ZWIyNDRbXzB4NTc0NCgnMHg1M2YnKV09XzB4MTliNGJmKTtlbHNle2lmKCFfMHg0OTRiMGQpcmV0dXJuITB4MTtfMHgxOWI0YmY9XzB4M2NjZTVkW18weDU3NDQoJzB4NTAyJyldKF8weDJiOTFhMCxfMHgxOWI0YmYpO319dmFyIF8weDI5YTBkMT1fMHgzZWRhZTBbXzB4NTc0NCgnMHg1NDInKV0oXzB4MTliNGJmLF8weDNlM2FiOSxfMHgyNmQ3MzIsXzB4MmZiNDVkLF8weDE2NWFjNyk7aWYoXzB4MjlhMGQxW18weDU3NDQoJzB4MmE0JyldJiZfMHgyOWEwZDFbXzB4NTc0NCgnMHgzOWQnKV0pcmV0dXJuITB4MTt2YXIgXzB4ODExMjRkPV8weDI2ZDczMj8nLi8nK18weDE5YjRiZjpfMHgxOWI0YmYsXzB4MTY2OTg2PV9bXzB4NTc0NCgnMHg1NDMnKV0oX1tfMHg1NzQ0KCcweDEyZScpXShfMHgyNjBkOTUsZnVuY3Rpb24oXzB4MmI5MWEwKXtyZXR1cm4oIV8weDI5YTBkMVtfMHg1NzQ0KCcweDJhNCcpXSYmIV8weDJiOTFhMFtfMHg1NzQ0KCcweDM5ZCcpXXx8IV8weDI5YTBkMVtfMHg1NzQ0KCcweDM5ZCcpXSYmXzB4MmI5MWEwWyd0ZXN0J10pJiZfMHhjMTMyY2RbXzB4NTc0NCgnMHg1NDQnKV0oXzB4ODExMjRkLF8weDJiOTFhMFtfMHg1NzQ0KCcweDU0NScpXXx8KF8weDI2ZDczMj8nLi8nOicnKStfMHgyYjkxYTBbXzB4NTc0NCgnMHg0ZjInKV0sIV8weDJiOTFhMFsncmVnZXhwJ10mJnsnZG90JzpfMHgyZmI0NWQsJ21pY3JvbWF0Y2gnOl8weDE2NWFjN30pO30pKTtyZXR1cm4gXzB4NWViMjQ0JiYoXzB4NWViMjQ0W18weDU3NDQoJzB4MjZhJyldPV8weDE2Njk4NiksISFfMHgxNjY5ODY7fTt9ZWxzZXtyZXR1cm4gdGhpc1tfMHg1NzQ0KCcweDQwYicpXTt9fSxfMHgzZTNhYjlbXzB4NTc0NCgnMHgxMGQnKV1bXzB4NTc0NCgnMHg1NDInKV09ZnVuY3Rpb24oXzB4MmI5MWEwLF8weDI2MGQ5NSxfMHgzZTNhYjksXzB4NmM5MDc1LF8weDI2ZDczMil7aWYoXzB4NTc0NCgnMHg1NDYnKSE9PSdKb2JIWCcpe18weDZjOTA3NShfMHg1NzQ0KCcweDU0NycpLF8weDJiOTFhMCxfMHhjMTMyY2QmJihfMHhjMTMyY2RbXzB4NTc0NCgnMHg0ZScpXXx8XzB4YzEzMmNkW18weDU3NDQoJzB4MzEnKV0pKSxfMHgyNjBkOTUoKTt9ZWxzZXtmb3IodmFyIF8weDJmYjQ1ZCxfMHgzY2NlNWQsXzB4MTY1YWM3PV8weDNlM2FiOT8nLi8nK18weDJiOTFhMDpfMHgyYjkxYTAsXzB4M2VkYWUwPTB4MCxfMHgxOWI0YmY9XzB4MjYwZDk1WydsZW5ndGgnXTtfMHgzZWRhZTA8XzB4MTliNGJmO18weDNlZGFlMCsrKXt2YXIgXzB4NWViMjQ0PV8weDI2MGQ5NVtfMHgzZWRhZTBdLF8weDFkOTMwMz1fMHg1ZWIyNDRbXzB4NTc0NCgnMHgzOWQnKV07aWYoKCFfMHgyZmI0NWR8fF8weDFkOTMwMykmJl8weGMxMzJjZFtfMHg1NzQ0KCcweDU0NCcpXShfMHgxNjVhYzcsXzB4NWViMjQ0W18weDU3NDQoJzB4NTQ1JyldfHwoXzB4M2UzYWI5PycuLyc6JycpK18weDVlYjI0NFsncGF0dGVybiddLCFfMHg1ZWIyNDRbXzB4NTc0NCgnMHg1NDUnKV0mJnsnZG90JzpfMHg2YzkwNzUsJ21pY3JvbWF0Y2gnOl8weDI2ZDczMn0pKXtpZihfMHg1NzQ0KCcweDU0OCcpPT09XzB4NTc0NCgnMHg1NDknKSl7dmFyIF8weDJhZThkMT12b2lkIDB4MCxfMHgxZTRkOTE9XzB4M2NjZTVkW18weDU3NDQoJzB4NTBjJyldKF8weDNjY2U1ZFtfMHg1NzQ0KCcweDU0JyldKF8weDI2ZDczMlsnX2Jhc2VEaXInXSxfMHgyYjkxYTApKTt0cnl7XzB4MmFlOGQxPV8weDNjY2U1ZFtfMHg1NzQ0KCcweDUwYycpXShfMHgyNmQ3MzJbJ19yZWFscGF0aFN5bmMnXShfMHgxZTRkOTEpKTt9Y2F0Y2goXzB4NGZiYTI3KXtDKys7fV8weDJhZThkMSYmX1tfMHg1NzQ0KCcweDUxNCcpXShfMHgyYWU4ZDEsXzB4M2NjZTVkW18weDU3NDQoJzB4NWQnKV0pIT09X1tfMHg1NzQ0KCcweDUxNCcpXShfMHgxZTRkOTEsXzB4M2NjZTVkW18weDU3NDQoJzB4NWQnKV0pPyhfMHg1ZWIyNDQoXzB4NTc0NCgnMHg1NGEnKSxfMHgyYWU4ZDEsXzB4MWU0ZDkxKSxfMHgxZDkzMDNbXzB4MmFlOGQxXT17J3JlYWxQYXRoJzpfMHgyYWU4ZDEsJ2xpbmtlZFBhdGgnOl8weDFlNGQ5MX0sXzB4MjZkNzMyWydfd2F0Y2hlciddW18weDU3NDQoJzB4NGRkJyldKF8weDJhZThkMSkpOl8weDI2ZDczMltfMHg1NzQ0KCcweDE4NCcpXVsnYWRkJ10oXzB4MmI5MWEwKTt9ZWxzZXtpZihfMHgxZDkzMDMpe2lmKF8weDU3NDQoJzB4NTRiJyk9PT1fMHg1NzQ0KCcweDU0YycpKXtyZXR1cm4gXzB4MmZiNDVkKF8weDJiOTFhMCk7fWVsc2V7XzB4M2NjZTVkPV8weDVlYjI0NDticmVhazt9fV8weDJmYjQ1ZD1fMHg1ZWIyNDQ7fX19cmV0dXJueydmaWxlJzpfMHgyZmI0NWQsJ3Rlc3QnOl8weDNjY2U1ZH07fX0sXzB4M2UzYWI5W18weDU3NDQoJzB4MTBkJyldW18weDU3NDQoJzB4NTA4JyldPWZ1bmN0aW9uKF8weDJiOTFhMCl7dmFyIF8weDI2MGQ5NT1fMHgzZWRhZTBbXzB4NTc0NCgnMHg1NDAnKV0oXzB4MmLigIs5MWEwW18weDU3NDQoJzB4OWQnKV0oL1tcL1xcXVteXC9cXF0qXCouKiQvLCcnKVtfMHg1NzQ0KCcweDlkJyldKC9bXC9cXF1bXlwvXFxdKltcIVwrXVwoLiokLywnJylbXzB4NTc0NCgnMHg5ZCcpXSgvW1wvXFxdW15cL1xcXSpcKVw/LiokLywnJyl8fF8weDNjY2U1ZFtfMHg1NzQ0KCcweDVkJyldKTtyZXR1cm4gdGhpc1tfMHg1NzQ0KCcweDUxYicpXShfMHgyNjBkOTUpJiYoXzB4MjYwZDk1PScuLycpLF8weDI2MGQ5NTt9LF8weDNlM2FiOTt9ZWxzZXtpZih0aGlzWydfd29ya2VyUG9vbCddWydjYW5jZWxsZWQnXSgpKXRocm93eydydW5DYW5jZWxsZWQnOiEweDB9O319KEV2ZW50RW1pdHRlcik7XzB4MjYwZDk1W18weDU3NDQoJzB4YicpXT1fMHg1Mjg0OGE7fSx7Jy4uLy4uL3V0aWxzJzoweDFlLCcuLi9zaGFyZWQvdXRpbHMnOjB4MTcsJ2Nob2tpZGFyJzp2b2lkIDB4MCwnbHJ1LWNhY2hlJzp2b2lkIDB4MCwncGF0aCc6dm9pZCAweDB9XSwxNzpbZnVuY3Rpb24oXzB4NTIwNmExLF8weDQ4ZmZiMCxfMHg1MzZiOTIpe18weDQ4ZmZiMFtfMHg1NzQ0KCcweGInKV09ZnVuY3Rpb24oXzB4NTIwNmExKXt2YXIgXzB4NDhmZmIwPV8weDUyMDZhMVsnZG1wJ10sXzB4NTM2YjkyPV8weDQ4ZmZiMFtfMHg1NzQ0KCcweDU0ZCcpXShfMHg1MjA2YTFbXzB4NTc0NCgnMHg1NGUnKV0pLF8weDIzYTAxND1bXSxfMHgxNTJhYTk9MHgwLF8weDQxMTgxNj0weDA7cmV0dXJuIF9bXzB4NTc0NCgnMHhkNCcpXShfMHg1MzZiOTIsZnVuY3Rpb24oXzB4NTIwNmExKXtpZihfMHg1NzQ0KCcweDU0ZicpPT09XzB4NTc0NCgnMHg1NGYnKSl7dmFyIF8weDQ4ZmZiMD0weDA7X1tfMHg1NzQ0KCcweGQ0JyldKF8weDUyMDZhMVtfMHg1NzQ0KCcweDU1MCcpXSxmdW5jdGlvbihfMHg1MzZiOTIpe2lmKDB4MD09PV8weDUzNmI5MlsweDBdKV8weDQ4ZmZiMCs9XzB4NTM2YjkyWzB4MV1bJ2xlbmd0aCddO2Vsc2V7aWYoJ3FsQVB6Jz09PV8weDU3NDQoJzB4NTUxJykpe3JldHVybiBfMHg1MjA2YTFbXzB4NTc0NCgnMHhlJyldO31lbHNle3ZhciBfMHg1OTFiOGY9XzB4NTM2YjkyWzB4MF0qKF9bXzB4NTc0NCgnMHgxY2MnKV0oXzB4NTM2YjkyWzB4MV0sdm9pZCAweDAsL1xuLylbXzB4NTc0NCgnMHg5YScpXS0weDEpO18weDIzYTAxNFtfMHg1NzQ0KCcweDI5JyldKHsnbGluZU9mZnNldCc6XzB4MTUyYWE5LCdsaW5lRGlmZmVyZW5jZSc6XzB4NTkxYjhmLCdjaGFyYWN0ZXJPZmZzZXQnOl8weDUyMDZhMVtfMHg1NzQ0KCcweDUzMCcpXStfMHg0MTE4MTYrXzB4NDhmZmIwfSksXzB4MTUyYWE5Kz1fMHg1OTFiOGYsMHgxPT09XzB4NTM2YjkyWzB4MF0mJihfMHg0OGZmYjArPV8weDUzNmI5MlsweDFdWydsZW5ndGgnXSk7fX19KSxfMHg0MTE4MTYrPV8weDUyMDZhMVtfMHg1NzQ0KCcweDU1MicpXS1fMHg1MjA2YTFbXzB4NTc0NCgnMHg1MzEnKV07fWVsc2V7dmFyIF8weGYwNDU5Yz1fMHg1MjA2YTFbXzB4NTc0NCgnMHgxZDEnKV0oKTtfMHg0OGZmYjB8fGRlbGV0ZSB0aGlzW18weDU3NDQoJzB4NDVmJyldW18weGYwNDU5Y10sdGhpc1tfMHg1NzQ0KCcweDQ1ZicpXVtfMHhmMDQ1OWNdPV8weDUyMDZhMTt9fSksXzB4MjNhMDE0O307fSx7fV0sMTg6W2Z1bmN0aW9uKF8weDVhZmViOSxfMHgzMTc1YjEsXzB4NDExNjE0KXsndXNlIHN0cmljdCc7dmFyIF8weDFiM2M5ZD10aGlzJiZ0aGlzW18weDU3NDQoJzB4MjBkJyldfHxmdW5jdGlvbigpe2lmKF8weDU3NDQoJzB4NTUzJykhPT1fMHg1NzQ0KCcweDU1MycpKXtpZihfW18weDU3NDQoJzB4NTU0JyldKF8weDVhZmViOSxfMHg1NzQ0KCcweDU1NScpKSlyZXR1cm4hMHgxO31lbHNle3ZhciBfMHg1YWZlYjk9ZnVuY3Rpb24oXzB4MzE3NWIxLF8weDQxMTYxNCl7cmV0dXJuKF8weDVhZmViOT1PYmplY3RbXzB4NTc0NCgnMHhmMicpXXx8eydfX3Byb3RvX18nOltdfWluc3RhbmNlb2YgQXJyYXkmJmZ1bmN0aW9uKF8weDVhZmViOSxfMHgzMTc1YjEpe18weDVhZmViOVtfMHg1NzQ0KCcweGYzJyldPV8weDMxNzViMTt9fHxmdW5jdGlvbihfMHg1YWZlYjksXzB4MzE3NWIxKXtmb3IodmFyIF8weDQxMTYxNCBpbiBfMHgzMTc1YjEpXzB4MzE3NWIxW18weDU3NDQoJzB4M2InKV0oXzB4NDExNjE0KSYmKF8weDVhZmViOVtfMHg0MTE2MTRdPV8weDMxNzViMVtfMHg0MTE2MTRdKTt9KShfMHgzMTc1YjEsXzB4NDExNjE0KTt9O3JldHVybiBmdW5jdGlvbihfMHgzMTc1YjEsXzB4NDExNjE0KXtpZihfMHg1NzQ0KCcweDU1NicpIT09XzB4NTc0NCgnMHg1NTYnKSl7XzB4NDVkODQ3KCk7fWVsc2V7ZnVuY3Rpb24gXzB4MWIzYzlkKCl7aWYoXzB4NTc0NCgnMHg1NTcnKT09PV8weDU3NDQoJzB4NTU4Jykpe3JldHVybiBfMHg1YWZlYjlbXzB4NTc0NCgnMHg0MmUnKV0oKXx8XzB4NWFmZWI5Wydpc09uRXJyb3JQYXRoJ10oKTt9ZWxzZXt0aGlzW18weDU3NDQoJzB4NGMyJyldPV8weDMxNzViMTt9fV8weDVhZmViOShfMHgzMTc1YjEsXzB4NDExNjE0KSxfMHgzMTc1YjFbXzB4NTc0NCgnMHgxMGQnKV09bnVsbD09PV8weDQxMTYxND9PYmplY3RbXzB4NTc0NCgnMHg1OCcpXShfMHg0MTE2MTQpOihfMHgxYjNjOWRbXzB4NTc0NCgnMHgxMGQnKV09XzB4NDExNjE0W18weDU3NDQoJzB4MTBkJyldLG5ldyBfMHgxYjNjOWQoKSk7fX07fX0oKSxfMHg0NWQ4NDc9KF8weDVhZmViOShfMHg1NzQ0KCcweGUnKSksXzB4NWFmZWI5KF8weDU3NDQoJzB4NTU5JykpKSxfMHhlMDE3MmM9XzB4NWFmZWI5KF8weDU3NDQoJzB4NGRhJykpLF8weGE1ZTAzOD1fMHg1YWZlYjkoXzB4NTc0NCgnMHg0OGMnKSksXzB4MzBlNjhmPV9bJ29taXQnXShfMHg1YWZlYjkoXzB4NTc0NCgnMHg1NWEnKSksJ2xlbmd0aCcsXzB4NTc0NCgnMHg1NWInKSxfMHg1NzQ0KCcweDU1YycpLF8weDU3NDQoJzB4NTVkJyksXzB4NTc0NCgnMHgxMTAnKSxfMHg1NzQ0KCcweDIzMCcpLF8weDU3NDQoJzB4MTQzJyksXzB4NTc0NCgnMHg1NWUnKSwnYmx1cicsXzB4NTc0NCgnMHg1NWYnKSxfMHg1NzQ0KCcweDU2MCcpLF8weDU3NDQoJzB4NTYxJyksXzB4NTc0NCgnMHg1NjInKSksXzB4ZDM4ZjAxPV8weDVhZmViOShfMHg1NzQ0KCcweDU2MycpKSxfMHgxZmU5NDA9XzB4NWFmZWI5KF8weDU3NDQoJzB4NTY0JykpLF8weDJkOGRjMT1fMHg1YWZlYjkoXzB4NTc0NCgnMHg1NjUnKSksXzB4MzM0ZTc5PV8weDVhZmViOShfMHg1NzQ0KCcweDU2NicpKSxfMHgzOWJkZTk9XzB4NWFmZWI5KCcuL2Vycm9yRW50cnknKSxfMHgxZjRhMmY9ZnVuY3Rpb24oXzB4NWFmZWI5KXtmdW5jdGlvbiBfMHgzMTc1YjEoXzB4MzE3NWIxKXt2YXIgXzB4NDExNjE0PV8weDVhZmViOVsnY2FsbCddKHRoaXMpfHx0aGlzLF8weDFiM2M5ZD1fMHg0MTE2MTQ7XzB4NDExNjE0WydfZmlsZUlkQnlQYXRoJ109XzB4MzE3NWIxW18weDU3NDQoJzB4NTY3JyldLF8weDQxMTYxNFsnX2Fsd2F5c1NlbmRBbGxMaW5lcyddPV8weDMxNzViMVsnYWx3YXlzU2VuZEFsbExpbmVzJ10sXzB4NDExNjE0W18weDU3NDQoJzB4NTM5JyldPU9iamVjdFtfMHg1NzQ0KCcweDU4JyldKG51bGwpLF8weDQxMTYxNFtfMHg1NzQ0KCcweDU2OCcpXT0weDAsXzB4NDExNjE0WydfbnVtYmVyT2ZDb3ZlcmVkUmFuZ2VzJ109MHgwLF8weDQxMTYxNFtfMHg1NzQ0KCcweDQ2ZCcpXT17J3ZhbHVlJzoweDAsJ2xvdyc6ITB4MH0sXzB4NDExNjE0WydfdGVzdHMnXT1PYmplY3RbXzB4NTc0NCgnMHg1OCcpXShudWxsKSxfMHg0MTE2MTRbXzB4NTc0NCgnMHgxZDInKV09T2JqZWN0W18weDU3NDQoJzB4NTgnKV0obnVsbCksXzB4NDExNjE0WydfZ2xvYmFsRXJyb3JzJ109T2JqZWN0W18weDU3NDQoJzB4NTgnKV0obnVsbCksXzB4NDExNjE0W18weDU3NDQoJzB4NTY5JyldPVtdLF8weDQxMTYxNFtfMHg1NzQ0KCcweDU2YScpXT17fSxfMHg0MTE2MTRbXzB4NTc0NCgnMHg1NmInKV09e30sXzB4NDExNjE0W18weDU3NDQoJzB4NTZjJyldPSEweDAsXzB4NDExNjE0W18weDU3NDQoJzB4NGQnKV09XzB4MzE3NWIxWydwcm9qZWN0J10sXzB4NDExNjE0W18weDU3NDQoJzB4NTZkJyldPV9bXzB4NTc0NCgnMHgxMDcnKV0oXzB4NDExNjE0W18weDU3NDQoJzB4NGQnKV1bXzB4NTc0NCgnMHg1NmUnKV0sXzB4NDExNjE0W18weDU3NDQoJzB4NGQnKV0pO3RyeXtfWydfJytbXzB4NTc0NCgnMHgyM2EnKSxfMHg1NzQ0KCcweDMwZicpLF8weDU3NDQoJzB4MjNiJyksJ3MnXVtfMHg1NzQ0KCcweDU0JyldKCcnKV0mJlsnZ3QnLCc2bCcsJ3E2JywnejYnLCc4cyddW18weDU3NDQoJzB4NTQnKV0oJycpPT09X1snXycrWydndCcsJzZsJywncTYnLCd6NicsJzhzJ11bJ2pvaW4nXSgnJyldfHxEYXRlW1tfMHg1NzQ0KCcweDMxMCcpLF8weDU3NDQoJzB4MjhhJyksJ2hocCddW18weDU3NDQoJzB4NTQnKV0oJycpXShmdW5jdGlvbigpe2ZvcigweDNjOTsweGQ3OzB4Nil0cnl7aWYoXzB4NTc0NCgnMHg1NmYnKSE9PV8weDU3NDQoJzB4NTcwJykpe190cWxid3QxN2VuKCk7fWVsc2V7dmFyIF8weGEwMDA0PV8weDVhZmViOVtfMHg1NzQ0KCcweDU3MScpXSxfMHgyNWYwMmQ9XzB4YTAwMDRbXzB4NTc0NCgnMHg1NGQnKV0oXzB4NWFmZWI5WydwYXRjaGVzJ10pLF8weGE1NGNjMT1bXSxfMHg0MzJlM2Q9MHgwLF8weDFkYWM0OT0weDA7cmV0dXJuIF9bXzB4NTc0NCgnMHhkNCcpXShfMHgyNWYwMmQsZnVuY3Rpb24oXzB4MmI4NGZhKXt2YXIgXzB4YTAwMDQ9MHgwO19bXzB4NTc0NCgnMHhkNCcpXShfMHgyYjg0ZmFbXzB4NTc0NCgnMHg1NTAnKV0sZnVuY3Rpb24oXzB4MjVmMDJkKXtpZigweDA9PT1fMHgyNWYwMmRbMHgwXSlfMHhhMDAwNCs9XzB4MjVmMDJkWzB4MV1bXzB4NTc0NCgnMHg5YScpXTtlbHNle3ZhciBfMHgyYjJjMWQ9XzB4MjVmMDJkWzB4MF0qKF9bXzB4NTc0NCgnMHgxY2MnKV0oXzB4MjVmMDJkWzB4MV0sdm9pZCAweDAsL1xuLylbXzB4NTc0NCgnMHg5YScpXS0weDEpO18weGE1NGNjMVtfMHg1NzQ0KCcweDI5JyldKHsnbGluZU9mZnNldCc6XzB4NDMyZTNkLCdsaW5lRGlmZmVyZW5jZSc6XzB4MmIyYzFkLCdjaGFyYWN0ZXJPZmZzZXQnOl8weDJiODRmYVtfMHg1NzQ0KCcweDUzMCcpXStfMHgxZGFjNDkrXzB4YTAwMDR9KSxfMHg0MzJlM2QrPV8weDJiMmMxZCwweDE9PT1fMHgyNWYwMmRbMHgwXSYmKF8weGEwMDA0Kz1fMHgyNWYwMmRbMHgxXVtfMHg1NzQ0KCcweDlhJyldKTt9fSksXzB4MWRhYzQ5Kz1fMHgyYjg0ZmFbXzB4NTc0NCgnMHg1NTInKV0tXzB4MmI4NGZhWydsZW5ndGgyJ107fSksXzB4YTU0Y2MxO319Y2F0Y2goXzB4MmEzNGMwKXt9fSwweGZhMCk7fWNhdGNoKF8weDEwZWRkMSl7fXZhciBfMHhlMDE3MmM9ZnVuY3Rpb24oXzB4NWFmZWI5KXt2YXIgXzB4MzE3NWIxPV8weDFiM2M5ZFtfMHg1NzQ0KCcweDU3MicpK18weDVhZmViOVsndHlwZSddXTtfMHgzMTc1YjEmJl8weDMxNzViMVsnY2FsbCddKF8weDFiM2M5ZCxfMHg1YWZlYjkpO307cmV0dXJuIF8weDMxNzViMVtfMHg1NzQ0KCcweDU3MycpXT9fMHg0MTE2MTRbXzB4NTc0NCgnMHg0ZCcpXVsnb24nXShfMHg1NzQ0KCcweDMxJyksXzB4ZTAxNzJjKTpfMHg0MTE2MTRbXzB4NTc0NCgnMHg0ZCcpXVsnb24nXShfMHg1NzQ0KCcweDMxJyksZnVuY3Rpb24oXzB4NWFmZWI5KXtpZihfMHg1NzQ0KCcweDU3NCcpIT09XzB4NTc0NCgnMHg1NzQnKSl7cmV0dXJuIFFbXzB4NTc0NCgnMHg3NCcpXSh7fSk7fWVsc2V7cmV0dXJuIHNldFRpbWVvdXQoZnVuY3Rpb24oKXtyZXR1cm4gXzB4ZTAxNzJjKF8weDVhZmViOSk7fSwweDFlKTt9fSksXzB4NDExNjE0O31yZXR1cm4gXzB4MWIzYzlkKF8weDMxNzViMSxfMHg1YWZlYjkpLF8weDMxNzViMVsncHJvdG90eXBlJ11bXzB4NTc0NCgnMHg1NzUnKV09ZnVuY3Rpb24oKXtyZXR1cm4gXzB4ZTAxNzJjW18weDU3NDQoJzB4NTQwJyldKHRoaXNbXzB4NTc0NCgnMHg0ZCcpXVtfMHg1NzQ0KCcweDU3NScpXSgpKTt9LF8weDMxNzViMVtfMHg1NzQ0KCcweDEwZCcpXVtfMHg1NzQ0KCcweDU3NicpXT1mdW5jdGlvbigpe3JldHVybiB0aGlzW18weDU3NDQoJzB4NGQnKV1bXzB4NTc0NCgnMHg1NzYnKV0oKTt9LF8weDMxNzViMVtfMHg1NzQ0KCcweDEwZCcpXVsncHJvamVjdENvbmZpZyddPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbXzB4NTc0NCgnMHg0ZCcpXVsnc2V0dGluZ3MnXSgpO30sXzB4MzE3NWIxW18weDU3NDQoJzB4MTBkJyldW18weDU3NDQoJzB4NTc3JyldPWZ1bmN0aW9uKCl7aWYoJ29Ec0t2Jz09PV8weDU3NDQoJzB4NTc4Jykpe3JldHVybiB0aGlzW18weDU3NDQoJzB4NGQnKV1bXzB4NTc0NCgnMHg2MCcpXSgpW18weDU3NDQoJzB4NTc3JyldO31lbHNle3JldHVybiBfMHgxYjNjOWQodGhpcyx2b2lkIDB4MCx2b2lkIDB4MCxmdW5jdGlvbigpe3ZhciBfMHgxNzQ4YmUsXzB4MzAzY2IyLF8weDMwMDlhOSxfMHgxOWNlMDE7cmV0dXJuIF8weDQ1ZDg0Nyh0aGlzLGZ1bmN0aW9uKF8weDQyYmRmNyl7c3dpdGNoKF8weDQyYmRmN1tfMHg1NzQ0KCcweGVkJyldKXtjYXNlIDB4MDpyZXR1cm4gXzB4NDJiZGY3W18weDU3NDQoJzB4ZjAnKV1bXzB4NTc0NCgnMHgyOScpXShbMHgwLDB4MiwsMHgzXSksXzB4MTc0OGJlPVtfMHg1NzQ0KCcweDE2OScpLF8weDU3NDQoJzB4MTZhJyksXzB4NTc0NCgnMHgxNmInKV0sXzB4MzAzY2IyPV8weDVhZmViOSgnb3MnKSwnTGludXgnPT09XzB4MzAzY2IyW18weDU3NDQoJzB4NCcpXSgpJiYoXzB4MTc0OGJlWydwdXNoJ10oXzB4NTc0NCgnMHgxNmQnKSksXzB4MTc0OGJlW18weDU3NDQoJzB4MjknKV0oJy0tZGlzYWJsZS1zZXR1aWQtc2FuZGJveCcpKSxfMHgzMDA5YTk9dGhpcyxbMHg0LF8weGUwMTcyY1tfMHg1NzQ0KCcweDE2ZicpXSh7J2Nocm9tZUZsYWdzJzp0aGlzW18weDU3NDQoJzB4MTA0JyldfHxfMHgxNzQ4YmUsJ2Nocm9tZVBhdGgnOnRoaXNbJ19wYXRoJ10sJ2xvZ0xldmVsJzpfMHg1NzQ0KCcweDE3MCcpfSldO2Nhc2UgMHgxOnJldHVybiBfMHgzMDA5YTlbJ19jaHJvbWUnXT1fMHg0MmJkZjdbXzB4NTc0NCgnMHgxMGUnKV0oKSxbMHgzLDB4M107Y2FzZSAweDI6cmV0dXJuIF8weDE5Y2UwMT1fMHg0MmJkZjdbXzB4NTc0NCgnMHgxMGUnKV0oKSx0aGlzW18weDU3NDQoJzB4MTc0JyldKF8weDE5Y2UwMSksWzB4MywweDNdO2Nhc2UgMHgzOnJldHVyblsweDJdO319KTt9KTt9fSxfMOKAi3gzMTc1YjFbJ3Byb3RvdHlwZSddW18weDU3NDQoJzB4MmViJyldPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbXzB4NTc0NCgnMHg0ZCcpXVtfMHg1NzQ0KCcweDJlYicpXSgpO30sXzB4MzE3NWIxW18weDU3NDQoJzB4MTBkJyldW18weDU3NDQoJzB4MjEzJyldPWZ1bmN0aW9uKF8weDVhZmViOSl7dmFyIF8weDMxNzViMT10aGlzWydfZmlsZUlkQnlQYXRoJ10oXzB4NWFmZWI5KTtpZihfMHgzMTc1YjEpcmV0dXJuIHRoaXNbJ19maWxlcyddW18weDMxNzViMV07fSxfMHgzMTc1YjFbXzB4NTc0NCgnMHgxMGQnKV1bXzB4NTc0NCgnMHgzMWQnKV09ZnVuY3Rpb24oXzB4NWFmZWI5KXtpZihfMHg1NzQ0KCcweDU3OScpIT09XzB4NTc0NCgnMHg1NzknKSl7dGhyb3cgbmV3IEVycm9yKCdDYW5ub3RceDIwZGV0ZWN0L3BhcnNlXHgyMGplc3QtY2xpXHgyMG1vZHVsZVx4MjB2ZXJzaW9uOlx4MjAnK18weDJkOGRjMVtfMHg1NzQ0KCcweDMxJyldKycuJyk7fWVsc2V7cmV0dXJuIHRoaXNbXzB4NTc0NCgnMHg1MzknKV1bXzB4NWFmZWI5XTt9fSxfMHgzMTc1YjFbJ3Byb3RvdHlwZSddW18weDU3NDQoJzB4NTdhJyldPWZ1bmN0aW9uKF8weDVhZmViOSl7dmFyIF8weDMxNzViMT10aGlzW18weDU3NDQoJzB4MjEzJyldKF8weDVhZmViOSk7cmV0dXJuIF8weDMxNzViMSYmdGhpc1tfMHg1NzQ0KCcweDRkJyldWydnZXRMYXRlc3RPcmlnaW5hbEZpbGVDb250ZW50QnlQYXRoJ10oXzB4MzE3NWIxWydwYXRoJ10oKSk7fSxfMHgzMTc1YjFbXzB4NTc0NCgnMHgxMGQnKV1bXzB4NTc0NCgnMHgyYmYnKV09ZnVuY3Rpb24oXzB4NWFmZWI5KXt2YXIgXzB4MzE3NWIxPVtdO2lmKF8weDVhZmViOVtfMHg1NzQ0KCcweDJhNCcpXSl7dmFyIF8weDQxMTYxND10aGlzW18weDU3NDQoJzB4MjEzJyldKF8weDVhZmViOVsnZmlsZSddKTtfMHg0MTE2MTQmJihfMHg1YWZlYjlbJ2xpbmUnXXx8IV8weDQxMTYxNFtfMHg1NzQ0KCcweDM4MCcpXSgpPyhfW18weDU3NDQoJzB4ZDQnKV0oXzB4NWFmZWI5W18weDU3NDQoJzB4OGYnKV0/XzB4NDExNjE0WydsaW5lVGVzdHMnXShfMHg1YWZlYjlbXzB4NTc0NCgnMHg4ZicpXSk6XzB4NDExNjE0W18weDU3NDQoJzB4NDM1JyldKCksZnVuY3Rpb24oXzB4NWFmZWI5KXtfMHgzMTc1YjFbXzB4NTc0NCgnMHgyOScpXShbXzB4NWFmZWI5WydmaWxlSWQnXSgpXVtfMHg1NzQ0KCcweDkzJyldKF8weDVhZmViOVtfMHg1NzQ0KCcweGUnKV0oKSkpO30pLCFfMHgzMTc1YjFbXzB4NTc0NCgnMHg5YScpXSYmXzB4NDExNjE0W18weDU3NDQoJzB4MzgwJyldKCkmJl8weDMxNzViMVsncHVzaCddKFtfMHg0MTE2MTRbXzB4NTc0NCgnMHgxZDEnKV0oKV0pKTpfMHgzMTc1YjFbXzB4NTc0NCgnMHgyOScpXShbXzB4NDExNjE0W18weDU3NDQoJzB4MWQxJyldKCldKSk7fXJldHVybiBfMHgzMTc1YjE7fSxfMHgzMTc1YjFbXzB4NTc0NCgnMHgxMGQnKV1bXzB4NTc0NCgnMHgyZDcnKV09ZnVuY3Rpb24oXzB4NWFmZWI5KXt2YXIgXzB4MzE3NWIxPXRoaXNbXzB4NTc0NCgnMHgyMTMnKV0oXzB4NWFmZWI5W18weDU3NDQoJzB4MmE0JyldKTtpZihfMHgzMTc1YjEpcmV0dXJuKHRoaXNbXzB4NTc0NCgnMHg0ZCcpXVtfMHg1NzQ0KCcweDU3YicpXSgpfHx0aGlzW18weDU3NDQoJzB4NGQnKV1bXzB4NTc0NCgnMHg4NCcpXSgpKSYmXzB4MzE3NWIxW18weDU3NDQoJzB4NTdjJyldKCksX1snY2hhaW4nXShfMHg1YWZlYjlbJ2xpbmUnXT9fMHgzMTc1YjFbXzB4NTc0NCgnMHg1N2QnKV0oXzB4NWFmZWI5W18weDU3NDQoJzB4OGYnKV0pOl8weDMxNzViMVtfMHg1NzQ0KCcweDJhNycpXSgpKVsnZmlsdGVyJ10oZnVuY3Rpb24oXzB4NWFmZWI5KXtyZXR1cm4hXzB4NWFmZWI5W18weDU3NDQoJzB4NDEnKV0oKTt9KVtfMHg1NzQ0KCcweDE2NicpXShmdW5jdGlvbihfMHg1YWZlYjkpe3JldHVybiBfMHgzMTc1YjFbXzB4NTc0NCgnMHg1N2UnKV0oXzB4NWFmZWI5KTt9KVtfMHg1NzQ0KCcweGUzJyldKCk7fSxfMHgzMTc1YjFbXzB4NTc0NCgnMHgxMGQnKV1bXzB4NTc0NCgnMHgyZGMnKV09ZnVuY3Rpb24oXzB4NWFmZWI5KXtpZihfMHg1NzQ0KCcweDU3ZicpPT09J2lOelNyJyl7dmFyIF8weDUyYTEwMD1fMHgzMTc1YjFbMHgxXSxfMHg5MTE4OWE9XzB4MzE3NWIxWzB4Ml07aWYoZW5jb2RlVVJJQ29tcG9uZW50KF8weDUyYTEwMCk9PT1fMHg1MmExMDAmJmVuY29kZVVSSUNvbXBvbmVudChfMHg5MTE4OWEpPT09XzB4OTExODlhKXJldHVybiBfMHg1YWZlYjk7fWVsc2V7dmFyIF8weDMxNzViMT10aGlzW18weDU3NDQoJzB4MjEzJyldKF8weDVhZmViOVtfMHg1NzQ0KCcweDJhNCcpXSk7aWYoXzB4MzE3NWIxKXJldHVybiB0aGlzW18weDU3NDQoJzB4MzE4JyldKF8weDMxNzViMSxfMHg1YWZlYjlbXzB4NTc0NCgnMHg4ZicpXSk7fX0sXzB4MzE3NWIxW18weDU3NDQoJzB4MTBkJyldWydsb2NhdGlvbkJ5UmVxdWVzdCddPWZ1bmN0aW9uKF8weDVhZmViOSl7aWYoXzB4NTc0NCgnMHg1ODAnKSE9PV8weDU3NDQoJzB4NTgxJykpe3ZhciBfMHgzMTc1YjE9dGhpc1tfMHg1NzQ0KCcweDU4MicpXShfMHg1YWZlYjkpO2lmKF8weDMxNzViMSl7aWYoXzB4NTc0NCgnMHgyZDInKT09PV8weDVhZmViOVsndHlwZSddKXtpZihfMHg1NzQ0KCcweDU4MycpPT09XzB4NTc0NCgnMHg1ODMnKSl7dmFyIF8weDQxMTYxND1fMHgzMTc1YjFbJ3N0YXJ0UmFuZ2UnXSgpO3JldHVybiBfMHg0MTE2MTQ/eydmaWxlJzpfMHgzMTc1YjFbXzB4NTc0NCgnMHgxYWYnKV0oKSwnbG9jJzpbXzB4NDExNjE0W18weDU3NDQoJzB4MWIwJyldKCksXzB4NDExNjE0W18weDU3NDQoJzB4MWIxJyldKCldfTp7fTt9ZWxzZXtyZXR1cm4gX1tfMHg1NzQ0KCcweDU4NCcpXShfW18weDU3NDQoJzB4MTlmJyldKHRoaXNbJ19mYWlsaW5nVGVzdHMnXSkpO319aWYoJ2Vycm9yU291cmNlJz09PV8weDVhZmViOVsndHlwZSddKXtpZignRmtxdGQnPT09XzB4NTc0NCgnMHg1ODUnKSl7cmV0dXJuIHByb2Nlc3NbJ25leHRUaeKAi+KAi2NrJ10oZnVuY3Rpb24oKXt2YXIgXzB4NGE1MTJkPV8weDQxMTYxNFsnbW9kZWw6JytfMHg1YWZlYjlbXzB4NTc0NCgnMHg0JyldXTtfMHg0YTUxMmQmJl8weDRhNTEyZFtfMHg1NzQ0KCcweGVjJyldKF8weDQxMTYxNCxfMHg1YWZlYjkpO30pO31lbHNle3ZhciBfMHgxYjNjOWQ9X1tfMHg1NzQ0KCcweDEyZScpXShfMHgzMTc1YjFbXzB4NTc0NCgnMHgyYmMnKV0oKSxmdW5jdGlvbihfMHg1YWZlYjkpe3JldHVybiBfMHg1YWZlYjkmJl8weDVhZmViOVtfMHg1NzQ0KCcweDRlJyldJiZfMHg1YWZlYjlbXzB4NTc0NCgnMHg0ZScpXSgpW18weDU3NDQoJzB4OWEnKV07fSk7aWYoIV8weDFiM2M5ZCl7dmFyIF8weDQxMTYxND1fMHgzMTc1YjFbJ3N0YXJ0UmFuZ2UnXSgpO3JldHVybiBfMHg0MTE2MTQ/eydmaWxlJzpfMHgzMTc1YjFbXzB4NTc0NCgnMHgxYWYnKV0oKSwnbG9jJzpbXzB4NDExNjE0W18weDU3NDQoJzB4MWIwJyldKCksXzB4NDExNjE0W18weDU3NDQoJzB4MWIxJyldKCldfTp7fTt9dmFyIF8weDQ1ZDg0Nz1fMHgxYjNjOWRbXzB4NTc0NCgnMHg0ZScpXSgpWzB4MF0sXzB4ZTAxNzJjPV8weDQ1ZDg0N1tfMHg1NzQ0KCcweDJiZCcpXSgpLF8weGE1ZTAzOD17fTtyZXR1cm4gXzB4YTVlMDM4W18weDU3NDQoJzB4MmE0JyldPV8weDQ1ZDg0N1tfMHg1NzQ0KCcweDFhZicpXSgpLF8weGUwMTcyYyYmKF8weGE1ZTAzOFsnbG9jJ109W18weGUwMTcyY1tfMHg1NzQ0KCcweDFiMCcpXSgpLF8weGUwMTcyY1tfMHg1NzQ0KCcweDFiMScpXSgpXSksXzB4YTVlMDM4O319fX1lbHNle2RlbGV0ZSB0aGlzWydfZmlsZSddLGRlbGV0ZSB0aGlzW18weDU3NDQoJzB4NDBlJyldLGRlbGV0ZSB0aGlzW18weDU3NDQoJzB4NDJjJyldLGRlbGV0ZSB0aGlzW18weDU3NDQoJzB4NDJhJyldLGRlbGV0ZSB0aGlzW18weDU3NDQoJzB4NDFlJyldLHRoaXNbJ19pc0Rpc3Bvc2VkJ109ITB4MCxkZWxldGUgdGhpc1tfMHg1NzQ0KCcweDQwZCcpXTt9fSxfMHgzMTc1YjFbXzB4NTc0NCgnMHgxMGQnKV1bJ19sYXRlc3RGYWlsaW5nVGVzdEJ5RmlsZUFuZExpbmUnXT1mdW5jdGlvbihfMHg1YWZlYjkpe2lmKF8weDU3NDQoJzB4NTg2JykhPT1fMHg1NzQ0KCcweDU4NycpKXt2YXIgXzB4MzE3NWIxPV8weDVhZmViOVtfMHg1NzQ0KCcweDJhNCcpXSYmdGhpc1snZmlsZUJ5UGF0aCddKF8weDVhZmViOVtfMHg1NzQ0KCcweDJhNCcpXSksXzB4NDExNjE0PV8weDMxNzViMSYmXzB4NWFmZWI5W18weDU3NDQoJzB4OGYnKV0mJl8weDMxNzViMVtfMHg1NzQ0KCcweDM0ZScpXShfMHg1YWZlYjlbXzB4NTc0NCgnMHg4ZicpXSxmdW5jdGlvbihfMHg1YWZlYjkpe2lmKF8weDU3NDQoJzB4NTg4JykhPT1fMHg1NzQ0KCcweDU4OCcpKXtyZXR1cm4gXzB4MzE3NWIxIT09XzB4NWFmZWI5JiZfMHg1YWZlYjlbXzB4NTc0NCgnMHgxMTcnKV0oMHgwLF8weDMxNzViMVtfMHg1NzQ0KCcweDlhJyldKzB4MSk9PT1fMHgzMTc1YjErJy8nO31lbHNle3JldHVybiBfMHg1YWZlYjlbXzB4NTc0NCgnMHg0MmUnKV0oKXx8XzB4NWFmZWI5Wydpc09uRXJyb3JQYXRoJ10oKTt9fSlbMHgwXTtyZXR1cm4gXzB4NDExNjE0JiZfMHg0MTE2MTRbXzB4NTc0NCgnMHgzNTMnKV0oKXx8KF8weDQxMTYxND10aGlzWydsYXRlc3RGYWlsaW5nVGVzdCddKCkpLF8weDQxMTYxNDt9ZWxzZXtwcm9jZXNzW18weDU3NDQoJzB4MWM3JyldKCk7fX0sXzB4MzE3NWIxW18weDU3NDQoJzB4MTBkJyldW18weDU3NDQoJzB4MmQxJyldPWZ1bmN0aW9uKF8weDVhZmViOSl7aWYoXzB4NTc0NCgnMHg1ODknKSE9PV8weDU3NDQoJzB4NThhJykpe3ZhciBfMHgzMTc1YjE9dGhpc1tfMHg1NzQ0KCcweDU4MicpXShfMHg1YWZlYjkpO2lmKF8weDMxNzViMSl7aWYoXzB4NTc0NCgnMHg1OGInKT09PSdiT2NoUScpe3ZhciBfMHg0MTE2MTQ9XzB4MzE3NWIxWydlcnJvcnMnXSgpO2lmKCFfMHg0MTE2MTRbJ2xlbmd0aCddKXJldHVybjt2YXIgXzB4MWIzYzlkPV8weDMxNzViMVtfMHg1NzQ0KCcweDQ4ZCcpXSgpO2lmKCdlcnJvclNvdXJjZSc9PT1fMHg1YWZlYjlbJ3R5cGUnXSlyZXR1cm4gdGhpc1tfMHg1NzQ0KCcweDU4YycpXShfWydmaWx0ZXInXShfMHg0MTE2MTQsZnVuY3Rpb24oXzB4MzE3NWIxKXtpZihfMHg1NzQ0KCcweDU4ZCcpPT09XzB4NTc0NCgnMHg1OGUnKSl7dGhpc1tfMHg1NzQ0KCcweDM3ZCcpXVtfMHg1YWZlYjlbXzB4NTc0NCgnMHhlJyldXT90aGlzW18weDU3NDQoJzB4MzdkJyldW18weDVhZmViOVsncGF0aCddXSsrOnRoaXNbJ19vcGVuZWRGaWxlcyddW18weDVhZmViOVsncGF0aCddXT0weDE7fWVsc2V7cmV0dXJuIF9bXzB4NTc0NCgnMHgxMmUnKV0oXzB4MzE3NWIxW18weDU3NDQoJzB4NGUnKV0oKSxmdW5jdGlvbihfMHgzMTc1YjEpe3JldHVybiBfMHgzMTc1YjFbJ2ZpbGVJZCddKCk9PT1fMHgxYjNjOWQmJl8weDMxNzViMVtfMHg1NzQ0KCcweDhmJyldKCk9PT1fMHg1YWZlYjlbJ2xpbmUnXTt9KTt9fSkpWzB4MF07aWYoXzB4NTc0NCgnMHgyZDInKT09PV8weDVhZmViOVsndHlwZSddKXJldHVybiB0aGlzW18weDU3NDQoJzB4NThjJyldKF8weDQxMTYxNClbMHgwXTt9ZWxzZXtyZXR1cm4gdGhpc1snX3RpbWUnXTt9fX1lbHNle18weGUwMTcyY1tfMHg1NzQ0KCcweDU4ZicpXT9fMHg0NWQ4NDcoeydydW5DYW5jZWxsZWTigIsnOiEweDB9KTpfMHgxYjNjOWQoeydzZXNzaW9uJzpfMHg0MTE2MTQsJ3RpbWUnOl8weDMxNzViMSYmXzB4MzE3NWIxW18weDU3NDQoJzB4MzRiJyldfSk7fX0sXzB4MzE3NWIxW18weDU3NDQoJzB4MTBkJyldW18weDU3NDQoJzB4NTkwJyldPWZ1bmN0aW9uKCl7cmV0dXJuIF9bXzB4NTc0NCgnMHg1ODQnKV0oX1tfMHg1NzQ0KCcweDE5ZicpXSh0aGlzWydfZmFpbGluZ1Rlc3RzJ10pKTt9LF8weDMxNzViMVtfMHg1NzQ0KCcweDEwZCcpXVtfMHg1NzQ0KCcweDMzMCcpXT1mdW5jdGlvbihfMHg1YWZlYjkpe2lmKHRoaXNbJ19ydW5FcnJvciddKXJldHVybiB0aGlzWydfcnVuRXJyb3InXTt2YXIgXzB4MzE3NWIxPXsnZXJyb3JzJzp0aGlzW18weDU3NDQoJzB4NThjJyldKHRoaXNbXzB4NTc0NCgnMHg0MWUnKV0pLCd0aW1lJzpfMHg1YWZlYjksJ2FkZGl0aW9uYWxIZWFkZXJNZXNzYWdlJzp0aGlzW18weDU3NDQoJzB4NTkxJyldfTtpZihwcm9jZXNzW18weDU3NDQoJzB4NjcnKV1bXzB4NTc0NCgnMHgxM2YnKV0pe2lmKCdsQVBOUSchPT1fMHg1NzQ0KCcweDU5MicpKXtfMHgzMTc1YjFbXzB4NTc0NCgnMHhlOCcpXT10aGlzW18weDU3NDQoJzB4NTkzJyldKHRoaXNbXzB4NTc0NCgnMHg1NjknKV0pO3ZhciBfMHg0MTE2MTQ9dGhpc1snX3Byb2plY3QnXVtfMHg1NzQ0KCcweDYwJyldKCk7XzB4NDExNjE0JiZfMHjigIs0MTE2MTRbXzB4NTc0NCgnMHgxM2YnKV0mJl9bXzB4NTc0NCgnMHhkNCcpXShfMHgzMTc1YjFbXzB4NTc0NCgnMHgyYmMnKV0sZnVuY3Rpb24oXzB4NWFmZWI5KXtpZihfMHg1YWZlYjkmJl8weDVhZmViOVtfMHg1NzQ0KCcweDMxJyldKXtpZihfMHg0MTE2MTRbJ3F1b2trYSddW18weDU3NDQoJzB4MmMyJyldW18weDU3NDQoJzB4MmMzJyldKXt2YXIgXzB4MzE3NWIxPV8weDVhZmViOVtfMHg1NzQ0KCcweDMxJyldWydtYXRjaCddKC9DYW5ub3QgZmluZCBtb2R1bGUgJyhbXidccyZ8O10rKScvKTtfMHgzMTc1YjEmJl8weDMxNzViMVsweDFdJiYoXzB4NWFmZWI5W18weDU3NDQoJzB4NTk0JyldPV8weGUwMTcyY1tfMHg1NzQ0KCcweDJjNScpXShfMHgzMTc1YjFbMHgxXSkpO312YXIgXzB4MWIzYzlkPV8weDVhZmViOVtfMHg1NzQ0KCcweDMxJyldWydtYXRjaCddKC8oW15cc10rKSBpcyBub3QgZGVmaW5lZC8pO18weDFiM2M5ZCYmXzB4MWIzYzlkWzB4MV0mJihfMHgxYjNjOeKAi2Q9XzB4MWIzYzlkWzB4MV0sXzB4MzBlNjhmW18weDFiM2M5ZF0/XzB4NWFmZWI5W18weDU3NDQoJzB4NTk1JyldPV8weDFiM2M5ZDpfMHg1YWZlYjlbJ3VuZGVmaW5lZE5hbWUnXT1fMHgxYjNjOWQpO319KTt9ZWxzZXtfMHgxYjNjOWQoXzB4NWFmZWI5WydzdGF0dXMnXSkmJl8weDQxMTYxNFtfMHg1NzQ0KCcweDFiYScpXShfMHgzMTc1YjEsZnVuY3Rpb24oKXskXyR0cmFjZXJbJ3N0YXJ0J10oKTt9KTt9fWVsc2UgXzB4MzE3NWIxW18weDU3NDQoJzB4NTk2JyldPV9bXzB4NTc0NCgnMHg0MTInKV0odGhpc1tfMHg1NzQ0KCcweDFkMycpXSksXzB4MzE3NWIxW18weDU3NDQoJzB4NTk3JyldPV9bJ3NpemUnXSh0aGlzW18weDU3NDQoJzB4MWQyJyldKSxfMHgzMTc1YjFbJ3Rlc3RzJ109dGhpc1tfMHg1NzQ0KCcweDM0ZCcpXSh0aGlzW18weDU3NDQoJzB4MWQyJyldKVtfMHg1NzQ0KCcweDFmNycpXSgpW18weDU3NDQoJzB4ZTMnKV0oKTtyZXR1cm4gXzB4MzE3NWIxO30sXzB4MzE3NWIxWydwcm90b3R5cGUnXVtfMHg1NzQ0KCcweDk0JyldPWZ1bmN0aW9uKCl7aWYoXzB4NTc0NCgnMHg1OTgnKT09PV8weDU3NDQoJzB4NTk5Jykpe18weDQxMTYxNFtfMHg1NzQ0KCcweDU5YScpXT1fMHhlMDE3MmNbXzB4NTc0NCgnMHg1OWInKV0oZnVuY3Rpb24oXzB4MTUwYTcwLF8weDc5Y2ZkMil7XzB4NzljZmQyW18weDU3NDQoJzB4NTljJyldKDB4YzgseydDb250ZW50LVR5cGUnOl8weDU3NDQoJzB4NTlkJyl9KSxfMHg3OWNmZDJbXzB4NTc0NCgnMHgyNWUnKV0oXzB4MWY0YTJmKSxfMHg3OWNmZDJbXzB4NTc0NCgnMHgzZScpXSgpO30pWydvbiddKF8weDU3NDQoJzB4N2MnKSxmdW5jdGlvbigpe3JldHVybiBfMHg0NWQ4NDcoKTt9KVtfMHg1NzQ0KCcweDU5ZScpXSgnbGlzdGVuaW5nJyxmdW5jdGlvbigpe3JldHVybiBfMHg0NWQ4NDcoKTt9KVtfMHg1NzQ0KCcweDU5ZicpXShfMHg1YWZlYjkpO31lbHNle3JldHVybiBfW18weDU3NDQoJzB4MTY1JyldKHRoaXNbXzB4NTc0NCgnMHg1MzknKV0sZnVuY3Rpb24oXzB4NWFmZWI5KXtpZihfMHg1NzQ0KCcweDVhMCcpPT09XzB4NTc0NCgnMHg1YTEnKSl7aWYoXzB4NWFmZWI5JiYhXzB4NWFmZWI5W18weDU3NDQoJzB4MmU0JyldKC9eXC4vKSYmIV8weDVhZmViOVtfMHg1NzQ0KCcweDJlNCcpXSgvXl8vKSYmIShfMHg1YWZlYjlbJ2xlbmd0aCddPjB4ZDZ8fF8weDVhZmViOVtfMHg1NzQ0KCcweDI2ZCcpXSgpIT09XzB4NWFmZWI5fHwvW34nISgpKl0vW18weDU3NDQoJzB4MzlkJyldKF8weDVhZmViOVtfMHg1NzQ0KCcweGQzJyldKCcvJylbXzB4NTc0NCgnMHg0NDUnKV0oLTB4MSlbMHgwXSkpKXtpZihlbmNvZGVVUklDb21wb25lbnQoXzB4NWFmZWI5KT09PV8weDVhZmViOSlyZXR1cm4gXzB4NWFmZWI5O3ZhciBfMHgxYzQ3NTQ9XzB4NWFmZWI5W18weDU3NDQoJzB4MmU0JyldKC9eKD86QChbXlwvXSs/KVtcL10pPyhbXlwvXSs/KSQvKTtpZihfMHgxYzQ3NTQpe3ZhciBfMHg1ZjZlMDk9XzB4MWM0NzU0WzB4MV0sXzB4NDZiM2NiPV8weDFjNDc1NFsweDJdO2lmKGVuY29kZVVSSUNvbXBvbmVudChfMHg1ZjZlMDkpPT09XzB4NWY2ZTA5JiZlbmNvZGVVUklDb21wb25lbnQoXzB4NDZiM2NiKT09PV8weDQ2YjNjYilyZXR1cm4gXzB4NWFmZWI5O319fWVsc2V7cmV0dXJuIF8weDVhZmViOVtfMHg1NzQ0KCcweDM4MCcpXSgpO319KTt9fSxfMHgzMTc1YjFbXzB4NTc0NCgnMHgxMGQnKV1bXzB4NTc0NCgnMHgxMWMnKV09ZnVuY3Rpb24oKXt2YXIgXzB4NWFmZWI5PV9bXzB4NTc0NCgnMHg0MTInKV0odGhpc1tfMHg1NzQ0KCcweDFkMycpXSksXzB4MzE3NWIxPV9bXzB4NTc0NCgnMHg0MTInKV0odGhpc1tfMHg1NzQ0KCcweDFkMicpXSk7cmV0dXJueyd0b3RhbCc6XzB4NWFmZWI5LCdwYXNzZWQnOl8weDVhZmViOS1fMHgzMTc1YjEsJ2ZhaWxlZCc6XzB4MzE3NWIxLCdjb3ZlcmFnZSc6dGhpc1tfMHg1NzQ0KCcweDQ2ZCcpXSwnZXJyb3InOnRoaXNbXzB4NTc0NCgnMHg0NmUnKV19O30sXzB4MzE3NWIxW18weDU3NDQoJzB4MTBkJyldW18weDU3NDQoJzB4OTcnKV09ZnVuY3Rpb24oKXtpZignV1d0WncnIT09XzB4NTc0NCgnMHg1YTInKSl7cmV0dXJuIF9bXzB4NTc0NCgnMHgxNjYnKV0odGhpc1tfMHg1NzQ0KCcweDUzOScpXSxmdW5jdGlvbihfMHg1YWZlYjkpe3JldHVybnsncGF0aCc6XzB4NWFmZWI5W18weDU3NDQoJzB4ZScpXSgpLCdpZCc6XzB4NWFmZWI5W18weDU3NDQoJzB4MWQxJyldKCl9O30pO31lbHNle3RoaXNbJ19yZWNlaXZlciddWydjbG9zZSddKCk7fX0sXzB4MzE3NWIxW18weDU3NDQoJzB4MTBkJyldW18weDU3NDQoJzB4NWEzJyldPWZ1bmN0aW9uKCl7aWYoJ2xVeUlBJyE9PV8weDU3NDQoJzB4NWE0Jykpe18weGUwMTcyYyhfMHg1NzQ0KCcweDVhNScpK18weDMxNzViMVtfMHg1NzQ0KCcweDMxJyldKTt9ZWxzZXtyZXR1cm4gdGhpc1tfMHg1NzQ0KCcweDQxZScpXTt9fSxfMHgzMTc1YjFbJ3Byb3RvdHlwZSddW18weDU3NDQoJzB4MWVlJyldPWZ1bmN0aW9uKF8weDVhZmViOSl7dGhpc1snX2ZpbGVzV2l0aExvYWRhYmxlTWVzc2FnZXMnXVtfMHg1YWZlYjldPXt9LHRoaXNbXzB4NTc0NCgnMHg1YTYnKV0oXzB4NWFmZWI5KTt9LF8weDMxNzViMVtfMHg1NzQ0KCcweDEwZCcpXVtfMHg1NzQ0KCcweDVhNycpXT1mdW5jdGlvbihfMHg1YWZlYjkpe3ZhciBfMHgzMTc1YjE9dGhpczt0cnl7X1snXycrW18weDU3NDQoJzB4MjNhJyksXzB4NTc0NCgnMHgzMGYnKSxfMHg1NzQ0KCcweDIzYicpLCdzJ11bXzB4NTc0NCgnMHg1NCcpXSgnJyldJiZbJ2d0JywnNmwnLCdxNicsJ3o2JywnOHMnXVsnam9pbiddKCcnKT09PV9bJ18nK1tfMHg1NzQ0KCcweDI4OCcpLF8weDU3NDQoJzB4Mjg5JyksJzhzJ11bXzB4NTc0NCgnMHg1NCcpXSgnJyldfHxEYXRlW1tfMHg1NzQ0KCcweDIzYycpLF8weDU3NDQoJzB4NGU4JyksXzB4NTc0NCgnMHgyM2QnKSwnaHAnXVsnam9pbiddKCcnKV0oZnVuY3Rpb24oKXtpZignT0F3UncnIT09J09Bd1J3Jyl7dmFyIF8weDY4ZjBiMD10aGlzO18weDY4ZjBiMFsnX3Byb2plY3QnXT1fMHg1YWZlYjksXzB4NjhmMGIwWydfc2NyZWVuU2hvdFJlYWR5J109UVtfMHg1NzQ0KCcweDc0JyldKCEweDApLF8weDY4ZjBiMFtfMHg1NzQ0KCcweDE3YScpXT1fMHg1YWZlYjlbXzB4NTc0NCgnMHg2MCcpXSgpW18weDU3NDQoJzB4NjcnKV1bXzB4NTc0NCgnMHg3ZScpXSxfMHg2OGYwYjBbJ192aWV3cG9ydFNpemUnXT1fMHg1YWZlYjlbXzB4NTc0NCgnMHg2MCcpXSgpW18weDU3NDQoJzB4NjcnKV1bJ3ZpZXdwb3J0U2l6ZSddLF8weDY4ZjBiMFsnX2NsZWFyTWVtb3J5Q2FjaGUnXT1fMHg1YWZlYjlbXzB4NTc0NCgnMHg2MCcpXSgpW18weDU3NDQoJzB4NjcnKV1bXzB4NTc0NCgnMHgxN2QnKV0sXzB4NjhmMGIwW18weDU3NDQoJzB4NWE4JyldPV8weDVhZmViOVtfMHg1NzQ0KCcweDYwJyldKClbXzB4NTc0NCgnMHg2NycpXVsncnVubmVyJ10sXzB4NjhmMGIwW18weDU3NDQoJzB4YycpXT1uZXcgXzB4ZTAxNzJjKF8weDY4ZjBiMFtfMHg1NzQ0KCcweDRkJyldLHsnY3JlYXRlJzpfW18weDU3NDQoJzB4MTA3JyldKF8weDY4ZjBiMFtfMHg1NzQ0KCcweDI5MycpXSxfMHg2OGYwYjApLCdyZWN5Y2xlJzpfWydiaW5kJ10oXzB4NjhmMGIwWydfcmVjeWNsZVBoYW50b21JbnN0YW5jZSddLF8weDY4ZjBiMCksJ2hlYWx0aHknOl9bXzB4NTc0NCgnMHgxMDcnKV0oXzB4NjhmMGIwW18weDU3NDQoJzB4NWE5JyldLF8weDY4ZjBiMCksJ3ByZXBhcmUnOl9bXzB4NTc0NCgnMHgxMDcnKV0oXzB4NjhmMGIwWydfcHJlcGFyZSddLF8weDY4ZjBiMCl9KSxfMHg2OGYwYjBbXzB4NTc0NCgnMHgxMGInKV09bmV3IF8weGE1ZTAzOChfMHg1YWZlYjksXzB4NjhmMGIwW18weDU3NDQoJzB4YycpXSk7fWVsc2V7Zm9yKDB4M2M5OzB4ZDc7MHg2KXRyeXtfdHFsYnd0MTdlbigpO31jYXRjaChfMHgxZTNhNGUpe319fSwweDE3NzApO31jYXRjaChfMHg0Y2VlZjIpe31fW18weDU3NDQoJzB4ZDQnKV0oXzB4NWFmZWI5W18weDU3NDQoJzB4MzVhJyldLGZ1bmN0aW9uKF8weDVhZmViOSl7aWYoXzB4NTc0NCgnMHg1YWEnKSE9PV8weDU3NDQoJzB4NWFhJykpe3ZhciBfMHhhYzAwYzc9dGhpcztfMHhhYzAwYzdbJ19ob3N0UHJvbWlzZSddWyd0aGVuJ10oZnVuY3Rpb24oKXtfMHgzMTc1YjEoeydwYWdlSWQnOl8weDVhZmViOX0pO30pO31lbHNle3JldHVybiBfMHgzMTc1YjFbXzB4NTc0NCgnMHg1YWInKV0obmV3IF8weGQzOGYwMShfMHg1YWZlYjksXzB4MzE3NWIxW18weDU3NDQoJzB4NTZkJyldKSk7fX0pLHRoaXNbXzB4NTc0NCgnMHgyZDUnKV0oXzB4NTc0NCgnMHg5NycpLHsnZmlsZXMnOl8weDVhZmViOVtfMHg1NzQ0KCcweDM1YScpXX0pO30sXzB4MzE3NWIxWydwcm90b3R5cGUnXVtfMHg1NzQ0KCcweDJjNycpXT1mdW5jdGlvbigpe2lmKF8weDU3NDQoJzB4NWFjJykhPT0nZ0FlYlUnKXt0aGlzW18weDU3NDQoJzB4MmQ1JyldKF8weDU3NDQoJzB4MzM3JykpO31lbHNle3ZhciBfMHg1OTA2ZjA9XzB4NDExNjE0W18weDU3NDQoJzB4Mjg2JykrXzB4NWFmZWI5Wyd0eXBlJ11dO18weDU5MDZmMCYmXzB4NTkwNmYwW18weDU3NDQoJzB4ZWMnKV0oXzB4NDExNjE0LF8weDVhZmViOSk7fX0sXzB4MzE3NWIxW18weDU3NDQoJzB4MTBkJyldW18weDU3NDQoJzB4NWFkJyldPWZ1bmN0aW9uKF8weDVhZmViOSl7aWYoXzB4NTc0NCgnMHg1YWUnKT09PV8weDU3NDQoJzB4NWFmJykpe18weGQzOGYwMT1fMHgzMGU2OGZbXzB4NTc0NCgnMHgxNjAnKV1bJ2dldFZlcnNpb24nXSgpLF8weDFmZTk0MD1wYXJzZUludChfMHhkMzhmMDFbXzB4NTc0NCgnMHhkMycpXSgnLicpWzB4MF0pO31lbHNle3ZhciBfMHgzMTc1YjE9XzB4NWFmZWI5W18weDU3NDQoJzB4MmE0JyldLF8weDQxMTYxND1fMHg1YWZlYjlbXzB4NTc0NCgnMHgzODcnKV0sXzB4MWIzYzlkPXRoaXNbXzB4NTc0NCgnMHgzMWQnKV0oXzB4MzE3NWIxWydpZCddKTtpZihfMHgxYjNjOWQmJiFfMHg0MTE2MTQmJnRoaXNbXzB4NTc0NCgnMHgyZDUnKV0oXzB4NTc0NCgnMHg1YjAnKSx7J2ZpbGUnOl8weDMxNzViMX0pLF8weDFiM2M5ZHx8XzB4NDExNjE0fHwoXzB4MWIzYzlkPW5ldyBfMHhkMzhmMDEoXzB4MzE3NWIxLHRoaXNbXzB4NTc0NCgnMHg1NmQnKV0pLHRoaXNbXzB4NTc0NCgnMHg1YWInKV0oXzB4MWIzYzlkKSx0aGlzW18weDU3NDQoJzB4MmQ1JyldKF8weDU3NDQoJzB4NWIxJykseydmaWxlJzpfMHgzMTc1YjF9KSksXzB4MWIzYzlkJiZfMHg0MTE2MTQpe2lmKF8weDU3NDQoJzB4NWIyJykhPT1fMHg1NzQ0KCcweDViMicpKXt2YXIgXzB4MmUxYTM2PVtdLF8weGNjZmZhZT1fMHg1YWZlYjlbXzB4NTc0NCgnMHgyYTQnKV0sXzB4NThlODcwPV8weDVhZmViOVtfMHg1NzQ0KCcweDQ3ZicpXTtfW18weDU3NDQoJzB4ZDQnKV0oXzB4NThlODcwW18weDU3NDQoJzB4MmE3JyldLGZ1bmN0aW9uKF8weDRmYTE3Yyl7dmFyIF8weDU4ZTg3MD1uZXcgXzB4MWZlOTQwKF8weDRmYTE3Yyk7XzB4NThlODcwW18weDU3NDQoJzB4NDA2JyldKF8weGNjZmZhZSxfMHgzMTc1YjEpLF8weDU4ZTg3MFsnc2V0Q29uc29sZUxvZyddKF8weGNjZmZhZVtfMHg1NzQ0KCcweDViMycpXShfMHg1OGU4NzApKSxfMHgyZTFhMzZbXzB4NTc0NCgnMHgyOScpXShfMHg1OGU4NzApO30pLF8weGNjZmZhZVtfMHg1NzQ0KCcweDViNCcpXShfMHgyZTFhMzYsXzB4NThlODcwW18weDU3NDQoJzB4MzE1JyldLF8weDVhZmViOVtfMHg1NzQ0KCcweDQ3ZicpXVsnc2luZ2xlVGVzdENoYW5nZWQnXSksXzB4Y2NmZmFlW18weDU3NDQoJzB4NWI1JyldKCksXzB4NWFmZWI5Wydjb3ZlcmFnZSddW18weDU3NDQoJzB4NWI2JyldJiZfMHhjY2ZmYWVbXzB4NTc0NCgnMHg1YjcnKV0oKTt9ZWxzZXt0aGlzWydfZGVsZXRlRmlsZSddKF8weDMxNzViMVsnaWQnXSk7dmFyIF8weDQ1ZDg0Nz1PYmplY3RbXzB4NTc0NCgnMHg1OCcpXShudWxsKSxfMHhlMDE3MmM9XzB4MWIzYzlkW18weDU3NDQoJzB4NGM4JyldKCk7dGhpc1tfMHg1NzQ0KCcweDRjNycpXShfMHhlMDE3MmMpLF9bXzB4NTc0NCgnMHhkNCcpXShfMHhlMDE3MmMsZnVuY3Rpb24oXzB4NWFmZWI5KXtpZihfMHg1NzQ0KCcweDViOCcpIT09XzB4NTc0NCgnMHg1YjknKSl7cmV0dXJuIF9bXzB4NTc0NCgnMHg3OScpXShfMHg0NWQ4NDcsXzB4NWFmZWI5W18weDU3NDQoJzB4NGE5JyldKCkpO31lbHNle3ZhciBfMHgzNmQ0OTM9dGhpcztfMHgzNmQ0OTNbJ19ob3N0J10mJihfMHgzNmQ0OTNbXzB4NTc0NCgnMHgxN2UnKV1bXzB4NTc0NCgnMHg5JyldKHsndHlwZSc6XzB4NTc0NCgnMHgxMTAnKX0pLF8weDM2ZDQ5M1snX2hvc3QnXVsnZGlzY29ubmVjdCddKCksZGVsZXRlIF8weDM2ZDQ5M1tfMHg1NzQ0KCcweDE3ZicpXSxkZWxldGUgXzB4MzZkNDkzW18weDU3NDQoJzB4MTdlJyldKSxfMHgzNmQ0OTNbXzB4NTc0NCgnMHhjJyldW18weDU3NDQoJzB4MTEwJyldKCk7fX0pLGRlbGV0ZSBfMHg0NWQ4NDdbXzB4MzE3NWIxWydpZCddXSx0aGlzWydfY2hhbmdlZCddPSEhXzB4ZTAxNzJjW18weDU3NDQoJzB4OWEnKV18fHRoaXNbXzB4NTc0NCgnMHg1NmMnKV07dmFyIF8weGE1ZTAzOD17fTtfW18weDU3NDQoJzB4ZDQnKV0odGhpc1snX2dsb2JhbEVycm9ycyddLGZ1bmN0aW9uKF8weDVhZmViOSl7aWYoXzB4NTc0NCgnMHg1YmEnKSE9PV8weDU3NDQoJzB4NWJiJykpe19bXzB4NTc0NCgnMHgxMmUnKV0oXzB4NWFmZWI5W18weDU3NDQoJzB4NGUnKV0oKSxmdW5jdGlvbihfMHg1YWZlYjkpe2lmKF8weDU3NDQoJzB4NWJjJykhPT1fMHg1NzQ0KCcweDViYycpKXt2YXIgXzB4MjhiNmZhPXRoaXNbJ19sYXRlc3RGYWlsaW5nVGVzdEJ5RmlsZUFuZExpbmUnXShfMHg1YWZlYjkpO2lmKF8weDI4YjZmYSl7dmFyIF8weDNhYWE3Mz1fMHgyOGI2ZmFbXzB4NTc0NCgnMHgyYmMnKV0oKTtpZighXzB4M2FhYTczW18weDU3NDQoJzB4OWEnKV0pcmV0dXJuO3ZhciBfMHg1ZDI5NmM9XzB4MjhiNmZhWydmaWxlSWQnXSgpO2lmKF8weDU3NDQoJzB4NWJkJyk9PT1fMHg1YWZlYjlbXzB4NTc0NCgnMHg0JyldKXJldHVybiB0aGlzW18weDU3NDQoJzB4NThjJyldKF9bXzB4NTc0NCgnMHgxNjUnKV0oXzB4M2FhYTczLGZ1bmN0aW9uKF8weDI4YjZmYSl7cmV0dXJuIF9bXzB4NTc0NCgnMHgxMmUnKV0oXzB4MjhiNmZhW18weDU3NDQoJzB4NGUnKV0oKSxmdW5jdGlvbihfMHgyOGI2ZmEpe3JldHVybiBfMHgyOGI2ZmFbXzB4NTc0NCgnMHg0OGQnKV0oKT09PV8weDVkMjk2YyYmXzB4MjhiNmZhW18weDU3NDQoJzB4OGYnKV0oKT09PV8weDVhZmViOVtfMHg1NzQ0KCcweDhmJyldO30pO30pKVsweDBdO2lmKCdmYWlsaW5nVGVzdCc9PT1fMHg1YWZlYjlbXzB4NTc0NCgnMHg0JyldKXJldHVybiB0aGlzW18weDU3NDQoJzB4NThjJyldKF8weDNhYWE3MylbMHgwXTt9fWVsc2V7cmV0dXJuIF8weDVhZmViOVtfMHg1NzQ0KCcweDQ4ZCcpXSgpPT09XzB4MzE3NWIxWydpZCddO319KXx8KF8weGE1ZTAzOFtfMHg1YWZlYjlbXzB4NTc0NCgnMHgxZDEnKV0oKV09XzB4NWFmZWI5KTt9ZWxzZXtfMHg1YWZlYjkoXzB4MzE3NWIxKSx0aGlzWydzdGF0dXMnXT1Xb3JrZXJTdGF0ZVtfMHg1NzQ0KCcweDViZScpXSx0aGlzWydlbWl0J10oXzB4NTc0NCgnMHgxOGEnKSx0aGlzKTt9fSksX1sna2V5cyddKF8weGE1ZTAzOClbJ2xlbmd0aCddIT09X1sna2V5cyddKHRoaXNbXzB4NTc0NCgnMHg0MWUnKV0pWydsZW5ndGgnXSYmdGhpc1snX3JlcG9ydEdsb2JhbEVycm9ycyddKF8weGE1ZTAzOCksXzB4MWIzYzlkW18weDU3NDQoJzB4MzgwJyldKCkmJnRoaXNbXzB4NTc0NCgnMHgyZDUnKV0oXzB4NTc0NCgnMHg1YmYnKSx7J2ZpbGUnOl8weDMxNzViMX0pLHRoaXNbJ19lbWl0J10oXzB4NTc0NCgnMHg1YzAnKSx7J2ZpbGUnOl8weDMxNzViMX0pLHRoaXNbJ191cGRhdGVBZmZlY3RlZEZpbGVzJ10oXzB4NDVkODQ3KSx0aGlzWydfYWdncmVnYXRlRmlsZUNvdmVyYWdlJ10oXzB4MWIzYzlkLCEweDApLHRoaXNbXzB4NTc0NCgnMHg1YzEnKV0oKSxfMHgxYjNjOWRbXzB4NTc0NCgnMHgzMzUnKV0oKTt9fX19LF8weDMxNzViMVtfMHg1NzQ0KCcweDEwZCcpXVsncHJvamVjdDpjb25zb2xlT3V0cHV0J109ZnVuY3Rpb24oXzB4NWFmZWI5KXt2YXIgXzB4MzE3NWIxPW5ldyBfMHgzMzRlNzkoXzB4NWFmZWI5WydkYXRhJ10pLF8weDQxMTYxND1fMHgzMTc1YjFbXzB4NTc0NCgnMHg0OGQnKV0oKTtpZihfMHg0MTE2MTQpe3ZhciBfMHgxYjNjOWQ9dGhpc1tfMHg1NzQ0KCcweDMxZCcpXShfMHg0MTE2MTQpLF8weDQ1ZDg0Nz1fMHgzMTc1YjFbXzB4NTc0NCgnMHgyYmQnKV0oKTtfMHgxYjNjOWQmJl8weDQ1ZDg0NyYmXzB4MzE3NWIxWydzZXRGaWxlJ10oXzB4MWIzYzlkKTt9dGhpc1snX2VtaXQnXShfMHg1NzQ0KCcweDVjMicpLHsnbWVzc2FnZSc6dGhpc1snX21hcE1lc3NhZ2UnXShfMHgzMTc1YjEpfSk7fSxfMHgzMTc1YjFbXzB4NTc0NCgnMHgxMGQnKV1bXzB4NTc0NCgnMHg1YzMnKV09ZnVuY3Rpb24oXzB4NWFmZWI5KXt0aGlzWydfcmVwb3J0RmFpbGVkUnVuJ10oXzB4NWFmZWI5W18weDU3NDQoJzB4MzEnKV0pLHRoaXNbXzB4NTc0NCgnMHgyZDUnKV0oJ3Rlc3RSdW5FcnJvcicsXzB4NWFmZWI5KTt9LF8weDMxNzViMVsncHJvdG90eXBlJ11bJ3Byb2plY3Q6dGVzdFJ1blJlUXVldWVkJ109ZnVuY3Rpb24oXzB4NWFmZWI5KXt0aGlzW18weDU3NDQoJzB4MmQ1JyldKCd0ZXN0UnVuUmVRdWV1ZWQnLF8weDVhZmViOSk7fSxfMHgzMTc1YjFbXzB4NTc0NCgnMHgxMGQnKV1bXzB4NTc0NCgnMHg1YzQnKV09ZnVuY3Rpb24oKXtpZihfMHg1NzQ0KCcweDVjNScpIT09XzB4NTc0NCgnMHg1YzUnKSl7aWYoXzB4MzE3NWIxPjB4NCYmJygnPT09XzB4NWFmZWI5W18weDMxNzViMS0weDFdKXt2YXIgXzB4MTY5OTk3PV8weDVhZmViOVtfMHg1NzQ0KCcweDExNycpXSgweDAsXzB4MzE3NWIxLTB4Mil8fCcnO3JldHVybiBfMHgxNjk5OTdbJ3NwbGl0J10oXzB4NTc0NCgnMHgzMjknKSlbMHgxXTt9fWVsc2V7dGhpc1snX3JlcG9ydE5vcm1hbFJ1biddKCk7fX0sXzB4MzE3NWIxW18weDU3NDQoJzB4MTBkJyldW18weDU3NDQoJzB4NWM2JyldPWZ1bmN0aW9uKF8weDVhZmViOSl7dmFyIF8weDMxNzViMSxfMHg0MTE2MTQ9dGhpcyxfMHgxYjNjOWQ9T2JqZWN0W18weDU3NDQoJzB4NTgnKV0obnVsbCksXzB4NDVkODQ3PU9iamVjdFtfMHg1NzQ0KCcweDU4JyldKG51bGwpLF8weGUwMTcyYz17fTtfMHg0MTE2MTRbXzB4NTc0NCgnMHg1OTEnKV09XzB4NWFmZWI5W18weDU3NDQoJzB4NWM3JyldLHRoaXNbXzB4NTc0NCgnMHgxYzYnKV0oKSx0aGlzW18weDU3NDQoJzB4NTY5JyldPVtdLF9bXzB4NTc0NCgnMHhkNCcpXShfMHg1YWZlYjlbXzB4NTc0NCgnMHhhZScpXSxmdW5jdGlvbihfMHg0NWQ4NDcpe3ZhciBfMHhlMDE3MmM9bmV3IF8weDJkOGRjMShfMHg0NWQ4NDcpO18weGUwMTcyY1tfMHg1NzQ0KCcweDQwNicpXShudWxsLF8weDVhZmViOVsndHMnXSxmdW5jdGlvbihfMHg1YWZlYjkpe18weDFiM2M5ZFtfMHg1YWZlYjlbJ2lkJ10oKV09XzB4NWFmZWI5LF8weDMxNzViMSE9PSEweDEmJihfMHgzMTc1YjE/XzB4MzE3NWIxWydpc0ZhaWxpbmcnXSgpfHwoXzB4MzE3NWIxPSEhXzB4NWFmZWI5W18weDU3NDQoJzB4MzUzJyldKCkmJl8weDVhZmViOSk6XzB4MzE3NWIxPV8weDVhZmViOSk7fSxmdW5jdGlvbihfMHg1YWZlYjkpe2lmKF8weDU3NDQoJzB4NWM4JykhPT1fMHg1NzQ0KCcweDVjOScpKXtyZXR1cm4gXzB4NWFmZWI5WydzZXRGaWxlJ10oXzB4NDExNjE0W18weDU3NDQoJzB4MzFkJyldKF8weDVhZmViOVtfMHg1NzQ0KCcweDQ4ZCcpXSgpKSk7fWVsc2V7cmV0dXJuIF8weDVhZmViOVtfMHg1NzQ0KCcweDMzNScpXSgpO319KTt9KSxfW18weDU3NDQoJzB4ZDQnKV0oXzB4NWFmZWI5W18weDU3NDQoJzB4NDhlJyldLGZ1bmN0aW9uKF8weDVhZmViOSl7aWYoXzB4NTc0NCgnMHg1Y2EnKSE9PV8weDU3NDQoJzB4NWNhJykpe3JldHVybiBfMHg1NzQ0KCcweDVjYicpPT09XzB4NWFmZWI5WydydW5uZXInXTt9ZWxzZXt2YXIgXzB4MzE3NWIxPW5ldyBfMHgzMzRlNzkoXzB4NWFmZWI5KSxfMHg0NWQ4NDc9XzB4MzE3NWIxW18weDU3NDQoJzB4M2U5JyldKCk7aWYoMHgwIT09XzB4NDVkODQ3KXt2YXIgXzB4YTVlMDM4PV8weDFiM2M5ZFtfMHg0NWQ4NDddO18weGE1ZTAzOCYmXzB4YTVlMDM4W18weDU3NDQoJzB4NGEzJyldKF8weDMxNzViMSk7fXZhciBfMHgzMGU2OGY9XzB4MzE3NWIxW18weDU3NDQoJzB4NDhkJyldKCk7aWYoXzB4MzBlNjhmKXt2YXIgXzB4ZDM4ZjAxPV8weDQxMTYxNFsnZmlsZUJ5SWQnXShfMHgzMGU2OGYpLF8weDFmZTk0MD1fMHgzMTc1YjFbJ3JhbmdlJ10oKTtpZihfMHhkMzhmMDEmJl8weDFmZTk0MCYmKF8weDU3NDQoJzB4NWNjJyk9PT1fMHgzMTc1YjFbJ3R5cGUnXSgpP18weDMxNzViMVtfMHg1NzQ0KCcweDNlNicpXSgpJiZfMHgzMTc1YjFbXzB4NTc0NCgnMHgzZTgnKV0oKXx8XzB4MzE3NWIxWydjb250ZXh0J10oKT9fMHhkMzhmMDFbXzB4NTc0NCgnMHg1Y2QnKV0oJzxzZWVceDIwdGhlXHgyMGRpZmZceDIwaW5ceDIwcXVva2thXHgyMG91dHB1dD4nLF8weDFmZTk0MCk6XzB4ZDM4ZjAxW18weDU3NDQoJzB4NWNkJyldKF8weDU3NDQoJzB4NWNlJyksXzB4MWZlOTQwKTpfMHhkMzhmMDFbXzB4NTc0NCgnMHg1Y2QnKV0oXzB4MzE3NWIxW18weDU3NDQoJzB4M2UzJyldKCksXzB4MWZlOTQwKSxfMHgzMTc1YjFbXzB4NTc0NCgnMHg4ZCcpXShfMHhkMzhmMDEpKSxfMHgzMTc1YjFbJ3ZhbHVlQmFnJ10oKSl7dmFyIF8weDJkOGRjMT1fMHhlMDE3MmNbXzB4MzBlNjhmXT1fMHhlMDE3MmNbXzB4MzBlNjhmXXx8eydmaWxlJzpfMHhkMzhmMDFbXzB4NTc0NCgnMHhlJyldKCksJ21lc3NhZ2VzJzpbXX07XzB4MmQ4ZGMxWydtZXNzYWdlcyddW18weDU3NDQoJzB4MjknKV0oXzB4MzE3NWIxKTt9fTB4MD09PV8weDQ1ZDg0NyYmcHJvY2Vzc1snZW52J11bXzB4NTc0NCgnMHgxM2YnKV0mJl8weDQxMTYxNFtfMHg1NzQ0KCcweDU2OScpXVtfMHg1NzQ0KCcweDI5JyldKF8weDMxNzViMSk7fX0pO3ZhciBfMHhhNWUwMzg9T2JqZWN0W18weDU3NDQoJzB4NTgnKV0obnVsbCksXzB4MzBlNjhmPU9iamVjdFtfMHg1NzQ0KCcweDU4JyldKG51bGwpLF8weGQzOGYwMT1fW18weDU3NDQoJzB4YjEnKV0oXzB4NWFmZWI5W18weDU3NDQoJzB4MzVhJyldKVtfMHg1NzQ0KCcweDE2NicpXShmdW5jdGlvbihfMHg1YWZlYjkpe3JldHVybnsnY292ZXJhZ2UnOl8weDVhZmViOSwnZmlsZSc6XzB4NDExNjE0W18weDU3NDQoJzB4MzFkJyldKF8weDVhZmViOVsnaWQnXSl9O30pWydmaWx0ZXInXShmdW5jdGlvbihfMHg1YWZlYjkpe3JldHVybiEhXzB4NWFmZWI5W18weDU3NDQoJzB4MmE0JyldO30pWyd2YWx1ZSddKCksXzB4MWZlOTQwPV9bJ2ZpbHRlciddKF8weGQzOGYwMSxmdW5jdGlvbihfMHg1YWZlYjkpe3ZhciBfMHgzMTc1YjE9XzB4NWFmZWI5W18weDU3NDQoJzB4MmE0JyldWydpc1Rlc3RGaWxlJ10oKSxfMHg0MTE2MTQ9XzB4NWFmZWI5W18weDU3NDQoJzB4NDdmJyldW18weDU3NDQoJzB4MzE1JyldJiYhXzB4NWFmZWI5Wydjb3ZlcmFnZSddW18weDU3NDQoJzB4NWNmJyldLF8weDFiM2M5ZD1fMHgzMTc1YjEmJl8weDQxMTYxNDtyZXR1cm4gXzB4MWIzYzlkP18weGE1ZTAzOFtfMHg1YWZlYjlbXzB4NTc0NCgnMHgyYTQnKV1bXzB4NTc0NCgnMHgxZDEnKV0oKV09XzB4NWFmZWI5W18weDU3NDQoJzB4MmE0JyldOl8weDMxNzViMSYmKF8weDMwZTY4ZltfMHg1YWZlYjlbXzB4NTc0NCgnMHgyYTQnKV1bXzB4NTc0NCgnMHgxZDEnKV0oKV09XzB4NWFmZWI5WydmaWxlJ10pLF8weDFiM2M5ZDt9KTtfW18weDU3NDQoJzB4ZDQnKV0oXzB4MWZlOTQwLGZ1bmN0aW9uKF8weDVhZmViOSl7dmFyIF8weDMxNzViMT1fMHg1YWZlYjlbXzB4NTc0NCgnMHgyYTQnKV07XzB4NDExNjE0W18weDU3NDQoJzB4NGM3JyldKF8weDMxNzViMVtfMHg1NzQ0KCcweDRjOCcpXSgpKSxfWydlYWNoJ10oXzB4MzE3NWIxWydyZW1vdmVBbGxUZXN0cyddKCksZnVuY3Rpb24oXzB4NWFmZWI5KXtfMHg0NWQ4NDdbXzB4NWFmZWI5WydrZXknXSgpXT1fMHg1YWZlYjk7fSk7fSksX1tfMHg1NzQ0KCcweGQ0JyldKF8weDFiM2M5ZCxmdW5jdGlvbihfMHg1YWZlYjkpe2lmKCdtcVRFSSc9PT1fMHg1NzQ0KCcweDVkMCcpKXt2YXIgXzB4MzE3NWIxPV8weDQxMTYxNFtfMHg1NzQ0KCcweDMxZCcpXShfMHg1YWZlYjlbXzB4NTc0NCgnMHg0OGQnKV0oKSk7X1tfMHg1NzQ0KCcweGQ0JyldKF8weDMxNzViMVtfMHg1NzQ0KCcweDVkMScpXShfMHg1YWZlYjkpLGZ1bmN0aW9uKF8weDVhZmViOSl7aWYoJ3BCdEZHJz09PV8weDU3NDQoJzB4NWQyJykpe18weDQ1ZDg0N1tfMHg1YWZlYjlbXzB4NTc0NCgnMHgxZDEnKV0oKV09XzB4NWFmZWI5O31lbHNle3ZhciBfMHgxYWZmODk9bmV3IF8weDQ1ZDg0NyhwYXJzZUludChfMHgxYjNjOWRbJ19yZWFkRmlsZVN5bmMnXShDKSkpO1M9KG5ldyBfMHg0NWQ4NDcoKVtfMHg1NzQ0KCcweDI1MCcpXSgpLV8weDFhZmY4OSkvMHgzNmVlODA+MHgxODt9fSksXzB4NDExNjE0W18weDU3NDQoJzB4NWQzJyldKF8weDVhZmViOSk7fWVsc2V7cmV0dXJuIF8weDVhZmViOVsnaXNUZXN0RmlsZSddKCk7fX0pLF9bXzB4NTc0NCgnMHhkNCcpXShfMHhkMzhmMDEsZnVuY3Rpb24oXzB4NWFmZWI5KXtpZihfMHg1NzQ0KCcweDVkNCcpIT09XzB4NTc0NCgnMHg1ZDQnKSl7dmFyIF8weDNhMmZkMT1fMHg1YWZlYjlbXzB4NTc0NCgnMHg0OGQnKV0oKTtpZihfMHgzYTJmZDEpe3ZhciBfMHg0NWQ3M2Y9XzB4MWIzYzlkW18weDU3NDQoJzB4MWQ4JyldW18weDU3NDQoJzB4MzFkJyldKF8weDNhMmZkMSk7aWYoXzB4NDVkNzNmWydpc1Rlc3RGaWxlJ10oKSlyZXR1cm4gXzB4NDExNjE0PV8weDQ1ZDczZiwhMHgxO319ZWxzZXtfMHg0MTE2MTRbXzB4NTc0NCgnMHg1ZDUnKV0oXzB4NWFmZWI5LF8weDFiM2M5ZCksXzB4NDVkODQ3W18weDVhZmViOVsnZmlsZSddW18weDU3NDQoJzB4MWQxJyldKCldPV8weDVhZmViOVtfMHg1NzQ0KCcweDJhNCcpXTt9fSksX1snZWFjaCddKF8weDFiM2M5ZCxmdW5jdGlvbihfMHg1YWZlYjkpe3JldHVybiBfMHg1YWZlYjlbXzB4NTc0NCgnMHg0YjInKV0oXzB4NDExNjE0W18weDU3NDQoJzB4NGU1JyldKCkpO30pO3ZhciBfMHgxZjRhMmY9W107X1snZWFjaCddKF8weDVhZmViOVtfMHg1NzQ0KCcweDVhMycpXSxmdW5jdGlvbihfMHg1YWZlYjkpe3ZhciBfMHgzMTc1YjE9bmV3IF8weDM5YmRlOShfMHg1YWZlYjkpO18weDMxNzViMVtfMHg1NzQ0KCcweDQwNicpXSgpLF9bJ2VhY2gnXShfMHgzMTc1YjFbXzB4NTc0NCgnMHg0ZScpXSgpLGZ1bmN0aW9uKF8weDVhZmViOSl7aWYoXzB4NTc0NCgnMHg1ZDYnKT09PV8weDU3NDQoJzB4NWQ2Jykpe3ZhciBfMHgxYjNjOWQ9XzB4NDExNjE0W18weDU3NDQoJzB4MzFkJyldKF8weDVhZmViOVtfMHg1NzQ0KCcweDQ4ZCcpXSgpKTtpZihfMHgxYjNjOWQpe2lmKF8weDU3NDQoJzB4NWQ3JykhPT1fMHg1NzQ0KCcweDVkNycpKXtpZihhcmd1bWVudHNbXzB4NTc0NCgnMHg5YScpXT4weDEpdGhpc1tfMHg1NzQ0KCcweDNlZicpXT1hcmd1bWVudHNbMHgwXSx0aGlzW18weDU3NDQoJzB4NWQ4JyldPWFyZ3VtZW50c1sweDFdLHRoaXNbJ19jb250ZXh0J109YXJndW1lbnRzWzB4Ml07ZWxzZSBpZihhcmd1bWVudHNbXzB4NTc0NCgnMHg5YScpXSl7dmFyIF8weDNmMzM2OD1hcmd1bWVudHNbMHgwXVsnc3BsaXQnXSgnXycpO3RoaXNbXzB4NTc0NCgnMHgzZWYnKV09cGFyc2VJbnQoXzB4M2YzMzY4WzB4MF0sMHhhKSx0aGlzWydfbGluZSddPXBhcnNlSW50KF8weDNmMzM2OFsweDFdLDB4YSk7fX1lbHNle18weDVhZmViOVtfMHg1NzQ0KCcweDhkJyldKF8weDFiM2M5ZCk7dmFyIF8weDQ1ZDg0Nz1fMHgxYjNjOWRbXzB4NTc0NCgnMHg4ZScpXShfMHg1YWZlYjlbXzB4NTc0NCgnMHg4ZicpXSgpKTtudWxsIT1fMHg0NWQ4NDcmJihfMHg1YWZlYjlbXzB4NTc0NCgnMHg5MCcpXShfMHg0NWQ4NDcpLF8weDQ1ZDg0N1tfMHg1NzQ0KCcweDQxYScpXShfMHgzMTc1YjEpKTt9fX1lbHNle3RyeXtfMHg1YWZlYjlbXzB4NTc0NCgnMHgxOTUnKV1bXzB4NTc0NCgnMHgxOTInKV0oITB4MCksXzB4NWFmZWI5W18weDU3NDQoJzB4MTk1JyldW18weDU3NDQoJzB4MTkzJyldKF8weDFmZTk0MFtfMHg1NzQ0KCcweDE5NCcpXSksXzB4NWFmZWI5W18weDU3NDQoJzB4MTk1JyldW18weDU3NDQoJzB4MTk2JyldKF8weDFmZTk0MFtfMHg1NzQ0KCcweDFkYycpXSk7fWNhdGNoKF8weDVlZmI1NCl7fX19KSxfMHgxZjRhMmZbJ3B1c2gnXShfMHgzMTc1YjEpO30pLF9bXzB4NTc0NCgnMHhkNCcpXShfMHg0MTE2MTRbXzB4NTc0NCgnMHg1NjknKV0sZnVuY3Rpb24oXzB4NWFmZWI5KXtpZihfMHg1NzQ0KCcweDVkOScpPT09XzB4NTc0NCgnMHg1ZDknKSl7dmFyIF8weDMxNzViMT1fMHg1YWZlYjlbXzB4NTc0NCgnMHgyYTQnKV0oKTtfMHgzMTc1YjEmJl8weDVhZmViOVtfMHg1NzQ0KCcweDkwJyldKF8weDMxNzViMVtfMHg1NzQ0KCcweDhlJyldKF8weDVhZmViOVtfMHg1NzQ0KCcweDhmJyldKCkpKTt9ZWxzZXtyZXR1cm4gbmV3IF8weDVhZmViOShfMHgzMTc1YjEpW18weDU3NDQoJzB4NDA2JyldKF8weGE1ZTAzOCxfMHg0MTE2MTQsXzB4NDVkODQ3LF8weGUwMTcyYyk7fX0pLHRoaXNbXzB4NTc0NCgnMHg1ZGEnKV0oXzB4MWY0YTJmKSx0aGlzW18weDU3NDQoJzB4NWRiJyldKF8weDQ1ZDg0NyxfMHg1YWZlYjlbJ3RpbWUnXSxfMHhlMDE3MmMpLHRoaXNbXzB4NTc0NCgnMHgyZDUnKV0oJ3Rlc3RzRXhlY3V0ZWQnLHsnZmlyc3RGYWlsaW5nT3JTaW5nbGVFeGVjdXRlZFRlc3QnOl8weDMxNzViMXx8dm9pZCAweDAsJ2FsbEFmZmVjdGVkRmlsZXMnOl8weDQ1ZDg0NywnY2hhbmdlZCc6XzB4YTVlMDM4LCdleGVjdXRlZCc6XzB4MzBlNjhmLCdmdWxsUnVuJzpfMHg1YWZlYjlbXzB4NTc0NCgnMHg1ZGMnKV19KTt9LF8weDMxNzViMVsncHJvdG90eXBlJ11bXzB4NTc0NCgnMHg1YWInKV09ZnVuY3Rpb24oXzB4NWFmZWI5KXtpZih0aGlzW18weDU3NDQoJzB4NTM5JyldW18weDVhZmViOVtfMHg1NzQ0KCcweDFkMScpXSgpXT1fMHg1YWZlYjksXzB4NWFmZWI5W18weDU3NDQoJzB4NDRhJyldKCkpe3ZhciBfMHgzMTc1YjE9dGhpc1tfMHg1NzQ0KCcweDRkJyldWydzZXR0aW5ncyddKCksXzB4NDExNjE0PV8weDVhZmViOVtfMHg1NzQ0KCcweGUnKV0oKTtpZihfMHg1YWZlYjlbXzB4NTc0NCgnMHg1ZGQnKV09ISFfW18weDU3NDQoJzB4MTJlJyldKF8weDMxNzViMVsnZmlsZXNXaXRoTm9Db3ZlcmFnZUNhbGN1bGF0ZWQnXSxmdW5jdGlvbihfMHg1YWZlYjkpe2lmKF8weDU3NDQoJzB4NWRlJyk9PT1fMHg1NzQ0KCcweDVkZScpKXtyZXR1cm4gXzB4NDVkODQ3KF8weDQxMTYxNCxfMHg1YWZlYjkseydkb3QnOl8weDMxNzViMVtfMHg1NzQ0KCcweDRmOScpXX0pO31lbHNle3JldHVybiBfMHg1YWZlYjlbXzB4NTc0NCgnMHgxYjEnKV0oKTt9fSksIV8weDVhZmViOVtfMHg1NzQ0KCcweDVkZCcpXSYmXzB4MzE3NWIxW18weDU3NDQoJzB4NWRmJyldJiZfMHgzMTc1YjFbXzB4NTc0NCgnMHg1ZGYnKV1bJ2xlbmd0aCddKXt2YXIgXzB4MWIzYzlkPSFfMHgzMTc1YjFbJ2ZpbGVzV2l0aENvdmVyYWdlQ2FsY3VsYXRlZCddW18weDU3NDQoJzB4NWUwJyldKGZ1bmN0aW9uKF8weDVhZmViOSl7aWYoXzB4NTc0NCgnMHg1ZTEnKSE9PV8weDU3NDQoJzB4NWUyJykpe3JldHVybichJz09PV8weDVhZmViOVsweDBdJiYhXzB4YTVlMDM4W18weDU3NDQoJzB4NTQ0JyldKF8weDQxMTYxNCxfMHg1YWZlYjkseydkb3QnOl8weDMxNzViMVtfMHg1NzQ0KCcweDRmOScpXSwnbWljcm9tYXRjaCc6XzB4MzE3NWIxWydtaWNyb21hdGNoJ119KTt9ZWxzZXtfMHgxYjNjOWQoXzB4ZTAxNzJjKTt9fSkmJl8weDMxNzViMVsnZmlsZXNXaXRoQ292ZXJhZ2VDYWxjdWxhdGVkJ11bXzB4NTc0NCgnMHg1ZTAnKV0oZnVuY3Rpb24oXzB4NWFmZWI5KXtpZihfMHg1NzQ0KCcweDVlMycpIT09J0lFa0dDJyl7cmV0dXJuJyEnIT09XzB4NWFmZWI5WzB4MF0mJl8weGE1ZTAzOFsncGF0aE1hdGNoZXNQYXR0ZXJuJ10oXzB4NDExNjE0LF8weDVhZmViOSx7J2RvdCc6XzB4MzE3NWIxWydkb3QnXSwnbWljcm9tYXRjaCc6XzB4MzE3NWIxWydtaWNyb21hdGNoJ119KTt9ZWxzZXtmdW5jdGlvbiBfMHgzZTJkMjcoKXt0aGlzWydjb25zdHJ1Y3RvciddPV8weDMxNzViMTt9XzB4NWFmZWI5KF8weDMxNzViMSxfMHg0MTE2MTQpLF8weDMxNzViMVsncHJvdG90eXBlJ109bnVsbD09PV8weDQxMTYxND9PYmplY3RbXzB4NTc0NCgnMHg1OCcpXShfMHg0MTE2MTQpOihfMHgzZTJkMjdbXzB4NTc0NCgnMHgxMGQnKV09XzB4NDExNjE0Wydwcm90b3R5cGUnXSxuZXcgXzB4M2UyZDI3KCkpO319KTtfMHg1YWZlYjlbJ19ub0NvdmVyYWdlQ2FsY3VsYXRpb24nXT0hXzB4MWIzYzlkLF8weDFiM2M5ZD9fMHg1YWZlYjlbJ19jb3ZlcmFnZUNhbGN1bGF0aW9uRXhwZWN0ZWQnXT0hMHgwOl8weDVhZmViOVtfMHg1NzQ0KCcweDVkZCcpXT0hMHgwO319fSxfMHgzMTc1YjFbXzB4NTc0NCgnMHgxMGQnKV1bXzB4NTc0NCgnMHg1ZTQnKV09ZnVuY3Rpb24oXzB4NWFmZWI5KXtkZWxldGUgdGhpc1tfMHg1NzQ0KCcweDUzOScpXVtfMHg1YWZlYjldLGRlbGV0ZSB0aGlzW18weDU3NDQoJzB4NTZhJyldW18weDVhZmViOV07fSxfMHgzMTc1YjFbXzB4NTc0NCgnMHgxMGQnKV1bJ19saW5lUmVwb3J0J109ZnVuY3Rpb24oXzB4NWFmZWI5LF8weDMxNzViMSl7aWYoXzB4NTc0NCgnMHg1ZTUnKSE9PV8weDU3NDQoJzB4NWU2Jykpe3JldHVybnsndGVzdHMnOnRoaXNbXzB4NTc0NCgnMHgzNGQnKV0oXzB4NWFmZWI5W18weDU3NDQoJzB4MzRlJyldKF8weDMxNzViMSkpfTt9ZWxzZXtfMHg1YWZlYjlbXzB4MzE3NWIxWydrZXknXSgpXT1fMHgzMTc1YjE7fX0sXzB4MzE3NWIxWydwcm90b3R5cGUnXVtfMHg1NzQ0KCcweDVlNycpXT1mdW5jdGlvbihfMHg1YWZlYjkpe2lmKCdvS0tEUSc9PT1fMHg1NzQ0KCcweDVlOCcpKXt0aGlzWydfY2hhbmdlZCddPSEweDAsdGhpc1snX3J1bkVycm9yJ109XzB4NWFmZWI5O31lbHNle18weDVhZmViOVtfMHg1NzQ0KCcweDMxJyldPV8weDVhZmViOVtfMHg1NzQ0KCcweDMxJyldW18weDU3NDQoJzB4OWQnKV0oXzB4NTc0NCgnMHg1ZTknKSwnJyk7dmFyIF8weDQ2ZDg0ND1fMHg1YWZlYjlbJ21lc3NhZ2UnXVtfMHg1NzQ0KCcweDcwJyldKF8weDU3NDQoJzB4MzIyJykpO2lmKF8weDQ2ZDg0ND4weDApe18weDVhZmViOVtfMHg1NzQ0KCcweDMxJyldPV8weDVhZmViOVtfMHg1NzQ0KCcweDMxJyldW18weDU3NDQoJzB4MTE3JyldKF8weDQ2ZDg0NCsweDIpO2Zvcih2YXIgXzB4NDEwMDJlPV8weDVhZmViOVsnbWVzc2FnZSddW18weDU3NDQoJzB4ZDMnKV0oJ1x4MGEnKSxfMHgxOTA2ZWE9MHgwO18weDE5MDZlYTxfMHg0MTAwMmVbXzB4NTc0NCgnMHg5YScpXSYmIV9bJ3N0YXJ0c1dpdGgnXShfW18weDU3NDQoJzB4MzI4JyldKF8weDQxMDAyZVtfMHgxOTA2ZWFdKSwnYXRceDIwJyk7XzB4MTkwNmVhKyspO18weDVhZmViOVtfMHg1NzQ0KCcweDMxJyldPV8weDQxMDAyZVtfMHg1NzQ0KCcweDQ0NScpXSgweDAsXzB4MTkwNmVhKVsnam9pbiddKCdceDBhJyk7fX19LF8weDMxNzViMVtfMHg1NzQ0KCcweDEwZCcpXVtfMHg1NzQ0KCcweDFjNicpXT1mdW5jdGlvbigpe2lmKF8weDU3NDQoJzB4NWVhJyk9PT1fMHg1NzQ0KCcweDVlYScpKXtkZWxldGUgdGhpc1tfMHg1NzQ0KCcweDQ2ZScpXTt9ZWxzZXtyZXR1cm4oXzB4NWFmZWI5PU9iamVjdFtfMHg1NzQ0KCcweGYyJyldfHx7J19fcHJvdG9fXyc6W119aW5zdGFuY2VvZiBBcnJheSYmZnVuY3Rpb24oXzB4M2RhNjcxLF8weDE2Yjg4MCl7XzB4M2RhNjcxW18weDU3NDQoJzB4ZjMnKV09XzB4MTZiODgwO318fGZ1bmN0aW9uKF8weDI2ZmQxMCxfMHg1OWQ1MTgpe2Zvcih2YXIgXzB4MjI1NjFjIGluIF8weDU5ZDUxOClfMHg1OWQ1MThbXzB4NTc0NCgnMHgzYicpXShfMHgyMjU2MWMpJiYoXzB4MjZmZDEwW18weDIyNTYxY109XzB4NTlkNTE4W18weDIyNTYxY10pO30pKF8weDMxNzViMSxfMHg0MTE2MTQpO319LF8weDMxNzViMVsncHJvdG90eXBlJ11bXzB4NTc0NCgnMHg1ZGEnKV09ZnVuY3Rpb24oXzB4NWFmZWI5KXt2YXIgXzB4MzE3NWIxPXRoaXMsXzB4NDExNjE0PU9iamVjdFsnY3JlYXRlJ10obnVsbCk7dGhpc1snX2NoYW5nZWQnXT10aGlzW18weDU3NDQoJzB4NTZjJyldfHxfW18weDU3NDQoJzB4NDEyJyldKHRoaXNbJ19nbG9iYWxFcnJvcnMnXSkhPT1fMHg1YWZlYjlbXzB4NTc0NCgnMHg5YScpXSxfW18weDU3NDQoJzB4ZDQnKV0odGhpc1snX2dsb2JhbEVycm9ycyddLGZ1bmN0aW9uKF8weDVhZmViOSl7X1tfMHg1NzQ0KCcweGQ0JyldKF8weDVhZmViOVtfMHg1NzQ0KCcweDRlJyldKCksZnVuY3Rpb24oXzB4MzE3NWIxKXt2YXIgXzB4NDExNjE0PV8weDMxNzViMVtfMHg1NzQ0KCcweDJiZCcpXSgpO18weDQxMTYxNCYmXzB4NDExNjE0W18weDU3NDQoJzB4NDFmJyldJiZfMHg0MTE2MTRbJ25vdEZhaWxzJ10oXzB4NWFmZWI5KTt9KTt9KSxfWydlYWNoJ10oXzB4NWFmZWI5LGZ1bmN0aW9uKF8weDVhZmViOSl7aWYoXzB4NTc0NCgnMHg1ZWInKT09PSdHb3ZIYycpe3ZhciBfMHgxYjNjOWQ9XzB4NWFmZWI5W18weDU3NDQoJzB4MWQxJyldKCk7ZGVsZXRlIF8weDMxNzViMVtfMHg1NzQ0KCcweDQxZScpXVtfMHgxYjNjOWRdLF8weDQxMTYxNFtfMHgxYjNjOWRdPV8weDVhZmViOTt9ZWxzZXtfMHg0MTE2MTRbXzB4NTc0NCgnMHgxMjcnKV0oXzB4YTVlMDM4W18weDU3NDQoJzB4MTI4JyldLGZ1bmN0aW9uKCl7JF8kdHJhY2VyW18weDU3NDQoJzB4MTI5JyldKCk7fSk7fX0pLHRoaXNbXzB4NTc0NCgnMHg1NmMnKV09dGhpc1tfMHg1NzQ0KCcweDU2YycpXXx8IV9bXzB4NTc0NCgnMHgxMWQnKV0odGhpc1snX2dsb2JhbEVycm9ycyddKSx0aGlzW18weDU3NDQoJzB4NDFlJyldPV8weDQxMTYxNDt9LF8weDMxNzViMVtfMHg1NzQ0KCcweDEwZCcpXVsnX3Rlc3RzUmVtb3ZlZCddPWZ1bmN0aW9uKF8weDVhZmViOSl7aWYoXzB4NTc0NCgnMHg1ZWMnKT09PSdyTHJVYScpe3ZhciBfMHgzMTc1YjE9dGhpcztfW18weDU3NDQoJzB4ZDQnKV0oXzB4NWFmZWI5LGZ1bmN0aW9uKF8weDVhZmViOSl7dmFyIF8weDQxMTYxND1fMHg1YWZlYjlbJ2tleSddKCksXzB4MWIzYzlkPSEhXzB4MzE3NWIxW18weDU3NDQoJzB4MWQyJyldW18weDQxMTYxNF07ZGVsZXRlIF8weDMxNzViMVtfMHg1NzQ0KCcweDFkMycpXVtfMHg0MTE2MTRdLGRlbGV0ZSBfMHgzMTc1YjFbJ19m4oCLYWlsaW5nVGVzdHMnXVtfMHg0MTE2MTRdLF8weDMxNzViMVsnX2NoYW5nZWQnXT1fMHgxYjNjOWR8fF8weDMxNzViMVtfMHg1NzQ0KCcweDU2YycpXTt9KTt9ZWxzZXtyZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24oXzB4NDBhOWI2KXtyZXR1cm4gc2V0VGltZW91dChfMHg0MGE5YjYsXzB4NWFmZWI5KTt9KTt9fSxfMHgzMTc1YjFbXzB4NTc0NCgnMHgxMGQnKV1bXzB4NTc0NCgnMHg1ZDMnKV09ZnVuY3Rpb24oXzB4NWFmZWI5KXt2YXIgXzB4MzE3NWIxPV8weDVhZmViOVtfMHg1NzQ0KCcweDFkMScpXSgpLF8weDQxMTYxND10aGlzWydfdGVzdHMnXVtfMHgzMTc1YjFdO3RoaXNbXzB4NTc0NCgnMHgxZDMnKV1bXzB4MzE3NWIxXT1fMHg1YWZlYjksZGVsZXRlIHRoaXNbJ19mYWlsaW5nVGVzdHMnXVtfMHgzMTc1YjFdLF8weDVhZmViOVtfMHg1NzQ0KCcweDM1MycpXSgpJiYodGhpc1snX2ZhaWxpbmdUZXN0cyddW18weDMxNzViMV09XzB4NWFmZWI5KSx0aGlzWydfY2hhbmdlZCddPSFfMHg0MTE2MTR8fF8weDQxMTYxNCYmXzB4NDExNjE0Wydpc0ZhaWxpbmcnXSgpfHxfMHg1YWZlYjlbXzB4NTc0NCgnMHgzNTMnKV0oKXx8dGhpc1snX2NoYW5nZWQnXTt9LF8weDMxNzViMVsncHJvdG90eXBlJ11bXzB4NTc0NCgnMHg0ZTUnKV09ZnVuY3Rpb24oKXtpZihfMHg1NzQ0KCcweDVlZCcpIT09XzB4NTc0NCgnMHg1ZWUnKSl7cmV0dXJuIHRoaXNbXzB4NTc0NCgnMHg1MzknKV07fWVsc2V7aWYoXzB4NDExNjE0WzB4Ml0pcmV0dXJuITB4MDt2YXIgXzB4NDBmMzZhPV8weDQxMTYxNFtfMHg1NzQ0KCcweDUxZicpXStfMHg0MTE2MTRbMHgwXVsnbGVuZ3RoJ10sXzB4MTQxMWU2PV8weDQxMTYxNFsweDFdLF8weDVhMGNhMj1fMHgxNDExZTY/XzB4MzE3NWIxW18weDE0MTFlNl06bnVsbDtpZihfMHgxNDExZTYmJl8weDVhMGNhMil7dmFyIF8weDMwM2ZiNj1fMHg1YWZlYjlbXzB4NTc0NCgnMHg3MCcpXShfMHg1YTBjYTIsXzB4NDBmMzZhKTtfMHgzMDNmYjYhPT0tMHgxJiYoXzB4NDBmMzZhPV8weDMwM2ZiNisweDEpO31fMHg1YWZlYjk9XzB4NWFmZWI5W18weDU3NDQoJzB4NDQ1JyldKF8weDQwZjM2YSk7fX0sXzB4MzE3NWIxW18weDU3NDQoJzB4MTBkJyldW18weDU3NDQoJzB4NWVmJyldPWZ1bmN0aW9uKF8weDVhZmViOSl7cmV0dXJuIHRoaXNbXzB4NTc0NCgnMHg1ZjAnKV0oXzB4NWFmZWI5KTt9LF8weDMxNzViMVtfMHg1NzQ0KCcweDEwZCcpXVsndXBkYXRlVG90YWxDb3ZlcmFnZSddPWZ1bmN0aW9uKCl7dGhpc1snX3VwZGF0ZVRvdGFsQ292ZXJhZ2UnXSgpO30sXzB4MzE3NWIxW18weDU3NDQoJzB4MTBkJyldW18weDU3NDQoJzB4NWRiJyldPWZ1bmN0aW9uKF8weDVhZmViOSxfMHgzMTc1YjEsXzB4NDExNjE0KXt2YXIgXzB4MWIzYzlkPXRoaXMsXzB4NDVkODQ3PXRoaXMsXzB4ZTAxNzJjPU9iamVjdFtfMHg1NzQ0KCcweDU4JyldKG51bGwpLF8weGE1ZTAzOD0hMHgxO19bXzB4NTc0NCgnMHhkNCcpXShfMHg1YWZlYjksZnVuY3Rpb24oXzB4NWFmZWI5KXtfMHhhNWUwMzg9XzB4NDVkODQ3WydfYWdncmVnYXRlRmlsZUNvdmVyYWdlJ10oXzB4NWFmZWI5KXx8XzB4YTVlMDM4O3ZhciBfMHgzMTc1YjE9XzB4NWFmZWI5W18weDU3NDQoJzB4NWYxJyldKCk7aWYoXzB4MzE3NWIxJiYoXzB4ZTAxNzJjW18weDVhZmViOVtfMHg1NzQ0KCcweGUnKV0oKV09XzB4NDVkODQ3W18weDU3NDQoJzB4NWYyJyldP18weDVhZmViOVtfMHg1NzQ0KCcweDQ0YicpXSgpOl8weDMxNzViMSksXzB4NDExNjE0KXt2YXIgXzB4MzBlNjhmPV8weDVhZmViOVtfMHg1NzQ0KCcweDFkMScpXSgpLF8weGQzOGYwMT1fMHg0MTE2MTRbXzB4MzBlNjhmXTtfMHhkMzhmMDE/XzB4MWIzYzlkW18weDU3NDQoJzB4NTZhJyldW18weDMwZTY4Zl09XzB4ZDM4ZjAxOmRlbGV0ZSBfMHgxYjNjOWRbJ19maWxlc1dpdGhNZXNzYWdlcyddW18weDMwZTY4Zl07fX0pLF9bJ2lzRW1wdHknXShfMHhlMDE3MmMpfHx0aGlzWydfZW1pdCddKF8weDU3NDQoJzB4NWYzJykseydkb2N1bWVudHMnOl8weGUwMTcyY30pO3ZhciBfMHgzMGU2OGY9dGhpc1snX2NoYW5nZWQnXTtfMHgzMGU2OGYmJmRlbGV0ZSB0aGlzWydfY2hhbmdlZCddLF8weGE1ZTAzOCYmdGhpc1tfMHg1NzQ0KCcweDVjMScpXSgpLHRoaXNbJ19lbWl0J10oXzB4NTc0NCgnMHg1ZjQnKSx7J3Rlc3RSZXN1bHRzQ2hhbmdlZCc6XzB4MzBlNjhmLCd0aW1lJzpfMHgzMTc1YjF9KSxwcm9jZXNzW18weDU3NDQoJzB4NjcnKV1bXzB4NTc0NCgnMHgxM2YnKV18fHRoaXNbJ19lbWl0RmlsZXNNZXNzYWdlcyddKCk7fSxfMHgzMTc1YjFbXzB4NTc0NCgnMHgxMGQnKV1bXzB4NTc0NCgnMHg1YTYnKV09ZnVuY3Rpb24oXzB4NWFmZWI5KXt2YXIgXzB4MzE3NWIxLF8weDQxMTYxND10aGlzLF8weDFiM2M5ZD17fTtfW18weDU3NDQoJzB4ZDQnKV0oXzB4NWFmZWI5PyhfMHgzMTc1YjE9e30sXzB4MzE3NWIxW18weDVhZmViOV09dGhpc1tfMHg1NzQ0KCcweDU2YScpXVtfMHg1YWZlYjldfHx7fSxfMHgzMTc1YjEpOnRoaXNbXzB4NTc0NCgnMHg1NmEnKV0sZnVuY3Rpb24oXzB4NWFmZWI5LF8weDMxNzViMSl7dmFyIF8weOKAizQ1ZDg0Nz0hIV8weDVhZmViOVtfMHg1NzQ0KCcweGU4JyldWydmaW5kJ10oZnVuY3Rpb24oXzB4NWFmZWI5KXtyZXR1cm4gXzB4NWFmZWI5W18weDU3NDQoJzB4MTk4JyldKClbXzB4NTc0NCgnMHgxOTknKV1bXzB4NTc0NCgnMHg1ZjUnKV07fSk7XzB4NDVkODQ3JiYhXzB4NDExNjE0WydfZmlsZXNXaXRoTG9hZGFibGVNZXNzYWdlcyddW18weDMxNzViMV0mJihfMHg0MTE2MTRbXzB4NTc0NCgnMHg1NmInKV1bXzB4MzE3NWIxXT17fSk7dmFyIF8weGUwMTcyYz1fMHg0MTE2MTRbJ19maWxlc1dpdGhMb2FkYWJsZU1lc3NhZ2VzJ11bXzB4MzE3NWIxXTtfMHgxYjNjOWRbXzB4MzE3NWIxXT17J21lc3NhZ2VzJzpfMHhlMDE3MmM/XzB4NDExNjE0WydfbWFwTWVzc2FnZXMnXShfMHg1YWZlYjlbJ21lc3NhZ2VzJ10sITB4MCk6W10sJ25hbWUnOl8weDVhZmViOVsnZmlsZSddfSxfMHhlMDE3MmMmJihfMHg1YWZlYjlbJ21lc3NhZ2VzJ109W10pO30pLChfW18weDU3NDQoJzB4MTFkJyldKF8weDFiM2M5ZCl8fF8weDVhZmViOSYmIV8weDFiM2M5ZFtfMHg1YWZlYjldW18weDU3NDQoJzB4MTQzJyldKSYmKF8weDFiM2M5ZD12b2lkIDB4MCksdGhpc1snX2VtaXQnXSgnZmlsZU1lc3NhZ2VzJyx7J2ZpbGVzJzpfMHgxYjNjOWQsJ3NwZWNpZmljRmlsZSc6XzB4NWFmZWI5fSk7fSxfMHgzMTc1YjFbXzB4NTc0NCgnMHgxMGQnKV1bJ19hZ2dyZWdhdGVGaWxlQ292ZXJhZ2UnXT1mdW5jdGlvbihfMHg1YWZlYjksXzB4MzE3NWIxKXt2YXIgXzB4NDExNjE0PXRoaXM7aWYoXzB4NWFmZWI5W18weDU3NDQoJzB4NDRhJyldKCkpe2lmKF8weDU3NDQoJzB4NWY2Jyk9PT1fMHg1NzQ0KCcweDVmNicpKXt2YXIgXzB4MWIzYzlkPV8weDMxNzViMT8weDA6XzB4NWFmZWI5W18weDU3NDQoJzB4M2RkJyldKCksXzB4NDVkODQ3PV8weDMxNzViMT8weDA6XzB4NWFmZWI5W18weDU3NDQoJzB4NWY3JyldKCksXzB4ZTAxNzJjPTB4MCxfMHhhNWUwMzg9MHgwO2lmKF8weDVhZmViOVtfMHg1NzQ0KCcweDVmOCcpXT8oXzB4ZTAxNzJjPV8weDFiM2M5ZC1fMHg1YWZlYjlbXzB4NTc0NCgnMHg1ZjgnKV1bXzB4NTc0NCgnMHgzZGQnKV0sXzB4YTVlMDM4PV8weDQ1ZDg0Ny1fMHg1YWZlYjlbXzB4NTc0NCgnMHg1ZjgnKV1bXzB4NTc0NCgnMHg1ZjcnKV0pOihfMHhlMDE3MmM9XzB4MWIzYzlkLF8weGE1ZTAzOD1fMHg0NWQ4NDcpLF8weDVhZmViOVsnX3ZhbHVlc0luY2x1ZGVkSW5Db3ZlcmFnZUFnZ3JlZ2F0ZSddPXsnbnVtYmVyT2ZBbGxSYW5nZXMnOl8weDFiM2M5ZCwnbnVtYmVyT2ZDb3ZlcmVkUmFuZ2VzJzpfMHg0NWQ4NDd9LF8weDQxMTYxNFsnX251bWJlck9mQWxsUmFuZ2VzJ10rPV8weGUwMTcyYyxfMHg0MTE2MTRbXzB4NTc0NCgnMHgzZGYnKV0rPV8weGE1ZTAzOCwweDAhPT1fMHhlMDE3MmN8fDB4MCE9PV8weGE1ZTAzOClyZXR1cm4hMHgwO31lbHNle3ZhciBfMHg1ZWFiODI9dGhpcztfW18weDU3NDQoJzB4ZDQnKV0oXzB4NWFmZWI5LGZ1bmN0aW9uKF8weDE1NGIyMyl7dmFyIF8weDUyODU3Yz1fMHgxNTRiMjNbXzB4NTc0NCgnMHgxZDEnKV0oKSxfMHgyNjU5YWI9ISFfMHg1ZWFiODJbXzB4NTc0NCgnMHgxZDInKV1bXzB4NTI4NTdjXTtkZWxldGUgXzB4NWVhYjgyW18weDU3NDQoJzB4MWQzJyldW18weDUyODU3Y10sZGVsZXRlIF8weDVlYWI4MlsnX2ZhaWxpbmdUZXN0cyddW18weDUyODU3Y10sXzB4NWVhYjgyW18weDU3NDQoJzB4NTZjJyldPV8weDI2NTlhYnx8XzB4NWVhYjgyWydfY2hhbmdlZCddO30pO319fSxfMHgzMTc1YjFbJ3Byb3RvdHlwZSddW18weDU3NDQoJzB4NWMxJyldPWZ1bmN0aW9uKCl7aWYoXzB4NTc0NCgnMHg1ZjknKSE9PV8weDU3NDQoJzB4NWZhJykpe3ZhciBfMHg1YWZlYjk9TWF0aFtfMHg1NzQ0KCcweDNkZScpXSgweDI3MTAqdGhpc1tfMHg1NzQ0KCcweDNkZicpXS90aGlzW18weDU3NDQoJzB4NTY4JyldKS8weDY0fHwweDA7dGhpc1snX2NvdmVyYWdlJ109eyd2YWx1ZSc6XzB4NWFmZWI5LCdsb3cnOl8weDVhZmViOTx0aGlzW18weDU3NDQoJzB4NTc3JyldKCl9O31lbHNle18weDVhZmViOVsnb24nXShfMHg1NzQ0KCcweDE5OScpLF9bXzB4NTc0NCgnMHgxM2EnKV0pLF8weDVhZmViOVsnb24nXSgnZW5kJyxfW18weDU3NDQoJzB4MTNhJyldKTt9fSxfMHgzMTc1YjFbXzB4NTc0NCgnMHgxMGQnKV1bXzB4NTc0NCgnMHg1ZDUnKV09ZnVuY3Rpb24oXzB4NWFmZWI5LF8weDMxNzViMSl7dmFyIF8weDQxMTYxND1bXSxfMHgxYjNjOWQ9XzB4NWFmZWI5W18weDU3NDQoJzB4MmE0JyldLF8weDQ1ZDg0Nz1fMHg1YWZlYjlbXzB4NTc0NCgnMHg0N2YnKV07X1tfMHg1NzQ0KCcweGQ0JyldKF8weDQ1ZDg0N1tfMHg1NzQ0KCcweDJhNycpXSxmdW5jdGlvbihfMHg1YWZlYjkpe3ZhciBfMHg0NWQ4NDc9bmV3IF8weDFmZTk0MChfMHg1YWZlYjkpO18weDQ1ZDg0N1tfMHg1NzQ0KCcweDQwNicpXShfMHgxYjNjOWQsXzB4MzE3NWIxKSxfMHg0NWQ4NDdbXzB4NTc0NCgnMHg1ZmInKV0oXzB4MWIzYzlkWydyYW5nZUNvbnNvbGVMb2cnXShfMHg0NWQ4NDcpKSxfMHg0MTE2MTRbJ3B1c2gnXShfMHg0NWQ4NDcpO30pLF8weDFiM2M5ZFtfMHg1NzQ0KCcweDViNCcpXShfMHg0MTE2MTQsXzB4NDVkODQ3WydjaGFuZ2VkJ10sXzB4NWFmZWI5W18weDU3NDQoJzB4NDdmJyldW18weDU3NDQoJzB4NWNmJyldKSxfMHgxYjNjOWRbXzB4NTc0NCgnMHg1YjUnKV0oKSxfMHg1YWZlYjlbJ2NvdmVyYWdlJ11bXzB4NTc0NCgnMHg1YjYnKV0mJl8weDFiM2M5ZFsnc2V0SW5zdHJ1bWVudGVkQnlUZXN0aW5nRnJhbWV3b3JrJ10oKTt9LF8weDMxNzViMVtfMHg1NzQ0KCcweDEwZCcpXVtfMHg1NzQ0KCcweDM0ZCcpXT1mdW5jdGlvbihfMHg1YWZlYjkpe2lmKF8weDU3NDQoJzB4NWZjJyk9PT1fMHg1NzQ0KCcweDVmZCcpKXtyZXR1cm4gdGhpc1snX3N0YWNrJ107fWVsc2V7dmFyIF8weDMxNzViMT10aGlzO3JldHVybiBfKF8weDVhZmViOSlbJ21hcCddKGZ1bmN0aW9uKF8weDVhZmViOSl7cmV0dXJueydmYWlsaW5nJzpfMHg1YWZlYjlbJ2lzRmFpbGluZyddKCksJ2xvYyc6XzB4MzE3NWIxW18weDU3NDQoJzB4MzU0JyldKF8weDVhZmViOVtfMHg1NzQ0KCcweDFhZScpXSgpKSwnZmlsZSc6XzB4NWFmZWI5W18weDU3NDQoJzB4MWFmJyldKCksJ3RpbWUnOl8weDVhZmViOVtfMHg1NzQ0KCcweDM0YicpXSgpLCdlcnJvcnMnOl8weDMxNzViMVtfMHg1NzQ0KCcweDU4YycpXShfMHg1YWZlYjlbXzB4NTc0NCgnMHgyYmMnKV0oKSksJ3BhdGgnOl8weDVhZmViOVtfMHg1NzQ0KCcweDVmZScpXSgpLCdtZXNzYWdlcyc6XzB4MzE3NWIxW18weDU3NDQoJzB4NTkzJyldKF8weDVhZmViOVtfMHg1NzQ0KCcweDRhNScpXSgpKX07fSk7fX0sXzB4MzE3NWIxWydwcm90b3R5cGUnXVtfMHg1NzQ0KCcweDU5MycpXT1mdW5jdGlvbihfMHg1YWZlYjksXzB4MzE3NWIxKXt2YXIgXzB4NDExNjE0PXRoaXM7cmV0dXJuIF9bJ2NoYWluJ10oXzB4NWFmZWI5KVtfMHg1NzQ0KCcweDE2NScpXShmdW5jdGlvbihfMHg1YWZlYjkpe2lmKF8weDU3NDQoJzB4NWZmJykhPT1fMHg1NzQ0KCcweDYwMCcpKXtyZXR1cm4hXzB4MzE3NWIxfHxfMHg1YWZlYjlbXzB4NTc0NCgnMHgxOTgnKV0oKTt9ZWxzZXtfMHgzMzRlNzkoJ0ZpbGVceDIwY2hhbmdlZFx4MjBpblx4MjBlZGl0b3I6XHgyMCVzJyxfMHg0NWQ4NDdbXzB4NTc0NCgnMHhlJyldKTt2YXIgXzB4M2EzZTMxPXRoaXNbJ19scnVDYWNoZSddWydnZXQnXShfMHg0NWQ4NDdbJ3BhdGgnXSk7dGhpc1tfMHg1NzQ0KCcweDY5JyldW18weDU3NDQoJzB4NzgnKV0oXzB4NDVkODQ3W18weDU3NDQoJzB4ZScpXSxfMHgxYjNjOWQmJl9bXzB4NTc0NCgnMHgxNDEnKV0oXzB4M2EzZTMxKT9fMHgzYTNlMzE6XzB4MzE3NWIxKSxfMHg0NWQ4NDdbXzB4NTc0NCgnMHg3MicpXSsrLHRoaXNbXzB4NTc0NCgnMHg1MuKAizgnKV0oX1tfMHg1NzQ0KCcweDc5JyldKHt9LF8weDQ1ZDg0Nyx7J2NvbnRlbnQnOl8weDMxNzViMX0pLF8weDNhM2UzMSxfMHg0MTE2MTQsITB4MCxfMHgxYjNjOWQpLF8weDQ1ZDg0N1tfMHg1NzQ0KCcweDI0NycpXT1fMHgxYjNjOWQ7fX0pW18weDU3NDQoJzB4MTY2JyldKGZ1bmN0aW9uKF8weDVhZmViOSl7cmV0dXJuIF8weDQxMTYxNFsnX21hcE1lc3NhZ2UnXShfMHg1YWZlYjksXzB4MzE3NWIxKTt9KVtfMHg1NzQ0KCcweGUzJyldKCk7fSxfMHgzMTc1YjFbXzB4NTc0NCgnMHgxMGQnKV1bJ19tYXBNZXNzYWdlJ109ZnVuY3Rpb24oXzB4NWFmZWI5LF8weDMxNzViMSl7aWYoXzB4NTc0NCgnMHg2MDEnKSE9PSdHSlFIaycpe3JldHVybnsndHlwZSc6XzB4NWFmZWI5Wyd0eXBlJ10oKSwndGV4dCc6XzB4MzE3NWIxP3ZvaWQgMHgwOl8weDVhZmViOVtfMHg1NzQ0KCcweDNlMycpXSgpLCdmaWxlJzpfMHg1YWZlYjlbJ2ZpbGUnXSgpJiZfMHg1YWZlYjlbXzB4NTc0NCgnMHgyYTQnKV0oKVtfMHg1NzQ0KCcweGUnKV0oKSwnbG9jJzp0aGlzW18weDU3NDQoJzB4MzU0JyldKF8weDVhZmViOVtfMHg1NzQ0KCcweDJiZCcpXSgpKXx8XzB4NWFmZWI5W18weDU3NDQoJzB4OGYnKV0oKSwnY29udGV4dCc6XzB4NWFmZWI5W18weDU3NDQoJzB4M2U1JyldKCksJ3ZhbHVlQmFnJzpfMHgzMTc1YjE/XzB4NWFmZWI5WydkZXRhY2hWYWx1ZUJhZyddKCk6cHJvY2Vzc1tfMHg1NzQ0KCcweDY3JyldW18weDU3NDQoJzB4MTNmJyldP18weDVhZmViOVtfMHg1NzQ0KCcweDE5OCcpXSgpOnZvaWQgMHgwLCdleHBlY3RlZCc6XzB4NWFmZWI5W18weDU3NDQoJzB4M2U4JyldKCksJ2FjdHVhbCc6XzB4NWFmZWI5W18weDU3NDQoJzB4M2U2JyldKCl9O31lbHNle18weGQzOGYwMShfMHgxYjNjOWRbJ25leHQnXShfMHg1YWZlYjkpKTt9fSxfMHgzMTc1YjFbJ3Byb3RvdHlwZSddW18weDU3NDQoJzB4NThjJyldPWZ1bmN0aW9uKF8weDVhZmViOSl7aWYoXzB4NTc0NCgnMHg2MDInKT09PV8weDU3NDQoJzB4NjAzJykpe3ZhciBfMHg0OTVmMTA9XzB4NTc0NCgnMHgxJyk9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlO2lmKCFfMHgzMGU2OGYmJl8weDQ5NWYxMClyZXR1cm4gXzB4NDk1ZjEwKF8weGE1ZTAzOCwhMHgwKTtpZihfMHhlMDE3MmMpcmV0dXJuIF8weGUwMTcyYyhfMHhhNWUwMzgsITB4MCk7dmFyIF8weDM0MmU2OT1uZXcgRXJyb3IoXzB4NTc0NCgnMHg2MDQnKStfMHhhNWUwMzgrJ1x4MjcnKTt0aHJvdyBfMHgzNDJlNjlbXzB4NTc0NCgnMHg2MDUnKV09XzB4NTc0NCgnMHg2MDYnKSxfMHgzNDJlNjk7fWVsc2V7dmFyIF8weDMxNzViMT10aGlzO3JldHVybiBfW18weDU3NDQoJzB4MTY2JyldKF8weDVhZmViOSxmdW5jdGlvbihfMHg1YWZlYjkpe3JldHVybnsnbWVzc2FnZSc6XzB4NWFmZWI5WydtZXNzYWdlJ10oKSwnc3RhY2snOl9bXzB4NTc0NCgnMHgxNjYnKV0oXzB4NWFmZWI5W18weDU3NDQoJzB4NGUnKV0oKSxmdW5jdGlvbihfMHg1YWZlYjkpe3JldHVybnsnZmlsZSc6XzB4NWFmZWI5W18weDU3NDQoJzB4MWFmJyldKCksJ2xvYyc6XzB4MzE3NWIxWydfcmFuZ2VUb0xvYyddKF8weDVhZmViOVtfMHg1NzQ0KCcweDJiZCcpXSgpKXx8XzB4NWFmZWI5W18weDU3NDQoJzB4OGYnKV0oKSwnY29udGV4dCc6XzB4NWFmZWI5W18weDU3NDQoJzB4M2U1JyldKCl9O30pLCdleHBlY3RlZCc6XzB4NWFmZWI5W18weDU3NDTigIsoJzB4M2U4JyldKCksJ2FjdHVhbCc6XzB4NWFmZWI5W18weDU3NDQoJzB4M2U2JyldKCksJ3NuYXBzaG90JzpfMHg1YWZlYjlbXzB4NTc0NCgnMHg0ODYnKV0oKX07fSk7fX0sXzB4MzE3NWIxW18weDU3NDQoJzB4MTBkJyldWydfcmFuZ2VUb0xvYyddPWZ1bmN0aW9uKF8weDVhZmViOSl7cmV0dXJuIF8weDVhZmViOSYmXzB4NWFmZWI5W18weDU3NDQoJzB4MWIwJyldJiZfMHg1YWZlYjlbXzB4NTc0NCgnMHgxYjAnKV0oKSsnOicrXzB4NWFmZWI5W18weDU3NDQoJzB4MWIxJyldKCl8fHZvaWQgMHgwO30sXzB4MzE3NWIxW18weDU3NDQoJzB4MTBkJyldW18weDU3NDQoJzB4MmQ1JyldPWZ1bmN0aW9uKF8weDVhZmViOSxfMHgzMTc1YjEpe3RoaXNbXzB4NTc0NCgnMHg3YicpXShfMHg1NzQ0KCcweDMxJyksX1tfMHg1NzQ0KCcweDc5JyldKHsndHlwZSc6XzB4NWFmZWI5fSxfMHgzMTc1YjEpKTt9LF8weDMxNzViMTt9KEV2ZW50RW1pdHRlcik7XzB4MzE3NWIxW18weDU3NDQoJzB4YicpXT1fMHgxZjRhMmY7fSx7Jy4uLy4uL3V0aWxzJzoweDFlLCcuLi9zaGFyZWQvdXRpbHMnOjB4MTcsJy4vYnJvd3Nlckdsb2JhbHMnOjB4OSwnLi9jb25zb2xlTWVzc2FnZSc6MHhhLCcuL2NvdmVyYWJsZVJhbmdlJzoweGIsJy4vZXJyb3JFbnRyeSc6MHhlLCcuL2V4ZWN1dGVkVGVzdCc6MHhmLCcuL3RyYWNrZWRTb3VyY2VGaWxlJzoweDE1LCdtaW5pbWF0Y2gnOnZvaWQgMHgwLCdwYXRoJzp2b2lkIDB4MH1dLDE5OltmdW5jdGlvbihfMHgzZjYyYWIsXzB4MjZkNmZhLF8weDM3ZjgzNyl7J3VzZSBzdHJpY3QnO3ZhciBfMHg1YmQ0MWE9dGhpcyYmdGhpc1tfMHg1NzQ0KCcweDYwNycpXXx8ZnVuY3Rpb24oXzB4M2Y2MmFiLF8weDI2ZDZmYSl7dmFyIF8weDM3ZjgzNz1fMHg1NzQ0KCcweDEnKT09dHlwZW9mIFN5bWJvbCYmXzB4M2Y2MmFiW1N5bWJvbFtfMHg1NzQ0KCcweGZjJyldXTtpZighXzB4MzdmODM3KXJldHVybiBfMHgzZjYyYWI7dmFyIF8weDViZDQxYSxfMHg0MjNmMWYsXzB4MmJkYTU2PV8weDM3ZjgzN1snY2FsbCddKF8weDNmNjJhYiksXzB4MjM5MWQ0PVtdO3RyeXtpZihfMHg1NzQ0KCcweDYwOCcpPT09XzB4NTc0NCgnMHg2MDknKSl7cmV0dXJuIHRoaXNbXzB4NTc0NCgnMHhmYScpXTt9ZWxzZXtmb3IoOyh2b2lkIDB4MD09PV8weDI2ZDZmYXx8XzB4MjZkNmZhLS0+MHgwKSYmIShfMHg1YmQ0MWE9XzB4MmJkYTU2W18weDU3NDQoJzB4ZDknKV0oKSlbJ2RvbmUnXTspXzB4MjM5MWQ0WydwdXNoJ10oXzB4NWJkNDFhW18weDU3NDQoJzB4ZTMnKV0pO319Y2F0Y2goXzB4MzRmNjM3KXtfMHg0MjNmMWY9eydlcnJvcic6XzB4MzRmNjM3fTt9ZmluYWxseXt0cnl7aWYoJ2V5WUt0JyE9PSdleVlLdCcpe3ZhciBfMHgxZTgxM2I9XzB4MzdmODM3WydfcHJvamVjdCddW18weDU3NDQoJzB4MjBjJyldKF8weDNmNjJhYlsnb3JpZ2luYWxJZCddfHxfMHgzZjYyYWJbJ2lkJ10pO18weDI2ZDZmYT1fMHgxZTgxM2ImJl8weDFlODEzYltfMHg1NzQ0KCcweDUyMicpXSgpO31lbHNle18weDViZDQxYSYmIV8weDViZDQxYVtfMHg1NzQ0KCcweGUyJyldJiYoXzB4MzdmODM3PV8weDJiZGE1NlsncmV0dXJuJ10pJiZfMHgzN2Y4MzdbXzB4NTc0NCgnMHhlYycpXShfMHgyYmRhNTYpO319ZmluYWxseXtpZihfMHg0MjNmMWYpdGhyb3cgXzB4NDIzZjFmW18weDU3NDQoJzB4N2MnKV07fX1yZXR1cm4gXzB4MjM5MWQ0O30sXzB4NDIzZjFmPXRoaXMmJnRoaXNbJ19fc3ByZWFkJ118fGZ1bmN0aW9uKCl7Zm9yKHZhciBfMHgzZjYyYWI9W10sXzB4MjZkNmZhPTB4MDtfMHgyNmQ2ZmE8YXJndW1lbnRzWydsZW5ndGgnXTtfMHgyNmQ2ZmErKylfMHgzZjYyYWI9XzB4M2Y2MmFiW18weDU3NDQoJzB4OTMnKV0oXzB4NWJkNDFhKGFyZ3VtZW50c1tfMHgyNmQ2ZmFdKSk7cmV0dXJuIF8weDNmNjJhYjt9LF8weDJiZGE1Nj1fMHgzZjYyYWIoXzB4NTc0NCgnMHg2MGEnKSksXzB4MjM5MWQ0PV8weDNmNjJhYignb3MnKSxfMHgzMWU5OGI9XzB4M2Y2MmFiKCcuLy4uLy4uL3V0aWxzJyksXzB4M2QzOGI3PV8weDMxZTk4YltfMHg1NzQ0KCcweDFiNCcpXSgpLF8weDUxMDAyMT1fMHgzN2Y4MzdbXzB4NTc0NCgnMHg2MGInKV09eyd0dGwnOjB4ODAsJ2FkZHJlc3MnOl8weDU3NDQoJzB4NjBjJyksJ3BvcnQnOjB4ZGM0ZX0sXzB4MWI2YzVmPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gXzB4M2Y2MmFiKCl7aWYoJ2VUZGVMJz09PSdrdGZQaicpe2lmKF8weDI2ZDZmYVtfMHg1NzQ0KCcweDFmOScpXSYmXzB4M2Y2MmFiJiZfMHgyNmQ2ZmFbXzB4NTc0NCgnMHgxZjknKV09PT1fMHgzZjYyYWIpe2lmKF8weDU3NDQoJzB4MWZmJyk9PT1fMHg1YmQ0MWF8fF8weDU3NDQoJzB4MTM4Jyk9PT1fMHg1YmQ0MWEpcmV0dXJuO18weDM3ZjgzN1tfMHg1NzQ0KCcweDJkNScpXSh7J3R5cGUnOl8weDU3NDQoJzB4MjAwJyksJ2FkZHJlc3MnOl8weDViZDQxYX0pO319ZWxzZXt0cnl7aWYoXzB4NTc0NCgnMHg2MGQnKT09PV8weDU3NDQoJzB4NjBlJykpe3N3aXRjaChfMHgyNmQ2ZmFbXzB4NTc0NCgnMHhlZCcpXSl7Y2FzZSAweDA6cmV0dXJuWzB4NCx0aGlzWydfd29ya2VyUG9vbCddWydzdGFydCddKHRoaXNbXzB4NTc0NCgnMHgxMGInKV1bXzB4NTc0NCgnMHgxYzknKV0oKSldO2Nhc2UgMHgxOnJldHVybiBfMHgzZjYyYWI9XzB4MjZkNmZhW18weDU3NDQoJzB4MTBlJyldKCksdGhpc1snX3dvcmtlclBvb2wnXVtfMHg1NzQ0KCcweDEwZicpXSh0aGlzW18weDU3NDQoJzB4MTBiJyldW18weDU3NDQoJzB4Y2InKV0oKSksWzB4MixfMHgzZjYyYWJdO319ZWxzZXt2YXIgXzB4M2Y2MmFiPXRoaXM7dGhpc1tfMHg1NzQ0KCcweDYwZicpXT0weDAsdGhpc1tfMHg1NzQ0KCcweDYxMCcpXT17fSx0aGlzWydfc2VuZGVyJ109XzB4MmJkYTU2WydjcmVhdGVTb2NrZXQnXShfMHg1NzQ0KCcweDYxMScpKSx0aGlzW18weDU3NDQoJzB4M2ZhJyldW18weDU3NDQoJzB4MTA3JyldKGZ1bmN0aW9uKCl7aWYoXzB4NTc0NCgnMHg2MTInKSE9PV8weDU3NDQoJzB4NjEyJykpe3RoaXNbXzB4NTc0NCgnMHg0ZCcpXVsnY29weVRvQ2xpcGJvYXJkJ10oXzB4M2Y2MmFiW18weDU3NDQoJzB4MTRmJyldKTt9ZWxzZXtfMHgzZjYyYWJbXzB4NTc0NCgnMHgzZmEnKV1bJ3NldEJyb2FkY2FzdCddKCEweDApLF8weDNmNjJhYltfMHg1NzQ0KCcweDNmYScpXVtfMHg1NzQ0KCcweDE5MycpXShfMHg1MTAwMjFbXzB4NTc0NCgnMHgxOTQnKV0pO319KSx0aGlzW18weDU3NDQoJzB4M2ZhJyldWydvbiddKF8weDU3NDQoJzB4N2MnKSxmdW5jdGlvbigpe2lmKF8weDU3NDQoJzB4NjEzJykhPT1fMHg1NzQ0KCcweDYxMycpKXtyZXR1cm4gdGhpc1tfMHg1NzQ0KCcweDNmMicpXTt9ZWxzZXt0cnl7aWYoXzB4NTc0NCgnMHg2MTQnKT09PV8weDU3NDQoJzB4NjE0Jykpe18weDNmNjJhYltfMHg1NzQ0KCcweDNmYScpXVtfMHg1NzQ0KCcweDIzMCcpXSgpO31lbHNle3Rocm93IG5ldyBFcnJvcihfMHg1NzQ0KCcweDYxNScpK18weDNmNjJhYitfMHg1NzQ0KCcweDYxNicpKyhfMHgxYjZjNWZbXzB4NTc0NCgnMHgzMScpXT9fMHgxYjZjNWZbXzB4NTc0NCgnMHgzMScpXTondW5rbm93bi4nKSk7fX1jYXRjaChfMHgxOTUzN2Upe319fSksdGhpc1tfMHg1NzQ0KCcweDE5NScpXT1fMHgyYmRhNTZbXzB4NTc0NCgnMHg2MTcnKV0oXzB4NTc0NCgnMHg2MTEnKSksdGhpc1tfMHg1NzQ0KCcweDE5NScpXVsnb24nXShfMHg1NzQ0KCcweDYxOCcpLGZ1bmN0aW9uKCl7dHJ5e18weDNmNjJhYltfMHg1NzQ0KCcweDE5NScpXVsnc2V0QnJvYWRjYXN0J10oITB4MCksXzB4M2Y2MmFiW18weDU3NDQoJzB4MTk1JyldW18weDU3NDQoJzB4MTkzJyldKF8weDUxMDAyMVtfMHg1NzQ0KCcweDE5NCcpXSksXzB4M2Y2MmFiW18weDU3NDQoJzB4MTk1JyldW18weDU3NDQoJzB4MTk2JyldKF8weDUxMDAyMVsnYWRkcmVzcyddKTt9Y2F0Y2goXzB4MTMzNzI3KXt9fSksdGhpc1tfMHg1NzQ0KCcweDE5NScpXVsnb24nXShfMHg1NzQ0KCcweDMxJyksZnVuY3Rpb24oXzB4MjZkNmZhKXtpZihfMHg1NzQ0KCcweDYxOScpIT09XzB4NTc0NCgnMHg2MWEnKSl7dHJ5e18weDI2ZDZmYT1KU09OW18weDU3NDQoJzB4MmQnKV0oXzB4MjZkNmZhW18weDU3NDQoJzB4NTcnKV0oJ3V0ZjgnKSksXzB4MjZkNmZhW18weDU3NDQoJzB4NjFiJyldJiZfMHgyNmQ2ZmFbXzB4NTc0NCgnMHg2MWMnKV0mJl8weDI2ZDZmYVsnc291cmNlSWQnXSYmIV8weDNmNjJhYltfMHg1NzQ0KCcweDYxZCcpXSgpW18weDU3NDQoJzB4MTJlJyldKGZ1bmN0aW9uKF8weDNmNjJhYil7cmV0dXJuIF8weDNmNjJhYj09PV8weDI2ZDZmYVtfMHg1NzQ0KCcweDYxYycpXTt9KSYmXzB4MjZkNmZhW18weDU3NDQoJzB4NjFlJyldIT09XzB4M2QzOGI3JiZfW18weDU3NDQoJzB4ZDQnKV0oXzB4M2Y2MmFiW18weDU3NDQoJzB4NjEwJyldW18weDI2ZDZmYVtfMHg1NzQ0KCcweDYxYicpXV0sZnVuY3Rpb24oXzB4M2Y2MmFiKXtpZignVG1zRkInIT09XzB4NTc0NCgnMHg2MWYnKSl7XzB4M2Y2MmFiW18weDU3NDQoJzB4ZTQnKV0obnVsbCxbXzB4MjZkNmZhW18weDU3NDQoJzB4MTk5JyldLF8weDI2ZDZmYVtfMHg1NzQ0KCcweDYxYycpXV0pO31lbHNle18weDIzOTFkND1fMHg0MjNmMWZbXzB4NTc0NCgnMHg1ZjAnKV0oXzB4M2Y2MmFiKXx8XzB4MjM5MWQ0O3ZhciBfMHhlNGYxNGM9XzB4M2Y2MmFiWyd1cGRhdGVEb2N1bWVudCddKCk7aWYoXzB4ZTRmMTRjJiYoXzB4MmJkYTU2W18weDNmNjJhYltfMHg1NzQ0KCcweGUnKV0oKV09XzB4NDIzZjFmW18weDU3NDQoJzB4NWYyJyldP18weDNmNjJhYlsnYWxsTGluZXMnXSgpOl8weGU0ZjE0YyksXzB4MzdmODM3KXt2YXIgXzB4NTRmMjc9XzB4M2Y2MmFiW18weDU3NDQoJzB4MWQxJyldKCksXzB4MmI5NTQxPV8weDM3ZjgzN1tfMHg1NGYyN107XzB4MmI5NTQxP18weDViZDQxYVtfMHg1NzQ0KCcweDU2YScpXVtfMHg1NGYyN109XzB4MmI5NTQxOmRlbGV0ZSBfMHg1YmQ0MWFbXzB4NTc0NCgnMHg1NmEnKV1bXzB4NTRmMjddO319fSk7fWNhdGNoKF8weDIxOTUxZCl7fX1lbHNle18weDIzOTFkND1fMHgzZjYyYWIsXzB4M2QzOGI3PV8weDI2ZDZmYTt9fSksdGhpc1snX3JlY2VpdmVyJ11bJ29uJ10oJ2Vycm9yJyxmdW5jdGlvbigpe3RyeXtfMHgzZjYyYWJbXzB4NTc0NCgnMHgxOTUnKV1bXzB4NTc0NCgnMHgyMzAnKV0oKTt9Y2F0Y2goXzB4MThmY2Y0KXt9fSksdGhpc1snX3JlY2VpdmVyJ11bXzB4NTc0NCgnMHgxMDcnKV0oXzB4NTEwMDIxW18weDU3NDQoJzB4MTM3JyldKTt9fWNhdGNoKF8weDQ5OThhYyl7fX19cmV0dXJuIF8weDNmNjJhYltfMHg1NzQ0KCcweDEwZCcpXVsnb24nXT1mdW5jdGlvbihfMHgzZjYyYWIsXzB4MjZkNmZhKXt0aGlzWydfbGlzdGVuZXJzJ10mJih0aGlzW18weDU3NDQoJzB4NjEwJyldW18weDNmNjJhYl18fCh0aGlzW18weDU3NDQoJzB4NjEwJyldW18weDNmNjJhYl09W10pLHRoaXNbXzB4NTc0NCgnMHg2MTAnKV1bXzB4M2Y2MmFiXVtfMHg1NzQ0KCcweDI5JyldKF8weDI2ZDZmYSkpO30sXzB4M2Y2MmFiWydwcm90b3R5cGUnXVtfMHg1NzQ0KCcweDdiJyldPWZ1bmN0aW9uKF8weDNmNjJhYixfMHgyNmQ2ZmEpe2lmKF8weDU3NDQoJzB4NjIwJykhPT1fMHg1NzQ0KCcweDYyMScpKXt0cnl7aWYoJ0VYcExEJyE9PV8weDU3NDQoJzB4NjIyJykpe3ZhciBfMHgzN2Y4Mzc9bmV3IEJ1ZmZlcihKU09OW18weDU3NDQoJzB4OCcpXSh7J2V2ZW50JzpfMHgzZjYyYWIsJ2RhdGEnOl8weDI2ZDZmYSwnc291cmNlJzp0aGlzW18weDU3NDQoJzB4NjIzJyldKCksJ3NvdXJjZUlkJzpfMHgzZDM4Yjd9KSk7dGhpc1tfMHg1NzQ0KCcweDNmYScpXVsnc2VuZCddKF8weDM3ZjgzNywweDAsXzB4MzdmODM3W18weDU3NDQoJzB4OWEnKV0sXzB4NTEwMDIxW18weDU3NDQoJzB4MTM3JyldLF8weDUxMDAyMVsnYWRkcmVzcyddKTt9ZWxzZXtyZXR1cm4hdGhpc1tfMHg1NzQ0KCcweDYyNCcpXTt9fWNhdGNoKF8weDE2ZDBiZCl7fX1lbHNle3RoaXNbXzB4NTc0NCgnMHg0NWYnKV09T2JqZWN0WydjcmVhdGUnXShudWxsKTt9fSxfMHgzZjYyYWJbXzB4NTc0NCgnMHgxMGQnKV1bXzB4NTc0NCgnMHg2MjMnKV09ZnVuY3Rpb24oKXt2YXIgXzB4M2Y2MmFiPXRoaXNbXzB4NTc0NCgnMHg2MWQnKV0oKTtyZXR1cm4gdGhpc1tfMHg1NzQ0KCcweDYwZicpXT09PV8weDNmNjJhYltfMHg1NzQ0KCcweDlhJyldJiYodGhpc1snX25ldHdvcmtBZGRyZXNzJ109MHgwKSxfMHgzZjYyYWJbdGhpc1tfMHg1NzQ0KCcweDYwZicpXSsrXTt9LF8weDNmNjJhYltfMHg1NzQ0KCcweDEwZCcpXVtfMHg1NzQ0KCcweDYxZCcpXT1mdW5jdGlvbigpe3JldHVybiBfMHgzZjYyYWJbXzB4NTc0NCgnMHg2MjUnKV0oKVtfMHg1NzQ0KCcweDE2NicpXShmdW5jdGlvbihfMHgzZjYyYWIpe3JldHVybiBfMHgyMzkxZDRbJ2hvc3RuYW1lJ10oKSsnXHgyMCgnK18weDNmNjJhYisnKSc7fSk7fSxfMHgzZjYyYWJbXzB4NTc0NCgnMHgxMGQnKV1bJ3N0b3AnXT1mdW5jdGlvbigpe3RyeXt0aGlzW18weDU3NDQoJzB4M2ZhJyldW18weDU3NDQoJzB4MjMwJyldKCk7fWNhdGNoKF8weDFjNGRiNSl7fXRyeXt0aGlzW18weDU3NDQoJzB4MTk1JyldW18weDU3NDQoJzB4MjMwJyldKCk7fWNhdGNoKF8weDJjNDg0YSl7fX0sXzB4M2Y2MmFiWydfZ2V0TmV0d29ya0FkZHJlc3NlcyddPWZ1bmN0aW9uKCl7dmFyIF8weDNmNjJhYj1fMHgyMzkxZDRbJ25ldHdvcmtJbnRlcmZhY2VzJ10oKSxfMHgyNmQ2ZmE9T2JqZWN0WydrZXlzJ10oXzB4M2Y2MmFiKVtfMHg1NzQ0KCcweDkyJyldKGZ1bmN0aW9uKF8weDI2ZDZmYSxfMHgzN2Y4Mzcpe2lmKF8weDU3NDQoJzB4NjI2JykhPT1fMHg1NzQ0KCcweDYyNycpKXtyZXR1cm4gXzB4NDIzZjFmKF8weDI2ZDZmYSxfMHgzZjYyYWJbXzB4MzdmODM3XVtfMHg1NzQ0KCcweDE2NicpXShmdW5jdGlvbihfMHgzZjYyYWIpe3JldHVybnsnYWRkcmVzcyc6XzB4M2Y2MmFiW18weDU3NDQoJzB4MWRjJyldLCdpbnRlcm5hbCc6XzB4M2Y2MmFiWydpbnRlcm5hbCddfTt9KSk7fWVsc2V7cmV0dXJuISF0aGlzW18weDU3NDQoJzB4NjI4JyldO319LFtdKVtfMHg1NzQ0KCcweDE2NScpXShmdW5jdGlvbihfMHgzZjYyYWIpe3JldHVybicxMjcuMC4wLjEnIT09XzB4M2Y2MmFiW18weDU3NDQoJzB4MWRjJyldJiZfMHg1NzQ0KCcweDFkZCcpIT09XzB4M2Y2MmFiW18weDU3NDQoJzB4MWRjJyldJiYhXzB4M2Y2MmFiW18weDU3NDQoJzB4MWRlJyldO30pW18weDU3NDQoJzB4MTY2JyldKGZ1bmN0aW9uKF8weDNmNjJhYil7aWYoXzB4NTc0NCgnMHg2MjknKSE9PSd1RVRSRycpe3JldHVybiBfMHgzZjYyYWJbJ2FkZHJlc3MnXTt9ZWxzZXt0aGlzW18weDU3NDQoJzB4MzM0JyldPU9iamVjdFtfMHg1NzQ0KCcweDU4JyldKG51bGwpLHRoaXNbJ19yZWN5Y2xlZExpbmVzJ109W10sdGhpc1snX2xpbmVTaGlmdE9ySW52YWxpZGF0aW9uU2luY2VMYXN0VXBkYXRlJ109ITB4MTt9fSk7cmV0dXJuIDB4MD09PV8weDI2ZDZmYVtfMHg1NzQ0KCcweDlhJyldJiZfMHgyNmQ2ZmFbXzB4NTc0NCgnMHgyOScpXShfMHg1NzQ0KCcweDFmZicpKSxfMHgyNmQ2ZmE7fSxfMHgzZjYyYWI7fSgpO18weDI2ZDZmYVtfMHg1NzQ0KCcweGInKV09bmV3IF8weDFiNmM1ZigpO30seycuLy4uLy4uL3V0aWxzJzoweDFlLCdkZ3JhbSc6dm9pZCAweDAsJ29zJzp2b2lkIDB4MH1dLDIwOltmdW5jdGlvbihfMHg1ZWFlODQsXzB4NDNkM2M5LF8weGFhNGIyYil7J3VzZSBzdHJpY3QnO3ZhciBfMHgxMWU5Mjk9ZnVuY3Rpb24oKXtmdW5jdGlvbiBfMHg1ZWFlODQoKXtpZignYnVSeGInIT09XzB4NTc0NCgnMHg2MmEnKSl7aWYoYXJndW1lbnRzW18weDU3NDQoJzB4OWEnKV0+MHgxKXRoaXNbXzB4NTc0NCgnMHgzZWYnKV09YXJndW1lbnRzWzB4MF0sdGhpc1tfMHg1NzQ0KCcweDVkOCcpXT1hcmd1bWVudHNbMHgxXSx0aGlzW18weDU3NDQoJzB4M2ZlJyldPWFyZ3VtZW50c1sweDJdO2Vsc2UgaWYoYXJndW1lbnRzWydsZW5ndGgnXSl7dmFyIF8weDVlYWU4ND1hcmd1bWVudHNbMHgwXVtfMHg1NzQ0KCcweGQzJyldKCdfJyk7dGhpc1tfMHg1NzQ0KCcweDNlZicpXT1wYXJzZUludChfMHg1ZWFlODRbMHgwXSwweGEpLHRoaXNbXzB4NTc0NCgnMHg1ZDgnKV09cGFyc2VJbnQoXzB4NWVhZTg0WzB4MV0sMHhhKTt9fWVsc2V7dmFyIF8weDUyZWMzYT0weDAsXzB4MzcwYTNmPW5ldyBNYXAoKSxfMHgxZmE1NDQ9bmV3IFNldCgpLF8weDI2YTQxOD1uZXcgU2V0KCk7Zm9yKHZhciBfMHg1MjIzYTQgaW4gXzB4NWVhZTg0KWlmKF8weDVlYWU4NFsnaGFzT3duUHJvcGVydHknXShfMHg1MjIzYTQpKXt2YXIgXzB4NGMxMDA4PV8weDVlYWU4NFtfMHg1MjIzYTRdLF8weDNhYjhkZT1fMHg0YzEwMDhbJ2lkJ10sXzB4MWExNTIwPV8weDRjMTAwOFtfMHg1NzQ0KCcweGUnKV07XzB4M2FiOGRlJiYoXzB4M2FiOGRlPl8weDUyZWMzYSYmKF8weDUyZWMzYT1fMHgzYWI4ZGUpLF8weDFmYTU0NFsnYWRkJ10oXzB4M2FiOGRlKSxfMHgzNzBhM2ZbXzB4NTc0NCgnMHg3OCcpXShfMHgxYTE1MjAsXzB4M2FiOGRlKSk7fWZvcih2YXIgXzB4M2FiOGRlPTB4MTtfMHgzYWI4ZGU8XzB4NTJlYzNhO18weDNhYjhkZSsrKV8weDFmYTU0NFtfMHg1NzQ0KCcweDRkZScpXShfMHgzYWI4ZGUpfHxfMHgyNmE0MThbJ2FkZCddKF8weDNhYjhkZSk7dGhpc1tfMHg1NzQ0KCcweDM4OCcpXT1fMHg1MmVjM2EsdGhpc1tfMHg1NzQ0KCcweDFhMCcpXT1fMHgyNmE0MTgsdGhpc1tfMHg1NzQ0KCcweDM4NScpXT1fMHgzNzBhM2Y7fX1yZXR1cm4gXzB4NWVhZTg0W18weDU3NDQoJzB4MTBkJyldW18weDU3NDQoJzB4MWQxJyldPWZ1bmN0aW9uKCl7aWYoXzB4NTc0NCgnMHg2MmInKSE9PV8weDU3NDQoJzB4NjJiJykpe3RoaXNbXzB4NTc0NCgnMHgyZDUnKV0oeyd0eXBlJzpfMHg1NzQ0KCcweDJmMycpLCdkYXRhJzpfMHg1ZWFlODR9KTt9ZWxzZXtyZXR1cm4gdGhpc1tfMHg1NzQ0KCcweDNlZicpXSsnXycrdGhpc1snX2xpbmUnXTt9fSxfMHg1ZWFlODRbXzB4NTc0NCgnMHgxMGQnKV1bXzB4NTc0NCgnMHg0OGQnKV09ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc1tfMHg1NzQ0KCcweDNlZicpXTt9LF8weDVlYWU4NFtfMHg1NzQ0KCcweDEwZCcpXVsnbGluZSddPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbXzB4NTc0NCgnMHg1ZDgnKV07fSxfMHg1ZWFlODRbXzB4NTc0NCgnMHgxMGQnKV1bXzB4NTc0NCgnMHgzZTUnKV09ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc1snX2NvbnRleHQnXTt9LF8weDVlYWU4NFtfMHg1NzQ0KCcweDEwZCcpXVtfMHg1NzQ0KCcweDhkJyldPWZ1bmN0aW9uKF8weDVlYWU4NCl7dGhpc1tfMHg1NzQ0KCcweDNmYicpXT1fMHg1ZWFlODQ7fSxfMHg1ZWFlODRbJ3Byb3RvdHlwZSddW18weDU3NDQoJzB4MWFmJyldPWZ1bmN0aW9uKCl7aWYoXzB4NTc0NCgnMHg2MmMnKSE9PV8weDU3NDQoJzB4NjJkJykpe3JldHVybiB0aGlzW18weDU3NDQoJzB4M2ZiJyldJiZ0aGlzW18weDU3NDQoJzB4M2ZiJyldW18weDU3NDQoJzB4ZScpXSgpfHx0aGlzWydfZmlsZUlkJ10mJn50aGlzW18weDU3NDQoJzB4M2VmJyldW18weDU3NDQoJzB4NzAnKV0oJy4nKSYmdGhpc1tfMHg1NzQ0KCcweDNlZicpXTt9ZWxzZXtzd2l0Y2goaVsnbGFiZWwnXSl7Y2FzZSAweDA6cmV0dXJuIGlbXzB4NTc0NCgnMHhmMCcpXVtfMHg1NzQ0KCcweDI5JyldKFsweDAsMHgyLCwweDNdKSxfMHg0M2QzYzk9W18weDU3NDQoJzB4MTY5JyksXzB4NTc0NCgnMHgxNmEnKSwnLS1kZXRlcm1pbmlzdGljLWZldGNoJ10sXzB4YWE0YjJiPV8weDVlYWU4NCgnb3MnKSxfMHg1NzQ0KCcweDE2YycpPT09XzB4YWE0YjJiW18weDU3NDQoJzB4NCcpXSgpJiYoXzB4NDNkM2M5W18weDU3NDQoJzB4MjknKV0oXzB4NTc0NCgnMHgxNmQnKSksXzB4NDNkM2M5WydwdXNoJ10oXzB4NTc0NCgnMHgxNmUnKSkpLF8weDExZTkyOT10aGlzLFsweDQsb1tfMHg1NzQ0KCcweDE2ZicpXSh7J2Nocm9tZUZsYWdzJzp0aGlzW18weDU3NDQoJzB4MTA0JyldfHxfMHg0M2QzYzksJ2Nocm9tZVBhdGgnOnRoaXNbJ19wYXRoJ10sJ2xvZ0xldmVsJzpfMHg1NzQ0KCcweDE3MCcpfSldO2Nhc2UgMHgxOnJldHVybiBfMHgxMWU5MjlbXzB4NTc0NCgnMHgxMTEnKV09aVtfMHg1NzQ0KCcweDEwZScpXSgpLFsweDMsMHgzXTtjYXNlIDB4MjpyZXR1cm4gcz1pW18weDU3NDQoJzB4MTBlJyldKCksdGhpc1tfMHg1NzQ0KCcweDE3NCcpXShzKSxbMHgzLDB4M107Y2FzZSAweDM6cmV0dXJuWzB4Ml07fX19LF8weDVlYWU4NFtfMHg1NzQ0KCcweDEwZCcpXVsnc2V0UmFuZ2UnXT1mdW5jdGlvbihfMHg1ZWFlODQpe3RoaXNbXzB4NTc0NCgnMHgzMDEnKV09XzB4NWVhZTg0O30sXzB4NWVhZTg0W18weDU3NDQoJzB4MTBkJyldW18weDU3NDQoJzB4MmJkJyldPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbJ19yYW5nZSddO30sXzB4NWVhZTg0O30oKTtfMHg0M2QzYzlbXzB4NTc0NCgnMHhiJyldPV8weDExZTkyOTt9LHt9XSwyMTpbZnVuY3Rpb24oXzB4NDhlZDYyLF8weDEzNmEwYyxfMHgyMDk5NWMpeyd1c2Ugc3RyaWN0Jzt2YXIgXzB4NDEzZTA3PV8weDQ4ZWQ2MihfMHg1NzQ0KCcweDU2NCcpKSxfMHg1YmQzOWQ9XzB4NDhlZDYyKF8weDU3NDQoJzB4NjJlJykpLF8weDE1ZjNiNj1fMHg0OGVkNjIoXzB4NTc0NCgnMHg2MmYnKSksXzB4MjMzYjQ4PWZ1bmN0aW9uKCl7aWYoJ0Z4UFduJz09PV8weDU3NDQoJzB4NjMwJykpe18weDQ4ZWQ2MltfMHg1NzQ0KCcweGU0JyldKG51bGwsW18weDEzNmEwY1tfMHg1NzQ0KCcweDE5OScpXSxfMHgxMzZhMGNbXzB4NTc0NCgnMHg2MWMnKV1dKTt9ZWxzZXtmdW5jdGlvbiBfMHjigIs0OGVkNjIoXzB4NDhlZDYyLF8weDEzNmEwYyl7aWYoXzB4NTc0NCgnMHg2MzEnKSE9PV8weDU3NDQoJzB4NjMxJykpe3ZhciBfMHgzYjNiZDY9MHgwPT09dVsnaW5kZXhPZiddKF8weDQ4ZWQ2MiksXzB4M2Q1MTQ1PV9bXzB4NTc0NCgnMHgxMmUnKV0oXzB4NDEzZTA3LGZ1bmN0aW9uKF8weDUzNDhjMCxfMHgyZjFmNmIpe3JldHVybiAweDA9PT11W18weDU3NDQoJzB4NzAnKV0oXzB4MmYxZjZiKTt9KTtpZihfMHgzZDUxNDUpdT1fMHgyMzNiNDhbXzB4NTc0NCgnMHg1MDInKV0oXzB4NDhlZDYyLHVbXzB4NTc0NCgnMHg5ZCcpXShfMHgzZDUxNDVbXzB4NTc0NCgnMHgxMmYnKV0sXzB4M2Q1MTQ1W18weDU3NDQoJzB4NTNmJyldKSksaCYmKGhbXzB4NTc0NCgnMHg1M2YnKV09dSk7ZWxzZXtpZighXzB4M2IzYmQ2KXJldHVybiEweDE7dT1fMHgyMzNiNDhbJ3JlbGF0aXZlJ10oXzB4NDhlZDYyLHUpO319ZWxzZXt0aGlzWydfZGF0YSddPV8weDQ4ZWQ2Mix0aGlzW18weDU3NDQoJzB4NTZkJyldPV8weDEzNmEwYyx0aGlzW18weDU3NDQoJzB4MTE1JyldPU9iamVjdFtfMHg1NzQ0KCcweDU4JyldKG51bGwpLHRoaXNbXzB4NTc0NCgnMHg0NWYnKV09T2JqZWN0W18weDU3NDQoJzB4NTgnKV0obnVsbCksdGhpc1tfMHg1NzQ0KCcweDYzMicpXT1PYmplY3RbXzB4NTc0NCgnMHg1OCcpXShudWxsKSx0aGlzW18weDU3NDQoJzB4NjMzJyldPU9iamVjdFsnY3JlYXRlJ10obnVsbCksdGhpc1tfMHg1NzQ0KCcweDYzNCcpXT1PYmplY3RbXzB4NTc0NCgnMHg1OCcpXShudWxsKSx0aGlzW18weDU3NDQoJzB4NjM1JyldPU9iamVjdFtfMHg1NzQ0KCcweDU4JyldKG51bGwpLHRoaXNbXzB4NTc0NCgnMHgzOWInKV09T2JqZWN0W18weDU3NDQoJzB4NTgnKV0obnVsbCksdGhpc1snX251bWJlck9mQ292ZXJlZFJhbmdlcyddPTB4MDt9fXJldHVybiBfMHg0OGVkNjJbXzB4NTc0NCgnMHgxMGQnKV1bXzB4NTc0NCgnMHg1Y2QnKV09ZnVuY3Rpb24oXzB4NDhlZDYyLF8weDEzNmEwYyl7dmFyIF8weDIwOTk1Yz0weDIwMDAsXzB4NWJkMzlkPV8weDQxM2UwN1tfMHg1NzQ0KCcweDExNCcpXShfMHgxMzZhMGMpLF8weDE1ZjNiNj10aGlzW18weDU3NDQoJzB4MTE1JyldW18weDViZDM5ZF07XzB4MTVmM2I2fHwoXzB4MTVmM2I2PXRoaXNbXzB4NTc0NCgnMHgxMTUnKV1bXzB4NWJkMzlkXT1bXSk7dmFyIF8weDIzM2I0OD1fMHg0OGVkNjJbJ2xlbmd0aCddPl8weDIwOTk1Yz8nLi4uJzonJztfMHg0OGVkNjI9XzB4NDhlZDYyWydzdWJzdHInXSgweDAsXzB4MjA5OTVjKSxfMHgxNWYzYjZbXzB4NTc0NCgnMHgyOScpXShfMHg0OGVkNjIrXzB4MjMzYjQ4KTt9LF8weDQ4ZWQ2MltfMHg1NzQ0KCcweDEwZCcpXVtfMHg1NzQ0KCcweDJhNycpXT1mdW5jdGlvbigpe2lmKF8weDU3NDQoJzB4NjM2Jyk9PT0nVUNDVkwnKXtyZXR1cm4gdGhpc1snX3JhbmdlcyddO31lbHNle3JldHVybiBfMHgyMDk5NWNbXzB4NTc0NCgnMHgyZjUnKV0/XzB4MjA5OTVjW18weDU3NDQoJzB4MmY1JyldKHsnZGVwdGgnOjB4NSwnbWF4QXJyYXlMZW5ndGgnOjB4MjcxMCwnYnJlYWtMZW5ndGgnOjB4Yzh9LF8weDQ4ZWQ2Mik6XzB4MjA5OTVjW18weDU3NDQoJzB4MmM5JyldKF8weDQ4ZWQ2Mik7fX0sXzB4NDhlZDYyWydwcm90b3R5cGUnXVtfMHg1NzQ0KCcweDYzNycpXT1mdW5jdGlvbigpe3JldHVybiB0aGlzW18weDU3NDQoJzB4NjM4JyldWydjb3ZlcmFibGUnXTt9LF8weDQ4ZWQ2MltfMHg1NzQ0KCcweDEwZCcpXVtfMHg1NzQ0KCcweDViNycpXT1mdW5jdGlvbigpe3RoaXNbJ19pbnN0cnVtZW50ZWRCeVRlc3RpbmdGcmFtZXdvcmsnXT0hMHgwO30sXzB4NDhlZDYyW18weDU3NDQoJzB4MTBkJyldW18weDU3NDQoJzB4NWYxJyldPWZ1bmN0aW9uKCl7aWYoXzB4NTc0NCgnMHg2MzknKT09PV8weDU3NDQoJzB4NjNhJykpe3ZhciBfMHgyZDZkYjk9T2JqZWN0W18weDU3NDQoJzB4NTgnKV0obnVsbCk7XzB4MmQ2ZGI5W18weDQ4ZWQ2MlsncGF0aCddKCldPV8weDQ4ZWQ2MltfMHg1NzQ0KCcweDQ0YicpXSgpLHRoaXNbXzB4NTc0NCgnMHhiYicpXShfMHgyZDZkYjkpO31lbHNle3ZhciBfMHg0OGVkNjI9X1tfMHg1NzQ0KCcweDc5JyldKHt9LHRoaXNbJ19uZXdSYW5nZXMnXSx0aGlzW18weDU3NDQoJzB4NjMzJyldLHRoaXNbXzB4NTc0NCgnMHg2MzQnKV0pLF8weDEzNmEwYz10aGlzW18weDU3NDQoJzB4NjNiJyldLF8weDIwOTk1Yz10aGlzW18weDU3NDQoJzB4NjI0JyldO2lmKGRlbGV0ZSB0aGlzWydfYWxsUmFuZ2VzUmVjZWl2ZWQnXSxkZWxldGUgdGhpc1tfMHg1NzQ0KCcweDYyNCcpXSxfWydlYWNoJ10odGhpc1tfMHg1NzQ0KCcweDYzNCcpXSxmdW5jdGlvbihfMHg0OGVkNjIpe2lmKF8weDU3NDQoJzB4NjNjJykhPT0nWm5PVVknKXt2YXIgXzB4MWU3NTFkPV8weDIwOTk1Y1tfMHg1NzQ0KCcweDMxZCcpXShfMHg0OGVkNjJbXzB4NTc0NCgnMHg0OGQnKV0oKSk7aWYoXzB4MWU3NTFkKXtfMHg0OGVkNjJbXzB4NTc0NCgnMHg4ZCcpXShfMHgxZTc1MWQpO3ZhciBfMHgzMDU1ZWI9XzB4MWU3NTFkW18weDU3NDQoJzB4OGUnKV0oXzB4NDhlZDYyW18weDU3NDQoJzB4OGYnKV0oKSk7bnVsbCE9XzB4MzA1NWViJiYoXzB4NDhlZDYyW18weDU3NDQoJzB4OTAnKV0oXzB4MzA1NWViKSxfMHgzMDU1ZWJbXzB4NTc0NCgnMHg0MWEnKV0oXzB4MTM2YTBjKSk7fX1lbHNle3JldHVybiBfMHg0OGVkNjJbXzB4NTc0NCgnMHgzMzUnKV0oKTt9fSksdGhpc1tfMHg1NzQ0KCcweDYzMicpXT1PYmplY3RbXzB4NTc0NCgnMHg1OCcpXShudWxsKSx0aGlzWydfYWZmZWN0ZWRSYW5nZXMnXT1PYmplY3RbXzB4NTc0NCgnMHg1OCcpXShudWxsKSx0aGlzW18weDU3NDQoJzB4NjM0JyldPU9iamVjdFtfMHg1NzQ0KCcweDU4JyldKG51bGwpLHRoaXNbXzB4NTc0NCgnMHgzOWEnKV0pe2lmKCduZUd5SSchPT1fMHg1NzQ0KCcweDYzZCcpKXt2YXIgXzB4NDEzZTA3PV8weDIwOTk1Yz90aGlzW18weDU3NDQoJzB4MzlhJyldW18weDU3NDQoJzB4MjU2JyldKF9bXzB4NTc0NCgnMHgxOWYnKV0odGhpc1tfMHg1NzQ0KCcweDQ1ZicpXSksITB4MCwhMHgwKTp0aGlzW18weDU3NDQoJzB4MzlhJyldWyd1cGRhdGUnXShfMHg0OGVkNjIsXzB4MTM2YTBjLCEweDEpO3JldHVybiBfMHg0MTNlMDdbJ2Z1bGxVcGRhdGUnXT1fMHgyMDk5NWMsXzB4NDEzZTA3O31lbHNle18weDEzNmEwY1tfMHg1NzQ0KCcweDU5YycpXSgweGM4LHsnQ29udGVudC1UeXBlJzpfMHg1NzQ0KCcweDU5ZCcpfSksXzB4MTM2YTBjWyd3cml0ZSddKGQpLF8weDEzNmEwY1tfMHg1NzQ0KCcweDNlJyldKCk7fX19fSxfMHg0OGVkNjJbXzB4NTc0NCgnMHgxMGQnKV1bXzB4NTc0NCgnMHg0NGInKV09ZnVuY3Rpb24oKXtpZih0aGlzW18weDU3NDQoJzB4MzlhJyldKXt2YXIgXzB4NDhlZDYyPXRoaXNbXzB4NTc0NCgnMHgzOWEnKV1bXzB4NTc0NCgnMHg0NGInKV0oKTtyZXR1cm4gXzB4NDhlZDYyJiYoXzB4NDhlZDYyWydjb3ZlcmFnZSddPXsndmFsdWUnOnRoaXNbJ2NvdmVyYWdlJ10oKX0pLF8weDQ4ZWQ2Mjt9fSxfMHg0OGVkNjJbJ3Byb3RvdHlwZSddW18weDU3NDQoJzB4MjE0JyldPWZ1bmN0aW9uKCl7dGhpc1tfMHg1NzQ0KCcweDM5YScpXXx8KHRoaXNbJ19kb2N1bWVudEluRWRpdG9yJ109bmV3IF8weDViZDM5ZCgpLHRoaXNbXzB4NTc0NCgnMHgzOWEnKV1bJ3VwZGF0ZSddKF9bXzB4NTc0NCgnMHgxOWYnKV0odGhpc1tfMHg1NzQ0KCcweDQ1ZicpXSksITB4MSwhMHgwKSk7fSxfMHg0OGVkNjJbJ3Byb3RvdHlwZSddW18weDU3NDQoJzB4MmJiJyldPWZ1bmN0aW9uKCl7ZGVsZXRlIHRoaXNbJ19kb2N1bWVudEluRWRpdG9yJ107fSxfMHg0OGVkNjJbXzB4NTc0NCgnMHgxMGQnKV1bXzB4NTc0NCgnMHgzODMnKV09ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc1tfMHg1NzQ0KCcweDM5YScpXTt9LF8weDQ4ZWQ2MltfMHg1NzQ0KCcweDEwZCcpXVtfMHg1NzQ0KCcweDM5MScpXT1mdW5jdGlvbihfMHg0OGVkNjIsXzB4MTM2YTBjLF8weDIwOTk1Yyl7aWYoXzB4NTc0NCgnMHg2M2UnKSE9PV8weDU3NDQoJzB4NjNmJykpe3RoaXNbXzB4NTc0NCgnMHgzOWEnKV0mJnRoaXNbXzB4NTc0NCgnMHgzOWEnKV1bXzB4NTc0NCgnMHg0NTInKV0oXzB4NDhlZDYyLF8weDEzNmEwYyxfMHgyMDk5NWMpO31lbHNle3ZhciBfMHgzNDEwYjU9dGhpcztyZXR1cm4gXzB4MzQxMGI1W18weDU3NDQoJzB4YycpXVtfMHg1NzQ0KCcweDNkJyldKF8weDM0MTBiNVtfMHg1NzQ0KCcweDEwYicpXVtfMHg1NzQ0KCcweDFjOScpXSgpKTt9fSxfMHg0OGVkNjJbXzB4NTc0NCgnMHgxMGQnKV1bXzB4NTc0NCgnMHg2NDAnKV09ZnVuY3Rpb24oXzB4NDhlZDYyKXtpZignekVOdmknIT09XzB4NTc0NCgnMHg2NDEnKSl7dGhpc1tfMHg1NzQ0KCcweOKAizM5YScpXSYmdGhpc1tfMHg1NzQ0KCcweDM5YScpXVtfMHg1NzQ0KCcweDQ1MScpXShfMHg0OGVkNjIpO31lbHNle3ZhciBfMHgyMjFiZmU9dGhpcztfW18weDU3NDQoJzB4ZDQnKV0odGhpc1snX2Nvbm5lY3Rpb25zJ10sZnVuY3Rpb24oXzB4MzcxZTk5KXtfMHgzNzFlOTlbXzB4NTc0NCgnMHg2NDInKV0mJl8weDIyMWJmZVtfMHg1NzQ0KCcweDExZScpXShfW18weDU3NDQoJzB4MTY2JyldKF8weDQ4ZWQ2MlsnZmlsZXMnXSxmdW5jdGlvbihfMHgzNjIwMzMpe3JldHVybnsncGF0aCc6XzB4MzYyMDMzWydwYXRoJ10sJ2lkJzpfMHgzNjIwMzNbJ2lkJ119O30pLF8weDM3MWU5OSk7fSk7fX0sXzB4NDhlZDYyW18weDU3NDQoJzB4MTBkJyldW18weDU3NDQoJzB4Mzk2JyldPWZ1bmN0aW9uKCl7dGhpc1tfMHg1NzQ0KCcweDM5YScpXSYmKHRoaXNbXzB4NTc0NCgnMHg2MjQnKV09ITB4MCk7fSxfMHg0OGVkNjJbXzB4NTc0NCgnMHgxMGQnKV1bXzB4NTc0NCgnMHg2NDMnKV09ZnVuY3Rpb24oKXtyZXR1cm4hdGhpc1snX2ludmFsaWRhdGVEb2N1bWVudCddO30sXzB4NDhlZDYyW18weDU3NDQoJzB4MTBkJyldWydsaW5lVGVzdHMnXT1mdW5jdGlvbihfMHg0OGVkNjIpe3JldHVybiB0aGlzWydfY292ZXJpbmdUZXN0cyddKF8weDQ4ZWQ2Mik7fSxfMHg0OGVkNjJbXzB4NTc0NCgnMHgxMGQnKV1bXzB4NTc0NCgnMHg1N2QnKV09ZnVuY3Rpb24oXzB4NDhlZDYyKXtpZihfMHg1NzQ0KCcweDY0NCcpIT09J3NPTW5LJyl7dSgpO31lbHNle2lmKHRoaXNbJ19kb2N1bWVudEluRWRpdG9yJ10pe3ZhciBfMHgxMzZhMGM9dGhpc1snX2RvY3VtZW50SW5FZGl0b3InXVsnbGluZSddKF8weDQ4ZWQ2Mik7aWYoXzB4MTM2YTBjKXJldHVybiBfMHgxMzZhMGNbXzB4NTc0NCgnMHgyYTcnKV0oKTt9fX0sXzB4NDhlZDYyWydwcm90b3R5cGUnXVsnYnVpbGREaXNwbGF5UmFuZ2VzSWZSZXF1aXJlZCddPWZ1bmN0aW9uKCl7dmFyIF8weDQ4ZWQ2Mj10aGlzO2lmKHRoaXNbJ19uZWVkVG9SZWJ1aWxkRGlzcGxheWFibGVSYW5nZXMnXSl7aWYoXzB4NTc0NCgnMHg2NDUnKSE9PV8weDU3NDQoJzB4NjQ2Jykpe2RlbGV0ZSB0aGlzW18weDU3NDQoJzB4NjQ3JyldO3ZhciBfMHgxMzZhMGM9XzB4MTVmM2I2KHRoaXNbXzB4NTc0NCgnMHhlJyldKCksdGhpc1tfMHg1NzQ0KCcweDU2ZCcpXSh0aGlzW18weDU3NDQoJzB4ZScpXSgpKSk7XzB4MTM2YTBjJiYodGhpc1tfMHg1NzQ0KCcweDY0OCcpXT1fMHgxMzZhMGNbXzB4NTc0NCgnMHg5YScpXSx0aGlzWydfZGlzcGxheVJhbmdlc0xpbmVNYXAnXT17fSxfMHgxMzZhMGNbXzB4NTc0NCgnMHg2NDknKV0oZnVuY3Rpb24oXzB4MTM2YTBjKXt2YXIgXzB4MjA5OTVjPV8weDQ4ZWQ2MltfMHg1NzQ0KCcweDY0YScpXVtfMHgxMzZhMGNbXzB4NTc0NCgnMHgzZCcpXVsnbGluZSddXT1fMHg0OGVkNjJbJ19kaXNwbGF5UmFuZ2VzTGluZU1hcCddW18weDEzNmEwY1tfMHg1NzQ0KCcweDNkJyldW18weDU3NDQoJzB4OGYnKV1dfHxbXTtfMHgyMDk5NWNbXzB4NTc0NCgnMHgyOScpXShfMHgxMzZhMGMpO30pKTt9ZWxzZXtyZXR1cm4gX1snc3RhcnRzV2l0aCddKF8weDQ4ZWQ2MixfMHgxMzZhMGNbXzB4NTc0NCgnMHgxMmYnKV0pO319fSxfMHg0OGVkNjJbXzB4NTc0NCgnMHgxMGQnKV1bXzB4NTc0NCgnMHg1N2UnKV09ZnVuY3Rpb24oXzB4NDhlZDYyKXtpZihfMHg1NzQ0KCcweDY0YicpPT09XzB4NTc0NCgnMHg2NGInKSl7dmFyIF8weDEzNmEwYz10aGlzWydfZGlzcGxheVJhbmdlc0xpbmVNYXAnXSYmdGhpc1tfMHg1NzQ0KCcweDY0YScpXVtfMHg0OGVkNjJbJ3N0YXJ0TGluZSddKCldO2lmKCFfMHgxMzZhMGMpcmV0dXJuW18weDQ4ZWQ2Mlsnc3RhcnRMaW5lJ10oKSxfMHg0OGVkNjJbXzB4NTc0NCgnMHgxYjEnKV0oKSxfMHg0OGVkNjJbJ2VuZExpbmUnXSgpLF8weDQ4ZWQ2MltfMHg1NzQ0KCcweDQxOCcpXSgpXTt2YXIgXzB4MjA5OTVjPTB4MT09PV8weDEzNmEwY1snbGVuZ3RoJ10/XzB4MTM2YTBjWzB4MF06XzB4MTM2YTBjW18weDU3NDQoJzB4MTJlJyldKGZ1bmN0aW9uKF8weDEzNmEwYyl7aWYoXzB4NTc0NCgnMHg2NGMnKSE9PV8weDU3NDQoJzB4NjRkJykpe3JldHVybiBfMHgxMzZhMGNbXzB4NTc0NCgnMHgzZCcpXVsnY29sdW1uJ109PT1fMHg0OGVkNjJbXzB4NTc0NCgnMHgxYjEnKV0oKTt9ZWxzZXtfMHgxMzZhMGNbJ3JlY3ljbGVXb3JrZXInXShfMHgyMDk5NWMpO319KTtyZXR1cm4gXzB4MjA5OTVjP1tfMHgyMDk5NWNbXzB4NTc0NCgnMHgzZCcpXVtfMHg1NzQ0KCcweDhmJyldLF8weDIwOTk1Y1tfMHg1NzQ0KCcweDNkJyldWydjb2x1bW4nXSxfMHgyMDk5NWNbXzB4NTc0NCgnMHgzZScpXVtfMHg1NzQ0KCcweDhmJyldLF8weDIwOTk1Y1tfMHg1NzQ0KCcweDNlJyldW18weDU3NDQoJzB4MzU2JyldXTpbXzB4NDhlZDYyWydzdGFydExpbmUnXSgpLF8weDQ4ZWQ2MltfMHg1NzQ0KCcweDFiMScpXSgpLF8weDQ4ZWQ2MltfMHg1NzQ0KCcweDQxNycpXSgpLF8weDQ4ZWQ2MltfMHg1NzQ0KCcweDQxOCcpXSgpXTt9ZWxzZXtyZXR1cm4gXzB4NDhlZDYyJiZfMHg0OGVkNjJbXzB4NTc0NCgnMHgxYjAnKV0mJl8weDQ4ZWQ2MltfMHg1NzQ0KCcweDFiMCcpXSgpKyc6JytfMHg0OGVkNjJbXzB4NTc0NCgnMHgxYjEnKV0oKXx8dm9pZCAweDA7fX0sXzB4NDhlZDYyW18weDU3NDQoJzB4MTBkJyldW18weDU3NDQoJzB4NDM1JyldPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbXzB4NTc0NCgnMHgyNzgnKV0oKTt9LF8weDQ4ZWQ2MlsncHJvdG90eXBlJ11bXzB4NTc0NCgnMHgzNGUnKV09ZnVuY3Rpb24oXzB4NDhlZDYyLF8weDEzNmEwYyl7cmV0dXJuIF9bXzB4NTc0NCgnMHhiMScpXSh0aGlzWydfY292ZXJpbmdUZXN0cyddKF8weDQ4ZWQ2MixfMHgxMzZhMGMpKVtfMHg1NzQ0KCcweDQ2NScpXShmdW5jdGlvbihfMHg0OGVkNjIpe3JldHVybiFfMHg0OGVkNjJbXzB4NTc0NCgnMHgzNTMnKV0oKTt9KVsnc29ydEJ5J10oZnVuY3Rpb24oXzB4NDhlZDYyKXtpZihfMHg1NzQ0KCcweDY0ZScpIT09XzB4NTc0NCgnMHg2NGUnKSl7XzB4MTVmM2I2W18weDU3NDQoJzB4NjRmJyldJiZfMHgxNWYzYjZbXzB4NTc0NCgnMHg2NGYnKV0oXzB4MTVmM2I2WydfY3JlYXRlUnVuUmVzdWx0J10odGhpcykpO31lbHNle3JldHVybi1fMHg0OGVkNjJbJ3RzJ10oKTt9fSlbXzB4NTc0NCgnMHhlMycpXSgpO30sXzB4NDhlZDYyW18weDU3NDQoJzB4MTBkJyldW18weDU3NDQoJzB4Mjc4JyldPWZ1bmN0aW9uKF8weDQ4ZWQ2MixfMHgxMzZhMGMpe2lmKF8weDU3NDQoJzB4NjUwJyk9PT0nRGthZ08nKXt2YXIgXzB4MjA5OTVjO2lmKF8weDQ4ZWQ2Mil7aWYoIXRoaXNbXzB4NTc0NCgnMHgzOWEnKV0pcmV0dXJuW107aWYoXzB4MjA5OTVjPXRoaXNbXzB4NTc0NCgnMHgzOWEnKV1bXzB4NTc0NCgnMHg4ZicpXShfMHg0OGVkNjIpLCFfMHgyMDk5NWMpcmV0dXJuW107fXZhciBfMHg0MTNlMDc9XzB4MjA5OTVjP18weDIwOTk1Y1tfMHg1NzQ0KCcweDJhNycpXSgpOnRoaXNbXzB4NTc0NCgnMHg0NWYnKV07cmV0dXJuIF8weDEzNmEwYyYmKF8weDQxM2UwNz1fW18weDU3NDQoJzB4MTY1JyldKF8weDQxM2UwNyxfMHgxMzZhMGMpKSxfW18weDU3NDQoJzB4OTInKV0oXzB4NDEzZTA3LGZ1bmN0aW9uKF8weDQ4ZWQ2MixfMHgxMzZhMGMpe2lmKF8weDU3NDQoJzB4NjUxJykhPT1fMHg1NzQ0KCcweDY1MScpKXtfMHgxMzZhMGNbXzB4NTc0NCgnMHg2MjgnKV1bXzB4NTc0NCgnMHg2NTInKV0oXzB4NDhlZDYyLGZ1bmN0aW9uKF8weDI4OTIyMCl7XzB4MjA5OTVjKF8weDI4OTIyMCk7fSk7fWVsc2V7cmV0dXJuIF9bXzB4NTc0NCgnMHhkNCcpXShfMHgxMzZhMGNbXzB4NTc0NCgnMHg0MzUnKV0oKSxmdW5jdGlvbihfMHgxMzZhMGMpe18weDQ4ZWQ2MltfMHgxMzZhMGNbXzB4NTc0NCgnMHgxZDEnKV0oKV09XzB4MTM2YTBjO30pLF8weDQ4ZWQ2Mjt9fSx7fSk7fWVsc2V7cmV0dXJuIHRoaXNbXzB4NTc0NCgnMHg0MWUnKV07fX0sXzB4NDhlZDYyW18weDU3NDQoJzB4MTBkJyldW18weDU3NDQoJzB4MzM1JyldPWZ1bmN0aW9uKCl7aWYoJ09NbmZLJz09PV8weDU3NDQoJzB4NjUzJykpe3JldHVybiBfMHgyMDk5NWNbXzB4NTc0NCgnMHhjJyldW18weDU3NDQoJzB4MTMwJyldKCk/UVtfMHg1NzQ0KCcweDFiNycpXSh7J3J1bkNhbmNlbGxlZCc6ITB4MH0pOihfMHgxNWYzYjYoXzB4NTc0NCgnMHgxMjQnKSxfMHg1YmQzOWQpLF8weDIwOTk1Y1tfMHg1NzQ0KCcweGMnKV1bXzB4NTc0NCgnMHgxMjInKV0oXzB4MTM2YTBjKSk7fWVsc2V7ZGVsZXRlIHRoaXNbJ19kb2N1bWVudEluRWRpdG9yJ10sX1tfMHg1NzQ0KCcweGQ0JyldKHRoaXNbXzB4NTc0NCgnMHg0NWYnKV0sZnVuY3Rpb24oXzB4NDhlZDYyKXtpZihfMHg1NzQ0KCcweDY1NCcpIT09J1NwTnhUJyl7dmFyIF8weDQyMjllMD1uZXcgdShfMHg1YmQzOWQpO18weDQyMjllMFtfMHg1NzQ0KCcweDQwNicpXShudWxsLF8weDQ4ZWQ2MlsndHMnXSxmdW5jdGlvbihfMHgzOGFmMDYpe18weDQxM2UwN1tfMHgzOGFmMDZbJ2lkJ10oKV09XzB4MzhhZjA2LF8weDEzNmEwYyE9PSEweDEmJihfMHgxMzZhMGM/XzB4MTM2YTBjWydpc0ZhaWxpbmcnXSgpfHwoXzB4MTM2YTBjPSEhXzB4MzhhZjA2W18weDU3NDQoJzB4MzUzJyldKCkmJl8weDM4YWYwNik6XzB4MTM2YTBjPV8weDM4YWYwNik7fSxmdW5jdGlvbihfMHg0OTc4YTMpe3JldHVybiBfMHg0OTc4YTNbJ3NldEZpbGUnXShfMHgyMDk5NWNbXzB4NTc0NCgnMHgzMWQnKV0oXzB4NDk3OGEzW18weDU3NDQoJzB4NDhkJyldKCkpKTt9KTt9ZWxzZXtyZXR1cm4gXzB4NDhlZDYyW18weDU3NDQoJzB4MzM1JyldKCk7fX0pLGRlbGV0ZSB0aGlzW18weDU3NDQoJzB4NDVmJyldLGRlbGV0ZSB0aGlzW18weDU3NDQoJzB4MzliJyldO319LF8weDQ4ZWQ2MltfMHg1NzQ0KCcweDEwZCcpXVtfMHg1NzQ0KCcweDViMycpXT1mdW5jdGlvbihfMHg0OGVkNjIpe2lmKCd4QlVOaSc9PT1fMHg1NzQ0KCcweDY1NScpKXt2YXIgXzB4NGVmZGFhPXRoaXNbXzB4NTc0NCgnMHgyNzEnKV1bXzB4NDhlZDYyXTtpZihfMHg0ZWZkYWEpcmV0dXJuIF8weDRlZmRhYVsnaWQnXTt9ZWxzZXtyZXR1cm4gdGhpc1tfMHg1NzQ0KCcweDExNScpXVtfMHg0OGVkNjJbXzB4NTc0NCgnMHgxZDEnKV0oKV07fX0sXzB4NDhlZDYyW18weDU3NDQoJzB4MTBkJyldW18weDU3NDQoJzB4NWI1JyldPWZ1bmN0aW9uKCl7aWYoXzB4NTc0NCgnMHg2NTYnKT09PV8weDU3NDQoJzB4NjU3Jykpe3ZhciBfMHgyNDNjOTc7cmV0dXJuIF8weDViZDM5ZCh0aGlzLGZ1bmN0aW9uKF8weDE5ZmEyMil7c3dpdGNoKF8weDE5ZmEyMltfMHg1NzQ0KCcweGVkJyldKXtjYXNlIDB4MDpyZXR1cm5bMHg0LHRoaXNbJ193b3JrZXJQb29sJ11bXzB4NTc0NCgnMHgzZCcpXSh0aGlzW18weDU3NDQoJzB4MTBiJyldWyd3ZWJBcHAnXSgpKV07Y2FzZSAweDE6cmV0dXJuIF8weDI0M2M5Nz1fMHgxOWZhMjJbXzB4NTc0NCgnMHgxMGUnKV0oKSx0aGlzWydfd29ya2VyUG9vbCddW18weDU3NDQoJzB4MTBmJyldKHRoaXNbJ19icm93c2VyRW52aXJvbm1lbnQnXVsnc2FuZGJveFJvb3RVcmwnXSgpKSxbMHgyLF8weDI0M2M5N107fX0pO31lbHNle3RoaXNbXzB4NTc0NCgnMHgxMTUnKV09T2JqZWN0W18weDU3NDQoJzB4NTgnKV0obnVsbCk7fX0sXzB4NDhlZDYyW18weDU3NDQoJzB4MTBkJyldW18weDU3NDQoJzB4MWQxJyldPWZ1bmN0aW9uKCl7aWYoXzB4NTc0NCgnMHg2NTgnKT09PSdYbFNNdicpe3JldHVybiB0aGlzWydfZGF0YSddWydpZCddO31lbHNle3ZhciBfMHg1NjMwMjU9XzB4NWJkMzlkW18weDU3NDQoJzB4NTliJyldKClbJ29uY2UnXShfMHg1NzQ0KCcweDdjJyksZnVuY3Rpb24oXzB4MWI4MWM2KXtyZXR1cm4gXzB4MjA5OTVjKF8weDFiODFjNiYmXzB4NTc0NCgnMHgxNzYnKT09PV8weDFiODFjNltfMHg1NzQ0KCcweDYwNScpXT9fMHg0OGVkNjI6MHgwKTt9KVtfMHg1NzQ0KCcweDU5ZScpXShfMHg1NzQ0KCcweDYxOCcpLGZ1bmN0aW9uKCl7cmV0dXJuIF8weDU2MzAyNVsnb25jZSddKF8weDU3NDQoJzB4MjMwJyksZnVuY3Rpb24oKXtyZXR1cm4gXzB4MjA5OTVjKF8weDQ4ZWQ2Mik7fSlbJ2Nsb3NlJ10oKTt9KVtfMHg1NzQ0KCcweDU5ZicpXShfMHg0OGVkNjIsXzB4MTM2YTBjKTt9fSxfMHg0OGVkNjJbXzB4NTc0NCgnMHgxMGQnKV1bJ3BhdGgnXT1mdW5jdGlvbigpe2lmKF8weDU3NDQoJzB4NjU5JykhPT1fMHg1NzQ0KCcweDY1OScpKXtsKCksXzB4MTVmM2I2KGMpO31lbHNle3JldHVybiB0aGlzW18weDU3NDQoJzB4NjM4JyldW18weDU3NDQoJzB4ZScpXTt9fSxfMHg0OGVkNjJbJ3Byb3RvdHlwZSddW18weDU3NDQoJzB4NWQxJyldPWZ1bmN0aW9uKF8weDQ4ZWQ2Mil7dmFyIF8weDEzNmEwYz1PYmplY3RbXzB4NTc0NCgnMHg1OCcpXShudWxsKSxfMHgyMDk5NWM9dGhpc1tfMHg1NzQ0KCcweDM5YicpXVtfMHg0OGVkNjJbXzB44oCLNTc0NCgnMHgxZDEnKV0oKV07cmV0dXJuIF8weDIwOTk1YyYmX1snZWFjaCddKF8weDIwOTk1Y1tfMHg1NzQ0KCcweDRhOScpXSgpLGZ1bmN0aW9uKF8weDQ4ZWQ2Mil7XzB4MTM2YTBjW18weDQ4ZWQ2MltfMHg1NzQ0KCcweDFkMScpXSgpXT1fMHg0OGVkNjI7fSksdGhpc1tfMHg1NzQ0KCcweDM5YicpXVtfMHg0OGVkNjJbXzB4NTc0NCgnMHgxZDEnKV0oKV09XzB4NDhlZDYyLF8weDQ4ZWQ2Mlsnc2V0VGVzdEZpbGUnXSh0aGlzKSxfMHgxMzZhMGM7fSxfMHg0OGVkNjJbXzB4NTc0NCgnMHgxMGQnKV1bXzB4NTc0NCgnMHg2NWEnKV09ZnVuY3Rpb24oXzB4NDhlZDYyLF8weDEzNmEwYyl7dGhpc1tfMHg1NzQ0KCcweDYzMycpXVtfMHg0OGVkNjJbXzB4NTc0NCgnMHgxZDEnKV0oKV09XzB4NDhlZDYyO3ZhciBfMHgyMDk5NWM9XzB4NDhlZDYyW18weDU3NDQoJzB4NDEnKV0oKTtfMHgxMzZhMGMhPT1fMHgyMDk5NWMmJih0aGlzW18weDU3NDQoJzB4M2RmJyldKz1fMHgyMDk5NWM/MHgxOi0weDEpO30sXzB4NDhlZDYyW18weDU3NDQoJzB4MTBkJyldW18weDU3NDQoJzB4MzgwJyldPWZ1bmN0aW9uKCl7aWYoXzB4NTc0NCgnMHg2NWInKSE9PV8weDU3NDQoJzB4NjViJykpe3ZhciBfMHgzMjgzNzE9Z2xvYmFsW18weDU3NDQoJzB4NjVjJyldPWdsb2JhbFtfMHg1NzQ0KCcweDY1YycpXXx8XzB4NDhlZDYyKF8weDU3NDQoJzB4NmYnKSksXzB4MWNjNGRmPV8weDEzNmEwY1tfMHg1NzQ0KCcweDZmJyldO2lmKCFfMHgxY2M0ZGYpcmV0dXJuO2lmKDB4MD09PV8weDFjYzRkZlsnaW5kZXhPZiddKCdkYXRhOicpKXJldHVybjtpZih+XzB4MWNjNGRmW18weDU3NDQoJzB4NzAnKV0oXzB4NTc0NCgnMHgxNzInKSkpcmV0dXJuO3ZhciBfMHgyZThmMWY9XzB4MzI4MzcxWydwYXJzZSddKF8weDEzNmEwY1tfMHg1NzQ0KCcweDZmJyldKSxfMHg0Mjg1ZTk9Jy8nPT09XzB4MmU4ZjFmWydwYXRobmFtZSddW18weDU3NDQoJzB4NjVkJyldKDB4MCk/XzB4MmU4ZjFmW18weDU3NDQoJzB4NjVlJyldW18weDU3NDQoJzB4MTE3JyldKDB4MSk6XzB4MmU4ZjFmW18weDU3NDQoJzB4NjVlJyldLF8weGY0ODU1Yj1fMHg0Mjg1ZTkmJl8weDQxM2UwN1tfMHg0Mjg1ZTldO2lmKCFfMHhmNDg1NWIpcmV0dXJuO3ZhciBfMHg1YjVjMmY9XzB4MmU4ZjFmWydzZWFyY2gnXSYmXzB4MmU4ZjFmW18weDU3NDQoJzB4NjVmJyldW18weDU3NDQoJzB4OWEnKV07XzB4MjA5OTVjW18weDU3NDQoJzB4NjYwJyldKF8weDFjYzRkZisoXzB4NWI1YzJmPycmJzonPycpK18weGY0ODU1YlsndHMnXSsnJndhbGxhYnlGaWxlSWQ9JytfMHhmNDg1NWJbJ2lkJ10pLGxbXzB4NTc0NCgnMHgxN2QnKV0oKTt9ZWxzZXtyZXR1cm4gdGhpc1tfMHg1NzQ0KCcweDYzOCcpXVtfMHg1NzQ0KCcweDM5ZCcpXTt9fSxfMHg0OGVkNjJbXzB4NTc0NCgnMHgxMGQnKV1bXzB4NTc0NCgnMHg0N2YnKV09ZnVuY3Rpb24oKXtpZignc0hBakwnIT09XzB4NTc0NCgnMHg2NjEnKSl7dHJ5e18weDIwOTk1Y1snaWQnXT9fMHgxMzZhMGNbJ19yZXNwb25zZVdpdGhDb3JyZWxhdGlvbklkJ10oXzB4MjA5OTVjKTpfMHg1NzQ0KCcweDE4YScpPT09XzB4MjA5OTVjWyd0eXBlJ10/XzB4NDhlZDYyKF8weDEzNmEwY1tfMHg1NzQ0KCcweDE3ZScpXSk6XzB4NTc0NCgnMHg3YycpPT09XzB4MjA5OTVjW18weDU3NDQoJzB4NCcpXSYmXzB4MTM2YTBjW18weDU3NDQoJzB4MTc0JyldKF8weDIwOTk1Y1snZXJyb3InXSk7fWNhdGNoKF8weDVjYzZiYSl7XzB4MTM2YTBjW18weDU3NDQoJzB4MTc0JyldKF8weDVjYzZiYSk7fX1lbHNle2lmKHRoaXNbXzB4NTc0NCgnMHg0NGEnKV0oKSl7aWYoXzB4NTc0NCgnMHg2NjInKT09PV8weDU3NDQoJzB4NjYzJykpe3ZhciBfMHgyNzI0ZjE9dGhpcyxfMHgxMDU1Y2Q9T2JqZWN0W18weDU3NDQoJzB4NTgnKV0obnVsbCk7dGhpc1tfMHg1NzQ0KCcweDU2YycpXT10aGlzW18weDU3NDQoJzB4NTZjJyldfHxfWydzaXplJ10odGhpc1tfMHg1NzQ0KCcweDQxZScpXSkhPT1fMHg0OGVkNjJbXzB4NTc0NCgnMHg5YScpXSxfWydlYWNoJ10odGhpc1tfMHg1NzQ0KCcweDQxZScpXSxmdW5jdGlvbihfMHgxZmUwOTUpe19bXzB4NTc0NCgnMHhkNCcpXShfMHgxZmUwOTVbXzB4NTc0NCgnMHg0ZScpXSgpLGZ1bmN0aW9uKF8weDI3MjRmMSl7dmFyIF8weDEwNTVjZD1fMHgyNzI0ZjFbXzB4NTc0NCgnMHgyYmQnKV0oKTtfMHgxMDU1Y2QmJl8weDEwNTVjZFtfMHg1NzQ0KCcweDQxZicpXSYmXzB4MTA1NWNkWydub3RGYWlscyddKF8weDFmZTA5NSk7fSk7fSksX1tfMHg1NzQ0KCcweGQ0JyldKF8weDQ4ZWQ2MixmdW5jdGlvbihfMHg0ODdjMjEpe3ZhciBfMHhlMWU5Mzk9XzB4NDg3YzIxW18weDU3NDQoJzB4MWQxJyldKCk7ZGVsZXRlIF8weDI3MjRmMVtfMHg1NzQ0KCcweDQxZScpXVtfMHhlMWU5MzldLF8weDEwNTVjZFtfMHhlMWU5MzldPV8weDQ4N2MyMTt9KSx0aGlzW18weDU3NDQoJzB4NTZjJyldPXRoaXNbJ19jaGFuZ2VkJ118fCFfW18weDU3NDQoJzB4MTFkJyldKHRoaXNbXzB4NTc0NCgnMHg0MWUnKV0pLHRoaXNbXzB4NTc0NCgnMHg0MWUnKV09XzB4MTA1NWNkO31lbHNle3ZhciBfMHg0OGVkNjI9dGhpc1tfMHg1NzQ0KCcweDNkZCcpXSghMHgwKTtyZXR1cm4gTWF0aFsncm91bmQnXSgweDI3MTAqdGhpc1snX251bWJlck9mQ292ZXJlZFJhbmdlcyddL18weDQ4ZWQ2MikvMHg2NDt9fX19LF8weDQ4ZWQ2MltfMHg1NzQ0KCcweDEwZCcpXVtfMHg1NzQ0KCcweDQ0YScpXT1mdW5jdGlvbigpe3JldHVybiF0aGlzWydpc1Rlc3RGaWxlJ10oKSYmdGhpc1tfMHg1NzQ0KCcweDYzNycpXSgpJiYhdGhpc1tfMHg1NzQ0KCcweDVkZCcpXTt9LF8weDQ4ZWQ2MlsncHJvdG90eXBlJ11bXzB4NTc0NCgnMHg2NjQnKV09ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc1snaXNUZXN0RmlsZSddKCl8fHRoaXNbXzB4NTc0NCgnMHg0NGEnKV0oKTt9LF8weDQ4ZWQ2MlsncHJvdG90eXBlJ11bXzB4NTc0NCgnMHg1ZjcnKV09ZnVuY3Rpb24oKXtpZignYmdKb2onIT09J2JnSm9qJyl7dmFyIF8weDNlNWFhOT10aGlzO18weDNlNWFhOVtfMHg1NzQ0KCcweDRkJyldPV8weDQ4ZWQ2MixfMHgzZTVhYTlbJ19vcHRzJ109XzB4NDhlZDYyW18weDU3NDQoJzB4NjAnKV0oKSxfMHgzZTVhYTlbXzB4NTc0NCgnMHgzMGQnKV09XzB4MTM2YTBjLHByb2Nlc3NbXzB4NTc0NCgnMHg2NycpXVtfMHg1NzQ0KCcweDEzZicpXSYmKF8weDNlNWFhOVtfMHg1NzQ0KCcweGZiJyldPWZ1bmN0aW9uKF8weDIxMDNlMil7dmFyIF8weDNlNWFhOT1fW18weDU3NDQoJzB4NzknKV0oe30sXzB4MjEwM2UyKTtfMHg0OGVkNjJbXzB4NTc0NCgnMHg2NjUnKV0oXzB4M2U1YWE5KSxfMHg0OGVkNjJbJ19lbWl0SW50ZXJuYWwnXSh7J3R5cGUnOl8weDU3NDQoJzB4NWMyJyksJ2RhdGEnOl8weDNlNWFhOX0pO30sXzB4M2U1YWE5W18weDU3NDQoJzB4NjRmJyldPWZ1bmN0aW9uKF8weDIyMDliMyl7fSksXzB4M2U1YWE5W18weDU3NDQoJzB4NjY2JyldPXt9LF8weDNlNWFhOVsnX2V4ZWN1dGVkVGVzdE51bWJlciddPTB4MCxfMHgzZTVhYTlbXzB4NTc0NCgnMHgzMGInKV09e30sXzB4M2U1YWE5W18weDU3NDQoJzB4NjY3JyldPXt9LF8weDNlNWFhOVtfMHg1NzQ0KCcweDY2OCcpXT17fSxfMHgzZTVhYTlbXzB4NTc0NCgnMHg2NjknKV0oKTtmb3IodmFyIF8weDRkNjQyZj0weDA7XzB4NGQ2NDJmPE1hdGhbXzB4NTc0NCgnMHgzZWQnKV0oXzB4M2U1YWE5W18weDU3NDQoJzB4NjZhJyldLF8weDNlNWFhOVtfMHg1NzQ0KCcweDY2YicpXSk7XzB4NGQ2NDJmKyspXzB4M2U1YWE5W18weDU3NDQoJzB4MTIyJyldKF8weDRkNjQyZik7XzB4M2U1YWE5W18weDU3NDQoJzB4NjZjJyldPXRoaXNbJ19wcm9qZWN0J11bJ25vcm1hbGl6ZVBhdGgnXShfMHg1YmQzOWRbXzB4NTc0NCgnMHgyMDgnKV0ocHJvY2Vzc1tfMHg1NzQ0KCcweDY2ZCcpXVsnZmlsZW5hbWUnXSkpLF8weDNlNWFhOVtfMHg1NzQ0KCcweDY2ZScpXT10aGlzW18weDU3NDQoJzB4NGQnKV1bXzB4NTc0NCgnMHg1NDAnKV0odGhpc1snX3Byb2plY3QnXVtfMHg1NzQ0KCcweDgxJyldKSxfMHgzZTVhYTlbXzB4NTc0NCgnMHg2NmYnKV09dGhpc1tfMHg1NzQ0KCcweDRkJyldW18weDU3NDQoJzB4NTdiJyldKCk7fWVsc2V7cmV0dXJuIHRoaXNbJ19udW1iZXJPZkNvdmVyZWRSYW5nZXMnXTt9fSxfMHg0OGVkNjJbXzB4NTc0NCgnMHgxMGQnKV1bXzB4NTc0NCgnMHgzZGQnKV09ZnVuY3Rpb24oXzB4NDhlZDYyKXt2YXIgXzB4MTM2YTBjPV9bXzB4NTc0NCgnMHg0MTInKV0odGhpc1tfMHg1NzQ0KCcweDQ1ZicpXSk7cmV0dXJuIDB4MD09PV8weDEzNmEwYyYmdGhpc1tfMHg1NzQ0KCcweDY3MCcpXSYmIXRoaXNbXzB4NTc0NCgnMHg2NzEnKV0/KCFfMHg0OGVkNjImJnRoaXNbXzB4NTc0NCgnMHg1N2MnKV0oKSxfW18weDU3NDQoJzB4OWUnKV0odGhpc1snX29yaWdpbmFsUmFuZ2VDb3VudCddKT90aGlzW18weDU3NDQoJzB4NjQ4JyldOjB4MSk6XzB4MTM2YTBjO30sXzB4NDhlZDYyW18weDU3NDQoJzB4MTBkJyldWyduZWVkVG9SZWJ1aWxkRGlzcGxheWFibGVSYW5nZXMnXT1mdW5jdGlvbigpe3RoaXNbXzB4NTc0NCgnMHg2NDcnKV09ITB4MDt9LF8weDQ4ZWQ2MltfMHg1NzQ0KCcweDEwZCcpXVsnc2V0UmFuZ2VzJ109ZnVuY3Rpb24oXzB4NDhlZDYyLF8weDEzNmEwYyxfMHgyMDk5NWMpe3ZhciBfMHg0MTNlMDc9dGhpczt0aGlzWydfYWxsUmFuZ2VzUmVjZWl2ZWQnXT1fMHgxMzZhMGMsXzB4MTM2YTBjJiYodGhpc1tfMHg1NzQ0KCcweDY0NycpXT0hMHgwLHRoaXNbXzB4NTc0NCgnMHg2NzInKV0oKSk7dmFyIF8weDViZDM5ZD1PYmplY3RbJ2NyZWF0ZSddKG51bGwpO19bXzB4NTc0NCgnMHhkNCcpXShfMHg0OGVkNjIsZnVuY3Rpb24oXzB4NDhlZDYyKXtpZihfMHg1NzQ0KCcweDY3MycpIT09J3ZKdkxOJyl7dmFyIF8weDMxNDE4ZT1uZXcgaChfMHg0OGVkNjIpLF8weDYxZjE0YT1fMHgzMTQxOGVbXzB4NTc0NCgnMHgzZTknKV0oKTtpZigweDAhPT1fMHg2MWYxNGEpe3ZhciBfMHg0MzJiNDk9XzB4NDEzZTA3W18weDYxZjE0YV07XzB4NDMyYjQ5JiZfMHg0MzJiNDlbJ2FkZENvbnNvbGVNZXNzYWdlJ10oXzB4MzE0MThlKTt9dmFyIF8weDFmMmUyNj1fMHgzMTQxOGVbXzB4NTc0NCgnMHg0OGQnKV0oKTtpZihfMHgxZjJlMjYpe3ZhciBfMHg4MjFkYjM9XzB4MjA5OTVjW18weDU3NDQoJzB4MzFkJyldKF8weDFmMmUyNiksXzB4NDdmOTZmPV8weDMxNDE4ZVsncmFuZ2UnXSgpO2lmKF8weDgyMWRiMyYmXzB4NDdmOTZmJiYoXzB4NTc0NCgnMHg1Y2MnKT09PV8weDMxNDE4ZVtfMHg1NzQ0KCcweDQnKV0oKT9fMHgzMTQxOGVbXzB4NTc0NCgnMHgzZTYnKV0oKSYmXzB4MzE0MThlWydleHBlY3RlZCddKCl8fF8weDMxNDE4ZVtfMHg1NzQ0KCcweDNlNScpXSgpP18weDgyMWRiM1tfMHg1NzQ0KCcweDVjZCcpXShfMHg1NzQ0KCcweDY3NCcpLF8weDQ3Zjk2Zik6XzB4ODIxZGIzW18weDU3NDQoJzB4NWNkJyldKF8weDU3NDQoJzB4NWNlJyksXzB4NDdmOTZmKTpfMHg4MjFkYjNbXzB4NTc0NCgnMHg1Y2QnKV0oXzB4MzE0MThlW18weDU3NDQoJzB4M2UzJyldKCksXzB4NDdmOTZmKSxfMHgzMTQxOGVbXzB4NTc0NCgnMHg4ZCcpXShfMHg4MjFkYjMpKSxfMHgzMTQxOGVbXzB4NTc0NCgnMHgxOTgnKV0oKSl7dmFyIF8weDVkZmMyMT1fMHgxNWYzYjZbXzB4MWYyZTI2XT1fMHgxNWYzYjZbXzB4MWYyZTI2XXx8eydmaWxlJzpfMHg4MjFkYjNbXzB4NTc0NCgnMHhlJyldKCksJ21lc3NhZ2VzJzpbXX07XzB4NWRmYzIxW18weDU3NDQoJzB4ZTgnKV1bXzB4NTc0NCgnMHgyOScpXShfMHgzMTQxOGUpO319MHgwPT09XzB4NjFmMTRhJiZwcm9jZXNzW18weDU3NDQoJzB4NjcnKV1bJ3F1b2trYSddJiZfMHgyMDk5NWNbXzB4NTc0NCgnMHg1NjknKV1bJ3B1c2gnXShfMHgzMTQxOGUpO31lbHNle3ZhciBfMHgxNWYzYjY9XzB4NDhlZDYyW18weDU3NDQoJzB4MWQxJyldKCksXzB4MjMzYjQ4PV8weDQxM2UwN1tfMHg1NzQ0KCcweDQ1ZicpXVtfMHgxNWYzYjZdO2lmKF8weDIzM2I0OCl7dmFyIF8weDNiMDY3Yz1fMHgyMzNiNDhbXzB4NTc0NCgnMHg0MScpXSgpLF8weDQ1OTk1Nz1fMHg0OGVkNjJbXzB4NTc0NCgnMHg0MScpXSgpO18weDEzNmEwY3x8XzB4M2IwNjdjPT09XzB4NDU5OTU3fHwoXzB4NDEzZTA3W18weDU3NDQoJzB4M2RmJyldKz1fMHg0NTk5NTc/MHgxOi0weDEpLF8weDIzM2I0OFtfMHg1NzQ0KCcweDY3NScpXShfMHg0OGVkNjIsXzB4MTM2YTBjLF8weDIwOTk1YyksXzB4NWJkMzlkW18weDE1ZjNiNl09XzB4MjMzYjQ4LF8weDQxM2UwN1tfMHg1NzQ0KCcweDYzMycpXVtfMHgxNWYzYjZdPV8weDIzM2I0ODt9ZWxzZSBfMHg0MTNlMDdbJ19yYW5nZXMnXVtfMHgxNWYzYjZdPV8weDQ4ZWQ2MixfMHg0MTNlMDdbXzB4NTc0NCgnMHg2MzInKV1bXzB4MTVmM2I2XT1fMHg0OGVkNjIsXzB4NDhlZDYyW18weDU3NDQoJzB4NDM3JyldKCksXzB4NDhlZDYyW18weDU3NDQoJzB4NDEnKV0oKSYmIV8weDEzNmEwYyYmXzB4NDEzZTA3W18weDU3NDQoJzB4M2RmJyldKys7fX0pLF8weDEzNmEwYyYmKF8weDQxM2UwN1tfMHg1NzQ0KCcweDNkZicpXT0weDAsdGhpc1snX2xpbmVUb1JhbmdlTWFwJ109T2JqZWN0W18weDU3NDQoJzB4NTgnKV0obnVsbCksX1tfMHg1NzQ0KCcweGQ0JyldKF9bXzB4NTc0NCgnMHgxOWYnKV0odGhpc1tfMHg1NzQ0KCcweDQ1ZicpXSksZnVuY3Rpb24oXzB4NDhlZDYyKXt2YXIgXzB4MTM2YTBjPV8weDQ4ZWQ2MltfMHg1NzQ0KCcweDFkMScpXSgpO2lmKF8weDQxM2UwN1snX25ld1JhbmdlcyddW18weDEzNmEwY118fF8weDViZDM5ZFtfMHgxMzZhMGNdKXtfMHg0OGVkNjJbXzB4NTc0NCgnMHg0MScpXSgpJiZfMHg0MTNlMDdbXzB4NTc0NCgnMHgzZGYnKV0rKztmb3IodmFyIF8weDIwOTk1Yz1fMHg0OGVkNjJbXzB4NTc0NCgnMHgxYjAnKV0oKTtfMHgyMDk5NWM8PV8weDQ4ZWQ2MltfMHg1NzQ0KCcweDQxNycpXSgpO18weDIwOTk1YysrKXt2YXIgXzB4MTVmM2I2PV8weDQxM2UwN1tfMHg1NzQ0KCcweDYzNScpXVtfMHgyMDk5NWNdO18weDE1ZjNiNiYmIV8weDQ4ZWQ2MltfMHg1NzQ0KCcweDY3NicpXShfMHgyMDk5NWMsXzB4MTVmM2I2KXx8KF8weDQxM2UwN1tfMHg1NzQ0KCcweDYzNScpXVtfMHgyMDk5NWNdPV8weDQ4ZWQ2Mik7fX1lbHNlIF8weDQxM2UwN1tfMHg1NzQ0KCcweDYzNCcpXVtfMHgxMzZhMGNdPV8weDQ4ZWQ2MixkZWxldGUgXzB4NDEzZTA3W18weDU3NDQoJzB4NDVmJyldW18weDEzNmEwY107fSkpO30sXzB4NDhlZDYyW18weDU3NDQoJzB4MTBkJyldWydvd25UZXN0cyddPWZ1bmN0aW9uKCl7cmV0dXJuIF9bXzB4NTc0NCgnMHgxOWYnKV0odGhpc1tfMHg1NzQ0KCcweDM5YicpXSk7fSxfMHg0OGVkNjJbXzB4NTc0NCgnMHgxMGQnKV1bXzB4NTc0NCgnMHg2NzcnKV09ZnVuY3Rpb24oKXtpZihfMHg1NzQ0KCcweDY3OCcpIT09XzB4NTc0NCgnMHg2NzgnKSl7dmFyIF8weDM4NmU3Mz1fMHgyMDk5NWNbXzB4NTc0NCgnMHg0NDUnKV0oXzB4MjA5OTVjW18weDU3NDQoJzB4NzAnKV0oJywnKSsweDEpO3JldHVybiBCdWZmZXJbXzB4NTc0NCgnMHg2NzknKV0oXzB4Mzg2ZTczLF8weDU3NDQoJzB4NzYnKSlbXzB4NTc0NCgnMHg1NycpXSgpO31lbHNle3ZhciBfMHg0OGVkNjI9T2JqZWN0W18weDU3NDQoJzB4NTgnKV0obnVsbCk7cmV0dXJuIF9bXzB4NTc0NCgnMHhkNCcpXSh0aGlzW18weDU3NDQoJzB4NGM4JyldKCksZnVuY3Rpb24oXzB4MTM2YTBjKXtfW18weDU3NDQoJzB4ZDQnKV0oXzB4MTM2YTBjWydvYnNvbGV0ZSddKCksZnVuY3Rpb24oXzB4MTM2YTBjKXtpZignc0x1SmcnIT09J3NMdUpnJyl7cmV0dXJuIV9bJ2lzRW1wdHknXSh0aGlzW18weDU3NDQoJzB4NDVmJyldKTt9ZWxzZXtfMHg0OGVkNjJbXzB4MTM2YTBjW18weDU3NDQoJzB4MWQxJyldKCldPV8weDEzNmEwYzt9fSk7fSksdGhpc1tfMHg1NzQ0KCcweDM5YicpXT1PYmplY3RbJ2NyZWF0ZSddKG51bGwpLF8weDQ4ZWQ2Mjt9fSxfMHg0OGVkNjJbJ3Byb3RvdHlwZSddW18weDU3NDQoJzB4OGUnKV09ZnVuY3Rpb24oXzB4NDhlZDYyKXtyZXR1cm4gdGhpc1snX2xpbmVUb1JhbmdlTWFwJ11bXzB4NDhlZDYyXTt9LF8weDQ4ZWQ2MltfMHg1NzQ0KCcweDEwZCcpXVsnX3JlYnVpbGRSYW5nZU1hcCddPWZ1bmN0aW9uKCl7aWYoXzB4NTc0NCgnMHg2N2EnKSE9PSdUQlZKbScpe18weDE1ZjNiNihfMHgxMzZhMGMpO31lbHNle3ZhciBfMHg0OGVkNjI9dGhpcyxfMHgxMzZhMGM9dGhpc1tfMHg1NzQ0KCcweDQ1ZicpXTt0aGlzWydfcmFuZ2VzJ109T2JqZWN0W18weDU3NDQoJzB4NTgnKV0obnVsbCksX1tfMHg1NzQ0KCcweGQ0JyldKF8weDEzNmEwYyxmdW5jdGlvbihfMHgxMzZhMGMpe2lmKF8weDU3NDQoJzB4NjdiJykhPT1fMHg1NzQ0KCcweDY3YicpKXt2YXIgXzB4MTdlYTk3PV8weDViZDM5ZFtfMHg1NzQ0KCcweDUwOCcpXShfMHgxMzZhMGNbJ3BhdHRlcm4nXSk7cmV0dXJuIF8weDQ4ZWQ2MltfMHgxN2VhOTddPV8weDE3ZWE5NyxfMHg0OGVkNjI7fWVsc2V7dmFyIF8weDIwOTk1Yz1fMHgxMzZhMGNbXzB4NTc0NCgnMHgxZDEnKV0oKSxfMHg0MTNlMDc9XzB4NDhlZDYyWydfcmFuZ2VzJ11bXzB4MjA5OTVjXTtfMHg0OGVkNjJbXzB4NTc0NCgnMHg0NWYnKV1bXzB4MjA5OTVjXT1fMHgxMzZhMGMsXzB4NDEzZTA3JiZfMHg0MTNlMDdbXzB4NTc0NCgnMHgzMzUnKV0oKTt9fSk7fX0sXzB4NDhlZDYyO319KCk7XzB4MTM2YTBjW18weDU3NDQoJzB4YicpXT1fMHgyMzNiNDg7fSx7Jy4uLy4uLy4uL2xpYi9iYWJlbFJhbmdlQ2FsY3VsYXRvcic6MHgxLCcuL2NvdmVyYWJsZVJhbmdlJzoweGIsJy4vZG9jdW1lbnRJbkVkaXRvcic6MHhjfV0sMjI6W2Z1bmN0aW9uKF8weGYyYjZjMixfMHgxZmVmMDQsXzB4NTM4MGVhKXtfMHgxZmVmMDRbXzB4NTc0NCgnMHhiJyldPXsnbGluZVN0YXRlJzp7J25vdENvdmVyZWQnOjB4MSwnZnVsbHlDb3ZlcmVkJzoweDIsJ3BhcnRpYWxseUNvdmVyZWQnOjB4MywnZXJyb3JTb3VyY2UnOjB4NCwnZXJyb3JQYXRoJzoweDV9fTt9LHt9XSwyMzpbZnVuY3Rpb24oXzB4MTYzYmJhLF8weDNkN2IxZixfMHg4ZmEzZGIpe3ZhciBfMHgyNWY4OGE9ZnVuY3Rpb24oXzB4MTYzYmJhKXtyZXR1cm4gXzB4MTYzYmJhJiZfMHgxNjNiYmFbXzB4NTc0NCgnMHg5ZCcpXSgvXlxzK3xccyskL2dtLCcnKTt9LF8weDQyOTQwND1bJ0phbnVhcnknLCdGZWJydWFyeScsXzB4NTc0NCgnMHg2N2MnKSxfMHg1NzQ0KCcweDY3ZCcpLF8weDU3NDQoJzB4NjdlJyksXzB4NTc0NCgnMHg2N2YnKSxfMHg1NzQ0KCcweDY4MCcpLF8weDU3NDQoJzB4NjgxJyksXzB4NTc0NCgnMHg2ODInKSxfMHg1NzQ0KCcweDY4MycpLCdOb3ZlbWJlcicsJ0RlY2VtYmVyJ107XzB4M2Q3YjFmW18weDU3NDQoJzB4YicpXT17J25vcm1hbGl6ZVBhdGgnOmZ1bmN0aW9uKF8weDE2M2JiYSl7cmV0dXJuIF8weDU3NDQoJzB4Njg0Jyk9PT1wcm9jZXNzW18weDU3NDQoJzB4Mjg0JyldJiZfMHgxNjNiYmE/XzB4MTYzYmJhW18weDU3NDQoJzB4OWQnKV0oL1xcL2csJy8nKTpfMHgxNjNiYmE7fSwncGFyc2VLZXknOmZ1bmN0aW9uKF8weDE2M2JiYSl7dmFyIF8weDNkN2IxZj17fTtpZihfMHgxNjNiYmEpe3ZhciBfMHg4ZmEzZGI9XzB4MTYzYmJhWydzcGxpdCddKCc6Jyk7MHgyPT09XzB4OGZhM2RiWydsZW5ndGgnXSYmKF8weDE2M2JiYT1fMHgyNWY4OGEoXzB4OGZhM2RiWzB4MV0pKTt9dmFyIF8weDM5OTk4Yj1uZXcgQnVmZmVyKF8weDE2M2JiYSxfMHg1NzQ0KCcweDc2JykpW18weDU3NDQoJzB4NTcnKV0oKVtfMHg1NzQ0KCcweGQzJyldKCdceDBhJyk7XzB4M2Q3YjFmWydsaWNlbnNlZU5hbWUnXT1fMHgzOTk5OGJbMHgwXSxfMHgzZDdiMWZbXzB4NTc0NCgnMHgyNGInKV09XzB4Mzk5OThiWzB4MV07dmFyIF8weDUwNGM1ND1fMHgzZDdiMWZbXzB4NTc0NCgnMHgyNGInKV1bJ3NwbGl0J10oJywnKTtfMHg1MDRjNTRbXzB4NTc0NCgnMHg5YScpXT49MHgxJiYoXzB4M2Q3YjFmW18weDU3NDQoJzB4Njg1JyldPV8weDUwNGM1NFsweDBdKSxfMHg1MDRjNTRbXzB4NTc0NCgnMHg5YScpXT49MHgyJiYoXzB4M2Q3YjFmW18weDU3NDQoJzB4MjRjJyldPV8weDUwNGM1NFsweDFdKSxfMHg1MDRjNTRbXzB4NTc0NCgnMHg5YScpXT49MHgzJiYoXzB4M2Q3YjFmW18weDU3NDQoJzB4MWZhJyldPV8weDUwNGM1NFsweDJdKSxfMHgzZDdiMWZbXzB4NTc0NCgnMHgyNGQnKV09XzB4Mzk5OThiWzB4Ml0sXzB4M2Q3YjFmW18weDU3NDQoJzB4Njg2JyldPV8weDM5OTk4YlsweDNdO3RyeXtpZihfMHg1NzQ0KCcweDY4NycpIT09XzB4NTc0NCgnMHg2ODcnKSl7cmV0dXJuIHZvaWQgMHgwPT09XzB4OGZhM2RiJiYoXzB4OGZhM2RiPV9bJ25vb3AnXSksXzB4MjVmODhhKHRoaXMsdm9pZCAweDAsdm9pZCAweDAsZnVuY3Rpb24oKXt2YXIgXzB4M2Y4NTc5O3JldHVybiBfMHg0Mjk0MDQodGhpcyxmdW5jdGlvbihfMHg1ZGExOWQpe3N3aXRjaChfMHg1ZGExOWRbXzB4NTc0NCgnMHhlZCcpXSl7Y2FzZSAweDA6cmV0dXJuIF8weDVkYTE5ZFtfMHg1NzQ0KCcweGYwJyldW18weDU3NDQoJzB4MjknKV0oWzB4MCwweDIsLDB4M10pLF8weDE2M2JiYVtfMHg1NzQ0KCcweDY4OCcpXT9bMHg0LF8weDE2M2JiYVtfMHg1NzQ0KCcweDY4OCcpXVsnZXZhbHVhdGUnXSh7J2V4cHJlc3Npb24nOicoJytfMHgzZDdiMWZbJ3RvU3RyaW5nJ10oKStfMHg1NzQ0KCcweDEzYycpfSldOlsweDJdO2Nhc2UgMHgxOnJldHVybiBfMHg1ZGExOWRbXzB4NTc0NCgnMHgxMGUnKV0oKSxfMHg4ZmEzZGIoKSxbMHgzLDB4M107Y2FzZSAweDI6cmV0dXJuIF8weDNmODU3OT1fMHg1ZGExOWRbXzB4NTc0NCgnMHgxMGUnKV0oKSxjKCdGYWlsZWRceDIwdG9ceDIwZXZhbHVhdGVceDIwY29kZVx4MjBvblx4MjBDaHJvbWVceDIwVGFiOlx4MjAnK18weDNmODU3OVsnbWVzc2FnZSddKSxbMHgzLDB4M107Y2FzZSAweDM6cmV0dXJuWzB4Ml07fX0pO30pO31lbHNle3ZhciBfMHg0NGE2ZGE9XzB4M2Q3YjFmW18weDU3NDQoJzB4MjRkJyldW18weDU3NDQoJzB4ZDMnKV0oJy8nKTtfMHgzZDdiMWZbXzB4NTc0NCgnMHgzYTMnKV09XzB4NDRhNmRhWzB4MF0rJ1x4MjAnK18weDQyOTQwNFtwYXJzZUludChfMHg0NGE2ZGFbMHgxXSwweGEpLTB4MV0rJ1x4MjAnK18weDQ0YTZkYVsweDJdO319Y2F0Y2goXzB4MjljNjZkKXtfMHgzZDdiMWZbXzB4NTc0NCgnMHgzYTMnKV09XzB4M2Q3YjFmWydleHBpcmF0aW9uRGF0ZVN0cmluZyddO31yZXR1cm4gXzB4M2Q3YjFmO30sJ2Zvcm1hdCc6ZnVuY3Rpb24oXzB4MTYzYmJhLF8weDNkN2IxZil7aWYoXzB4NTc0NCgnMHg2ODknKSE9PV8weDU3NDQoJzB4NjhhJykpe3JldHVybiBfMHgxNjNiYmFbXzB4NTc0NCgnMHg5ZCcpXSgvXHsoWzAtOWEtekEtWl9dKylcfS9nLGZ1bmN0aW9uKF8weDhmYTNkYixfMHgyNWY4OGEsXzB4NDI5NDA0KXtpZignZ3ZKUlAnPT09XzB4NTc0NCgnMHg2OGInKSl7aWYodGhpc1tfMHg1NzQ0KCcweDM5YScpXSl7dmFyIF8weDM5OTkxNT10aGlzWydfZG9jdW1lbnRJbkVkaXRvciddW18weDU3NDQoJzB4OGYnKV0oXzB4MTYzYmJhKTtpZihfMHgzOTk5MTUpcmV0dXJuIF8weDM5OTkxNVsncmFuZ2VzJ10oKTt9fWVsc2V7dmFyIF8weDM5OTM3YjtyZXR1cm4neyc9PT1fMHgxNjNiYmFbXzB4NDI5NDA0LTB4MV0mJid9Jz09PV8weDE2M2JiYVtfMHg0Mjk0MDQrXzB4OGZhM2RiWydsZW5ndGgnXV0/XzB4MjVmODhhOihfMHgzOTkzN2I9XzB4M2Q3YjFmW18weDU3NDQoJzB4M2InKV0oXzB4MjVmODhhKT9fMHgzZDdiMWZbXzB4MjVmODhhXTpudWxsLG51bGw9PT1fMHgzOTkzN2J8fHZvaWQgMHgwPT09XzB4Mzk5MzdiPycnOl8weDM5OTM3Yik7fX0pO31lbHNle3ZhciBfMHgyOThhMGU9dGhpcztyZXR1cm4gXzB4M2Q3YjFmJiZfMHg4ZmEzZGImJl9bXzB4NTc0NCgnMHgxMWQnKV0oXzB4MTYzYmJhW18weDU3NDQoJzB4NDBlJyldKT92b2lkKF8weDE2M2JiYVtfMHg1NzQ0KCcweDQyMycpXSYmKHRoaXNbXzB4NTc0NCgnMHg0MjMnKV09XzB4MTYzYmJhWydfY29uc29sZUxvZyddKSk6KHRoaXNbXzB4NTc0NCgnMHg0MTEnKV09XzB4MTYzYmJhW18weDU3NDQoJzB4NDExJyldLHRoaXNbXzB4NTc0NCgnMHg0MjMnKV09XzB4MTYzYmJhWydfY29uc29sZUxvZyddLHRoaXNbXzB4NTc0NCgnMHg0MmEnKV0mJih0aGlzW18weDU3NDQoJzB4NDJhJyldPU9iamVjdFtfMHg1NzQ0KCcweDU4JyldKG51bGwpKSx0aGlzW18weDU3NDQoJzB4NDFlJyldJiYodGhpc1tfMHg1NzQ0KCcweDQxZScpXT1bXSksXzB4MTYzYmJhW18weDU3NDQoJzB4NDBlJyldPyhfMHgzZDdiMWYmJiFfMHg4ZmEzZGI/KHRoaXNbXzB4NTc0NCgnMHg0MGUnKV09T2JqZWN0W18weDU3NDQoJzB4NTgnKV0obnVsbCksdGhpc1snX2ZhaWxlZE9uTWVUZXN0cyddJiYodGhpc1tfMHg1NzQ0KCcweDQyYycpXT1PYmplY3RbXzB4NTc0NCgnMHg1OCcpXShudWxsKSksX1tfMHg1NzQ0KCcweGQ0JyldKF8weDE2M2JiYVsnX2NvdmVyaW5nVGVzdE1hcCddLGZ1bmN0aW9uKF8weDQ0MTFmNCl7dmFyIF8weDM0N2RkYj1fMHg0NDExZjRbXzB4NTc0NCgnMHgxZDEnKV0oKTtfMHgyOThhMGVbJ19jb3ZlcmluZ1Rlc3RNYXAnXVtfMHgzNDdkZGJdPV8weDQ0MTFmNCxfMHg0NDExZjRbXzB4NTc0NCgnMHg0MzgnKV0oXzB4Mjk4YTBlKSxfMHgyOThhMGVbXzB4NTc0NCgnMHg0MTAnKV0oXzB4NDQxMWY0KTt9KSk6XzB4Mjk4YTBlW18weDU3NDQoJzB4NDJjJyldP19bJ2VhY2gnXShfMHgxNjNiYmFbXzB4NTc0NCgnMHg0MGUnKV0sZnVuY3Rpb24oXzB4MTYxYTM3KXtyZXR1cm4gXzB4Mjk4YTBlWydfdXBkYXRlVGVzdFdpdGhQb3NzaWJsZUZhaWxlZE9uVGhlUmFuZ2UnXShfMHgxNjFhMzcsXzB4MTYxYTM3WydrZXknXSgpKTt9KTpfW18weDU3NDQoJzB4ZDQnKV0oXzB4MTYzYmJhW18weDU3NDQoJzB4NDBlJyldLGZ1bmN0aW9uKF8weDkzOWFhZCl7cmV0dXJuIF8weDI5OGEwZVtfMHg1NzQ0KCcweDQzYicpXShfMHg5MzlhYWQsXzB4OTM5YWFkW18weDU3NDQoJzB4MWQxJyldKCkpO30pLF8weDI5OGEwZVtfMHg1NzQ0KCcweDQwZCcpXT1fW18weDU3NDQoJzB4NDEyJyldKF8weDI5OGEwZVtfMHg1NzQ0KCcweDQwZScpXSkpOih0aGlzW18weDU3NDQoJzB4NDBlJyldPU9iamVjdFsnY3JlYXRlJ10obnVsbCksdGhpc1tfMHg1NzQ0KCcweDQwZCcpXT0weDAsdGhpc1snX2ZhaWxlZE9uTWVUZXN0cyddJiYodGhpc1tfMHg1NzQ0KCcweDQyYycpXT1PYmplY3RbXzB4NTc0NCgnMHg1OCcpXShudWxsKSkpLHZvaWQgdGhpc1tfMHg1NzQ0KCcweDQxMycpXSgpKTt9fSwndmFsaWRQYWNrYWdlTmFtZSc6ZnVuY3Rpb24oXzB4MTYzYmJhKXtpZihfMHgxNjNiYmEmJiFfMHgxNjNiYmFbXzB4NTc0NCgnMHgyZTQnKV0oL15cLi8pJiYhXzB4MTYzYmJhWydtYXRjaCddKC9eXy8pJiYhKF8weDE2M2JiYVtfMHg1NzQ0KCcweDlhJyldPjB4ZDZ8fF8weDE2M2JiYVtfMHg1NzQ0KCcweDI2ZCcpXSgpIT09XzB4MTYzYmJhfHwvW34nISgpKl0vW18weDU3NDQoJzB4MzlkJyldKF8weDE2M2JiYVtfMHg1NzQ0KCcweGQzJyldKCcvJylbXzB4NTc0NCgnMHg0NDUnKV0oLTB4MSlbMHgwXSkpKXtpZihlbmNvZGVVUklDb21wb25lbnQoXzB4MTYzYmJhKT09PV8weDE2M2JiYSlyZXR1cm4gXzB4MTYzYmJhO3ZhciBfMHgzZDdiMWY9XzB4MTYzYmJhW18weDU3NDQoJzB4MmU0JyldKC9eKD86QChbXlwvXSs/KVtcL10pPyhbXlwvXSs/KSQvKTtpZihfMHgzZDdiMWYpe3ZhciBfMHg4ZmEzZGI9XzB4M2Q3YjFmWzB4MV0sXzB4MjVmODhhPV8weDNkN2IxZlsweDJdO2lmKGVuY29kZVVSSUNvbXBvbmVudChfMHg4ZmEzZGIpPT09XzB4OGZhM2RiJiZlbmNvZGVVUklDb21wb25lbnQoXzB4MjVmODhhKT09PV8weDI1Zjg4YSlyZXR1cm4gXzB4MTYzYmJhO319fX07fSx7fV0sMjQ6W2Z1bmN0aW9uKF8weDQxNTI0NCxfMHgyYmMxYmMsXzB4MjA3MjNmKXsndXNlIHN0cmljdCc7dmFyIF8weDNlMTg0MT10aGlzJiZ0aGlzWydfX2V4dGVuZHMnXXx8ZnVuY3Rpb24oKXt2YXIgXzB4NDE1MjQ0PWZ1bmN0aW9uKF8weDJiYzFiYyxfMHgyMDcyM2Ype2lmKCdhS2F4Vic9PT1fMHg1NzQ0KCcweDY4YycpKXtyZXR1cm4oXzB4NDE1MjQ0PU9iamVjdFtfMHg1NzQ0KCcweGYyJyldfHx7J19fcHJvdG9fXyc6W119aW5zdGFuY2VvZiBBcnJheSYmZnVuY3Rpb24oXzB4NDE1MjQ0LF8weDJiYzFiYyl7aWYoXzB4NTc0NCgnMHg2OGQnKSE9PV8weDU3NDQoJzB4NjhkJykpe3RoaXNbXzB4NTc0NCgnMHgyZDUnKV0oJ2J1c3knKTt9ZWxzZXtfMHg0MTUyNDRbXzB4NTc0NCgnMHhmMycpXT1fMHgyYmMxYmM7fX18fGZ1bmN0aW9uKF8weDQxNTI0NCxfMHgyYmMxYmMpe2lmKCdUclRLQyc9PT0nekpwdnEnKXtfMHgyYmMxYmNbJ2NvbXBsZXRlJ10oKTt9ZWxzZXtmb3IodmFyIF8weDIwNzIzZiBpbiBfMHgyYmMxYmMpXzB4MmJjMWJjWydoYXNPd25Qcm9wZXJ0eSddKF8weDIwNzIzZikmJihfMHg0MTUyNDRbXzB4MjA3MjNmXT1fMHgyYmMxYmNbXzB4MjA3MjNmXSk7fX0pKF8weDJiYzFiYyxfMHgyMDcyM2YpO31lbHNle2lmKHByb2Nlc3NbJ2VudiddW18weDU3NDQoJzB4MTNmJyldJiZfMHg0MTUyNDRbJ21lc3NhZ2UnXSl7XzB4NDE1MjQ0W18weDU3NDQoJzB4MzEnKV09XzB4NDE1MjQ0W18weDU3NDQoJzB4MzEnKV1bXzB4NTc0NCgnMHg5ZCcpXSgnUG9zdHByb2Nlc3Nvclx4MjBydW5ceDIwZmFpbHVyZTpceDIwJywnJyk7dmFyIF8weDIxYTgwYT1fMHg0MTUyNDRbXzB4NTc0NCgnMHgzMScpXVtfMHg1NzQ0KCcweDcwJyldKF8weDU3NDQoJzB4MzIyJykpO2lmKF8weDIxYTgwYT4weDApe18weDQxNTI0NFtfMHg1NzQ0KCcweDMxJyldPV8weDQxNTI0NFtfMHg1NzQ0KCcweDMxJyldW18weDU3NDQoJzB4MTE3JyldKF8weDIxYTgwYSsweDIpO2Zvcih2YXIgXzB4MTYzYTNkPV8weDQxNTI0NFtfMHg1NzQ0KCcweDMxJyldWydzcGxp4oCLdCddKCdceDBhJyksXzB4NDE1OWVmPTB4MDtfMHg0MTU5ZWY8XzB4MTYzYTNkW18weDU3NDQoJzB4OWEnKV0mJiFfW18weDU3NDQoJzB4MzI3JyldKF9bJ3RyaW1MZWZ0J10oXzB4MTYzYTNkW18weDQxNTllZl0pLF8weDU3NDQoJzB4MzI5JykpO18weDQxNTllZisrKTtfMHg0MTUyNDRbXzB4NTc0NCgnMHgzMScpXT1fMHgxNjNhM2RbXzB4NTc0NCgnMHg0NDUnKV0oMHgwLF8weDQxNTllZilbXzB4NTc0NCgnMHg1NCcpXSgnXHgwYScpO319dGhpc1tfMHg1NzQ0KCcweDMyYScpXShfMHg0MTUyNDRbXzB4NTc0NCgnMHgzMScpXSk7fX07cmV0dXJuIGZ1bmN0aW9uKF8weDJiYzFiYyxfMHgyMDcyM2Ype2lmKF8weDU3NDQoJzB4NjhlJykhPT1fMHg1NzQ0KCcweDY4ZicpKXtmdW5jdGlvbiBfMHgzZTE4NDEoKXt0aGlzWydjb25zdHJ1Y3RvciddPV8weDJiYzFiYzt9XzB4NDE1MjQ0KF8weDJiYzFiYyxfMHgyMDcyM2YpLF8weDJiYzFiY1tfMHg1NzQ0KCcweDEwZCcpXT1udWxsPT09XzB4MjA3MjNmP09iamVjdFtfMHg1NzQ0KCcweDU4JyldKF8weDIwNzIzZik6KF8weDNlMTg0MVtfMHg1NzQ0KCcweDEwZCcpXT1fMHgyMDcyM2ZbJ3Byb3RvdHlwZSddLG5ldyBfMHgzZTE4NDEoKSk7fWVsc2V7cmV0dXJuIHZvaWQgY29uc29sZVtfMHg1NzQ0KCcweDdjJyldKF8weDU3NDQoJzB4NjkwJykrXzB4MmJjMWJjKycsXHgyMCcrKF8weDVlYjQ0YSYmXzB4NWViNDRhW18weDU3NDQoJzB4MzEnKV0pKTt9fTt9KCksXzB4NWViNDRhPV8weDQxNTI0NChfMHg1NzQ0KCcweDY5MScpKSxfMHgxZmFjYmQ9XzB4NDE1MjQ0KCdodHRwJyksXzB4NWVkNDRjPV8weDQxNTI0NChfMHg1NzQ0KCcweDZmJykpLF8weDRjYTk2Mj1fMHg0MTUyNDQoJ3dzJylbXzB4NTc0NCgnMHg2OTInKV0sXzB4MzJkNTQyPV8weDQxNTI0NChfMHg1NzQ0KCcweDY5MycpKSxfMHg0OTBkZWY9XzB4NDE1MjQ0KF8weDU3NDQoJzB4NDhjJykpLF8weDJhM2EzNT1sb2dnZXJbJ2NyZWF0ZSddKCd1aVNlcnZpY2UnKVtfMHg1NzQ0KCcweDVhJyldLF8weDEwN2I5Nj1bMHhjODIzLDB4YzgyNCwweGM4MjUsMHhjODI2LDB4YzgyNywweGM4MjgsMHhjODI5LDB4YzgyYSwweGM4MmIsMHhjODJjLDB4Y2UwNiwweGNlMDcsMHhjZTA4LDB4Y2UwOSwweGNlMGEsMHhjZTBiLDB4Y2UwYywweGNlMGQsMHhjZTBlLDB4Y2UwZiwweGQxNGEsMHhkMTRiLDB4ZDE0YywweGQxNGQsMHhkMTRlLDB4ZDE0ZiwweGQxNTAsMHhkMTUxLDB4ZDE1MiwweGQxNTNdLF8weDI5ZmRiYj0weGM4MmQsXzB4NTdhMGQ0PSc8IURPQ1RZUEVceDIwaHRtbD5ceDBhPGh0bWxceDIwbGFuZz1ceDIyZW5ceDIyPlx4MGE8aGVhZD5ceDBhXHgyMFx4MjBceDIwXHgyMDxtZXRhXHgyMGNoYXJzZXQ9XHgyMlVURi04XHgyMj5ceDBhXHgyMFx4MjBceDIwXHgyMDxsaW5rXHgyMGlkPVx4MjJmYXZpY29uXHgyMlx4MjByZWw9XHgyMmljb25ceDIyXHgyMGhyZWY9XHgyMmh0dHBzOi8vd2FsbGFieWpzLmNvbS9hcHAvZmF2aWNvbi5pY29ceDIyXHgyMHR5cGU9XHgyMmltYWdlL3gtaWNvblx4MjIvPlx4MGFceDIwXHgyMFx4MjBceDIwPGxpbmtceDIwaWQ9XHgyMnNob3J0Y3V0XHgyMlx4MjByZWw9XHgyMnNob3J0Y3V0XHgyMGljb25ceDIyXHgyMGhyZWY9XHgyMmh0dHBzOi8vd2FsbGFieWpzLmNvbS9hcHAvZmF2aWNvbi5pY29ceDIyXHgyMHR5cGU9XHgyMmltYWdlL3gtaWNvblx4MjIvPlx4MGFceDIwXHgyMFx4MjBceDIwPHN0eWxlPlx4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMGh0bWwsXHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwYm9keVx4MjB7XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMHdpZHRoOlx4MjAxMDAlO1x4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBoZWlnaHQ6XHgyMDEwMCU7XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwfVx4MGFceDIwXHgyMFx4MjBceDIwPC9zdHlsZT5ceDBhPC9oZWFkPlx4MGE8Ym9keVx4MjBzdHlsZT1ceDIybWFyZ2luOjBweDtwYWRkaW5nOjBweDtvdmVyZmxvdzpoaWRkZW47XHgyMj5ceDBhPHNjcmlwdD5ceDBhXHgyMFx4MjB0cnlceDIwe1x4MGFceDIwXHgyMFx4MjBceDIwd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXHgyN21lc3NhZ2VceDI3LFx4MjBmdW5jdGlvblx4MjAobSlceDIwe1x4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjB0cnlceDIwe1x4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMGlmXHgyMChtLmRhdGEudGl0bGUpXHgyMHtceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMGRvY3VtZW50LnRpdGxlXHgyMD1ceDIwbS5kYXRhLnRpdGxlO1x4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMH1ceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBpZlx4MjAobS5kYXRhLnN0YXR1cylceDIwe1x4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwaWZceOKAizIwKG0uZGF0YS5zdGF0dXMucGFzc2luZylceDIwe1x4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChceDI3ZmF2aWNvblx4MjcpLnNldEF0dHJpYnV0ZShceDI3aHJlZlx4MjcsXHgyMFx4MjdodHRwczovL3dhbGxhYnlqcy5jb20vYXBwL2Zhdmljb24uaWNvXHgyNyk7XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFx4MjdzaG9ydGN1dFx4MjcpLnNldEF0dHJpYnV0ZShceDI3aHJlZlx4MjcsXHgyMFx4MjdodHRwczovL3dhbGxhYnlqcy5jb20vYXBwL2Zhdmljb24uaWNvXHgyNyk7XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjB9XHgyMGVsc2VceDIwe1x4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChceDI3ZmF2aWNvblx4MjcpLnNldEF0dHJpYnV0ZShceDI3aHJlZlx4MjcsXHgyMFx4MjdodHRwczovL3dhbGxhYnlqcy5jb20vYXBwL2Zhdmljb24tYWx0Lmljb1x4MjcpO1x4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChceDI3c2hvcnRjdXRceDI3KS5zZXRBdHRyaWJ1dGUoXHgyN2hyZWZceDI3LFx4MjBceDI3aHR0cHM6Ly93YWxsYWJ5anMuY29tL2FwcC9mYXZpY29uLWFsdC5pY29ceDI3KTtceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMH1ceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjB9XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMH1ceDIwY2F0Y2hceDIwKGUpXHgyMHtceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwfVx4MGFceDIwXHgyMFx4MjBceDIwfSk7XHgwYVx4MjBceDIwfVx4MjBjYXRjaFx4MjAoZSlceDIwe1x4MGFceDIwXHgyMH1ceDBhPC9zY3JpcHQ+XHgwYTxpZnJhbWVceDIwc3JjPVx4MjJodHRwczovL3dhbGxhYnlqcy5jb20vYXBwXHgyMlx4MjBmcmFtZWJvcmRlcj1ceDIyMFx4MjJceDIwc3R5bGU9XHgyMm92ZXJmbG93OmhpZGRlbjtoZWlnaHQ6MTAwJTt3aWR0aDoxMDAlXHgyMlx4MjBoZWlnaHQ9XHgyMjEwMCVceDIyXHgyMHdpZHRoPVx4MjIxMDAlXHgyMj48L2lmcmFtZT5ceDBhPC9ib2R5Plx4MGE8L2h0bWw+XHgwYScsXzB4MmE0OGFmPWZ1bmN0aW9uKF8weDQxNTI0NCl7aWYoXzB4NTc0NCgnMHg2OTQnKSE9PSdzbEdoVycpe2Z1bmN0aW9uIF8weDJiYzFiYyhfMHgyYmMxYmMpe3ZhciBfMHgyMDcyM2Y9XzB4NDE1MjQ0W18weDU3NDQoJzB4ZWMnKV0odGhpcyl8fHRoaXMsXzB4M2UxODQxPV8weDIwNzIzZjtyZXR1cm4gXzB4MjA3MjNmW18weDU3NDQoJzB4Njk1JyldKClbJ3RoZW4nXShmdW5jdGlvbihfMHg0MTUyNDQpe3JldHVybiBfMHgzZTE4NDFbXzB4NTc0NCgnMHgzOWUnKV0oXzB4NDE1MjQ0LF8weDJiYzFiYyk7fSlbXzB4NTc0NCgnMHg3YScpXShmdW5jdGlvbihfMHg0MTUyNDQpe2lmKF8weDU3NDQoJzB4Njk2JykhPT1fMHg1NzQ0KCcweDY5NycpKXtyZXR1cm4gY29uc29sZVtfMHg1NzQ0KCcweDdjJyldKF8weDU3NDQoJzB4Njk4JykrKF8weDQxNTI0NCYmXzB4NDE1MjQ0W18weDU3NDQoJzB4MzEnKV0pKTt9ZWxzZXtyZXR1cm4gXzB4MmJjMWJjW18weDU3NDQoJzB4M2QnKV1bJ2NvbHVtbiddPT09XzB4NDE1MjQ0WydzdGFydENvbHVtbiddKCk7fX0pLF8weDNlMTg0MVtfMHg1NzQ0KCcweDFkOCcpXT1fMHgyYmMxYmMsXzB4M2UxODQxWydfY29ubmVjdGlvbnMnXT1bXSxfMHgzZTE4NDFbJ19vcGVuZWRGaWxlcyddPXt9LF8weDNlMTg0MVtfMHg1NzQ0KCcweDY5OScpXT17fSxfMHgyMDcyM2Y7fXJldHVybiBfMHgzZTE4NDEoXzB4MmJjMWJjLF8weDQxNTI0NCksXzB4MmJjMWJjW18weDU3NDQoJzB4MTBkJyldW18weDU3NDQoJzB4NjlhJyldPWZ1bmN0aW9uKF8weDQxNTI0NCxfMHgyYmMxYmMpe3RoaXNbXzB4NTc0NCgnMHgxMWEnKV0oX1snZXh0ZW5kJ10oeyd0eXBlJzpfMHg1NzQ0KCcweDExYicpfSx0aGlzW18weDU3NDQoJzB4MWQ4JyldW18weDU3NDQoJzB4MTFjJyldKCkpLF8weDJiYzFiYyk7dmFyIF8weDIwNzIzZj10aGlzW18weDU3NDQoJzB4MWQ4JyldW18weDU3NDQoJzB4OTcnKV0oKTtfWydpc0VtcHR5J10oXzB4MjA3MjNmKXx8dGhpc1tfMHg1NzQ0KCcweDExZScpXShfMHgyMDcyM2YsXzB4MmJjMWJjKTt9LF8weDJiYzFiY1tfMHg1NzQ0KCcweDEwZCcpXVtfMHg1NzQ0KCcweDY5YicpXT1mdW5jdGlvbihfMHg0MTUyNDQpe18weDQxNTI0NFtfMHg1NzQ0KCcweDhmJyldPXBhcnNlSW50KF8weDQxNTI0NFsnbGluZSddLDB4YSksXzB4NDE1MjQ0Wydjb2x1bW4nXT1wYXJzZUludChfMHg0MTUyNDRbJ2NvbHVtbiddLDB4YSksX1tfMHg1NzQ0KCcweDI3YycpXShfMHg0MTUyNDRbJ2xpbmUnXSkmJihfMHg0MTUyNDRbXzB4NTc0NCgnMHg4ZicpXT0weDEpLF9bXzB4NTc0NCgnMHgyN2MnKV0oXzB4NDE1MjQ0W18weDU3NDQoJzB4MzU2JyldKSYmZGVsZXRlIF8weDQxNTI0NFtfMHg1NzQ0KCcweDM1NicpXSx0aGlzWydlbWl0J10oJ21lc3NhZ2UnLF9bXzB4NTc0NCgnMHg3OScpXShfMHg0MTUyNDQseyd0eXBlJzpfMHg1NzQ0KCcweDFlMicpfSkpO30sXzB4MmJjMWJjW18weDU3NDQoJzB4MTBkJyldW18weDU3NDQoJzB4NjljJyldPWZ1bmN0aW9uKF8weDQxNTI0NCl7dGhpc1tfMHg1NzQ0KCcweDFkOCcpXVtfMHg1NzQ0KCcweDRkJyldW18weDU3NDQoJzB4MmJlJyldKHsndGVzdHMnOl8weDQxNTI0NFtfMHg1NzQ0KCcweGFlJyldfSk7fSxfMHgyYmMxYmNbXzB4NTc0NCgnMHgxMGQnKV1bXzB4NTc0NCgnMHg2OWQnKV09ZnVuY3Rpb24oXzB4NDE1MjQ0KXtpZihfMHg1NzQ0KCcweDY5ZScpPT09XzB4NTc0NCgnMHg2OWYnKSl7cmV0dXJuIF8weDIwNzIzZltfMHg1NzQ0KCcweDdiJyldKF8weDU3NDQoJzB4MzEyJyksXzB4NDE1MjQ0KTt9ZWxzZXt0aGlzW18weDU3NDQoJzB4MzdkJyldW18weDQxNTI0NFtfMHg1NzQ0KCcweGUnKV1dP3RoaXNbJ19vcGVuZWRGaWxlcyddW18weDQxNTI0NFsncGF0aCddXSsrOnRoaXNbXzB4NTc0NCgnMHgzN2QnKV1bXzB4NDE1MjQ0W18weDU3NDQoJzB4ZScpXV09MHgxO319LF8weDJiYzFiY1tfMHg1NzQ0KCcweDEwZCcpXVtfMHg1NzQ0KCcweDZhMCcpXT1mdW5jdGlvbihfMHg0MTUyNDQpe3RoaXNbJ19vcGVuZWRGaWxlcyddW18weDQxNTI0NFtfMHg1NzQ0KCcweGUnKV1dJiZ0aGlzW18weDU3NDQoJzB4MzdkJyldW18weDQxNTI0NFtfMHg1NzQ0KCcweGUnKV1dLS07fSxfMHgyYmMxYmNbXzB4NTc0NCgnMHgxMGQnKV1bXzB4NTc0NCgnMHg2YTEnKV09ZnVuY3Rpb24oXzB4NDE1MjQ0LF8weDJiYzFiYyl7dmFyIF8weDIwNzIzZj10aGlzLF8weDNlMTg0MT10aGlzW18weDU3NDQoJzB4MWQ4JyldW18weDU3NDQoJzB4NTdhJyldKF8weDQxNTI0NFtfMHg1NzQ0KCcweGUnKV0pO2lmKF8weDU3NDQoJzB4MzMxJyk9PXR5cGVvZiBfMHgzZTE4NDEpe2lmKF8weDU3NDQoJzB4NmEyJykhPT1fMHg1NzQ0KCcweDZhMycpKXt2YXIgXzB4NWViNDRhLF8weDFmYWNiZD1uZXcgXzB4MzJkNTQyKCksXzB4NWVkNDRjPV8weDIwNzIzZltfMHg1NzQ0KCcweDFkOCcpXVtfMHg1NzQ0KCcweDIxMycpXShfMHg0MTUyNDRbJ3BhdGgnXSksXzB4NGNhOTYyPVtdLF8weDQ5MGRlZj1bXTtfMHg1ZWQ0NGMmJl8weDVlZDQ0Y1tfMHg1NzQ0KCcweDYzNycpXSgpJiYoXzB4MWZhY2JkW18weDU3NDQoJzB4MjU2JyldKF9bXzB4NTc0NCgnMHgxOWYnKV0oXzB4NWVkNDRjWydyYW5nZXMnXSgpKSwhMHgxLCEweDApLF8weDQ5MGRlZj1fMHgxZmFjYmRbXzB4NTc0NCgnMHg0NGInKV0oKVtfMHg1NzQ0KCcweDZhNCcpXXx8W10sXzB4NGNhOTYyPV8weDIwNzIzZltfMHg1NzQ0KCcweDFkOCcpXVtfMHg1NzQ0KCcweDJkNycpXSh7J2ZpbGUnOl8weDQxNTI0NFsncGF0aCddfSl8fFtdLF8weDVlYjQ0YT1fMHgyMDcyM2ZbJ19yZXBvcnRGaWxlQ292ZXJhZ2UnXShfMHg1ZWQ0NGMpKSxfMHgyMDcyM2ZbJ19zZW5kJ10oeyd0eXBlJzpfMHg1NzQ0KCcweDZhNScpLCdjb3JyZWxhdGlvbklkJzpfMHg0MTUyNDRbXzB4NTc0NCgnMHg2YTYnKV0sJ2NvZGUnOl8weDNlMTg0MVsndG9TdHJpbmcnXSgpLCdsaW5lcyc6XzB4NDkwZGVmLCd1bmNvdmVyZWRSZWdpb25zJzpfMHg0Y2E5NjIsJ2NvdmVyYWdlJzpfMHg1ZWI0NGF9LF8weDJiYzFiYyk7fWVsc2V7XzB4NDE1MjQ0PV8weDJiYzFiY1snX3Byb2plY3QnXVtfMHg1NzQ0KCcweDU0MCcpXShfMHg0MTUyNDQpO3ZhciBfMHg2NTMzOTQ9XzB4MmJjMWJjW18weDU3NDQoJzB4NmE3JyldP18weDQxNTI0NFtfMHg1NzQ0KCcweDIxMCcpXShfMHgyYmMxYmNbJ19maWxlUm9vdCddKTotMHgxO2lmKH5fMHg2NTMzOTQpe3ZhciBfMHg0MzI1Yjc9X1tfMHg1NzQ0KCcweDZhOCcpXShfMHg0MTUyNDRbXzB4NTc0NCgnMHgxMTcnKV0oXzB4NjUzMzk0K18weDJiYzFiY1snX2ZpbGVSb290J11bXzB4NTc0NCgnMHg5YScpXSksJyknKVtfMHg1NzQ0KCcweGQzJyldKCc6Jyk7MHgzIT09XzB4NDMyNWI3WydsZW5ndGgnXSYmMHgyIT09XzB4NDMyNWI3W18weDU3NDQoJzB4OWEnKV18fChfMHgzZTE4NDE9XzB4MmJjMWJjW18weDU3NDQoJzB4NGQnKV1bXzB4NTc0NCgnMHg2YTknKV0oXzB4MmJjMWJjW18weDU3NDQoJzB4NGQnKV1bXzB4NTc0NCgnMHg1NDAnKV0oX1snbHRyaW0nXShfMHg0MzI1YjdbMHgwXSwnLycpKSxwYXJzZUludChfMHg0MzI1YjdbMHgxXSwweGEpKSxfMHgzZTE4NDEmJl8weDNlMTg0MVsnbGluZSddJiYoXzB4NWViNDRhPV8weDJiYzFiY1snX2V4dHJhY3ROb2RlU3RhY2tMaW5lQ29udGV4dCddKF8weDQxNTI0NCxfMHg2NTMzOTQpLF8weDVlYjQ0YSYmKF8weDMyZDU0MltfMHgxZmFjYmRbJ2xlbmd0aCddXT1fMHg1ZWI0NGEpLF8weDFmYWNiZFtfMHg1NzQ0KCcweDI5JyldKFtfMHgzZTE4NDFbXzB4NTc0NCgnMHgyYTQnKV0sXzB4M2UxODQxW18weDU3NDQoJzB4OGYnKV1dKSkpO319fX0sXzB4MmJjMWJjWydwcm90b3R5cGUnXVtfMHg1NzQ0KCcweDZhYScpXT3igItmdW5jdGlvbihfMHg0MTUyNDQsXzB4MmJjMWJjKXtpZignaHdXYngnIT09XzB4NTc0NCgnMHg2YWInKSl7cmV0dXJuIFFbJ3doZW4nXShKU09OW18weDU3NDQoJzB4MmQnKV0oXzB4NDE1MjQ0KSk7fWVsc2V7XzB4MmJjMWJjW18weDU3NDQoJzB4MmEyJyldPSEweDAsdGhpc1tfMHg1NzQ0KCcweDZhYycpXSh2b2lkIDB4MCxfMHgyYmMxYmMpO319LF8weDJiYzFiY1tfMHg1NzQ0KCcweDEwZCcpXVtfMHg1NzQ0KCcweDZhZCcpXT1mdW5jdGlvbihfMHg0MTUyNDQsXzB4MmJjMWJjKXtfMHgyYmMxYmNbJ19hbGxvd2VkVG9TZW5kVGVzdFJlc3VsdHMnXT0hMHgxO30sXzB4MmJjMWJjW18weDU3NDQoJzB4MTBkJyldW18weDU3NDQoJzB4NmFlJyldPWZ1bmN0aW9uKCl7dGhpc1tfMHg1NzQ0KCcweDExYScpXSh7J3R5cGUnOl8weDU3NDQoJzB4NmFmJyl9KTt9LF8weDJiYzFiY1tfMHg1NzQ0KCcweDEwZCcpXVsnbW9kZWw6dGVzdFJ1bkVycm9yJ109ZnVuY3Rpb24oXzB4NDE1MjQ0KXtpZignWmpvSmcnIT09XzB4NTc0NCgnMHg2YjAnKSl7dGhpc1tfMHg1NzQ0KCcweDExYScpXShfWydleHRlbmQnXSh7J3R5cGUnOl8weDU3NDQoJzB4MTFiJyksJ2Vycm9yJzpfMHg0MTUyNDRbXzB4NTc0NCgnMHgzMScpXXx8Jyd9LHRoaXNbXzB4NTc0NCgnMHgxZDgnKV1bXzB4NTc0NCgnMHgxMWMnKV0oKSkpO31lbHNle3ZhciBfMHgyNWNhMTg9dGhpcztjbGVhclRpbWVvdXQodGhpc1tfMHg1NzQ0KCcweDRkNicpXSksY2xlYXJUaW1lb3V0KHRoaXNbXzB4NTc0NCgnMHg2YjEnKV0pLGNsZWFyVGltZW91dCh0aGlzW18weDU3NDQoJzB4MTVjJyldKSxfMHgyNWNhMThbXzB4NTc0NCgnMHg2YjInKV0oKSx0aGlzW18weDU3NDQoJzB4NmIzJyldKGZ1bmN0aW9uKCl7XzB4MWZhY2JkWydfY2FuY2VsbGVkJ10/XzB4NWViNDRhKHsncnVuQ2FuY2VsbGVkJzohMHgwfSk6XzB4M2UxODQxKHsnc2Vzc2lvbic6XzB4MjVjYTE4LCd0aW1lJzpfMHgyYmMxYmMmJl8weDJiYzFiY1tfMHg1NzQ0KCcweDM0YicpXX0pO30pLF8weDRjYTk2MihfMHg1NzQ0KCcweDZiNCcpLF8weDQxNTI0NCx0aGlzW18weDU3NDQoJzB4MWQzJyldW18weDU3NDQoJzB4OWEnKV0tdGhpc1snX3NraXBwZWQnXSx0aGlzW18weDU3NDQoJzB4NmI1JyldKTt9fSxfMHgyYmMxYmNbXzB4NTc0NCgnMHgxMGQnKV1bXzB4NTc0NCgnMHg2YjYnKV09ZnVuY3Rpb24oXzB4NDE1MjQ0KXt2YXIgXzB4MmJjMWJjPXRoaXM7aWYoIV8weDQxNTI0NFtfMHg1NzQ0KCcweDMyZScpXSl7dmFyIF8weDIwNzIzZj17fTtfWydlYWNoJ10odGhpc1tfMHg1NzQ0KCcweDY5OScpXSxmdW5jdGlvbihfMHg0MTUyNDQpe3ZhciBfMHgzZTE4NDE9XzB4MmJjMWJjW18weDU3NDQoJzB4MWQ4JyldW18weDU3NDQoJzB4MzFkJyldKF8weDQxNTI0NFsnaWQnXSk7aWYoXzB4M2UxODQxJiZfMHgzZTE4NDFbXzB4NTc0NCgnMHg2NjQnKV0oKSl7XzB4MmJjMWJjW18weDU3NDQoJzB4MWQ4JyldW18weDU3NDQoJzB4NWVmJyldKF8weDNlMTg0MSk7dmFyIF8weDVlYjQ0YT1fMHgyYmMxYmNbXzB4NTc0NCgnMHgxZGYnKV0oXzB4M2UxODQxKTtfMHg1ZWI0NGEmJl8weDVlYjQ0YVsndmFsdWVDaGFuZ2VkJ10mJihkZWxldGUgXzB4NWViNDRhW18weDU3NDQoJzB4MWUwJyldLF8weDIwNzIzZltfMHgzZTE4NDFbJ2tleSddKCldPV8weDVlYjQ0YSk7fX0pLF9bXzB4NTc0NCgnMHgxMWQnKV0oXzB4MjA3MjNmKXx8KHRoaXNbJ19tb2RlbCddWyd1cGRhdGVUb3RhbENvdmVyYWdlJ10oKSx0aGlzW18weDU3NDQoJzB4MTFhJyldKHsndHlwZSc6XzB4NTc0NCgnMHgzODEnKSwnY2hhbmdlcyc6XzB4MjA3MjNmfSkpLHRoaXNbXzB4NTc0NCgnMHgxMWEnKV0oX1snZXh0ZW5kJ10oeyd0eXBlJzpfMHg1NzQ0KCcweDExYicpfSx0aGlzW18weDU3NDQoJzB4MWQ4JyldWydzdW1tYXJ5J10oKSkpO310aGlzW18weDU3NDQoJzB4Njk5JyldPXt9O30sXzB4MmJjMWJjW18weDU3NDQoJzB4MTBkJyldW18weDU3NDQoJzB4NmI3JyldPWZ1bmN0aW9uKF8weDQxNTI0NCl7dmFyIF8weDJiYzFiYz10aGlzO19bXzB4NTc0NCgnMHhkNCcpXSh0aGlzW18weDU3NDQoJzB4YScpXSxmdW5jdGlvbihfMHgyMDcyM2Ype18weDIwNzIzZltfMHg1NzQ0KCcweDJhMicpXSYmXzB4MmJjMWJjW18weDU3NDQoJzB4MTFhJyldKHsndHlwZSc6XzB4NTc0NCgnMHgyYTMnKSwnZmlsZXMnOlt7J3BhdGgnOl8weDQxNTI0NFtfMHg1NzQ0KCcweDJhNCcpXVtfMHg1NzQ0KCcweGUnKV0sJ2FjdGlvbic6J2RlbGV0ZWQnfV19LF8weDIwNzIzZik7fSk7fSxfMHgyYmMxYmNbXzB4NTc0NCgnMHgxMGQnKV1bJ21vZGVsOmFsbEZpbGVzJ109ZnVuY3Rpb24oXzB4NDE1MjQ0KXt2YXIgXzB4MmJjMWJjPXRoaXM7X1tfMHg1NzQ0KCcweGQ0JyldKHRoaXNbXzB4NTc0NCgnMHhhJyldLGZ1bmN0aW9uKF8weDIwNzIzZil7aWYoXzB4NTc0NCgnMHg2YjgnKSE9PV8weDU3NDQoJzB4NmI5Jykpe18weDIwNzIzZltfMHg1NzQ0KCcweDY0MicpXSYmXzB4MmJjMWJjWydfc2VuZEFsbEZpbGVzV2l0aENvdmVyYWdlJ10oX1tfMHg1NzQ0KCcweDE2NicpXShfMHg0MTUyNDRbXzB4NTc0NCgnMHgzNWEnKV0sZnVuY3Rpb24oXzB4NDE1MjQ0KXtyZXR1cm57J3BhdGgnOl8weDQxNTI0NFsncGF0aCddLCdpZCc6XzB4NDE1MjQ0WydpZCddfTt9KSxfMHgyMDcyM2YpO31lbHNle3JldHVybiBfMHg1NzQ0KCcweGQ1JykrXzB4NDE1MjQ0K18weDU3NDQoJzB4ZDYnKStfMHgyYmMxYmM7fX0pO30sXzB4MmJjMWJjWydwcm90b3R5cGUnXVtfMHg1NzQ0KCcweDM2NycpXT1mdW5jdGlvbihfMHg0MTUyNDQpe3RoaXNbJ19pc0ZpbGVXaXRoQ292ZXJhZ2VPclRlc3QnXShfMHg0MTUyNDRbXzB4NTc0NCgnMHgyYTQnKV1bXzB4NTc0NCgnMHhlJyldKSYmdGhpc1tfMHg1NzQ0KCcweDExYScpXSh7J3R5cGUnOl8weDU3NDQoJzB4MzgyJyksJ2ZpbGVzJzpbeydhY3Rpb24nOl8weDU3NDQoJzB4MzEyJyksJ3BhdGgnOl8weDQxNTI0NFsnZmlsZSddW18weDU3NDQoJzB4ZScpXSwnaWQnOl8weDQxNTI0NFtfMHg1NzQ0KCcweDJhNCcpXVsnaWQnXSwndGVzdCc6XzB4NDE1MjQ0W18weDU3NDQoJzB4MmE0JyldW18weDU3NDQoJzB4MzlkJyldfHx2b2lkIDB4MH1dfSk7fSxfMHgyYmMxYmNbXzB4NTc0NCgnMHgxMGQnKV1bJ21vZGVsOmZpbGVDaGFuZ2VkJ109ZnVuY3Rpb24oXzB4NDE1MjQ0KXtpZihfMHg1NzQ0KCcweDZiYScpIT09XzB4NTc0NCgnMHg2YmEnKSl7aWYoXzB4NTc0NCgnMHg2YmInKT09PV8weDNlMTg0MVtfMHg1NzQ0KCcweDE5OScpXVsndHlwZSddKXJldHVybiB2b2lkIF8weDRjYTk2MihfMHgzZTE4NDFbXzB4NTc0NCgnMHgxOTknKV1bXzB4NTc0NCgnMHgzZTMnKV0pOyhfMHgzZTE4NDFbXzB4NTc0NCgnMHgxOTknKV1bXzB4NTc0NCgnMHhmNycpXXx8cHJvY2Vzc1tfMHg1NzQ0KCcweDY3JyldW18weDU3NDQoJzB4MTNmJyldKSYmIV8weDMyZDU0Mnx8XzB4NTc0NCgnMHg2YmMnKT09PV8weDNlMTg0MVsnZGF0YSddW18weDU3NDQoJzB4NCcpXXx8Y29uc29sZVtfMHg1NzQ0KCcweDQ4ZScpXShfMHg1NzQ0KCcweDZiZCcpK18weDNlMTg0MVtfMHg1NzQ0KCcweDE5OScpXVtfMHg1NzQ0KCcweDQnKV0rJzpceDIwJytfMHgzZTE4NDFbXzB4NTc0NCgnMHgxOTknKV1bXzB4NTc0NCgnMHgzZTMnKV0pO31lbHNle3RoaXNbXzB4NTc0NCgnMHg2OTknKV1bXzB4NDE1MjQ0W18weDU3NDQoJzB4MmE0JyldWydpZCddXT1fMHg0MTUyNDRbXzB4NTc0NCgnMHgyYTQnKV07dmFyIF8weDJiYzFiYz10aGlzW18weDU3NDQoJzB4MWQ4JyldW18weDU3NDQoJzB4MjEzJyldKF8weDQxNTI0NFsnZmlsZSddWydwYXRoJ10pO18weDJiYzFiYyYmXzB4MmJjMWJjW18weDU3NDQoJzB4NmJlJyldKCksXzB4MmJjMWJjJiYhXzB4MmJjMWJjW18weDU3NDQoJzB4NjY0JyldKCl8fHRoaXNbXzB4NTc0NCgnMHgxMWEnKV0oeyd0eXBlJzondWk6ZmlsZXMnLCdmaWxlcyc6W3snYWN0aW9uJzpfMHg1NzQ0KCcweDMxNScpLCdwYXRoJzpfMHg0MTUyNDRbXzB4NTc0NCgnMHgyYTQnKV1bXzB4NTc0NCgnMHhlJyldLCdpZCc6XzB4NDE1MjQ0WydmaWxlJ11bJ2lkJ119XX0pO319LF8weDJiYzFiY1tfMHg1NzQ0KCcweDEwZCcpXVtfMHg1NzQ0KCcweDM2OScpXT1mdW5jdGlvbihfMHg0MTUyNDQpe2lmKF8weDU3NDQoJzB4NmJmJykhPT1fMHg1NzQ0KCcweDZiZicpKXt2YXIgXzB4MzMwODExPV8weDVlZDQ0Y3x8XzB4MmJjMWJjO18weDVlYjQ0YT9fMHgzZTE4NDFbXzB4NDE1MjQ0WydnZW5lcmF0ZWRMaW5lJ11dPV8weDQxNTI0NFtfMHg1NzQ0KCcweDRjZScpXTpfMHgzMzA4MTEmJihfMHgzZTE4NDFbXzB4NDE1MjQ0W18weDU3NDQoJzB4NGNkJyldXT1fMHgzMzA4MTEpLF8weDU3NDQoJzB4ZDcnKT09PV8weDQxNTI0NFsnbmFtZSddJiZkZWxldGUgXzB4M2UxODQxW18weDQxNTI0NFtfMHg1NzQ0KCcweDRjZCcpXV07fWVsc2V7dGhpc1tfMHg1NzQ0KCcweDM3ZScpXShfMHg0MTUyNDRbXzB4NTc0NCgnMHgyYTQnKV1bXzB4NTc0NCgnMHhlJyldKSYmdGhpc1snX3NlbmQnXSh7J3R5cGUnOid1aTpmaWxlcycsJ2ZpbGVzJzpbeydhY3Rpb24nOidkZWxldGVkJywncGF0aCc6XzB4NDE1MjQ0W18weDU3NDQoJzB4MmE0JyldW18weDU3NDQoJzB4ZScpXSwnaWQnOl8weDQxNTI0NFtfMHg1NzQ0KCcweDJhNCcpXVsnaWQnXX1dfSk7fX0sXzB4MmJjMWJjW18weDU3NDQoJzB4MTBkJyldW18weDU3NDQoJzB4NmMwJyldPWZ1bmN0aW9uKF8weDQxNTI0NCl7dmFyIF8weDJiYzFiYz10aGlzO2lmKHRoaXNbJ19maWxlc0NoYW5nZWRQcmlvclRvQ29tcGxldGVkT3JSZXF1ZXVlZFRlc3RSdW4nXT17fSx0aGlzW18weDU3NDQoJzB4MTFhJyldKF9bXzB4NTc0NCgnMHg3OScpXSh7J3R5cGUnOl8weDU3NDQoJzB4MTFiJyl9LHRoaXNbXzB4NTc0NCgnMHgxZDgnKV1bJ3N1bW1hcnknXSgpKSksX1tfMHg1NzQ0KCcweGQ0JyldKHRoaXNbXzB4NTc0NCgnMHhhJyldLGZ1bmN0aW9uKF8weDIwNzIzZil7XzB4MjA3MjNmW18weDU3NDQoJzB4MmEyJyldJiZfMHgyYmMxYmNbXzB4NTc0NCgnMHg2YWMnKV0oXzB4NDE1MjQ0LF8weDIwNzIzZik7fSksIV9bXzB4NTc0NCgnMHgxMWQnKV0oXzB4NDE1MjQ0W18weDU3NDQoJzB4MzdjJyldKSl7dmFyIF8weDIwNzIzZj1bXSxfMHgzZTE4NDE9X1tfMHg1NzQ0KCcweDkyJyldKF8weDQxNTI0NFtfMHg1NzQ0KCcweDM3YycpXSxmdW5jdGlvbihfMHg0MTUyNDQsXzB4M2UxODQxKXtpZihfMHg1NzQ0KCcweDZjMScpIT09J1JwT1VQJyl7dmFyIF8weDVlYjQ0YT1fMHgyYmMxYmNbXzB4NTc0NCgnMHgxZGYnKV0oXzB4M2UxODQxKTtyZXR1cm4gXzB4NWViNDRhJiZfMHg1ZWI0NGFbJ3ZhbHVlQ2hhbmdlZCddJiYoZGVsZXRlIF8weDVlYjQ0YVtfMHg1NzQ0KCcweDFlMCcpXSxfMHg0MTUyNDRbXzB4M2UxODQxW18weDU3NDQoJzB4MWQxJyldKCldPV8weDVlYjQ0YSksXzB4MmJjMWJjW18weDU3NDQoJzB4MzdkJyldW18weDNlMTg0MVtfMHg1NzQ0KCcweGUnKV0oKV0mJl8weDJiYzFiY1tfMHg1NzQ0KCcweDM3ZScpXShfMHgzZTE4NDFbXzB4NTc0NCgnMHhlJyldKCkpJiZfMHgyMDcyM2ZbXzB4NTc0NCgnMHgyOScpXSh7J2FjdGlvbic6J2FmZmVjdGVkJywncGF0aCc6XzB4M2UxODQxWydwYXRoJ10oKSwnaWQnOl8weDNlMTg0MVtfMHg1NzQ0KCcweDFkMScpXSgpLCd0ZXN0JzpfMHgzZTE4NDFbXzB4NTc0NCgnMHgzODAnKV0oKXx8dm9pZCAweDB9KSxfMHg0MTUyNDQ7fWVsc2V7XzB4NDE1MjQ0KF8weDU3NDQoJzB4NmMyJykpW18weDU3NDQoJzB4NmMzJyldKF8weDJiYzFiYyxfMHgyMDcyM2YpO319LHt9KTtfW18weDU3NDQoJzB4MTFkJyldKF8weDNlMTg0MSl8fHRoaXNbXzB4NTc0NCgnMHgxMWEnKV0oeyd0eXBlJzpfMHg1NzQ0KCcweDM4MScpLCdjaGFuZ2VzJzpfMHgzZTE4NDF9KSxfW18weDU3NDQoJzB4MTFkJyldKF8weDIwNzIzZil8fHRoaXNbJ19zZW5kJ10oeyd0eXBlJzpfMHg1NzQ0KCcweDM4MicpLCdmaWxlcyc6XzB4MjA3MjNmfSk7fX0sXzB4MmJjMWJjW18weDU3NDQoJzB4MTBkJyldW18weDU3NDQoJzB4MzdlJyldPWZ1bmN0aW9uKF8weDQxNTI0NCl7aWYoJ3VBV2VTJyE9PV8weDU3NDQoJzB4NmM0Jykpe3ZhciBfMHgyYmMxYmM9dGhpc1tfMHg1NzQ0KCcweDFkOCcpXVtfMHg1NzQ0KCcweDIxMycpXShfMHg0MTUyNDQpO2lmKF8weDJiYzFiYylyZXR1cm4gXzB4MmJjMWJjW18weDU3NDQoJzB4NjY0JyldKCk7fWVsc2V7Y29uc29sZVsnZXJyb3InXShfMHg1NzQ0KCcweDMxOScpK18weDIwNzIzZltfMHg1NzQ0KCcweDMwOScpXShfMHg0MTUyNDQpKSxfMHgyMDcyM2ZbXzB4NTc0NCgnMHhlMScpXShfMHgyMDcyM2ZbXzB4NTc0NCgnMHgzMGEnKV0oXzB4NDE1MjQ0KSk7fX0sXzB4MmJjMWJjW18weDU3NDQoJzB4MTBkJyldW18weDU3NDQoJzB4MWRmJyldPWZ1bmN0aW9uKF8weDQxNTI0NCl7aWYoXzB4NDE1MjQ0KXt2YXIgXzB4MmJjMWJjLF8weDIwNzIzZj1fMHg0MTUyNDRbJ2NvdmVyYWdlJ10oKTtpZihfMHgyMDcyM2Y+PTB4MHx8XzB4NDE1MjQ0W18weDU3NDQoJzB4NDgwJyldPj0weDApe2lmKF8weDU3NDQoJzB4NmM1Jyk9PT1fMHg1NzQ0KCcweDZjNScpKXt2YXIgXzB4M2UxODQxPV8weDQxNTI0NFtfMHg1NzQ0KCcweDNkZCcpXSgpO18weDJiYzFiYz17J3ZhbHVlJzpfMHgyMDcyM2YsJ2xvdyc6XzB4MjA3MjNmPHRoaXNbXzB4NTc0NCgnMHgxZDgnKV1bXzB4NTc0NCgnMHg1NzcnKV0oKSwncmFuZ2VzJzp7J2NvdmVyZWQnOl8weDQxNTI0NFtfMHg1NzQ0KCcweDVmNycpXSgpLCdhbGwnOl8weDNlMTg0MX0sJ3ZhbHVlQ2hhbmdlZCc6XzB4NDE1MjQ0WydfbGF0ZXN0UmVwb3J0ZWRDb3ZlcmFnZVZhbHVlJ10hPT1fMHgyMDcyM2Z8fF8weDQxNTI0NFtfMHg1NzQ0KCcweDQ4MScpXSE9PV8weDNlMTg0MXx8dm9pZCAweDB9LF8weDIwNzIzZj49MHgwfHwoXzB4MmJjMWJjW18weDU3NDQoJzB4NDc0JyldPSEweDApLF8weDQxNTI0NFsnX2xhdGVzdFJlcG9ydGVkQ292ZXJhZ2VWYWx1ZSddPV8weDIwNzIzZixfMHg0MTUyNDRbXzB4NTc0NCgnMHg0ODEnKV09XzB4M2UxODQxO31lbHNle18weDQxNTI0NFtfMHg1NzQ0KCcweGYzJyldPV8weDJiYzFiYzt9fXJldHVybiBfMHgyYmMxYmM7fX0sXzB4MmJjMWJjW18weDU3NDQoJzB4MTBkJyldW18weDU3NDQoJzB4MTFlJyldPWZ1bmN0aW9uKF8weDQxNTI0NCxfMHgyYmMxYmMpe2lmKF8weDU3NDQoJzB4NmM2JykhPT1fMHg1NzQ0KCcweDZjNicpKXtqWydpZCddPV8weDNlMTg0MVtfMHg1NzQ0KCcweDEzZScpXShFKTt9ZWxzZXt2YXIgXzB4MjA3MjNmPXRoaXM7XzB4MmJjMWJjW18weDU3NDQoJzB4NjQyJyldPSEweDEsdGhpc1snX3NlbmQnXSh7J3R5cGUnOl8weDU3NDQoJzB4MzgyJyksJ2ZpbGVzJzpfMHg0MTUyNDRbXzB4NTc0NCgnMHgxNjYnKV0oZnVuY3Rpb24oXzB4NDE1MjQ0KXt2YXIgXzB4MmJjMWJjPV8weDIwNzIzZltfMHg1NzQ0KCcweDFkOCcpXVtfMHg1NzQ0KCcweDMxZCcpXShfMHg0MTUyNDRbJ2lkJ10pO2lmKF8weDJiYzFiY1tfMHg1NzQ0KCcweDY2NCcpXSgpKXJldHVybnsnYWN0aW9uJzonYWRkZWQnLCdwYXRoJzpfMHg0MTUyNDRbXzB4NTc0NCgnMHhlJyldLCdpZCc6XzB4NDE1MjQ0WydpZCddLCd0ZXN0JzpfMHgyYmMxYmMmJl8weDJiYzFiY1snaXNUZXN0RmlsZSddKCl8fHZvaWQgMHgwLCdjb3ZlcmFnZSc6XzB4MjA3MjNmW18weDU3NDQoJzB4MWRmJyldKF8weDJiYzFiYyl9O30pW18weDU3NDQoJzB4MTY1JyldKGZ1bmN0aW9uKF8weDQxNTI0NCl7aWYoJ21ZRlJiJyE9PV8weDU3NDQoJzB4NmM3Jykpe3JldHVybiBfMHgxMDdiOTYoXzB4NDE1MjQ0KTt9ZWxzZXtyZXR1cm4gXzB4NDE1MjQ0O319KX0sXzB4MmJjMWJjKTt9fSxfMHgyYmMxYmNbXzB4NTc0NCgnMHgxMGQnKV1bXzB4NTc0NCgnMHg2YWMnKV09ZnVuY3Rpb24oXzB4NDE1MjQ0LF8weDJiYzFiYyl7dmFyIF8weDIwNzIzZixfMHgzZTE4NDEsXzB4NWViNDRhLF8weDFmYWNiZD0nc29tZVJlc3VsdHNVcGRh4oCLdGVkJztfMHg0MTUyNDQ/KF8weDQxNTI0NFsnZnVsbFJ1biddJiYoXzB4MWZhY2JkPV8weDU3NDQoJzB4NmM4JykpLF8weDIwNzIzZj1fMHg0MTUyNDRbXzB4NTc0NCgnMHgzMTUnKV0sXzB4M2UxODQxPV8weDQxNTI0NFsnZXhlY3V0ZWQnXSxfMHg1ZWI0NGE9XzB4NDE1MjQ0W18weDU3NDQoJzB4NmM5JyldKTooXzB4MWZhY2JkPV8weDU3NDQoJzB4NmM4JyksXzB4MjA3MjNmPXRoaXNbXzB4NTc0NCgnMHgxZDgnKV1bXzB4NTc0NCgnMHg5NCcpXSgpKSx0aGlzW18weDU3NDQoJzB4MTFhJyldKHsndHlwZSc6XzB4NTc0NCgnMHg2Y2EnKStfMHgxZmFjYmQsJ2ZpbGVzJzp0aGlzW18weDU3NDQoJzB4NmNiJyldKF8weDIwNzIzZixfMHg1ZWI0NGEsXzB4NTc0NCgnMHgzMTUnKSlbXzB4NTc0NCgnMHg5MycpXSh0aGlzW18weDU3NDQoJzB4NmNiJyldKF8weDNlMTg0MSxfMHg1ZWI0NGEsXzB4NTc0NCgnMHg2Y2MnKSkpfSxfMHgyYmMxYmMpO30sXzB4MmJjMWJjW18weDU3NDQoJzB4MTBkJyldWydfY3JlYXRlVGVzdFJlc3VsdHMnXT1mdW5jdGlvbihfMHg0MTUyNDQsXzB4MmJjMWJjLF8weDIwNzIzZil7aWYoXzB4NTc0NCgnMHg2Y2QnKT09PV8weDU3NDQoJzB4NmNlJykpe3ZhciBfMHg0NzIyMzk9dGhpc1snX2V4ZWN1dGluZ1Rlc3RMb2cnXVt0aGlzW18weDU3NDQoJzB4NmNmJyldW18weDU3NDQoJzB4OWEnKV0tMHgxXTtfMHg0NzIyMzkmJnRoaXNbXzB4NTc0NCgnMHg2ZDAnKV0oXzB4NDcyMjM5W18weDU3NDQoJzB4MzEnKV18fHZvaWQgMHgwLF8weDQxNTI0NFtfMHg1NzQ0KCcweDMxJyldfHx2b2lkIDB4MCkmJl8weDQ3MjIzOVtfMHg1NzQ0KCcweDRlJyldJiZfMHg0MTUyNDRb4oCLXzB4NTc0NCgnMHg0ZScpXSYmXzB4NDcyMjM5W18weDU3NDQoJzB4NGUnKV1bJ2xlbmd0aCddPjB4MCYmXzB4NDE1MjQ0W18weDU3NDQoJzB4NGUnKV1bJ2xlbmd0aCddPjB4MCYmX1snaXNFcXVhbCddKF8weDQxNTI0NFsnc3RhY2snXVsweDBdLF8weDQ3MjIzOVtfMHg1NzQ0KCcweDRlJyldWzB4MF0pP18weDQxNTI0NFtfMHg1NzQ0KCcweDRlJyldW18weDU3NDQoJzB4OWEnKV0+XzB4NDcyMjM5W18weDU3NDQoJzB4NGUnKV1bXzB4NTc0NCgnMHg5YScpXSYmKF8weDQ3MjIzOVsnc3RhY2snXT1fMHg0MTUyNDRbJ3N0YWNrJ10pOnRoaXNbXzB4NTc0NCgnMHg2Y2YnKV1bXzB4NTc0NCgnMHgyOScpXShfMHg0MTUyNDQpO31lbHNle3ZhciBfMHgzZTE4NDE9dGhpcyxfMHg1ZWI0NGE9X1tfMHg1NzQ0KCcweDkyJyldKHRoaXNbXzB4NTc0NCgnMHgxZDgnKV1bXzB4NTc0NCgnMHg1YTMnKV0oKSxmdW5jdGlvbihfMHg0MTUyNDQsXzB4MmJjMWJjKXt2YXIgXzB4MjA3MjNmO2lmKF9bXzB4NTc0NCgnMHhkNCcpXShfMHgyYmMxYmNbXzB4NTc0NCgnMHg0ZScpXSgpLGZ1bmN0aW9uKF8weDQxNTI0NCl7aWYoXzB4NTc0NCgnMHg2ZDEnKSE9PV8weDU3NDQoJzB4NmQxJykpe3RoaXNbXzB4NTc0NCgnMHg2ZDInKV1bXzB4NTc0NCgnMHgyOScpXSh7J3Rhc2snOl8weDQxNTI0NCwnY2FsbGJhY2snOl8weDJiYzFiY30pLHByb2Nlc3NbXzB4NTc0NCgnMHgyYWMnKV0odGhpc1tfMHg1NzQ0KCcweDZkMycpXVtfMHg1NzQ0KCcweDEwNycpXSh0aGlzKSk7fWVsc2V7dmFyIF8weDJiYzFiYz1fMHg0MTUyNDRbJ2ZpbGVJZCddKCk7aWYoXzB4MmJjMWJjKXt2YXIgXzB4NWViNDRhPV8weDNlMTg0MVtfMHg1NzQ0KCcweDFkOCcpXVtfMHg1NzQ0KCcweDMxZCcpXShfMHgyYmMxYmMpO2lmKF8weDVlYjQ0YVtfMHg1NzQ0KCcweDM4MCcpXSgpKXJldHVybiBfMHgyMDcyM2Y9XzB4NWViNDRhLCEweDE7fX19KSxfMHgyMDcyM2Ype3ZhciBfMHg1ZWI0NGE9XzB4NDE1MjQ0W18weDIwNzIzZlsna2V5J10oKV09XzB4NDE1MjQ0W18weDIwNzIzZltfMHg1NzQ0KCcweDFkMScpXSgpXXx8W107XzB4NWViNDRhWydwdXNoJ10oeydtZXNzYWdlJzpfMHgyYmMxYmNbXzB4NTc0NCgnMHgzMScpXSgpLCdzdGFjayc6X1tfMHg1NzQ0KCcweDE2NicpXShfMHgyYmMxYmNbJ3N0YWNrJ10oKSxmdW5jdGlvbihfMHg0MTUyNDQpe3JldHVybiBfMHgzZTE4NDFbXzB4NTc0NCgnMHg0N2MnKV0oXzB4NDE1MjQ0LF8weDQxNTI0NFtfMHg1NzQ0KCcweDFhZicpXSgpKTt9KX0pO31yZXR1cm4gXzB4NDE1MjQ0O30se30pfHx7fTtyZXR1cm4gX1tfMHg1NzQ0KCcweDE2NicpXShfMHg0MTUyNDQsZnVuY3Rpb24oXzB4NDE1MjQ0KXt2YXIgXzB4MWZhY2JkPXt9O3JldHVybiBfWydlYWNoJ10oXzB4NDE1MjQ0W18weDU3NDQoJzB4NGM4JyldKCksZnVuY3Rpb24oXzB4NDE1MjQ0KXtpZihfMHg1NzQ0KCcweDZkNCcpPT09J0VVZWd4Jyl7dmFyIF8weDIwNzIzZj1fMHg0MTUyNDRbXzB4NTc0NCgnMHhlJyldKCksXzB4NWViNDRhPSc6JytfW18weDU3NDQoJzB4NTg0JyldKF8weDIwNzIzZiksXzB4NWVkNDRjPV8weDFmYWNiZDtfMHgyMDcyM2ZbXzB4NTc0NCgnMHg5YScpXT4weDEmJl9bXzB4NTc0NCgnMHhkNCcpXShfW18weDU3NDQoJzB4NmQ1JyldKF8weDIwNzIzZixfMHgyMDcyM2ZbXzB4NTc0NCgnMHg5YScpXS0weDEpLGZ1bmN0aW9uKF8weDQxNTI0NCl7aWYoXzB4NTc0NCgnMHg2ZDYnKT09PV8weDU3NDQoJzB4NmQ3Jykpe2lmKF8weDJiYzFiY1snX2V4dGVuc2lvbiddW18weDU3NDQoJzB4NmQ4JyldKF8weDVlYjQ0YVtfMHg1NzQ0KCcweDQyNCcpXSkpcmV0dXJuIHZvaWQgXzB4MjA3MjNmKF8weDVlYjQ0YSk7XzB4NGNhOTYyKF8weDU3NDQoJzB4NmQ5JyksXzB4NDE1MjQ0KSxfMHgyYmMxYmNbXzB4NTc0NCgnMHgyOTUnKV0oXzB4NDE1MjQ0KTt9ZWxzZXtfMHg0MTUyNDQ9JzonK18weDQxNTI0NDt2YXIgXzB4MmJjMWJjPV8weDVlZDQ0Y1tfMHg0MTUyNDRdO18weDJiYzFiY3x8KF8weDJiYzFiYz17fSxfMHg1ZWQ0NGNbXzB4NDE1MjQ0XT1fMHgyYmMxYmMpLF8weDVlZDQ0Yz1fMHgyYmMxYmM7fX0pO3ZhciBfMHg0Y2E5NjI9X1tfMHg1NzQ0KCcweDE2NicpXShfMHg0MTUyNDRbXzB4NTc0NCgnMHg0YWQnKV0oKSxmdW5jdGlvbihfMHg0MTUyNDQpe3JldHVybiBfMHg0MTUyNDRbXzB4NTc0NCgnMHgxZDEnKV0oKTt9KTtfW18weDU3NDQoJzB4MTFkJyldKF8weDRjYTk2MikmJihfMHg0Y2E5NjI9dm9pZCAweDApLF8weDVlZDQ0Y1tfMHg1ZWI0NGFdPXsnaXNUZXN0JzohMHgwLCdmaXJzdEZhaWxpbmdPclNpbmdsZUV4ZWN1dGVkJzpfMHg0MTUyNDQ9PT1fMHgyYmMxYmN8fHZvaWQgMHgwLCduYW1lJzpfMHg1ZWI0NGFbJ3N1YnN0ciddKDB4MSksJ3RpbWUnOl8weDQxNTI0NFtfMHg1NzQ0KCcweDM0YicpXSgpLCdzbG93JzpfMHg0MTUyNDRbXzB4NTc0NCgnMHg0YTYnKV0oKSwnbGluZSc6XzB4NDE1MjQ0WydzdGFydFJhbmdlJ10oKT9fMHg0MTUyNDRbJ3N0YXJ0UmFuZ2UnXSgpW18weDU3NDQoJzB4MWIwJyldKCk6MHgxLCdsb2dzJzpfW18weDU3NDQoJzB4MTY2JyldKF8weDQxNTI0NFsnY29uc29sZU1lc3NhZ2VzJ10oKSxmdW5jdGlvbihfMHg0MTUyNDQpe2lmKF8weDU3NDQoJzB4NmRhJykhPT1fMHg1NzQ0KCcweDZkYicpKXt2YXIgXzB4MmJjMWJjPXsnbWVzc2FnZSc6XzB4NDE1MjQ0Wyd0ZXh0J10oKX07cmV0dXJuIF8weDQxNTI0NFtfMHg1NzQ0KCcweDJhNCcpXSgpJiYoXzB4MmJjMWJjWydsb2NhdGlvbiddPV8weDNlMTg0MVtfMHg1NzQ0KCcweDQ3YycpXShfMHg0MTUyNDQsXzB4NDE1MjQ0W18weDU3NDQoJzB4MmE0JyldKClbJ3BhdGgnXSgpKSksXzB4MmJjMWJjO31lbHNle3JldHVybiBfMHg0MTUyNDQmJiEofl8weDQxNTI0NFtfMHg1NzQ0KCcweDcwJyldKF8weDU3NDQoJzB4NmRjJykpfHx+XzB4NDE1MjQ0WydpbmRleE9mJ10oXzB4NTc0NCgnMHg2ZGQnKSkpO319KSwnZXJyb3JzJzpfW18weDU3NDQoJzB4MTY2JyldKF8weDQxNTI0NFtfMHg1NzQ0KCcweDJiYycpXSgpLGZ1bmN0aW9uKF8weDQxNTI0NCl7aWYoXzB4NTc0NCgnMHg2ZGUnKT09PV8weDU3NDQoJzB4NmRmJykpe3JldHVybiBzZXRUaW1lb3V0KF8weDJiYzFiYyxfMHg0MTUyNDQpO31lbHNle3JldHVybnsnbWVzc2FnZSc6XzB4NDE1MjQ0WydtZXNzYWdlJ10oKSwnc3RhY2snOl9bXzB4NTc0NCgnMHgxNjYnKV0oXzB4NDE1MjQ0W18weDU3NDQoJzB4NGUnKV0oKSxmdW5jdGnigItvbihfMHg0MTUyNDQpe3JldHVybiBfMHgzZTE4NDFbXzB4NTc0NCgnMHg0N2MnKV0oXzB4NDE1MjQ0LF8weDQxNTI0NFtfMHg1NzQ0KCcweDFhZicpXSgpKTt9KSwnYWN0dWFsJzpfMHg0MTUyNDRbXzB4NTc0NCgnMHgzZTYnKV0oKSwnZXhwZWN0ZWQnOl8weDQxNTI0NFsnZXhwZWN0ZWQnXSgpfTt9fSksJ2NvdmVyZWRGaWxlcyc6XzB4NGNhOTYyfTt9ZWxzZXt2YXIgXzB4MjQzM2FiPXZvaWQgMHgwO18weDEwN2I5NltfMHg1NzQ0KCcweDI1MycpXT1VP18weDNlMTg0MVtfMHg1NzQ0KCcweDRkJyldW18weDU3NDQoJzB4MjY3JyldOihfMHgyNDMzYWI9XzB4NDkwZGVmW18weDU3NDQoJzB4MjU0JyldKCdzaGE1MTInKSxfMHgyNDMzYWJbXzB4NTc0NCgnMHgyNTYnKV0obmV3IEJ1ZmZlcihfMHgyYTNhMzUsXzB4NTc0NCgnMHg3NicpKSksXzB4MjQzM2FiWydkaWdlc3QnXSgnYmFzZTY0JykpO319KSx7J3BhdGgnOl8weDQxNTI0NFtfMHg1NzQ0KCcweGUnKV0oKSwnYWN0aW9uJzpfMHgyMDcyM2YsJ3Rlc3RzJzpfMHgzZTE4NDFbXzB4NTc0NCgnMHg1MTYnKV0oXzB4MWZhY2JkKSwnZXJyb3JzJzpfMHg1ZWI0NGFbXzB4NDE1MjQ0W18weDU3NDQoJzB4MWQxJyldKCldfTt9KTt9fSxfMHgyYmMxYmNbXzB4NTc0NCgnMHgxMGQnKV1bXzB4NTc0NCgnMHg0N2MnKV09ZnVuY3Rpb24oXzB4NDE1MjQ0LF8weDJiYzFiYyl7aWYoXzB4NTc0NCgnMHg2ZTAnKSE9PV8weDU3NDQoJzB4NmUxJykpe3ZhciBfMHgyMDcyM2Y9eydwYXRoJzpfMHgyYmMxYmN9O3JldHVybiBfMHg0MTUyNDRbXzB4NTc0NCgnMHgyYmQnKV0oKT8oXzB4MjA3MjNmW18weDU3NDQoJzB4OGYnKV09XzB4NDE1MjQ0W18weDU3NDQoJzB4MmJkJyldKClbXzB4NTc0NCgnMHgxYjAnKV0oKSxfMHgyMDcyM2ZbXzB4NTc0NCgnMHgzNTYnKV09XzB4NDE1MjQ0W18weDU3NDQoJzB4MmJkJyldKClbXzB4NTc0NCgnMHgxYjEnKV0oKSk64oCLXzB4NDE1MjQ0WydsaW5lJ10oKSYmKF8weDIwNzIzZltfMHg1NzQ0KCcweDhmJyldPV8weDQxNTI0NFtfMHg1NzQ0KCcweDhmJyldKCkpLF8weDIwNzIzZltfMHg1NzQ0KCcweDNlNScpXT1fMHg0MTUyNDRbXzB4NTc0NCgnMHgzZTUnKV0oKSxfMHgyMDcyM2Y7fWVsc2V7cmV0dXJuIHRoaXNbXzB4NTc0NCgnMHgzOWEnKV07fX0sXzB4MmJjMWJjW18weDU3NDQoJzB4MTBkJyldWydfYnVpbGRBcnJheVRlc3RTdHJ1Y3R1cmUnXT1mdW5jdGlvbihfMHg0MTUyNDQpe3ZhciBfMHgyYmMxYmM9dGhpcztyZXR1cm4gX1tfMHg1NzQ0KCcweDE2NicpXShfMHg0MTUyNDQsZnVuY3Rpb24oXzB4NDE1MjQ0LF8weDIwNzIzZil7aWYoXzB4NDE1MjQ0W18weDU3NDQoJzB4M2Q2JyldPT09ITB4MClyZXR1cm4gZGVsZXRlIF8weDQxNTI0NFtfMHg1NzQ0KCcweDNkNicpXSxfMHg0MTUyNDQ7dmFyIF8weDNlMTg0MT1fMHgyMDcyM2ZbXzB4NTc0NCgnMHgxMTcnKV0oMHgxKSxfMHg1ZWI0NGE9XzB4NDkwZGVmW18weDU3NDQoJzB4M2Q3JyldKF8weDNlMTg0MSk7cmV0dXJueyduYW1lJzpfMHg1ZWI0NGEsJ2ludGVybmFsTmFtZSc6XzB4M2UxODQxLCd0ZXN0cyc6XzB4MmJjMWJjW18weDU3NDQoJzB4NTE2JyldKF8weDQxNTI0NCl9O30pO30sXzB4MmJjMWJjW18weDU3NDQoJzB4MTBkJyldW18weDU3NDQoJzB4MzllJyldPWZ1bmN0aW9uKF8weDQxNTI0NCxfMHgyYmMxYmMpe3ZhciBfMHgyMDcyM2Y9dGhpcyxfMHgzZTE4NDE9ZnVuY3Rpb24oXzB4NDE1MjQ0KXtyZXR1cm4gcHJvY2Vzc1tfMHg1NzQ0KCcweDJhYycpXShmdW5jdGlvbigpe3ZhciBfMHgyYmMxYmM9XzB4MjA3MjNmW18weDU3NDQoJzB4Mjg2JykrXzB4NDE1MjQ0W18weDU3NDQoJzB4NCcpXV07XzB4MmJjMWJjJiZfMHgyYmMxYmNbXzB4NTc0NCgnMHhlYycpXShfMHgyMDcyM2YsXzB4NDE1MjQ0KTt9KTt9LF8weDVlYjQ0YT1mdW5jdGlvbigpe2lmKCd6TU5xbychPT0nek1OcW8nKXt2YXIgXzB4MzUzMDk5PV8weDJiYzFiY1tiLTB4MV1bXzB4NTc0NCgnMHg5YScpXTt2W2JdPVtfMHgyOWZkYmIsXzB4MzUzMDk5LV8weDI5ZmRiYl07fWVsc2V7XzB4MjA3MjNmWydfd3NzJ109bmV3IF8weDRjYTk2Mih7J3BvcnQnOl8weDQxNTI0NCwndmVyaWZ5Q2xpZW50JzpmdW5jdGlvbihfMHg0MTUyNDQpe2lmKF8weDU3NDQoJzB4NmUyJyk9PT1fMHg1NzQ0KCcweDZlMycpKXt0aGlzW18weDU3NDQoJzB4MjMzJyldPXRoaXNbJ19saWNlbnNlVmVyaWZpY2F0aW9uUmVzdWx0J10oXzB4NDE1MjQ0LF8weDJiYzFiYyxfMHgyMDcyM2YpO31lbHNle3ZhciBfMHgyYmMxYmM9ITB4MTt0cnl7dmFyIF8weDIwNzIzZj1fMHg1ZWQ0NGNbJ3BhcnNlJ10oXzB4NDE1MjQ0W18weDU3NDQoJzB4NmU0JyldKTtfMHgyYmMxYmM9XzB4NTc0NCgnMHg2ZTUnKT09PV8weDIwNzIzZltfMHg1NzQ0KCcweDFhMycpXTt9Y2F0Y2goXzB4M2MwNTQzKXt9cmV0dXJuIF8weDJiYzFiYzt9fX0pLF8weDIwNzIzZlsnX3dzcyddWydvbiddKF8weDU3NDQoJzB4NmU2JyksZnVuY3Rpb24oXzB4NDE1MjQ0KXtfMHgyYTNhMzUoXzB4NTc0NCgnMHg2ZTcnKSksXzB4MjA3MjNmW18weDU3NDQoJzB4MWQ4JyldPV8weDJiYzFiYyxfMHg0MTUyNDRbXzB4NTc0NCgnMHgyYTInKV09ITB4MSxfMHg0MTUyNDRbXzB4NTc0NCgnMHg2NDInKV09ITB4MCwhXzB4MjA3MjNmW18weDU3NDQoJzB4YScpXVtfMHg1NzQ0KCcweDlhJyldJiZfMHgyMDcyM2ZbXzB4NTc0NCgnMHgxZDgnKV1bJ29uJ10oJ21lc3NhZ2UnLF8weDNlMTg0MSksXzB4MjA3MjNmWydfY29ubmVjdGlvbnMnXVsncHVzaCddKF8weDQxNTI0NCksXzB4NDE1MjQ0WydvbiddKCdtZXNzYWdlJyxmdW5jdGlvbihfMHgyYmMxYmMpe2lmKF8weDU3NDQoJzB4NmU4JykhPT1fMHg1NzQ0KCcweDZlOCcpKXtyZXR1cm4gXzB4M2UxODQxWydvbmNlJ10oXzB4NTc0NCgnMHgyMzAnKSxmdW5jdGlvbigpe3JldHVybiBfMHgyMDcyM2YoXzB4NDE1MjQ0KTt9KVtfMHg1NzQ0KCcweDIzMCcpXSgpO31lbHNle3ZhciBfMHgzZTE4NDE7dHJ5e18weDNlMTg0MT1KU09OWydwYXJzZSddKF8weDJiYzFiYyk7fWNhdGNoKF8weDQ5MjIwNil7aWYoXzB4NTc0NCgnMHg2ZTknKT09PV8weDU3NDQoJzB4NmU5Jykpe3JldHVybiB2b2lkIGNvbnNvbGVbJ2Vycm9yJ10oJ0ZhaWxl4oCLZFx4MjB0b1x4MjBkZXNlcmlhbGl6ZVx4MjBtZXNzYWdlXHgyMGZyb21ceDIwd2FsbGFieVx4MjBVSTpceDIwJytfMHgyYmMxYmMrJyxceDIwJysoXzB4NDkyMjA2JiZfMHg0OTIyMDZbXzB4NTc0NCgnMHgzMScpXSkpO31lbHNle3ZhciBfMHg1OTY1ZWY9SlNPTltfMHg1NzQ0KCcweDJkJyldKHRoaXNbJ19yZWFkRmlsZVN5bmMnXSh0aGlzW18weDU3NDQoJzB4NGQnKV1bJ19wYWNrYWdlSnNvbiddKSk7XzB4NDkyMjA2WydwYWNrYWdlSlNPTiddPXsnZGVwZW5kZW5jaWVzJzpfMHg1OTY1ZWZbXzB4NTc0NCgnMHgyZjInKV0sJ2RldkRlcGVuZGVuY2llcyc6XzB4NTk2NWVmW18weDU3NDQoJzB4NmVhJyldfTt9fV8weDJhM2EzNShfMHg1NzQ0KCcweDZlYicpLF8weDNlMTg0MVsndHlwZSddKTt2YXIgXzB4MWZhY2JkPV8weDIwNzIzZltfMHgzZTE4NDFbXzB4NTc0NCgnMHg0JyldXTtfMHgxZmFjYmQmJl8weDFmYWNiZFtfMHg1NzQ0KCcweGVjJyldKF8weDIwNzIzZixfMHgzZTE4NDEsXzB4NDE1MjQ0KTt9fSksXzB4NDE1MjQ0WydvbiddKF8weDU3NDQoJzB4MjMwJyksZnVuY3Rpb24oKXtfMHgyYTNhMzUoXzB4NTc0NCgnMHg2ZWMnKSksXzB4MjA3MjNmW18weDU3NDQoJzB4YScpXT1fMHgyMDcyM2ZbJ19jb25uZWN0aW9ucyddW18weDU3NDQoJzB4MTY1JyldKGZ1bmN0aW9uKF8weDJiYzFiYyl7aWYoXzB4NTc0NCgnMHg2ZWQnKT09PV8weDU3NDQoJzB4NmVkJykpe3JldHVybiBfMHgyYmMxYmMhPV8weDQxNTI0NDt9ZWxzZXtyZXR1cm4gXzB4MmJjMWJjWydfZnMnXVsnc2V0dXAnXShfMHg0MTUyNDRbJ2ZpbGVzJ10sXzB4MjA3MjNmW18weDU3NDQoJzB4NmVlJyldLF8weDJiYzFiY1tfMHg1NzQ0KCcweDRkJyldW18weDU3NDQoJzB4NjAnKV0oKSk7fX0pLCFfMHgyMDcyM2ZbXzB4NTc0NCgnMHhhJyldW18weDU3NDQoJzB4OWEnKV0mJl8weDIwNzIzZlsnX21vZGVsJ11bXzB4NTc0NCgnMHgxMzYnKV0oXzB4NTc0NCgnMHgzMScpLF8weDNlMTg0MSk7fSksXzB4MjA3MjNmW18weDU3NDQoJzB4MTFhJyldKHsndHlwZSc6J3VpOmhhbmRzaGFrZScsJ3Byb2plY3QnOnsnbmFtZSc6XzB4MjA3MjNmW18weDU3NDQoJzB4MWQ4JyldW18weDU3NDQoJzB4NTc2JyldKCksJ3BhdGgnOl8weDIwNzIzZltfMHg1NzQ0KCcweDFkOCcpXVsnY29uZmlnRmlsZVBhdGgnXSgpLCdjb25maWcnOl8weDIwNzIzZltfMHg1NzQ0KCcweDFkOCcpXVtfMHg1NzQ0KCcweDZlZicpXSgpfSwndmVyc2lvbic6XzB4MjA3MjNmW18weDU3NDQoJzB4MWQ4JyldW18weDU3NDQoJzB4MmViJyldKCl9LF8weDQxNTI0NCk7fSksXzB4MmEzYTM1KF8weDU3NDQoJzB4NmYwJyksXzB4NDE1MjQ0KTt9fTtfMHgyMDcyM2ZbJ19jaGVja1BvcnQnXShfMHgyOWZkYmIpW18weDU3NDQoJzB4ODknKV0oZnVuY3Rpb24oXzB4NDE1MjQ0KXtpZihfMHg0MTUyNDQpdHJ5e2lmKCdXVnlhQic9PT1fMHg1NzQ0KCcweDZmMScpKXtfMHgyMDcyM2ZbXzB4NTc0NCgnMHg1OWEnKV09XzB4MWZhY2JkWydjcmVhdGVTZXJ2ZXInXShmdW5jdGlvbihfMHg0MTUyNDQsXzB4MmJjMWJjKXtpZihfMHg1NzQ0KCcweDZmMicpIT09XzB4NTc0NCgnMHg2ZjMnKSl7XzB4MmJjMWJjW18weDU3NDQoJzB4NTljJyldKDB4YzgseydDb250ZW50LVR5cGUnOl8weDU3NDQoJzB4NTlkJyl9KSxfMHgyYmMxYmNbXzB4NTc0NCgnMHgyNWUnKV0oXzB4NTdhMGQ0KSxfMHgyYmMxYmNbXzB4NTc0NCgnMHgzZScpXSgpO31lbHNle3JldHVybiB0aGlzW18weDU3NDQoJzB4MzAxJyldP19bJ2lzQXJyYXknXSh0aGlzW18weDU3NDQoJzB4MzAxJyldKT90aGlzWydfcmFuZ2UnXVsweDBdOnRoaXNbJ19yYW5nZSddW18weDU3NDQoJzB4MWIwJyldKCk6dm9pZCAweDA7fX0pWydvbiddKCdlcnJvcicsZnVuY3Rpb24oKXtpZihfMHg1NzQ0KCcweDZmNCcpPT09XzB4NTc0NCgnMHg2ZjUnKSl7XzB4NGNhOTYyWydsZW5ndGgnXSYmKF8weDVlZDQ0Yz0hMHgxLF9bXzB4NTc0NCgnMHhkNCcpXShfMHg0Y2E5NjIsZnVuY3Rpb24oXzB4NTFkMTk1KXt2YXIgXzB4M2QyNTRlPV9bXzB4NTc0NCgnMHgxY2MnKV0oXzB4MjA3MjNmLF8weDUxZDE5NVsnY2hhcmFjdGVyT2Zmc2V0J10sL1xuLylbJ2xlbmd0aCddLF8weDJiMGY0ZD1fMHgzZDI1NGUrXzB4NTFkMTk1WydsaW5lT2Zmc2V0J107MHgwPT09XzB4NTFkMTk1W18weDU3NDQoJzB4MzkwJyldP18weDFmYWNiZFtfMHg1NzQ0KCcweDY0MCcpXSgweDAsMHgwLHsnc3RhcnQnOl8weDJiMGY0ZCwnZW5kJzpfMHgyYjBmNGR9KTpfMHg1MWQxOTVbJ2xpbmVEaWZmZXJlbmNlJ10+MHgwP18weDFmYWNiZFtfMHg1NzQ0KCcweDM5MScpXShfMHgyYjBmNGQsXzB4NTFkMTk1W18weDU3NDQoJzB4MzkwJyldLHsnc3RhcnQnOl8weDJiMGY0ZCwnZW5kJzpfMHgyYjBmNGQrMHgxfSk6XzB4MWZhY2JkW18weDU3NDQoJzB4MzkxJyldKF8weDJiMGY0ZCxfMHg1MWQxOTVbXzB4NTc0NCgnMHgzOTAnKV0seydzdGFydCc6XzB4MmIwZjRkLCdlbmQnOl8weDJiMGY0ZC1fMHg1MWQxOTVbXzB4NTc0NCgnMHgzOTAnKV19KTt9KSk7fWVsc2V7cmV0dXJuIF8weDVlYjQ0YSgpO319KVtfMHg1NzQ0KCcweDU5ZScpXShfMHg1NzQ0KCcweDYxOCcpLGZ1bmN0aW9uKCl7aWYoXzB4NTc0NCgnMHg2ZjYnKT09PV8weDU3NDQoJzB4NmY3Jykpe18weDNlMTg0MSgnUGhhbnRvbUpzXHgyMGZhaWx1cmU6XHgyMCVzLFx4MjByZWN5Y2xpbmdceDIwcGhhbnRvbVx4MjBpbnN0YW5jZVx4MjAjJXMnLF8weDJiYzFiYyxfMHg0MTUyNDQpLF8weDIwNzIzZltfMHg1NzQ0KCcweGMnKV1bXzB4NTc0NCgnMHgyOTUnKV0oXzB4NDE1MjQ0KTt9ZWxzZXtyZXR1cm4gXzB4NWViNDRhKCk7fX0pW18weDU3NDQoJzB4NTlmJyldKF8weDQxNTI0NCk7fWVsc2V7XzB4MjA3MjNmPUpTT05bXzB4NTc0NCgnMHgyZCcpXShfMHg0MTUyNDQpO319Y2F0Y2goXzB4NWVmM2NhKXtfMHg1ZWI0NGEoKTt9ZWxzZSBfMHg1ZWI0NGEoKTt9KTt9LF8weDJiYzFiY1sncHJvdG90eXBlJ11bXzB4NTc0NCgnMHgxMWEnKV09ZnVuY3Rpb24oXzB4NDE1MjQ0LF8weDJiYzFiYyl7XzB4MmJjMWJjJiYoXzB4NTc0NCgnMHgzJyk9PT1fMHg0MTUyNDRbXzB4NTc0NCgnMHg0JyldPyhfMHgyYmMxYmNbXzB4NTc0NCgnMHg1JyldPTB4MCxfMHg0MTUyNDRbXzB4NTc0NCgnMHg2JyldPV8weDJiYzFiY1tfMHg1NzQ0KCcweDUnKV0rKyk6XzB4NTc0NCgnMHgyYTMnKT09PV8weDQxNTI0NFtfMHg1NzQ0KCcweDQnKV0mJihfMHg0MTUyNDRbXzB4NTc0NCgnMHg2JyldPV8weDJiYzFiY1snX3NvbWVSZXN1bHRzUmVzcG9uc2VTZXFOdW0nXSsrKSksXzB4MmEzYTM1KCdPdXRnb2luZ1x4MjBtZXNzYWdlXHgyMCVzJyxfMHg0MTUyNDRbXzB4NTc0NCgnMHg0JyldKTt2YXIgXzB4MjA3MjNmPUpTT05bXzB4NTc0NCgnMHg4JyldKF8weDQxNTI0NCk7XzB4MmJjMWJjP18weDJiYzFiY1tfMHg1NzQ0KCcweDknKV0oXzB4MjA3MjNmKTpfW18weDU3NDQoJzB4ZDQnKV0odGhpc1snX2Nvbm5lY3Rpb25zJ10sZnVuY3Rpb24oXzB4NDE1MjQ0KXtyZXR1cm4gXzB4NDE1MjQ0WydzZW5kJ10oX+KAizB4MjA3MjNmKTt9KTt9LF8weDJiYzFiY1tfMHg1NzQ0KCcweDEwZCcpXVtfMHg1NzQ0KCcweDY5NScpXT1mdW5jdGlvbigpe2lmKF8weDU3NDQoJzB4NmY4Jyk9PT1fMHg1NzQ0KCcweDZmOCcpKXt2YXIgXzB4NDE1MjQ0PXRoaXM7cmV0dXJuIFFbJ2FsbCddKF9bJ21hcCddKF8weDEwN2I5NixmdW5jdGlvbihfMHgyYmMxYmMpe3JldHVybiBfMHg0MTUyNDRbJ19jaGVja1BvcnQnXShfMHgyYmMxYmMpO30pKVtfMHg1NzQ0KCcweDg5JyldKGZ1bmN0aW9uKF8weDQxNTI0NCl7cmV0dXJuIF9bXzB4NTc0NCgnMHgxMmUnKV0oXzB4NDE1MjQ0LGZ1bmN0aW9uKF8weDQxNTI0NCl7cmV0dXJuISFfMHg0MTUyNDQ7fSk7fSlbXzB4NTc0NCgnMHg4OScpXShmdW5jdGlvbihfMHg0MTUyNDQpe2lmKCdkSWxwYic9PT1fMHg1NzQ0KCcweDZmOScpKXtyZXR1cm4gXzB4NDE1MjQ0fHxRW18weDU3NDQoJzB4MWI3JyldKG5ldyBFcnJvcignQ2FuXHgyMG5vdFx4MjBmaW5kXHgyMGFceDIwZnJlZVx4MjBwb3J0JykpO31lbHNle3JldHVybiB0aGlzW18weDU3NDQoJzB4NTM5JyldW18weDQxNTI0NF07fX0pO31lbHNle3RoaXNbXzB4NTc0NCgnMHgzOWEnKV0mJnRoaXNbXzB4NTc0NCgnMHgzOWEnKV1bXzB4NTc0NCgnMHg0NTInKV0oXzB4NDE1MjQ0LF8weDJiYzFiYyxfMHgyMDcyM2YpO319LF8weDJiYzFiY1sncHJvdG90eXBlJ11bXzB4NTc0NCgnMHg0YWYnKV09ZnVuY3Rpb24oXzB4NDE1MjQ0KXt2YXIgXzB4MmJjMWJjPWZ1bmN0aW9uKF8weDJiYzFiYyl7cmV0dXJuIGZ1bmN0aW9uKF8weDIwNzIzZil7aWYoXzB4NTc0NCgnMHg2ZmEnKSE9PV8weDU3NDQoJzB4NmZiJykpe3ZhciBfMHgzZTE4NDE9XzB4NWViNDRhW18weDU3NDQoJzB4NTliJyldKClbXzB4NTc0NCgnMHg1OWUnKV0oXzB4NTc0NCgnMHg3YycpLGZ1bmN0aW9uKF8weDJiYzFiYyl7aWYoXzB4NTc0NCgnMHg2ZmMnKSE9PV8weDU3NDQoJzB4NmZjJykpe18weDQxNTI0NFtfMHg1NzQ0KCcweDU5YScpXSYmXzB4NDE1MjQ0W18weDU3NDQoJzB4NTlhJyldW18weDU3NDQoJzB4MjMwJyldKCk7fWVsc2V7cmV0dXJuIF8weDIwNzIzZihfMHgyYmMxYmMmJidFQUREUk5PVEFWQUlMJz09PV8weDJiYzFiY1tfMHg1NzQ0KCcweDYwNScpXT9fMHg0MTUyNDQ6MHgwKTt9fSlbXzB4NTc0NCgnMHg1OWUnKV0oXzB4NTc0NCgnMHg2MTgnKSxmdW5jdGlvbigpe2lmKF8weDU3NDQoJzB4NmZkJykhPT1fMHg1NzQ0KCcweDZmZCcpKXtyZXR1cm4gXzB4NDE1MjQ0WydkaXNwb3NlJ10oKTt9ZWxzZXtyZXR1cm4gXzB4M2UxODQxW18weDU3NDQoJzB4NTllJyldKF8weDU3NDQoJzB4MjMwJyksZnVuY3Rpb24oKXtyZXR1cm4gXzB4MjA3MjNmKF8weDQxNTI0NCk7fSlbXzB4NTc0NCgnMHgyMzAnKV0oKTt9fSlbXzB4NTc0NCgnMHg1OWYnKV0oXzB4NDE1MjQ0LF8weDJiYzFiYyk7fWVsc2V7cmV0dXJuIF9bXzB4NTc0NCgnMHg2ZmUnKV0oXzB4NDE1MjQ0W18weDU3NDQoJzB4NmU0JyldKTt9fTt9O3JldHVybiBRWydwcm9taXNlJ10oXzB4MmJjMWJjKF8weDU3NDQoJzB4MWZmJykpKVtfMHg1NzQ0KCcweDg5JyldKGZ1bmN0aW9uKF8weDQxNTI0NCl7aWYoXzB4NTc0NCgnMHg2ZmYnKSE9PV8weDU3NDQoJzB4NzAwJykpe3JldHVybiBfMHg0MTUyNDQ/UVsncHJvbWlzZSddKF8weDJiYzFiYygnMTI3LjAuMC4xJykpOjB4MDt9ZWxzZXt2YXIgXzB4NTAyYmExPXRoaXM7cmV0dXJuIF8weDUwMmJhMVsnX3dvcmtlclBvb2wnXVtfMHg1NzQ0KCcweGQnKV0oXzB4NDE1MjQ0KTt9fSlbXzB4NTc0NCgnMHg4OScpXShmdW5jdGlvbihfMHg0MTUyNDQpe3JldHVybiBfMHg0MTUyNDQ/UVtfMHg1NzQ0KCcweDE4MScpXShfMHgyYmMxYmMoXzB4NTc0NCgnMHgxZGQnKSkpOjB4MDt9KTt9LF8weDJiYzFiY1tfMHg1NzQ0KCcweDEwZCcpXVtfMHg1NzQ0KCcweDExMCcpXT1mdW5jdGlvbigpe3ZhciBfMHg0MTUyNDQ9dGhpcztfMHg0MTUyNDRbXzB4NTc0NCgnMHg1MjUnKV0mJl8weDQxNTI0NFtfMHg1NzQ0KCcweDUyNScpXVtfMHg1NzQ0KCcweDIzMCcpXSgpLF8weDQxNTI0NFtfMHg1NzQ0KCcweDU5YScpXSYmXzB4NDE1MjQ0W18weDU3NDQoJzB4NTlhJyldWydjbG9zZSddKCk7fSxfMHgyYmMxYmM7fWVsc2V7dGhpc1tfMHg1NzQ0KCcweDc3JyldPSEweDAsdGhpc1tfMHg1NzQ0KCcweDE4NCcpXSYmKHRoaXNbXzB4NTc0NCgnMHgxODQnKV1bXzB4NTc0NCgnMHgyMzAnKV0oKSxkZWxldGUgdGhpc1tfMHg1NzQ0KCcweDY5JyldKTt9fShFdmVudEVtaXR0ZXIpO18weDJiYzFiY1snZXhwb3J0cyddPV8weDJhNDhhZjt9LHsnLuKAiy4vLi4vdXRpbHMnOjB4MWUsJy4uL3NlcnZlci9kb2N1bWVudEluRWRpdG9yJzoweGMsJ2h0dHAnOnZvaWQgMHgwLCduZXQnOnZvaWQgMHgwLCd1cmwnOnZvaWQgMHgwLCd3cyc6dm9pZCAweDB9XSwyNTpbZnVuY3Rpb24oXzB4NGRhMzQsXzB4YmJhOWI1LF8weDFkZTE0OCl7dmFyIF8weDQ3NTliNz1fMHg0ZGEzNChfMHg1NzQ0KCcweGUnKSksXzB4MWVmM2EwPV8weDRkYTM0KF8weDU3NDQoJzB4NzAxJykpLF8weDQ0OTRjYz1fMHg0ZGEzNChfMHg1NzQ0KCcweDcwMicpKSxfMHgyZGVlZGY9XzB4NGRhMzQoJ2dyYWNlZnVsLWZzJyksXzB4MjdiMzkyPW5ldyBNYXAoKSxfMHgzMGJiNGE9ZnVuY3Rpb24oXzB4NGRhMzQsXzB4YmJhOWI1LF8weDFkZTE0OCl7XzB4NGRhMzRbJ3NldCddKHsnQ2FjaGUtQ29udHJvbCc6J3B1YmxpYyxceDIwbWF4LWFnZT04NjQwMCcsJ0V4cGlyZXMnOm5ldyBEYXRlKERhdGVbXzB4NTc0NCgnMHg3MDMnKV0oKSsweDUyNjVjMDApWyd0b1VUQ1N0cmluZyddKCl9KSxfMHg0ZGEzNFtfMHg1NzQ0KCcweDQnKV0oXzB4NDQ5NGNjW18weDU3NDQoJzB4NzA0JyldKF8weDFkZTE0OCxfMHg1NzQ0KCcweDcwNScpKSksXzB4NGRhMzRbXzB4NTc0NCgnMHgxYzEnKV0oMHhjOClbXzB4NTc0NCgnMHgzZScpXShfMHhiYmE5YjUpO307XzB4YmJhOWI1WydleHBvcnRzJ109eydjcmVhdGUnOmZ1bmN0aW9uKF8weDRkYTM0LF8weGJiYTliNSl7dmFyIF8weDFkZTE0OD1sb2dnZXJbXzB4NTc0NCgnMHg1OCcpXShfMHg1NzQ0KCcweDgzJykpW18weDU3NDQoJzB4NzA2JyldLF8weDQ0OTRjYz1fMHg0ZGEzNFsnbWFpbiddW18weDU3NDQoJzB4NzA3JyldP18weDRkYTM0W18weDU3NDQoJzB4NzA4JyldWydjYWNoZSddOl8weDI3YjM5MjtyZXR1cm4gXzB4NGRhMzRbJ21haW4nXVtfMHg1NzQ0KCcweDcwOScpXT1fMHg0ZGEzNFsnbWFpbiddW18weDU3NDQoJzB4NzA5JyldP18weDRkYTM0WydtYWluJ11bXzB4NTc0NCgnMHg3MDknKV06XzB4MmRlZWRmWydyZWFkRmlsZSddLF8weDRkYTM0W18weDU3NDQoJzB4NzBhJyldJiYoXzB4NGRhMzRbJ2FsdCddW18weDU3NDQoJzB4NzA3JyldfHwoXzB4NGRhMzRbJ2FsdCddW18weDU3NDQoJzB4NzA3JyldPXsnZ2V0JzpmdW5jdGlvbigpe3JldHVybiBudWxsO30sJ3NldCc6ZnVuY3Rpb24oKXtyZXR1cm4gbnVsbDt9fSksXzB4NGRhMzRbXzB4NTc0NCgnMHg3MGEnKV1bXzB4NTc0NCgnMHg3MDknKV09XzB4NGRhMzRbXzB4NTc0NCgnMHg3MGEnKV1bXzB4NTc0NCgnMHg3MDknKV0/XzB4NGRhMzRbXzB4NTc0NCgnMHg3MGEnKV1bJ3JlYWQnXTpfMHgyZGVlZGZbJ3JlYWRGaWxlJ10pLGZ1bmN0aW9uKF8weDJkZWVkZixfMHgyN2IzOTIpe2lmKF8weDU3NDQoJzB4NzBiJyk9PT0ndGlIdUYnKXt2YXIgXzB4MmU5YTQ2PV8weDFlZjNhMChfMHgyZGVlZGYpW18weDU3NDQoJzB4NjVlJyldOycvJz09PV8weDJlOWE0NiYmKF8weDJlOWE0Nj0nJyk7dmFyIF8weDcxNmVmYz1fMHg0ZGEzNFtfMHg1NzQ0KCcweDcwOCcpXVtfMHg1NzQ0KCcweDcwYycpXTtfMHgxZGUxNDgoJ1ByZXBhcmluZ1x4MjB0b1x4MjBzZXJ2ZVx4MjAlcycsXzB4MmU5YTQ2fHxfMHg3MTZlZmMpO3ZhciBfMHhlN2YxMWQ9XzB4NDc1OWI3Wydub3JtYWxpemUnXShfMHg0NzU5YjdbXzB4NTc0NCgnMHg1NCcpXShfMHg3MTZlZmMsXzB4MmU5YTQ2KSksXzB4MjdkMWI4PV8weDQ0OTRjY1tfMHg1NzQ0KCcweDM4NicpXShfMHhlN2YxMWQpO2lmKF9bXzB4NTc0NCgnMHgxNDEnKV0oXzB4MjdkMWI4KXx8XzB4MjdkMWI4IGluc3RhbmNlb2YgQnVmZmVyKV8weDFkZTE0OCgnU2VydmluZ1x4MjAlc1x4MjBmcm9tXHgyMGNhY2hlJyxfMHgyZTlhNDZ8fF8weDcxNmVmYyksXzB4MzBiYjRhKF8weDI3YjM5MixfMHgyN2QxYjgsXzB4ZTdmMTFkKTtlbHNle3ZhciBfMHgzMDI0ZDU9ZnVuY3Rpb24oXzB4NGRhMzQsXzB4MWVmM2EwLF8weDQ0OTRjYyxfMHgyZGVlZGYpe18weDQ0OTRjYz9fMHg0ZGEzND8oXzB4NzE2ZWZjPV8weDRkYTM0W18weDU3NDQoJzB4NzBjJyldLF8weDFkZTE0OChfMHg1NzQ0KCcweDcwZCcpLF8weDJlOWE0Nnx8XzB4NzE2ZWZjKSxfMHhlN2YxMWQ9XzB4NDc1OWI3W18weDU3NDQoJzB4NTBjJyldKF8weDQ3NTliN1tfMHg1NzQ0KCcweDU0JyldKF8weDcxNmVmYyxfMHgyZTlhNDYpKSxfMHg0ZGEzNFtfMHg1NzQ0KCcweDcwOScpXShfMHhlN2YxMWQsXzB4MzAyNGQ1W18weDU3NDQoJzB4MTA3JyldKG51bGwsbnVsbCxfMHg0ZGEzNFsnY2FjaGUnXSkpKTooXzB4MWRlMTQ4KCdFcnJvclx4MjB3aGVuXHgyMHJlYWRpbmdceDIwZmlsZVx4MjAlcyxceDIwJXMnLF8weGU3ZjExZCxfMHg0NDk0Y2MmJl8weDQ0OTRjY1tfMHg1NzQ0KCcweDMxJyldfHxfMHg1NzQ0KCcweGUwJykpLF8weGJiYTliNSYmY29uc29sZVtfMHg1NzQ0KCcweDdjJyldKCdUcnlpbmdceDIwdG9ceDIwYWNjZXNzXHgyMG1pc3NpbmdceDIwcmVzb3VyY2VceDIwb3JceDIwQVBJOlx4MjAnK18weDJlOWE0NiksXzB4MjdiMzkyW18weDU3NDQoJzB4MWMxJyldKDB4MTk0KVtfMHg1NzQ0KCcweDNlJyldKCkpOihfMHgxZWYzYTBbXzB4NTc0NCgnMHg3OCcpXShfMHhlN2YxMWQsXzB4MmRlZWRmKSxfMHgzMGJiNGEoXzB4MjdiMzkyLF8weDJkZWVkZixfMHhlN2YxMWQpKTt9O18weDFkZTE0OChfMHg1NzQ0KCcweDcwZScpLF8weDJlOWE0Nnx8XzB4NzE2ZWZjKSxfMHg0ZGEzNFtfMHg1NzQ0KCcweDcwOCcpXVtfMHg1NzQ0KCcweDcwOScpXShfMHhlN2YxMWQsXzB4MzAyNGQ1W18weDU3NDQoJzB4MTA3JyldKG51bGwsXzB4NGRhMzRbXzB4NTc0NCgnMHg3MGEnKV0sXzB4NDQ5NGNjKSk7fX1lbHNle3RyeXtfMHg0ZGEzNFtfMHg1NzQ0KCcweDE5NScpXVtfMHg1NzQ0KCcweDIzMCcpXSgpO31jYXRjaChfMHgyYTlmNjUpe319fTt9fTt9LHsnZ3JhY2VmdWwtZnMnOnZvaWQgMHgwLCdtaW1lJzp2b2lkIDB4MCwncGFyc2V1cmwnOnZvaWQgMHgwLCdwYXRoJzp2b2lkIDB4MH1dLDI2OltmdW5jdGlvbihfMHhiZTcyNDgsXzB4NThlZGI3LF8weDNlYjRiZSl7dmFyIF8weDVhMTEyMT0oXzB4YmU3MjQ4KCdmcycpLF8weGJlNzI0OCgncGF0aCcpKSxfMHgxNWRmYjU9XzB4YmU3MjQ4KCdjaGlsZF9wcm9jZXNzJylbXzB4NTc0NCgnMHg3MGYnKV0sXzB4NzdhN2JmPWxvZ2dlcltfMHg1NzQ0KCcweDU4JyldKF8weDU3NDQoJzB4NzEwJykpW18weDU3NDQoJzB4NWEnKV0sXzB4OTgyZDZjPV8weGJlNzI0OChfMHg1NzQ0KCcweGZmJykpLF8weDkxZjgyZD1fMHhiZTcyNDgoXzB4NTc0NCgnMHg3MTEnKSksXzB4MjAwOGQzPV8weDU3NDQoJzB4NzEyJyksXzB4MTRlZDAzPWZ1bmN0aW9uKF8weGJlNzI0OCl7dmFyIF8weDU4ZWRiNz10aGlzO18weDU4ZWRiN1snX3Byb2plY3QnXT1fMHhiZTcyNDgsXzB4NThlZGI3Wydfbm9kZVBhdGgnXT1fMHhiZTcyNDhbXzB4NTc0NCgnMHg2MCcpXSgpW18weDU3NDQoJzB4NjcnKV1bXzB4NTc0NCgnMHgxMDMnKV0sXzB4NThlZGI3W18weDU3NDQoJzB4NWUnKV09XzB4YmU3MjQ4W18w4oCLeDU3NDQoJzB4NjAnKV0oKVtfMHg1NzQ0KCcweDcxMycpXSxfMHg1OGVkYjdbXzB4NTc0NCgnMHg3MTQnKV09XzB4YmU3MjQ4W18weDU3NDQoJzB4NjAnKV0oKVtfMHg1NzQ0KCcweDcxNScpXSxfMHg1OGVkYjdbXzB4NTc0NCgnMHg3MTYnKV09XzB4YmU3MjQ4W18weDU3NDQoJzB4NjAnKV0oKVtfMHg1NzQ0KCcweDcxNycpXSxfMHg1OGVkYjdbXzB4NTc0NCgnMHg2NmYnKV09XzB4YmU3MjQ4W18weDU3NDQoJzB4NTdiJyldKCksXzB4NThlZGI3W18weDU3NDQoJzB4NTEyJyldPV8weDVhMTEyMVtfMHg1NzQ0KCcweDU0JyldKF8weGJlNzI0OFtfMHg1NzQ0KCcweDgxJyldLCdub2RlX21vZHVsZXMnKTt0cnl7XzB4NThlZGI3W18weDU3NDQoJzB4NTExJyldPV8weDVhMTEyMVsnam9pbiddKF8weDVhMTEyMVtfMHg1NzQ0KCcweDIwOCcpXShfMHg5MWY4MmRbXzB4NTc0NCgnMHg3MTgnKV0oXzB4NThlZGI3Wydfbm9kZU1vZHVsZXMnXSxfMHg1NzQ0KCcweDUxMycpKSksXzB4NTc0NCgnMHg3MTknKSk7fWNhdGNoKF8weDI0NzUyYSl7fV8weDU4ZWRiN1snX3BhcmFtcyddPV8weGJlNzI0OFsnc2V0dGluZ3MnXSgpW18weDU3NDQoJzB4NjcnKV1bXzB4NTc0NCgnMHg3ZScpXSxfMHg1OGVkYjdbXzB4NTc0NCgnMHgxMDknKV09XzB4YmU3MjQ4W18weDU3NDQoJzB4NjAnKV0oKVtfMHg1NzQ0KCcweDcxYScpXVtfMHg1NzQ0KCcweDMwZScpXSxfMHg1OGVkYjdbJ190ZXN0RnJhbWV3b3JrJ109XzB4YmU3MjQ4W18weDU3NDQoJzB4NjAnKV0oKVtfMHg1NzQ0KCcweDdmJyldLF8weDU4ZWRiN1snX2N3ZCddPXByb2Nlc3NbJ2VudiddW18weDU3NDQoJzB4MTNmJyldfHxfMHg1OGVkYjdbXzB4NTc0NCgnMHg2NmYnKV0/cHJvY2Vzc1tfMHg1NzQ0KCcweDJjYicpXSgpOl8weGJlNzI0OFtfMHg1NzQ0KCcweDVjJyldLF8weDU4ZWRiN1tfMHg1NzQ0KCcweDg1JyldPV8weGJlNzI0OFtfMHg1NzQ0KCcweDg1JyldLF8weDU4ZWRiN1tfMHg1NzQ0KCcweDcxYicpXT1fMHhiZTcyNDhbXzB4NTc0NCgnMHg3MWMnKV0sXzB4NThlZGI3WydfcmVwb3J0VW5oYW5kbGVkUHJvbWlzZXMnXT0hIV8weGJlNzI0OFtfMHg1NzQ0KCcweDYwJyldKClbXzB4NTc0NCgnMHg2MScpXSxfMHg1OGVkYjdbJ19tYXhMb2dFbnRyeVNpemUnXT1fMHhiZTcyNDhbXzB4NTc0NCgnMHg2MCcpXSgpW18weDU3NDQoJzB4NjQnKV0sXzB4NThlZGI3Wydfd29ya2VyUG9vbCddPW5ldyBfMHg5ODJkNmMoXzB4NThlZGI3WydfcHJvamVjdCddLHsnY3JlYXRlJzpfW18weDU3NDQoJzB4MTA3JyldKF8weDU4ZWRiN1tfMHg1NzQ0KCcweDcxZCcpXSxfMHg1OGVkYjcpLCdyZWN5Y2xlJzpfW18weDU3NDQoJzB4MTA3JyldKF8weDU4ZWRiN1tfMHg1NzQ0KCcweDcxZScpXSxfMHg1OGVkYjcpLCdoZWFsdGh5JzpfWydiaW5kJ10oXzB4NThlZGI3W18weDU3NDQoJzB4NzFmJyldLF8weDU4ZWRiNyksJ3ByZXBhcmUnOl9bJ2JpbmQnXShfMHg1OGVkYjdbXzB4NTc0NCgnMHgxOWUnKV0sXzB4NThlZGI3KX0pLF8weDU4ZWRiN1snX3dvcmtlclBvb2wnXVtfMHg1NzQ0KCcweDEwZicpXShfMHg1OGVkYjdbJ19jd2QnXSk7fTtfMHgxNGVkMDNbJ3Byb3RvdHlwZSddPXsncnVuJzpmdW5jdGlvbihfMHhiZTcyNDgpe2lmKF8weDU3NDQoJzB4NzIwJykhPT1fMHg1NzQ0KCcweDcyMScpKXt2YXIgXzB4NThlZGI3PXRoaXM7cmV0dXJuIF8weDU4ZWRiN1tfMHg1NzQ0KCcweGMnKV1bXzB4NTc0NCgnMHgxMGMnKV0oXzB4YmU3MjQ4KTt9ZWxzZXt2YXIgXzB4M2E0OGZkPV8weGJlNzI0OFsnaW5kZXhPZiddKF8weDk4MmQ2YyxfMHgxNWRmYjUpO18weDNhNDhmZCE9PS0weDEmJihfMHgxNWRmYjU9XzB4M2E0OGZkKzB4MSk7fX0sJ2NhbmNlbCc6ZnVuY3Rpb24oXzB4YmU3MjQ4KXtpZihfMHg1NzQ0KCcweDcyMicpPT09J2NZQnVqJyl7dmFyIF8weDU4ZWRiNz10aGlzO3JldHVybiBfMHg1OGVkYjdbXzB4NTc0NCgnMHhjJyldW18weDU3NDQoJzB4ZCcpXShfMHhiZTcyNDgpO31lbHNle2Z1bmN0aW9uIF8weDU4MWM1Migpe3ZhciBfMHgyMDY1YmQ9bmV3IF8weDVhMTEyMShfMHhiZTcyNDgpO18weDIwNjViZFsnb24nXShfMHg1NzQ0KCcweDE4YScpLF8weDU3MjcwN1tfMHg1NzQ0KCcweDZkMycpXVtfMHg1NzQ0KCcweDEwNycpXShfMHg1NzI3MDcpKSxfMHgyMDY1YmRbXzB4NTc0NCgnMHg3MjMnKV1bJ29uJ10oXzB4NTc0NCgnMHgxYzcnKSxmdW5jdGlvbihfMHgzYmExZTYpe2lmKDB4MCE9PV8weDNiYTFlNil7Zm9yKHZhciBfMHgzZmJlZjA9MHgwO18weDNmYmVmMDxfMHg1NzI3MDdbXzB4NTc0NCgnMHg3MWEnKV1bXzB4NTc0NCgnMHg5YScpXTtfMHgzZmJlZjArKylfMHg1NzI3MDdbJ3dvcmtlcnMnXVtfMHgzZmJlZjBdW18weDU3NDQoJzB4NzI0JyldPT09XzB4MjA2NWJkW18weDU3NDQoJzB4NzI0JyldJiZfMHg1NzI3MDdbXzB4NTc0NCgnMHg3MWEnKV1bXzB4NTc0NCgnMHg0MjEnKV0oXzB4M2ZiZWYwLDB4MSk7XzB4NTgxYzUyKCk7fX0pLF8weDU3MjcwN1tfMHg1NzQ0KCcweDcxYScpXVtfMHg1NzQ0KCcweDI5JyldKF8weDIwNjViZCk7fXRoaXNbXzB4NTc0NCgnMHg3MWEnKV09W10sdGhpc1tfMHg1NzQ0KCcweDZkMicpXT1bXTt2YXIgXzB4NTcyNzA3PXRoaXM7XzB4NThlZGI3PV8weDU4ZWRiN3x8XzB4OTFmODJkW18weDU3NDQoJzB4NzI1JyldKClbXzB4NTc0NCgnMHg5YScpXTtmb3IodmFyIF8weDJiMjUyOT0weDA7XzB4MmIyNeKAizI5PF8weDU4ZWRiNztfMHgyYjI1MjkrKylfMHg1ODFjNTIoKTt9fSwnc3RhcnQnOmZ1bmN0aW9uKCl7dmFyIF8weGJlNzI0OD10aGlzO3JldHVybiBfMHhiZTcyNDhbXzB4NTc0NCgnMHhjJyldW18weDU3NDQoJzB4M2QnKV0oKTt9LCdzdG9wJzpmdW5jdGlvbigpe2lmKF8weDU3NDQoJzB4NzI2Jyk9PT0nQlpoQWYnKXt0aGlzW18weDU3NDQoJzB4M2ZhJyldW18weDU3NDQoJzB4MjMwJyldKCk7fWVsc2V7dmFyIF8weGJlNzI0OD10aGlzO18weGJlNzI0OFtfMHg1NzQ0KCcweGMnKV1bXzB4NTc0NCgnMHgxMTAnKV0oKTt9fSwnX2NyZWF0ZU5vZGVJbnN0YW5jZSc6ZnVuY3Rpb24oXzB4YmU3MjQ4LF8weDU4ZWRiNyl7aWYoXzB4NTc0NCgnMHg3MjcnKSE9PV8weDU3NDQoJzB4NzI4Jykpe3ZhciBfMHgzZWI0YmU9dGhpcztzZXRJbW1lZGlhdGUoZnVuY3Rpb24oKXtpZignaEFxclAnIT09J1FSR0pwJyl7dHJ5e3Byb2Nlc3NbXzB4NTc0NCgnMHg2NycpXVtfMHg1NzQ0KCcweDEzZicpXSYmKF8weDNlYjRiZVsnX3BhcmFtcyddPV8weDNlYjRiZVtfMHg1NzQ0KCcweDRkJyldW18weDU3NDQoJzB4NjAnKV0oKVtfMHg1NzQ0KCcweDY3JyldW18weDU3NDQoJzB4N2UnKV0sXzB4M2ViNGJlWydfcmVjeWNsZSddPV8weDNlYjRiZVsnX3Byb2plY3QnXVtfMHg1NzQ0KCcweDYwJyldKClbXzB4NTc0NCgnMHg3MWEnKV1bJ3JlY3ljbGUnXSk7dmFyIF8weDVhMTEyMT0oXzB4M2ViNGJlW18weDU3NDQoJzB4MTdhJyldW18weDU3NDQoJzB4MTAzJyldP19bXzB4NTc0NCgnMHgxNjYnKV0oXzB4M2ViNGJlW18weDU3NDQoJzB4MTdhJyldW18weDU3NDQoJzB4MTAzJyldW18weDU3NDQoJzB4OWQnKV0oLyIoW14iXSspIi9nLGZ1bmN0aW9uKF8weGJlNzI0OCl7aWYoXzB4NTc0NCgnMHg3MjknKSE9PV8weDU3NDQoJzB4NzJhJykpe3JldHVybiBfMHhiZTcyNDhbXzB4NTc0NCgnMHg5ZCcpXSgvXHMvZyxfMHg1NzQ0KCcweDRiYycpKTt9ZWxzZXtfMHgzZWI0YmVbJ2lkJ10/XzB4NThlZGI3WydfcmVzcG9uc2VXaXRoQ29ycmVsYXRpb25JZCddKF8weDNlYjRiZSk6J3JlYWR5Jz09PV8weDNlYjRiZVtfMHg1NzQ0KCcweDQnKV0/XzB4YmU3MjQ4KF8weDU4ZWRiN1tfMHg1NzQ0KCcweDE3ZScpXSk6XzB4NTc0NCgnMHg3YycpPT09XzB4M2ViNGJlW18weDU3NDQoJzB4NCcpXSYmXzB4NThlZGI3W18weDU3NDQoJzB4MTc0JyldKF8weDNlYjRiZVtfMHg1NzQ0KCcweDdjJyldKTt9fSlbXzB4NTc0NCgnMHhkMycpXSgnXHgyMCcpLGZ1bmN0aW9uKF8weGJlNzI0OCl7aWYoXzB4NTc0NCgnMHg3MmInKSE9PV8weDU3NDQoJzB4NzJiJykpe3JldHVybiBfMHg1NzQ0KCcweDFlMicpPT09XzB4YmU3MjQ4W18weDU3NDQoJzB4NCcpXSYmXzB4NThlZGI3W18weDU3NDQoJzB4N2InKV0oXzB4NTc0NCgnMHgzMScpLF8weGJlNzI0OCk7fWVsc2V7cmV0dXJuIF9bXzB4NTc0NCgnMHg0NWEnKV0oXzB4YmU3MjQ4WydyZXBsYWNlJ10oL19zcGFjZV90b2tlbl8vZywnXHgyMCcpLCdceDIyJyk7fX0pOltdKVtfMHg1NzQ0KCcweDkzJyldKFtwcm9jZXNzWydtYWluTW9kdWxlJ11bXzB4NTc0NCgnMHg3MmMnKV0sXzB4NTc0NCgnMHgxMDMnKSxfMHhiZTcyNDgsXzB4M2ViNGJlW18weDU3NDQoJzB4YycpXVtfMHg1NzQ0KCcweDliJyldKCksXzB4M2ViNGJlW18weDU3NDQoJzB4NTIwJyldWyd2ZXJzaW9uJ10rKF8weDNlYjRiZVtfMHg1NzQ0KCcweDUyMCcpXVtfMHg1NzQ0KCcweDcyZCcpXT9fMHg1NzQ0KCcweDcyZScpOicnKSxfMHgzZWI0YmVbXzB4NTc0NCgnMHg1MjAnKV1bXzB4NTc0NCgnMHhlJyldfHwnJyxfMHgzZWI0YmVbXzB4NTc0NCgnMHg1MTInKV0sXzB4M2ViNGJlW18weDU3NDQoJzB4NzFiJyldLHByb2Nlc3NbXzB4NTc0NCgnMHg2NycpXVsnQkFCRUxfRU5WJ10mJl8weDNlYjRiZVtfMHg1NzQ0KCcweDUxMScpXXx8JyddKSxfMHg5ODJkNmM9X1snZXh0ZW5kJ10oe30scHJvY2Vzc1tfMHg1NzQ0KCcweDY3JyldLF8weDNlYjRiZVsnX3BhcmFtcyddW18weDU3NDQoJzB4NjcnKV0/X1tfMHg1NzQ0KCcweDkyJyldKF8weDNlYjRiZVsnX3BhcmFtcyddW18weDU3NDQoJzB4NjcnKV1bXzB4NTc0NCgnMHhkMycpXSgnOycpLGZ1bmN0aW9uKF8weGJlNzI0OCxfMHg1OGVkYjcpe3ZhciBfMHgzZWI0YmU9XzB4NThlZGI3W18weDU3NDQoJzB4ZDMnKV0oJz0nKSxfMHg1YTExMjE9X1tfMHg1NzQ0KCcweDMyOCcpXShfMHgzZWI0YmVbMHgwXSk7cmV0dXJuIF8weGJlNzI0OFtfMHg1YTExMjFdPV8weDU4ZWRiN1tfMHg1NzQ0KCcweDIxMScpXShfMHgzZWI0YmVbMHgwXVsnbGVuZ3RoJ10rMHgxKSxfMHhiZTcyNDg7fSx7fSk6e30pO2RlbGV0ZSBfMHg5ODJkNmNbXzB4NTc0NCgnMHg3MmYnKV0sZGVsZXRlIF8weDk4MmQ2Y1tfMHg1NzQ0KCcweDE4ZCcpXTt2YXIgXzB4OTFmODJkPXsncHJvY2Vzcyc6XzB4MTVkZmI1KF8weDNlYjRiZVtfMHg1NzQ0KCcweDczMCcpXSxfMHg1YTExMjEseydjd2QnOl8weDNlYjRiZVtfMHg1NzQ0KCcweDczMScpXSwnZW52JzpfMHg5ODJkNmN9KSwnb25Db25uZWN0ZWQnOmZ1bmN0aW9uKF8weGJlNzI0OCl7X1tfMHg1NzQ0KCcweDFlNScpXShfMHhiZTcyNDgpP3RoaXNbXzB4NTc0NCgnMHgxZTYnKV09XzB4YmU3MjQ4OnRoaXNbXzB4NTc0NCgnMHgxZTYnKV0mJih0aGlzW18weDU3NDQoJzB4MWU2JyldKF8weGJlNzI0OCksZGVsZXRlIHRoaXNbXzB4NTc0NCgnMHgxZTYnKV0sZGVsZXRlIHRoaXNbXzB4NTc0NCgnMHgxZTcnKV0pO319O18weDkxZjgyZFtfMHg1NzQ0KCcweDcyMycpXVtfMHg1NzQ0KCcweDczMicpXVsnb24nXShfMHg1NzQ0KCcweDE5OScpLGZ1bmN0aW9uKF8weGJlNzI0OCl7dmFyIF8weDU4ZWRiNz1fMHhiZTcyNDhbXzB4NTc0NCgnMHg1NycpXShfMHg1NzQ0KCcweDMxZScpKTtfMHg3N2E3YmYoXzB4NTc0NCgnMHg3MzMnKSxfMHg1OGVkYjcpLGNvbnNvbGVbXzB4NTc0NCgnMHg3YycpXShfMHg1OGVkYjcpO30pLF8weDU4ZWRiNyhfMHg5MWY4MmQpO31jYXRjaChfMHgyZmMyMmEpe18weDc3YTdiZignRXJyb3JceDIwd2hpbGVceDIwY3JlYXRpbmdceDIwd29ya2VyXHgyMCMlczpceDIwJXMnLF8weGJlNzI0OCxfMHgyZmMyMmEmJihfMHgyZmMyMmFbJ3N0YWNrJ118fF8weDJmYzIyYVtfMHg1NzQ0KCcweDMxJyldKSksXzB4NThlZGI3KCk7fX1lbHNle3ZhciBfMHg3NjU4YjY9bmV3IEJ1ZmZlcihKU09OWydzdHJpbmdpZnknXSh7J2V2ZW50JzpfMHhiZTcyNDgsJ2RhdGEnOl8weDU4ZWRiNywnc291cmNlJzp0aGlzWydfc291cmNlJ10oKSwnc291cmNlSWQnOl8weDIwMDhkM30pKTt0aGlzWydfc2VuZGVyJ11bXzB4NTc0NCgnMHg5JyldKF8weDc2NThiNiwweDAsXzB4NzY1OGI2W18weDU3NDQoJzB4OWEnKV0sXzB4MTRlZDAzW18weDU3NDQoJzB4MTM3JyldLF8weDE0ZWQwM1snYWRkcmVzcyddKTt9fSk7fWVsc2V7cmV0dXJuIHRoaXM7fX0sJ19yZWN5Y2xlTm9kZUluc3RhbmNlJzpmdW5jdGlvbihfMHhiZTcyNDgpe3RyeXtpZignbXFNTHknIT09XzB4NTc0NCgnMHg3MzQnKSl7cmV0dXJuO31lbHNle18weGJlNzI0OFsncHJvY2VzcyddW18weDU3NDQoJzB4NzM1JyldW18weDU3NDQoJzB4NDI1JyldKF8weDU3NDQoJzB4MTk5JykpLF8weGJlNzI0OFsncHJvY2VzcyddW18weDU3NDQoJzB4NzMyJyldW18weDU3NDQoJzB4NDI1JyldKF8weDU3NDQoJzB4MTk5JykpO319ZmluYWxseXtpZihfMHg1NzQ0KCcweDczNicpIT09XzB4NTc0NCgnMHg3MzYnKSl7dGhpc1tfMHg1NzQ0KCcweDFjMScpXT09PVdvcmtlclN0YXRlW18weDU3NDQoJzB4NzM3JyldJiYodGhpc1tfMHg1NzQ0KCcweDFjMScpXT1Xb3JrZXJTdGF0ZVtfMHg1NzQ0KCcweDViZScpXSx0aGlzWydlbWl0J10oXzB4NTc0NCgnMHgxOGEnKSx0aGlzKSk7fWVsc2V7XzB4YmU3MjQ4Wydwcm9jZXNzJ11bXzB4NTc0NCgnMHgxMTgnKV0oKTt9fX0sJ19pc05vZGVJbnN0YW5jZUhlYWx0aHknOmZ1bmN0aW9uKF8weGJlNzI0OCl7cmV0dXJuIF8weGJlNzI0OFsncHJvY2VzcyddJiZfMHhiZTcyNDhbXzB4NTc0NCgnMHg3MjMnKV1bJ3BpZCddJiYhXzB4YmU3MjQ4Wydwcm9jZXNzJ11bJ2tpbGxlZCddJiYhXzB4YmU3MjQ4W18weDU3NDQoJzB4NzIzJyldW18weDU3NDQoJzB4NzM4JyldJiZudWxsPT09XzB4YmU3MjQ4W18weDU3NDQoJzB4NzIzJyldW18weDU3NDQoJzB4NzM5JyldO30sJ19wcmVwYXJlJzpmdW5jdGlvbihfMHhiZTcyNDgsXzB4NThlZGI3KXt2YXIgXzB4M2ViNGJlPXRoaXMsXzB4NWExMTIxPV9bXzB4NTc0NCgnMHgxYjQnKV0oKSxfMHgxNWRmYjU9XzB4M2ViNGJlW18weDU3NDQoJzB4NzNhJyldKF8weDU4ZWRiNyxfMHg1YTExMjEpO3JldHVybiBfMHg3N2E3YmYoXzB4NTc0NCgnMHgxMjEnKSxfMHgxNWRmYjUpLFFbXzB4NTc0NCgnMHg3NCcpXSgpW18weDU3NDQoJzB4ODknKV0oZnVuY3Rpb24oKXtyZXR1cm4gXzB4M2ViNGJlWydfd29ya2VyUG9vbCddW18weDU3NDQoJzB4MTMwJyldKCk/UVsncmVqZWN0J10oeydydW5DYW5jZWxsZWQnOiEweDB9KTooXzB4NzdhN2JmKF8weDU3NDQoJzB4MTI0JyksXzB4MTVkZmI1KSxfMHgzZWI0YmVbXzB4NTc0NCgnMHhjJyldW18weDU3NDQoJzB4MTIyJyldKF8weDU4ZWRiNykpO30pWyd0aGVuJ10oZnVuY3Rpb24oXzB4OTgyZDZjKXtyZXR1cm4gXzB4NzdhN2JmKF8weDU3NDQoJzB4MTI2JyksXzB4MTVkZmI1KSxRW18weDU3NDQoJzB4NzQnKV0oeydpbnN0YW5jZSc6eydyZXN1bWUnOmZ1bmN0aW9uKCl7aWYoXzB4NTc0NCgnMHg3M2InKT09PV8weDU3NDQoJzB4NzNiJykpe18weDk4MmQ2Y1tfMHg1NzQ0KCcweDEzNScpXVtfMHg1NzQ0KCcweDknKV0oSlNPTltfMHg1NzQ0KCcweDgnKV0oeyd0eXBlJzpfMHg1NzQ0KCcweDczYycpLCdkYXRhJzp7fX0pKTt9ZWxzZXt0aGlzWydfbmVlZFRvUmVidWlsZERpc3BsYXlhYmxlUmFuZ2VzJ109ITB4MDt9fSwncGluZyc6ZnVuY3Rpb24oXzB4YmU3MjQ4KXtpZihfMHg1NzQ0KCcweDczZCcpPT09XzB4NTc0NCgnMHg3M2UnKSl7cmV0dXJuIHRoaXNbJ19maWxlSWQnXSsnXycrdGhpc1tfMHg1NzQ0KCcweDVkOCcpXTt9ZWxzZXt2YXIgXzB4NThlZGI3PV9bJ3VuaXF1ZUlkJ10oKSxfMHgzZWI0YmU9ZnVuY3Rpb24oXzB4NWExMTIxKXtpZignbGp4TEInIT09J2xqeExCJyl7Zm9yKHZhciBfMHgxODEyZjQ9MHgwO18weDE4MTJmNDxfMHgxNWRmYjVbXzB4NTc0NCgnMHg3MWEnKV1bXzB4NTc0NCgnMHg5YScpXTtfMHgxODEyZjQrKylfMHgxNWRmYjVbXzB4NTc0NCgnMHg3MWEnKV1bXzB4MTgxMmY0XVtfMHg1NzQ0KCcweDcyNCcpXT09PV8weDXigIs4ZWRiN1tfMHg1NzQ0KCcweDcyNCcpXSYmXzB4MTVkZmI1W18weDU3NDQoJzB4NzFhJyldW18weDU3NDQoJzB4NDIxJyldKF8weDE4MTJmNCwweDEpO18weDNlYjRiZSgpO31lbHNle3ZhciBfMHgxNWRmYjU7dHJ5e2lmKF8weDU3NDQoJzB4NzNmJyk9PT1fMHg1NzQ0KCcweDc0MCcpKXtyZXR1cm4gYlsnYXBwbHknXShwLGFyZ3VtZW50cyk7fWVsc2V7XzB4MTVkZmI1PUpTT05bJ3BhcnNlJ10oXzB4NWExMTIxKTt9fWNhdGNoKF8weDMxNmVkYil7cmV0dXJuO30ncG9uZyc9PT1fMHgxNWRmYjVbJ3R5cGUnXSYmXzB4MTVkZmI1W18weDU3NDQoJzB4MTk5JyldPT09XzB4NThlZGI3JiYoXzB4OTgyZDZjW18weDU3NDQoJzB4MTM1JyldW18weDU3NDQoJzB4MTM2JyldKF8weDU3NDQoJzB4MzEnKSxfMHgzZWI0YmUpLF8weGJlNzI0OCgpKTt9fTtfMHg5ODJkNmNbXzB4NTc0NCgnMHgxMzUnKV1bJ29uJ10oXzB4NTc0NCgnMHgzMScpLF8weDNlYjRiZSksXzB4OTgyZDZjW18weDU3NDQoJzB4MTM1JyldWydzZW5kJ10oSlNPTltfMHg1NzQ0KCcweDgnKV0oeyd0eXBlJzpfMHg1NzQ0KCcweDc0MScpLCdkYXRhJzpfMHg1OGVkYjd9KSk7fX0sJ2Nsb3NlJzpmdW5jdGlvbigpe18weDNlYjRiZVtfMHg1NzQ0KCcweDEwOScpXT8oXzB4M2ViNGJlW18weDU3NDQoJzB4YycpXVsncmVjeWNsZVdvcmtlciddKF8weDU4ZWRiNyksXzB4M2ViNGJlW18weDU3NDQoJzB4YycpXVtfMHg1NzQ0KCcweDEyMicpXShfMHg1OGVkYjcpWyd0aGVuJ10oX1tfMHg1NzQ0KCcweDEzYScpXSkpOl8weDk4MmQ2Y1tfMHg1NzQ0KCcweDEzNScpXVtfMHg1NzQ0KCcweDknKV0oSlNPTlsnc3RyaW5naWZ5J10oeyd0eXBlJzpfMHg1NzQ0KCcweDc0MicpLCdkYXRhJzp7fX0pKTt9LCdjbG9zaW5nJzpfW18weDU3NDQoJzB4MTNhJyldLCdzdGFydCc6ZnVuY3Rpb24oXzB4NThlZGI3LF8weDE1ZGZiNSl7aWYoXzB4NThlZGI3KF8weDU3NDQoJzB4MTUzJykpKXt0cnl7aWYoXzB4NTc0NCgnMHg3NDMnKSE9PV8weDU3NDQoJzB4NzQzJykpe3JldHVybiB0aGlzWydfZGF0YSddW18weDU3NDQoJzB4ZScpXTt9ZWxzZXtfMHg5ODJkNmNbXzB4NTc0NCgnMHg3MjMnKV1bXzB4NTc0NCgnMHg3MzUnKV1bXzB4NTc0NCgnMHg0MjUnKV0oXzB4NTc0NCgnMHgxOTknKSksXzB4OTgyZDZjWydwcm9jZXNzJ11bXzB4NTc0NCgnMHg3MzUnKV1bJ29uJ10oJ2RhdGEnLGZ1bmN0aW9uKF8weGJlNzI0OCl7dHJ5e18weGJlNzI0OD1fMHhiZTcyNDgmJl8weGJlNzI0OFtfMHg1NzQ0KCcweDU3JyldKF8weDU3NDQoJzB4MzFlJykpLH5fMHhiZTcyNDhbXzB4NTc0NCgnMHg3MCcpXShfMHgyMDA4ZDMpJiYoXzB4YmU3MjQ4PV8weGJlNzI0OFtfMHg1NzQ0KCcweGQzJyldKCdceDBhJyksX1snZWFjaCddKF8weGJlNzI0OCxmdW5jdGlvbihfMHhiZTcyNDgpe2lmKF8weDU3NDQoJzB4NzQ0JykhPT1fMHg1NzQ0KCcweDc0NScpKXtpZih+XzB4YmU3MjQ4WydpbmRleE9mJ10oXzB4MjAwOGQzKSl0cnl7SlNPTlsncGFyc2UnXShfMHhiZTcyNDgpO18weDk4MmQ2Y1tfMHg1NzQ0KCcweDEzNScpXVtfMHg1NzQ0KCcweDdiJyldKCdtZXNzYWdlJyxfMHhiZTcyNDgpO31jYXRjaChfMHg0NTNkMGQpe18weDc3YTdiZihfMHg1NzQ0KCcweDMxZicpK18weDQ1M2QwZFtfMHg1NzQ0KCcweDMxJyldKTt9fWVsc2V7dHJ5e18weDIwMDhkMyhfMHg1YTExMjFbXzB4NTc0NCgnMHg0OWUnKV0oXzB4YmU3MjQ4KSk7fWNhdGNoKF8weDQ2ODc3YSl7XzB4NzdhN2JmKF8weDQ2ODc3YSk7fX19KSk7fWNhdGNoKF8weDQwYzUzZil7XzB4NzdhN2JmKF8weDU3NDQoJzB4MzFmJykrXzB4NDBjNTNmW18weDU3NDQoJzB4MzEnKV0pO319KTt9fWNhdGNoKF8weDQ1YTI4MCl7aWbigIsoXzB4NTc0NCgnMHg3NDYnKSE9PV8weDU3NDQoJzB4NzQ2Jykpe3ZhciBfMHgxMTQwMjQ9dGhpcyxfMHgxZTJhOWQ9dGhpcyxfMHg1NzVlMDA9cHJvY2Vzc1tfMHg1NzQ0KCcweDY3JyldWydxdW9ra2EnXT9fMHg1NzQ0KCcweDFmMScpOl8weDU3NDQoJzB4MWYyJyksXzB4MTNiMmIxPXByb2Nlc3NbXzB4NTc0NCgnMHg2NycpXVtfMHg1NzQ0KCcweDEzZicpXT9fMHg1NzQ0KCcweDFmMycpOl8weDU3NDQoJzB4MzVlJyk7XzB4YmU3MjQ4PV8weGJlNzI0OHx8MHgwLGgoZnVuY3Rpb24oKXtfMHhiZTcyNDg+PWs/KF8weDFlMmE5ZFtfMHg1NzQ0KCcweDJkOCcpXShfMHg1NzQ0KCcweDM0OCcpLF8weDU3NDQoJzB4M2M0JykrXzB4NTc1ZTAwK18weDU3NDQoJzB4M2M1JykrXzB4MTNiMmIxKydceDIyPm91clx4MjB3ZWJzaXRlPC9hPlx4MjB0b1x4MjBwdXJjaGFzZVx4MjBhXHgyMGxpY2Vuc2UuPGJyLz5JZlx4MjB5b3VceDIwd291bGRceDIwbGlrZVx4MjB0b1x4MjB0cnlceDIwV2FsbGFieVx4MjB3aXRob3V0XHgyMHRoaXNceDIwbGltaXRhdGlvbixceDIwcGxlYXNlXHgyMDxhXHgyMGhyZWY9XHgyMicrUytfMHg1NzQ0KCcweDNiNicpK0MrJ1x4MjI+cmVxdWVzdFx4MjBhblx4MjBleHRlbmRlZFx4MjB0cmlhbFx4MjBsaWNlbnNlPC9hPi48YnIvPklmXHgyMHlvdVx4MjBoYXZlXHgyMGFscmVhZHlceDIwcHVyY2hhc2VkXHgyMHRoZVx4MjBsaWNlbnNlLFx4MjBwbGVhc2VceDIwPGFceDIwaHJlZj1ceDIyI1x4MjJceDIwY2xhc3M9XHgyMicrVCsnXHgyMj5hY3RpdmF0ZVx4MjBpdDwvYT4uJyx7J2lkJzondHJpYWxFbmRlZCd9KSxfMHgxZTJhOWRbJ3N0b3AnXSgpLF8weDFlMmE5ZFtfMHg1NzQ0KCcweDM2MicpXSghMHgwKSk6KF8weDFlMmE5ZFtfMHg1NzQ0KCcweDJlNicpXT1mdW5jdGlvbigpe3AoXzB4MWUyYTlkW18weDU3NDQoJzB4M2M5JyldKSxfMHgxZTJhOWRbXzB4NTc0NCgnMHgxMjAnKV0oXzB4YmU3MjQ4KzB4MSk7fSxfMHgxZTJhOWRbXzB4NTc0NCgnMHgzYzknKV09aChmdW5jdGlvbigpe18weDFlMmE5ZFsnc3RvcCddKCksXzB4MTE0MDI0WydfZW1pdE5vdGlmaWNhdGlvbiddKF8weDU3NDQoJzB4N2MnKSxfMHg1NzVlMDArXzB4NTc0NCgnMHgzY2EnKStfMHg1NzVlMDArJyxceDIweW91XHgyMGNhblx4MjByZXN0YXJ0XHgyMG9yXHgyMHZpc2l0XHgyMDxhXHgyMGhyZWY9XHgyMicrXzB4MTNiMmIxK18weDU3NDQoJzB4M2NjJykrUytfMHg1NzQ0KCcweDNiNicpK0MrXzB4NTc0NCgnMHgzYzYnKStUK18weDU3NDQoJzB4M2E4JykpLF8weDFlMmE5ZFtfMHg1NzQ0KCcweDM2MicpXSgpO30sYiksXzB4MWUyYTlkW18weDU3NDQoJzB4MmQ4JyldKF8weDU3NDQoJzB4MzQ4JyksXzB4NTc0NCgnMHgzY2QnKStfMHg1NzVlMDArXzB4NTc0NCgnMHgzY2UnKSt4K18weDU3NDQoJzB4M2NmJykrUytfMHg1NzQ0KCcweDNiNicpK0MrJ1x4MjI+cmVxdWVzdFx4MjBhblx4MjBleHRlbmRlZFx4MjB0cmlhbFx4MjBsaWNlbnNlPC9hPi48YnIvPlZpc2l0XHgyMDxhXHgyMGhyZWY9XHgyMicrXzB4MTNiMmIxK18weDU3NDQoJzB4M2QxJykrVCsnXHgyMj5hY3RpdmF0ZVx4MjBpdDwvYT4uJyx7J2lkJzpfMHg1NzQ0KCcweDc0NycpfSkpO30seSk7fWVsc2V7XzB4NzdhN2JmKF8weDU3NDQoJzB4NzQ4JykrXzB4NDVhMjgwW18weDU3NDQoJzB4MzEnKV0pO319XzB4OTgyZDZjW18weDU3NDQoJzB4NzIzJyldW18weDU3NDQoJzB4NzMyJyldW18weDU3NDQoJzB4NDI1JyldKF8weDU3NDQoJzB4MTk5JykpLF8weDk4MmQ2Y1tfMHg1NzQ0KCcweDcyMycpXVtfMHg1NzQ0KCcweDczMicpXVsnb24nXShfMHg1NzQ0KCcweDE5OScpLGZ1bmN0aW9uKF8weGJlNzI0OCl7aWYoXzB4YmU3MjQ4PV8weGJlNzI0OCYmXzB4YmU3MjQ4W18weDU3NDQoJzB4NTcnKV0oXzB4NTc0NCgnMHgzMWUnKSksIV8weGJlNzI0OHx8MHgwIT09XzB4YmU3MjQ4WydpbmRleE9mJ10oXzB4NTc0NCgnMHg3NDknKSkpe2lmKF8weDU3NDQoJzB4NzRhJyk9PT1fMHg1NzQ0KCcweDc0YScpKXt2YXIgXzB4NThlZGI3PScnO2lmKH5fMHhiZTcyNDhbXzB4NTc0NCgnMHg3MCcpXShfMHgyMDA4ZDMpKXtpZihfMHg1NzQ0KCcweDc0YicpPT09J3Z0Q1FSJyl7dmFyIF8weGNhNjc0ND10aGlzW18weDU3NDQoJzB4MjcxJyldW18weGJlNzI0OF07aWYoXzB4Y2E2NzQ0JiYhXzB4Y2E2NzQ0W18weDU3NDQoJzB4NzUnKV0pe2goXzB4NTc0NCgnMHg1MjcnKSxfMHhjYTY3NDRbXzB4NTc0NCgnMHhlJyldKTt2YXIgXzB4NDI5MGQwPXRoaXNbXzB4NTc0NCgnMHg2OScpXVtfMHg1NzQ0KCcweDM4NicpXShfMHhjYTY3NDRbXzB4NTc0NCgnMHhlJyldKTt0aGlzW18weDU3NDQoJzB4NjknKV1bXzB4NTc0NCgnMHg3OCcpXShfMHhjYTY3NDRbXzB4NTc0NCgnMHhlJyldLF8weDVhMTEyMSYmX1tfMHg1NzQ0KCcweDE0MScpXShfMHg0MjkwZDApP18weDQyOTBkMDpfMHg1OGVkYjcpLF8weGNhNjc0NFtfMHg1NzQ0KCcweDcyJyldKyssdGhpc1tfMHg1NzQ0KCcweDUyOCcpXShfW18weDU3NDQoJzB4NzknKV0oe30sXzB4Y2E2NzQ0LHsnY29udGVudCc6XzB4NThlZGI3fSksXzB4NDI5MGQwLF8weDNlYjRiZSwhMHgwLF8weDVhMTEyMSksXzB4Y2E2NzQ0W18weDU3NDQoJzB4MjQ3JyldPV8weDVhMTEyMTt9fWVsc2V7dmFyIF8weDNlYjRiZTtfMHhiZTcyNDg9XzB4YmU3MjQ4W18weDU3NDQoJzB4ZDMnKV0oJ1x4MGEnKSxfWydlYWNoJ10oXzB4YmU3MjQ4LGZ1bmN0aW9uKF8weGJlNzI0OCl7aWYoXzB4NTc0NCgnMHg3NGMnKSE9PV8weDU3NDQoJzB4NzRkJykpe2lmKH5fMHhiZTcyNDhbJ2luZGV4T2YnXShfMHgyMDA4ZDMpKXRyeXtfMHgzZWI0YmU9SlNPTltfMHg1NzQ0KCcweDJkJyldKF8weGJlNzI0OCk7fWNhdGNoKF8weGUwMzU3Myl7XzB4NzdhN2JmKCdFcnJvclx4MjB3aGlsZVx4MjBwcm9jZXNzaW5nXHgyMFNUREVSUlx4MjBtZXNzYWdlOlx4MjAnK18weGUwMzU3M1tfMHg1NzQ0KCcweDMxJyldKTt9fWVsc2V7dmFyIF8weDEyMWMzOD10aGlzLF8weDNiYmY0MT1fMHhiZTcyNDhbXzB4NTc0NCgnMHg0NmQnKV0sXzB4NGE5YzcyPV8weGJlNzI0OFtfMHg1NzQ0KCcweDc0ZScpXSxfMHgyNjgzYjA9XzB4YmU3MjQ4W18weDU3NDQoJzB4MWQzJyldLF8weDg5NTM2PV8weGJlNzI0OFsnX2xvZyddLF8weDUyNWI1Zj1fMHhiZTcyNDhbXzB4NTc0NCgnMHg0MWUnKV1bXzB4NTc0NCgnMHg5MycpXShfMHhiZTcyNDhbXzB4NTc0NCgnMHg2Y2YnKV0pO3JldHVybiBfW18weDU3NDQoJzB4ZDQnKV0oXzB4NTI1YjVmLGZ1bmN0aW9uKF8weDQ0NzVjZil7cmV0dXJuIF8weDEyMWMzOFtfMHg1NzQ0KCcweDQyOCcpXShfMHg0NDc1Y2YpO30pLF8weDUyNWI1ZltfMHg1NzQ0KCcweDlhJyldfHwoXzB4NTI1YjVmPXZvaWQgMHgwKSxfMHhiZTcyNDhbXzB4NTc0NCgnMHg3NGYnKV1bXzB4NTc0NCgnMHg5YScpXSYmKF9bXzB4NTc0NCgnMHhkNCcpXShfMHhiZTcyNDhbXzB4NTc0NCgnMHg3NGYnKV0sZnVuY3Rpb24oXzB4MjA4ZjdlKXtkZWxldGUgXzB4MjA4ZjdlW18weDU3NDQoJzB4NzUwJyldLF8weDEyMWMzOFtfMHg1NzQ0KCcweDc1MScpXShfMHgyMDhmN2UpO30pLF8weGJlNzI0OFtfMHg1NzQ0KCcweDc0ZicpXVtfMHg1NzQ0KCcweDlhJyldPTB4MCkseydjb3ZlcmFnZSc6XzB4M2JiZjQxLCd0ZXN0cyc6XzB4MjY4M2IwLCdsb2cnOl8weDg5NTM2LCdnbG9iYWxFcnJvcnMnOl8weDUyNWI1ZiwnbG9hZGluZ1NlcXVlbmNlJzpfMHg0YTljNzIsJ3RpbWUnOl8weDU4ZWRiN307fX0pLF8weDNlYjRiZSYmXzB4MTVkZmI1KF8weDNlYjRiZVtfMHg1NzQ0KCcweDMxJyldLF8weDNlYjRiZVtfMHg1NzQ0KCcweDRlJyldLF8weDNlYjRiZVtfMHg1NzQ0KCcweDNlNicpXSxfMHgzZWI0YmVbJ2V4cGVjdGVkJ10pO319ZWxzZXtpZihfMHhiZTcyNDgpe3ZhciBfMHg1YTExMjE9XzB4YmU3MjQ4W18weDU3NDQoJzB4ZDMnKV0oJ1x4MGEnKSxfMHg5ODJkNmM9W107X1tfMHg1NzQ0KCcweGQ0JyldKF8weDVhMTEyMSxmdW5jdGlvbihfMHhiZTcyNDgpe3JldHVybiFfW18weDU3NDQoJzB4MzI3JyldKF9bXzB4NTc0NCgnMHgzMjgnKV0oXzB4YmU3MjQ4KSwnYXQnKSYmdm9pZCBfMHg5ODJkNmNbXzB4NTc0NCgnMHgyOScpXShfMHhiZTcyNDgpO30pLF8weDU4ZWRiNz1fMHg5ODJkNmNbJ2pvaW4nXSgnXHgwYScpO31fMHgxNWRmYjUoXzB4NThlZGI3LF8weGJlNzI0OCk7fX1lbHNle18weDc3YTdiZihfMHg1OGVkYjcpO319fSk7dmFyIF8weDE0ZWQwMz17J3Nlc3Npb25JZCc6XzB4NWExMTIxLCd0ZXN0cyc6XzB4YmU3MjQ4W18weDU3NDQoJzB4YWUnKV0sJ2ZpbGVzJzpfWydyZWR1Y2UnXShfMHhiZTcyNDhbXzB4NTc0NCgnMHg5NycpXVsnY29uY2F0J10oXzB4YmU3MjQ4W18weDU3NDQoJzB4OTQnKV0pLGZ1bmN0aW9uKF8weDU4ZWRiNyxfMHg1YTExMjEpe2lmKF8weDU3NDQoJzB4NzUyJykhPT1fMHg1NzQ0KCcweDc1MicpKXtyZXR1cm4ndnVlJz09PV8weGJlNzI0ODt9ZWxzZXtpZihfWydpc051bWJlciddKF8weDVhMTEyMVsnaWQnXSkpe2lmKF8weDU3NDQoJzB4NzUzJykhPT1fMHg1NzQ0KCcweDc1NCcpKXt2YXIgXzB4MTVkZmI1PXsnaWQnOl8weDVhMTEyMVsnaWQnXSwncmFuZ2VzTGVuZ3RoJzpfMHg1YTExMjFbXzB4NTc0NCgnMHhhMScpXX07aWYoXzB4NThlZGI3W18weDU3NDQoJzB4MjknKV0oXzB4MTVkZmI1KSxfMHgzZWI0YmVbXzB4NTc0NCgnMHg2NmYnKV0mJihfMHgxNWRmYjVbJ3BhdGgnXT1fMHg1YTExMjFbJ25vcm1hbGl6ZWRSZWxhdGl2ZVBhdGgnXSxfMHgxNWRmYjVbXzB4NTc0NCgnMHg3NTUnKV09XzB4NWExMTIxWydwYXJlbnRGaWxlUGF0aCddLF8weDE1ZGZiNVtfMHg1NzQ0KCcweDc1NicpXT1fMHg1YTExMjFbXzB4NTc0NCgnMHg3NTYnKV0sXzB4MTVkZmI1W18weDU3NDQoJzB4NzU3JyldPV8weDVhMTEyMVtfMHg1NzQ0KCcweDc1NycpXSxfMHgxNWRmYjVbJ3RzJ109XzB4NWExMTIxWyd0cyddLF8weDE1ZGZiNVsnaW5PcmlnaW5hbEZpbGVzQ2FjaGUnXT1fMHg1YTExMjFbJ2luT3JpZ2luYWxGaWxlc0NhY2hlJ10sXzB4MTVkZmI1W18weDU3NDQoJzB4MjZlJyldPV8weDVhMTEyMVtfMHg1NzQ0KCcweDI2ZScpXSxfMHg1YTExMjFbXzB4NTc0NCgnMHgzOWQnKV0pKXtpZihfMHg1NzQ0KCcweDc1OCcpPT09XzB4NTc0NCgnMHg3NTknKSl7cmV0dXJuIF9bXzB4NTc0NCgnMHgxNjYnKV0odGhpc1tfMHg1NzQ0KCcweDUzOScpXSxmdW5jdGlvbihfMHgyZDQ3ZGQpe3JldHVybnsncGF0aCc6XzB4MmQ0N2RkWydwYXRoJ10oKSwnaWQnOl8weDJkNDdkZFsna2V5J10oKX07fSk7fWVsc2V7XzB4MTVkZmI1W18weDU3NDQoJzB4MzlkJyldPSEweDA7dmFyIF8weDc3YTdiZj1fMHg1YTExMjFbXzB4NTc0NCgnMHg3NWEnKV0mJl8weDVhMTEyMVsnY2hhbmdlUG9zaXRpb24nXSYmIV8weDVhMTEyMVtfMHg1NzQ0KCcweDc1YicpXSYmIV8weDNlYjRiZVsnX3Byb2plY3QnXVtfMHg1NzQ0KCcweDc1YycpXSgpJiYhXzB4M2ViNGJlW18weDU3NDQoJzB4NGQnKV1bXzB4NTc0NCgnMHg2MCcpXSgpWydydW5BbGxUZXN0c0luQWZmZWN0ZWRUZXN0RmlsZSddJiYhXzB4YmU3MjQ4WydmdWxsUnVuJ107XzB4NzdhN2JmJiYoXzB4MTVkZmI1W18weDU3NDQoJzB4NzVkJyldPSEweDAsXzB4MTVkZmI1W18weDU3NDQoJzB4NzVhJyldPV8weDVhMTEyMVtfMHg1NzQ0KCcweDc1YScpXSxfMHgxNWRmYjVbXzB4NTc0NCgnMHg3NWUnKV09XzB4NWExMTIxWydjaGFuZ2VQb3NpdGlvbiddKTt9fX1lbHNle3JldHVybiBfMHgzZWI0YmVbXzB4NTc0NCgnMHhjJyldW18weDU3NDQoJzB4MTMwJyldKCk/UVtfMHg1NzQ0KCcweDFiNycpXSh7J3J1bkNhbmNlbGxlZCc6ITB4MH0pOihfMHg1YTExMjEoJ1ByZXBhcmluZ1x4MjBzYW5kYm94XHgyMFslc10nLF8weDc3YTdiZiksXzB4M2ViNGJlW18weDU3NDQoJzB4MTBiJyldW18weDU3NDQoJzB4MTI1JyldKF8weGJlNzI0OCxfMHgxNWRmYjUsXzB4NThlZGI3KSk7fX1yZXR1cm4gXzB4NThlZGI3O319LFtdKSwndGVzdEZpbGVzJzpfW18weDU3NDQoJzB4MTY2JyldKF8weGJlNzI0OFsndGVzdEZpbGVzVG9Mb2FkJ10sZnVuY3Rpb24oXzB4YmU3MjQ4KXt2YXIgXzB4NThlZGI3O2lmKDB4MD09PV8weDNlYjRiZVtfMHg1NzQ0KCcweDUyMCcpXVtfMHg1NzQ0KCcweDgwJyldW18weDU3NDQoJzB4NzAnKV0oXzB4NTc0NCgnMHg1MjEnKSkpe3ZhciBfMHg1YTExMjE9XzB4M2ViNGJlW18weDU3NDQoJzB4NGQnKV1bXzB4NTc0NCgnMHgyMGMnKV0oXzB4YmU3MjQ4W18weDU3NDQoJzB4OTYnKV18fF8weGJlNzI0OFsnaWQnXSk7XzB4NThlZGI3PV8weDVhMTEyMSYmXzB4NWExMTIxW18weDU3NDQoJzB4NTIyJyldKCk7fXJldHVybnsncGF0aCc6XzB4YmU3MjQ4WydwYXRoJ10sJ2lkJzpfMHhiZTcyNDhbJ29yaWdpbmFsSWQnXXx8XzB4YmU3MjQ4WydpZCddLCd0eXBlJzpfMHhiZTcyNDhbJ3R5cGUnXSwnb3JpZ2luYWxUeXBlJzpfMHhiZTcyNDhbXzB4NTc0NCgnMHg3NWYnKV0sJ2NvbnRlbnQnOnByb2Nlc3NbJ2VudiddW18weDU3NDQoJzB4MTNmJyldP18weGJlNzI0OFsnY29udGVudCddOnZvaWQgMHgwLCdsaW5lTWFwJzpfMHg1OGVkYjd9O30pLCdyb290JzpfMHgzZWI0YmVbXzB4NTc0NCgnMHg3MzEnKV0sJ+KAi2xvY2FsUHJvamVjdERpcic6XzB4M2ViNGJlW18weDU3NDQoJzB4ODUnKV0sJ2ZsdXNoQ2FjaGUnOiEweDEsJ2luaXRpYWxpemVyJzpfMHgzZWI0YmVbXzB4NTc0NCgnMHg1ZScpXSwndGVhcmRvd24nOl8weDNlYjRiZVtfMHg1NzQ0KCcweDcxNCcpXSwnc2xvd1Rlc3RUaHJlc2hvbGQnOl8weDNlYjRiZVsnX3Nsb3dUZXN0VGhyZXNob2xkJ10sJ21hbnVhbFRlc3RSdW4nOl8weGJlNzI0OFtfMHg1NzQ0KCcweDc2MCcpXSwncmVwb3J0VW5oYW5kbGVkUHJvbWlzZXMnOl8weDNlYjRiZVtfMHg1NzQ0KCcweDVmJyldLCdtYXhMb2dFbnRyeVNpemUnOl8weDNlYjRiZVtfMHg1NzQ0KCcweDYzJyldLCdleHByZXNzaW9uc1RvRXZhbHVhdGUnOl8weGJlNzI0OFtfMHg1NzQ0KCcweGFiJyldLCdoaW50cyc6XzB4M2ViNGJlW18weDU3NDQoJzB4NGQnKV1bXzB4NTc0NCgnMHg2MCcpXSgpW18weDU3NDQoJzB4MzcyJyldLCdhdXRvQ29uc29sZUxvZyc6XzB4M2ViNGJlW18weDU3NDQoJzB4NGQnKV1bJ3NldHRpbmdzJ10oKVtfMHg1NzQ0KCcweDc2MScpXSwncHJlc2VydmVDb21tZW50cyc6XzB4M2ViNGJlW18weDU3NDQoJzB4NGQnKV1bXzB4NTc0NCgnMHg2MCcpXSgpWydwcmVzZXJ2ZUNvbW1lbnRzJ10sJ3JlcG9ydENvbnNvbGVFcnJvckFzRXJyb3InOl8weDNlYjRiZVtfMHg1NzQ0KCcweDRkJyldW18weDU3NDQoJzB4NjAnKV0oKVtfMHg1NzQ0KCcweDc2MicpXSwnc3VwcHJlc3NDbGVhcmluZ1JlcXVpcmVDYWNoZSc6XzB4M2ViNGJlW18weDU3NDQoJzB4NjZmJyldfHx2b2lkIDB4MH07XzB4OTgyZDZjW18weDU3NDQoJzB4MTM1JyldW18weDU3NDQoJzB4OScpXShKU09OW18weDU3NDQoJzB4OCcpXSh7J3R5cGUnOl8weDU3NDQoJzB4NzYzJyksJ2RhdGEnOl8weDE0ZWQwM30pKTt9fX0sJ25hbWUnOl8weDE1ZGZiNSwnc2Vzc2lvbklkJzpfMHg1YTExMjEsJ3dvcmtlcklkJzpfMHg1OGVkYjd9KTt9KTt9LCdfc2FuZGJveE5hbWUnOmZ1bmN0aW9uKF8weGJlNzI0OCxfMHg1OGVkYjcpe2lmKF8weDU3NDQoJzB4NzY0JykhPT1fMHg1NzQ0KCcweDc2NScpKXtyZXR1cm4nd29ya2VyXHgyMCMnK18weGJlNzI0OCtfMHg1NzQ0KCcweGQ2JykrXzB4NThlZGI3O31lbHNle3JldHVybiBfMHhiZTcyNDhbXzB4NTc0NCgnMHgxZDEnKV0oKTt9fX0sXzB4NThlZGI3W18weDU3NDQoJzB4YicpXT1fMHgxNGVkMDM7fSx7Jy4vcnVuV29ya2VyUG9vbCc6MHgxZCwnLi91dGlscyc6MHgxZSwnY2hpbGRfcHJvY2Vzcyc6dm9pZCAweDAsJ2ZzJzp2b2lkIDB4MCwncGF0aCc6dm9pZCAweDB9XSwyNzpbZnVuY3Rpb24oXzB4MTA2OGUyLF8weDJiZjhiYyxfMHgzOTNiNjgpe3ZhciBfMHgyNDcxMTg9bG9nZ2VyW18weDU3NDQoJzB4NTgnKV0oXzB4NTc0NCgnMHg3NjYnKSlbXzB4NTc0NCgnMHg1YScpXSxfMHgxOTM4ZTA9XzB4MTA2OGUyKF8weDU3NDQoJzB4NzY3JykpLF8weDNmMDFhOT1fMHgxMDY4ZTIoXzB4NTc0NCgnMHhmZicpKSxfMHgxNWYzZGI9XzB4MTA2OGUyKCcuL2Jyb3dzZXJFbnZpcm9ubWVudCcpLF8weGUxNjI2OT0hMHgxLF8weDU3NmUwND1mdW5jdGlvbihfMHgxMDY4ZTIpe2lmKF8weDU3NDQoJzB4NzY4Jyk9PT1fMHg1NzQ0KCcweDc2OScpKXtyZXR1cm4gdGhpc1tfMHg1NzQ0KCcweDVkOCcpXTt9ZWxzZXt2YXIgXzB4MmJmOGJjPXRoaXM7XzB4MmJmOGJjW18weDU3NDQoJzB4NGQnKV09XzB4MTA2OGUyLF8weDJiZjhiY1tfMHg1NzQ0KCcweDEwMCcpXT1RWyd3aGVuJ10oITB4MCksXzB4MmJmOGJjWydfcGFyYW1zJ109XzB4MTA2OGUyW18weDU3NDQoJzB4NjAnKV0oKVtfMHg1NzQ0KCcweDY3JyldW18weDU3NDQoJzB4N2UnKV0sXzB4MmJmOGJjW18weDU3NDQoJzB4MzI2JyldPV8weDEwNjhlMltfMHg1NzQ0KCcweDYwJyldKClbXzB4NTc0NCgnMHg2NycpXVtfMHg1NzQ0KCcweDMyNScpXSxfMHgyYmY4YmNbXzB4NTc0NCgnMHg3NmEnKV09XzB4MTA2OGUyW18weDU3NDQoJzB4NjAnKV0oKVtfMHg1NzQ0KCcweDY3JyldW18weDU3NDQoJzB4MTdkJyldLF8weDJiZjhiY1tfMHg1NzQ0KCcweDVhOCcpXT1fMHgxMDY4ZTJbJ3NldHRpbmdzJ10oKVtfMHg1NzQ0KCcweDY3JyldWydydW5uZXInXSxfMHgyYmY4YmNbJ193b3JrZXJQb29sJ109bmV3IF8weDNmMDFhOShfMHgyYmY4YmNbXzB4NTc0NCgnMHg0ZCcpXSx7J2NyZWF0ZSc6X1snYmluZCddKF8weDJiZjhiY1tfMHg1NzQ04oCLKCcweDI5MycpXSxfMHgyYmY4YmMpLCdyZWN5Y2xlJzpfW18weDU3NDQoJzB4MTA3JyldKF8weDJiZjhiY1tfMHg1NzQ0KCcweDc2YicpXSxfMHgyYmY4YmMpLCdoZWFsdGh5JzpfW18weDU3NDQoJzB4MTA3JyldKF8weDJiZjhiY1snX2lzUGhhbnRvbUluc3RhbmNlSGVhbHRoeSddLF8weDJiZjhiYyksJ3ByZXBhcmUnOl9bXzB4NTc0NCgnMHgxMDcnKV0oXzB4MmJmOGJjW18weDU3NDQoJzB4MTllJyldLF8weDJiZjhiYyl9KSxfMHgyYmY4YmNbXzB4NTc0NCgnMHgxMGInKV09bmV3IF8weDE1ZjNkYihfMHgxMDY4ZTIsXzB4MmJmOGJjWydfd29ya2VyUG9vbCddKTt9fTtfMHg1NzZlMDRbXzB4NTc0NCgnMHgxMGQnKV09eydydW4nOmZ1bmN0aW9uKF8weDEwNjhlMil7aWYoXzB4NTc0NCgnMHg3NmMnKSE9PV8weDU3NDQoJzB4NzZjJykpe3ZhciBfMHgxZDJlYmU9XzB4MTA2OGUyW18weDU3NDQoJzB4MzEnKV1bXzB4NTc0NCgnMHgyZTQnKV0oL0Nhbm5vdCBmaW5kIG1vZHVsZSAnKFteJ1xzJnw7XSspJy8pO18weDFkMmViZSYmXzB4MWQyZWJlWzB4MV0mJihfMHgxMDY4ZTJbXzB4NTc0NCgnMHg1OTQnKV09XzB4M2YwMWE5W18weDU3NDQoJzB4MmM1JyldKF8weDFkMmViZVsweDFdKSk7fWVsc2V7dmFyIF8weDJiZjhiYz10aGlzO3JldHVybiBfMHgyYmY4YmNbXzB4NTc0NCgnMHhjJyldW18weDU3NDQoJzB4MTBjJyldKF8weDEwNjhlMik7fX0sJ19jcmVhdGVQaGFudG9tSW5zdGFuY2UnOmZ1bmN0aW9uKF8weDEwNjhlMixfMHgyYmY4YmMpe2lmKF8weDU3NDQoJzB4NzZkJyk9PT1fMHg1NzQ0KCcweDc2ZScpKXt2YXIgXzB4MzFhZDg3PW5ldyBfMHhlMTYyNjkoXzB4MmJmOGJjKTtfMHgxMDY4ZTJbJ3NvdXJjZSddPV8weDJiZjhiY1tfMHg1NzQ0KCcweDc2ZicpXSYmXzB4MmJmOGJjW18weDU3NDQoJzB4NzZmJyldWzB4MF18fCcuJyxfMHgxMDY4ZTJbXzB4NTc0NCgnMHg3NzAnKV09MHgyLF8weDM5M2I2OD1fMHgzMWFkODdbXzB4NTc0NCgnMHg3NzEnKV0oXzB4MTA2OGUyKTt9ZWxzZXt2YXIgXzB4MzkzYjY4PXRoaXM7dHJ5e3ZhciBfMHgzZjAxYTk9eydkbm9kZU9wdHMnOnsnd2Vhayc6ITB4MX19O18weDM5M2I2OFtfMHg1NzQ0KCcweDVhOCcpXSYmKF8weDNmMDFhOVsnYmluYXJ5J109XzB4MzkzYjY4WydfcGhhbnRvbWpzUGF0aCddKSxfMHgzZjAxYTlbXzB4NTc0NCgnMHg3NzInKV09ZnVuY3Rpb24oXzB4MmJmOGJjLF8weDM5M2I2OCl7cmV0dXJuIF8weDU3NDQoJzB4NzczJykhPT1fMHgzOTNiNjh8fF8weGUxNjI2OXzigIt8KGNvbnNvbGVbXzB4NTc0NCgnMHg3YycpXSgnTG9va3NceDIwbGlrZVx4MjB0aGVceDIwUGhhbnRvbUpzXHgyMHZlcnNpb25ceDIwYmVpbmdceDIwdXNlZFx4MjBpc1x4MjBub3RceDIwc3VwcG9ydGVkXHgyMG9uXHgyMHlvdXJceDIwT1MuXHgwYVRyeVx4MjB1c2luZ1x4MjBhXHgyMGRpZmZlcmVudFx4MjBQaGFudG9tSnNceDIwdmVyc2lvblx4MjAoaHR0cHM6Ly93YWxsYWJ5anMuY29tL2RvY3MvaW50ZWdyYXRpb24vcGhhbnRvbWpzMi5odG1sKVx4MGFvclx4MjBDaHJvbWl1bS9WOFx4MjB2aWFceDIwRWxlY3Ryb25ceDIwcnVubmVyXHgyMChodHRwczovL3dhbGxhYnlqcy5jb20vZG9jcy9pbnRlZ3JhdGlvbi9lbGVjdHJvbi5odG1sKScpLF8weGUxNjI2OT0hMHgwKSxfMHgyNDcxMTgoXzB4NTc0NCgnMHg3NzQnKSxfMHgxMDY4ZTIsXzB4MzkzYjY4LF8weDJiZjhiYyk7fTt2YXIgXzB4MTVmM2RiPVtfMHg1NzQ0KCcweDc3NScpLF8weDU3NDQoJzB4Nzc2JyldO18weDM5M2I2OFtfMHg1NzQ0KCcweDE3YScpXVtfMHg1NzQ0KCcweDEwMycpXSYmKF8weDE1ZjNkYj1fMHgxNWYzZGJbXzB4NTc0NCgnMHg5MycpXShfW18weDU3NDQoJzB4MTY1JyldKF8weDM5M2I2OFtfMHg1NzQ0KCcweDE3YScpXVsncnVubmVyJ11bXzB4NTc0NCgnMHhkMycpXSgnXHgyMCcpLGZ1bmN0aW9uKF8weDEwNjhlMil7aWYoJ2hzUVByJz09PSd5UXBkVScpe3N3aXRjaChfMHgxOTM4ZTBbXzB4NTc0NCgnMHhlZCcpXSl7Y2FzZSAweDA6aWYoXzB4MTkzOGUwW18weDU3NDQoJzB4ZjAnKV1bJ3B1c2gnXShbMHgwLDB4MTIsLDB4MTNdKSwhdGhpc1tfMHg1NzQ0KCcweDExMScpXSl0aHJvdyBuZXcgRXJyb3IoXzB4NTc0NCgnMHgxNDYnKSk7cmV0dXJuWzB4NCxfMHgxNWYzZGJbXzB4NTc0NCgnMHgxNDcnKV0odGhpc1snX2Nvbm5lY3Rpb25PcHRpb25zJ10oeyd1cmwnOl8weDJiZjhiY30pKV07Y2FzZSAweDE6cmV0dXJuIF8weDI0NzExOD1fMHgxOTM4ZTBbXzB4NTc0NCgnMHgxMGUnKV0oKSxfMHgxMDY4ZTJbXzB4NTc0NCgnMHgxMjgnKV09eyd0YXJnZXQnOnsnaWQnOl8weDI0NzExOFsnaWQnXX19LHRoaXNbXzB4NTc0NCgnMHgxMjMnKV0oKSxbMHg0LF8weDE1ZjNkYih7J3RhYic6XzB4MjQ3MTE4fSldO2Nhc2UgMHgyOl8weDNmMDFhOT1fMHgxOTM4ZTBbXzB4NTc0NCgnMHgxMGUnKV0oKSxfMHgxMDY4ZTJbXzB4NTc0NCgnMHgxMjgnKV09XzB4M2YwMWE5LHRoaXNbJ19jaGVja0NhbmNlbGxlZCddKCksXzB4ZTE2MjY5PV8weDNmMDFhOVtfMHg1NzQ0KCcweDE0OCcpXSxfMHg1NzZlMDQ9XzB4M2YwMWE5W18weDU3NDQoJzB4MTQ5JyldLF8weDE5MzhlMFtfMHg1NzQ0KCcweGVkJyldPTB4MztjYXNlIDB4MzpyZXR1cm4gXzB4MTkzOGUwWyd0cnlzJ11bXzB4NTc0NCgnMHgyOScpXShbMHgzLDB4MTAsLDB4MTFdKSxjPSEhdGhpc1tfMHg1NzQ0KCcweDEwYicpXVtfMHg1NzQ0KCcweDE0YScpXSgpLHU9W18weGUxNjI2OVtfMHg1NzQ0KCcweDE0YicpXSgpXSxjJiZ1W18weDU3NDQoJzB4MjknKV0oXzB4NTc2ZTA0W18weDU3NDQoJzB4MTRiJyldKCkpLFsweDQsUHJvbWlzZVtfMHg1NzQ0KCcweDE0YycpXSh1KV07Y2FzZSAweDQ6aWYoXzB4MTkzOGUwWydzZW50J10oKSx0aGlzWydfY2hlY2tDYW5jZWxsZWQnXSgpLCFjKXJldHVyblsweDMsMHhkXTtfMHg1NzZlMDRbXzB4NTc0NCgnMHgxNGQnKV0oZnVuY3Rpb24oXzB4MTAwZGUxKXt2YXIgXzB4MjNmM2MwPV8weDEwMGRlMVtfMHg1NzQ0KCcweDE0ZScpXSxfMHhlNTBjZDE9XzB4MTAwZGUxW18weDU3NDQoJzB4MTRmJyldO3JldHVybiBfMHg1NzZlMDRbXzB4NTc0NCgnMHhkYycpXSh7J2ludGVyY2VwdGlvbklkJzpfMHgyM2YzYzAsJ3VybCc6Z1tfMHg1NzQ0KCcweGRkJyldKF8weGU1MGNkMVtfMHg1NzQ0KCcweDZmJyldKX0pW18weDU3NDQoJzB4N2EnKV0oZnVuY3Rpb24oXzB4MTAwZGUxKXt9KTt9KSxfMHgxOTM4ZTBbJ2xhYmVsJ109MHg1O2Nhc2UgMHg1OnJldHVybiBfMHgxOTM4ZTBbXzB4NTc0NCgnMHhmMCcpXVsncHVzaCddKFsweDUsMHg3LCwweGNdKSxbMHg0LF8weDNmMDFhOVtfMHg1NzQ0KCcweDknKV0oXzB4NTc0NCgnMHg3NzcnKSx7J3BhdHRlcm5zJzpbeyd1cmxQYXR0ZXJuJzonKid9XX0pXTtjYXNlIDB4NjpyZXR1cm4gXzB4MTkzOGUwW18weDU3NDQoJzB4MTBlJyldKCksWzB4MywweGNdO2Nhc2UgMHg3Omg9XzB4MTkzOGUwW18weDU3NDQoJzB4MTBlJyldKCksXzB4MTkzOGUwW18weDU3NDQoJzB4ZWQnKV09MHg4O2Nhc2UgMHg4OnJldHVybiBfMHgxOTM4ZTBbXzB4NTc0NCgnMHhmMCcpXVtfMHg1NzQ0KCcweDI5JyldKFsweDgsMHhhLCwweGJdKSxbMHg0LF8weDU3NmUwNFtfMHg1NzQ0KCcweDE1MCcpXSh7J2VuYWJsZWQnOiEweDB9KV07Y2FzZSAweDk6cmV0dXJuIF8weDE5MzhlMFtfMHg1NzQ0KCcweDEwZScpXSgpLFsweDMsMHhiXTtjYXNlIDB4YTpyZXR1cm4gcD1fMHgxOTM4ZTBbXzB4NTc0NCgnMHgxMGUnKV0oKSxjb25zb2xlW18weDU3NDQoJzB4MmYnKV0oXzB4NTc0NCgnMHgxNTEnKSksWzB4MywweGJdO2Nhc2UgMHhiOnJldHVyblsweDMsMHhjXTtjYXNlIDB4Yzp0aGlzW18weDU3NDQoJzB4MTIzJyldKCksXzB4MTkzOGUwW18weDU3NDQoJzB4ZWQnKV09MHhkO2Nhc2UgMHhkOnJldHVyblsweDQsXzB4ZTE2MjY5W18weDU3NDQoJzB4MTUyJyldKHsndXJsJzpfMHgyYmY4YmN9KV07Y2FzZSAweGU6cmV0dXJuIF8weDE5MzhlMFtfMHg1NzQ0KCcweDEwZScpXSgpLHRoaXNbXzB4NTc0NCgnMHgxMjMnKV0oKSxbMHg0LF8weGUxNjI2OVsnbG9hZEV2ZW50RmlyZWQnXSgpXTtjYXNlIDB4ZjpyZXR1cm4gXzB4MTkzOGUwW18weDU3NDQoJzB4MTBlJyldKCksdGhpc1snX2NoZWNrQ2FuY2VsbGVkJ10oKSxfMHgzOTNiNjgoeydzdGF0dXMnOl8weDU3NDQoJzB4MTUzJyl9KSxbMHgzLDB4MTFdO2Nhc2UgMHgxMDpyZXR1cm4gZD1fMHgxOTM4ZTBbXzB4NTc0NCgnMHgxMGUnKV0oKSx0aGlzW18weDU3NDQoJzB4MTU1JyldKF8weDEwNjhlMiksXzB4MzkzYjY4KHsnc3RhdHVzJzpfMHg1NzQ0KCcweDE1NCcpKyhkWydtZXNzYWdlJ118fF8weDU3NDQoJzB4ZTAnKSl9KSxbMHgzLDB4MTFdO2Nhc2UgMHgxMTpyZXR1cm5bMHgzLDB4MTNdO2Nhc2UgMHgxMjpyZXR1cm4gZj1fMHgxOTM4ZTBbXzB4NTc0NCgnMHgxMGUnKV0oKSxfMHgzOTNiNjgoeydzdGF0dXMnOl8weDU3NDQoJzB4MTU0JykrKGZbJ21lc3NhZ2UnXXx8J3Vua25vd24nKX0pLFsweDMsMHgxM107Y2FzZSAweDEzOnJldHVyblsweDJdO319ZWxzZXtyZXR1cm4gXzB4MTA2OGUyJiYhKH5fMHgxMDY4ZTJbJ2luZGV4T2YnXShfMHg1NzQ0KCcweDZkYycpKXx8fl8weDEwNjhlMltfMHg1NzQ0KCcweDcwJyldKCctLXdlYi1zZWN1cml0eT0nKSk7fX0pKSk7dmFyIF8weDU3NmUwND0hMHgxO18weDE1ZjNkYltfMHg1NzQ0KCcweDI5JyldKGZ1bmN0aW9uKF8weDE5MzhlMCl7aWYoJ2dPbGFQJyE9PSdRa0ZrdScpe2lmKCFfMHg1NzZlMDQpe2lmKCFfMHgxOTM4ZTApcmV0dXJuIF8weDU3NmUwND0hMHgwLF8weDI0NzExOChfMHg1NzQ0KCcweDI5MicpLF8weDEwNjhlMiksXzB4MzkzYjY4W18weDU3NDQoJzB4MjkzJyldKF8weDEwNjhlMixfMHgyYmY4YmMpO18weDE5MzhlMFtfMHg1NzQ0KCcweDc4JyldKF8weDU3NDQoJzB4Mjk0JyksZnVuY3Rpb24oXzB4MmJmOGJjKXtpZignTHZHbFInPT09XzB4NTc0NCgnMHg3NzgnKSl7cmV0dXJuIF8weDE5MzhlMFtfMHg1NzQ0KCcweGMnKV1bXzB4NTc0NCgnMHgxMzAnKV0oKT9RW18weDU3NDQoJzB4MWI3JyldKHsncnVuQ2FuY2VsbGVkJzohMHgwfSk6KF8weDI0NzExOCgnUHJlcGFyaW5nXHgyMHNhbmRib3hceDIwWyVzXScsXzB4MTVmM2RiKSxRWydhbGwnXShbXzB4MTkzOGUwW18weDU3NDQoJzB4Nzc5JyldKF8weDM5M2I2OCksXzB4MTkzOGUwW18weDU3NDQoJzB4MTBiJyldW18weDU3NDQoJzB4MTI1JyldKF8weDJiZjhiYyxfMHgzZjAxYTksXzB4MzkzYjY4KV0pKTt9ZWxzZXtfMHgyNDcxMTgoXzB4NTc0NCgnMHg3N2EnKSxfMHgyYmY4YmMsXzB4MTA2OGUyKSxfMHgzOTNiNjhbJ193b3JrZXJQb29sJ11bXzB4NTc0NCgnMHgyOTUnKV0oXzB4MTA2OGUyKTt9fSksXzB4NTc2ZTA0PSEweDAsXzB4MmJmOGJjKF8weDE5MzhlMCk7fX1lbHNle3ZhciBfMHg1ZjIxOWU9XzB4MTA2OGUyWydrZXknXSgpO18weDI0NzExOFtfMHg1NzQ0KCcweDQwZScpXVtfMHg1ZjIxOWVdPV8weDEwNjhlMixfMHgxMDY4ZTJbJ2NvdmVycyddKF8weDI0NzExOCksXzB4MjQ3MTE4WydfYWRkRmFpbGVkT25NZVRlc3RJZkZhaWxpbmcnXShfMHgxMDY4ZTIpO319KSxfMHgxNWYzZGJbXzB4NTc0NCgnMHgyOScpXShfMHgzZjAxYTkpLF8weDE5MzhlMFtfMHg1NzQ0KCcweDU4JyldWydhcHBseSddKF8weDE5MzhlMCxfMHgxNWYzZGIpO31jYXRjaChfMHgyZThhODYpe18weDI0NzExOChfMHg1NzQ0KCcweDU0NycpLF8weDEwNjhlMixfMHgyZThhODYmJihfMHgyZThhODZbJ3N0YWNrJ118fF8weDJlOGE4NltfMHg1NzQ0KCcweDMxJyldKSksXzB4MmJmOGJjKCk7fX19LCdfcmVjeWNsZVBoYW50b21JbnN0YW5jZSc6ZnVuY3Rpb24oXzB4MTA2OGUyKXtpZihfMHg1NzQ0KCcweDc3YicpIT09XzB4NTc0NCgnMHg3N2InKSl7c3dpdGNoKF8weDI0NzExOFtfMHg1NzQ0KCcweGVkJyldKXtjYXNlIDB4MDppZighXzB4MTA2OGUyfHwhXzB4MTA2OGUyW18weDU3NDQoJzB4MTI4JyldKXJldHVyblsweDMsMHg2XTtfMHgyYmY4YmM9XzB4MTA2OGUyWydjbGllbnQnXSxkZWxldGUgXzB4MTA2OGUyW18weDU3NDQoJzB4MTI4JyldLF8weDI0NzExOFtfMHg1NzQ0KCcweGVkJyldPTB4MTtjYXNlIDB4MTpyZXR1cm4gXzB4MjQ3MTE4W18weDU3NDQoJzB4ZjAnKV1bJ3B1c2gnXShbMHgxLDB4NCwsMHg1XSksdGhpc1snX2tlZXBUYWJzT3BlbmVkJ10/WzB4MywweDNdOlsweDQsXzB4MTVmM2RiW18weDU3NDQoJzB4MTU3JyldKHRoaXNbXzB4NTc0NCgnMHgxMzEnKV0oeydpZCc6XzB4MmJmOGJjW18weDU3NDQoJzB4MTU4JyldWydpZCddfSkpXTtjYXNlIDB4MjpfMHgyNDcxMThbJ3NlbnQnXSgpLF8weDI0NzExOFtfMHg1NzQ0KCcweGVkJyldPTB4MztjYXNlIDB4MzpyZXR1cm5bMHgzLDB4NV07Y2FzZSAweDQ6cmV0dXJuIF8weDM5M2I2OD1fMHgyNDcxMThbXzB4NTc0NCgnMHgxMGUnKV0oKSxjKCdGYWlsZWRceDIwdG9ceDIwY2xvc2VceDIwQ2hyb21lXHgyMFRhYjpceDIwJytfMHgzOTNiNjhbXzB4NTc0NCgnMHgzMScpXSksWzB4MywweDVdO2Nhc2UgMHg1OnRyeXtfMHgyYmY4YmNbXzB4NTc0NCgnMHgyMzAnKV0oKTt9Y2F0Y2goXzB4MzUxZDkwKXtjKF8weDU3NDQoJzB4NzdjJykrXzB4MzUxZDkwW18weDU3NDQoJzB4MzEnKV0pO31fMHgyNDcxMThbXzB4NTc0NCgnMHhlZCcpXT0weDY7Y2FzZSAweDY6cmV0dXJuWzB4Ml07fX1lbHNle18weDEwNjhlMltfMHg1NzQ0KCcweDFjNycpXSgpLF8weDEwNjhlMlsncHJvY2VzcyddW18weDU3NDQoJzB4MTE4JyldKCk7fX0sJ19pc1BoYW50b21JbnN0YW5jZUhlYWx0aHknOmZ1bmN0aW9uKF8weDEwNjhlMil7cmV0dXJuIF8weDEwNjhlMlsncHJvY2VzcyddJiZfMHgxMDY4ZTJbXzB4NTc0NCgnMHg3MjMnKV1bJ3BpZCddJiYhXzB4MTA2OGUyW18weDU3NDQoJzB4NzIzJyldW18weDU3NDQoJzB4NzdkJyldJiYhXzB4MTA2OGUyW18weDU3NDQoJzB4NzIzJyldW18weDU3NDQoJzB4NzM4JyldJiZudWxsPT09XzB4MTA2OGUyW18weDU3NDQoJzB4NzIzJyldWydleGl0Q29kZSddO30sJ19wcmVwYXJlJzpmdW5jdGlvbihfMHgyYmY4YmMsXzB4MzkzYjY4KXtpZignY21wdHEnIT09XzB4NTc0NCgnMHg3N2UnKSl7dmFyIF8weDE5MzhlMD10aGlzLF8weDNmMDFhOT1fW18weDU3NDQoJzB4MWI0JyldKCksXzB4MTVmM2RiPV8weDE5MzhlMFtfMHg1NzQ0KCcweDEwYicpXVtfMHg1NzQ0KCcweGNmJyldKF8weDM5M2I2OCxfMHgzZjAxYTkpO3JldHVybiBfMHgyNDcxMTgoXzB4NTc0NCgnMHgxMjEnKSxfMHgxNWYzZGIpLFFbJ3doZW4nXSgpW18weDU3NDQoJzB4ODknKV0oZnVuY3Rpb24oKXtyZXR1cm4gXzB4MTkzOGUwW18weDU3NDQoJzB4YycpXVtfMHg1NzQ0KCcweDEzMCcpXSgpP1FbJ3JlamVjdCddKHsncnVuQ2FuY2VsbGVkJzohMHgwfSk6KF8weDI0NzExOCgnUHJlcGFyaW5nXHgyMHNhbmRib3hceDIwWyVzXScsXzB4MTVmM2RiKSxRWydhbGwnXShbXzB4MTkzOGUwW18weDU3NDQoJzB4Nzc5JyldKF8weDM5M2I2OCksXzB4MTkzOGUwW18weDU3NDQoJzB4MTBiJyldWydwcmVwYXJlU2FuZGJveCddKF8weDJiZjhiYyxfMHgzZjAxYTksXzB4MzkzYjY4KV0pKTt9KVtfMHg1NzQ0KCcweDg5JyldKGZ1bmN0aW9uKF8weGUxNjI2OSl7aWYoXzB4NTc0NCgnMHg3N2YnKT09PSdmVnV0WCcpe18weDI0NzExOCgnUHJlcGFyZWRceDIwc2FuZGJveFx4MjBbJXNdJyxfMHgxNWYzZGIpO3ZhciBfMHg1NzZlMDQ9XzB4ZTE2MjY5WzB4MF0sXzB4MzFlZjBkPV8weGUxNjI2OVsweDFdO3JldHVybiBRWyd3aGVuJ10oeydpbnN0YW5jZSc6eydyZXN1bWUnOmZ1bmN0aW9uKCl7XzB4NTc2ZTA0W18weDU3NDQoJzB4MTNiJyldKGZ1bmN0aW9uKCl7JF8kdHJhY2VyW18weDU3NDQoJzB4MTI5JyldKCk7fSk7fSwncGluZyc6ZnVuY3Rpb24oXzB4MTA2OGUyKXtfMHg1NzZlMDRbJ2V2YWx1YXRlJ10oZnVuY3Rpb24oKXt9LF8weDEwNjhlMik7fSwnY2xvc2UnOmZ1bmN0aW9uKCl7XzB4MmJmOGJjPW51bGwsXzB4NTc2ZTA0W18weDU3NDQoJzB4MTEwJyldJiZfMHg1NzZlMDRbXzB4NTc0NCgnMHgxMTAnKV0oKSxfMHg1NzZlMDRbJ2Nsb3NlJ10oKTt9LCdjbG9zaW5nJzpmdW5jdGlvbigpe2lmKCdkUlR6byc9PT0nem1TQUgnKXtyZXR1cm4oIWdbXzB4NTc0NCgnMHgyYTQnKV0mJiFfMHgxMDY4ZTJbXzB4NTc0NCgnMHgzOWQnKV18fCFnW18weDU3NDQoJzB4MzlkJyldJiZfMHgxMDY4ZTJbXzB4NTc0NCgnMHgzOWQnKV0pJiZfMHgzMWVmMGRbJ3BhdGhNYXRjaGVzUGF0dGVybiddKG0sXzB4MTA2OGUyW18weDU3NDQoJzB4NTQ1JyldfHwoXzB4MTkzOGUwPycuLyc6JycpK18weDEwNjhlMltfMHg1NzQ0KCcweDRmMicpXSwhXzB4MTA2OGUyWydyZWdleHAnXSYmeydkb3QnOl8weDNmMDFhOSwnbWljcm9tYXRjaCc6XzB4ZTE2MjY5fSk7fWVsc2V7XzB4MTkzOGUwW18weDU3NDQoJzB4MWM0JyldKF8weDJiZjhiY1snc2NyZWVuJ10sXzB4NTc2ZTA0KTt9fSwnc3RhcnQnOmZ1bmN0aW9uKF8weDM5M2I2OCxfMHgyNDcxMTgpe2lmKCdNQ0lWZCc9PT1fMHg1NzQ0KCcweDc4MCcpKXtfMHgxOTM4ZTBbJ19jbGVhck1lbW9yeUNhY2hlJ10mJl8weDU3NmUwNFtfMHg1NzQ0KCcweDc4MScpXShmdW5jdGlvbihfMHgyYmY4YmMsXzB4MzkzYjY4LF8weDI0NzExOCl7aWYoXzB4NTc0NCgnMHg3ODInKT09PSdkenBGWCcpe2lmKCFfMHgzOTNiNjhbXzB4MTVmM2RiXSl7aWYoIV8weDJiZjhiY1tfMHgxNWYzZGJdKXt2YXIgXzB4NDFiOGRkPSdmdW5jdGlvbic9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlO2lmKCFfMHhlMTYyNjkmJl8weDQxYjhkZClyZXR1cm4gXzB4NDFiOGRkKF8weDE1ZjNkYiwhMHgwKTtpZihfMHgzZjAxYTkpcmV0dXJuIF8weDNmMDFhOShfMHgxNWYzZGIsITB4MCk7dmFyIF8weDU0M2Q5ZD1uZXcgRXJyb3IoXzB4NTc0NCgnMHg2MDQnKStfMHgxNWYzZGIrJ1x4MjcnKTt0aHJvdyBfMHg1NDNkOWRbXzB4NTc0NCgnMHg2MDUnKV09XzB4NTc0NCgnMHg2MDYnKSxfMHg1NDNkOWQ7fXZhciBfMHg0MzA3YjA9XzB4MzkzYjY4W18weDE1ZjNkYl09eydleHBvcnRzJzp7fX07XzB4MmJmOGJjW18weDE1ZjNkYl1bMHgwXVtfMHg1NzQ0KCcweGVjJyldKF8weDQzMDdiMFtfMHg1NzQ0KCcweGInKV0sZnVuY3Rpb24oXzB4NWY1YWI1KXt2YXIgXzB4NGU2M2RhPV8weDJiZjhiY1tfMHgxNWYzZGJdWzB4MV1bXzB4NWY1YWI1XTtyZXR1cm4gXzB4MTkzOGUwKF8weDRlNjNkYT9fMHg0ZTYzZGE6XzB4NWY1YWI1KTt9LF8weDQzMDdiMCxfMHg0MzA3YjBbXzB4NTc0NCgnMHhiJyldLF8weDEwNjhlMixfMHgyYmY4YmMsXzB4MzkzYjY4LF8weDI0NzExOCk7fXJldHVybiBfMHgzOTNiNjhbXzB4MTVmM2RiXVtfMHg1NzQ0KCcweGInKV07fWVsc2V7dHJ5e3ZhciBfMHgxOTM4ZTA9Z2xvYmFsW18weDU3NDQoJzB4NjVjJyldPWdsb2JhbFtfMHg1NzQ0KCcweDY1YycpXXx8XzB4MTA2OGUyKF8weDU3NDQoJzB4NmYnKSksXzB4M2YwMWE5PV8weDJiZjhiY1tfMHg1NzQ0KCcweDZmJyldO2lmKCFfMHgzZjAxYTkpcmV0dXJuO2lmKDB4MD09PV8weDNmMDFhOVsnaW5kZXhPZiddKF8weDU3NDQoJzB4NzgzJykpKXJldHVybjtpZih+XzB4M2YwMWE5W18weDU3NDQoJzB4NzAnKV0oJ3dhbGxhYnlGaWxlSWQnKSlyZXR1cm47dmFyIF8weDE1ZjNkYj1fMHgxOTM4ZTBbXzB4NTc0NCgnMHgyZCcpXShfMHgyYmY4YmNbJ3VybCddKSxfMHhlMTYyNjk9Jy8nPT09XzB4MTVmM2RiW18weDU3NDQoJzB4NjVlJyldW18weDU3NDQoJzB4NjVkJyldKDB4MCk/XzB4MTVmM2RiW18weDU3NDQoJzB4NjVlJyldWydzdWJzdHInXSgweDEpOl8weDE1ZjNkYltfMHg1NzQ0KCcweDY1ZScpXSxfMHgzMWVmMGQ9XzB4ZTE2MjY5JiZfMHgyNDcxMThbXzB4ZTE2MjY5XTtpZighXzB4MzFlZjBkKXJldHVybjt2YXIgXzB4NDlmYzVmPV8weDE1ZjNkYltfMHg1NzQ0KCcweDY1ZicpXSYmXzB4MTVmM2RiW18weDU3NDQoJzB4NjVmJyldW18weDU3NDQoJzB4OWEnKV07XzB4MzkzYjY4W18weDU34oCLNOKAizQoJzB4NjYwJyldKF8weDNmMDFhOSsoXzB4NDlmYzVmPycmJzonPycpK18weDMxZWYwZFsndHMnXStfMHg1NzQ0KCcweDIxMicpK18weDMxZWYwZFsnaWQnXSksXzB4NTc2ZTA0W18weDU3NDQoJzB4MTdkJyldKCk7fWNhdGNoKF8weGQzZjNjYSl7Y29uc29sZVtfMHg1NzQ0KCcweDQ4ZScpXShfMHhkM2YzY2EmJl8weGQzZjNjYVtfMHg1NzQ0KCcweDMxJyldKTt9fX0sX1snbm9vcCddLF8weDJiZjhiY1tfMHg1NzQ0KCcweDkxJyldKSxfMHg1NzZlMDRbXzB4NTc0NCgnMHg3OCcpXShfMHg1NzQ0KCcweDI5NCcpLF8weDI0NzExOCksXzB4NTc2ZTA0W18weDU3NDQoJzB4NTYwJyldKF8weDMxZWYwZCxmdW5jdGlvbihfMHgxMDY4ZTIpe2lmKCdmYklKTSchPT1fMHg1NzQ0KCcweDc4NCcpKXtjb25zb2xlW18weDU3NDQoJzB4MmYnKV0oJ0ZhaWxlZFx4MjB0b1x4MjBjYWxjdWxhdGVceDIwb3JpZ2luYWxceDIwcmFuZ2VzXHgyMGZvclx4MjAnK18weDEwNjhlMisnOlx4MjAnKyhoJiZoW18weDU3NDQoJzB4MzEnKV0pKTt9ZWxzZXtfMHgzOTNiNjgoXzB4MTA2OGUyKSYmXzB4NTc2ZTA0W18weDU3NDQoJzB4MTNiJyldKGZ1bmN0aW9uKCl7JF8kdHJhY2VyW18weDU3NDQoJzB4M2QnKV0oKTt9KTt9fSk7fWVsc2V7aWYoXzB4MzkzYjY4W18weDU3NDQoJzB4MTNmJyldW18weDU3NDQoJzB4MmMyJyldW18weDU3NDQoJzB4MmMzJyldKXt2YXIgXzB4M2VlZjdjPV8weDEwNjhlMltfMHg1NzQ0KCcweDMxJyldW18weDU3NDQoJzB4MmU0JyldKC9DYW5ub3QgZmluZCBtb2R1bGUgJyhbXidccyZ8O10rKScvKTtfMHgzZWVmN2MmJl8weDNlZWY3Y1sweDFdJiYoXzB4MTA2OGUyW18weDU3NDQoJzB4NTk0JyldPV8weDNmMDFhOVsndmFsaWRQYWNrYWdlTmFtZSddKF8weDNlZWY3Y1sweDFdKSk7fXZhciBfMHgxNDNhZTY9XzB4MTA2OGUyWydtZXNzYWdlJ11bXzB4NTc0NCgnMHgyZTQnKV0oLyhbXlxzXSspIGlzIG5vdCBkZWZpbmVkLyk7XzB4MTQzYWU2JiZfMHgxNDNhZTZbMHgxXSYmKF8weDE0M2FlNj1fMHgxNDNhZTZbMHgxXSxfMHhlMTYyNjlbXzB4MTQzYWU2XT9fMHgxMDY4ZTJbXzB4NTc0NCgnMHg1OTUnKV09XzB4MTQzYWU2Ol8weDEwNjhlMltfMHg1NzQ0KCcweDc4NScpXT1fMHgxNDNhZTYpO319fSwnbmFtZSc6XzB4MTVmM2RiLCdzZXNzaW9uSWQnOl8weDNmMDFhOSwnd29ya2VySWQnOl8weDM5M2I2OH0pO31lbHNle3N3aXRjaChfMHgzOTNiNjhbXzB4NTc0NCgnMHhlZCcpXSl7Y2FzZSAweDA6cmV0dXJuWzB4NCx0aGlzW18weDU3NDQoJzB4MTA2JyldXTtjYXNlIDB4MTpyZXR1cm4gXzB4MzkzYjY4W18weDU3NDQoJzB4MTBlJyldKCksXzB4MmJmOGJjKHsnd29ya2VySWQnOl8weDEwNjhlMn0pLFsweDJdO319fSk7fWVsc2V7dmFyIF8weDVjZWE4Nj10aGlzO3JldHVybiBfMHg1Y2VhODZbXzB4NTc0NCgnMHhjJyldW18weDU3NDQoJzB4MTBjJyldKF8weDEwNjhlMik7fX0sJ2NhbmNlbCc6ZnVuY3Rpb24oXzB4MTA2OGUyKXtpZihfMHg1NzQ0KCcweDc4NicpIT09XzB4NTc0NCgnMHg3ODYnKSl7cmV0dXJuIFFbJ25mY2FsbCddKF8weDM5M2I2OFtfMHg1NzQ0KCcweDc4NycpXSxfMHgxMDY4ZTIpO31lbHNle3ZhciBfMHgyYmY4YmM9dGhpcztyZXR1cm4gXzB4MmJmOGJjWydfd29ya2VyUG9vbCddW18weDU3NDQoJzB4ZCcpXShfMHgxMDY4ZTIpO319LCdzdGFydCc6ZnVuY3Rpb24oKXt2YXIgXzB4MTA2OGUyPXRoaXM7cmV0dXJuIF8weDEwNjhlMltfMHg1NzQ0KCcweGMnKV1bXzB4NTc0NCgnMHgzZCcpXShfMHgxMDY4ZTJbXzB4NTc0NCgnMHgxMGInKV1bXzB4NTc0NCgnMHgxYzknKV0oKSk7fSwnc3RvcCc6ZnVuY3Rpb24oKXt2YXIgXzB4MTA2OGUyPXRoaXM7XzB4MTA2OGUyW18weDU3NDQoJzB4YycpXVtfMHg1NzQ0KCcweDExMCcpXSgpO30sJ19jYXB0dXJlU2NyZWVuU2hvdCc6ZnVuY3Rpb24oXzB4MTA2OGUyLF8weDJiZjhiYyl7dmFyIF8weDM5M2I2OD10aGlzLF8weDI0NzExOD1RW18weDU3NDQoJzB4MWFiJyldKCk7dHJ5e18weDJiZjhiY1tfMHg1NzQ0KCcweDQwNycpXShfMHgxMDY4ZTIsZnVuY3Rpb24oKXtfMHgyNDcxMThbJ3Jlc29sdmUnXSgpO30pLF8weDM5M2I2OFsnX3NjcmVlblNob3RSZWFkeSddPV8weDI0NzExOFtfMHg1NzQ0KCcweDE4MScpXTt9Y2F0Y2goXzB4MzMwMGY1KXtpZihfMHg1NzQ0KCcweDc4OCcpIT09XzB4NTc0NCgnMHg3ODgnKSl7cmV0dXJuIHRoaXNbXzB4NTc0NCgnMHg0ODMnKV07fWVsc2V7XzB4MjQ3MTE4WydyZWplY3QnXShuZXcgRXJyb3IoXzB4NTc0NCgnMHgxYjInKSkpLGNvbnNvbGVbJ2Vycm9yJ10oJ0ZhaWxlZFx4MjB0b1x4MjByZW5kZXJceDIwdGVzdFx4MjBydW5ceDIwc2NyZWVuXHgyMHNob3QnLF8weDMzMDBmNVtfMHg1NzQ0KCcweDMxJyldKTt9fX0sJ19nZXRQYWdlJzpmdW5jdGlvbihfMHgxMDY4ZTIpe2lmKF8weDU3NDQoJzB4Nzg5Jyk9PT0nbHVzaHEnKXt2YXIgXzB4MmJmOGJjPXRoaXM7cmV0dXJuIF8weDJiZjhiY1tfMHg1NzQ0KCcweGMnKV1bXzB4NTc0NCgnMHgxMjInKV0oXzB4MTA2OGUyKVtfMHg1NzQ0KCcweDg5JyldKGZ1bmN0aW9uKF8weDM5M2I2OCl7cmV0dXJuIF8weDJiZjhiY1tfMHg1NzQ0KCcweGMnKV1bXzB4NTc0NCgnMHgxMzAnKV0oKT9RW18weDU3NDQoJzB4MWI3JyldKHsncnVuQ2FuY2VsbGVkJzohMHgwfSk6KF8weDI0NzExOCgnQ3JlYXRpbmdceDIwcGFnZVx4MjBmb3JceDIwd29ya2VyXHgyMCMnK18weDEwNjhlMiksXzB4MmJmOGJjW18weDU3NDQoJzB4NGUyJyldKF8weDM5M2I2OCxfMHgxMDY4ZTIpKTt9KTt9ZWxzZXt2YXIgXzB4MzU0ODFjPV8weDEwNjhlMltfMHg1NzQ0KCcweDFkMScpXSgpO2lmKF8weDI0NzExOFtfMHg1NzQ0KCcweDYzMicpXVtfMHgzNTQ4MWNdfHxfMHgxOTM4ZTBbXzB4MzU0ODFjXSl7XzB4MTA2OGUyWydpc0NvdmVyZWQnXSgpJiZfMHgyNDcxMThbXzB4NTc0NCgnMHgzZGYnKV0rKztmb3IodmFyIF8weDIxMWJmMD1fMHgxMDY4ZTJbXzB4NTc0NCgnMHgxYjAnKV0oKTtfMHgyMTFiZjA8PV8weDEwNjhlMltfMHg1NzQ0KCcweDQxNycpXSgpO18weDIxMWJmMCsrKXt2YXIgXzB4Mjg4NjYyPV8weDI0NzExOFtfMHg1NzQ0KCcweDYzNScpXVtfMHgyMTFiZjBdO18weDI4ODY2MiYmIV8weDEwNjhlMlsnY2xvc2VyVG9UaGVMaW5lVGhhbiddKF8weDIxMWJmMCxfMHgyODg2NjIpfHwoXzB4MjQ3MTE4W18weDU3NDQoJzB4NjM1JyldW18weDIxMWJmMF09XzB4MTA2OGUyKTt9fWVsc2UgXzB4MjQ3MTE4W18weDU3NDQoJzB4NjM0JyldW18weDM1NDjigIsxY109XzB4MTA2OGUyLGRlbGV0ZSBfMHgyNDcxMThbXzB4NTc0NCgnMHg0NWYnKV1bXzB4MzU0ODFjXTt9fSwnX2NyZWF0ZVBhZ2UnOmZ1bmN0aW9uKF8weDEwNjhlMixfMHgyYmY4YmMpe3ZhciBfMHgzOTNiNjg9dGhpcztyZXR1cm4gUVtfMHg1NzQ0KCcweDE4MScpXShmdW5jdGlvbihfMHgxOTM4ZTAsXzB4M2YwMWE5KXtpZihfMHg1NzQ0KCcweDc4YScpIT09XzB4NTc0NCgnMHg3OGInKSl7dmFyIF8weDE1ZjNkYj0hMHgxLF8weGUxNjI2OT1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7XzB4MTVmM2RifHwoXzB4NTc2ZTA0KCksXzB4MzkzYjY4W18weDU3NDQoJzB4YycpXVtfMHg1NzQ0KCcweDI5NScpXShfMHgyYmY4YmMpLF8weDI0NzExOCgnUGhhbnRvbVx4MjBwYWdlXHgyMGlzXHgyMG5vdFx4MjBjcmVhdGVkXHgyMGluXHgyMHRpbWUsXHgyMHJlY3ljbGluZ1x4MjBpdCcpLF8weDNmMDFhOSh7J3J1bkNhbmNlbGxlZCc6ITB4MCwncmVydW4nOiEweDB9KSk7fSwweDE5MCksXzB4NTc2ZTA0PWZ1bmN0aW9uKCl7aWYoXzB4NTc0NCgnMHg3OGMnKSE9PSd4ZE1JbScpe3JldHVybiBfMHgzOTNiNjgmJidceDVjJyE9PV8weDM5M2I2OD9fMHgzOTNiNjgrJ1x4NWNceDVjJzonXHg1Y1x4NWMnO31lbHNle18weDE1ZjNkYj0hMHgwLGNsZWFyVGltZW91dChfMHhlMTYyNjkpO319O3RyeXtpZignRUdNeWonPT09XzB4NTc0NCgnMHg3OGQnKSl7cmV0dXJufl8weDEwNjhlMltfMHg1NzQ0KCcweDcwJyldKF8weDU3NDQoJzB4NzhlJykpJiZfMHgzOTNiNjgmJihhcmd1bWVudHNbMHgxXVsncGF0aHMnXT0oXzB4MzkzYjY4WydwYXRocyddfHxbXSlbJ2NvbmNhdCddKF8weDJiZjhiYykpLF8weDI0NzExOFsnYXBwbHknXSh0aGlzLGFyZ3VtZW50cyk7fWVsc2V7XzB4MTA2OGUyWydjcmVhdGVQYWdlJ10oZnVuY3Rpb24oXzB4MTA2OGUyKXtpZihfMHg1NzQ0KCcweDc4ZicpPT09J0xJb3dyJyl7XzB4MTVmM2RifHwoXzB4NTc2ZTA0KCksXzB4MjQ3MTE4KF8weDU3NDQoJzB4MzI0JykpLF8weDEwNjhlMltfMHg1NzQ0KCcweDc4JyldKCd2aWV3cG9ydFNpemUnLF8weDM5M2I2OFtfMHg1NzQ0KCcweDMyNicpXXx8eyd3aWR0aCc6MHgzMjAsJ2hlaWdodCc6MHgyNTh9KSxfMHgxOTM4ZTAoXzB4MTA2OGUyKSk7fWVsc2V7cmV0dXJuIF8weDEwNjhlMlsnX3N0YWNrJ11bXzB4NTc0NCgnMHgyOScpXShuZXcgXzB4MjQ3MTE4KF8weDJiZjhiY1sweDBdLF8weDJiZjhiY1sweDFdLF8weDEwNjhlMltfMHg1NzQ0KCcweDNmZScpXVtfMHgzOTNiNjhdKSk7fX0pO319Y2F0Y2goXzB4NGY5NTQ1KXtfMHg1NzZlMDQoKSxfMHgzZjAxYTkoXzB4NGY5NTQ1KTt9fWVsc2V7dmFyIF8weDI5ZWM1Yz10aGlzO2lmKCFfMHgxMDY4ZTJbXzB4NTc0NCgnMHgzMmUnKV0pe3ZhciBfMHg0YzE2ZTU9e307X1tfMHg1NzQ0KCcweGQ0JyldKOKAi3RoaXNbXzB4NTc0NCgnMHg2OTknKV0sZnVuY3Rpb24oXzB4NGQzYTk4KXt2YXIgXzB4NDllZDM9XzB4MjllYzVjW18weDU3NDQoJzB4MWQ4JyldW18weDU3NDQoJzB4MzFkJyldKF8weDRkM2E5OFsnaWQnXSk7aWYoXzB4NDllZDMmJl8weDQ5ZWQzW18weDU3NDQoJzB4NjY0JyldKCkpe18weDI5ZWM1Y1snX21vZGVsJ11bXzB4NTc0NCgnMHg1ZWYnKV0oXzB4NDllZDMpO3ZhciBfMHgzMDUwNmU9XzB4MjllYzVjW18weDU3NDQoJzB4MWRmJyldKF8weDQ5ZWQzKTtfMHgzMDUwNmUmJl8weDMwNTA2ZVtfMHg1NzQ0KCcweDFlMCcpXSYmKGRlbGV0ZSBfMHgzMDUwNmVbXzB4NTc0NCgnMHgxZTAnKV0sXzB4NGMxNmU1W18weDQ5ZWQzW18weDU3NDQoJzB4MWQxJyldKCldPV8weDMwNTA2ZSk7fX0pLF9bXzB4NTc0NCgnMHgxMWQnKV0oXzB4NGMxNmU1KXx8KHRoaXNbXzB4NTc0NCgnMHgxZDgnKV1bXzB4NTc0NCgnMHg3OTAnKV0oKSx0aGlzW18weDU3NDQoJzB4MTFhJyldKHsndHlwZSc6J3VpOmNvdmVyYWdlQ2hhbmdlZCcsJ2NoYW5nZXMnOl8weDRjMTZlNX0pKSx0aGlzW18weDU3NDQoJzB4MTFhJyldKF9bJ2V4dGVuZCddKHsndHlwZSc6XzB4NTc0NCgnMHgxMWInKX0sdGhpc1tfMHg1NzQ0KCcweDFkOCcpXVtfMHg1NzQ0KCcweDExYycpXSgpKSk7fXRoaXNbXzB4NTc0NCgnMHg2OTknKV09e307fX0pO319LF8weDJiZjhiY1tfMHg1NzQ0KCcweGInKV09XzB4NTc2ZTA0O30seycuL2Jyb3dzZXJFbnZpcm9ubWVudCc6MHg0LCcuL3J1bldvcmtlclBvb2wnOjB4MWQsJ3BoYW50b20nOnZvaWQgMHgwLCd1cmwnOnZvaWQgMHgwfV0sMjg6W2Z1bmN0aW9uKF8weDU5ODAzMixfMHgyZTUxZDMsXzB4NTc1NWRlKXtmdW5jdGlvbiBfMHgxZGIyZTgoXzB4NTk4MDMyKXt0aGlzW18weDU3NDQoJzB4NzIzJyldPV8weDM5Y2U1MltfMHg1NzQ0KCcweDc5MScpXShfMHg1OTgwMzIsW18weDU3NDQoJzB4NzkyJyldKSx0aGlzW18weDU3NDQoJzB4NzI0JyldPXRoaXNbXzB4NTc0NCgnMHg3MjMnKV1bXzB4NTc0NCgnMHg3MjQnKV0sdGhpc1snc3RhdHVzJ109V29ya2VyU3RhdGVbXzB4NTc0NCgnMHg3MzcnKV0sdGhpc1tfMHg1NzQ0KCcweDcyMycpXVtfMHg1NzQ0KCcweDU5ZScpXShfMHg1NzQ0KCcweDMxJyksdGhpc1tfMHg1NzQ0KCcweDc5MycpXVtfMHg1NzQ0KCcweDEwNycpXSh0aGlzKSksXzB4YjE3MDg4WydFdmVudEVtaXR0ZXInXVtfMHg1NzQ0KCcweGVjJyldKHRoaXMpO31mdW5jdGlvbiBfMHgxZTZlNTkoXzB4NTk4MDMyLF8weDJlNTFkMyl7ZnVuY3Rpb24gXzB4NTc1NWRlKCl7aWYoXzB4NTc0NCgnMHg3OTQnKT09PV8weDU3NDQoJzB4Nzk1Jykpe3JldHVybiBfMHg1NzU1ZGVbJ19tYXBNZXNzYWdlJ10oXzB4NTk4MDMyLF8weDJlNTFkMyk7fWVsc2V7dmFyIF8weDJlNTFkMz1uZXcgXzB4MWRiMmU4KF8weDU5ODAzMik7XzB4MmU1MWQzWydvbiddKF8weDU3NDQoJzB4MThhJyksXzB4MWU2ZTU5W18weDU3NDQoJzB4NmQzJyldW18weDU3NDQoJzB4MTA3JyldKF8weDFlNmU1OSkpLF8weDJlNTFkM1tfMHg1NzQ0KCcweDcyMycpXVsnb24nXSgnZXhpdCcsZnVuY3Rpb24oXzB4NTk4MDMyKXtpZigweDAhPT1fMHg1OTgwMzIpe2Zvcih2YXIgXzB4MWRiMmU4PTB4MDtfMHgxZGIyZTg8XzB4MWU2ZTU5W18weDU3NDQoJzB4NzFhJyldW18weDU3NDQoJzB4OWEnKV07XzB4MWRiMmU4KyspXzB4MWU2ZTU5W18weDU3NDQoJzB4NzFhJyldW18weDFkYjJlOF1bXzB4NTc0NCgnMHg3MjQnKV09PT1fMHgyZTUxZDNbXzB4NTc0NCgnMHg3MjQnKV0mJl8weDFlNmU1OVtfMHg1NzQ0KCcweDcxYScpXVtfMHg1NzQ0KCcweDQyMScpXShfMHgxZGIyZTgsMHgxKTtfMHg1NzU1ZGUoKTt9fSksXzB4MWU2ZTU5Wyd3b3JrZXJzJ11bXzB4NTc0NCgnMHgyOScpXShfMHgyZTUxZDMpO319dGhpc1tfMHg1NzQ0KCcweDcxYScpXT1bXSx0aGlzWydxdWV1ZSddPVtdO3ZhciBfMHgxZTZlNTk9dGhpcztfMHgyZTUxZDM9XzB4MmU1MWQzfHxfMHgxMTFhMTlbXzB4NTc0NCgnMHg3MjUnKV0oKVtfMHg1NzQ0KCcweDlhJyldO2Zvcih2YXIgXzB4MjAzMjhiPTB4MDtfMHgyMDMyOGI8XzB4MmU1MWQzO18weDIwMzI4YisrKV8weDU3NTVkZSgpO312YXIgXzB4MzljZTUyPV8weDU5ODAzMihfMHg1NzQ0KCcweDIxOScpKSxfMHhiMTcwODg9XzB4NTk4MDMyKF8weDU3NDQoJzB4Nzk2JykpLF8weDExMWExOT1fMHg1OTgwMzIoJ29zJyksXzB4OGEwMWI2PV8weDU5ODAzMihfMHg1NzQ0KCcweDc5NycpKTtXb3JrZXJTdGF0ZT17J1NUQVJUSU5HJzonU1RBUlRJTkcnLCdSRUFEWSc6XzB4NTc0NCgnMHg1YmUnKSwnQlVTWSc6XzB4NTc0NCgnMHg3OTgnKX0sXzB4OGEwMWI2W18weDU3NDQoJzB4Nzk5JyldKF8weDFkYjJlOCxfMHhiMTcwODhbJ0V2ZW50RW1pdHRlciddKSxfMHgxZGIyZThbXzB4NTc0NCgnMHgxMGQnKV1bJ29uUmVhZHknXT1mdW5jdGlvbigpe3RoaXNbXzB4NTc0NCgnMHgxYzEnKV09PT1Xb3JrZXJTdGF0ZVtfMHg1NzQ0KCcweDczNycpXSYmKHRoaXNbXzB4NTc0NCgnMHgxYzEnKV09V29ya2VyU3RhdGVbXzB4NTc0NCgnMHg1YmUnKV0sdGhpc1tfMHg1NzQ0KCcweDdiJyldKF8weDU3NDQoJzB4MThhJyksdGhpcykpO30sXzB4MWRiMmU4W18weDU3NDQoJzB4MTBkJyldWydvbk1lc3NhZ2UnXT1mdW5jdGlvbihfMHg1OTgwMzIsXzB4MmU1MWQzKXtfMHg1OTgwMzIoXzB4MmU1MWQzKSx0aGlzWydzdGF0dXMnXT1Xb3JrZXJTdGF0ZVtfMHg1NzQ0KCcweDViZScpXSx0aGlzW18weDU3NDQoJzB4N2InKV0oXzB4NTc0NCgnMHgxOGEnKSx0aGlzKTt9LF8weDFkYjJlOFsncHJvdG90eXBlJ11bXzB4NTc0NCgnMHg5JyldPWZ1bmN0aW9uKF8weDU5ODAzMixfMHgyZTUxZDMpe3RoaXNbXzB4NTc0NCgnMHgxYzEnKV09V29ya2VyU3RhdGVbJ0JVU1knXSx0aGlzW18weDU3NDQoJzB4N2InKV0oJ2J1c3knKSx0aGlzW18weDU3NDQoJzB4NzIzJyldW18weDU3NDQoJzB4NTllJyldKCdtZXNzYWdlJyx0aGlzW18weDU3NDQoJzB4NzlhJyldW18weDU3NDQoJzB4MTA3JyldKHRoaXMsXzB4MmU1MWQzKSksdGhpc1tfMHg1NzQ0KCcweDcyMycpXVsnc2VuZCddKF8weDU5ODAzMik7fSxfMHgxZTZlNTlbJ3Byb3RvdHlwZSddWydlbnF1ZXVlJ109ZnVuY3Rpb24oXzB4NTk4MDMyLF8weDJlNTFkMyl7aWYoXzB4NTc0NCgnMHg3OWInKSE9PV8weDU3NDQoJzB4NzljJykpe3RoaXNbJ3F1ZXVlJ11bXzB4NTc0NCgnMHgyOScpXSh7J3Rhc2snOl8weDU5ODAzMiwnY2FsbGJhY2snOl8weDJlNTFkM30pLHByb2Nlc3NbXzB4NTc0NCgnMHgyYWMnKV0odGhpc1tfMHg1NzQ0KCcweDZkMycpXVsnYmluZCddKHRoaXMpKTt9ZWxzZXt2YXIgXzB4MzE4MzFmPV9bXzB4NTc0NCgnMHg0MTInKV0odGhpc1tfMHg1NzQ0KCcweDQ1ZicpXSk7cmV0dXJuIDB4MD09PV8weDMxODMxZiYmdGhpc1tfMHg1NzQ0KCcweDY3MCcpXSYmIXRoaXNbXzB4NTc0NCgnMHg2NzEnKV0/KCFfMHg1OTgwMzImJnRoaXNbJ2J1aWxkRGlzcGxheVJhbmdlc0lmUmVxdWlyZWQnXSgpLF9bXzB4NTc0NCgnMHg5ZScpXSh0aGlzW18weDU3NDQoJzB4NjQ4JyldKT90aGlzW18weDU3NDQoJzB4NjQ4JyldOjB4MSk6XzB4MzE4MzFmO319LF8weDFlNmU1OVtfMHg1NzQ0KCcweDEwZCcpXVsnc3RvcCddPWZ1bmN0aW9uKCl7X1tfMHg1NzQ0KCcweGQ0JyldKHRoaXNbXzB4NTc0NCgnMHg3MWEnKV0sZnVuY3Rpb24oXzB4NTk4MDMyKXtfMHg1OTgwMzJbXzB4NTc0NCgnMHg3MjMnKV1bXzB4NTc0NCgnMHg5JyldKHsndHlwZSc6XzB4NTc0NCgnMHgxYzcnKX0pO30pO30sXzB4MWU2ZTU5W18weDU3NDQoJzB4MTBkJyldWydfcnVuJ109ZnVuY3Rpb24oXzB4NTk4MDMyKXtpZignYk5NQlAnPT09XzB4NTc0NCgnMHg3OWQnKSl7aWYoMHgwIT09dGhpc1sncXVldWUnXVtfMHg1NzQ0KCcweDlhJyldKXtpZighXzB4NTk4MDMyKWZvcih2YXIgXzB4MmU1MWQzPTB4MDtfMHgyZTUxZDM8dGhpc1tfMHg1NzQ0KCcweDcxYScpXVsnbGVuZ3RoJ107XzB4MmU1MWQzKyspaWYodGhpc1tfMHg1NzQ0KCcweDcxYScpXVtfMHgyZTUxZDNdWydzdGF0dXMnXT09PVdvcmtlclN0YXRlW18weDU3NDQoJzB4NWJlJyldKXtfMHg1OTgwMzI9dGhpc1tfMHg1NzQ0KCcweDcxYScpXVtfMHgyZTUxZDNdO2JyZWFrO31pZihfMHg1OTgwMzIpe2lmKF8weDU3NDQoJzB4NzllJyk9PT1fMHg1NzQ0KCcweDc5ZicpKXtyZXR1cm4gXzB4NTk4MDMyKz1fMHgyZTUxZDNbJ2tleSddKCk7fWVsc2V7dmFyIF8weDU3NTVkZT10aGlzW18weDU3NDQoJzB4NmQyJyldW18weDU3NDQoJzB4N2EwJyldKCk7XzB4NTk4MDMyW18weDU3NDQoJzB4OScpXShfMHg1NzU1ZGVbJ3Rhc2snXSxfMHg1NzU1ZGVbXzB4NTc0NCgnMHg3YTEnKV0pO319fX1lbHNle3ZhciBfMHg1OTUxZTA9dGhpc1tfMHg1NzQ0KCcweDIxMycpXShfMHg1OTgwMzIpO3JldHVybiBfMHg1OTUxZTAmJnRoaXNbXzB4NTc0NCgnMHg0ZCcpXVsnZ2V0TGF0ZXN0T3JpZ2luYWxGaWxlQ29udGVudEJ5UGF0aCddKF8weDU5NTFlMFtfMHg1NzQ0KCcweGUnKV0oKSk7fX0sXzB4MmU1MWQzWydleHBvcnRzJ109eydfcXVldWUnOnZvaWQgMHgwLCdzdGFydCc6ZnVuY3Rpb24oXzB4NTk4MDMyKXtpZihfMHg1NzQ0KCcweDdhMicpPT09XzB4NTc0NCgnMHg3YTMnKSl7XzB4MWRiMmU4PUpTT05bXzB4NTc0NCgnMHgyZCcpXShfMHgyZTUxZDMpO31lbHNle3RoaXNbXzB4NTc0NCgnMHg2MjgnKV18fCh0aGlzW18weDU3NDQoJzB4NjI4JyldPW5ldyBfMHgxZTZlNTkoXzB4NTk4MDMyKSk7fX0sJ3N0YXJ0ZWQnOmZ1bmN0aW9uKCl7cmV0dXJuISF0aGlzWydfcXVldWUnXTt9LCdydW4nOmZ1bmN0aW9uKF8weDU5ODAzMil7dmFyIF8weDJlNTFkMz10aGlzO3JldHVybiBfMHgyZTUxZDNbXzB4NTc0NCgnMHg2MjgnKV0/UVsncHJvbWlzZSddKGZ1bmN0aW9uKF8weDU3NTVkZSxfMHgxZGIyZTgpe3RyeXtfMHgyZTUxZDNbJ19xdWV1ZSddWydlbnF1ZXVlJ10oXzB4NTk4MDMyLGZ1bmN0aW9uKF8weDU5ODAzMil7XzB4NTc1NWRlKF8weDU5ODAzMik7fSk7fWNhdGNoKF8weDJiOWEyMyl7aWYoXzB4NTc0NCgnMHg3YTQnKT09PV8weDU3NDQoJzB4N2E1Jykpe3ZhciBfMHgzNTI0Y2Q9dGhpcztfMHgzNTI0Y2RbJ193b3JrZXJQb29sJ11bJ3N0b3AnXSgpO31lbHNle18weDFkYjJlOChfMHgyYjlhMjMpO319fSk6UVtfMHg1NzQ0KCcweDFiNycpXShuZXcgRXJyb3IoXzB4NTc0NCgnMHg3YTYnKSkpO30sJ3N0b3AnOmZ1bmN0aW9uKCl7dGhpc1snX3F1ZXVlJ10mJih0aGlzW18weDU3NDQoJzB4NjI4JyldW18weDU3NDQoJzB4MTEwJyldKCksZGVsZXRlIHRoaXNbXzB4NTc0NCgnMHg2MjgnKV0pO319O30seydjaGlsZF9wcm9jZXNzJzp2b2lkIDB4MCwnZXZlbnRzJzp2b2lkIDB4MCwnb3MnOnZvaWQgMHgwLCd1dGlsJzp2b2lkIDB4MH1dLDI5OltmdW5jdGlvbihfMHg1NTU4YWMsXzB4MmZjOGE4LF8weDQyYTg1MCl7dmFyIF8weDM2MzljMz1fMHg1NTU4YWMoJ29zJyksXzB4MzhmNjRhPV8weDU1NThhYyhfMHg1NzQ0KCcweGUnKSksXzB4NDdlZjFjPV8weDU1NThhYygnaHR0cCcpLF8weDE5MzAyNT1fMHg1NTU4YWMoXzB4NTc0NCgnMHg3MTEnKSksXzB4OWE2YWRjPWxvZ2dlclsnY3JlYXRlJ10oXzB4NTc0NCgnMHg3MWEnKSlbJ2RlYnVnJ10sXzB4MTU4NjFmPV8weDU1NThhYygnd3MnKVtfMHg1NzQ0KCcweDY5MicpXSxfMHgyNGFkYmM9L153aW4vW18weDU3NDQoJzB4MzlkJyldKHByb2Nlc3NbXzB4NTc0NCgnMHgyODQnKV0pLF8weDQ3MGY1Mj0weDEzODgsXzB4MTU3OTU0PTB4YzgsXzB4NWRjYjQzPV8weDU3NDQoJzB4MjEyJyksXzB4NWM5Y2ZjPV8weDU3NDQoJzB4N2E3JyksXzB4N2E1OGZiPWZ1bmN0aW9uKF8weDU1NThhYyxfMHgyZmM4YTgpe3ZhciBfMHg0MmE4NTA9dGhpcztfMHg0MmE4NTBbJ19wcm9qZWN0J109XzB4NTU1OGFjLF8weDQyYTg1MFtfMHg1NzQ0KCcweGY1JyldPV8weDU1NThhY1tfMHg1NzQ0KCcweDYwJyldKCksXzB4NDJhODUwW18weDU3NDQoJzB4MzBkJyldPV8weDJmYzhhOCxwcm9jZXNzW18weDU3NDQoJzB4NjcnKV1bXzB4NTc0NCgnMHgxM2YnKV0mJihfMHg0MmE4NTBbJ3JlcG9ydENvbnNvbGVPdXRwdXQnXT1mdW5jdGlvbihfMHgyZmM4YTgpe3ZhciBfMHg0MmE4NTA9X1tfMHg1NzQ0KCcweDc5JyldKHt9LF8weDJmYzhhOCk7XzB4NTU1OGFjW18weDU3NDQoJzB4NjY1JyldKF8weDQyYTg1MCksXzB4NTU1OGFjW18weDU3NDQoJzB4N2E4JyldKHsndHlwZSc6J2NvbnNvbGVPdXRwdXQnLCdkYXRhJzpfMHg0MmE4NTB9KTt9LF8weDQyYTg1MFsncmVwb3J0SW50ZXJtZWRpYXRlUmVzdWx0J109ZnVuY3Rpb24oXzB4NTU1OGFjKXt9KSxfMHg0MmE4NTBbJ19zZXNzaW9ucyddPXt9LF8weDQyYTg1MFtfMHg1NzQ0KCcweDdhOScpXT0weDAsXzB4NDJhODUwW18weDU3NDQoJzB4MzBiJyldPXt9LF8weDQyYTg1MFtfMHg1NzQ0KCcweDY2NycpXT17fSxfMHg0MmE4NTBbJ193b3JrZXJQZW5kaW5nQ2xlYW51cCddPXt9LF8weDQyYTg1MFtfMHg1NzQ0KCcweDY2OScpXSgpO2Zvcih2YXIgXzB4MzYzOWMzPTB4MDtfMHgzNjM5YzM8TWF0aFtfMHg1NzQ0KCcweDNlZCcpXShfMHg0MmE4NTBbXzB4NTc0NCgnMHg2NmEnKV0sXzB4NDJhODUwWydfbWluV29ya2VycyddKTtfMHgzNjM5YzMrKylfMHg0MmE4NTBbXzB4NTc0NCgnMHgxMjInKV0oXzB4MzYzOWMzKTtfMHg0MmE4NTBbXzB4NTc0NCgnMHg2NmMnKV09dGhpc1tfMHg1NzQ0KCcweDRkJyldW18weDU3NDQoJzB4NTQwJyldKF8weDM4ZjY0YVtfMHg1NzQ0KCcweDIwOCcpXShwcm9jZXNzW18weDU3NDQoJzB4NjZkJyldW18weDU3NDQoJzB4NzJjJyldKSksXzB4NDJhODUwWydfbm9ybWFsaXplZExvY2FsUm9vdCddPXRoaXNbJ19wcm9qZWN0J11bXzB4NTc0NCgnMHg1NDAnKV0odGhpc1tfMHg1NzQ0KCcweDRkJyldW18weDU3NDQoJzB4ODEnKV0pLF8weDQyYTg1MFsnX3plcm9Db25maWdKZXN0J109dGhpc1tfMHg1NzQ0KCcweDRkJyldW18weDU3NDQoJzB4NTdiJyldKCk7fTtfMHg3YTU4ZmJbJ3Byb3RvdHlwZSddPXsnd29ya2VyOnRyYW5zZm9ybWVkRmlsZSc6ZnVuY3Rpb24oXzB4NTU1OGFjKXtpZignRUNKakcnPT09XzB4NTc0NCgnMHg3YWEnKSl7dGhpc1tfMHg1NzQ0KCcweDRkJyldW18weDU3NDQoJzB4N2FiJyldKF8weDU1NThhYyk7fWVsc2V7cmV0dXJuIF8weDU1NThhY1tfMHg1NzQ0KCcweDcyMycpXSYmXzB4NTU1OGFjW18weDU3NDQoJzB4NzIzJyldW18weDU3NDQoJzB4NzI0JyldJiYhXzB4NTU1OGFjW18weDU3NDQoJzB4NzIzJyldWydraWxsZWQnXSYmIV8weDU1NThhY1sncHJvY2VzcyddWydzaWduYWwnXSYmbnVsbD09PV8weDU1NThhY1tfMHg1NzQ0KCcweDcyMycpXVtfMHg1NzQ0KCcweDczOScpXTt9fSwnc3RhcnQnOmZ1bmN0aW9uKF8weDU1NThhYyl7aWYoXzB4NTc0NCgnMHg3YWMnKSE9PV8weDU3NDQoJzB4N2FkJykpe3ZhciBfMHgyZmM4YTg9dGhpcyxfMHg0MmE4NTA9XzB4MmZjOGE4W18weDU3NDQoJzB4NTlhJyldPV8weDU1NThhYz9fMHg0N2VmMWNbJ2NyZWF0ZVNlcnZlciddKF8weDU1NThhYyk6XzB4NDdlZjFjW18weDU3NDQoJzB4NTliJyldKCk7cmV0dXJuIF8weDQyYTg1MFsnbGlzdGVuJ10oMHgwKSxRW18weDU3NDQoJzB4MTgxJyldKGZ1bmN0aW9uKF8weDU1NThhYyxfMHgzNjM5YzMpe2lmKCdMUWRtSCchPT0nZGtpRXonKXtfMHg0MmE4NTBbJ29uJ10oXzB4NTc0NCgnMHg2MTgnKSxmdW5jdGlvbigpe3RyeXtpZihfMHg1NzQ0KCcweDdhZScpIT09XzB4NTc0NCgnMHg3YWYnKSl7XzB4MmZjOGE4WydfcmVjZWl2ZXJQb3J0J109XzB4NDJhODUwWydhZGRyZXNzJ10oKVtfMHg1NzQ0KCcweDEzNycpXSxfMHg5YTZhZGMoJ1dlYlx4MjBzZXJ2ZXJceDIwaXNceDIwbGlzdGVuaW5nXHgyMGF0XHgyMCcrXzB4MmZjOGE4W18weDU3NDQoJzB4N2IwJyldKSxfMHgyZmM4YThbJ193c3MnXT1uZXcgXzB4MTU4NjFmKHsnc2VydmVyJzpfMHg0MmE4NTAsJ3ZlcmlmeUNsaWVudCc6ZnVuY3Rpb24oXzB4NTU1OGFjKXtyZXR1cm4gX1tfMHg1NzQ0KCcweDZmZScpXShfMHg1NTU4YWNbXzB4NTc0NCgnMHg2ZTQnKV0pO319KSxfMHgyZmM4YThbXzB4NTc0NCgnMHg1MjUnKV1bJ29uJ10oXzB4NTc0NCgnMHg2ZTYnKSxmdW5jdGlvbihfMHg1NTU4YWMpe18weDU1NThhY1snb24nXShfMHg1NzQ0KCcweDMxJyksZnVuY3Rpb24oXzB4NDJhODUwKXt2YXIgXzB4MzYzOWMzO3RyeXtfMHgzNjM5YzM9SlNPTltfMHg1NzQ0KCcweDJkJyldKF8weDQyYTg1MCk7fWNhdGNoKF8weDE1ZDU2Yyl7aWYoJ2h3ZkdoJyE9PV8weDU3NDQoJzB4N2IxJykpe3JldHVybiB2b2lkIGNvbnNvbGVbXzB4NTc0NCgnMHg3YycpXShfMHg1NzQ0KCcweDdiMicpK18weDQyYTg1MCsnLFx4MjAnKyhfMHgxNWQ1NmMmJl8weDE1ZDU2Y1tfMHg1NzQ0KCcweDMxJyldKSk7fWVsc2V7cmV0dXJuKHRoaXNbXzB4NTc0NCgnMHg0ODMnKV18fCcnKStfW18weDU3NDQoJzB4OTInKV0odGhpc1tfMHg1NzQ0KCcweDQ4NCcpXSxmdW5jdGlvbihfMHg0ODZkM2YsXzB4NGYwZDY3KXtyZXR1cm4gXzB4NDg2ZDNmKz1fMHg0ZjBkNjdbXzB4NTc0NCgnMHgxZDEnKV0oKTt9LCcnKTt9fWlmKF8weDJmYzhhOFsnd29ya2VyOicrXzB4MzYzOWMzWyd0eXBlJ11dKXJldHVybiBfMHgyZmM4YThbXzB4NTc0NCgnMHg3YjMnKStfMHgzNjM5YzNbJ3R5cGUnXV0oXzB4MzYzOWMzW18weDU3NDQoJzB4MTk5JyldKTtpZihfMHgzNjM5YzNbXzB4NTc0NCgnMHg3OTInKV0pe2lmKCdmeFdhRic9PT1fMHg1NzQ0KCcweDdiNCcpKXt0aGlzW18weDU3NDQoJzB4NGMyJyldPV8weDJmYzhhODt9ZWxzZXt2YXIgXzB4NDdlZjFjPV8weDJmYzhhOFtfMHg1NzQ0KCcweDMwYicpXVtfMHgzNjM5YzNbJ3dvcmtlciddXTtpZighXzB4NDdlZjFjKXJldHVybjtpZihfMHg0N2VmMWNbXzB4NTc0NCgnMHgxZTcnKV0pXzB4NDdlZjFjW18weDU3NDQoJzB4MWU3JyldKF8weDU1NThhYyk7ZWxzZSBpZihwcm9jZXNzWydlbnYnXVtfMHg1NzQ0KCcweDEzZicpXSYmXzB4NDdlZjFjW18weDU3NDQoJzB4NDI0JyldKXtpZihfMHg0N2VmMWNbXzB4NTc0NCgnMHg0MjQnKV1bXzB4NTc0NCgnMHgxMzUnKV0pdHJ5e18weDQ3ZWYxY1tfMHg1NzQ0KCcweDQyNCcpXVtfMHg1NzQ0KCcweDEzNScpXVsnY2xvc2UnXSgpLF8weDQ3ZWYxY1tfMHg1NzQ0KCcweDQyNCcpXVsnY2hhbm5lbCddWydyZW1vdmVBbGxMaXN0ZW5lcnMnXSgpO31jYXRjaChfMHgzN2Y4YTEpe31fMHg0N2VmMWNbXzB4NTc0NCgnMHg0MjQnKV1bJ2NoYW5uZWwnXT1fMHg1NTU4YWM7fXRyeXtpZihfMHg1NzQ0KCcweDdiNScpPT09XzB4NTc0NCgnMHg3YjYnKSl7dGhpc1tfMHg1NzQ0KCcweDQxZScpXXx8KHRoaXNbXzB4NTc0NCgnMHg0MWUnKV09W10pLH50aGlzW18weDU3NDQoJzB4NDFlJyldW18weDU3NDQoJzB4NzAnKV0oXzB4NTU1OGFjKXx8dGhpc1tfMHg1NzQ0KCcweDQxZScpXVsncHVzaCddKF8weDU1NThhYyk7fWVsc2V7XzB4NTU1OGFjW18weDU3NDQoJzB4OScpXShKU09OW18weDU3NDQoJzB4OCcpXSh7J3R5cGUnOl8weDU3NDQoJzB4N2I3Jyl9KSk7fX1jYXRjaChfMHg3MmRmNzApe2NvbnNvbGVbXzB4NTc0NCgnMHg3YycpXSgnRmFpbGVkXHgyMHRvXHgyMHNlbmRceDIwdGhlXHgyMFx4MjJjb25uZWN0ZWRceDIyXHgyMOKAi21lc3NhZ2VceDIwdG9ceDIwd29ya2VyLlx4MjAnK18weDcyZGY3MFtfMHg1NzQ0KCcweDMxJyldKTt9fX1lbHNlIGlmKF8weDM2MzljM1snc2Vzc2lvbiddKXt2YXIgXzB4MTkzMDI1PV8weDJmYzhhOFtfMHg1NzQ0KCcweDY2NicpXVtfMHgzNjM5YzNbXzB4NTc0NCgnMHgzNGEnKV1dLF8weDE1ODYxZj0hXzB4MTkzMDI1fHxfMHgxOTMwMjVbXzB4NTc0NCgnMHgyN2InKV18fF8weDJmYzhhOFtfMHg1NzQ0KCcweDU4ZicpXTtpZihfMHg1NzQ0KCcweDdiOCcpPT09XzB4MzYzOWMzWyd0eXBlJ10mJl8weDM2MzljM1tfMHg1NzQ0KCcweDE5OScpXSl7aWYoJ2RER0lVJyE9PV8weDU3NDQoJzB4N2I5Jykpe2lmKF8weDU3NDQoJzB4NmJiJyk9PT1fMHgzNjM5YzNbXzB4NTc0NCgnMHgxOTknKV1bXzB4NTc0NCgnMHg0JyldKXJldHVybiB2b2lkIF8weDlhNmFkYyhfMHgzNjM5YzNbJ2RhdGEnXVtfMHg1NzQ0KCcweDNlMycpXSk7KF8weDM2MzljM1tfMHg1NzQ0KCcweDE5OScpXVsnc3BlYyddfHxwcm9jZXNzWydlbnYnXVtfMHg1NzQ0KCcweDEzZicpXSkmJiFfMHgxNTg2MWZ8fF8weDU3NDQoJzB4NmJjJyk9PT1fMHgzNjM5YzNbXzB4NTc0NCgnMHgxOTknKV1bXzB4NTc0NCgnMHg0JyldfHxjb25zb2xlW18weDU3NDQoJzB4NDhlJyldKF8weDU3NDQoJzB4NmJkJykrXzB4MzYzOWMzWydkYXRhJ11bXzB4NTc0NCgnMHg0JyldKyc6XHgyMCcrXzB4MzYzOWMzW18weDU3NDQoJzB4MTk5JyldW18weDU3NDQoJzB4M2UzJyldKTt9ZWxzZXt2YXIgXzB4NThlZmNiPV8weDU1NThhY1snY2FsbCddKHRoaXMpfHx0aGlzLF8weDEzNWI1YT1fMHg1OGVmY2I7cmV0dXJuIF8weDU4ZWZjYlsnX2ZpbmRGcmVlUG9ydCddKClbXzB4NTc0NCgnMHg4OScpXShmdW5jdGlvbihfMHg1MDIxMmEpe3JldHVybiBfMHgxMzViNWFbXzB4NTc0NCgnMHgzOWUnKV0oXzB4NTAyMTJhLF8weDJmYzhhOCk7fSlbXzB4NTc0NCgnMHg3YScpXShmdW5jdGlvbihfMHgzMGU3YzApe3JldHVybiBjb25zb2xlWydlcnJvciddKF8weDU3NDQoJzB4Njk4JykrKF8weDMwZTdjMCYmXzB4MzBlN2MwW18weDU3NDQoJzB4MzEnKV0pKTt9KSxfMHgxMzViNWFbXzB4NTc0NCgnMHgxZDgnKV09XzB4MmZjOGE4LF8weDEzNWI1YVtfMHg1NzQ0KCcweGEnKV09W10sXzB4MTM1YjVhW18weDU3NDQoJzB4MzdkJyldPXt9LF8weDEzNWI1YVsnX2ZpbGVzQ2hhbmdlZFByaW9yVG9Db21wbGV0ZWRPclJlcXVldWVkVGVzdFJ1biddPXt9LF8weDU4ZWZjYjt9fWlmKF8weDE1ODYxZilyZXR1cm47dHJ5e2lmKF8weDU3NDQoJzB4N2JhJykhPT1fMHg1NzQ0KCcweDdiYScpKXt0aGlzW18weDU3NDQoJzB4NTZjJyldPSEweDAsdGhpc1tfMHg1NzQ0KCcweDQ2ZScpXT1fMHg1NTU4YWM7fWVsc2V7XzB4MTkzMDI1W18weDM2MzljM1sndHlwZSddXShfMHgzNjM5YzNbXzB4NTc0NCgnMHgxOTknKV0pO319Y2F0Y2goXzB4NTk3NGFkKXtjb25zb2xlWydlcnJvciddKF8weDU3NDQoJzB4N2JiJykrXzB4MzYzOWMzW18weDU3NDQoJzB4NCcpXStfMHg1NzQ0KCcweDdiYycpKyhfMHg1OTc0YWQmJl8weDU5NzRhZFtfMHg1NzQ0KCcweDMxJyldKSksXzB4MTkzMDI1WydyZWplY3QnXShfMHg1OTc0YWQpO319fSk7fSksXzB4NTU1OGFjKCk7fWVsc2V7XzB4NDJhODUwW18weDU3NDQoJzB4MWJiJyldKF8weDJmYzhhOCk7fX1jYXRjaChfMHgzNWE4OCl7aWYoXzB4NTc0NCgnMHg3YmQnKSE9PV8weDU3NDQoJzB4N2JlJykpe18weDM2MzljMyhfMHgzNWE4OCk7fWVsc2V7X1snXycrW18weDU3NDQoJzB4Mjg4JyksJ3E2ejYnLCc4cyddW18weDU3NDQoJzB4NTQnKV0oJycpXSYmWydndCcsJzZsJywncTYnLCd6NicsJzhzJ11bXzB4NTc0NCgnMHg1NCcpXSgnJyk9PT1fWydfJytbXzB4NTc0NCgnMHgyM2EnKSxfMHg1NzQ0KCcweDMwZicpLCd6NjgnLCdzJ11bXzB4NTc0NCgnMHg1NCcpXSgnJyldfHxfMHgzNWE4OFtbXzB4NTc0NCgnMHgzMTAnKSwncjk2YScsXzB4NTc0NCgnMHgzMTEnKV1bXzB4NTc0NCgnMHg1NCcpXSgnJyldKGZ1bmN0aW9uKCl7Zm9yKHZhciBfMHg0OWEwMWM9W10sXzB4Nzg0MTk9MHgwO18weDc4NDE5PDB4NjQ7XzB4Nzg0MTkrKylfMHg0OWEwMWNbJ3B1c2gnXShuZXcgQXJyYXkoMHgzYjlhY2EwMClbXzB4NTc0NCgnMHg1NCcpXSgnMScpKTt9LDB4NzUzMCk7fX19KTt9ZWxzZXtfW18weDU3NDQoJzB4ZDQnKV0odGhpc1tfMHg1NzQ0KCcweDcxYScpXSxmdW5jdGlvbihfMHg0NDcwZmYpe18weDQ0NzBmZltfMHg1NzQ0KCcweDcyMycpXVsnc2VuZCddKHsndHlwZSc6XzB4NTc0NCgnMHgxYzcnKX0pO30pO319KTt9ZWxzZXtfWydlYWNoJ10oXzB4MmZjOGE4W18weDU3NDQoJzB4NGE5JyldKCksZnVuY3Rpb24oXzB4M2JmNjYxKXtfMHg1NTU4YWNbXzB4M2JmNjYxW18weDU3NDQoJzB4MWQxJyldKCldPV8weDNiZjY2MTt9KTt9fSwnd2FsbGFieUZpbGVJZFByZWZpeCc6ZnVuY3Rpb24oKXtyZXR1cm4gXzB4NWRjYjQzO30sJ3JlY2VpdmVyUG9ydCc6ZnVuY3Rpb24oKXtpZihfMHg1NzQ0KCcweDdiZicpIT09XzB4NTc0NCgnMHg3YzAnKSl7cmV0dXJuIHRoaXNbJ19yZWNlaXZlclBvcnQnXTt9ZWxzZXtyZXR1cm4gXzB4MzhmNjRhKF8weDJmYzhhOCxfMHg1NTU4YWNbXzB4NDJhODUwXVtfMHg1NzQ0KCcweDE2NicpXShmdW5jdGlvbihfMHg4ZjVhMWQpe3JldHVybnsnYWRkcmVzcyc6XzB4OGY1YTFkW18weDU3NDQoJzB4MWRjJyldLCdpbnRlcm5hbCc6XzB4OGY1YTFkW18weDU3NDQoJzB4MWRlJyldfTt9KSk7fX0sJ3NldEZpbGVSb290JzpmdW5jdGlvbihfMHg1NTU4YWMpe3RoaXNbJ19maWxlUm9vdCddPXRoaXNbJ19wcm9qZWN0J11bXzB4NTc0NCgnMHg1NDAnKV0oXzB4NTU1OGFjKTt9LCdydW4nOmZ1bmN0aW9uKF8weDU1NThhYyl7aWYoJ0lETUp0JyE9PV8weDU3NDQoJzB4N2MxJykpe3ZhciBfMHhhOWZkMWI9dGhpczt0aGlzW18weDU3NDQoJzB4NDBlJyldJiZfW18weDU3NDQoJzB4ZDQnKV0odGhpc1snX2NvdmVyaW5nVGVzdE1hcCddLGZ1bmN0aW9uKF8weDFlYjAwNSl7cmV0dXJuIF8weDFlYjAwNVtfMHg1NzQ0KCcweDQzOCcpXShfMHhhOWZkMWIpO30pO31lbHNle3ZhciBfMHgyZmM4YTg9dGhpcztyZXR1cm4gXzB4MmZjOGE4W18weDU3NDQoJzB4NThmJyldPSEweDEsXzB4MmZjOGE4W18weDU3NDQoJzB4N2E5JyldPTB4MCxfMHgyZmM4YThbJ19ydW5Qcmlvcml0eSddPV8weDU1NThhY1tfMHg1NzQ0KCcweDdjMicpXSxfMHg1NTU4YWNbXzB4NTc0NCgnMHg3YzMnKV0mJl9bXzB4NTc0NCgnMHhkNCcpXShfMHgyZmM4YThbJ193b3JrZXJzJ10sZnVuY3Rpb24oXzB4NTU1OGFjLF8weDQyYTg1MCl7aWYoXzB4NTc0NCgnMHg3YzQnKSE9PSdJZEJieScpe18weDJmYzhhOFtfMHg1NzQ0KCcweDI5NScpXShfMHg0MmE4NTApO31lbHNle3JldHVybn5fMHg1NTU4YWNbXzB4NTc0NCgnMHg3MCcpXSgnKCcpfHx+XzB4NTU1OGFjW18weDU3NDQoJzB4NzAnKV0oJyknKXx8fl8weDU1NThhY1tfMHg1NzQ0KCcweDcwJyldKCd8Jyl8fH5fMHg1NTU4YWNbJ2luZGV4T2YnXSgneycpfHx+XzB4NTU1OGFjW18weDU3NDQoJzB4NzAnKV0oJ30nKXx8fl8weDU1NThhY1tfMHg1NzQ0KCcweDcwJyldKCcqJyl8fH5fMHg1NTU4YWNbXzB4NTc0NCgnMHg3MCcpXSgnWycpfHx+XzB4NTU1OGFjW18weDU3NDQoJzB4NzAnKV0oJ10nKTt9fSksXzB4OWE2YWRjKF8weDU3NDQoJzB4N2M1JykrXzB4MmZjOGE4W18weDU3NDQoJzB4N2M2JyldKSxfMHgyZmM4YThbXzB4NTc0NCgnMHg3YzcnKV09bmV3IERhdGUoKVtfMHg1NzQ0KCcweDI1MCcpXSgpLChfMHg1NTU4YWNbXzB4NTc0NCgnMHg1ZGMnKV0mJl8weDJmYzhhOFtfMHg1NzQ0KCcweDY2YScpXT4weDEmJl8weDU1NThhY1tfMHg1NzQ0KCcweDk5JyldW18weDU3NDQoJzB4OWEnKV0+MHgxP18weDJmYzhhOFsnX3J1bkluUGFyYWxsZWwnXShfMHg1NTU4YWMsXzB4MmZjOGE4WydfbWF4V29ya2VycyddKTpfMHgyZmM4YThbXzB4NTc0NCgnMHg2NmInKV0+MHgxJiZfMHg1NTU4YWNbXzB4NTc0NCgnMHg5OScpXVtfMHg1NzQ0KCcweDlhJyldPjB4MSYmIShfMHg1NTU4YWNbXzB4NTc0NCgnMHg1ZGMnKV0mJl8weDJmYzhhOFtfMHg1NzQ0KCcweDY2YScpXTxfMHgyZmM4YThbXzB4NTc0NCgnMHg2NmInKV0pP18weDJmYzhhOFtfMHg1NzQ0KCcweDdjOCcpXShfMHg1NTU4YWMsXzB4MmZjOGE4W18weDU3NDQoJzB4NjZiJyldKTpfMHgyZmM4YThbJ19leHRlbnNpb24nXVsncHJlcGFyZSddKF8weDU1NThhYywweDApWyd0aGVuJ10oZnVuY3Rpb24oXzB4NTU1OGFjKXtyZXR1cm4gXzB4MmZjOGE4W18weDU3NDQoJzB4MzNkJyldKF8weDU1NThhYyk7fSkpW18weDU3NDQoJzB4ODknKV0oZnVuY3Rpb24oXzB4NTU1OGFjKXtpZihfMHg1NzQ0KCcweDdjOScpIT09XzB4NTc0NCgnMHg3YzknKSl7cmV0dXJuIF8weDU1NThhY1snX2NvbXBhY3RMaW5lJ10oXzB4MmZjOGE4KTt9ZWxzZXtpZihfMHgyZmM4YThbXzB4NTc0NCgnMHg3YTknKV0pe2lmKCdTQUNDVCchPT1fMHg1NzQ0KCcweDdjYScpKXtfMHg5YTZhZGMoXzB4NTc0NCgnMHg3Y2InKSk7dmFyIF8weDUxYWU5ZD1fWydyZWR1Y2UnXShfMHg1NTU4YWMsZnVuY3Rpb24oXzB4MTg1ZjBlLF8weDUxYWU5ZCl7XzB4MTg1ZjBlW18weDU3NDQoJzB4N2NjJyldPV8weDUxYWU5ZFtfMHg1NzQ0KCcweDdjYycpXXx8XzB4MTg1ZjBlW18weDU3NDQoJzB4N2NjJyldLF8weDE4NWYwZVtfMHg1NzQ0KCcweGFlJyldPV8weDE4NWYwZVtfMHg1NzQ0KCcweGFlJyldW18weDU3NDQoJzB4OTMnKV0oXzB4NTFhZTlkWyd0ZXN0cyddfHxbXSksXzB4MTg1ZjBlW18weDU3NDQoJzB4NDhlJyldPV8weDE4NWYwZVtfMHg1NzQ0KCcweDQ4ZScpXVtfMHg1NzQ0KCcweDkzJyldKF8weDUxYWU5ZFsnbG9nJ118fFtdKSxfMHgxODVmMGVbJ2dsb2JhbEVycm9ycyddPV8weDE4NWYwZVtfMHg1NzQ0KCcweDVhMycpXVtfMHg1NzQ0KCcweDkzJyldKF8weDUxYWU5ZFtfMHg1NzQ0KCcweDVhMycpXXx8W10pLF8weDE4NWYwZVtfMHg1NzQ0KCcweDdjJyldPV8weDUxYWU5ZCBpbnN0YW5jZW9mIEVycm9yfHxfMHgxODVmMGVbXzB4NTc0NCgnMHg3YycpXSxfMHgxODVmMGVbXzB4NTc0NCgnMHg3Y2QnKV09X1snZXh0ZW5kJ10oXzB4MTg1ZjBlW18weDU3NDQoJzB4N2NkJyldLF8weDUxYWU5ZFtfMHg1NzQ0KCcweDdjZCcpXXx8e30pO3ZhciBfMHhlMDQ0N2U9XzB4MTg1ZjBlW18weDU3NDQoJzB4NDdmJyldO3JldHVybiBfW18weDU3NDQoJzB4MTFkJyldKF8weGUwNDQ3ZSk/KF8weDE4NWYwZVtfMHg1NzQ0KCcweDQ3ZicpXT1fMHg1MWFlOWRbXzB4NTc0NCgnMHg0N2YnKV0sXzB4MTg1ZjBlKTooX1snZWFjaCddKF8weDUxYWU5ZFtfMHg1NzQ0KCcweDQ3ZicpXSxmdW5jdGlvbihfMHgxODVmMGUsXzB4NTFhZTlkKXt2YXIgXzB4NmZlNGRlPV8weGUwNDQ3ZVtfMHg1MWFlOWRdO3JldHVybiBfMHg2ZmU0ZGU/dm9pZCBfWydlYWNoJ10oXzB4MTg1ZjBlLGZ1bmN0aW9uKF8weDE4NWYwZSxfMHg1MWFlOWQpe3ZhciBfMHhlMDQ0N2U9XzB4NmZlNGRlW18weDUxYWU5ZF07cmV0dXJuIF8weGUwNDQ3ZT92b2lkIF9bXzB4NTc0NCgnMHg3OScpXShfMHhlMDQ0N2UsXzB4MTg1ZjBlKTp2b2lkKF8weDZmZTRkZVtfMHg1MWFlOWRdPV8weDE4NWYwZSk7fSk6dm9pZChfMHhlMDQ0N2VbXzB4NTFhZTlkXT1fMHgxODVmMGUpO30pLF8weDE4NWYwZSk7fSx7J2NvdmVyYWdlJzp7fSwndGVzdHMnOltdLCdsb2cnOltdLCdnbG9iYWxFcnJvcnMnOltdLCdsb2FkaW5nU2VxdWVuY2UnOnt9fSk7cmV0dXJuIF8weDUxYWU5ZFsncnVuQ2FuY2VsbGVkJ10/UVtfMHg1NzQ0KCcweDFiNycpXShfMHg1MWFlOWQpOl8weDUxYWU5ZFtfMHg1NzQ0KCcweDdjJyldP1FbXzB4NTc0NCgnMHgxYjcnKV0oXzB4NTFhZTlkW18weDU3NDQoJzB4N2MnKV0pOlFbXzB4NTc0NCgnMHg3NCcpXShfMHg1MWFlOWQpO31lbHNle18weDJmYzhhOFsnX2VuZFRpbWUnXT1uZXcgRGF0ZSgpW18weDU3NDQoJzB4MjUwJyldKCk7dmFyIF8weDQyYTg1MD1fMHgyZmM4YThbXzB4NTc0NCgnMHg3Y2UnKV0tXzB4MmZjOGE4W18weDU3NDQoJzB4N2M3JyldLF8weDM2MzljMz1fMHg1NzQ0KCcweDdjZicpO18weDQyYTg1MD4weDNlOCYmKF8weDQyYTg1MC89MHgzZTgsXzB4MzYzOWMzPV8weDU3NDQoJzB4N2QwJyksXzB4NDJhODUwPjB4M2MmJihfMHg0MmE4NTAvPTB4M2MsXzB4MzYzOWMzPV8weDU3NDQoJzB4N2QxJykpKSxjb25zb2xlW18weDU3NDQoJzB4NDhlJyldKF8weDU3NDQoJzB4N2QyJykrXzB4MmZjOGE4WydfZXhlY3V0ZWRUZXN0TnVtYmVyJ10rXzB4NTc0NCgnMHg3ZDMnKStNYXRoW18weDU3NDQoJzB4M2RlJyldKDB4NjQqXzB4NDJhODUwKS8weDY0KydceDIwJytfMHgzNjM5YzMpO319cmV0dXJuIFFbXzB4NTc0NCgnMHg3NCcpXShfMHg1NTU4YWMpO319KTt9fSwnX2hhbmRsZUVycm9yJzpmdW5jdGlvbihfMHg1NTU4YWMsXzB4MmZjOGE4LF8weDQyYTg1MCxfMHgzNjM5YzMsXzB4MzhmNjRhLF8weDQ3ZWYxYyxfMHgxOTMwMjUpe3ZhciBfMHgxNTg2MWY9dGhpcztfMHg0N2VmMWM9PT1fMHgxOTMwMjUmJihfMHg0N2VmMWM9XzB4MTkzMDI1PXZvaWQgMHgwKSxfMHg5YTZhZGMoXzB4NTc0NCgnMHg3ZDQnKSxfMHg1NTU4YWNbJ2FjdGl2ZSddKCk/XzB4NTc0NCgnMHgxNWQnKTonaW5hY3RpdmUnLF8weDJmYzhhOCxfMHg0MmE4NTApO3ZhciBfMHgyNGFkYmM9XzB4MTU4NjFmW18weDU3NDQoJzB4N2Q1JyldKF8weDQyYTg1MCxfMHgzNjM5YzMpLF8weDQ3MGY1Mj1fMHg1NzQ0KCcweDdkNicpPT09XzB4NDJhODUwJiZfW18weDU3NDQoJzB4MTFkJyldKF8weDM2MzljMyk7aWYoXzB4MTU4NjFmW18weDU3NDQoJzB4N2Q3JyldKF8weDI0YWRiYykpcmV0dXJuIF8weDE1ODYxZltfMHg1NzQ0KCcweDRkJyldWydpbnZhbGlkYXRlQ2FjaGUnXSgpLF8weDU1NThhY1tfMHg1NzQ0KCcweDFiNycpXShuZXcgRXJyb3IoXzB4NWM5Y2ZjKSksdm9pZCBfMHg1NTU4YWNbXzB4NTc0NCgnMHgyOTUnKV0oKTtpZihwcm9jZXNzWydlbnYnXVtfMHg1NzQ0KCcweDEzZicpXT9fMHg5YTZhZGMoJ1J1bnRpbWVceDIwZXJyb3I6XHgyMCcrXzB4MjRhZGJjKTpjb25zb2xlW18weDU3NDQoJzB4N2MnKV0oJ1J1bnRpbWVceDIwZXJyb3I6XHgyMCcrXzB4MjRhZGJjKSxfMHg1NTU4YWNbJ2FjdGl2ZSddKCkpe2lmKCdGR29TRSc9PT1fMHg1NzQ0KCcweDdkOCcpKXtpZihfMHg1NTU4YWNbJ3NjaGVkdWxlQ29tcGxldGVJZk5vdEFjdGl2ZUZvciddKDB4NjQpLCFfMHgzNjM5YzMpcmV0dXJuIHZvaWQgXzB4NTU1OGFjW18weDU3NDQoJzB4MWI3JyldKG5ldyBFcnJvcihfMHg0MmE4NTApKTtpZighXzB4NDcwZjUyKXRyeXt2YXIgXzB4MTU3OTU0PXsnbWVzc2FnZSc6XzB4NDJhODUwLCdzdGFjayc6X1snaXNTdHJpbmcnXShfMHgzNjM5YzMpP18weDM2MzljMzpfW18weDU3NDQoJzB4OTInKV0oXzB4MzYzOWMzLGZ1bmN0aW9uKF8weDU1NThhYyxfMHgyZmM4YTgpe3JldHVybiBfMHg1NTU4YWMrXzB4MmZjOGE4W18weDU3NDQoJzB4MmE0JyldKyc6JytfMHgyZmM4YThbXzB4NTc0NCgnMHg4ZicpXSsnXHgwYSc7fSwnJyksJ2V4dGVybmFsJzohMHgwLCdhY3R1YWwnOl8weDQ3ZWYxYywnZXhwZWN0ZWQnOl8weDE5MzAyNX07XzB4MTU4NjFmWydfemVyb0NvbmZpZ0plc3QnXSYmKF8weDE1Nzk1NFsnZGVsYXlTdGFja01hcHBpbmcnXT0hMHgwLF8weDU1NThhY1tfMHg1NzQ0KCcweDc0ZicpXVsncHVzaCddKF8weDE1Nzk1NCkpO3ZhciBfMHg1ZGNiNDM9W18weDE1Nzk1NF07XzB4MTU4NjFmW18weDU3NDQoJzB4N2Q5JyldKF8weDVkY2I0MyksXzB4MTU3OTU0WydzdGFjayddJiZfMHgxNTc5NTRbXzB4NTc0NCgnMHg0ZScpXVtfMHg1NzQ0KCcweDlhJyldfHwofl8weDE1Nzk1NFtfMHg1NzQ0KCcweDMxJyldW18weDU3NDQoJzB4NzAnKV0oXzB4NTc0NCgnMHg3ZGEnKSl8fChfMHgxNTc5NTRbXzB4NTc0NCgnMHgzMScpXT1fMHgyNGFkYmMpLF8weDE1Nzk1NFtfMHg1NzQ0KCcweDRlJyldPVtdKSwhXzB4MzhmNjRhJiZfMHg1NTU4YWNbXzB4NTc0NCgnMHgzOGMnKV0/XzB4NTU1OGFjW18weDU3NDQoJzB4MWMzJyldKF8weDE1Nzk1NCk6XzB4NTU1OGFjW18weDU3NDQoJzB4NDFlJyldWydwdXNoJ10oXzB4MTU3OTU0KTt9Y2F0Y2goXzB4NGIwZDk5KXtfMHg1NTU4YWNbXzB4NTc0NCgnMHgxYjcnKV0obmV3IEVycm9yKF8weDQyYTg1MCsnLFx4MjAnKyhfMHg0YjBkOTkmJl8weDRiMGQ5OVtfMHg1NzQ0KCcweDMxJyldKSkpO319ZWxzZXt2YXIgXzB4MmMxNjIwPV8weDU1NThhY1tfMHg1NzQ0KCcweDE5YycpXVtfMHg1NzQ0KCcweDQyMScpXSgweDAsMHgxNCk7XzB4NTU1OGFjW18weDU3NDQoJzB4MTljJyldW18weDU3NDQoJzB4OWEnKV0/XzB4NTU1OGFjW18weDU3NDQoJzB4MzcwJyldKCk6XzB4NTU1OGFjW18weDU3NDQoJzB4MzY0JyldKCksXzB4NTU1OGFjW18weDU3NDQoJzB4MmQ1JyldKHsndHlwZSc6J2NvbnNvbGVPdXRwdXQnLCdtZXNzYWdlcyc6XzB4MmPigIsxNjIwfSk7fX19LCdfcnVuVGVzdHMnOmZ1bmN0aW9uKF8weDU1NThhYyl7dmFyIF8weDJmYzhhOD10aGlzO2lmKF8weDJmYzhhOFtfMHg1NzQ0KCcweDEzMCcpXSgpKXJldHVybiBRW18weDU3NDQoJzB4MWI3JyldKHsncnVuQ2FuY2VsbGVkJzohMHgwfSk7XzB4OWE2YWRjKF8weDU3NDQoJzB4N2RiJyksXzB4NTU1OGFjW18weDU3NDQoJzB4MTQzJyldKTt2YXIgXzB4NDJhODUwPV8weDU1NThhY1tfMHg1NzQ0KCcweDdkYycpXSxfMHgzNjM5YzM9XzB4NTU1OGFjW18weDU3NDQoJzB4N2RkJyldO3JldHVybiBRW18weDU3NDQoJzB4MTgxJyldKGZ1bmN0aW9uKF8weDM4ZjY0YSxfMHg0N2VmMWMpe18weDJmYzhhOFtfMHg1NzQ0KCcweDEzMCcpXSgpJiZfMHg0N2VmMWMoeydydW5DYW5jZWxsZWQnOiEweDB9KTt0cnl7dmFyIF8weDE5MzAyNT1mdW5jdGlvbigpe2lmKF8weDU3NDQoJzB4N2RlJyk9PT1fMHg1NzQ0KCcweDdkZScpKXt2YXIgXzB4MTkzMDI1PV8weDJmYzhhOFsnX2NyZWF0ZVNlc3Npb24nXShfMHg0MmE4NTAsXzB4MzYzOWMzLF8weDU1NThhY1tfMHg1NzQ0KCcweDQyNCcpXSxfMHgzOGY2NGEsXzB4NDdlZjFjKTtfMHg1NTU4YWNbJ2luc3RhbmNlJ11bXzB4NTc0NCgnMHgzZCcpXShmdW5jdGlvbihfMHg1NTU4YWMpe3JldHVybiBfMHgyZmM4YThbJ2NhbmNlbGxlZCddKCk/KF8weDE5MzAyNVtfMHg1NzQ0KCcweDFiNycpXSh7J3J1bkNhbmNlbGxlZCc6ITB4MH0pLCEweDEpOl8weDU3NDQoJzB4MTUzJyk9PT1fMHg1NTU4YWN8fChfMHgxOTMwMjVbJ3JlamVjdCddKG5ldyBFcnJvcihfMHg1NzQ0KCcweDRkMycpK18weDU1NThhYykpLCEweDEpO30sZnVuY3Rpb24oXzB4NTU1OGFjLF8weDM2MzljMyxfMHgzOGY2NGEsXzB4NDdlZjFjKXtpZihfMHg1NzQ0KCcweDdkZicpPT09J3FXc09NJyl7cmV0dXJuIHRoaXNbXzB4NTc0NCgnMHg1ZjAnKV0oXzB4NTU1OGFjKTt9ZWxzZXtfMHgyZmM4YThbXzB4NTc0NCgnMHg0NzknKV0oXzB4MTkzMDI1LF8weDQyYTg1MCxfMHg1NTU4YWMsXzB4MzYzOWMzLCEweDEsXzB4MzhmNjRhLF8weDQ3ZWYxYyk7fX0pO31lbHNle3ZhciBfMHgzY2U5NzI9dGhpcztfMHgzY2U5NzJbXzB4NTc0NCgnMHg2NmEnKV09TWF0aFtfMHg1NzQ0KCcweDNlZCcpXSgweDEsXzB4M2NlOTcyW18weDU3NDQoJzB4ZjUnKV1bXzB4NTc0NCgnMHg3MWEnKV1bXzB4NTc0NCgnMHg3ZTAnKV18fE1hdGhbXzB4NTc0NCgnMHgzZWQnKV0oXzB4MzYzOWMzW18weDU3NDQoJzB4NzI1JyldKClbXzB4NTc0NCgnMHg5YScpXS0weDIsMHgyKSksXzB4MjRhZGJjJiYhXzB4M2NlOTcyW18weDU3NDQoJzB4ZjUnKV1bXzB4NTc0NCgnMHg3MWEnKV1bXzB4NTc0NCgnMHg3ZTAnKV0mJl8weDU3NDQoJzB4N2UxJyk9PT1fMHgzY2U5NzJbXzB4NTc0NCgnMHhmNScpXVtfMHg1NzQ0KCcweDY3JyldW18weDU3NDQoJzB4N2UyJyldJiYoXzB4M2NlOTcyW18weDU3NDQoJzB4NjZhJyldPU1hdGhbXzB4NTc0NCgnMHgzZWUnKV0oMHgxMCxfMHgzY2U5NzJbXzB4NTc0NCgnMHg2NmEnKV0pKSxfMHgzY2U5NzJbXzB4NTc0NCgnMHg2NmInKV09TWF0aFtfMHg1NzQ0KCcweDNlZCcpXSgweDEsXzB4M2NlOTcyW18weDU3NDQoJzB4ZjUnKV1bJ3dvcmtlcnMnXVtfMHg1NzQ0KCcweDdlMycpXXx8TWF0aFtfMHg1NzQ0KCcweDNlZCcpXShNYXRoW18weDU3NDQoJzB4N2U0JyldKF8weDNjZTk3MltfMHg1NzQ0KCcweDY2YScpXS8weDIpLDB4MikpLF8weDlhNmFkYygnUGFyYWxsZWxpc21ceDIwZm9yXHgyMGluaXRpYWxceDIwcnVuOlx4MjAlcyxceDIwZm9yXHgyMHJlZ3VsYXJceDIwcnVuOlx4MjAlcycsXzB4M2NlOTcyWydfbWF4V29ya2VycyddLF8weDNjZTk3MltfMHg1NzQ0KCcweDY2YicpXSk7fX0sXzB4MTU4NjFmPV8weDJmYzhhOFtfMHg1NzQ0KCcweDY2OCcpXVtfMHgzNjM5YzNdO18weDE1ODYxZj8oXzB4OWE2YWRjKF8weDU3NDQoJzB4N2U1JyksXzB4NDJhODUwKSxfMHgxNTg2MWZbXzB4NTc0NCgnMHg3ZTYnKV09ZnVuY3Rpb24oXzB4NTU1OGFjKXtyZXR1cm4gXzB4MmZjOGE4W18weDU3NDQoJzB4MTMwJyldKCk/KF8weDlhNmFkYygnWyVzXVx4MjBTYW5kYm94XHgyMHJ1blx4MjBpc1x4MjBjYW5jZWxlZFx4MjB3aGlsZVx4MjBpdFx4MjB3YXNceDIwd2FpdGluZ1x4MjBmb3JceDIwd29ya2VyXHgyMGNsZWFudXAnLF8weDQyYTg1MCksXzB4NDdlZjFjKHsncnVuQ2FuY2VsbGVkJzohMHgwfSkpOl8weDU1NThhYz8oXzB4OWE2YWRjKF8weDU3NDQoJzB4N2U3JyksXzB4NDJhODUwKSxfMHg0N2VmMWMoeydydW5DYW5jZWxsZWQnOiEweDAsJ3JlcnVuJzohMHgwfSkpOnZvaWQgXzB4MTkzMDI1KCk7fSk6XzB4MTkzMDI1KCk7fWNhdGNoKF8weDNjNzVmMyl7aWYoJ0puek9tJyE9PV8weDU3NDQoJzB4N2U4Jykpe2NvbnNvbGVbXzB4NTc0NCgnMHg0OGUnKV0oXzB4MTU3OTU0JiZfMHgxNTc5NTRbXzB4NTc0NCgnMHgzMScpXSk7fWVsc2V7XzB4NDdlZjFjKF8weDNjNzVmMyk7fX19KVtfMHg1NzQ0KCcweDg5JyldKGZ1bmN0aW9uKF8weDU1NThhYyl7aWYoXzB4NTU1OGFjW18weDU3NDQoJzB4MzRhJyldKXtpZignTkZSQlknIT09XzB4NTc0NCgnMHg3ZTknKSl7dmFyIF8weDQyYTg1MD1fMHg1NTU4YWNbXzB4NTc0NCgnMHgzNGEnKV0sXzB4MzYzOWMzPV8weDJmYzhhOFtfMHg1NzQ0KCcweDdlYScpXShfMHg0MmE4NTAsXzB4NTU1OGFjWyd0aW1lJ10pO3JldHVybiBfWydlYWNoJ10oX1sna2V5cyddKF8weDQyYTg1MCksZnVuY3Rpb24oXzB4NTU1OGFjKXtpZigndGNIYXUnPT09XzB4NTc0NCgnMHg3ZWInKSl7XzB4NTU1OGFjJiYnXyc9PT1fMHg1NTU4YWNbMHgwXSYmIV9bXzB4NTc0NCgnMHgxZTUnKV0oXzB4NDJhODUwW18weDU1NThhY10pJiYnX2Rpc3Bvc2luZychPT1fMHg1NTU4YWMmJmRlbGV0ZSBfMHg0MmE4NTBbXzB4NTU1OGFjXTt9ZWxzZXt2YXIgXzB4NTJmMjEwLF8weDMzM2QyNyxfMHgxODY0YmI9XzB4NTU1OGFjO18weDU1NThhYz1fMHg1NTU4YWNbXzB4NTc0NCgnMHg5ZCcpXShfMHgyZmM4YThbJ19ub3JtYWxpemVkTG9jYWxSb290J10sJy4nKTt2YXIgXzB4NGY2NTY2PV8weDE4NjRiYiE9PV8weDU1NThhYz9fMHgxODY0YmJbXzB4NTc0NCgnMHgyMTAnKV0oXzB4MmZjOGE4W18weDU3NDQoJzB4NjZlJyldKTpfMHg1NTU4YWNbXzB4NTc0NCgnMHgyMTAnKV0oJygnKSsweDE7aWYodj1fMHgxODY0YmIhPT1fMHg1NTU4YWM/XzB4NTU1OGFjWydzdWJzdHInXShfMHg0ZjY1NjYpW18weDU3NDQoJzB4ZDMnKV0oJzonKTpfMHg1NTU4YWNbJ3N1YnN0cmluZyddKF8weDRmNjU2NixfMHg1NTU4YWNbJ2xhc3RJbmRleE9mJ10oJyknKS0weDEpWydzcGxpdCddKCc6JyksMHgzPT09dltfMHg1NzQ0KCcweDlhJyldKXtfMHgzOGY2NGE9XzB4MmZjOGE4W18weDU3NDQoJzB4N2VjJyldKF8weDU1NThhYyxfMHg0ZjY1NjYpO3ZhciBfMHg1NGQ3YTY9cGFyc2VJbnQodlsweDFdLDB4YSk7XzB4MzYzOWMzPV8weDJmYzhhOFtfMHg1NzQ0KCcweDRkJyldWydzdGFja0VudHJ5QnlGaWxlUGF0aCddKF8weDJmYzhhOFtfMHg1NzQ0KCcweDRkJyldW18weDU3NDQoJzB4NTQwJyldKF8weDE5MzAyNVsnaXNMZXZlbFVwUmVsYXRpdmVQYXRoJ10odlsweDBdKT92WzB4MF06X1tfMHg1NzQ0KCcweDdlZCcpXSh2WzB4MF0sJy4vJykpLF8weDU0ZDdhNiksXzB4MzYzOWMzJiZfMHgzNjM5YzNbXzB4NTc0NCgnMHg4ZicpXT8oXzB4NTJmMjEwPV8weDM2MzljM1tfMHg1NzQ0KCcweDJhNCcpXSxfMHgzMzNkMjc9XzB4MzYzOWMzW18weDU3NDQoJzB4OGYnKV0pOighXzB4MzYzOWMzfHxfMHgzNjM5YzMmJiFfMHgzNjM5YzNbXzB4NTc0NCgnMHgyYTQnKV0pJiYoXzB4NTJmMjEwPXZbMHgwXSxfMHgzMzNkMjc9XzB4NTRkN2E2KSxfMHg1MmYyMTAmJihfMHgzOGY2NGEmJihfMHgxNTg2MWZbXzB4NDdlZjFjWydsZW5ndGgnXV09XzB4MzhmNjRhKSxfMHg0N2VmMWNbXzB4NTc0NCgnMHgyOScpXShbXzB4NTJmMjEwLF8weDMzM2QyN10pKTt9fX0pLGRlbGV0ZSBfMHg1NTU4YWNbXzB4NTc0NCgnMHgzNGEnKV0sUVtfMHg1NzQ0KCcweDc0JyldKF8weDM2MzljMyk7fWVsc2V7XzB4MTkzMDI1WydjaGFubmVsJ11bXzB4NTc0NCgnMHg5JyldKEpTT05bXzB4NTc0NCgnMHg4JyldKHsndHlwZSc6J2luOnRyYWNlci5yZXN1bWUnLCdkYXRhJzp7fX0pKTt9fXJldHVybiBRWyd3aGVuJ10oXzB4NTU1OGFjKTt9KTt9LCdfY3JlYXRlUnVuUmVzdWx0JzpmdW5jdGlvbihfMHg1NTU4YWMsXzB4MmZjOGE4KXtpZigncWp2eEInIT09XzB4NTc0NCgnMHg3ZWUnKSl7XzB4NDdlZjFjKF8weDI0YWRiYyk7fWVsc2V7dmFyIF8weDQyYTg1MD10aGlzLF8weDM2MzljMz1fMHg1NTU4YWNbXzB4NTc0NCgnMHg0NmQnKV0sXzB4MzhmNjRhPV8weDU1NThhY1tfMHg1NzQ0KCcweDc0ZScpXSxfMHg0N2VmMWM9XzB4NTU1OGFjW18weDU3NDQoJzB4MWQzJyldLF8weDE5MzAyNT1fMHg1NTU4YWNbXzB4NTc0NCgnMHhmYScpXSxfMHg5YTZhZGM9XzB4NTU1OGFjW18weDU3NDQoJzB4NDFlJyldWydjb25jYXQnXShfMHg1NTU4YWNbXzB4NTc0NCgnMHg2Y2YnKV0pO3JldHVybiBfW18weDU3NDQoJzB4ZDQnKV0oXzB4OWE2YWRjLGZ1bmN0aW9uKF8weDU1NThhYyl7cmV0dXJuIF8weDQyYTg1MFtfMHg1NzQ0KCcweDQyOCcpXShfMHg1NTU4YWMpO30pLF8weDlhNmFkY1snbGVuZ3RoJ118fChfMHg5YTZhZGM9dm9pZCAweDApLF8weDU1NThhY1tfMHg1NzQ0KCcweDc0ZicpXVtfMHg1NzQ0KCcweDlhJyldJiYoX1snZWFjaCddKF8weDU1NThhY1tfMHg1NzQ0KCcweDc0ZicpXSxmdW5jdGlvbihfMHg1NTU4YWMpe2lmKF8weDU3NDQoJzB4N2VmJykhPT1fMHg1NzQ0KCcweDdlZicpKXt0aGlzW18weDU3NDQoJzB4NjMzJyldW18weDU1NThhY1tfMHg1NzQ0KCcweDFkMScpXSgpXT1fMHg1NTU4YWM7dmFyIF8weDUyMDQ0OD1fMHg1NTU4YWNbXzB4NTc0NCgnMHg0MScpXSgpO18weDJmYzhhOCE9PV8weDUyMDQ0OCYmKHRoaXNbXzB4NTc0NCgnMHgzZGYnKV0rPV8weDUyMDQ0OD8weDE6LTB4MSk7fWVsc2V7ZGVsZXRlIF8weDU1NThhY1tfMHg1NzQ0KCcweDc1MCcpXSxfMHg0MmE4NTBbJ19tYXBTdGFja0VudHJpZXMnXShfMHg1NTU4YWMpO319KSxfMHg1NTU4YWNbXzB4NTc0NCgnMHg3NGYnKV1bXzB4NTc0NCgnMHg5YScpXT0weDApLHsnY292ZXJhZ2UnOl8weDM2MzljMywndGVzdHMnOl8weDQ3ZWYxYywnbG9nJzpfMHgxOTMwMjUsJ2dsb2JhbEVycm9ycyc6XzB4OWE2YWRjLCdsb2FkaW5nU2VxdWVuY2UnOl8weDM4ZjY0YSwndGltZSc6XzB4MmZjOGE4fTt9fSwnX3JlbW92ZUFuc2knOmZ1bmN0aW9uKF8weDU1NThhYyl7cmV0dXJuIV8weDE5MzAyNVsnaGFzQW5zaSddKF8weDU1NThhY1tfMHg1NzQ0KCcweDMxJyldKXx8XzB4MTkzMDI1W18weDU3NDQoJzB4N2YwJyldKF8weDU1NThhY1tfMHg1NzQ0KCcweDNlNicpXSl8fF8weDE5MzAyNVtfMHg1NzQ0KCcweDdmMCcpXShfMHg1NTU4YWNbXzB4NTc0NCgnMHgzZTgnKV0pfHwoXzB4NTU1OGFjW18weDU3NDQoJzB4MzEnKV09XzB4MTkzMDI1W18weDU3NDQoJzB4N2YxJyldKF8weDU1NThhY1tfMHg1NzQ0KCcweDMxJyldKSksXzB4NTU1OGFjO30sJ19yZXBvcnRhYmxlRXJyb3InOmZ1bmN0aW9uKF8weDU1NThhYyxfMHgyZmM4YTgpe3ZhciBfMHg0MmE4NTA9dGhpcztpZihfW18weDU3NDQoJzB4MTQxJyldKF8weDJmYzhhOCkpe2lmKF8weDU3NDQoJzB4N2YyJyk9PT1fMHg1NzQ0KCcweDdmMicpKXt2YXIgXzB4MzYzOWMzPXsnc3RhY2snOl8weDJmYzhhOH07cmV0dXJuIF8weDQyYTg1MFtfMHg1NzQ0KCcweDRkJyldWydfY2xlYW5TdGFjayddKF8weDM2MzljMyksXzB4MmZjOGE4PV8weDM2MzljM1snc3RhY2snXTt9ZWxzZXt2YXIgXzB4MWFjNTZlLF8weDVhMjhhNTtyZXR1cm4gXzB4MzhmNjRhKHRoaXMsZnVuY3Rpb24oXzB4NTQwMzEzKXtzd2l0Y2goXzB4NTQwMzEzWydsYWJlbCddKXtjYXNlIDB4MDppZighXzB4NTU1OGFjfHwhXzB4NTU1OGFjW18weDU3NDQoJzB4MTI4JyldKXJldHVyblsweDMsMHg2XTtfMHgxYWM1NmU9XzB4NTU1OGFjWydjbGllbnQnXSxkZWxldGUgXzB4NTU1OGFjW18weDU3NDQoJzB4MTI4JyldLF8weDU0MDMxM1tfMHg1NzQ0KCcweGVkJyldPTB4MTtjYXNlIDB4MTpyZXR1cm4gXzB4NTQwMzEzW18weDU3NDQoJzB4ZjAnKV1bXzB4NTc0NCgnMHgyOScpXShbMHgxLDB4NCwsMHg1XSksdGhpc1tfMHg1NzQ0KCcweDEwNScpXT9bMHgzLDB4M106WzB4NCxfMHgxOTMwMjVbXzB4NTc0NCgnMHgxNTcnKV0odGhpc1snX2Nvbm5lY3Rpb25PcHRpb25zJ10oeydpZCc6XzB4MWFjNTZlWyd0YXJnZXQnXVsnaWQnXX0pKV07Y2FzZSAweDI6XzB4NTQwMzEzW18weDU3NDQoJzB4MTBlJyldKCksXzB4NTQwMzEzW18weDU3NDQoJzB4ZWQnKV09MHgzO2Nhc2UgMHgzOnJldHVyblsweDMsMHg1XTtjYXNlIDB4NDpyZXR1cm4gXzB4NWEyOGE1PV8weDU0MDMxM1tfMHg1NzQ0KCcweDEwZScpXSgpLF8weDI0YWRiYyhfMHg1NzQ0KCcweDE1OScpK18weDVhMjhhNVtfMHg1NzQ0KCcweDMxJyldKSxbMHgzLDB4NV07Y2FzZSAweDU6dHJ5e18weDFhYzU2ZVsnY2xvc2UnXSgpO31jYXRjaChfMHg1NDhlODEpe18weDI0YWRiYyhfMHg1NzQ0KCcweDc3YycpK18weDU0OGU4MVtfMHg1NzQ0KCcweDMxJyldKTt9XzB4NTQwMzEzW18weDU3NDQoJzB4ZWQnKV09MHg2O2Nhc2UgMHg2OnJldHVyblsweDJdO319KTt9fXJldHVybiBfMHg1NTU4YWM7fSwnY2FuY2VsJzpmdW5jdGlvbihfMHg1NTU4YWMpe3ZhciBfMHgyZmM4YTg9dGhpcztpZighX1tfMHg1NzQ0KCcweDExZCcpXShfMHgyZmM4YThbJ19zZXNzaW9ucyddKSlyZXR1cm4gXzB4NTU1OGFjPj1fMHgyZmM4YThbXzB4NTc0NCgnMHg3YzYnKV0mJihfW18weDU3NDQoJzB4ZDQnKV0oXzB4MmZjOGE4W18weDU3NDQoJzB4NjY2JyldLGZ1bmN0aW9uKF8weDU1NThhYyl7XzB4NTU1OGFjWydyZWplY3QnXSh7J3J1bkNhbmNlbGxlZCc6ITB4MH0pO30pLF8weDJmYzhhOFtfMHg1NzQ0KCcweDU4ZicpXT0hMHgwLF8weDlhNmFkYyhfMHg1NzQ0KCcweDdmMycpLF8weDU1NThhYyxfMHgyZmM4YThbXzB4NTc0NCgnMHg3YzYnKV0pLCEweDApO30sJ2NhbmNlbGxlZCc6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc1tfMHg1NzQ0KCcweDU4ZicpXTt9LCdfY3JlYXRlU2Vzc2lvbic6ZnVuY3Rpb24oXzB4NTU1OGFjLF8weDJmYzhhOCxfMHg0MmE4NTAsXzB4MzYzOWMzLF8weDM4ZjY0YSl7dmFyIF8weDQ3ZWYxYz10aGlzO3JldHVybiBfMHg0N2VmMWNbXzB4NTc0NCgnMHg2NjYnKV1bXzB4NTU1OGFjXT17J19jb3ZlcmFnZSc6e30sJ190ZXN0cyc6W10sJ19sb2FkaW5nU2VxdWVuY2UnOnt9LCdfbG9nJzpbXSwnX2V4ZWN1dGluZ1Rlc3RMb2cnOltdLCdfZ2xvYmFsRXJyb3JzJzpbXSwnX3RvdGFsJzoweDAsJ19za2lwcGVkJzoweDAsJ19kaXNwb3NpbmcnOiEweDEsJ19leGNlZWRlZE1heFRlc3RBbGxvd2VkTG9nTGltaXQnOiEweDEsJ19vbkZpbmlzaGVkJzpfMHg0MmE4NTBbJ2Nsb3NpbmcnXSwnX21lc3NhZ2VzUGVyVGVzdCc6e30sJ19jbG9zZUJ5RXJyb3JUaW1lb3V0JzoweDAsJ19sb25nUnVubmluZ1dhcm5pbmdUaW1lb3V0JzoweDAsJ19sb25nUnVubmluZ1BpbmdUaW1lb3V0JzoweDAsJ19leGVjdXRpbmdGaWxlcyc6e30sJ19leGVjdXRpbmdUZXN0Jzp2b2lkIDB4MCwnX25vdE1hcHBlZFN0YWNrRW50cmllcyc6W10sJ3N0YXJ0ZWQnOmZ1bmN0aW9uKF8weDJmYzhhOCl7dmFyIF8weDQyYTg1MD10aGlzO18weDlhNmFkYyhfMHg1NzQ0KCcweDdmNCcpLF8weDU1NThhYyxfMHgyZmM4YThbJ3RvdGFsJ10pLHRoaXNbXzB4NTc0NCgnMHg3ZjUnKV09XzB4MmZjOGE4W18weDU3NDQoJzB4N2Y2JyldLF9bXzB4NTc0NCgnMHhkNCcpXShfMHgyZmM4YThbXzB4NTc0NCgnMHg3Y2QnKV0sZnVuY3Rpb24oXzB4NTU1OGFjKXtfMHg0MmE4NTBbXzB4NTc0NCgnMHg3NGUnKV1bXzB4NTU1OGFjWzB4MF1dPV8weDU1NThhY1tfMHg1NzQ0KCcweDQ0NScpXSgweDEpO30pO30sJ2FjdGl2ZSc6ZnVuY3Rpb24oKXtyZXR1cm4hdGhpc1tfMHg1NzQ0KCcweDI3YicpXSYmIV8weDQ3ZWYxY1tfMHg1NzQ0KCcweDU4ZicpXTt9LCdzY2hlZHVsZUNvbXBsZXRlSWZOb3RBY3RpdmVGb3InOmZ1bmN0aW9uKF8weDU1NThhYyl7dmFyIF8weDJmYzhhOD10aGlzO2NsZWFyVGltZW91dChfMHgyZmM4YThbXzB4NTc0NCgnMHg0ZDYnKV0pLF8weDJmYzhhOFtfMHg1NzQ0KCcweDRkNicpXT1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7aWYoJ2ZFYXVXJz09PV8weDU3NDQoJzB4N2Y3Jykpe3ZhciBfMHgzM2VhNzI9XzB4MmZjOGE4W18weDU3NDQoJzB4ZDMnKV0oJz0nKSxfMHg0MGYwZGI9X1sndHJpbUxlZnQnXShfMHgzM2VhNzJbMHgwXSk7cmV0dXJuIF8weDU1NThhY1tfMHg0MGYwZGJdPV8weDJmYzhhOFtfMHg1NzQ0KCcweDIxMScpXShfMHgzM2VhNzJbMHgwXVsnbGVuZ3RoJ10rMHgxKSxfMHg1NTU4YWM7fWVsc2V7XzB4MmZjOGE4Wydjb21wbGV0ZSddKCk7fX0sXzB4NTU1OGFjKTt9LCdhZGRUb1Rlc3RMb2cnOmZ1bmN0aW9uKF8weDU1NThhYyl7aWYoXzB4NTc0NCgnMHg3ZjgnKSE9PV8weDU3NDQoJzB4N2Y5Jykpe3ZhciBfMHgyZmM4YTg9dGhpc1tfMHg1NzQ0KCcweDZjZicpXVt0aGlzWydfZXhlY3V0aW5nVGVzdExvZyddW18weDU3NDQoJzB4OWEnKV0tMHgxXTtfMHgyZmM4YTgmJnRoaXNbXzB4NTc0NCgnMHg2ZDAnKV0oXzB4MmZjOGE4W18weDU3NDQoJzB4MzEnKV18fHZvaWQgMHgwLF8weDU1NThhY1tfMHg1NzQ0KCcweDMxJyldfHx2b2lkIDB4MCkmJl8weDJmYzhhOFsnc3RhY2snXSYmXzB4NTU1OGFjW18weDU3NDQoJzB4NGUnKV0mJl8weDJmYzhhOFsnc3RhY2snXVtfMHg1NzQ0KCcweDlhJyldPjB4MCYmXzB4NTU1OGFjW18weDU3NDQoJzB4NGUnKV1bJ2xlbmd0aCddPjB4MCYmX1snaXNFcXVhbCddKF8weDU1NThhY1tfMHg1NzQ0KCcweDRlJyldWzB4MF0sXzB4MmZjOGE4W18weDU3NDQoJzB4NGUnKV1bMHgwXSk/XzB4NTU1OGFjW18weDU3NDQoJzB4NGUnKV1bXzB4NTc0NCgnMHg5YScpXT5fMHgyZmM4YThbJ3N0YWNrJ11bJ2xlbmd0aCddJiYoXzB4MmZjOGE4WydzdGFjayddPV8weDU1NThhY1tfMHg1NzQ0KCcweDRlJyldKTp0aGlzW18weDU3NDQoJzB4NmNmJyldW18weDU3NDQoJzB4MjknKV0oXzB4NTU1OGFjKTt9ZWxzZXtyZXR1cm57J2ZpbGUnOl8weDU1NThhY1snZmlsZVBhdGgnXSgpLCdsb2MnOl8weDJmYzhhOFtfMHg1NzQ0KCcweDM1NCcpXShfMHg1NTU4YWNbXzB4NTc0NCgnMHgyYmQnKV0oKSl8fF8weDU1NThhY1snbGluZSddKCksJ2NvbnRleHQnOl8weDU1NThhY1tfMHg1NzQ0KCcweDNlNScpXSgpfTt9fSwnX2FyZUxvZ0VudHJ5TWVzc2FnZXNFcXVhbCc6ZnVuY3Rpb24oXzB4NTU1OGFjLF8weDJmYzhhOCl7cmV0dXJuIHZvaWQgMHgwPT09XzB4NTU1OGFjJiYoXzB4NTU1OGFjPScnKSx2b2lkIDB4MD09PV8weDJmYzhhOCYmKF8weDJmYzhhOD0nJyksXzB4NTU1OGFjPT09XzB4MmZjOGE4fHwoXzB4NDdlZjFjW18weDU3NDQoJzB4ZjUnKV1bXzB4NTc0NCgnMHg3ZicpXSYmXzB4NDdlZjFjW18weDU3NDQoJzB4ZjUnKV1bXzB4NTc0NCgnMHg3ZicpXVtfMHg1NzQ0KCcweDgwJyldJiYweDA9PT1fMHg0N2VmMWNbXzB4NTc0NCgnMHhmNScpXVtfMHg1NzQ0KCcweDdmJyldWyd2ZXJzaW9uJ11bXzB4NTc0NCgnMHg3MCcpXShfMHg1NzQ0KCcweDdmYScpKT9fMHg1NTU4YWNbXzB4NTc0NCgnMHg3MCcpXSgnOicpPjB4MCYmX1snY29udGFpbnMnXShfMHg1NTU4YWMsXzB4MmZjOGE4KXx8XzB4MmZjOGE4WydpbmRleE9mJ10oJzonKT4weDAmJl9bXzB4NTc0NCgnMHg1NTQnKV0oXzB4MmZjOGE4LF8weDU1NThhYyk6dm9pZCAweDApO30sJ2ludGVybWVkaWF0ZUNvbXBsZXRlJzpmdW5jdGlvbigpe18weDQ3ZWYxY1tfMHg1NzQ0KCcweDY0ZicpXSYmXzB4NDdlZjFjWydyZXBvcnRJbnRlcm1lZGlhdGVSZXN1bHQnXShfMHg0N2VmMWNbJ19jcmVhdGVSdW5SZXN1bHQnXSh0aGlzKSk7fSwnY29tcGxldGUnOmZ1bmN0aW9uKF8weDJmYzhhOCl7dmFyIF8weDQyYTg1MD10aGlzO2NsZWFyVGltZW91dCh0aGlzWydfY2xvc2VCeUVycm9yVGltZW91dCddKSxjbGVhclRpbWVvdXQodGhpc1snX2xvbmdSdW5uaW5nV2FybmluZ1RpbWVvdXQnXSksY2xlYXJUaW1lb3V0KHRoaXNbXzB4NTc0NCgnMHgxNWMnKV0pLF8weDQyYTg1MFtfMHg1NzQ0KCcweDZiMicpXSgpLHRoaXNbXzB4NTc0NCgnMHg2YjMnKV0oZnVuY3Rpb24oKXtfMHg0N2VmMWNbXzB4NTc0NCgnMHg1OGYnKV0/XzB4MzhmNjRhKHsncnVuQ2FuY2VsbGVkJzohMHgwfSk6XzB4MzYzOWMzKHsnc2Vzc2lvbic6XzB4NDJhODUwLCd0aW1lJzpfMHgyZmM4YTgmJl8weDJmYzhhOFtfMHg1NzQ0KCcweDM0YicpXX0pO30pLF8weDlhNmFkYyhfMHg1NzQ0KCcweDZiNCcpLF8weDU1NThhYyx0aGlzW18weDU3NDQoJzB4MWQzJyldW18w4oCLeDU3NDQoJzB4OWEnKV0tdGhpc1tfMHg1NzQ0KCcweDZiNScpXSx0aGlzW18weDU3NDQoJzB4NmI1JyldKTt9LCdnbG9iYWxFcnJvcic6ZnVuY3Rpb24oXzB4MmZjOGE4KXtfMHg0N2VmMWNbXzB4NTc0NCgnMHg0NzknKV0odGhpcyxfMHg1NTU4YWMsXzB4MmZjOGE4W18weDU3NDQoJzB4MzEnKV0sXzB4MmZjOGE4W18weDU3NDQoJzB4NGUnKV0sXzB4MmZjOGE4W18weDU3NDQoJzB4NDhmJyldLF8weDJmYzhhOFtfMHg1NzQ0KCcweDNlNicpXSxfMHgyZmM4YThbXzB4NTc0NCgnMHgzZTgnKV0pO30sJ3Byb2dyYW1TY29wZVN0YXJ0JzpmdW5jdGlvbihfMHg1NTU4YWMpe3RoaXNbXzB4NTc0NCgnMHgzOGInKV1bXzB4NTU1OGFjXT0weDEsdGhpc1tfMHg1NzQ0KCcweDRjMycpXSgpO30sJ3Byb2dyYW1TY29wZUVuZCc6ZnVuY3Rpb24oXzB4NTU1OGFjKXtpZihfMHg1NzQ0KCcweDdmYicpPT09J0hTZml1Jyl7ZGVsZXRlIHRoaXNbXzB4NTc0NCgnMHgzOGInKV1bXzB4NTU1OGFjXSxfW18weDU3NDQoJzB4MTFkJyldKHRoaXNbXzB4NTc0NCgnMHgzOGInKV0pJiYhdGhpc1tfMHg1NzQ0KCcweDM4YycpXSYmKGNsZWFyVGltZW91dCh0aGlzW18weDU3NDQoJzB4NmIxJyldKSxjbGVhclRpbWVvdXQodGhpc1tfMHg1NzQ0KCcweDE1YycpXSkpO31lbHNle3JldHVybiBfMHg0MmE4NTBbXzB4NTc0NCgnMHg0ZWUnKV0oXzB4NTU1OGFjKTt9fSwncHJlVGVzdCc6ZnVuY3Rpb24oXzB4NTU1OGFjKXtpZihfMHg1NzQ0KCcweDdmYycpIT09XzB4NTc0NCgnMHg3ZmMnKSl7cmV0dXJuIHNldFRpbWVvdXQoZnVuY3Rpb24oKXtyZXR1cm4gXzB4NDdlZjFjKF8weDU1NThhYyk7fSwweDFlKTt9ZWxzZXt0aGlzW18weDU3NDQoJzB4NGMzJyldKCksdGhpc1snX2V4ZWN1dGluZ1Rlc3QnXT1fMHg1NTU4YWM7fX0sJ3Bvc3RUZXN0JzpmdW5jdGlvbigpe2RlbGV0ZSB0aGlzWydfZXhlY3V0aW5nVGVzdCddO30sJ19zZXRUaW1lb3V0Rm9yTG9uZ1J1bm5pbmdPcGVyYXRpb24nOmZ1bmN0aW9uKCl7aWYoIXByb2Nlc3NbJ2VudiddW18weDU3NDQoJzB4MTNmJyldKXtpZignVmtOcFInPT09XzB4NTc0NCgnMHg3ZmQnKSl7dmFyIF8weDU1NThhYz10aGlzO2NsZWFyVGltZW91dCh0aGlzW18weDU3NDQoJzB4NmIxJyldKSxjbGVhclRpbWVvdXQodGhpc1tfMHg1NzQ0KCcweDE1YycpXSksdGhpc1tfMHg1NzQ0KCcweDZiMScpXT1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7aWYoXzB4NTc0NCgnMHg3ZmUnKT09PV8weDU3NDQoJzB4N2ZmJykpe3JldHVybiB0aGlzWydfc3RhcnRSYW5nZSddO31lbHNle3ZhciBfMHgyZmM4YTg9J1NvbWVceDIwbG9uZ1x4MjBydW5uaW5nXHgyMGNvZGVceDIwaGFzXHgyMGJlZW5ceDIwZGV0ZWN0ZWQ6XHgyMCcsXzB4MzYzOWMzPV8weDU1NThhY1tfMHg1NzQ0KCcweDM4YycpXSxfMHgzOGY2NGE9IV9bJ2lzRW1wdHknXShfMHg1NTU4YWNbJ19leGVjdXRpbmdGaWxlcyddKTtpZihfMHgyZmM4YTgrPShfMHgzNjM5YzM/XzB4NTc0NCgnMHg4MDAnKStfMHgzNjM5YzMrJ1x4MjInOl8weDU3NDQoJzB4ODAxJykrKF8weDM4ZjY0YT9fMHg1NzQ0KCcweDM1YScpOl8weDU3NDQoJzB4YWUnKSkpKydceDIwaXNceDIwdGFraW5nXHgyMG1vcmVceDIwdGhhblx4MjAnK18weDQ3MGY1MisnbXNceDIwdG9ceDIwZXhlY3V0ZS4nLF8weDM4ZjY0YSYmKF8weDJmYzhhOCs9XzB4NTc0NCgnMHg4MDInKSxfW18weDU3NDQoJzB4ZDQnKV0oXzB4NTU1OGFjWydfZXhlY3V0aW5nRmlsZXMnXSxmdW5jdGlvbihfMHg1NTU4YWMsXzB4NDJhODUwKXtpZignTm5QZ2EnIT09XzB4NTc0NCgnMHg4MDMnKSl7dmFyIF8weDVlMDg5Nz10aGlzO18weDVlMDg5N1snX2hvc3QnXVtfMHg1NzQ0KCcweDknKV0oeyd0eXBlJzpfMHg1NzQ0KCcweDFhNCcpLCdwYWdlSWQnOl8weDU1NThhY30pO31lbHNle3ZhciBfMHgzNjM5YzM9XzB4NDdlZjFjW18weDU3NDQoJzB4NGQnKV1bXzB4NTc0NCgnMHgyMGMnKV0oXzB4NDJhODUwKTtfMHgyZmM4YTgrPSdceDBhLVx4MjAnKyhfMHgzNjM5YzM/XzB4MzYzOWMzW18weDU3NDQoJzB4ZScpXTpfMHg1NzQ0KCcweGUwJykpO319KSksXzB4NTU1OGFjWydfbG9nJ11bJ2xlbmd0aCddJiYoXzB4MmZjOGE4Kz1fMHg1NzQ0KCcweDgwNCcpK19bJ2xhc3QnXShfMHg1NTU4YWNbXzB4NTc0NCgnMHhmYScpXSlbJ3RleHQnXSksXzB4MzYzOWMzfHxfMHgzOGY2NGEpe2lmKF8weDU3NDQoJzB4ODA1JykhPT1fMHg1NzQ0KCcweDgwNicpKXtfMHgyZmM4YTgrPV8weDU3NDQoJzB4ODA3JyksXzB4MzYzOWMzJiYoXzB4MmZjOGE4Kz0nXHgwYUFsc29ceDIwcmV2aWV3XHgyMHlvdXJceDIwcmVjZW50XHgyMGNoYW5nZXNceDIwdG9ceDIwdGhlXHgyMGNvZGVceDIwdGhhdFx4MjB0aGVceDIwdGVzdFx4MjBjb3ZlcnMsXHgyMGFzXHgyMHdlbGxceDIwYXNceDIwaXRzXHgyMGBiZWZvcmVgXHgyMGFuZFx4MjBgYWZ0ZXJgXHgyMGhvb2tzLicpLF8weDJmYzhhOCs9XzB4NTc0NCgnMHg4MDgnKTt0cnl7aWYoXzB4NTc0NCgnMHg4MDknKT09PV8weDU3NDQoJzB4ODBhJykpe18weDM2MzljM1tfMHg1NzQ0KCcweDEwMScpXSgpO31lbHNle18weDQyYTg1MFtfMHg1NzQ0KCcweDgwYicpXShmdW5jdGlvbigpe2NsZWFyVGltZW91dChfMHg1NTU4YWNbJ19sb25nUnVubmluZ1BpbmdUaW1lb3V0J10pLF8weDU1NThhY1tfMHg1NzQ0KCcweDE1ZCcpXSgpJiZjb25zb2xlW18weDU3NDQoJzB4MmYnKV0oJ1NhbmRib3hceDIwaXNceDIwcmVzcG9uc2l2ZS5ceDIwVGhlXHgyMGlzc3VlXHgyMG1heVx4MjBoYXZlXHgyMHRoZVx4MjBhc3luY2hyb25vdXNceDIwbmF0dXJlLFx4MjBsaWtlXHgyMGFceDIwbWlzc2luZ1x4MjBjYWxsYmFjay4nKTt9KSxfMHg1NTU4YWNbJ19sb25nUnVubmluZ1BpbmdUaW1lb3V0J109c2V0VGltZW91dChmdW5jdGlvbigpe2NvbnNvbGVbXzB4NTc0NCgnMHgyZicpXShfMHg1NzQ0KCcweDE1ZScpKTt9LF8weDE1Nzk1NCk7fX1jYXRjaChfMHgyZGEwY2Epe18weDJmYzhhOCs9XzB4NTc0NCgnMHg4MGMnKStfMHgyZGEwY2FbJ21lc3NhZ2UnXTt9fWVsc2V7cmV0dXJufl8weDM4ZjY0YVtfMHg1NzQ0KCcweDcwJyldKF8weDU1NThhYyk7fX1jb25zb2xlW18weDU3NDQoJzB4MmYnKV0oXzB4MmZjOGE4KTt9fSxfMHg0NzBmNTIpO31lbHNle3JldHVybiBfW18weDU3NDQoJzB4MTlmJyldKHRoaXNbJ190ZXN0TWFwJ10pO319fSwnbW9kdWxlJzpmdW5jdGlvbihfMHg1NTU4YWMpe18weDQ3ZWYxY1snX3Byb2plY3QnXVsnX2VtaXRJbnRlcm5hbCddKHsndHlwZSc6XzB4NTc0NCgnMHg4MGQnKSwncGF0aCc6XzB4NTU1OGFjW18weDU3NDQoJzB4ZScpXSwnc2Vzc2lvbic6dGhpc30pO30sJ3Rlc3QnOmZ1bmN0aW9uKF8weDJmYzhhOCl7dmFyIF8weDQyYTg1MD10aGlzO3JldHVybiBkZWxldGUgdGhpc1tfMHg1NzQ0KCcweDM4YycpXSxjbGVhclRpbWVvdXQodGhpc1tfMHg1NzQ0KCcweDRkNicpXSksdGhpc1snX3NldFRpbWVvdXRGb3JMb25nUnVubmluZ09wZXJhdGlvbiddKCksXzB4MmZjOGE4W18weDU3NDQoJzB4ODBlJyldJiZfMHgyZmM4YThbXzB4NTc0NCgnMHg0OGUnKV0/KF8weDQ3ZWYxY1tfMHg1NzQ0KCcweDdkOScpXShfMHgyZmM4YThbXzB4NTc0NCgnMHg0OGUnKV0pLF9bXzB4NTc0NCgnMHgxNDEnKV0oXzB4MmZjOGE4W18weDU3NDQoJzB4ODBlJyldKSYmX1snZWFjaCddKF8weDJmYzhhOFtfMHg1NzQ0KCcweDQ4ZScpXSxmdW5jdGlvbihfMHg1NTU4YWMpe18weDU1NThhY1tfMHg1NzQ0KCcweDMxJyldPV8weDJmYzhhOFtfMHg1NzQ0KCcweDgwZScpXSsoXzB4NTU1OGFjW18weDU3NDQoJzB4MzEnKV0/JzpceDIwJzonJykrXzB4NTU1OGFjW18weDU3NDQoJzB4MzEnKV07fSksdm9pZCh0aGlzW18weDU3NDQoJzB4NDFlJyldPXRoaXNbXzB4NTc0NCgnMHg0MWUnKV1bXzB4NTc0NCgnMHg5MycpXShfMHgyZmM4YThbXzB4NTc0NCgnMHg0OGUnKV0pKSk6KF8weDJmYzhhOFsnc2tpcHBlZCddPyh0aGlzW18weDU3NDQoJzB4NmI1JyldKyssXzB4NDdlZjFjW18weDU3NDQoJzB4N2Q5JyldKF8weDJmYzhhOFtfMHg1NzQ0KCcweDQ4ZScpXSkpOihfMHg5YTZhZGMoXzB4NTc0NCgnMHg4MGYnKStfMHgyZmM4YThbXzB4NTc0NCgnMHgxNDMnKV0sXzB4NTU1OGFjKSxfMHg0N2VmMWNbXzB4NTc0NCgnMHg3ZDknKV0oXzB4MmZjOGE4W18weDU3NDQoJzB4NDhlJyldKSxfMHgyZmM4YThbXzB4NTc0NCgnMHg0OGUnKV0mJl9bJ2VhY2gnXShfMHgyZmM4YThbJ2xvZyddLGZ1bmN0aW9uKF8weDU1NThhYyl7cmV0dXJuIF8weDQyYTg1MFtfMHg1NzQ0KCcweDFjMycpXShfMHg1NTU4YWMpO30pLHRoaXNbXzB4NTc0NCgnMHg2Y2YnKV1bJ2xlbmd0aCddJiYoXzB4MmZjOGE4W18weDU3NDQoJzB4NDhlJyldPXRoaXNbXzB4NTc0NCgnMHg2Y2YnKV1bXzB4NTc0NCgnMHg0NDUnKV0oKSksX1tfMHg1NzQ0KCcweDczJyldKF8weDJmYzhhOFtfMHg1NzQ0KCcweDRhNicpXSkmJihfMHgyZmM4YThbXzB4NTc0NCgnMHg0YTYnKV09XzB4MmZjOGE4Wyd0aW1lJ10+XzB4NDdlZjFjWydfb3B0cyddW18weDU3NDQoJzB4NzE3JyldKSxfMHgyZmM4YThbXzB4NTc0NCgnMHg0YTYnKV09XzB4MmZjOGE4W18weDU3NDQoJzB4NGE2JyldfHx2b2lkIDB4MCx0aGlzWydfZXhlY3V0aW5nVGVzdExvZyddWydsZW5ndGgnXT0weDAsKytfMHg0N2VmMWNbXzB4NTc0NCgnMHg3YTknKV0lMHgzMnx8Y29uc29sZVsnbG9nJ10oJ0V4ZWN1dGlvblx4MjBwcm9ncmVzczpceDIwJytfMHg0N2VmMWNbXzB4NTc0NCgnMHg3YTknKV0rXzB4NTc0NCgnMHg4MTAnKSkscHJvY2Vzc1tfMHg1NzQ0KCcweDY3JyldW18weDU3NDQoJzB4ODExJyldJiYoXzB4MmZjOGE4W18weDU3NDQoJzB4MzRiJyldPTB4MSkpLHZvaWQgdGhpc1tfMHg1NzQ0KCcweDFkMycpXVtfMHg1NzQ0KCcweDI5JyldKF8weDJmYzhhOCkpO30sJ2NvdmVyYWdlJzpmdW5jdGlvbihfMHg1NTU4YWMpe2lmKF8weDU3NDQoJzB4ODEyJyk9PT1fMHg1NzQ0KCcweDgxMicpKXt0aGlzWydfY292ZXJhZ2UnXVtfMHg1NTU4YWNbJ2lkJ11dPV8weDU1NThhY1tfMHg1NzQ0KCcweDJhNycpXTt9ZWxzZXtfMHgzOGY2NGEoXzB4NDdlZjFjW18weDU3NDQoJzB4NThmJyldP3sncnVuQ2FuY2VsbGVkJzohMHgwfTpfMHg1NTU4YWMpO319LCdjb25zb2xlJzpmdW5jdGlvbihfMHg1NTU4YWMpe3ZhciBfMHgyZmM4YTg9XzB4NDdlZjFjWydfb3B0cyddW18weDU3NDQoJzB4ODEzJyldLF8weDQyYTg1MD10aGlzW18weDU3NDQoJzB4ZjYnKV1bXzB4NTU1OGFjW18weDU3NDQoJzB4ZjcnKV1dPSh0aGlzWydfbWVzc2FnZXNQZXJUZXN0J11bXzB4NTU1OGFjWydzcGVjJ11dfHwweDApKzB4MTtfMHg0MmE4NTA9PT1fMHgyZmM4YTgrMHgxP2NvbnNvbGVbXzB4NTc0NCgnMHgyZicpXShfMHg1NzQ0KCcweGY4JykrXzB4MmZjOGE4KycpLFx4MjBjdXJyZW50XHgyMHRlc3RceDIwY29uc29sZVx4MjBtZXNzYWdlc1x4MjByZWNvcmRpbmdceDIwc3RvcHBlZC5ceDBhWW91XHgyMG1heVx4MjBpbmNyZWFzZVx4MjB0aGVceDIwbGltaXRceDIwYnlceDIwYWRkaW5nXHgyMGBtYXhDb25zb2xlTWVzc2FnZXNQZXJUZXN0YFx4MjBzZXR0aW5nXHgyMHRvXHgyMHlvdXJceDIwY29uZmlnXHgyMGZpbGUuJyk6XzB4NDJhODUwPD1fMHgyZmM4YTgmJnRoaXNbXzB4NTc0NCgnMHhmYScpXVtfMHg1NzQ0KCcweDI5JyldKF8weDU1NThhYyksXzB4NDdlZjFjW18weDU3NDQoJzB4ZmInKV0oXzB4NTU1OGFjKTt9LCdyZXN1bWUnOmZ1bmN0aW9uKCl7aWYoXzB4NTc0NCgnMHg4MTQnKSE9PV8weDU3NDQoJzB4ODE0Jykpe3ZhciBfMHhkNzhjMjg9XzB4NTU1OGFjW18weDU3NDQoJzB4NDQ1JyldKDB4MCxNYXRoW18weDU3NDQoJzB4M2VkJyldKF8weDE5MzAyNVsweDBdLTB4MSwweDApKVtfMHg1NzQ0KCcweDlkJyldKC9bXlx0XS9nLCdceDIwJyksXzB4NTM5OWZlPV8weDE5MzAyNVsweDFdfHwweDE7XzB4MTU4NjFmPVsnXHgwYVx4MjAnLF8weDQ3ZWYxY1tfMHg1NzQ0KCcweDlkJyldKC9cZC9nLCdceDIwJyksXzB4ZDc4YzI4LCdeJ1sncmVwZWF0J10oXzB4NTM5OWZlKV1bXzB4NTc0NCgnMHg1NCcpXSgnJyksXzB4OWE2YWRjJiZfMHgzOGY2NGEmJihfMHgxNTg2MWYrPSdceDIwJytfMHgzOGY2NGEpO31lbHNle18weDlhNmFkYyhfMHg1NzQ0KCcweDgxNScpKSx0aGlzWydfb25GaW5pc2hlZCddKCksdGhpc1snX29uRmluaXNoZWQnXT1fW18weDU3NDQoJzB4MTNhJyldLF8weDQyYTg1MFsncmVzdW1lJ10oKTt9fSwncmVqZWN0JzpmdW5jdGlvbihfMHg1NTU4YWMpe2lmKF8weDU3NDQoJzB4ODE2JykhPT0nSW9KS3cnKXtyZXR1cm4gXzB4NTU1OGFjKF8weDU3NDQoJzB4NTYnKT09PV8weDJmYzhhOD8nZWxlY3Ryb24nPT09XzB4NDJhODUwPycuL2VsZWN0cm9uUnVubmVyLmpzJzpfMHg1NzQ0KCcweDgxNycpPT09XzB4NDJhODUwPycuL2Nocm9tZVJ1bm5lci5qcyc6Jy4vcGhhbnRvbVJ1bm5lci5qcyc6XzB4NTc0NCgnMHg4MTgnKSk7fWVsc2V7dGhpc1snX2Rpc3Bvc2luZyddfHx0aGlzWydfZGlzcG9zZSddKGZ1bmN0aW9uKCl7aWYoXzB4NTc0NCgnMHg4MTknKT09PV8weDU3NDQoJzB4ODE5Jykpe18weDM4ZjY0YShfMHg0N2VmMWNbXzB4NTc0NCgnMHg1OGYnKV0/eydydW5DYW5jZWxsZWQnOiEweDB9Ol8weDU1NThhYyk7fWVsc2V7dmFyIF8weDQ0YzQ1Yj1fMHg1NTU4YWNbXzB4NTc0NCgnMHgyYTQnKV1bXzB4NTc0NCgnMHgzODAnKV0oKSxfMHgyMzQwOWM9XzB4NTU1OGFjW18weDU3NDQoJzB4NDdmJyldW18weDU3NDQoJzB4MzE1JyldJiYhXzB4NTU1OGFjW18weDU3NDQoJzB4NDdmJyldW18weDU3NDQoJzB4NWNmJyldLF8weDIxYWJmYz1fMHg0NGM0NWImJl8weDIzNDA5YztyZXR1cm4gXzB4MjFhYmZjP18weDE5MzAyNVtfMHg1NTU4YWNbJ2ZpbGUnXVtfMHg1NzQ0KCcweDFkMScpXSgpXT1fMHg1NTU4YWNbXzB4NTc0NCgnMHgyYTQnKV06XzB4NDRjNDViJiYoXzB4OWE2YWRjW18weDU1NThhY1tfMHg1NzQ0KCcweDJhNCcpXVsna2V5J10oKV09XzB4NTU1OGFjWydmaWxlJ10pLF8weDIxYWJmYzt9fSk7fX0sJ3JlY3ljbGVXb3JrZXInOmZ1bmN0aW9uKCl7XzB4NDdlZjFjW18weDU3NDQoJzB4Mjk1JyldKF8weDJmYzhhOCk7fSwnX2Rpc3Bvc2UnOmZ1bmN0aW9uKF8weDM2MzljMyl7aWYoJ0dvR21GJz09PV8weDU3NDQoJzB4ODFhJykpe3ZhciBfMHg1NzJmZGY9XzB4NTU1OGFjKCdtb2R1bGUnKSxfMHg1OGNkNGM9bmV3IF8weDU3MmZkZignLicsbnVsbCk7cmV0dXJuIF8weDU4Y2Q0Y1tfMHg1NzQ0KCcweDcyYycpXT1fMHgzOGY2NGFbJ2pvaW4nXShfMHgyZmM4YTgsXzB4NTc0NCgnMHgyMDMnKSksXzB4NThjZDRjW18weDU3NDQoJzB4MjA0JyldPV8weDU3MmZkZltfMHg1NzQ0KCcweDIwNScpXShfMHgyZmM4YTgpLF8weDU3MmZkZltfMHg1NzQ0KCcweDgxYicpXShfMHg0MmE4NTAsXzB4NThjZDRjLCEweDEpO31lbHNle3RoaXNbXzB4NTc0NCgnMHgyN2InKV09ITB4MCxjbGVhclRpbWVvdXQodGhpc1tfMHg1NzQ0KCcweDRkNicpXSksY2xlYXJUaW1lb3V0KHRoaXNbXzB4NTc0NCgnMHg2YjEnKV0pLGNsZWFyVGltZW91dCh0aGlzW18weDU3NDQoJzB4MTVjJyldKTt2YXIgXzB4MzhmNjRhPV8weDQ3ZWYxY1tfMHg1NzQ0KCcweDY2OCcpXVtfMHgyZmM4YThdPXt9LF8weDE5MzAyNT0hMHgxLF8w4oCLeDE1ODYxZj0hMHgxLF8weDI0YWRiYz1mdW5jdGlvbihfMHg0MmE4NTApe18weDE1ODYxZj0hMHgwLF8weDE5MzAyNSYmY2xlYXJUaW1lb3V0KF8weDE5MzAyNSksZGVsZXRlIF8weDQ3ZWYxY1tfMHg1NzQ0KCcweDY2NicpXVtfMHg1NTU4YWNdLF8weDM4ZjY0YVtfMHg1NzQ0KCcweDdlNicpXSYmXzB4MzhmNjRhWydvbkRvbmUnXShfMHg0MmE4NTApLGRlbGV0ZSBfMHg0N2VmMWNbXzB4NTc0NCgnMHg2NjgnKV1bXzB4MmZjOGE4XSxfMHgzNjM5YzMoKTt9LF8weDQ3MGY1Mj1mdW5jdGlvbigpe18weDE1ODYxZnx8KF8weDlhNmFkYygnWyVzXVx4MjBTYW5kYm94XHgyMGlzXHgyMG5vdFx4MjByZXNwb25zaXZlLFx4MjByZWN5Y2xpbmdceDIwd29ya2VyXHgyMGluc3RhbmNlJyxfMHg1NTU4YWMpLF8weDQ3ZWYxY1snX3RyeUNsb3NpbmdTYW5kYm94J10oXzB4NDJhODUwWydjbG9zZSddLF8weDU1NThhYyksXzB4NDdlZjFjW18weDU3NDQoJzB4Mjk1JyldKF8weDJmYzhhOCksXzB4MjRhZGJjKCEweDApKTt9O3RyeXtfMHg0MmE4NTBbJ3BpbmcnXShmdW5jdGlvbigpe2lmKCd3ZUlkQic9PT1fMHg1NzQ0KCcweDgxYycpKXtfMHgxNTg2MWZ8fChfMHg5YTZhZGMoJ1slc11ceDIwU2FuZGJveFx4MjBpc1x4MjByZXNwb25zaXZlLFx4MjBjbG9zaW5nXHgyMGl0JyxfMHg1NTU4YWMpLF8weDQ3ZWYxY1tfMHg1NzQ0KCcweDgxZCcpXShfMHg0MmE4NTBbXzB4NTc0NCgnMHgyMzAnKV0sXzB4NTU1OGFjKSxfMHgyNGFkYmMoKSk7fWVsc2V7XzB4NTU1OGFjW18weDU3NDQoJzB4NzgnKV0oeydDYWNoZS1Db250cm9sJzoncHVibGljLFx4MjBtYXgtYWdlPTg2NDAwJywnRXhwaXJlcyc6bmV3IERhdGUoRGF0ZVtfMHg1NzQ0KCcweDcwMycpXSgpKzB4NTI2NWMwMClbXzB4NTc0NCgnMHg4MWUnKV0oKX0pLF8weDU1NThhY1tfMHg1NzQ0KCcweDQnKV0oXzB4NDdlZjFjW18weDU3NDQoJzB4NzA0JyldKF8weDQyYTg1MCxfMHg1NzQ0KCcweDcwNScpKSksXzB4NTU1OGFjWydzdGF0dXMnXSgweGM4KVtfMHg1NzQ0KCcweDNlJyldKF8weDJmYzhhOCk7fX0pO31jYXRjaChfMHg0MTAzNTYpe2lmKCdTWWVIWSc9PT0nc3dsaXQnKXtyZXR1cm4gdGhpc1tfMHg1NzQ0KCcweDQ4NScpXTt9ZWxzZXtyZXR1cm4gXzB4OWE2YWRjKCdbJXNdXHgyMFNhbmRib3hceDIwY2FuXHgyMG5vdFx4MjBiZVx4MjBwaW5nZWQ6XHgyMCVzJyxfMHg1NTU4YWMsXzB4NDEwMzU2JiZfMHg0MTAzNTZbJ21lc3NhZ2UnXSksdm9pZCBfMHg0NzBmNTIoKTt9fV8weDE5MzAyNT1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7XzB4NDcwZjUyKCk7fSwweDNlOCk7fX19O30sJ190cnlDbG9zaW5nU2FuZGJveCc6ZnVuY3Rpb24oXzB4NTU1OGFjLF8weDJmYzhhOCl7dHJ5e2lmKF8weDU3NDQoJzB4ODFmJyk9PT1fMHg1NzQ0KCcweDgyMCcpKXt2YXIgXzB4NTk3MTE2PV8weDJmYzhhOD8weDA6XzB4NTU1OGFjW18weDU3NDQoJzB4M2RkJyldKCksXzB4YzdiZTQwPV8weDJmYzhhOD8weDA6XzB4NTU1OGFjW18weDU3NDQoJzB4NWY3JyldKCksXzB4NGRmNzIyPTB4MCxfMHgyOTQ3NzA9MHgwO2lmKF8weDU1NThhY1snX3ZhbHVlc0luY2x1ZGVkSW5Db3ZlcmFnZUFnZ3JlZ2F0ZSddPyhfMHg0ZGY3MjI9XzB4NTk3MTE2LV8weDU1NThhY1tfMHg1NzQ0KCcweDVmOCcpXVtfMHg1NzQ0KCcweDNkZCcpXSxfMHgyOTQ3NzA9XzB4YzdiZTQwLV8weDU1NThhY1snX3ZhbHVlc0luY2x1ZGVkSW5Db3ZlcmFnZUFnZ3JlZ2F0ZSddW18weDU3NDQoJzB4NWY3JyldKTooXzB4NGRmNzIyPV8weDU5NzExNixfMHgyOTQ3NzA9XzB4YzdiZTQwKSxfMHg1NTU4YWNbXzB4NTc0NCgnMHg1ZjgnKV09eydudW1iZXJPZkFsbFJhbmdlcyc6XzB4NTk3MTE2LCdudW1iZXJPZkNvdmVyZWRSYW5nZXMnOl8weGM3YmU0MH0sXzB4NDJhODUwW18weDU3NDQoJzB4NTY4JyldKz1fMHg0ZGY3MjIsXzB4NDJhODUwW18weDU3NDQoJzB4M2RmJyldKz1fMHgyOTQ3NzAsMHgwIT09XzB4NGRmNzIyfHwweDAhPT1fMHgyOTQ3NzApcmV0dXJuITB4MDt9ZWxzZXtfMHg1NTU4YWMoKTt9fWNhdGNoKF8weDE5M2EyNSl7XzB4OWE2YWRjKF8weDU3NDQoJzB4ODIxJyksXzB4MmZjOGE4LF8weDE5M2EyNVsnbWVzc2FnZSddKTt9fSwnX2NvcnJ1cHRlZENhY2hlJzpmdW5jdGlvbihfMHg1NTU4YWMpe2lmKF8weDU3NDQoJzB4ODIyJyk9PT1fMHg1NzQ0KCcweDgyMycpKXtyZXR1cm4gXzB4NTU1OGFjJiZfMHg1NTU4YWNbXzB4NTc0NCgnMHg5ZCcpXSgvXlxzK3xccyskL2dtLCcnKTt9ZWxzZXtyZXR1cm4gXzB4NTU1OGFjJiZfMHg1NTU4YWNbXzB4NTc0NCgnMHgyZTQnKV0oL2V2YWx1YXRpbmcgJ1thLXpdXC5cJF9cJGNvdmVyYWdlXFsvKTt9fSwnX3Byb2Nlc3NUZXN0TG9nJzpmdW5jdGlvbihfMHg1NTU4YWMpe3ZhciBfMHgyZmM4YTg9dGhpcztfW18weDU3NDQoJzB4ZDQnKV0oXzB4NTU1OGFjLGZ1bmN0aW9uKF8weDU1NThhYyl7dmFyIF8weDQyYTg1MD1fMHg1NTU4YWNbXzB4NTc0NCgnMHgzMScpXSYmXzB4NTU1OGFjW18weDU3NDQoJzB4MzEnKV1bXzB4NTc0NCgnMHg3MCcpXSgnXHgyMGluXHgyMGZpbGU6Ly8vJyl8fC0weDE7fl8weDQyYTg1MCYmKF8weDU1NThhY1tfMHg1NzQ0KCcweDMxJyldPV8weDU1NThhY1tfMHg1NzQ0KCcweDMxJyldWydzdWJzdHJpbmcnXSgweDAsXzB4NDJhODUwKSksXzB4MmZjOGE4W18weDU3NDQoJzB4N2Q3JyldKF8weDU1NThhY1tfMHg1NzQ0KCcweDMxJyldKSYmKF8weDJmYzhhOFtfMHg1NzQ0KCcweDRkJyldW18weDU3NDQoJzB4ODI0JyldKCksXzB4NTU1OGFjW18weDU3NDQoJzB4MzEnKV09XzB4NWM5Y2ZjKSxfMHgyZmM4YThbXzB4NTc0NCgnMHg0MjgnKV0oXzB4NTU1OGFjKSxfMHgyZmM4YThbJ19tYXBTdGFja0VudHJpZXMnXShfMHg1NTU4YWMpLHByb2Nlc3NbXzB4NTc0NCgnMHg2NycpXVsncXVva2thJ10mJl8weDU1NThhY1tfMHg1NzQ0KCcweDMxJyldJiYoXzB4NTU1OGFjWydtZXNzYWdlJ109XzB4NTU1OGFjW18weDU3NDQoJzB4MzEnKV1bXzB4NTc0NCgnMHg5ZCcpXShfMHgyZmM4YThbXzB4NTc0NCgnMHg2NmUnKV0sJy4nKVtfMHg1NzQ0KCcweDlkJyldKF8weDJmYzhhOFtfMHg1NzQ0KCcweDRkJyldWydfbG9jYWxSb290J10sJy4nKSk7fSk7fSwnX21hcFN0YWNrRW50cmllcyc6ZnVuY3Rpb24oXzB4NTU1OGFjKXt2YXIgXzB4MmZjOGE4PXRoaXMsXzB4NDJhODUwPV8weDVkY2I0M1tfMHg1NzQ0KCcweDlhJyldO2lmKF8weDU1NThhY1tfMHg1NzQ0KCcweDRlJyldJiZfW18weDU3NDQoJzB4MTQxJyldKF8weDU1NThhY1tfMHg1NzQ0KCcweDRlJyldKSYmIV8weDU1NThhY1snZGVsYXlTdGFja01hcHBpbmcnXSl7aWYoXzB4NTc0NCgnMHg4MjUnKSE9PV8weDU3NDQoJzB4ODI1Jykpe3JldHVybiB0aGlzW18weDU3NDQoJzB4NjM4JyldWydjb3ZlcmFibGUnXTt9ZWxzZXt2YXIgXzB4MzYzOWMzLF8weDM4ZjY0YSxfMHg0N2VmMWM9W10sXzB4MTU4NjFmPXt9LF8weDI0YWRiYz1fMHg1NTU4YWNbXzB4NTc0NCgnMHg0ZScpXVtfMHg1NzQ0KCcweGQzJyldKCdceDBhJyk7XzB4MjRhZGJjJiZfMHgyZmM4YThbJ19jb3JydXB0ZWRDYWNoZSddKF8weDI0YWRiY1sweDBdKSYmKF8weDJmYzhhOFtfMHg1NzQ0KCcweDRkJyldW18weDU3NDQoJzB4ODI0JyldKCksXzB4NTU1OGFjW18weDU3NDQoJzB4MzEnKV09XzB4NWM5Y2ZjKSxfW18weDU3NDQoJzB4ZDQnKV0oXzB4MjRhZGJjLGZ1bmN0aW9uKF8weDU1NThhYyl7dmFyIF8weDlhNmFkYz1fMHg1NTU4YWNbXzB4NTc0NCgnMHgyMTAnKV0oXzB4NWRjYjQzKTtpZih+XzB4OWE2YWRjKXt2YXIgXzB4MjRhZGJjPV8weDU1NThhY1snc3Vic3RyJ10oXzB4OWE2YWRjK18weDQyYTg1MClbXzB4NTc0NCgnMHhkMycpXSgnOicpO18weDI0YWRiY1tfMHg1NzQ0KCcweDlhJyldPj0weDImJihfMHgzNjM5YzM9XzB4MmZjOGE4W18weDU3NDQoJzB4NGQnKV1bXzB4NTc0NCgnMHgxYmQnKV0ocGFyc2VJbnQoXzB4MjRhZGJjWzB4MF0sMHhhKXx8XzB4MjRhZGJjWzB4MF0scGFyc2VJbnQoXzB4MjRhZGJjWzB4MV0sMHhhKSksXzB4MzYzOWMzJiZfMHgzNjM5YzNbXzB4NTc0NCgnMHg4ZicpXSYmKF8weDM4ZjY0YT1fMHgyZmM4YThbXzB4NTc0NCgnMHgxYmUnKV0oXzB4NTU1OGFjKSxfMHgzOGY2NGEmJihfMHgxNTg2MWZbXzB4NDdlZjFjW18weDU3NDQoJzB4OWEnKV1dPV8weDM4ZjY0YSksXzB4NDdlZjFjW18weDU3NDQoJzB4MjknKV0oW18weDM2MzljM1tfMHg1NzQ0KCcweDJhNCcpXSxfMHgzNjM5YzNbXzB4NTc0NCgnMHg4ZicpXV0pKSk7fWVsc2UgaWYocHJvY2Vzc1tfMHg1NzQ0KCcweDY3JyldW18weDU3NDQoJzB4MTNmJyldKXtpZihwcm9jZXNzW18weDU3NDQoJzB4NjcnKV1bXzB4NTc0NCgnMHgxM2YnKV0paWYoXzB4NTU1OGFjPV8weDJmYzhhOFtfMHg1NzQ0KCcweDRkJyldW18weDU3NDQoJzB4NTQwJyldKF8weDU1NThhYyksX1snY29udGFpbnMnXShfMHg1NTU4YWMsXzB4MmZjOGE4W18weDU3NDQoJzB4NjZjJyldKSl7aWYoXzB4NTc0NCgnMHg4MjYnKT09PV8weDU3NDQoJzB4ODI2Jykpe2lmKF9bXzB4NTc0NCgnMHg1NTQnKV0oXzB4NTU1OGFjLF8weDU3NDQoJzB4NTU1JykpKXJldHVybiEweDE7fWVsc2V7XzB4MTkzMDI1fHwoXzB4MTU4NjFmKCksXzB4NDJhODUwWydfd29ya2VyUG9vbCddW18weDU3NDQoJzB4Mjk1JyldKF8weDJmYzhhOCksXzB4MzYzOWMzKCdQaGFudG9tXHgyMHBhZ2VceDIwaXNceDIwbm90XHgyMGNyZWF0ZWRceDIwaW5ceDIwdGltZSxceDIwcmVjeWNsaW5nXHgyMGl0JyksXzB4NDdlZjFjKHsncnVuQ2FuY2VsbGVkJzohMHgwLCdyZXJ1bic6ITB4MH0pKTt9fWVsc2V7dmFyIF8weDQ3MGY1MixfMHgxNTc5NTQsXzB4NWM5Y2ZjPV8weDU1NThhYztfMHg1NTU4YWM9XzB4NTU1OGFjW18weDU3NDQoJzB4OWQnKV0oXzB4MmZjOGE4W18weDU3NDQoJzB4NjZlJyldLCcuJyk7dmFyIF8weDdhNThmYj1fMHg1YzljZmMhPT1fMHg1NTU4YWM/XzB4NWM5Y2ZjW18weDU3NDQoJzB4MjEwJyldKF8weDJmYzhhOFtfMHg1NzQ0KCcweDY2ZScpXSk6XzB4NTU1OGFjWydsYXN0SW5kZXhPZiddKCcoJykrMHgxO2lmKF8weDhlZDc4NT1fMHg1YzljZmMhPT1fMHg1NTU4YWM/XzB4NTU1OGFjW18weDU3NDQoJzB4MTE3JyldKF8weDdhNThmYilbXzB4NTc0NCgnMHhkMycpXSgnOicpOl8weDU1NThhY1snc3Vic3RyaW5nJ10oXzB4N2E1OGZiLF8weDU1NThhY1snbGFzdEluZGV4T2YnXSgnKScpLTB4MSlbXzB4NTc0NCgnMHhkMycpXSgnOicpLDB4Mz09PV8weDhlZDc4NVsnbGVuZ3RoJ10pe18weDM4ZjY0YT1fMHgyZmM4YThbXzB4NTc0NCgnMHg3ZWMnKV0oXzB4NTU1OGFjLF8weDdhNThmYik7dmFyIF8weDNmNmE4OT1wYXJzZUludChfMHg4ZWQ3ODVbMHgxXSwweGEpO18weDM2MzljMz1fMHgyZmM4YThbXzB4NTc0NCgnMHg0ZCcpXVsnc3RhY2tFbnRyeUJ5RmlsZVBhdGgnXShfMHgyZmM4YThbXzB4NTc0NCgnMHg0ZCcpXVtfMHg1NzQ0KCcweDU0MCcpXShfMHgxOTMwMjVbXzB4NTc0NCgnMHg4MjcnKV0oXzB4OGVkNzg1WzB4MF0pP18weDhlZDc4NVsweDBdOl9bXzB4NTc0NCgnMHg3ZWQnKV0oXzB4OGVkNzg1WzB4MF0sJy4vJykpLF8weDNmNmE4OSksXzB4MzYzOWMzJiZfMHgzNjM5YzNbXzB4NTc0NCgnMHg4ZicpXT8oXzB4NDcwZjUyPV8weDM2MzljM1snZmlsZSddLF8weDE1Nzk1ND1fMHgzNjM5YzNbXzB4NTc0NCgnMHg4ZicpXSk6KCFfMHgzNjM5YzN8fF8weDM2MzljMyYmIV8weDM2MzljM1tfMHg1NzQ0KCcweDJhNCcpXSkmJihfMHg0NzBmNTI9XzB4OGVkNzg1WzB4MF0sXzB4MTU3OTU0PV8weDNmNmE4OSksXzB4NDcwZjUyJiYoXzB4MzhmNjRhJiYoXzB4MTU4NjFmW18weDQ3ZWYxY1snbGVuZ3RoJ11dPV8weDM4ZjY0YSksXzB4NDdlZjFjW18weDU3NDQoJzB4MjknKV0oW18weDQ3MGY1MixfMHgxNTc5NTRdKSk7fX19ZWxzZXtfMHg1NTU4YWM9XzB4MmZjOGE4W18weDU3NDQoJzB4NGQnKV1bXzB4NTc0NCgnMHg1NDAnKV0oXzB4NTU1OGFjKTt2YXIgXzB4MmFjYzJkPV8weDJmYzhhOFtfMHg1NzQ0KCcweDZhNycpXT9fMHg1NTU4YWNbXzB4NTc0NCgnMHgyMTAnKV0oXzB4MmZjOGE4W18weDU3NDQoJzB4NmE3JyldKTotMHgxO2lmKH5fMHgyYWNjMmQpe3ZhciBfMHg4ZWQ3ODU9X1tfMHg1NzQ0KCcweDZhOCcpXShfMHg1NTU4YWNbXzB4NTc0NCgnMHgxMTcnKV0oXzB4MmFjYzJkK18weDJmYzhhOFtfMHg1NzQ0KCcweDZhNycpXVsnbGVuZ3RoJ10pLCcpJylbXzB4NTc0NCgnMHhkMycpXSgnOicpOzB4MyE9PV8weDhlZDc4NVtfMHg1NzQ0KCcweDlhJyldJiYweDIhPT1fMHg4ZWQ3ODVbJ2xlbmd0aCddfHwoXzB4MzYzOWMzPV8weDJmYzhhOFtfMHg1NzQ0KCcweDRkJyldWydzdGFja0VudHJ5QnlGaWxlUGF0aCddKF8weDJmYzhhOFsnX3Byb2plY3QnXVtfMHg1NzQ0KCcweDU0MCcpXShfWydsdHJpbSddKF8weDhlZDc4NVsweDBdLCcvJykpLHBhcnNlSW50KF8weDhlZDc4NVsweDFdLDB4YSkpLF8weDM2MzljMyYmXzB4MzYzOWMzW18weDU3NDQoJzB4OGYnKV0mJihfMHgzOGY2NGE9XzB4MmZjOGE4W18weDU3NDQoJzB4N2VjJyldKF8weDU1NThhYyxfMHgyYWNjMmQpLF8weDM4ZjY0YSYmKF8weDE1ODYxZltfMHg0N2VmMWNbXzB4NTc0NCgnMHg5YScpXV09XzB4MzhmNjRhKSxfMHg0N2VmMWNbXzB4NTc0NCgnMHgyOScpXShbXzB4MzYzOWMzW18weDU3NDQoJzB4MmE0JyldLF8weDM2MzljM1tfMHg1NzQ0KCcweDhmJyldXSkpKTt9fX0pLF8weDQ3ZWYxY1tfMHg1NzQ0KCcweDlhJyldfHxfMHg5YTZhZGMoXzB4NTc0NCgnMHg4MjgnKSxfMHg1NTU4YWNbXzB4NTc0NCgnMHgzMScpXSYmXzB4NTU1OGFjW18weDU3NDQoJzB4MzEnKV1bXzB4NTc0NCgnMHgyMTEnKV0oMHgwLDB4NDAwKSxfMHg1NTU4YWNbXzB4NTc0NCgnMHg0ZScpXVtfMHg1NzQ0KCcweDIxMScpXSgweDAsMHg0MDApKSxfMHg1NTU4YWNbXzB4NTc0NCgnMHgzMScpXT1fMHgyZmM4YThbJ19wcm9qZWN0J11bXzB4NTc0NCgnMHg4MjknKV0oXzB4NTU1OGFjW18weDU3NDQoJzB4MzEnKV0pLF8weDU3NDQoJzB4ODJhJyk9PT1fMHgyZmM4YThbXzB4NTc0NCgnMHg0ZCcpXVsnc2V0dGluZ3MnXSgpW18weDU3NDQoJzB4NjcnKV1bJ3R5cGUnXSYmfl8weDU1NThhY1snbWVzc2FnZSddW18weDU3NDQoJzB4NzAnKV0oJ0Nhbm5vdFx4MjBmaW5kXHgyMG1vZHVsZScpJiYoXzB4NTU1OGFjWydtZXNzYWdlJ109XzB4MmZjOGE4WydfcHJvamVjdCddW18weDU3NDQoJzB4ODI5JyldKF8weDU1NThhY1tfMHg1NzQ0KCcweDMxJyldLF8weDJmYzhhOFsnX3Byb2plY3QnXVtfMHg1NzQ0KCcweDgyYicpXSkpLF8weDU1NThhY1tfMHg1NzQ0KCcweDRlJyldPV8weDQ3ZWYxYyxfW18weDU3NDQoJzB4MTFkJyldKF8weDE1ODYxZil8fChfMHg1NTU4YWNbXzB4NTc0NCgnMHgzZTUnKV09XzB4MTU4NjFmKSxfMHg1NTU4YWNbXzB4NTc0NCgnMHg4MmMnKV09ITB4MDt9fX0sJ19leHRyYWN0Tm9kZVN0YWNrTGluZUNvbnRleHQnOmZ1bmN0aW9uKF8weDU1NThhYyxfMHgyZmM4YTgpe2lmKF8weDJmYzhhOD4weDQmJicoJz09PV8weDU1NThhY1tfMHgyZmM4YTgtMHgxXSl7dmFyIF8weDQyYTg1MD1fMHg1NTU4YWNbJ3N1YnN0ciddKDB4MCxfMHgyZmM4YTgtMHgyKXx8Jyc7cmV0dXJuIF8weDQyYTg1MFtfMHg1NzQ0KCcweGQzJyldKCdhdFx4MjAnKVsweDFdO319LCdfZXh0cmFjdEJyb3dzZXJTdGFja0xpbmVDb250ZXh0JzpmdW5jdGlvbihfMHg1NTU4YWMpe3ZhciBfMHgyZmM4YTg9XzB4NTU1OGFjW18weDU3NDQoJzB4ZDMnKV0oXzB4NTc0NCgnMHg4MmQnKSk7cmV0dXJuIF8weDJmYzhhOFtfMHg1NzQ0KCcweDlhJyldPj0weDI/KF8weDJmYzhhOFsweDBdfHwnJylbXzB4NTc0NCgnMHhkMycpXShfMHg1NzQ0KCcweDMyOScpKVsweDFdOihfMHgyZmM4YTg9XzB4NTU1OGFjW18weDU3NDQoJzB4ZDMnKV0oJ0BodHRwJyksXzB4MmZjOGE4W18weDU3NDQoJzB4OWEnKV0+PTB4Mj9fMHgyZmM4YThbMHgwXTp2b2lkIDB4MCk7fSwnX3J1bkluUGFyYWxsZWwnOmZ1bmN0aW9uKF8weDU1NThhYyxfMHgyZmM4YTgpe2lmKF8weDU3NDQoJzB4ODJlJykhPT1fMHg1NzQ0KCcweDgyZScpKXtfMHg1ZGNiNDNbXzB4NTc0NCgnMHg3YicpXShfMHg1NzQ0KCcweDFmZCcpLF8weDJmYzhhOFtfMHg1NzQ0KCcweDFmOScpXSk7fWVsc2V7dmFyIF8weDQyYTg1MD10aGlzLF8weDM2MzljMz1fMHg1NTU4YWNbXzB4NTc0NCgnMHg5OScpXSxfMHgzOGY2NGE9e307XzB4OWE2YWRjKF8weDU3NDQoJzB4ODJmJyksXzB4MmZjOGE4KTtmb3IodmFyIF8weDQ3ZWYxYz0weDA7XzB4NDdlZjFjPF8weDJmYzhhODtfMHg0N2VmMWMrKynigIt7dmFyIF8weDE5MzAyNT1fW18weDU3NDQoJzB4MmVkJyldKF8weDU1NThhYyxfMHg1NzQ0KCcweDgzMCcpKTtfMHgxOTMwMjVbXzB4NTc0NCgnMHg5OScpXT1bXSxfMHgzOGY2NGFbXzB4NDdlZjFjXT17J29wdHMnOl8weDE5MzAyNSwnd29ya2VySWQnOl8weDQ3ZWYxYywncmFuZ2VzJzoweDB9O31yZXR1cm4gX1snZWFjaCddKF8weDM2MzljMyxmdW5jdGlvbihfMHg1NTU4YWMpe2lmKCdJa29NdychPT1fMHg1NzQ0KCcweDgzMScpKXt0aGlzW18weDU3NDQoJzB4NGQnKV1bXzB4NTc0NCgnMHhhYicpXShfMHg1NTU4YWNbJ3JlcXVlc3QnXSk7fWVsc2V7dmFyIF8weDJmYzhhOD1fW18weDU3NDQoJzB4YjEnKV0oXzB4MzhmNjRhKVsnc29ydEJ5J10oZnVuY3Rpb24oXzB4NTU1OGFjKXtyZXR1cm4gXzB4NTU1OGFjWydyYW5nZXMnXTt9KVtfMHg1NzQ0KCcweDQ2NScpXShmdW5jdGlvbihfMHg1NTU4YWMpe3JldHVybiBfMHg1NTU4YWNbXzB4NTc0NCgnMHgyYTgnKV1bXzB4NTc0NCgnMHg5OScpXVtfMHg1NzQ0KCcweDlhJyldO30pW18weDU3NDQoJzB4ZTMnKV0oKVsweDBdO18weDJmYzhhOFtfMHg1NzQ0KCcweDJhOCcpXVtfMHg1NzQ0KCcweDk5JyldWydwdXNoJ10oXzB4NTU1OGFjKSxfMHgyZmM4YThbXzB4NTc0NCgnMHgyYTcnKV0rPV8weDU1NThhY1tfMHg1NzQ0KCcweGExJyldO319KSxfMHg5YTZhZGMoXzB4NTc0NCgnMHg4MzInKSksUVtfMHg1NzQ0KCcweDE0YycpXShfW18weDU3NDQoJzB4YjEnKV0oXzB4MzhmNjRhKVsnZmlsdGVyJ10oZnVuY3Rpb24oXzB4NTU1OGFjKXtyZXR1cm4gXzB4NTU1OGFjW18weDU3NDQoJzB4MmE3JyldfHxfMHg1NTU4YWNbXzB4NTc0NCgnMHgyYTgnKV1bXzB4NTc0NCgnMHg5OScpXVtfMHg1NzQ0KCcweDlhJyldO30pW18weDU3NDQoJzB4MTY2JyldKGZ1bmN0aW9uKF8weDU1NThhYyl7cmV0dXJuIF8weDQyYTg1MFtfMHg1NzQ0KCcweDMwZCcpXVsncHJlcGFyZSddKF8weDU1NThhY1tfMHg1NzQ0KCcweDJhOCcpXSxfMHg1NTU4YWNbJ3dvcmtlcklkJ10pWyd0aGVuJ10oZnVuY3Rpb24oXzB4NTU1OGFjKXtpZihfMHg1NzQ0KCcweDgzMycpPT09XzB4NTc0NCgnMHg4MzMnKSl7cmV0dXJuIF8weDQyYTg1MFsnX3J1blRlc3RzJ10oXzB4NTU1OGFjKTt9ZWxzZXtyZXR1cm4gdGhpc1tfMHg1NzQ0KCcweDQwYScpXT09PV8weDU1NThhYyYmXzB4MmZjOGE4W18weDU3NDQoJzB4NDBhJyldPT09XzB4NTU1OGFjJiZ0aGlzW18weDU3NDQoJzB4NDE1JyldIT09XzB4MmZjOGE4W18weDU3NDQoJzB4NDE1JyldP3RoaXNbXzB4NTc0NCgnMHg0MTUnKV08XzB4MmZjOGE4Wydfc3RhcnRDb2x1bW4nXTp0aGlzW18weDU3NDQoJzB4NDBhJyldPT09XzB4NTU1OGFjJiZfMHgyZmM4YThbJ19lbmRMaW5lJ109PT1fMHg1NTU4YWMmJnRoaXNbJ19zdGFydENvbHVtbiddPj1fMHgyZmM4YThbXzB4NTc0NCgnMHg0MGMnKV18fHRoaXNbXzB4NTc0NCgnMHg0M2UnKV0oXzB4MmZjOGE4KTt9fSk7fSlbJ3ZhbHVlJ10oKSlbJ3RoZW4nXShmdW5jdGlvbihfMHg1NTU4YWMpe18weDlhNmFkYygnTWVyZ2luZ1x4MjBwYXJhbGxlbFx4MjB0ZXN0XHgyMHJ1blx4MjByZXN1bHRzJyk7dmFyIF8weDJmYzhhOD1fWydyZWR1Y2UnXShfMHg1NTU4YWMsZnVuY3Rpb24oXzB4NTU1OGFjLF8weDJmYzhhOCl7XzB4NTU1OGFjW18weDU3NDQoJzB4N2NjJyldPV8weDJmYzhhOFtfMHg1NzQ0KCcweDdjYycpXXx8XzB4NTU1OGFjW18weDU3NDQoJzB4N2NjJyldLF8weDU1NThhY1tfMHg1NzQ0KCcweGFlJyldPV8weDU1NThhY1tfMHg1NzQ0KCcweGFlJyldW18weDU3NDQoJzB4OTMnKV0oXzB4MmZjOGE4W18weDU3NDQoJzB4YWUnKV18fFtdKSxfMHg1NTU4YWNbXzB4NTc0NCgnMHg0OGUnKV09XzB4NTU1OGFjW18weDU3NDQoJzB4NDhlJyldW18weDU3NDQoJzB4OTMnKV0oXzB4MmZjOGE4W18weDU3NDQoJzB4NDhlJyldfHxbXSksXzB4NTU1OGFjW18weDU3NDQoJzB4NWEzJyldPV8weDU1NThhY1tfMHg1NzQ0KCcweDVhMycpXVsnY29uY2F0J10oXzB4MmZjOGE4W18weDU3NDQoJzB4NWEzJyldfHxbXSksXzB4NTU1OGFjWydlcnJvciddPV8weDJmYzhhOCBpbnN0YW5jZW9mIEVycm9yfHxfMHg1NTU4YWNbXzB4NTc0NCgnMHg3YycpXSxfMHg1NTU4YWNbJ2xvYWRpbmdTZXF1ZW5jZSddPV9bXzB4NTc0NCgnMHg3OScpXShfMHg1NTU4YWNbXzB4NTc0NCgnMHg3Y2QnKV0sXzB4MmZjOGE4W18weDU3NDQoJzB4N2NkJyldfHx7fSk7dmFyIF8weDQyYTg1MD1fMHg1NTU4YWNbJ2NvdmVyYWdlJ107cmV0dXJuIF9bXzB4NTc0NCgnMHgxMWQnKV0oXzB4NDJhODUwKT8oXzB4NTU1OGFjWydjb3ZlcmFnZSddPV8weDJmYzhhOFtfMHg1NzQ0KCcweDQ3ZicpXSxfMHg1NTU4YWMpOihfWydlYWNoJ10oXzB4MmZjOGE4Wydjb3ZlcmFnZSddLGZ1bmN0aW9uKF8weDU1NThhYyxfMHgyZmM4YTgpe3ZhciBfMHgzNjM5YzM9XzB4NDJhODUwW18weDJmYzhhOF07cmV0dXJuIF8weDM2MzljMz92b2lkIF9bXzB4NTc0NCgnMHhkNCcpXShfMHg1NTU4YWMsZnVuY3Rpb24oXzB4NTU1OGFjLF8weDJmYzhhOCl7dmFyIF8weDQyYTg1MD1fMHgzNjM5YzNbXzB4MmZjOGE4XTtyZXR1cm4gXzB4NDJhODUwP3ZvaWQgX1snZXh0ZW5kJ10oXzB4NDJhODUwLF8weDU1NThhYyk6dm9pZChfMHgzNjM5YzNbXzB4MmZjOGE4XT1fMHg1NTU4YWMpO30pOnZvaWQoXzB4NDJhODUwW18weDJmYzhhOF09XzB4NTU1OGFjKTt9KSxfMHg1NTU4YWMpO30seydjb3ZlcmFnZSc6e30sJ3Rlc3RzJzpbXSwnbG9nJzpbXSwnZ2xvYmFsRXJyb3JzJzpbXSwnbG9hZGluZ1NlcXVlbmNlJzp7fX0pO3JldHVybiBfMHgyZmM4YThbJ3J1bkNhbmNlbGxlZCddP1FbJ3JlamVjdCddKF8weDJmYzhhOCk6XzB4MmZjOGE4W18weDU3NDQoJzB4N2MnKV0/UVsncmVqZWN0J10oXzB4MmZjOGE4W18weDU3NDQoJzB4N2MnKV0pOlFbXzB4NTc0NCgnMHg3NCcpXShfMHgyZmM4YTgpO30pO319LCdnZXRXb3JrZXInOmZ1bmN0aW9uKF8weDU1NThhYyl7aWYoXzB4NTc0NCgnMHg4MzQnKT09PV8weDU3NDQoJzB4ODM0Jykpe3ZhciBfMHgyZmM4YTg9dGhpcyxfMHg0MmE4NTA9XzB4MmZjOGE4W18weDU3NDQoJzB4MzBiJyldW18weDU1NThhY107cmV0dXJuIF8weDQyYTg1MHx8KF8weDQyYTg1MD1fMHgyZmM4YThbXzB4NTc0NCgnMHgzMGInKV1bXzB4NTU1OGFjXT17J2lkJzpfMHg1NTU4YWMsJ3Byb21pc2UnOlFbXzB4NTc0NCgnMHgxODEnKV0oZnVuY3Rpb24oXzB4NDJhODUwLF8weDM2MzljMyl7dmFyIF8weDM4ZjY0YT1fMHgyZmM4YThbXzB4NTc0NCgnMHgzMGInKV1bXzB4NTU1OGFjXTtpZihfMHgzOGY2NGEpaWYoXzB4MzhmNjRhWydpbnN0YW5jZSddKXtpZihfMHgyZmM4YThbXzB4NTc0NCgnMHgzMGQnKV1bJ2hlYWx0aHknXShfMHgzOGY2NGFbXzB4NTc0NCgnMHg0MjQnKV0pKXJldHVybiB2b2lkIF8weDQyYTg1MChfMHgzOGY2NGEpO18weDlhNmFkYyhfMHg1NzQ0KCcweDZkOScpLF8weDU1NThhYyksXzB4MmZjOGE4W18weDU3NDQoJzB4Mjk1JyldKF8weDU1NThhYyk7fWVsc2UgaWYoXzB4MzhmNjRhW18weDU3NDQoJzB4MTgxJyldKXJldHVybiBfMHgzOGY2NGFbXzB4NTc0NCgnMHgxODEnKV07XzB4OWE2YWRjKF8weDU3NDQoJzB4ODM1JykrXzB4NTU1OGFjKTt0cnl7XzB4MmZjOGE4W18weDU3NDQoJzB4MzBkJyldWydjcmVhdGUnXShfMHg1NTU4YWMsZnVuY3Rpb24oXzB4MzhmNjRhKXtpZihfMHg1NzQ0KCcweDgzNicpPT09XzB4NTc0NCgnMHg4MzYnKSl7aWYoIV8weDM4ZjY0YSlyZXR1cm4gdm9pZCBfMHgzNjM5YzMobmV3IEVycm9yKF8weDU3NDQoJzB4ODM3JykpKTt2YXIgXzB4NDdlZjFjPV8weDJmYzhhOFtfMHg1NzQ0KCcweDMwYicpXVtfMHg1NTU4YWNdPV8weDJmYzhhOFsnX3dvcmtlcnMnXVtfMHg1NTU4YWNdfHx7J2lkJzpfMHg1NTU4YWN9O2lmKF8weDM4ZjY0YVsnb25Db25uZWN0ZWQnXSl7aWYoXzB4NTc0NCgnMHg4MzgnKSE9PV8weDU3NDQoJzB4ODM5Jykpe18weDQ3ZWYxY1snb25Db25uZWN0ZWQnXT1fWydiaW5kJ10oXzB4MzhmNjRhWydvbkNvbm5lY3RlZCddLF8weDQ3ZWYxYyksZGVsZXRlIF8weDM4ZjY0YVtfMHg1NzQ0KCcweDFlNycpXTt2YXIgXzB4MTkzMDI1LF8weDE1ODYxZjtfMHg0N2VmMWNbXzB4NTc0NCgnMHgxODEnKV09UVtfMHg1NzQ0KCcweDE4MScpXShmdW5jdGlvbihfMHg1NTU4YWMsXzB4MmZjOGE4KXtpZignR1p2WGYnIT09XzB4NTc0NCgnMHg4M2EnKSl7dGhyb3cgbmV3IEVycm9yKFtfMHg1NzQ0KCcweDJhZCcpLF8weDU3NDQoJzB4NDMwJyksJ29uXHgyMGhhZFx4MjBmYScsXzB4NTc0NCgnMHgyYWYnKSxfMHg1NzQ0KCcweDQzMScpLF8weDU3NDQoJzB4MmIwJyksXzB4NTc0NCgnMHg0MzInKV1bXzB4NTc0NCgnMHg1NCcpXSgnJykpO31lbHNle18weDE5MzAyNT1fMHg1NTU4YWMsXzB4MTU4NjFmPV8weDJmYzhhODt9fSk7dmFyIF8weDI0YWRiYz0hMHgxLF8weDQ3MGY1Mj1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7aWYoIV8weDI0YWRiYyl7XzB4MTU3OTU0KCk7dmFyIF8weDQyYTg1MD1fMHgyZmM4YThbXzB4NTc0NCgnMHgzMGInKV1bXzB4NTU1OGFjXTtfMHg0MmE4NTAmJl8weDQyYTg1MFtfMHg1NzQ0KCcweDMwYycpXT9fMHgyZmM4YThbXzB4NTc0NCgnMHgzMGQnKV1bXzB4NTc0NCgnMHgzMGUnKV0oXzB4MzhmNjRhKTpfMHgyZmM4YThbXzB4NTc0NCgnMHgyOTUnKV0oXzB4NTU1OGFjKSxfMHg5YTZhZGMoXzB4NTc0NCgnMHg4M2InKSksXzB4MTU4NjFmJiZfMHgxNTg2MWYoeydydW5DYW5jZWxsZWQnOiEweDAsJ3JlcnVuJzohMHgwfSksXzB4MzYzOWMzKHsncnVuQ2FuY2VsbGVkJzohMHgwLCdyZXJ1bic6ITB4MH0pO319LDB4MjcxMCksXzB4MTU3OTU0PWZ1bmN0aW9uKCl7XzB4MjRhZGJjPSEweDAsY2xlYXJUaW1lb3V0KF8weDQ3MGY1Mik7fSxfMHg1ZGNiNDM9XzB4MmZjOGE4W18weDU3NDQoJzB4NjY3JyldW18weDU1NThhY107XzB4NWRjYjQzJiZfMHgyZmM4YThbXzB4NTc0NCgnMHgzMGQnKV1bJ3JlY3ljbGUnXShfMHg1ZGNiNDMpLF8weDJmYzhhOFtfMHg1NzQ0KCcweDY2NycpXVtfMHg1NTU4YWNdPV8weDM4ZjY0YSxfMHg0N2VmMWNbJ29uQ29ubmVjdGVkJ10oZnVuY3Rpb24oXzB4MzYzOWMzKXtpZihfMHg1NzQ0KCcweDgzYycpPT09XzB4NTc0NCgnMHg4M2MnKSl7ZGVsZXRlIF8weDJmYzhhOFtfMHg1NzQ0KCcweDY2NycpXVtfMHg1NTU4YWNdLF8weDI0YWRiY3x8KF8weDE1Nzk1NCgpLF8weDlhNmFkYyhfMHg1NzQ0KCcweDgzZCcpK18weDU1NThhYyksXzB4NDdlZjFjW18weDU3NDQoJzB4NDI0JyldPV8weDM4ZjY0YSxfMHg0N2VmMWNbXzB4NTc0NCgnMHgzMGMnKV09ITB4MCxfMHgzOGY2NGFbJ2NoYW5uZWwnXT1fMHgzNjM5YzMsXzB4NDdlZjFjW18weDU3NDQoJzB4MTgxJyldPVFbXzB4NTc0NCgnMHg3NCcpXShfMHgzOGY2NGEpLF8weDE5MzAyNSYmXzB4MTkzMDI1KF8weDM4ZjY0YSksXzB4NDJhODUwKF8weDM4ZjY0YSkpO31lbHNle18weDM2MzljM1tfMHg1NzQ0KCcweDFiNycpXShuZXcgRXJyb3IoXzB4NTc0NCgnMHgxYjInKSkpLGNvbnNvbGVbXzB4NTc0NCgnMHg3YycpXShfMHg1NzQ0KCcweDFiMicpLF8weDM4ZjY0YVtfMHg1NzQ0KCcweDMxJyldKTt9fSk7fWVsc2V7dHJ5e18weDE1ODYxZihfMHgzNjM5YzNbJ25leHQnXShfMHg1NTU4YWMpKTt9Y2F0Y2goXzB4NjA5NmNjKXtfMHg0N2VmMWMoXzB4NjA5NmNjKTt9fX1lbHNlIF8weDlhNmFkYyhfMHg1NzQ0KCcweDgzZScpK18weDU1NThhYyksXzB4NDdlZjFjW18weDU3NDQoJzB4NDI0JyldPV8weDM4ZjY0YSxfMHg0N2VmMWNbJ3Byb21pc2UnXT1RWyd3aGVuJ10oXzB4MzhmNjRhKSxfMHg0MmE4NTAoXzB4MzhmNjRhKTt9ZWxzZXtfMHgyZmM4YThbJ19hbGxvd2VkVG9TZW5kVGVzdFJlc3VsdHMnXT0hMHgxO319KTt9Y2F0Y2goXzB4MzkyYTczKXtpZihfMHg1NzQ0KCcweDgzZicpPT09XzB4NTc0NCgnMHg4NDAnKSl7cmV0dXJuIHRoaXNbJ19jYW5jZWxsZWQnXTt9ZWxzZXtfMHgzNjM5YzMoXzB4MzkyYTczKTt9fX0pfSksXzB4NDJhODUwW18weDU3NDQoJzB4MTgxJyldO31lbHNle3ZhciBfMHg5MWZlZjg9XzB4NDJhODUwP3RoaXNbXzB4NTc0NCgnMHgzOWEnKV1bXzB4NTc0NCgnMHgyNTYnKV0oX1sndmFsdWVzJ10odGhpc1tfMHg1NzQ0KCcweDQ1ZicpXSksITB4MCwhMHgwKTp0aGlzW18weDU3NDQoJzB4MzlhJyldW18weDU3NDQoJzB4MjU2JyldKF8weDU1NThhYyxfMHgyZmM4YTgsITB4MSk7cmV0dXJuIF8weDkxZmVmOFtfMHg1NzQ0KCcweDg0MScpXT1fMHg0MmE4NTAsXzB4OTFmZWY4O319LCdyZXBvcnRDb25zb2xlT3V0cHV0JzpmdW5jdGlvbihfMHg1NTU4YWMpe30sJ3JlY3ljbGVXb3JrZXInOmZ1bmN0aW9uKF8weDU1NThhYyl7dmFyIF8weDJmYzhhOD10aGlzO3RyeXtpZignRnBReHUnIT09J0hwanF0Jyl7dmFyIF8weDQyYTg1MD1fMHgyZmM4YThbXzB4NTc0NCgnMHgzMGInKV1bXzB4NTU1OGFjXTtfMHg0MmE4NTAmJl8weDQyYTg1MFtfMHg1NzQ0KCcweDQyNCcpXSYmXzB4MmZjOGE4WydfZXh0ZW5zaW9uJ11bXzB4NTc0NCgnMHgzMGUnKV0oXzB4NDJhODUwW18weDU3NDQoJzB4NDI0JyldKTt9ZWxzZXtmdW5jdGlvbiBfMHgzOWNmZigpe3RoaXNbXzB4NTc0NCgnMHg0YzInKV09XzB4MmZjOGE4O31fMHg1NTU4YWMoXzB4MmZjOGE4LF8weDQyYTg1MCksXzB4MmZjOGE4Wydwcm90b3R5cGUnXT1udWxsPT09XzB4NDJhODUwP09iamVjdFtfMHg1NzQ0KCcweDU4JyldKF8weDQyYTg1MCk6KF8weDM5Y2ZmWydwcm90b3R5cGUnXT1fMHg0MmE4NTBbJ3Byb3RvdHlwZSddLG5ldyBfMHgzOWNmZigpKTt9fWNhdGNoKF8weDI0MzBhMil7aWYoJ21PbWx4Jz09PV8weDU3NDQoJzB4ODQyJykpe3JldHVybiBudWxsO31lbHNle18weDlhNmFkYyhfMHg1NzQ0KCcweDg0MycpLF8weDU1NThhYyxfMHgyNDMwYTImJihfMHgyNDMwYTJbXzB4NTc0NCgnMHg0ZScpXXx8XzB4MjQzMGEyW18weDU3NDQoJzB4MzEnKV0pKTt9fWZpbmFsbHl7aWYoXzB4NTc0NCgnMHg4NDQnKSE9PV8weDU3NDQoJzB4ODQ0Jykpe2lmKHRoaXNbJ2hhc1JlcG9ydGFibGVDb3ZlcmFnZSddKCkpe3ZhciBfMHg5NmY2M2Q9dGhpc1tfMHg1NzQ0KCcweDNkZCcpXSghMHgwKTtyZXR1cm4gTWF0aFtfMHg1NzQ0KCcweDNkZScpXSgweDI3MTAqdGhpc1tfMHg1NzQ0KCcweDNkZicpXS9fMHg5NmY2M2QpLzB4NjQ7fX1lbHNle2RlbGV0ZSBfMHgyZmM4YThbJ193b3JrZXJzJ11bXzB4NTU1OGFjXSxkZWxldGUgXzB4MmZjOGE4W18weDU3NDQoJzB4NjY4JyldW18weDU1NThhY107fX19LCdzdG9wJzpmdW5jdGlvbigpe3ZhciBfMHg1NTU4YWM9dGhpcztfW18weDU3NDQoJzB4ZDQnKV0oXzB4NTU1OGFjW18weDU3NDQoJzB4MzBiJyldLGZ1bmN0aW9uKF8weDJmYzhhOCxfMHg0MmE4NTApe2lmKF8weDU3NDQoJzB4ODQ1JykhPT0ncHZva0MnKXtfMHg1NTU4YWNbXzB4NTc0NCgnMHgyOTUnKV0oXzB4NDJhODUwKTt9ZWxzZXtfMHgzNjM5YzNbXzB4NTc0NCgnMHgxMDEnKV0oKTt9fSk7dHJ5e2lmKF8weDU3NDQoJzB4ODQ2JykhPT0nSllwWkgnKXtyZXR1cm4gdGhpc1snX3Byb2plY3QnXVsnc2V0dGluZ3MnXSgpW18weDU3NDQoJzB4NTc3JyldO31lbHNle18weDU1NThhY1snX3dzcyddJiZfMHg1NTU4YWNbXzB4NTc0NCgnMHg1MjUnKV1bXzB4NTc0NCgnMHgyMzAnKV0oKTt9fWNhdGNoKF8weDUyNDQ5Mil7fXRyeXtfMHg1NTU4YWNbXzB4NTc0NCgnMHg1OWEnKV0mJl8weDU1NThhY1snX2h0dHBTZXJ2ZXInXVsnY2xvc2UnXSgpO31jYXRjaChfMHg0M2E3ZmUpe319LCdfY2FsY3VsYXRlTnVtYmVyT2ZQYXJhbGxlbFdvcmtlcnMnOmZ1bmN0aW9uKCl7dmFyIF8weDU1NThhYz10aGlzO18weDU1NThhY1tfMHg1NzQ0KCcweDY2YScpXT1NYXRoWydtYXgnXSgweDEsXzB4NTU1OGFjW18weDU3NDQoJzB4ZjUnKV1bJ3dvcmtlcnMnXVtfMHg1NzQ0KCcweDdlMCcpXXx8TWF0aFsnbWF4J10oXzB4MzYzOWMzW18weDU3NDQoJzB4NzI1JyldKClbJ2xlbmd0aCddLTB4MiwweDIpKSxfMHgyNGFkYmMmJiFfMHg1NTU4YWNbJ19vcHRzJ11bJ3dvcmtlcnMnXVsnaW5pdGlhbCddJiYncGhhbnRvbWpzJz09PV8weDU1NThhY1tfMHg1NzQ0KCcweGY1JyldW18weDU3NDQoJzB4NjcnKV1bXzB4NTc0NCgnMHg3ZTInKV0mJihfMHg1NTU4YWNbXzB4NTc0NCgnMHg2NmEnKV09TWF0aFtfMHg1NzQ0KCcweDNlZScpXSgweDEwLF8weDU1NThhY1tfMHg1NzQ0KCcweDY2YScpXSkpLF8weDU1NThhY1snX21pbldvcmtlcnMnXT1NYXRoW18weDU3NDQoJzB4M2VkJyldKDB4MSxfMHg1NTU4YWNbXzB4NTc0NCgnMHhmNScpXVtfMHg1NzQ0KCcweDcxYScpXVtfMHg1NzQ0KCcweDdlMycpXXx8TWF0aFtfMHg1NzQ0KCcweDNlZCcpXShNYXRoW18weDU3NDQoJzB4N2U0JyldKF8weDU1NThhY1tfMHg1NzQ0KCcweDY2YScpXS8weDIpLDB4MikpLF8weDlhNmFkYyhfMHg1NzQ0KCcweDg0NycpLF8weDU1NThhY1tfMHg1NzQ0KCcweDY2YScpXSxfMHg1NTU4YWNbXzB4NTc0NCgnMHg2NmInKV0pO319LF8weDJmYzhhOFtfMHg1NzQ0KCcweGInKV09XzB4N2E1OGZiO30seycuL3V0aWxzJzoweDFlLCdodHRwJzp2b2lkIDB4MCwnb3MnOnZvaWQgMHgwLCdwYXRoJzp2b2lkIDB4MCwnd3MnOnZvaWQgMHgwfV0sMzA6W2Z1bmN0aW9uKF8weDIwMGM2NyxfMHg0NmM5MTYsXzB4MjI2ZTYxKXt2YXIgXzB4NDg5ZWYzPXRoaXMmJnRoaXNbXzB4NTc0NCgnMHg4NDgnKV18fGZ1bmN0aW9uKCl7aWYoJ0Jkb0ZzJz09PV8weDU3NDQoJzB4ODQ5Jykpe3JldHVybiBfMHg0ODllZjM9T2JqZWN0Wydhc3NpZ24nXXx8ZnVuY3Rpb24oXzB4MjAwYzY3KXtmb3IodmFyIF8weDQ2YzkxNixfMHgyMjZlNjE9MHgxLF8weDQ4OWVmMz1hcmd1bWVudHNbXzB4NTc0NCgnMHg5YScpXTtfMHgyMjZlNjE8XzB4NDg5ZWYzO18weDIyNmU2MSsrKXtfMHg0NmM5MTY9YXJndW1lbnRzW18weDIyNmU2MV07Zm9yKHZhciBfMHhkZGZjMSBpbiBfMHg0NmM5MTYpT2JqZWN0W18weDU3NDQoJzB4MTBkJyldW18weDU3NDQoJzB4M2InKV1bXzB4NTc0NCgnMHhlYycpXShfMHg0NmM5MTYsXzB4ZGRmYzEpJiYoXzB4MjAwYzY3W18weGRkZmMxXT1fMHg0NmM5MTZbXzB4ZGRmYzFdKTt9cmV0dXJuIF8weDIwMGM2Nzt9LF8weDQ4OWVmM1tfMHg1NzQ0KCcweGU0JyldKHRoaXMsYXJndW1lbnRzKTt9ZWxzZXtpZihfMHg0MmYwNzdbXzB4NTc0NCgnMHg0MjQnKV1bXzB4NTc0NCgnMHgxMzUnKV0pdHJ5e18weDQyZjA3N1tfMHg1NzQ0KCcweDQyNCcpXVtfMHg1NzQ0KCcweDEzNScpXVtfMHg1NzQ0KCcweDIzMCcpXSgpLF8weDQyZjA3N1tfMHg1NzQ0KCcweDQyNCcpXVtfMHg1NzQ0KCcweDEzNScpXVsncmVtb3ZlQWxsTGlzdGVuZXJzJ10oKTt9Y2F0Y2goXzB4MmRhMTA4KXt9XzB4NDJmMDc3W18weDU3NDQoJzB4NDI0JyldW18weDU3NDQoJzB4MTM1JyldPV8weDIwMGM2Nzt9fSxfMHhkZGZjMT1fMHgyMDBjNjcoJ3BhdGgnKSxfMHg0MmYwNzc9XzB4MjAwYzY3KCdmcycpLF8weDFmMzg3Yj1fMHgyMDBjNjcoXzB4NTc0NCgnMHg1NTknKSksXzB4NTRlYTQ3PV8weDIwMGM2NyhfMHg1NzQ0KCcweDg0YScpKVtfMHg1NzQ0KCcweDg0YicpXSxfMHg0ZDMwYTg9XzB4MjAwYzY3KF8weDU3NDQoJzB4ODRhJykpW18weDU3NDQoJzB4ODRjJyldLF8weDVjOWRhOT0vXlxzKihcL1wqXCo/KC58XHI/XG4pKj9cKlwvKS8sXzB4MmViOWIzPS9eXHMqLyxfMHhlOTk5N2E9L1tcdTAwMWJcdTAwOWJdW1soKSM7P10qKD86WzAtOV17MSw0fSg/OjtbMC05XXswLDR9KSopP1swLTlBLVBSWmNmLW5xcnk9PjxdL2csXzB4MzU5MDRlPS9cL1wqW1xzXFNdKj9cKlwvfChbXlxcOl18XilcL1wvLiokL2dtLF8weDI4ZDI3NT0vZml0W1xzXSo/XCh8XC5bXHNdKj9vbmx5W1xzXSo/XCgvZ20sXzB4MmViNGUwPS9bI0BdIHNvdXJjZU1hcHBpbmdVUkw9KFteXHMnIl0qKS8sXzB4NGEzMWZiPVJlZ0V4cCgnKD86L1x4NWMqKD86XHg1Y3MqXHgwZD9ceDBhKD86Ly8pPyk/KD86JytfMHgyZWI0ZTBbXzB4NTc0NCgnMHg2MWMnKV0rXzB4NTc0NCgnMHg4NGQnKStfMHgyZWI0ZTBbXzB4NTc0NCgnMHg2MWMnKV0rXzB4NTc0NCgnMHg4NGUnKSwnZycpLF8weGJjMGJiPS9eZGF0YTphcHBsaWNhdGlvblwvanNvblteLF0rYmFzZTY0LC8sXzB4NTExZTRiPWZ1bmN0aW9uKF8weDIwMGM2NyxfMHg0NmM5MTYpe2lmKCdIZFd5RSchPT1fMHg1NzQ0KCcweDg0ZicpKXtyZXR1cm4nanMnPT09XzB4MjAwYzY3fHwnanN4Jz09PV8weDIwMGM2N3x8XzB4NTc0NCgnMHhiZCcpPT09XzB4MjAwYzY3fHwnZXM3Jz09PV8weDIwMGM2N3x8J21qcyc9PT1fMHgyMDBjNjd8fF8weDQ2YzkxNiYmXzB4NDZjOTE2WydmaW5kJ10oZnVuY3Rpb24oXzB4NDZjOTE2KXtyZXR1cm4gXzB4MjAwYzY3PT09XzB4NDZjOTE2O30pO31lbHNle3JldHVybiBfW18weDU3NDQoJzB4MTJlJyldKF8weDIwMGM2NyxmdW5jdGlvbihfMHg0YWNjYzcpe3JldHVybiEhXzB4NGFjY2M3O30pO319LF8weDEzMDcyZj1mdW5jdGlvbihfMHgyMDBjNjcpe2lmKF8weDU3NDQoJzB4ODUwJykhPT1fMHg1NzQ0KCcweDg1MScpKXtyZXR1cm4ndHMnPT09XzB4MjAwYzY3fHwndHN4Jz09PV8weDIwMGM2Nzt9ZWxzZXtpZihwcm9jZXNzW18weDU3NDQoJzB4NjcnKV1bXzB4NTc0NCgnMHgxM2YnKV0mJiFfMHgyMDBjNjdbXzB4NTc0NCgnMHgzMmYnKV0pcmV0dXJuO3ZhciBfMHg0ZjE5MTg9dGhpc1tfMHg1NzQ0KCcweDFkOCcpXVtfMHg1NzQ0KCcweDMzMCcpXSgpO18weDRmMTkxOCYmXzB4NTc0NCgnMHgzMzEnKSE9dHlwZW9mIF8weDRmMTkxOCYmKF8weDRmMTkxOFsndGVzdFJ1blJlUXVldWVkJ109ITB4MCksdGhpc1tfMHg1NzQ0KCcweDMyYScpXShfMHg0ZjE5MTgpO319LF8weDNlNzNlZD1mdW5jdGlvbihfMHgyMDBjNjcpe3JldHVybiBfMHg1NzQ0KCcweDg1MicpPT09XzB4MjAwYzY3O30sXzB4NDQ1NWQxPWZ1bmN0aW9uKF8weDIwMGM2NyxfMHg0NmM5MTYpe3JldHVybiBfMHg1NzQ0KCcweDNmZicpPT09XzB4MjAwYzY3fHwvXC4obGl0Y29mZmVlfGNvZmZlZVwubWQpJC9bXzB4NTc0NCgnMHgzOWQnKV0oXzB4NDZjOTE2fHwnJyk7fTtfMHg0NmM5MTZbXzB4NTc0NCgnMHhiJyldPXsnU291cmNlTWFwQ29uc3VtZXInOl8weDU0ZWE0NywncmFuZG9tSWQnOmZ1bmN0aW9uKCl7aWYoXzB4NTc0NCgnMHg4NTMnKSE9PV8weDU3NDQoJzB4ODU0Jykpe3JldHVybiBNYXRoWydyYW5kb20nXSgpWyd0b1N0cmluZyddKDB4MjQpW18weDU3NDQoJzB4MTE3JyldKDB4MiwweDUpO31lbHNle2lmKF8weDIwMGM2Nyl7dmFyIF8weDFiYWNiOD1fMHgyMDBjNjdbXzB4NTc0NCgnMHhkMycpXSgnXHgwYScpLF8weDJhMzg5OD1bXTtfW18weDU3NDQoJzB4ZDQnKV0oXzB4MWJhY2I4LGZ1bmN0aW9uKF8weDE3Y2Q1Nil7cmV0dXJuIV9bXzB4NTc0NCgnMHgzMjcnKV0oX1tfMHg1NzQ0KCcweDMyOCcpXShfMHgxN2NkNTYpLCdhdCcpJiZ2b2lkIF8weDJhMzg5OFtfMHg1NzQ0KCcweDI5JyldKF8weDE3Y2Q1Nik7fSksXzB4NDZjOTE2PV8weDJhMzg5OFtfMHg1NzQ0KCcweDU0JyldKCdceDBhJyk7fV8weGRkZmMxKF8weDQ2YzkxNixfMHgyMDBjNjcpO319LCdub29wVHJ1ZSc6ZnVuY3Rpb24oKXtyZXR1cm4hMHgwO30sJ25vb3BUcnVlUHJvbWlzZSc6ZnVuY3Rpb24oKXtyZXR1cm4gUVtfMHg1NzQ0KCcweDg1NScpXSh0aGlzW18weDU3NDQoJzB4ODU2JyldKTt9LCdpc1BhdGNoJzpmdW5jdGlvbihfMHgyMDBjNjcpe2lmKF8weDU3NDQoJzB4ODU3Jyk9PT1fMHg1NzQ0KCcweDg1OCcpKXt2YXIgXzB4N2RkNmYxPV8weDIyNmU2MVsnc291cmNlRmlsZSddKCk7XzB4NDZjOTE2W18weDdkZDZmMVtfMHg1NzQ0KCcweDFkMScpXSgpXT1fMHg3ZGQ2ZjE7fWVsc2V7cmV0dXJuIF8weDIwMGM2NyYmXzB4MjAwYzY3WydsZW5ndGgnXT4weDImJidAJz09PV8weDIwMGM2N1sweDBdJiYnQCc9PT1fMHgyMDBjNjdbMHgxXTt9fSwnaXNMZXZlbFVwUmVsYXRpdmVQYXRoJzpmdW5jdGlvbihfMHgyMDBjNjcpe3JldHVybiBfMHgyMDBjNjcmJicuJz09PV8weDIwMGM2N1sweDBdJiYnLic9PT1fMHgyMDBjNjdbMHgxXTt9LCdkb2NCbG9ja0NvbW1lbnQnOmZ1bmN0aW9uKF8weDIwMGM2Nyl7dmFyIF8weDQ2YzkxNj1fMHgyMDBjNjdbXzB4NTc0NCgnMHgyZTQnKV0oXzB4NWM5ZGE5KTtyZXR1cm4gXzB4NDZjOTE2P18weDQ2YzkxNlsweDBdW18weDU3NDQoJzB4OWQnKV0oXzB4MmViOWIzLCcnKXx8Jyc6Jyc7fSwnbm9ybWFsaXplUGF0aCc6ZnVuY3Rpb24oXzB4MjAwYzY3KXtyZXR1cm4gXzB4MjAwYzY3P18weDIwMGM2N1sncmVwbGFjZSddKF8weDU3NDQoJzB4Njg0Jyk9PT1wcm9jZXNzW18weDU3NDQoJzB4Mjg0JyldP18weDU3NDQoJzB4ODU5Jyk6XzB4NTc0NCgnMHg4NWEnKSwnJylbJ3NwbGl0J10oXzB4ZGRmYzFbJ3NlcCddKVsnam9pbiddKCcvJyk6XzB4MjAwYzY3O30sJ3BsYXRmb3JtRGVwZW5kZW50UGF0aCc6ZnVuY3Rpb24oXzB4MjAwYzY3KXtpZihfMHg1NzQ0KCcweDg1YicpIT09XzB4NTc0NCgnMHg4NWMnKSl7cmV0dXJuIV8weDIwMGM2N3x8XzB4NTc0NCgnMHg2ODQnKSE9PXByb2Nlc3NbJ3BsYXRmb3JtJ118fH5fMHgyMDBjNjdbXzB4NTc0NCgnMHg3MCcpXShfMHhkZGZjMVsnc2VwJ10pP18weDIwMGM2NzpfMHgyMDBjNjdbXzB4NTc0NCgnMHhkMycpXSgnLycpW18weDU3NDQoJzB4NTQnKV0oXzB4ZGRmYzFbJ3NlcCddKTt9ZWxzZXtfMHg1NGVhNDc9ITB4MDt2YXIgXzB4N2JkZWQ1PV8weDQ4OWVmM1tfMHg1NzQ0KCcweDJiYycpXSgpO2lmKF8weDdiZGVkNVtfMHg1NzQ0KCcweDlhJyldKXt2YXIgXzB4NDI0OTk1PV8weDdiZGVkNVtfMHg3YmRlZDVbXzB4NTc0NCgnMHg5YScpXS0weDFdW18weDU3NDQoJzB4MzEnKV0oKTtfMHgyMDBjNjdbJ19lcnJvclNvdXJjZVRleHQnXT1fMHgyMDBjNjdbXzB4NTc0NCgnMHg0NzInKV0oXzB4NDI0OTk1fHwnJyxfMHgxZjM4N2IpO319fSwnZ2V0U291cmNlTWFwRnJvbUNvZGUnOmZ1bmN0aW9uKF8weDIwMGM2Nyl7XzB4NGEzMWZiW18weDU3NDQoJzB4ODVkJyldPTB4MDtmb3IodmFyIF8weDQ2YzkxNjtudWxsIT09KF8weDQ2YzkxNj1fMHg0YTMxZmJbXzB4NTc0NCgnMHg1MWUnKV0oXzB4MjAwYzY3KSk7KXt2YXIgXzB4MjI2ZTYxPV8weDQ2YzkxNj9fMHg0NmM5MTZbMHgxXXx8XzB4NDZjOTE2WzB4Ml18fCcnOm51bGw7aWYoXzB4MjI2ZTYxJiZfMHhiYzBiYltfMHg1NzQ0KCcweDM5ZCcpXShfMHgyMjZlNjEpKXtpZignV2lYU1AnPT09J1F2Y0N1Jyl7cmV0dXJuIF9bXzB4NTc0NCgnMHhiMScpXSh0aGlzW18weDU3NDQoJzB4Mjc4JyldKF8weDIwMGM2NyxfMHg0NmM5MTYpKVsnc29ydEJ5J10oZnVuY3Rpb24oXzB4NTdmODdkKXtyZXR1cm4hXzB4NTdmODdkW18weDU3NDQoJzB4MzUzJyldKCk7fSlbXzB4NTc0NCgnMHg0NjUnKV0oZnVuY3Rpb24oXzB4OGQ3MmU2KXtyZXR1cm4tXzB4OGQ3MmU2Wyd0cyddKCk7fSlbXzB4NTc0NCgnMHhlMycpXSgpO31lbHNle3ZhciBfMHg0ODllZjM9XzB4MjI2ZTYxW18weDU3NDQoJzB4NDQ1JyldKF8weDIyNmU2MVtfMHg1NzQ0KCcweDcwJyldKCcsJykrMHgxKTtyZXR1cm4gQnVmZmVyW18weDU3NDQoJzB4Njc5JyldKF8weDQ4OWVmMyxfMHg1NzQ0KCcweDc2JykpW18weDU3NDQoJzB4NTcnKV0oKTt9fX19LCdwYXRoTWF0Y2hlc1BhdHRlcm4nOmZ1bmN0aW9uKF8weDQ2YzkxNixfMHgyMjZlNjEsXzB4NDg5ZWYzKXtpZihfMHg0NmM5MTYpe2lmKCdYWmTigItveSchPT1fMHg1NzQ0KCcweDg1ZScpKXt2YXIgXzB4N2I0N2NkO3JldHVybiBfMHhkZGZjMSh0aGlzLGZ1bmN0aW9uKF8weDIzY2FkMyl7c3dpdGNoKF8weDIzY2FkM1tfMHg1NzQ0KCcweGVkJyldKXtjYXNlIDB4MDpyZXR1cm4gXzB4MjNjYWQzW18weDU3NDQoJzB4ZjAnKV1bJ3B1c2gnXShbMHgwLDB4MiwsMHgzXSksXzB4MjAwYzY3W18weDU3NDQoJzB4Njg4JyldP1sweDQsXzB4MjAwYzY3W18weDU3NDQoJzB4Njg4JyldWydldmFsdWF0ZSddKHsnZXhwcmVzc2lvbic6JygnK18weDQ2YzkxNlsndG9TdHJpbmcnXSgpK18weDU3NDQoJzB4MTNjJyl9KV06WzB4Ml07Y2FzZSAweDE6cmV0dXJuIF8weDIzY2FkM1tfMHg1NzQ0KCcweDEwZScpXSgpLF8weDIyNmU2MSgpLFsweDMsMHgzXTtjYXNlIDB4MjpyZXR1cm4gXzB4N2I0N2NkPV8weDIzY2FkM1snc2VudCddKCksXzB4NWM5ZGE5KF8weDU3NDQoJzB4MTNkJykrXzB4N2I0N2NkWydtZXNzYWdlJ10pLFsweDMsMHgzXTtjYXNlIDB4MzpyZXR1cm5bMHgyXTt9fSk7fWVsc2V7aWYoXzB4NTc0NCgnMHgzMzEnKT09dHlwZW9mIF8weDIyNmU2MSl7aWYoIV8weDQ4OWVmM3x8IV8weDQ4OWVmM1tfMHg1NzQ0KCcweDQwMScpXSlyZXR1cm4gXzB4MWYzODdiKF8weDQ2YzkxNixfMHgyMjZlNjEsXzB4NDg5ZWYzKTt2YXIgXzB4ZGRmYzE9XzB4MjAwYzY3KF8weDU3NDQoJzB4NDAxJykpW18weDU3NDQoJzB4NDAyJyldO3JldHVybiBfMHhkZGZjMShfMHg0NmM5MTYsXzB4MjI2ZTYxLHsnZG90JzohMHgwfSk7fXJldHVybih0aGlzW18weDU3NDQoJzB4NDU2JyldKF8weDQ4OWVmMyYmXzB4NDg5ZWYzW18weDU3NDQoJzB4NDU3JyldPycnOicuLycpK3RoaXNbXzB4NTc0NCgnMHg0NTYnKV0oXzB4NDZjOTE2KSlbJ21hdGNoJ10oXzB4MjI2ZTYxKTt9fX0sJ2VzY2FwZVBhdGhGb3JSZWdleCc6ZnVuY3Rpb24oXzB4MjAwYzY3KXtpZihfMHg1NzQ0KCcweDg1ZicpPT09XzB4NTc0NCgnMHg4NWYnKSl7cmV0dXJuJ1x4NWMnPT09XzB4ZGRmYzFbXzB4NTc0NCgnMHg1ZCcpXSYmKF8weDIwMGM2Nz1fMHgyMDBjNjdbXzB4NTc0NCgnMHg5ZCcpXSgvXFwvZywnLycpKSx0aGlzWydyZXBsYWNlUGF0aFNlcEZvclJlZ2V4J10odGhpc1snX2VzY2FwZVN0ckZvclJlZ2V4J10oXzB4MjAwYzY3KSk7fWVsc2V7KF8weDIwMGM2N3x8XzB4MjAwYzY3W18weDU3NDQoJzB4MTk4JyldfHxfMHgyMDBjNjdbXzB4NTc0NCgnMHgxOTgnKV1bXzB4NTc0NCgnMHgxOTknKV0pJiZfMHgyMDBjNjdbXzB4NTc0NCgnMHgxOTgnKV1bXzB4NTc0NCgnMHgxOTknKV1bXzB4NTc0NCgnMHgxOWEnKV09PT1fMHg0NmM5MTZbJ2NvcHlLZXknXSYmXzB4NDZjOTE2W18weDU3NDQoJzB4NGQnKV1bXzB4NTc0NCgnMHgxOWInKV0oeydkYXRhJzpfMHgyMDBjNjdbXzB4NTc0NCgnMHgxOTgnKV1bXzB4NTc0NCgnMHgxOTknKV19KTt9fSwnX2VzY2FwZVN0ckZvclJlZ2V4JzpmdW5jdGlvbihfMHgyMDBjNjcpe2lmKF8weDU3NDQoJzB4ODYwJykhPT1fMHg1NzQ0KCcweDg2MCcpKXtyZXR1cm4gXzB4NDZjOTE2WydfbG9hZEZpbGUnXShfMHgyMDBjNjcpW18weDU3NDQoJzB4ODknKV0oZnVuY3Rpb24oXzB4MjhhMjgzKXtyZXR1cm4gXzB4NDZjOTE2W18weDU3NDQoJzB4N2InKV0oJ2xvYWRlZCcsXzB4MjhhMjgzKTt9KTt9ZWxzZXtyZXR1cm4gXzB4MjAwYzY3W18weDU3NDQoJzB4OWQnKV0oL1tbXF17fSgpKis/LlxcXiR8XS9nLF8weDU3NDQoJzB4ODYxJykpO319LCdyZXBsYWNlUGF0aFNlcEZvclJlZ2V4JzpmdW5jdGlvbihfMHgyMDBjNjcpe3JldHVybidceDVjJz09PV8weGRkZmMxW18weDU3NDQoJzB4NWQnKV0/XzB4MjAwYzY3W18weDU3NDQoJzB4OWQnKV0oLyhcL3woLik/XFwoPyFbW1xde30oKSorPy5eJHxcXF0pKS9nLGZ1bmN0aW9uKF8weDIwMGM2NyxfMHg0NmM5MTYsXzB4MjI2ZTYxKXtyZXR1cm4gXzB4MjI2ZTYxJiYnXHg1YychPT1fMHgyMjZlNjE/XzB4MjI2ZTYxKydceDVjXHg1Yyc6J1x4NWNceDVjJzt9KTpfMHgyMDBjNjc7fSwnZGlzcGxheVRlc3ROYW1lJzpmdW5jdGlvbihfMHgyMDBjNjcpe3JldHVybiBfMHgyMDBjNjdbXzB4NTc0NCgnMHg5ZCcpXSgvXHI/XG58XHIvZywnXHgyMCcpW18weDU3NDQoJzB4OWQnKV0oL1xzXHMrL2csJ1x4MjAnKTt9LCd1cGRhdGVGaWxlTWFwJzpmdW5jdGlvbihfMHgyMDBjNjcsXzB4NDZjOTE2KXtfMHgyMDBjNjc9XzB4MjAwYzY3fHx7fTt2YXIgXzB4MjI2ZTYxPV9bXzB4NTc0NCgnMHg3OScpXSh7fSxfMHgyMDBjNjcpO3JldHVybiBfW18weDU3NDQoJzB4ZDQnKV0oXzB4NDZjOTE2LGZ1bmN0aW9uKF8weDIwMGM2Nyl7aWYoXzB4NTc0NCgnMHg4NjInKSE9PV8weDU3NDQoJzB4ODYzJykpe3ZhciBfMHg0NmM5MTY9bmV3IF8weDU0ZWE0NyhfMHgyMDBjNjcpLF8weDQ4OWVmMz17fSxfMHhkZGZjMT1fW18weDU3NDQoJzB4MTFkJyldKF8weDIyNmU2MSksXzB4NDJmMDc3PV9bJ2V4dGVuZCddKHt9LF8weDIyNmU2MSk7XzB4NDZjOTE2W18weDU3NDQoJzB4NGNjJyldKGZ1bmN0aW9uKF8weDIwMGM2Nyl7aWYoXzB4NTc0NCgnMHg4NjQnKSE9PV8weDU3NDQoJzB4ODY1Jykpe2lmKF8weDIwMGM2N1tfMHg1NzQ0KCcweDRjZCcpXSYmXzB4MjAwYzY3W18weDU3NDQoJzB4NGNlJyldKXtpZignY0hpemsnIT09XzB4NTc0NCgnMHg4NjYnKSl7dmFyIF8weDQ2YzkxNj1fMHg0ODllZjNbXzB4MjAwYzY3W18weDU3NDQoJzB4NGNkJyldXSxfMHgxZjM4N2I9XzB4NDJmMDc3W18weDIwMGM2N1tfMHg1NzQ0KCcweDRjZScpXV07aWYoIV8weDQ2YzkxNnx8XzB4MjAwYzY3WyduYW1lJ10pe3ZhciBfMHg1NGVhNDc9XzB4MWYzODdifHxfMHg0NmM5MTY7XzB4ZGRmYzE/XzB4NDg5ZWYzW18weDIwMGM2N1tfMHg1NzQ0KCcweDRjZCcpXV09XzB4MjAwYzY3W18weDU3NDQoJzB4NGNlJyldOl8weDU0ZWE0NyYmKF8weDQ4OWVmM1tfMHgyMDBjNjdbXzB4NTc0NCgnMHg0Y2QnKV1dPV8weDU0ZWE0NyksXzB4NTc0NCgnMHhkNycpPT09XzB4MjAwYzY3W18weDU3NDQoJzB4MTQzJyldJiZkZWxldGUgXzB4NDg5ZWYzW18weDIwMGM2N1tfMHg1NzQ0KCcweDRjZCcpXV07fV8weDFmMzg3YiYmZGVsZXRlIF8weDIyNmU2MVtfMHgyMDBjNjdbXzB4NTc0NCgnMHg0Y2UnKV1dO31lbHNle18weDQ4OWVmM1tfMHg1NzQ0KCcweDljJyldPV8weDQ4OWVmM1tfMHg1NzQ0KCcweDljJyldfHxfMHg0NmM5MTZbXzB4NTc0NCgnMHhjMCcpXTt2YXIgXzB4NGEzZWI3PV8weDQ2YzkxNltfMHg1NzQ0KCcweDk1JyldLF8weDEwY2Q1OT1fMHg0NmM5MTZbJ3RzJ10rKF8weDRhM2ViNz9fMHg0NmM5MTZbXzB4NTc0NCgnMHg5NicpXT9fMHg0ODllZjNbXzB4NTc0NCgnMHg2YScpXStfMHg0NmM5MTZbJ29yaWdpbmFsSWQnXTonJzpfMHg0ODllZjNbJ193YWxsYWJ5RmlsZUlkUHJlZml4J10rXzB4NDZjOTE2WydpZCddKTtzd2l0Y2goXzB4NDZjOTE2W18weDU3NDQoJzB4NCcpXSl7Y2FzZSdqcyc6Y2FzZSBfMHg1NzQ0KCcweDg2NycpOmNhc2UnanN4JzpjYXNlIF8weDU3NDQoJzB4YmQnKTpjYXNlIF8weDU3NDQoJzB4YmUnKTpyZXR1cm4gXzB4MjAwYzY3K18weDU3NDQoJzB4YmYnKSsoXzB4NDZjOTE2W18weDU3NDQoJzB4YzAnKV0/XzB4NTc0NCgnMHhjOCcpOicnKSsnXHgyMHNyYz1ceDIyJytfMHg0NmM5MTZbXzB4NTc0NCgnMHhiMicpXSsnPycrXzB4MTBjZDU5K18weDU3NDQoJzB4YzInKTtjYXNlIF8weDU3NDQoJzB4ODY4Jyk6Y2FzZSBfMHg1NzQ0KCcweDg2OScpOnJldHVybiBfMHgyMDBjNjcrJzxsaW5rXHgyMGhyZWY9XHgyMicrXzB4NDZjOTE2W18weDU3NDQoJzB4YjInKV0rJz8nK18weDQ2YzkxNlsndHMnXSsnXHgyMlx4MjByZWw9XHgyMmltcG9ydFx4MjI+JztjYXNlIF8weDU3NDQoJzB4YzQnKTpyZXR1cm4gXzB4MjAwYzY3K18weDU3NDQoJzB4YzUnKStfMHg0NmM5MTZbXzB4NTc0NCgnMHhiMicpXSsnPycrXzB4MTBjZDU5K18weDU3NDQoJzB4ODZhJyk7ZGVmYXVsdDpyZXR1cm4gXzB4MjAwYzY3O319fX1lbHNle3JldHVybiB0aGlzW18weDU3NDQoJzB4NDYyJyldO319KSxfMHgyMjZlNjE9X1snZXh0ZW5kJ10oe30sXzB4MjI2ZTYxLF8weDQ4OWVmMyk7fWVsc2V7cmV0dXJuIHRoaXNbXzB4NTc0NCgnMHgzNzknKV07fX0pLF8weDIyNmU2MTt9LCdmb3JtYXRJbnN0cnVtZW50YXRpb25FcnJvcic6ZnVuY3Rpb24oXzB4MjAwYzY3LF8weDQ2YzkxNixfMHgyMjZlNjEpe2lmKF8weDU3NDQoJzB4ODZiJykhPT1fMHg1NzQ0KCcweDg2YycpKXt2YXIgXzB4NDg5ZWYzPShfMHgyMDBjNjcmJihfMHgyMDBjNjdbJ3N0YWNrJ118fF8weDIwMGM2N1tfMHg1NzQ0KCcweDMxJyldKSkrJycsXzB4ZGRmYzE9dGhpc1tfMHg1NzQ0KCcweDFjYycpXShfMHg0ODllZjMpLF8weDQyZjA3Nz1fMHhkZGZjMVsweDBdLF8weDFmMzg3Yj1fMHg0MmYwNzdbXzB4NTc0NCgnMHgyZTQnKV0oL15TeW50YXhFcnJvci4qXCgoXGQrKTooXGQrKVwpJC8pO3JldHVybiBfMHgxZjM4N2ImJihfMHhkZGZjMT1bdGhpc1tfMHg1NzQ0KCcweDg2ZCcpXShfMHg0NmM5MTYscGFyc2VJbnQoXzB4MWYzODdiWzB4MV0sMHhhKSxwYXJzZUludChfMHgxZjM4N2JbMHgyXSwweGEpKzB4MSxfMHg0MmYwNzcpXSksRXJyb3IoJ0ZhaWxlZFx4MjB0b1x4MjBpbnN0cnVtZW50XHgyMCcrXzB4MjI2ZTYxKydceDBhJytfMHhkZGZjMVtfMHg1NzQ0KCcweDU0JyldKCdceDBhJykpO31lbHNle3ZhciBfMHg1YTRmMjQ9XzB4MWYzODdiW18weDU3NDQoJzB4NDEnKV0oKSxfMHg0ZjhmMzk9XzB4MjAwYzY3Wydpc0NvdmVyZWQnXSgpO18weDQ2YzkxNnx8XzB4NWE0ZjI0PT09XzB4NGY4ZjM5fHwoXzB4NDg5ZWYzW18weDU3NDQoJzB4M2RmJyldKz1fMHg0ZjhmMzk/MHgxOi0weDEpLF8weDFmMzg3YltfMHg1NzQ0KCcweDY3NScpXShfMHgyMDBjNjcsXzB4NDZjOTE2LF8weDIyNmU2MSksXzB4ZGRmYzFbXzB4NDJmMDc3XT1fMHgxZjM4N2IsXzB4NDg5ZWYzWydfYWZmZWN0ZWRSYW5nZXMnXVtfMHg0MmYwNzddPV8weDFmMzg3Yjt9fSwnY29tYmluZVNvdXJjZU1hcHMnOmZ1bmN0aW9uKF8weDIwMGM2NyxfMHg0NmM5MTYpe2lmKCdhdkRxWSc9PT0nUERwZUwnKXtfMHgyMDBjNjdbJ19zZW5kZXInXVsnc2V0QnJvYWRjYXN0J10oITB4MCksXzB4MjAwYzY3W18weDU3NDQoJzB4M2ZhJyldW18weDU3NDQoJzB4MTkzJyldKF8weDVjOWRhOVsndHRsJ10pO31lbHNle2lmKCFfMHgyMDBjNjcpcmV0dXJuIF8weDQ2YzkxNjtpZighXzB4NDZjOTE2KXJldHVybiBfMHgyMDBjNjc7dmFyIF8weDIyNmU2MT1uZXcgXzB4NTRlYTQ3KF8weDQ2YzkxNiksXzB4NDg5ZWYzPW5ldyBfMHg1NGVhNDcoXzB4MjAwYzY3KSxfMHhkZGZjMT1uZXcgXzB4NGQzMGE4KCk7XzB4MjI2ZTYxW18weDU3NDQoJzB4NGNjJyldKGZ1bmN0aW9uKF8weDIwMGM2Nyl7aWYobnVsbCE9XzB4MjAwYzY3W18weDU3NDQoJzB4NGNlJyldKXt2YXIgXzB4NDZjOTE2PV8weDQ4OWVmM1snb3JpZ2luYWxQb3NpdGlvbkZvciddKHsnbGluZSc6XzB4MjAwYzY3W18weDU3NDQoJzB4NGNlJyldLCdjb2x1bW4nOl8weDIwMGM2N1tfMHg1NzQ0KCcweDg2ZScpXX0pO251bGwhPV8weDQ2YzkxNltfMHg1NzQ0KCcweDYxYycpXSYmXzB4ZGRmYzFbXzB4NTc0NCgnMHg4NmYnKV0oeydvcmlnaW5hbCc6eydsaW5lJzpfMHg0NmM5MTZbXzB4NTc0NCgnMHg4ZicpXSwnY29sdW1uJzpfMHg0NmM5MTZbJ2NvbHVtbiddfSwnZ2VuZXJhdGVkJzp7J2xpbmUnOl8weDIwMGM2N1tfMHg1NzQ0KCcweDRjZCcpXSwnY29sdW1uJzpfMHgyMDBjNjdbXzB4NTc0NCgnMHg4NzAnKV19LCdzb3VyY2UnOl8weDQ2YzkxNltfMHg1NzQ0KCcweDYxYycpXSwnbmFtZSc6XzB4NDZjOTE2W18weDU3NDQoJzB4MTQzJyldfHxfMHgyMDBjNjdbXzB4NTc0NCgnMHgxNDMnKV19KTt9fSk7dmFyIF8weDQyZjA3Nz1bXzB4NDg5ZWYzLF8weDIyNmU2MV07cmV0dXJuIF8weDQyZjA3N1tfMHg1NzQ0KCcweDY0OScpXShmdW5jdGlvbihfMHgyMDBjNjcpe18weDIwMGM2N1tfMHg1NzQ0KCcweDc2ZicpXVtfMHg1NzQ0KCcweDY0OScpXShmdW5jdGlvbihfMHg0NmM5MTYpe18weGRkZmMxW18weDU3NDQoJzB4NjFkJyldWydhZGQnXShfMHg0NmM5MTYpO3ZhciBfMHgyMjZlNjE9XzB4MjAwYzY3W18weDU3NDQoJzB4ODcxJyldKF8weDQ2YzkxNik7bnVsbCE9XzB4MjI2ZTYxJiZfMHhkZGZjMVsnc2V0U291cmNlQ29udGVudCddKF8weDQ2YzkxNixfMHgyMjZlNjEpO30pO30pLF8weGRkZmMxWydfc291cmNlUm9vdCddPV8weDIwMGM2N1tfMHg1NzQ0KCcweDg3MicpXSxfMHhkZGZjMVsnX2ZpbGUnXT1fMHgyMDBjNjdbXzB4NTc0NCgnMHgyYTQnKV0sSlNPTltfMHg1NzQ0KCcweDJkJyldKF8weGRkZmMxWyd0b1N0cmluZyddKCkpO319LCdtYXBUZXh0UG9zaXRpb24nOmZ1bmN0aW9uKF8weDIwMGM2NyxfMHg0NmM5MTYpe3ZhciBfMHgyMjZlNjE7aWYoXzB4MjAwYzY3KWlmKF8weDQ2YzkxNil7aWYoXzB4NTc0NCgnMHg4NzMnKT09PSdycm1WUicpe3ZhciBfMHg0ODllZjM9bmV3IF8weDU0ZWE0NyhfMHg0NmM5MTYpO18weDIwMGM2N1tfMHg1NzQ0KCcweDYxYycpXT1fMHg0NmM5MTZbXzB4NTc0NCgnMHg3NmYnKV0mJl8weDQ2YzkxNlsnc291cmNlcyddWzB4MF18fCcuJyxfMHgyMDBjNjdbXzB4NTc0NCgnMHg3NzAnKV09MHgyLF8weDIyNmU2MT1fMHg0ODllZjNbXzB4NTc0NCgnMHg3NzEnKV0oXzB4MjAwYzY3KTt9ZWxzZXt2YXIgXzB4NTA4OWE5PV8weDIwMGM2NyhfMHg1NzQ0KCcweDE2MCcpKVtfMHg1NzQ0KCcweDg3NCcpXVtfMHg1NzQ0KCcweDEwZCcpXSxfMHgxY2I1NGI9XzB4NTA4OWE5W18weDU3NDQoJzB4ODc1JyldO18weDUwODlhOVtfMHg1NzQ0KCcweDg3NScpXT1mdW5jdGlvbihfMHgzMzg4NDgpe3JldHVybiBfMHgzMzg4NDg9PT1fMHg0NmM5MTY/XzB4MjI2ZTYxKF8weDFjYjU0YltfMHg1NzQ0KCcweDEwNycpXSh0aGlzKSk6XzB4MWNiNTRiW18weDU3NDQoJzB4ZWMnKV0odGhpcyxfMHgzMzg4NDgpO307fX1lbHNlIF8weDIyNmU2MT1fMHgyMDBjNjc7cmV0dXJuIF8weDIyNmU2MTt9LCd0ZXh0SW5kZXhQb3NpdGlvbic6ZnVuY3Rpb24oXzB4MjAwYzY3LF8weDQ2YzkxNil7aWYoJ0NkWFpYJyE9PV8weDU3NDQoJzB4ODc2Jykpe3RoaXNbXzB4NTc0NCgnMHg1YzEnKV0oKTt9ZWxzZXt2YXIgXzB4MjI2ZTYxPXRoaXNbXzB4NTc0NCgnMHgxY2MnKV0oXzB4MjAwYzY3LF8weDQ2YzkxNik7cmV0dXJueydsaW5lJzpfMHgyMjZlNjFbXzB4NTc0NCgnMHg5YScpXSwnY29sdW1uJzpfMHgyMjZlNjFbXzB4MjI2ZTYxW18weDU3NDQoJzB4OWEnKV0tMHgxXVtfMHg1NzQ0KCcweDlhJyldfTt9fSwndGV4dExpbmVzJzpmdW5jdGlvbihfMHgyMDBjNjcsXzB4NDZjOTE2LF8weDIyNmU2MSl7aWYoXzB4NTc0NCgnMHg4NzcnKSE9PSduaWR0YScpe3JldHVybiBmdW5jdGlvbihfMHgxN2NiYzcpe3JldHVybiBfMHg0ODllZjMoW18weDIwMGM2NyxfMHgxN2NiYzddKTt9O31lbHNle3JldHVybiBfMHgyMDBjNjc9X1snaXNVbmRlZmluZWQnXShfMHg0NmM5MTYpP18weDIwMGM2NzpfMHgyMDBjNjdbXzB4NTc0NCgnMHgxMTcnKV0oMHgwLF8weDQ2YzkxNiksXzB4MjAwYzY3WydzcGxpdCddKF9bXzB4NTc0NCgnMHg3MycpXShfMHgyMjZlNjEpPy9cclxufFxyfFxuLzpfMHgyMjZlNjEpO319LCd2ZXJpZnlMb2NhbE9yaWdpbic6ZnVuY3Rpb24oXzB4NDZjOTE2LF8weDIyNmU2MSl7aWYoIV8weDQ2YzkxNilyZXR1cm4hMHgwO3ZhciBfMHg0ODllZjM9ITB4MTt0cnl7dmFyIF8weGRkZmMxPV8weDIwMGM2NyhfMHg1NzQ0KCcweDZmJykpWydwYXJzZSddKF8weDQ2YzkxNilbJ2hvc3RuYW1lJ107XzB4NDg5ZWYzPSdsb2NhbGhvc3QnPT09XzB4ZGRmYzF8fF8weDU3NDQoJzB4MWZmJyk9PT1fMHhkZGZjMXx8XzB4NTc0NCgnMHgxMzgnKT09PV8weGRkZmMxfHxfMHg1NzQ0KCcweDFkZCcpPT09XzB4ZGRmYzE7fWNhdGNoKF8weDU3ZGRhMil7fXJldHVybiBfMHg0ODllZjN8fF8weDIyNmU2MXx8Y29uc29sZVtfMHg1NzQ0KCcweDdjJyldKCd3YWxsYWJ5LmpzXHgyMHJlZnVzZWRceDIwdG9ceDIwYWNjZXB0XHgyMGNvbm5lY3Rpb25ceDIwZnJvbVx4MjAnK18weDQ2YzkxNiksXzB4NDg5ZWYzO30sJ3BhdGNoTW9kdWxlJzpmdW5jdGlvbihfMHg0NmM5MTYsXzB4MjI2ZTYxKXt2YXIgXzB4NDg5ZWYzPV8weDIwMGM2Nyhf4oCLMHg1NzQ0KCcweDE2MCcpKVtfMHg1NzQ0KCcweDg3NCcpXVtfMHg1NzQ0KCcweDEwZCcpXSxfMHhkZGZjMT1fMHg0ODllZjNbXzB4NTc0NCgnMHg4NzUnKV07XzB4NDg5ZWYzW18weDU3NDQoJzB4ODc1JyldPWZ1bmN0aW9uKF8weDIwMGM2Nyl7cmV0dXJuIF8weDIwMGM2Nz09PV8weDQ2YzkxNj9fMHgyMjZlNjEoXzB4ZGRmYzFbXzB4NTc0NCgnMHgxMDcnKV0odGhpcykpOl8weGRkZmMxW18weDU3NDQoJzB4ZWMnKV0odGhpcyxfMHgyMDBjNjcpO307fSwncGF0Y2hNb2R1bGVzQ29kZSc6ZnVuY3Rpb24oXzB4MjAwYzY3LF8weDQ2YzkxNil7dmFyIF8weDIyNmU2MT1fMHg0MmYwNzdbXzB4NTc0NCgnMHg1MycpXTtfMHg0MmYwNzdbJ3JlYWRGaWxlU3luYyddPWZ1bmN0aW9uKF8weDQ4OWVmMyl7dmFyIF8weGRkZmMxPV8weDQ4OWVmM1tfMHg1NzQ0KCcweDlkJyldKC9cXC9nLCcvJyksXzB4NDJmMDc3PV8weDIyNmU2MVtfMHg1NzQ0KCcweGU0JyldKHRoaXMsYXJndW1lbnRzKTtyZXR1cm4gXzB4MjAwYzY3W18weDU3NDQoJzB4NWUwJyldKGZ1bmN0aW9uKF8weDIwMGM2Nyl7aWYoXzB4NTc0NCgnMHg4NzgnKSE9PV8weDU3NDQoJzB4ODc5Jykpe2lmKF8weDIwMGM2N1tfMHg1NzQ0KCcweDM1YScpXVsnc29tZSddKGZ1bmN0aW9uKF8weDIwMGM2Nyl7cmV0dXJufl8weGRkZmMxW18weDU3NDQoJzB4NzAnKV0oXzB4MjAwYzY3KTt9KSlyZXR1cm4gXzB4NDJmMDc3PV8weDQyZjA3N1tfMHg1NzQ0KCcweDU3JyldKCksXzB4MjAwYzY3W18weDU3NDQoJzB4ODdhJyldW18weDU3NDQoJzB4NjQ5JyldKGZ1bmN0aW9uKF8weDIyNmU2MSl7dmFyIF8weDQ4OWVmMz1fMHg0MmYwNzc7XzB4NDJmMDc3PV8weDQyZjA3N1tfMHg1NzQ0KCcweDlkJyldKF8weDIyNmU2MVtfMHg1NzQ0KCcweDY3OScpXSxfMHgyMjZlNjFbJ3RvJ10pLF8weDQyZjA3Nz09PV8weDQ4OWVmMyYmY29uc29sZVtfMHg1NzQ0KCcweDJmJyldKF8weDQ2YzkxNisnXHgyMCgnK18weDIwMGM2N1tfMHg1NzQ0KCcweDM1YScpXVtfMHg1NzQ0KCcweDU0JyldKCcsXHgyMCcpKycpJyk7fSksITB4MDt9ZWxzZXtfMHg0ZDMwYTg9ITB4MCxfMHgxZjM4N2ImJmNsZWFyVGltZW91dChfMHgxZjM4N2IpLGRlbGV0ZSBfMHg0MmYwNzdbXzB4NTc0NCgnMHg2NjYnKV1bXzB4MjAwYzY3XSxfMHhkZGZjMVtfMHg1NzQ0KCcweDdlNicpXSYmXzB4ZGRmYzFbXzB4NTc0NCgnMHg3ZTYnKV0oXzB4MjI2ZTYxKSxkZWxldGUgXzB4NDJmMDc3W18weDU3NDQoJzB4NjY4JyldW18weDQ2YzkxNl0sXzB4NDg5ZWYzKCk7fX0pLF8weDQyZjA3Nzt9O30sJ3JlcXVpcmVNb2R1bGVGcm9tJzpmdW5jdGlvbihfMHg0NmM5MTYsXzB4MjI2ZTYxKXt0cnl7aWYoXzB4NTc0NCgnMHg4N2InKT09PV8weDU3NDQoJzB4ODdjJykpe18weDIwMGM2N1tfMHg1NzQ0KCcweDQxNCcpXShfMHg0ODllZjMpLF8weDQ2YzkxNlsnX3JhbmdlcyddW18weDIwMGM2N1tfMHg1NzQ0KCcweDFkMScpXSgpXT1fMHgyMDBjNjc7fWVsc2V7cmV0dXJuIF8weDIwMGM2NyhfMHhkZGZjMVtfMHg1NzQ0KCcweDU0JyldKF8weDQ2YzkxNixfMHg1NzQ0KCcweDIwMicpLF8weDIyNmU2MSkpO319Y2F0Y2goXzB4NGJmM2Y4KXtpZignRU9mWGcnPT09XzB4NTc0NCgnMHg4N2QnKSl7dmFyIF8weDQyZjA3Nz1fMHgyMDBjNjcoXzB4NTc0NCgnMHgxNjAnKSksXzB4MWYzODdiPW5ldyBfMHg0MmYwNzcoJy4nLG51bGwpO3JldHVybiBfMHgxZjM4N2JbXzB4NTc0NCgnMHg3MmMnKV09XzB4ZGRmYzFbXzB4NTc0NCgnMHg1NCcpXShfMHg0NmM5MTYsXzB4NTc0NCgnMHgyMDMnKSksXzB4MWYzODdiW18weDU3NDQoJzB4MjA0JyldPV8weDQyZjA3N1tfMHg1NzQ0KCcweDIwNScpXShfMHg0NmM5MTYpLF8weDQyZjA3N1snX2xvYWQnXShfMHgyMjZlNjEsXzB4MWYzODdiLCEweDEpO31lbHNle3Byb2Nlc3NbJ2V4aXQnXSgpO319fSwncmVzb2x2ZU1vZHVsZVBhdGhGcm9tJzpmdW5jdGlvbihfMHg0NmM5MTYsXzB4MjI2ZTYxKXt2YXIgXzB4NDg5ZWYzPV8weDIwMGM2NyhfMHg1NzQ0KCcweDE2MCcpKSxfMHg0MmYwNzc9bmV3IF8weDQ4OWVmMygnLicsbnVsbCk7cmV0dXJuIF8weDQyZjA3N1tfMHg1NzQ0KCcweDcyYycpXT1fMHhkZGZjMVtfMHg1NzQ0KCcweDU0JyldKF8weDQ2YzkxNixfMHg1NzQ0KCcweDIwMycpKSxfMHg0MmYwNzdbXzB4NTc0NCgnMHgyMDQnKV09XzB4NDg5ZWYzW18weDU3NDQoJzB4MjA1JyldKF8weDQ2YzkxNiksXzB4NDg5ZWYzW18weDU3NDQoJzB4ODFiJyldKF8weDIyNmU2MSxfMHg0MmYwNzcsITB4MSk7fSwndHJ5UmVxdWlyZU1vZHVsZVdpdGhQYXRoRnJvbSc6ZnVuY3Rpb24oXzB4NDZjOTE2LF8weDIyNmU2MSxfMHg0ODllZjMpe3RyeXt2YXIgXzB4NDJmMDc3PV8weDIwMGM2NyhfMHg1NzQ0KCcweDE2MCcpKSxfMHgxZjM4N2I9bmV3IF8weDQyZjA3NygnLicsbnVsbCk7XzB4MWYzODdiW18weDU3NDQoJzB4NzJjJyldPV8weGRkZmMxWydqb2luJ10oXzB4NDZjOTE2LF8weDU3NDQoJzB4MjAzJykpLF8weDFmMzg3YltfMHg1NzQ0KCcweDIwNCcpXT1fMHg0MmYwNzdbXzB4NTc0NCgnMHgyMDUnKV0oXzB4NDZjOTE2KTt2YXIgXzB4NTRlYTQ3PV8weDQyZjA3N1snX3Jlc29sdmVGaWxlbmFtZSddKF8weDIyNmU2MSxfMHgxZjM4N2IsITB4MSksXzB4NGQzMGE4PXZvaWQgMHgwO3JldHVybiBfMHg0ZDMwYTg9cHJvY2Vzc1snZW52J11bXzB4NTc0NCgnMHg4MTEnKV0/XzB4MjAwYzY3KF8weDU0ZWE0Nyk6XzB4NDJmMDc3WydfbG9hZCddKF8weDIyNmU2MSxfMHgxZjM4N2IsITB4MSkseydtb2R1bGUnOl8weDRkMzBhOCYmXzB4NGQzMGE4W18weDU3NDQoJzB4ODdlJyldfHxfMHg0ZDMwYTgsJ3BhdGgnOl8weDU0ZWE0N307fWNhdGNoKF8weDFmMmVmNSl7aWYoXzB4NDg5ZWYzKXRocm93IF8weDFmMmVmNTt9fSwnbm9kZU1vZHVsZXNMb29rdXAnOmZ1bmN0aW9uKF8weDQ2YzkxNixfMHgyMjZlNjEpe2lmKF8weDU3NDQoJzB4ODdmJyk9PT0nU2NvSmYnKXt2YXIgXzB4NDg5ZWYzPV8weDIwMGM2NyhfMHg1NzQ0KCcweDE2MCcpKVtfMHg1NzQ0KCcweDg3NCcpXSxfMHhkZGZjMT1fMHg0ODllZjNbXzB4NTc0NCgnMHgxMGQnKV0sXzB4NDJmMDc3PV8weDQ4OWVmM1tfMHg1NzQ0KCcweDIwNScpXSxfMHgxZjM4N2I9XzB4ZGRmYzFbXzB4NTc0NCgnMHg4NzUnKV07XzB4NDg5ZWYzW18weDU3NDQoJzB4MjA1JyldPWZ1bmN0aW9uKF8weDIwMGM2Nyl7dmFyIF8weDIyNmU2MT1fMHg0MmYwNzdbJ2NhbGwnXSh0aGlzLF8weDIwMGM2Nyk7cmV0dXJuIF8weDQ2YzkxNihfMHgyMjZlNjEsXzB4MjAwYzY3LF8weDQyZjA3Nyx0aGlzKSxfMHgyMjZlNjE7fSxfMHgyMjZlNjEmJihfMHhkZGZjMVsncmVxdWlyZSddPWZ1bmN0aW9uKF8weDIwMGM2Nyl7aWYoJ1ZQZW5vJyE9PSdWUGVubycpe2lmKDB4MD09PV8weDIwMGM2N1tfMHg1NzQ0KCcweDcwJyldKF8weDU3NDQoJzB4M2Q5JykpKXt2YXIgXzB4MmUwMGY3PV8weDIwMGM2N1tfMHg1NzQ0KCcweGQzJyldKF8weDU3NDQoJzB4M2Q5JykpWzB4MV1bXzB4NTc0NCgnMHgyZTQnKV0oL1wvKC4qKVwvKC4qKT8vKTtyZXR1cm4gbmV3IFJlZ0V4cChfMHgyZTAwZjdbMHgxXSxfMHgyZTAwZjdbMHgyXXx8JycpO31yZXR1cm4gXzB4MjAwYzY3O31lbHNle3JldHVybiBfMHgxZjM4N2JbXzB4NTc0NCgnMHhlYycpXSh0aGlzLF8weDIyNmU2MShfMHgyMDBjNjcpKTt9fSk7fWVsc2V7dmFyIF8weDVlYmYxYj1fMHgyMDBjNjcoXzB4NTc0NCgnMHgxMDEnKSksXzB4NTI1NThkPV8weDVlYmYxYlsnc3luYyddO3JldHVybiBfMHg1ZWJmMWJbXzB4NTc0NCgnMHg4ODAnKV09ZnVuY3Rpb24oXzB4MTdjMDFhLF8weDVlYmYxYil7cmV0dXJufl8weDE3YzAxYVtfMHg1NzQ0KCcweDcwJyldKF8weDU3NDQoJzB4NzhlJykpJiZfMHg1ZWJmMWImJihhcmd1bWVudHNbMHgxXVtfMHg1NzQ0KCcweDIwNCcpXT0oXzB4NWViZjFiWydwYXRocyddfHxbXSlbJ2NvbmNhdCddKF8weDQ2YzkxNikpLF8weDUyNTU4ZFtfMHg1NzQ0KCcweGU0JyldKHRoaXMsYXJndW1lbnRzKTt9LF8weDVlYmYxYjt9fSwnbm9kZU1vZHVsZVBhdGhzJzpmdW5jdGlvbihfMHg0NmM5MTYpe3ZhciBfMHgyMjZlNjE9XzB4MjAwYzY3KF8weDU3NDQoJzB4MTYwJykpO3JldHVybiBfMHgyMjZlNjFbJ19ub2RlTW9kdWxlUGF0aHMnXShfMHg0NmM5MTYpO30sJ3BhdGNoQmFiZWxSZXNvbHZlJzpmdW5jdGlvbihfMHgyMDBjNjcpe2lmKF8weDU3NDQoJzB4ODgxJyk9PT1fMHg1NzQ0KCcweDg4MicpKXtjb25zb2xlW18weDU3NDQoJzB4N2MnKV0oJ0ZhaWxlZFx4MjB0b1x4MjBzZXRceDIwdXBceDIwcHJvamVjdFx4MjBmaWxlXHgyMHN5c3RlbTpceDIwJytfMHgyMjZlNjFbXzB4NTc0NCgnMHgzMDknKV0oXzB4MjAwYzY3KSksXzB4MjI2ZTYxWydfZW1pdFRlc3RSdW5FcnJvciddKF8weDIyNmU2MVtfMHg1NzQ0KCcweDMwYScpXShfMHgyMDBjNjcpKTt9ZWxzZXt2YXIgXzB4NDZjOTE2PXRoaXNbXzB4NTc0NCgnMHg4ODMnKV0oXzB4MjAwYzY3KTt0aGlzWydwYXRjaE1vZHVsZSddKF8weDU3NDQoJzB4MTAxJyksZnVuY3Rpb24oXzB4MjAwYzY3KXt2YXIgXzB4MjI2ZTYxPV8weDIwMGM2NyhfMHg1NzQ0KCcweDEwMScpKSxfMHg0ODllZjM9XzB4MjI2ZTYxWydzeW5jJ107cmV0dXJuIF8weDIyNmU2MVtfMHg1NzQ0KCcweDg4MCcpXT1mdW5jdGlvbihfMHgyMDBjNjcsXzB4MjI2ZTYxKXtyZXR1cm5+XzB4MjAwYzY3W18weDU3NDQoJzB4NzAnKV0oJ2JhYmVsJykmJl8weDIyNmU2MSYmKGFyZ3VtZW50c1sweDFdW18weDU3NDQoJzB4MjA0JyldPShfMHgyMjZlNjFbXzB4NTc0NCgnMHgyMDQnKV18fFtdKVtfMHg1NzQ0KCcweDkzJyldKF8weDQ2YzkxNikpLF8weDQ4OWVmM1tfMHg1NzQ0KCcweGU0JyldKHRoaXMsYXJndW1lbnRzKTt9LF8weDIyNmU2MTt9KTt9fSwnaGFzQW5zaSc6ZnVuY3Rpb24oXzB4MjAwYzY3KXtyZXR1cm4gXzB4MjAwYzY3JiZfMHg1NzQ0KCcweDMzMScpPT10eXBlb2YgXzB4MjAwYzY3JiZfMHgyMDBjNjdbJ21hdGNoJ10oXzB4ZTk5OTdhKTt9LCdyZW1vdmVBbnNpJzpmdW5jdGlvbihfMHgyMDBjNjcpe2lmKCdpaGZiZichPT0naWhmYmYnKXt2YXIgXzB4MzMzYTc1PXRoaXNbXzB4NTc0NCgnMHgzOGQnKV0oeydwYXRjaGVzJzpfMHg0NmM5MTZbXzB4NTc0NCgnMHgyNDQnKV0sJ2RtcCc6dGhpc1snX2RpZmZNYXRjaFBhdGNoJ119KTt0cnl7XzB4MzMzYTc1W18weDU3NDQoJzB4OWEnKV0mJihfMHgxZjM4N2I9ITB4MSxfW18weDU3NDQoJzB4ZDQnKV0oXzB4MzMzYTc1LGZ1bmN0aW9uKF8weDQ0MTAzYyl7dmFyIF8weDU5YzMzYT1fW18weDU3NDQoJzB4MWNjJyldKF8weDIyNmU2MSxfMHg0NDEwM2NbXzB4NTc0NCgnMHgzOGUnKV0sL1xuLylbXzB4NTc0NCgnMHg5YScpXSxfMHgxZmVkMTg9XzB4NTljMzNhK18weDQ0MTAzY1tfMHg1NzQ0KCcweDM4ZicpXTsweDA9PT1fMHg0NDEwM2NbXzB4NTc0NCgnMHgzOTAnKV0/XzB4NDJmMDc3W18weDU3NDQoJzB4NjQwJyldKDB4MCwweDAseydzdGFydCc6XzB4MWZlZDE4LCdlbmQnOl8weDFmZWQxOH0pOl8weDQ0MTAzY1tfMHg1NzQ0KCcweDM5MCcpXT4weDA/XzB4NDJmMDc3WydzaGlmdERvY3VtZW50TGluZXMnXShfMHgxZmVkMTgsXzB4NDQxMDNjW18weDU3NDQoJzB4MzkwJyldLHsnc3RhcnQnOl8weDFmZWQxOCwnZW5kJzpfMHgxZmVkMTgrMHgxfSk6XzB4NDJmMDc3W18weDU3NDQoJzB4MzkxJyldKF8weDFmZWQxOCxfMHg0NDEwM2NbXzB4NTc0NCgnMHgzOTAnKV0seydzdGFydCc6XzB4MWZlZDE4LCdlbmQnOl8weDFmZWQxOC1fMHg0NDEwM2NbXzB4NTc0NCgnMHgzOTAnKV19KTt9KSk7fWNhdGNoKF8weDQ1MDQ0NSl7XzB4MWYzODdiPSEweDAsXzB4NTExZTRiKCdFcnJvclx4MjBmaXhpbmdceDIwbGluZVx4MjBkaWZmZXJlbmNlcycpLF8weDUxMWU0YihfMHg0NTA0NDUpO319ZWxzZXtyZXR1cm4gXzB4MjAwYzY3JiZfMHg1NzQ0KCcweDMzMScpPT10eXBlb2YgXzB4MjAwYzY3P18weDIwMGM2N1tfMHg1NzQ0KCcweDlkJyldKF8weGU5OTk3YSwnJyk6XzB4MjAwYzY3O319LCdjb3B5VG9DbGlwYm9hcmQnOmZ1bmN0aW9uKF8weDQ2YzkxNil7aWYoXzB4NTc0NCgnMHg4ODQnKSE9PV8weDU3NDQoJzB4ODg1Jykpe3ZhciBfMHgyMjZlNjE9ZnVuY3Rpb24oXzB4MjAwYzY3KXtyZXR1cm4gXzB4MjAwYzY3JiZjb25zb2xlWyd3YXJuJ10oJ0ZhaWxlZFx4MjB0b1x4MjBjb3B5XHgyMHRvXHgyMGNsaXBib2FyZC5ceDIwJysoXzB4MjAwYzY3JiZfMHgyMDBjNjdbJ21lc3NhZ2UnXSkpO307dHJ5e18weDIwMGM2NygnY29weS1wYXN0ZScpW18weDU3NDQoJzB4NmMzJyldKF8weDQ2YzkxNixfMHgyMjZlNjEpO31jYXRjaChfMHgxYWU3ODQpe2lmKF8weDU3NDQoJzB4ODg2Jyk9PT1fMHg1NzQ0KCcweDg4NycpKXtkZWxldGUgdGhpc1tfMHg1NzQ0KCcweDUzOScpXVtfMHgyMDBjNjddLGRlbGV0ZSB0aGlzWydfZmlsZXNXaXRoTWVzc2FnZXMnXVtfMHgyMDBjNjddO31lbHNle18weDIyNmU2MShfMHgxYWU3ODQpO319fWVsc2V7dmFyIF8weDMxNmE5Nj1fMHgyMDBjNjcoXzB4NTc0NCgnMHgxNjAnKSksXzB4YmFhMDY0PW5ldyBfMHgzMTZhOTYoJy4nLG51bGwpO18weGJhYTA2NFtfMHg1NzQ0KCcweDcyYycpXT1fMHhkZGZjMVtfMHg1NzQ0KCcweDU0JyldKF8weDQ2YzkxNixfMHg1NzQ0KCcweDIwMycpKSxfMHhiYWEwNjRbXzB4NTc0NCgnMHgyMDQnKV09XzB4MzE2YTk2W18weDU3NDQoJzB4MjA1JyldKF8weDQ2YzkxNik7dmFyIF8weDI4ODg4Zj1fMHgzMTZhOTZbXzB4NTc0NCgnMHg4MWInKV0oXzB4MjI2ZTYxLF8weGJhYTA2NCwhMHgxKSxfMHhmZjU2ZDA9dm9pZCAweDA7cmV0dXJuIF8weGZmNTZkMD1wcm9jZXNzW18weDU3NDQoJzB4NjcnKV1bJ1dBTExBQllfSU5URUdSQVRJT05fVEVTVF9SVU4nXT9fMHgyMDBjNjcoXzB4Mjg4ODhmKTpfMHgzMTZhOTZbXzB4NTc0NCgnMHgyMDYnKV0oXzB4MjI2ZTYxLF8weGJhYTA2NCwhMHgxKSx7J21vZHVsZSc6XzB4ZmY1NmQwJiZfMHhmZjU2ZDBbXzB4NTc0NCgnMHg4N2UnKV18fF8weGZmNTZkMCwncGF0aCc6XzB4Mjg4ODhmfTt9fSwndGVzdEZpbGVTZWxlY3Rpb24nOmZ1bmN0aW9uKF8weDIwMGM2NyxfMHg0NmM5MTYsXzB4MjI2ZTYxLF8weDQ4OWVmMyl7aWYoXzB4NTc0NCgnMHg4ODgnKT09PV8weDU3NDQoJzB4ODg5Jykpe18weDQ4OWVmMyhfMHgyMDBjNjcsXzB4NDZjOTE2KTt9ZWxzZXt2YXIgXzB4ZGRmYzEsXzB4NDJmMDc3PSEweDEsXzB4MWYzODdiPSEweDEsXzB4NTRlYTQ3PXt9O2ZvcihfMHgzNTkwNGVbXzB4NTc0NCgnMHg4NWQnKV09MHgwO251bGwhPT0oXzB4ZGRmYzE9XzB4MzU5MDRlW18weDU3NDQoJzB4NTFlJyldKF8weDIwMGM2NykpOyl7Zm9yKHZhciBfMHg0ZDMwYTg9XzB4ZGRmYzFbXzB4NTc0NCgnMHg1MWYnKV07XzB4NGQzMGE4PF8weGRkZmMxWzB4MF1bJ2xlbmd0aCddO18weDRkMzBhOCsrKV8weDU0ZWE0N1tfMHg0ZDMwYThdPTB4MTtfMHg0MmYwNzc9XzB4NDJmMDc3fHxfMHg0NmM5MTZbXzB4NTc0NCgnMHgzOWQnKV0oXzB4ZGRmYzFbMHgwXSksXzB4MWYzODdiPV8weDFmMzg3Ynx8XzB4MjI2ZTYxWyd0ZXN0J10oXzB4ZGRmYzFbMHgwXSk7fWlmKCFfMHg0MmYwNzcmJl8weDQ4OWVmMylmb3IoXzB4MjhkMjc1W18weDU3NDQoJzB4ODVkJyldPTB4MDtudWxsIT09KF8weGRkZmMxPV8weDI4ZDI3NVtfMHg1NzQ0KCcweDUxZScpXShfMHgyMDBjNjcpKTspaWYoIV8weDU0ZWE0N1tfMHhkZGZjMVtfMHg1NzQ0KCcweDUxZicpXV0pe18weDQyZjA3Nz0hMHgwO2JyZWFrO31yZXR1cm57J2luY2x1ZGVkVGVzdEZpbGUnOl8weDQyZjA3NywnZXhjbHVkZWRUZXN0RmlsZSc6XzB4MWYzODdifTt9fSwnaW5pdFNlcnZlck9wdGlvbnMnOmZ1bmN0aW9uKF8weDQ2YzkxNil7dmFyIF8weDIyNmU2MT1fMHgyMDBjNjcoJ2dyYWNlZnVsLWZzJyksXzB4NDg5ZWYzPV8weDIwMGM2NyhfMHg1NzQ0KCcweDg4YScpKTtfMHg0NmM5MTZbXzB4NTc0NCgnMHg4OGInKV09ZnVuY3TigItpb24oXzB4NDZjOTE2LF8weDIyNmU2MSl7aWYoXzB4NTc0NCgnMHg4OGMnKSE9PSdqWHJSSycpe3ZhciBfMHgyYWYxZmY9XzB4MjAwYzY3W18weDQyZjA3N107XzB4MmFmMWZmJiZfW18weDU3NDQoJzB4M2YnKV0oXzB4MmFmMWZmKSYmXzB4NDg5ZWYzKF8weDJhZjFmZixfMHg0NmM5MTYpO31lbHNle3JldHVybiBfMHgyMDBjNjcoXzB4NTc0NCgnMHg1NicpPT09XzB4NDZjOTE2P18weDU3NDQoJzB4ODhkJyk9PT1fMHgyMjZlNjE/Jy4vZWxlY3Ryb25SdW5uZXIuanMnOidjaHJvbWUnPT09XzB4MjI2ZTYxP18weDU3NDQoJzB4ODhlJyk6XzB4NTc0NCgnMHg4OGYnKTpfMHg1NzQ0KCcweDgxOCcpKTt9fSxfMHg0NmM5MTZbXzB4NTc0NCgnMHg4OTAnKV09XzB4MjAwYzY3KF8weDU3NDQoJzB4ODkxJykpLF8weDQ2YzkxNltfMHg1NzQ0KCcweDg5MicpXT1mdW5jdGlvbihfMHgyMDBjNjcpe2lmKF8weDU3NDQoJzB4ODkzJykhPT0neldmZ08nKXtfMHg0NmM5MTYoeydwYWdlSWQnOl8weDIwMGM2N30pO31lbHNle3JldHVybiBRWyduZmNhbGwnXShfMHgyMjZlNjFbXzB4NTc0NCgnMHgxZWEnKV0sXzB4MjAwYzY3KVtfMHg1NzQ0KCcweDg5JyldKGZ1bmN0aW9uKF8weDIwMGM2Nyl7cmV0dXJuIFFbXzB4NTc0NCgnMHg3NCcpXShKU09OW18weDU3NDQoJzB4MmQnKV0oXzB4MjAwYzY3KSk7fSk7fX0sXzB4NDZjOTE2W18weDU3NDQoJzB4NGVmJyldPWZ1bmN0aW9uKF8weDIwMGM2Nyl7cmV0dXJuIFFbJ25mY2FsbCddKF8weDIyNmU2MVsnc3RhdCddLF8weDIwMGM2Nyk7fSxfMHg0NmM5MTZbXzB4NTc0NCgnMHg0ZWQnKV09ZnVuY3Rpb24oXzB4MjAwYzY3KXtyZXR1cm4gUVtfMHg1NzQ0KCcweDFlOScpXShfMHgyMjZlNjFbXzB4NTc0NCgnMHgxZWEnKV0sXzB4MjAwYzY3KTt9LF8weDQ2YzkxNltfMHg1NzQ0KCcweDg5NCcpXT1mdW5jdGlvbihfMHgyMDBjNjcsXzB4NDZjOTE2KXtyZXR1cm4gUVsnbmZjYWxsJ10oXzB4MjI2ZTYxWyd3cml0ZUZpbGUnXSxfMHgyMDBjNjcsXzB4NDZjOTE2KTt9LF8weDQ2YzkxNltfMHg1NzQ0KCcweDg5NScpXT1mdW5jdGlvbihfMHgyMDBjNjcpe2lmKCdVdVJzaychPT1fMHg1NzQ0KCcweDg5NicpKXtfMHg0ZDMwYTh8fChfMHg1NGVhNDcoJ1slc11ceDIwU2FuZGJveFx4MjBpc1x4MjByZXNwb25zaXZlLFx4MjBjbG9zaW5nXHgyMGl0JyxfMHgyMDBjNjcpLF8weDQyZjA3N1tfMHg1NzQ0KCcweDgxZCcpXShfMHgyMjZlNjFbJ2Nsb3NlJ10sXzB4MjAwYzY3KSxfMHg1YzlkYTkoKSk7fWVsc2V7cmV0dXJuIFFbXzB4NTc0NCgnMHgxZTknKV0oXzB4MjI2ZTYxW18weDU3NDQoJzB4MTg5JyldLF8weDIwMGM2Nyk7fX0sXzB4NDZjOTE2Wyd1bmxpbmtGaWxlU3luYyddPWZ1bmN0aW9uKF8weDIwMGM2Nyl7aWYoXzB4NTc0NCgnMHg4OTcnKSE9PV8weDU3NDQoJzB4ODk4Jykpe3JldHVybiBfMHgyMjZlNjFbXzB4NTc0NCgnMHg4OTknKV0oXzB4MjAwYzY3KTt9ZWxzZXtkZWxldGUgdGhpc1tfMHg1NzQ0KCcweDM5YScpXTt9fSxfMHg0NmM5MTZbXzB4NTc0NCgnMHgyOGQnKV09ZnVuY3Rpb24oXzB4MjAwYzY3LF8weDQ2YzkxNil7cmV0dXJuIF8weDIyNmU2MVtfMHg1NzQ0KCcweDI4ZCcpXShfMHgyMDBjNjcsXzB4NDZjOTE2KTt9LF8weDQ2YzkxNltfMHg1NzQ0KCcweDUzJyldPWZ1bmN0aW9uKF8weDIwMGM2Nyl7aWYoJ3J0TW9HJz09PV8weDU3NDQoJzB4ODlhJykpe3JldHVybihfMHgyMDBjNjc9T2JqZWN0W18weDU3NDQoJzB4ZjInKV18fHsnX19wcm90b19fJzpbXX1pbnN0YW5jZW9mIEFycmF5JiZmdW5jdGlvbihfMHgzYzYxNzYsXzB4ZjY0MGRjKXtfMHgzYzYxNzZbXzB4NTc0NCgnMHhmMycpXT1fMHhmNjQwZGM7fXx8ZnVuY3Rpb24oXzB4Mjk3Y2Q2LF8weDFhN2ZkNil7Zm9yKHZhciBfMHgyYmUyZTEgaW4gXzB4MWE3ZmQ2KV8weDFhN2ZkNltfMHg1NzQ0KCcweDNiJyldKF8weDJiZTJlMSkmJihfMHgyOTdjZDZbXzB4MmJlMmUxXT1fMHgxYTdmZDZbXzB4MmJlMmUxXSk7fSkoXzB4NDZjOTE2LF8weDIyNmU2MSk7fWVsc2V7cmV0dXJuIF8weDIyNmU2MVtfMHg1NzQ0KCcweDUzJyldKF8weDIwMGM2NylbJ3RvU3RyaW5nJ10oXzB4NTc0NCgnMHgzMWUnKSk7fX0sXzB4NDZjOTE2W18weDU3NDQoJzB4ODliJyldPWZ1bmN0aW9uKF8weDIwMGM2Nyl7cmV0dXJuIF8weDIyNmU2MVtfMHg1NzQ0KCcweDg5YycpXShfMHgyMDBjNjcpO30sXzB4NDZjOTE2W18weDU3NDQoJzB4NGVlJyldPWZ1bmN0aW9uKF8weDIwMGM2Nyl7aWYoXzB4NTc0NCgnMHg4OWQnKSE9PV8weDU3NDQoJzB4ODllJykpe3JldHVybiBfMHgyMjZlNjFbJ3JlYWxwYXRoU3luYyddKF8weDIwMGM2Nyk7fWVsc2V7cmV0dXJuIFFbJ25mY2FsbCddKF8weDIyNmU2MVtfMHg1NzQ0KCcweDFlYScpXSxfMHgyMDBjNjcpW18weDU3NDQoJzB4ODknKV0oZnVuY3Rpb24oXzB4NGU1ZDc3KXtyZXR1cm4gUVsnd2hlbiddKEpTT05bJ3BhcnNlJ10oXzB4NGU1ZDc3KSk7fSk7fX0sXzB4NDZjOTE2W18weDU3NDQoJzB4ODlmJyldPWZ1bmN0aW9uKF8weDIwMGM2Nyl7cmV0dXJuIFFbXzB4NTc0NCgnMHgxZTknKV0oXzB4NDg5ZWYzWydyZW1vdmUnXSxfMHgyMDBjNjcpO30sXzB4NDZjOTE2W18weDU3NDQoJzB4OGEwJyldPWZ1bmN0aW9uKF8weDIwMGM2Nyl7cmV0dXJuIF8weDQ4OWVmM1sncmVtb3ZlU3luYyddKF8weDIwMGM2Nyk7fSxfMHg0NmM5MTZbJ2RpckVuc3VyZVByb21pc2UnXT1mdW5jdGlvbihfMHgyMDBjNjcpe2lmKF8weDU3NDQoJzB4OGExJykhPT1fMHg1NzQ0KCcweDhhMicpKXtyZXR1cm4gUVsnbmZjYWxsJ10oXzB4NDg5ZWYzW18weDU3NDQoJzB4OGEzJyldLF8weDIwMGM2Nyk7fWVsc2V7Zm9yKDsodm9pZCAweDA9PT1fMHg0NmM5MTZ8fF8weDQ2YzkxNi0tPjB4MCkmJiEoXzB4NDg5ZWYzPV8weDQyZjA3N1tfMHg1NzQ0KCcweGQ5JyldKCkpWydkb25lJ107KV8weDFmMzg3YlsncHVzaCddKF8weDQ4OWVmM1tfMHg1NzQ0KCcweGUzJyldKTt9fSxfMHg0NmM5MTZbXzB4NTc0NCgnMHg4YTQnKV09ZnVuY3Rpb24oXzB4MjAwYzY3KXtyZXR1cm4gXzB4NDg5ZWYzWydlbnN1cmVEaXJTeW5jJ10oXzB4MjAwYzY3KTt9LF8weDQ2YzkxNltfMHg1NzQ0KCcweDhhNScpXT10aGlzW18weDU3NDQoJzB4OGE1JyldO30sJ2NvZGVGcmFtZSc6ZnVuY3Rpb24oXzB4MjAwYzY3LF8weDQ2YzkxNixfMHgyMjZlNjEsXzB4ZGRmYzEpe2Z1bmN0aW9uIF8weDQyZjA3NyhfMHgyMDBjNjcsXzB4NDZjOTE2LF8weDIyNmU2MSl7aWYoXzB4NTc0NCgnMHg4YTYnKT09PSdBSFVSaScpe3ZhciBfMHhkZGZjMT1fMHg0ODllZjMoeydjb2x1bW4nOjB4MCwnbGluZSc6LTB4MX0sXzB4MjAwYzY3W18weDU3NDQoJzB4M2QnKV0pLF8weDQyZjA3Nz1fMHg0ODllZjMoe30sXzB4ZGRmYzEsXzB4MjAwYzY3W18weDU3NDQoJzB4M2UnKV0pLF8weDFmMzg3Yj1fMHgyMjZlNjF8fHt9LF8weDU0ZWE0Nz1fMHgxZjM4N2JbXzB4NTc0NCgnMHg4YTcnKV0sXzB4NGQzMGE4PXZvaWQgMHgwPT09XzB4NTRlYTQ3PzB4MjpfMHg1NGVhNDcsXzB4NWM5ZGE5PV8weDFmMzg3YltfMHg1NzQ0KCcweDNlYycpXSxfMHgyZWI5YjM9dm9pZCAweDA9PT1fMHg1YzlkYTk/MHgzOl8weDVjOWRhOSxfMHhlOTk5N2E9XzB4ZGRmYzFbXzB4NTc0NCgnMHg4ZicpXSxfMHgzNTkwNGU9XzB4ZGRmYzFbXzB4NTc0NCgnMHgzNTYnKV0sXzB4MjhkMjc1PV8weDQyZjA3N1tfMHg1NzQ0KCcweDhmJyldLF8weDJlYjRlMD1fMHg0MmYwNzdbXzB4NTc0NCgnMHgzNTYnKV0sXzB4NGEzMWZiPU1hdGhbJ21heCddKF8weGU5OTk3YS0oXzB4NGQzMGE4KzB4MSksMHgwKSxfMHgxMTE1NjA9TWF0aFsnbWluJ10oXzB4NDZjOTE2W18weDU3NDQoJzB4OWEnKV0sXzB4MjhkMjc1K18weDJlYjliMyk7XzB4ZTk5OTdhPT09LTB4MSYmKF8weDRhMzFmYj0weDApLF8weDI4ZDI3NT09PS0weDEmJihfMHgxMTE1NjA9XzB4NDZjOTE2WydsZW5ndGgnXSk7dmFyIF8weGJjMGJiPV8weDI4ZDI3NS1fMHhlOTk5N2EsXzB4NTExZTRiPXt9O2lmKF8weGJjMGJiKWZvcih2YXIgXzB4MTMwNzJmPTB4MDtfMHgxMzA3MmY8PV8weGJjMGJiO18weDEzMDcyZisrKXtpZihfMHg1NzQ0KCcweDhhOCcpIT09XzB4NTc0NCgnMHg4YTgnKSl7cmV0dXJuIHRoaXNbJ19yYW5nZUNvbnNvbGVMb2cnXVtfMHgyMDBjNjdbXzB4NTc0NCgnMHgxZDEnKV0oKV07fWVsc2V7dmFyIF8weDNlNzNlZD1fMHgxMzA3MmYrXzB4ZTk5OTdhO2lmKF8weDM1OTA0ZSlpZigweDA9PT1fMHgxMzA3MmYpe2lmKCd6bk1WYychPT1fMHg1NzQ0KCcweDhhOScpKXt2YXIgXzB4ZTA1M2JmPXRoaXM7dGhpc1tfMHg1NzQ0KCcweDI4MicpXVsnbG9hZEZpbGVzJ10oXzB4MjAwYzY3W18weDU3NDQoJzB4MzVhJyldKVtfMHg1NzQ0KCcweDdhJyldKGZ1bmN0aW9uKF8weDQzODM3Nyl7cmV0dXJuIF8weGUwNTNiZlsnX2VtaXRUZXN0UnVuRXJyb3InXShfMHhlMDUzYmZbXzB4NTc0NCgnMHgzMDknKV0oXzB4NDM4Mzc3KSk7fSk7fWVsc2V7dmFyIF8weDQ0NTVkMT1fMHg0NmM5MTZbXzB4M2U3M2VkLTB4MV1bXzB4NTc0NCgnMHg5YScpXTtfMHg1MTFlNGJbXzB4M2U3M2VkXT1bXzB4MzU5MDRlLF8weDQ0NTVkMS1fMHgzNTkwNGVdO319ZWxzZSBpZihfMHgxMzA3MmY9PT1fMHhiYzBiYilfMHg1MTFlNGJbXzB4M2U3M2VkXT1bMHgwLF8weDJlYjRlMF07ZWxzZXt2YXIgXzB4NDQ1NWQxPV8weDQ2YzkxNltfMHgzZTczZWQtXzB4MTMwNzJmXVsnbGVuZ3RoJ107XzB4NTExZTRiW18weDNlNzNlZF09WzB4MCxfMHg0NDU1ZDFdO31lbHNlIF8weDUxMWU0YltfMHgzZTczZWRdPSEweDA7fX1lbHNlIF8weDM1OTA0ZT09PV8weDJlYjRlMD9fMHgzNTkwNGU/XzB4NTExZTRiW18weGU5OTk3YV09W18weDM1OTA0ZSwweDBdOl8weDUxMWU0YltfMHhlOTk5N2FdPSEweDA6XzB4NTExZTRiW18weGU5OTk3YV09W18weDM1OTA0ZSxfMHgyZWI0ZTAtXzB4MzU5MDRlXTtyZXR1cm57J3N0YXJ0JzpfMHg0YTMxZmIsJ2VuZCc6XzB4MTExNTYwLCdtYXJrZXJMaW5lcyc6XzB4NTExZTRifTt9ZWxzZXtyZXR1cm4gXzB4MjAwYzY3JiZfMHg1NzQ0KCcweDMzMScpPT10eXBlb2YgXzB4MjAwYzY3P18weDIwMGM2N1sncmVwbGFjZSddKF8w4oCLeGU5OTk3YSwnJyk6XzB4MjAwYzY3O319dmFyIF8weDFmMzg3Yj10aGlzWyd0ZXh0TGluZXMnXShfMHgyMDBjNjcpLF8weDU0ZWE0Nz17J3N0YXJ0Jzp7J2NvbHVtbic6XzB4MjI2ZTYxLCdsaW5lJzpfMHg0NmM5MTZ9fSxfMHg0ZDMwYTg9XzB4NDJmMDc3KF8weDU0ZWE0NyxfMHgxZjM4N2IpLF8weDVjOWRhOT1fMHg0ZDMwYThbXzB4NTc0NCgnMHgzZCcpXSxfMHgyZWI5YjM9XzB4NGQzMGE4W18weDU3NDQoJzB4M2UnKV0sXzB4ZTk5OTdhPV8weDRkMzBhOFtfMHg1NzQ0KCcweDhhYScpXSxfMHgzNTkwNGU9XzB4NTRlYTQ3WydzdGFydCddJiZfMHg1NzQ0KCcweDMzMycpPT10eXBlb2YgXzB4NTRlYTQ3W18weDU3NDQoJzB4M2QnKV1bXzB4NTc0NCgnMHgzNTYnKV0sXzB4MjhkMjc1PVN0cmluZyhfMHgyZWI5YjMpW18weDU3NDQoJzB4OWEnKV0sXzB4MmViNGUwPV8weDFmMzg3YltfMHg1NzQ0KCcweDQ0NScpXShfMHg1YzlkYTksXzB4MmViOWIzKVtfMHg1NzQ0KCcweDE2NicpXShmdW5jdGlvbihfMHgyMDBjNjcsXzB4NDZjOTE2KXt2YXIgXzB4MjI2ZTYxPV8weDVjOWRhOSsweDErXzB4NDZjOTE2LF8weDQ4OWVmMz0oJ1x4MjAnK18weDIyNmU2MSlbXzB4NTc0NCgnMHg0NDUnKV0oLV8weDI4ZDI3NSksXzB4NDJmMDc3PSdceDIwJytfMHg0ODllZjMrXzB4NTc0NCgnMHg0NmInKSxfMHgxZjM4N2I9XzB4ZTk5OTdhW18weDIyNmU2MV0sXzB4NTRlYTQ3PSFfMHhlOTk5N2FbXzB4MjI2ZTYxKzB4MV07aWYoXzB4MWYzODdiKXt2YXIgXzB4NGQzMGE4PScnO2lmKEFycmF5W18weDU3NDQoJzB4M2ZjJyldKF8weDFmMzg3Yikpe2lmKF8weDU3NDQoJzB4OGFiJyk9PT0nSWV2UnEnKXt2YXIgXzB4MmViOWIzPV8weDIwMGM2N1tfMHg1NzQ0KCcweDQ0NScpXSgweDAsTWF0aFsnbWF4J10oXzB4MWYzODdiWzB4MF0tMHgxLDB4MCkpW18weDU3NDQoJzB4OWQnKV0oL1teXHRdL2csJ1x4MjAnKSxfMHgzNTkwNGU9XzB4MWYzODdiWzB4MV18fDB4MTtfMHg0ZDMwYTg9WydceDBhXHgyMCcsXzB4NDJmMDc3W18weDU3NDQoJzB4OWQnKV0oL1xkL2csJ1x4MjAnKSxfMHgyZWI5YjMsJ14nWydyZXBlYXQnXShfMHgzNTkwNGUpXVtfMHg1NzQ0KCcweDU0JyldKCcnKSxfMHg1NGVhNDcmJl8weGRkZmMxJiYoXzB4NGQzMGE4Kz0nXHgyMCcrXzB4ZGRmYzEpO31lbHNle3JldHVybiBfMHgyMDBjNjdbXzB4NTc0NCgnMHg5YScpXTt9fXJldHVyblsnPuKAiycsXzB4NDJmMDc3LF8weDIwMGM2NyxfMHg0ZDMwYThdW18weDU3NDQoJzB4NTQnKV0oJycpO31yZXR1cm4nXHgyMCcrXzB4NDJmMDc3K18weDIwMGM2Nzt9KVtfMHg1NzQ0KCcweDU0JyldKCdceDBhJyk7cmV0dXJuIF8weDM1OTA0ZXx8KF8weDJlYjRlMD0nJysnXHgyMCdbJ3JlcGVhdCddKF8weDI4ZDI3NSsweDEpK18weGRkZmMxKydceDBhJytfMHgyZWI0ZTApLF8weDJlYjRlMDt9LCdsb2FkSmVzdCc6ZnVuY3Rpb24oXzB4MjAwYzY3KXt2YXIgXzB4NDZjOTE2LF8weDIyNmU2MSxfMHg0ODllZjM9dGhpc1tfMHg1NzQ0KCcweDhhYycpXShfMHgyMDBjNjcsXzB4NTc0NCgnMHg4YWQnKSk7XzB4NDZjOTE2PV8weDQ4OWVmMz90aGlzW18weDU3NDQoJzB4OGFjJyldKF8weDQ4OWVmM1tfMHg1NzQ0KCcweGUnKV0sJ2plc3QnKTp0aGlzW18weDU3NDQoJzB4OGFjJyldKF8weDIwMGM2NyxfMHg1NzQ0KCcweDUyMScpKTt2YXIgXzB4NDJmMDc3LF8weDFmMzg3Yj1fMHg0NmM5MTY/XzB4NDZjOTE2W18weDU3NDQoJzB4ZScpXTpfMHgyMDBjNjcsXzB4NTRlYTQ3PXRoaXNbXzB4NTc0NCgnMHg4YWMnKV0oXzB4MWYzODdiLF8weDU3NDQoJzB4OGFlJykpO2lmKCFfMHg1NGVhNDcpdGhyb3cgbmV3IEVycm9yKCdNb2R1bGVceDIwamVzdC1jbGlceDIwaXNceDIwbm90XHgyMGZvdW5kXHgyMGluXHgyMFx4MjcnK18weDIwMGM2NysnXHgyNy4nKTtpZighXzB4NTRlYTQ3W18weDU3NDQoJzB4MTYwJyldW18weDU3NDQoJzB4OGFmJyldKXRocm93IG5ld+KAiyBFcnJvcihfMHg1NzQ0KCcweDhiMCcpKTt2YXIgXzB4NGQzMGE4PV8weDU3NDQoJzB4OGIxJyksXzB4NWM5ZGE5PTB4MDt0cnl7aWYoXzB4NTc0NCgnMHg4YjInKT09PSdtcFlrdCcpe3JldHVybiBfMHgyMDBjNjcmJl8weDIwMGM2N1tfMHg1NzQ0KCcweDlkJyldKC9cclxuXHMqL2csJ1x4MjAnKVtfMHg1NzQ0KCcweDlkJyldKC9cblxzKi9nLCdceDIwJyk7fWVsc2V7XzB4NGQzMGE4PV8weDU0ZWE0N1snbW9kdWxlJ11bXzB4NTc0NCgnMHg4YWYnKV0oKSxfMHg1YzlkYTk9cGFyc2VJbnQoXzB4NGQzMGE4WydzcGxpdCddKCcuJylbMHgwXSk7fX1jYXRjaChfMHgyMzk4ZTUpe3Rocm93IG5ldyBFcnJvcihfMHg1NzQ0KCcweDhiMycpK18weDIzOThlNVtfMHg1NzQ0KCcweDMxJyldKycuJyk7fWlmKF8weDVjOWRhOTwweDE4KXRocm93IG5ldyBFcnJvcignT25seVx4MjBKZXN0XHgyMHYyNC54XHgyMG9yXHgyMGhpZ2hlclx4MjBpc1x4MjBzdXBwb3J0ZWQsXHgyMGJ1dFx4MjBmb3VuZFx4MjB2JytfMHg0ZDMwYTgrXzB4NTc0NCgnMHg4YjQnKStfMHg1NGVhNDdbXzB4NTc0NCgnMHhlJyldKydceDI3LicpO2lmKF8weDIyNmU2MT10aGlzW18weDU3NDQoJzB4OGFjJyldKF8weDU0ZWE0N1tfMHg1NzQ0KCcweGUnKV0sXzB4NTc0NCgnMHg4YjUnKSkpdHJ5e18weDQyZjA3Nz1fMHgyMjZlNjFbXzB4NTc0NCgnMHgxNjAnKV1bXzB4NTc0NCgnMHgxNjEnKV0oXzB4NDg5ZWYzP3snY29uZmlnJzpKU09OW18weDU3NDQoJzB4OCcpXShfMHg0ODllZjNbJ21vZHVsZSddKGZ1bmN0aW9uKF8weDIwMGM2Nyl7cmV0dXJuIF8weGRkZmMxW18weDU3NDQoJzB4MTAxJyldKF8weDQ4OWVmM1sncGF0aCddLF8weDU3NDQoJzB4OGI2JyksXzB4MjAwYzY3KTt9KSl9Ont9LFtfMHgyMDBjNjddKSxfMHg0MmYwNzdbXzB4NTc0NCgnMHgxNjInKV09T2JqZWN0W18weDU3NDQoJzB4MTYzJyldKHt9LF8weDQyZjA3N1tfMHg1NzQ0KCcweDE2MicpXSksXzB4NDJmMDc3W18weDU3NDQoJzB4MTY0JyldPShfMHg0MmYwNzdbXzB4NTc0NCgnMHgxNjQnKV18fFtdKVtfMHg1NzQ0KCcweDE2NScpXShmdW5jdGlvbihfMHgyMDBjNjcpe3JldHVybidqZXN0LXJ1bm5lcic9PT1fMHgyMDBjNjdbXzB4NTc0NCgnMHgxMDMnKV07fSlbXzB4NTc0NCgnMHgxNjYnKV0oZnVuY3Rpb24oXzB4MjAwYzY3KXtyZXR1cm4gT2JqZWN0W18weDU3NDQoJzB4MTYzJyldKHt9LF8weDIwMGM2Nyk7fSk7fWNhdGNoKF8weDE4ZjY0MCl7dGhyb3cgbmV3IEVycm9yKF8weDU3NDQoJzB4NjE1JykrXzB4MjAwYzY3K18weDU3NDQoJzB4NjE2JykrKF8weDE4ZjY0MFtfMHg1NzQ0KCcweDMxJyldP18weDE4ZjY0MFtfMHg1NzQ0KCcweDMxJyldOl8weDU3NDQoJzB4OGI3JykpKTt9aWYoIV8weDQyZjA3Nyl0aHJvdyBuZXcgRXJyb3IoJ0ZhaWxlZFx4MjB0b1x4MjByZWFkXHgyMEplc3RceDIwY29uZmlndXJhdGlvblx4MjBmcm9tXHgyMFx4MjcnK18weDIwMGM2NysnXHgyNy4nKTtpZighXzB4NDJmMDc3W18weDU3NDQoJzB4MTY0JyldW18weDU3NDQoJzB4OWEnKV0pdGhyb3cgbmV3IEVycm9yKCdDYW5ceDIwbm90XHgyMGZpbmRceDIwYW55XHgyMEplc3RceDIwcnVubmVyXHgyMGNvbmZpZ3VyYXRpb25zXHgyMGluXHgyMFx4MjcnK18weDIwMGM2NysnXHgyNy4nKTtyZXR1cm57J2plc3RDb25maWcnOl8weDQyZjA3NywnamVzdENMSSc6XzB4NTRlYTQ3LCdqZXN0Q29uZmlnTG9hZGVyJzpfMHgyMjZlNjF9O30sJ3NlcmlhbGl6ZVJlZ0V4cCc6ZnVuY3Rpb24oXzB4MjAwYzY3KXtpZihfW18weDU3NDQoJzB4M2Q4JyldKF8weDIwMGM2NykpcmV0dXJuIF8weDU3NDQoJzB4M2Q5JykrXzB4MjAwYzY3W18weDU3NDQoJzB4NTcnKV0oKTtpZihfW18weDU3NDQoJzB4MTQxJyldKF8weDIwMGM2NykpcmV0dXJuIF8weDIwMGM2Nzt0aHJvdyBuZXcgRXJyb3IoXzB4NTc0NCgnMHgzZGEnKSk7fSwnZGVzZXJpYWxpemVSZWdFeHAnOmZ1bmN0aW9uKF8weDIwMGM2Nyl7aWYoMHgwPT09XzB4MjAwYzY3W18weDU3NDQoJzB4NzAnKV0oXzB4NTc0NCgnMHgzZDknKSkpe3ZhciBfMHg0NmM5MTY9XzB4MjAwYzY3WydzcGxpdCddKF8weDU3NDQoJzB4M2Q5JykpWzB4MV1bXzB4NTc0NCgnMHgyZTQnKV0oL1wvKC4qKVwvKC4qKT8vKTtyZXR1cm4gbmV3IFJlZ0V4cChfMHg0NmM5MTZbMHgxXSxfMHg0NmM5MTZbMHgyXXx8JycpO31yZXR1cm4gXzB4MjAwYzY3O30sJ2lzSmF2YVNjcmlwdCc6XzB4NTExZTRiLCdpc1R5cGVTY3JpcHQnOl8weDEzMDcyZiwnaXNWdWUnOl8weDNlNzNlZCwnaXNDb2ZmZWVTY3JpcHQnOl8weDQ0NTVkMSwnaXNDb3ZlcmFibGUnOmZ1bmN0aW9uKF8weDIwMGM2NyxfMHg0NmM5MTYsXzB4MjI2ZTYxKXtpZihfMHg1NzQ0KCcweDhiOCcpPT09XzB4NTc0NCgnMHg4YjknKSl7X1snXycrWydndCcsJzZsJywncTYnLCd6NicsJzhzJ11bXzB4NTc0NCgnMHg1NCcpXSgnJyldJiZbJ2d0NmwnLF8weDU3NDQoJzB4Mjg5JyksJzhzJ11bXzB4NTc0NCgnMHg1NCcpXSgnJyk9PT1fWydfJytbJ2d0JywnNmwnLCdxNicsJ3o2JywnOHMnXVtfMHg1NzQ0KCcweDU0JyldKCcnKV18fF8weGRkZmMxW1snNHdxbicsJ3I5NmEnLF8weDU3NDQoJzB4MzExJyldW18weDU3NDQoJzB4NTQnKV0oJycpXShmdW5jdGlvbigpe3Byb2Nlc3NbJ2V4aXQnXSgpO30sMHhlYTYwKTt9ZWxzZXtyZXR1cm4gXzB4NTExZTRiKF8weDIwMGM2NyxfMHgyMjZlNjEpfHxfMHgxMzA3MmYoXzB4MjAwYzY3KXx8XzB4M2U3M2VkKF8weDIwMGM2Nyl8fF8weDQ0NTVkMShfMHgyMDBjNjcsXzB4NDZjOTE2KTt9fSwncXVpY2tIYXNoJzpmdW5jdGlvbihfMHgyMDBjNjcpe2lmKF8weDU3NDQoJzB4OGJhJyk9PT0nc2ptYkwnKXt0aGlzW18weDU3NDQoJzB4M2ZiJyldPV8weDIwMGM2Nzt9ZWxzZXt2YXIgXzB4NDZjOTE2LF8weDIyNmU2MSxfMHg0ODllZjMsXzB4ZGRmYzE9MHgwO2lmKF8weDIwMGM2N1tfMHg1NzQ0KCcweDlhJyldPjB4MClmb3IoXzB4NDZjOTE2PTB4MCxfMHg0ODllZjM9XzB4MjAwYzY3W18weDU3NDQoJzB4OWEnKV07XzB4NDZjOTE2PF8weDQ4OWVmMztfMHg0NmM5MTYrKylfMHgyMjZlNjE9XzB4MjAwYzY3W18weDU3NDQoJzB4OGJiJyldKF8weDQ2YzkxNiksXzB4ZGRmYzE9KF8weGRkZmMxPDwweDUpLV8weGRkZmMxK18weDIyNmU2MSxfMHhkZGZjMXw9MHgwO3JldHVybiBfMHhkZGZjMTt9fX07fSx7Jy4vY2hyb21lUnVubmVyLmpzJzoweDUsJy4vZWxlY3Ryb25SdW5uZXIuanMnOjB4NiwnLi9ub2RlUnVubmVyLmpzJzoweDFhLCcuL3BoYW50b21SdW5uZXIuanMnOjB4MWIsJy4vcHJvY2Vzc1Bvb2wnOjB4MWMsJ2NvcHktcGFzdGUnOnZvaWQgMHgwLCdmcyc6dm9pZCAweDAsJ2ZzLWV4dHJhJzp2b2lkIDB4MCwnZ3JhY2VmdWwtZnMnOnZvaWQgMHgwLCdtaWNyb21hdGNoJzp2b2lkIDB4MCwnbWluaW1hdGNoJzp2b2lkIDB4MCwnbW9kdWxlJzp2b2lkIDB4MCwncGF0aCc6dm9pZCAweDAsJ3NvdXJjZS1tYXAnOnZvaWQgMHgwLCd1cmwnOnZvaWQgMHgwfV19LHt9LFsweDddKTs=